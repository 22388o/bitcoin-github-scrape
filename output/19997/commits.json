[
  {
    "sha": "1d94d90a3b6d517e3b651d190d809590cfb68d07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDk0ZDkwYTNiNmQ1MTdlM2I2NTFkMTkwZDgwOTU5MGNmYjY4ZDA3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T16:51:36Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T19:43:31Z"
      },
      "message": "--- [TAPROOT] Refactors ---",
      "tree": {
        "sha": "ba3a35e67f87e45662e8d8cfce51b9969e0a6ba6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba3a35e67f87e45662e8d8cfce51b9969e0a6ba6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d94d90a3b6d517e3b651d190d809590cfb68d07",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94d90a3b6d517e3b651d190d809590cfb68d07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d94d90a3b6d517e3b651d190d809590cfb68d07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94d90a3b6d517e3b651d190d809590cfb68d07/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba4b3fbcf21317a9410f3be913e4437d58968091",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4b3fbcf21317a9410f3be913e4437d58968091",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba4b3fbcf21317a9410f3be913e4437d58968091"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "0daa3708e25b3573ee22441d55930374aa317fce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGFhMzcwOGUyNWIzNTczZWUyMjQ0MWQ1NTkzMDM3NGFhMzE3ZmNl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:23Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T19:45:12Z"
      },
      "message": "scripted-diff: put ECDSA in name of signature functions\n\nIn preparation for adding Schnorr versions of `CheckSig`, `VerifySignature`, and\n`ComputeEntry`, give them an ECDSA specific name.\n\n-BEGIN VERIFY SCRIPT-\nsed -i 's/CheckSig(/CheckECDSASignature(/g' $(git grep -l CheckSig ./src)\nsed -i 's/VerifySignature(/VerifyECDSASignature(/g' $(git grep -l VerifySignature ./src)\nsed -i 's/ComputeEntry(/ComputeEntryECDSA(/g' $(git grep -l ComputeEntry ./src)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "098dae562022342cdea9a997070ccf65bb594c07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/098dae562022342cdea9a997070ccf65bb594c07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0daa3708e25b3573ee22441d55930374aa317fce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0daa3708e25b3573ee22441d55930374aa317fce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0daa3708e25b3573ee22441d55930374aa317fce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0daa3708e25b3573ee22441d55930374aa317fce/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d94d90a3b6d517e3b651d190d809590cfb68d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d94d90a3b6d517e3b651d190d809590cfb68d07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d94d90a3b6d517e3b651d190d809590cfb68d07"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "cd1049f66fcd6398b1401e949d1a8311b9eac30f",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -169,7 +169,7 @@ class CPubKey\n     /*\n      * Check syntactic correctness.\n      *\n-     * Note that this is consensus critical as CheckSig() calls it!\n+     * Note that this is consensus critical as CheckECDSASignature() calls it!\n      */\n     bool IsValid() const\n     {"
      },
      {
        "sha": "737875528435106ecaf14200c7ef112731f84bd3",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -363,7 +363,7 @@ static bool EvalChecksig(const valtype& vchSig, const valtype& vchPubKey, CScrip\n         //serror is set\n         return false;\n     }\n-    fSuccess = checker.CheckSig(vchSig, vchPubKey, scriptCode, sigversion);\n+    fSuccess = checker.CheckECDSASignature(vchSig, vchPubKey, scriptCode, sigversion);\n \n     if (!fSuccess && (flags & SCRIPT_VERIFY_NULLFAIL) && vchSig.size())\n         return set_error(serror, SCRIPT_ERR_SIG_NULLFAIL);\n@@ -1089,7 +1089,7 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                         }\n \n                         // Check signature\n-                        bool fOk = checker.CheckSig(vchSig, vchPubKey, scriptCode, sigversion);\n+                        bool fOk = checker.CheckECDSASignature(vchSig, vchPubKey, scriptCode, sigversion);\n \n                         if (fOk) {\n                             isig++;\n@@ -1389,13 +1389,13 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n }\n \n template <class T>\n-bool GenericTransactionSignatureChecker<T>::VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const\n+bool GenericTransactionSignatureChecker<T>::VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const\n {\n     return pubkey.Verify(sighash, vchSig);\n }\n \n template <class T>\n-bool GenericTransactionSignatureChecker<T>::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n {\n     CPubKey pubkey(vchPubKey);\n     if (!pubkey.IsValid())\n@@ -1410,7 +1410,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSig(const std::vector<unsigned\n \n     uint256 sighash = SignatureHash(scriptCode, *txTo, nIn, nHashType, amount, sigversion, this->txdata);\n \n-    if (!VerifySignature(vchSig, pubkey, sighash))\n+    if (!VerifyECDSASignature(vchSig, pubkey, sighash))\n         return false;\n \n     return true;"
      },
      {
        "sha": "0ff4c4bc9561ff722204cc1c1c4c50d35355c1da",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -148,7 +148,7 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n class BaseSignatureChecker\n {\n public:\n-    virtual bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+    virtual bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n     {\n         return false;\n     }\n@@ -176,12 +176,12 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n     const PrecomputedTransactionData* txdata;\n \n protected:\n-    virtual bool VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const;\n+    virtual bool VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const;\n \n public:\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(nullptr) {}\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn, const PrecomputedTransactionData& txdataIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(&txdataIn) {}\n-    bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override;\n+    bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override;\n     bool CheckLockTime(const CScriptNum& nLockTime) const override;\n     bool CheckSequence(const CScriptNum& nSequence) const override;\n };"
      },
      {
        "sha": "b9ba006e47354e59f46351586dc797dad41c0fe9",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -40,7 +40,7 @@ class CSignatureCache\n     }\n \n     void\n-    ComputeEntry(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey)\n+    ComputeEntryECDSA(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey)\n     {\n         CSHA256 hasher = m_salted_hasher;\n         hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(&vchSig[0], vchSig.size()).Finalize(entry.begin());\n@@ -85,13 +85,13 @@ void InitSignatureCache()\n             (nElems*sizeof(uint256)) >>20, (nMaxCacheSize*2)>>20, nElems);\n }\n \n-bool CachingTransactionSignatureChecker::VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const\n+bool CachingTransactionSignatureChecker::VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const\n {\n     uint256 entry;\n-    signatureCache.ComputeEntry(entry, sighash, vchSig, pubkey);\n+    signatureCache.ComputeEntryECDSA(entry, sighash, vchSig, pubkey);\n     if (signatureCache.Get(entry, !store))\n         return true;\n-    if (!TransactionSignatureChecker::VerifySignature(vchSig, pubkey, sighash))\n+    if (!TransactionSignatureChecker::VerifyECDSASignature(vchSig, pubkey, sighash))\n         return false;\n     if (store)\n         signatureCache.Set(entry);"
      },
      {
        "sha": "49c6b192e998f24879caaf31b7280614453a520d",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -48,7 +48,7 @@ class CachingTransactionSignatureChecker : public TransactionSignatureChecker\n public:\n     CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn, bool storeIn, PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amountIn, txdataIn), store(storeIn) {}\n \n-    bool VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const override;\n+    bool VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const override;\n };\n \n void InitSignatureCache();"
      },
      {
        "sha": "ace798eec1a942ccb5514c393bdde601b12a024b",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -260,9 +260,9 @@ class SignatureExtractorChecker final : public BaseSignatureChecker\n \n public:\n     SignatureExtractorChecker(SignatureData& sigdata, BaseSignatureChecker& checker) : sigdata(sigdata), checker(checker) {}\n-    bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override\n+    bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override\n     {\n-        if (checker.CheckSig(scriptSig, vchPubKey, scriptCode, sigversion)) {\n+        if (checker.CheckECDSASignature(scriptSig, vchPubKey, scriptCode, sigversion)) {\n             CPubKey pubkey(vchPubKey);\n             sigdata.signatures.emplace(pubkey.GetID(), SigPair(pubkey, scriptSig));\n             return true;\n@@ -339,7 +339,7 @@ SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nI\n             for (unsigned int i = last_success_key; i < num_pubkeys; ++i) {\n                 const valtype& pubkey = solutions[i+1];\n                 // We either have a signature for this pubkey, or we have found a signature and it is valid\n-                if (data.signatures.count(CPubKey(pubkey).GetID()) || extractor_checker.CheckSig(sig, pubkey, next_script, sigversion)) {\n+                if (data.signatures.count(CPubKey(pubkey).GetID()) || extractor_checker.CheckECDSASignature(sig, pubkey, next_script, sigversion)) {\n                     last_success_key = i + 1;\n                     break;\n                 }\n@@ -400,7 +400,7 @@ class DummySignatureChecker final : public BaseSignatureChecker\n {\n public:\n     DummySignatureChecker() {}\n-    bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override { return true; }\n+    bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override { return true; }\n };\n const DummySignatureChecker DUMMY_CHECKER;\n "
      },
      {
        "sha": "0de1617d57fefafb23cea1fadd701e56e7e58965",
        "filename": "src/test/fuzz/script_sigcache.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/test/fuzz/script_sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/test/fuzz/script_sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_sigcache.cpp?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -39,7 +39,7 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     if (pub_key) {\n         const std::vector<uint8_t> random_bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n         if (!random_bytes.empty()) {\n-            (void)caching_transaction_signature_checker.VerifySignature(random_bytes, *pub_key, ConsumeUInt256(fuzzed_data_provider));\n+            (void)caching_transaction_signature_checker.VerifyECDSASignature(random_bytes, *pub_key, ConsumeUInt256(fuzzed_data_provider));\n         }\n     }\n }"
      },
      {
        "sha": "fb5447609580b50a7d4b6dff2d15c79a854092a4",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0daa3708e25b3573ee22441d55930374aa317fce/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0daa3708e25b3573ee22441d55930374aa317fce/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=0daa3708e25b3573ee22441d55930374aa317fce",
        "patch": "@@ -28,7 +28,7 @@ class FuzzedSignatureChecker : public BaseSignatureChecker\n     {\n     }\n \n-    bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override\n+    bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override\n     {\n         return m_fuzzed_data_provider.ConsumeBool();\n     }"
      }
    ]
  },
  {
    "sha": "135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzVmMTJhZDM4ODUwOWFiNTRmNmZjYzJhZDYxZTY2ZDJjMWE2OGYz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:37Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T19:45:18Z"
      },
      "message": "refactor: rename scriptPubKey in VerifyWitnessProgram to exec_script\n\nThe old name is confusing, as it doesn't store a scriptPubKey, but the\nactually executed script.",
      "tree": {
        "sha": "c1e6bc397623948bd547e5b9f09714d222c9faaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1e6bc397623948bd547e5b9f09714d222c9faaa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0daa3708e25b3573ee22441d55930374aa317fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0daa3708e25b3573ee22441d55930374aa317fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0daa3708e25b3573ee22441d55930374aa317fce"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "04e5cde92afa0fc447c87d8916e97df93b0946b7",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
        "patch": "@@ -1524,7 +1524,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n \n static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n {\n-    CScript scriptPubKey;\n+    CScript exec_script; //!< Actually executed script (last stack item in P2WSH; implied P2PKH script in P2WPKH)\n     Span<const valtype> stack{witness.stack};\n \n     if (witversion == 0) {\n@@ -1534,20 +1534,20 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n             const valtype& script_bytes = SpanPopBack(stack);\n-            scriptPubKey = CScript(script_bytes.begin(), script_bytes.end());\n-            uint256 hashScriptPubKey;\n-            CSHA256().Write(&scriptPubKey[0], scriptPubKey.size()).Finalize(hashScriptPubKey.begin());\n-            if (memcmp(hashScriptPubKey.begin(), program.data(), 32)) {\n+            exec_script = CScript(script_bytes.begin(), script_bytes.end());\n+            uint256 hash_exec_script;\n+            CSHA256().Write(&exec_script[0], exec_script.size()).Finalize(hash_exec_script.begin());\n+            if (memcmp(hash_exec_script.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n-            return ExecuteWitnessScript(stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n+            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n             if (stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n-            scriptPubKey << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            return ExecuteWitnessScript(stack, scriptPubKey, flags, SigVersion::WITNESS_V0, checker, serror);\n+            exec_script << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n+            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }"
      }
    ]
  },
  {
    "sha": "f4d16cf64428dd35eb6274486696375a594c20ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGQxNmNmNjQ0MjhkZDM1ZWI2Mjc0NDg2Njk2Mzc1YTU5NGMyMGVl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:00Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:26Z"
      },
      "message": "refactor: keep spent outputs in PrecomputedTransactionData\n\nA BIP-341 signature message may commit to the scriptPubKeys and amounts\nof all spent outputs (including other ones than the input being signed\nfor spends), so keep them available to signature hashing code.",
      "tree": {
        "sha": "a60aeb4c41de45ffd37710ea37e7da0870f7635d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a60aeb4c41de45ffd37710ea37e7da0870f7635d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4d16cf64428dd35eb6274486696375a594c20ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d16cf64428dd35eb6274486696375a594c20ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4d16cf64428dd35eb6274486696375a594c20ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d16cf64428dd35eb6274486696375a594c20ee/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/135f12ad388509ab54f6fcc2ad61e66d2c1a68f3"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 21,
      "deletions": 11
    },
    "files": [
      {
        "sha": "164150bbbf9bf4b50158a605c722ec889457e438",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d16cf64428dd35eb6274486696375a594c20ee/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d16cf64428dd35eb6274486696375a594c20ee/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=f4d16cf64428dd35eb6274486696375a594c20ee",
        "patch": "@@ -1294,10 +1294,12 @@ uint256 GetOutputsSHA256(const T& txTo)\n } // namespace\n \n template <class T>\n-void PrecomputedTransactionData::Init(const T& txTo)\n+void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_outputs)\n {\n     assert(!m_ready);\n \n+    m_spent_outputs = std::move(spent_outputs);\n+\n     // Cache is calculated only for transactions with witness\n     if (txTo.HasWitness()) {\n         hashPrevouts = SHA256Uint256(GetPrevoutsSHA256(txTo));\n@@ -1311,12 +1313,12 @@ void PrecomputedTransactionData::Init(const T& txTo)\n template <class T>\n PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n {\n-    Init(txTo);\n+    Init(txTo, {});\n }\n \n // explicit instantiation\n-template void PrecomputedTransactionData::Init(const CTransaction& txTo);\n-template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo);\n+template void PrecomputedTransactionData::Init(const CTransaction& txTo, std::vector<CTxOut> spent_outputs);\n+template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo, std::vector<CTxOut> spent_outputs);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n "
      },
      {
        "sha": "7f2e69391f7045df008bd31e8ea6f64a0566202b",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d16cf64428dd35eb6274486696375a594c20ee/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d16cf64428dd35eb6274486696375a594c20ee/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=f4d16cf64428dd35eb6274486696375a594c20ee",
        "patch": "@@ -15,6 +15,7 @@\n class CPubKey;\n class CScript;\n class CTransaction;\n+class CTxOut;\n class uint256;\n \n /** Signature hash types/flags */\n@@ -122,11 +123,12 @@ struct PrecomputedTransactionData\n {\n     uint256 hashPrevouts, hashSequence, hashOutputs;\n     bool m_ready = false;\n+    std::vector<CTxOut> m_spent_outputs;\n \n     PrecomputedTransactionData() = default;\n \n     template <class T>\n-    void Init(const T& tx);\n+    void Init(const T& tx, std::vector<CTxOut> spent_outputs);\n \n     template <class T>\n     explicit PrecomputedTransactionData(const T& tx);"
      },
      {
        "sha": "51c98c5656ad5389f0a5f31c6382a7ca97b726ec",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4d16cf64428dd35eb6274486696375a594c20ee/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4d16cf64428dd35eb6274486696375a594c20ee/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=f4d16cf64428dd35eb6274486696375a594c20ee",
        "patch": "@@ -1530,13 +1530,19 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n     }\n \n     if (!txdata.m_ready) {\n-        txdata.Init(tx);\n+        std::vector<CTxOut> spent_outputs;\n+        spent_outputs.reserve(tx.vin.size());\n+\n+        for (const auto& txin : tx.vin) {\n+            const COutPoint &prevout = txin.prevout;\n+            const Coin& coin = inputs.AccessCoin(prevout);\n+            assert(!coin.IsSpent());\n+            spent_outputs.emplace_back(coin.out);\n+        }\n+        txdata.Init(tx, std::move(spent_outputs));\n     }\n \n     for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        const COutPoint &prevout = tx.vin[i].prevout;\n-        const Coin& coin = inputs.AccessCoin(prevout);\n-        assert(!coin.IsSpent());\n \n         // We very carefully only pass in things to CScriptCheck which\n         // are clearly committed to by tx' witness hash. This provides\n@@ -1545,7 +1551,7 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n         // spent being checked as a part of CScriptCheck.\n \n         // Verify signature\n-        CScriptCheck check(coin.out, tx, i, flags, cacheSigStore, &txdata);\n+        CScriptCheck check(txdata.m_spent_outputs[i], tx, i, flags, cacheSigStore, &txdata);\n         if (pvChecks) {\n             pvChecks->push_back(CScriptCheck());\n             check.swap(pvChecks->back());\n@@ -1559,7 +1565,7 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n                 // splitting the network between upgraded and\n                 // non-upgraded nodes by banning CONSENSUS-failing\n                 // data providers.\n-                CScriptCheck check2(coin.out, tx, i,\n+                CScriptCheck check2(txdata.m_spent_outputs[i], tx, i,\n                         flags & ~STANDARD_NOT_MANDATORY_VERIFY_FLAGS, cacheSigStore, &txdata);\n                 if (check2())\n                     return state.Invalid(TxValidationResult::TX_NOT_STANDARD, strprintf(\"non-mandatory-script-verify-flag (%s)\", ScriptErrorString(check.GetScriptError())));"
      }
    ]
  },
  {
    "sha": "d6ea44640e628dee3227369f350ee77f7e08b73f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmVhNDQ2NDBlNjI4ZGVlMzIyNzM2OWYzNTBlZTc3ZjdlMDhiNzNm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T16:53:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "--- [TAPROOT] BIP340/341/342 consensus rules ---",
      "tree": {
        "sha": "a60aeb4c41de45ffd37710ea37e7da0870f7635d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a60aeb4c41de45ffd37710ea37e7da0870f7635d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6ea44640e628dee3227369f350ee77f7e08b73f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ea44640e628dee3227369f350ee77f7e08b73f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6ea44640e628dee3227369f350ee77f7e08b73f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ea44640e628dee3227369f350ee77f7e08b73f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4d16cf64428dd35eb6274486696375a594c20ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4d16cf64428dd35eb6274486696375a594c20ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4d16cf64428dd35eb6274486696375a594c20ee"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "60ce12334fa195e62f641f98c804cedb907eddaa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MGNlMTIzMzRmYTE5NWU2MmY2NDFmOThjODA0Y2VkYjkwN2VkZGFh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:32:50Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Add TaggedHash function (BIP 340)\n\nThis adds the TaggedHash function as defined by BIP340 to the hash module, which\nis used in BIP340 and BIP341 to produce domain-separated hashes.",
      "tree": {
        "sha": "c1cb0c3a16e7413427474629fd3baca6b3136158",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1cb0c3a16e7413427474629fd3baca6b3136158"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/60ce12334fa195e62f641f98c804cedb907eddaa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ce12334fa195e62f641f98c804cedb907eddaa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/60ce12334fa195e62f641f98c804cedb907eddaa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ce12334fa195e62f641f98c804cedb907eddaa/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6ea44640e628dee3227369f350ee77f7e08b73f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6ea44640e628dee3227369f350ee77f7e08b73f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6ea44640e628dee3227369f350ee77f7e08b73f"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 19,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3657b386395fbecf4166b95208f16e3f2fa0a655",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60ce12334fa195e62f641f98c804cedb907eddaa/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60ce12334fa195e62f641f98c804cedb907eddaa/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=60ce12334fa195e62f641f98c804cedb907eddaa",
        "patch": "@@ -6,6 +6,7 @@\n #include <crypto/common.h>\n #include <crypto/hmac_sha512.h>\n \n+#include <string>\n \n inline uint32_t ROTL32(uint32_t x, int8_t r)\n {\n@@ -84,3 +85,12 @@ uint256 SHA256Uint256(const uint256& input)\n     CSHA256().Write(input.begin(), 32).Finalize(result.begin());\n     return result;\n }\n+\n+CHashWriter TaggedHash(const std::string& tag)\n+{\n+    CHashWriter writer(SER_GETHASH, 0);\n+    uint256 taghash;\n+    CSHA256().Write((const unsigned char*)tag.data(), tag.size()).Finalize(taghash.begin());\n+    writer << taghash << taghash;\n+    return writer;\n+}"
      },
      {
        "sha": "6d876076ee86f0cffb8aef766fea5753519d6eb9",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/60ce12334fa195e62f641f98c804cedb907eddaa/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/60ce12334fa195e62f641f98c804cedb907eddaa/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=60ce12334fa195e62f641f98c804cedb907eddaa",
        "patch": "@@ -15,6 +15,7 @@\n #include <uint256.h>\n #include <version.h>\n \n+#include <string>\n #include <vector>\n \n typedef uint256 ChainCode;\n@@ -202,4 +203,12 @@ unsigned int MurmurHash3(unsigned int nHashSeed, Span<const unsigned char> vData\n \n void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64]);\n \n+/** Return a CHashWriter primed for tagged hashes (as specified in BIP 340).\n+ *\n+ * The returned object will have SHA256(tag) written to it twice (= 64 bytes).\n+ * A tagged hash can be computed by feeding the message into this object, and\n+ * then calling CHashWriter::GetSHA256().\n+ */\n+CHashWriter TaggedHash(const std::string& tag);\n+\n #endif // BITCOIN_HASH_H"
      }
    ]
  },
  {
    "sha": "34da2198264cf90a7ae7f50a912a599f6fd66291",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGRhMjE5ODI2NGNmOTBhN2FlN2Y1MGE5MTJhNTk5ZjZmZDY2Mjkx",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2020-09-11T21:33:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Implement Taproot signature hashing (BIP 341)\n\nThis implements the new sighashing scheme from BIP341, with all relevant\nwhole-transaction values precomputed once and cached.\n\nIncludes changes to PrecomputedTransactionData by Pieter Wuille.",
      "tree": {
        "sha": "f7d6921e1c91755d98fec47172bb47ac99f76070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7d6921e1c91755d98fec47172bb47ac99f76070"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34da2198264cf90a7ae7f50a912a599f6fd66291",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34da2198264cf90a7ae7f50a912a599f6fd66291",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34da2198264cf90a7ae7f50a912a599f6fd66291",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34da2198264cf90a7ae7f50a912a599f6fd66291/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "60ce12334fa195e62f641f98c804cedb907eddaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ce12334fa195e62f641f98c804cedb907eddaa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60ce12334fa195e62f641f98c804cedb907eddaa"
      }
    ],
    "stats": {
      "total": 172,
      "additions": 160,
      "deletions": 12
    },
    "files": [
      {
        "sha": "fa1476ad981e5de43c239ae022be840f6061c293",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 130,
        "deletions": 8,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=34da2198264cf90a7ae7f50a912a599f6fd66291",
        "patch": "@@ -1291,23 +1291,76 @@ uint256 GetOutputsSHA256(const T& txTo)\n     return ss.GetSHA256();\n }\n \n+/** Compute the (single) SHA256 of the concatenation of all amounts spent by a tx. */\n+uint256 GetSpentAmountsSHA256(const std::vector<CTxOut>& outputs_spent)\n+{\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (const auto& txout : outputs_spent) {\n+        ss << txout.nValue;\n+    }\n+    return ss.GetSHA256();\n+}\n+\n+/** Compute the (single) SHA256 of the concatenation of all scriptPubKeys spent by a tx. */\n+uint256 GetSpentScriptsSHA256(const std::vector<CTxOut>& outputs_spent)\n+{\n+    CHashWriter ss(SER_GETHASH, 0);\n+    for (const auto& txout : outputs_spent) {\n+        ss << txout.scriptPubKey;\n+    }\n+    return ss.GetSHA256();\n+}\n+\n+\n } // namespace\n \n template <class T>\n void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_outputs)\n {\n-    assert(!m_ready);\n+    assert(!m_spent_outputs_ready);\n \n     m_spent_outputs = std::move(spent_outputs);\n+    if (!m_spent_outputs.empty()) {\n+        assert(m_spent_outputs.size() == txTo.vin.size());\n+        m_spent_outputs_ready = true;\n+    }\n \n-    // Cache is calculated only for transactions with witness\n-    if (txTo.HasWitness()) {\n-        hashPrevouts = SHA256Uint256(GetPrevoutsSHA256(txTo));\n-        hashSequence = SHA256Uint256(GetSequencesSHA256(txTo));\n-        hashOutputs = SHA256Uint256(GetOutputsSHA256(txTo));\n+    // Determine which precomputation-impacting features this transaction uses.\n+    bool uses_bip143_segwit = false;\n+    bool uses_bip341_taproot = false;\n+    for (size_t inpos = 0; inpos < txTo.vin.size(); ++inpos) {\n+        if (!txTo.vin[inpos].scriptWitness.IsNull()) {\n+            if (m_spent_outputs_ready && m_spent_outputs[inpos].scriptPubKey.size() == 2 + WITNESS_V1_TAPROOT_SIZE &&\n+                m_spent_outputs[inpos].scriptPubKey[0] == OP_1) {\n+                // Treat every native witness v1 spend as a Taproot spend. This only works if spent_outputs was\n+                // provided as well, but if it wasn't, actual validation will fail anyway.\n+                uses_bip341_taproot = true;\n+            } else {\n+                // Treat every spend that's not known to native witness v1 as a Witness v0 spend. This branch may\n+                // also be taken for unknown witness versions, but it is harmless, and being precise would require\n+                // P2SH evaluation to find the redeemScript.\n+                uses_bip143_segwit = true;\n+            }\n+        }\n     }\n \n-    m_ready = true;\n+    if (uses_bip143_segwit || uses_bip341_taproot) {\n+        // Computations shared between both sighash schemes.\n+        m_prevouts_single_hash = GetPrevoutsSHA256(txTo);\n+        m_sequences_single_hash = GetSequencesSHA256(txTo);\n+        m_outputs_single_hash = GetOutputsSHA256(txTo);\n+    }\n+    if (uses_bip143_segwit) {\n+        hashPrevouts = SHA256Uint256(m_prevouts_single_hash);\n+        hashSequence = SHA256Uint256(m_sequences_single_hash);\n+        hashOutputs = SHA256Uint256(m_outputs_single_hash);\n+        m_bip143_segwit_ready = true;\n+    }\n+    if (uses_bip341_taproot) {\n+        m_spent_amounts_single_hash = GetSpentAmountsSHA256(m_spent_outputs);\n+        m_spent_scripts_single_hash = GetSpentScriptsSHA256(m_spent_outputs);\n+        m_bip341_taproot_ready = true;\n+    }\n }\n \n template <class T>\n@@ -1322,6 +1375,75 @@ template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo,\n template PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n \n+static const CHashWriter HASHER_TAPSIGHASH = TaggedHash(\"TapSighash\");\n+\n+template<typename T>\n+bool SignatureHashSchnorr(uint256& hash_out, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData* cache)\n+{\n+    uint8_t ext_flag;\n+    switch (sigversion) {\n+    case SigVersion::TAPROOT:\n+        ext_flag = 0;\n+        break;\n+    default:\n+        assert(false);\n+    }\n+    assert(in_pos < tx_to.vin.size());\n+    assert(cache != nullptr && cache->m_bip341_taproot_ready && cache->m_spent_outputs_ready);\n+\n+    CHashWriter ss = HASHER_TAPSIGHASH;\n+\n+    // Epoch\n+    static constexpr uint8_t EPOCH = 0;\n+    ss << EPOCH;\n+\n+    // Hash type\n+    const uint8_t output_type = (hash_type == SIGHASH_DEFAULT) ? SIGHASH_ALL : (hash_type & SIGHASH_OUTPUT_MASK); // Default (no sighash byte) is equivalent to SIGHASH_ALL\n+    const uint8_t input_type = hash_type & SIGHASH_INPUT_MASK;\n+    if (!(hash_type <= 0x03 || (hash_type >= 0x81 && hash_type <= 0x83))) return false;\n+    ss << hash_type;\n+\n+    // Transaction level data\n+    ss << tx_to.nVersion;\n+    ss << tx_to.nLockTime;\n+    if (input_type != SIGHASH_ANYONECANPAY) {\n+        ss << cache->m_prevouts_single_hash;\n+        ss << cache->m_spent_amounts_single_hash;\n+        ss << cache->m_spent_scripts_single_hash;\n+        ss << cache->m_sequences_single_hash;\n+    }\n+    if (output_type == SIGHASH_ALL) {\n+        ss << cache->m_outputs_single_hash;\n+    }\n+\n+    // Data about the input/prevout being spent\n+    const auto* witstack = &tx_to.vin[in_pos].scriptWitness.stack;\n+    bool have_annex = witstack->size() > 1 && witstack->back().size() > 0 && witstack->back()[0] == ANNEX_TAG;\n+    const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\n+    ss << spend_type;\n+    if (input_type == SIGHASH_ANYONECANPAY) {\n+        ss << tx_to.vin[in_pos].prevout;\n+        ss << cache->m_spent_outputs[in_pos];\n+        ss << tx_to.vin[in_pos].nSequence;\n+    } else {\n+        ss << in_pos;\n+    }\n+    if (have_annex) {\n+        ss << (CHashWriter(SER_GETHASH, 0) << witstack->back()).GetSHA256();\n+    }\n+\n+    // Data about the output(s)\n+    if (output_type == SIGHASH_SINGLE) {\n+        if (in_pos >= tx_to.vout.size()) return false;\n+        CHashWriter sha_single_output(SER_GETHASH, 0);\n+        sha_single_output << tx_to.vout[in_pos];\n+        ss << sha_single_output.GetSHA256();\n+    }\n+\n+    hash_out = ss.GetSHA256();\n+    return true;\n+}\n+\n template <class T>\n uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn, int nHashType, const CAmount& amount, SigVersion sigversion, const PrecomputedTransactionData* cache)\n {\n@@ -1331,7 +1453,7 @@ uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn\n         uint256 hashPrevouts;\n         uint256 hashSequence;\n         uint256 hashOutputs;\n-        const bool cacheready = cache && cache->m_ready;\n+        const bool cacheready = cache && cache->m_bip143_segwit_ready;\n \n         if (!(nHashType & SIGHASH_ANYONECANPAY)) {\n             hashPrevouts = cacheready ? cache->hashPrevouts : SHA256Uint256(GetPrevoutsSHA256(txTo));"
      },
      {
        "sha": "65c136fa49ca4395d3b7b820ffd31f19716d1b4f",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 24,
        "deletions": 3,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=34da2198264cf90a7ae7f50a912a599f6fd66291",
        "patch": "@@ -25,6 +25,10 @@ enum\n     SIGHASH_NONE = 2,\n     SIGHASH_SINGLE = 3,\n     SIGHASH_ANYONECANPAY = 0x80,\n+\n+    SIGHASH_DEFAULT = 0, //!< Taproot only; implied when sighash byte is missing, and equivalent to SIGHASH_ALL\n+    SIGHASH_OUTPUT_MASK = 3,\n+    SIGHASH_INPUT_MASK = 0x80,\n };\n \n /** Script verification flags.\n@@ -121,9 +125,24 @@ bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned i\n \n struct PrecomputedTransactionData\n {\n+    // BIP341 precomputed data.\n+    // These are single-SHA256, see https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-15.\n+    uint256 m_prevouts_single_hash;\n+    uint256 m_sequences_single_hash;\n+    uint256 m_outputs_single_hash;\n+    uint256 m_spent_amounts_single_hash;\n+    uint256 m_spent_scripts_single_hash;\n+    //! Whether the 5 fields above are initialized.\n+    bool m_bip341_taproot_ready = false;\n+\n+    // BIP143 precomputed data (double-SHA256).\n     uint256 hashPrevouts, hashSequence, hashOutputs;\n-    bool m_ready = false;\n+    //! Whether the 3 fields above are initialized.\n+    bool m_bip143_segwit_ready = false;\n+\n     std::vector<CTxOut> m_spent_outputs;\n+    //! Whether m_spent_outputs is initialized.\n+    bool m_spent_outputs_ready = false;\n \n     PrecomputedTransactionData() = default;\n \n@@ -136,13 +155,15 @@ struct PrecomputedTransactionData\n \n enum class SigVersion\n {\n-    BASE = 0,\n-    WITNESS_V0 = 1,\n+    BASE = 0,        //!< Bare scripts and BIP16 P2SH-wrapped redeemscripts\n+    WITNESS_V0 = 1,  //!< Witness v0 (P2WPKH and P2WSH); see BIP 141\n+    TAPROOT = 2,     //!< Witness v1 with 32-byte program, not BIP16 P2SH-wrapped, key path spending; see BIP 341\n };\n \n /** Signature hash sizes */\n static constexpr size_t WITNESS_V0_SCRIPTHASH_SIZE = 32;\n static constexpr size_t WITNESS_V0_KEYHASH_SIZE = 20;\n+static constexpr size_t WITNESS_V1_TAPROOT_SIZE = 32;\n \n template <class T>\n uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn, int nHashType, const CAmount& amount, SigVersion sigversion, const PrecomputedTransactionData* cache = nullptr);"
      },
      {
        "sha": "a86c1cf184b6dc41d7e229352bb44e87e5919cf8",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34da2198264cf90a7ae7f50a912a599f6fd66291/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=34da2198264cf90a7ae7f50a912a599f6fd66291",
        "patch": "@@ -44,6 +44,11 @@ static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20\n // SEQUENCE_FINAL).\n static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n \n+// Tag for input annex. If there are at least two witness elements for a transaction input,\n+// and the first byte of the last element is 0x50, this last element is called annex, and\n+// has meanings independent of the script\n+static const unsigned int ANNEX_TAG = 0x50;\n+\n template <typename T>\n std::vector<unsigned char> ToByteVector(const T& in)\n {"
      },
      {
        "sha": "e75e8a7f1e2b0c9cc7d9cad93d6fb39da9b70c7e",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34da2198264cf90a7ae7f50a912a599f6fd66291/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34da2198264cf90a7ae7f50a912a599f6fd66291/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=34da2198264cf90a7ae7f50a912a599f6fd66291",
        "patch": "@@ -1529,7 +1529,7 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n         return true;\n     }\n \n-    if (!txdata.m_ready) {\n+    if (!txdata.m_spent_outputs_ready) {\n         std::vector<CTxOut> spent_outputs;\n         spent_outputs.reserve(tx.vin.size());\n "
      }
    ]
  },
  {
    "sha": "52ddb42100adf937e89d6415f610365ac178d213",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MmRkYjQyMTAwYWRmOTM3ZTg5ZDY0MTVmNjEwMzY1YWMxNzhkMjEz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:30Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Support for Schnorr signatures and integration in SignatureCheckers (BIP 340)\n\nThis enables the schnorrsig module in libsecp256k1, adds the relevant types\nand functions to src/pubkey, as well as in higher-level `SignatureChecker`\nclasses. The (verification side of the) BIP340 test vectors is also added.",
      "tree": {
        "sha": "13f90b4d8ce9632be768524a7f42e42a95e2c251",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13f90b4d8ce9632be768524a7f42e42a95e2c251"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52ddb42100adf937e89d6415f610365ac178d213",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52ddb42100adf937e89d6415f610365ac178d213",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52ddb42100adf937e89d6415f610365ac178d213",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52ddb42100adf937e89d6415f610365ac178d213/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34da2198264cf90a7ae7f50a912a599f6fd66291",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34da2198264cf90a7ae7f50a912a599f6fd66291",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34da2198264cf90a7ae7f50a912a599f6fd66291"
      }
    ],
    "stats": {
      "total": 161,
      "additions": 148,
      "deletions": 13
    },
    "files": [
      {
        "sha": "c42918d6e17737ad8a473a5d597e4c162108e42f",
        "filename": "build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/build_msvc/libsecp256k1/libsecp256k1.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libsecp256k1/libsecp256k1.vcxproj?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -12,7 +12,7 @@\n   </ItemGroup>\n     <ItemDefinitionGroup>\n     <ClCompile>\n-      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n+      <PreprocessorDefinitions>ENABLE_MODULE_ECDH;ENABLE_MODULE_RECOVERY;ENABLE_MODULE_EXTRAKEYS;ENABLE_MODULE_SCHNORRSIG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\n        <AdditionalIncludeDirectories>..\\..\\src\\secp256k1;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>\n      </ClCompile>\n   </ItemDefinitionGroup>"
      },
      {
        "sha": "83e1ef16e4b06d1a1b626065045e433e462dac8a",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -1645,7 +1645,7 @@ if test x$need_bundled_univalue = xyes; then\n   AC_CONFIG_SUBDIRS([src/univalue])\n fi\n \n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery\"\n+ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --enable-benchmark=no --with-bignum=no --enable-module-recovery --enable-module-schnorrsig --enable-experimental\"\n AC_CONFIG_SUBDIRS([src/secp256k1])\n \n AC_OUTPUT"
      },
      {
        "sha": "a568fc5c1a1b21cd11f4cecba419fddeac9aefeb",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <secp256k1.h>\n #include <secp256k1_recovery.h>\n+#include <secp256k1_schnorrsig.h>\n \n namespace\n {\n@@ -166,6 +167,19 @@ int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_\n     return 1;\n }\n \n+XOnlyPubKey::XOnlyPubKey(Span<const unsigned char> in)\n+{\n+    assert(in.size() == 32);\n+    std::copy(in.begin(), in.end(), m_keydata.begin());\n+}\n+\n+bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const {\n+    assert(sigbytes.size() == 64);\n+    secp256k1_xonly_pubkey pubkey;\n+    if (!secp256k1_xonly_pubkey_parse(secp256k1_context_verify, &pubkey, m_keydata.data())) return false;\n+    return secp256k1_schnorrsig_verify(secp256k1_context_verify, sigbytes.data(), msg.begin(), &pubkey);\n+}\n+\n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n     if (!IsValid())\n         return false;"
      },
      {
        "sha": "b159a0ad920f6b9aaea016538182a8d2a7919a13",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -9,6 +9,7 @@\n \n #include <hash.h>\n #include <serialize.h>\n+#include <span.h>\n #include <uint256.h>\n \n #include <stdexcept>\n@@ -206,6 +207,24 @@ class CPubKey\n     bool Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const;\n };\n \n+class XOnlyPubKey {\n+private:\n+    uint256 m_keydata;\n+\n+public:\n+    /** Construct an x-only pubkey from exactly 32 bytes. */\n+    XOnlyPubKey(Span<const unsigned char> input);\n+\n+    /** Verify a 64-byte Schnorr signature.\n+     *\n+     * If the signature is not exactly 64 bytes, false is returned.\n+     */\n+    bool VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const;\n+\n+    const unsigned char& operator[](int pos) const { return *(m_keydata.begin() + pos); }\n+    size_t size() const { return m_keydata.size(); }\n+};\n+\n struct CExtPubKey {\n     unsigned char nDepth;\n     unsigned char vchFingerprint[4];"
      },
      {
        "sha": "69573730925caa7fc5f2e88488c607ffba055f9b",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -1518,6 +1518,12 @@ bool GenericTransactionSignatureChecker<T>::VerifyECDSASignature(const std::vect\n     return pubkey.Verify(sighash, vchSig);\n }\n \n+template <class T>\n+bool GenericTransactionSignatureChecker<T>::VerifySchnorrSignature(Span<const unsigned char> sig, const XOnlyPubKey& pubkey, const uint256& sighash) const\n+{\n+    return pubkey.VerifySchnorr(sighash, sig);\n+}\n+\n template <class T>\n bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n {\n@@ -1540,6 +1546,26 @@ bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vecto\n     return true;\n }\n \n+template <class T>\n+bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion) const\n+{\n+    assert(sigversion == SigVersion::TAPROOT);\n+    // Schnorr signatures have 32-byte public keys. The caller is responsible for enforcing this.\n+    assert(pubkey_in.size() == 32);\n+    if (sig.size() != 64 && sig.size() != 65) return false;\n+\n+    XOnlyPubKey pubkey{pubkey_in};\n+\n+    uint8_t hashtype = SIGHASH_DEFAULT;\n+    if (sig.size() == 65) {\n+        hashtype = SpanPopBack(sig);\n+        if (hashtype == SIGHASH_DEFAULT) return false;\n+    }\n+    uint256 sighash;\n+    if (!SignatureHashSchnorr(sighash, *txTo, nIn, hashtype, sigversion, this->txdata)) return false;\n+    return VerifySchnorrSignature(sig, pubkey, sighash);\n+}\n+\n template <class T>\n bool GenericTransactionSignatureChecker<T>::CheckLockTime(const CScriptNum& nLockTime) const\n {"
      },
      {
        "sha": "103691aeaca0acb07db451d59e8ba7fc988d2bc3",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -7,12 +7,14 @@\n #define BITCOIN_SCRIPT_INTERPRETER_H\n \n #include <script/script_error.h>\n+#include <span.h>\n #include <primitives/transaction.h>\n \n #include <vector>\n #include <stdint.h>\n \n class CPubKey;\n+class XOnlyPubKey;\n class CScript;\n class CTransaction;\n class CTxOut;\n@@ -176,6 +178,11 @@ class BaseSignatureChecker\n         return false;\n     }\n \n+    virtual bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const\n+    {\n+        return false;\n+    }\n+\n     virtual bool CheckLockTime(const CScriptNum& nLockTime) const\n     {\n          return false;\n@@ -200,11 +207,13 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n \n protected:\n     virtual bool VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const;\n+    virtual bool VerifySchnorrSignature(Span<const unsigned char> sig, const XOnlyPubKey& pubkey, const uint256& sighash) const;\n \n public:\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(nullptr) {}\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn, const PrecomputedTransactionData& txdataIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(&txdataIn) {}\n     bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override;\n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const override;\n     bool CheckLockTime(const CScriptNum& nLockTime) const override;\n     bool CheckSequence(const CScriptNum& nSequence) const override;\n };"
      },
      {
        "sha": "58923112048178df8a09c2386777282809fda6d6",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 6,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -22,8 +22,9 @@ namespace {\n class CSignatureCache\n {\n private:\n-     //! Entries are SHA256(nonce || signature hash || public key || signature):\n-    CSHA256 m_salted_hasher;\n+     //! Entries are SHA256(nonce || 'E' or 'S' || 31 zero bytes || signature hash || public key || signature):\n+    CSHA256 m_salted_hasher_ecdsa;\n+    CSHA256 m_salted_hasher_schnorr;\n     typedef CuckooCache::cache<uint256, SignatureCacheHasher> map_type;\n     map_type setValid;\n     boost::shared_mutex cs_sigcache;\n@@ -34,18 +35,30 @@ class CSignatureCache\n         uint256 nonce = GetRandHash();\n         // We want the nonce to be 64 bytes long to force the hasher to process\n         // this chunk, which makes later hash computations more efficient. We\n-        // just write our 32-byte entropy twice to fill the 64 bytes.\n-        m_salted_hasher.Write(nonce.begin(), 32);\n-        m_salted_hasher.Write(nonce.begin(), 32);\n+        // just write our 32-byte entropy, and then pad with 'E' for ECDSA and\n+        // 'S' for Schnorr (followed by 0 bytes).\n+        static const unsigned char PADDING_ECDSA[32] = {'E'};\n+        static const unsigned char PADDING_SCHNORR[32] = {'S'};\n+        m_salted_hasher_ecdsa.Write(nonce.begin(), 32);\n+        m_salted_hasher_ecdsa.Write(PADDING_ECDSA, 32);\n+        m_salted_hasher_schnorr.Write(nonce.begin(), 32);\n+        m_salted_hasher_schnorr.Write(PADDING_SCHNORR, 32);\n     }\n \n     void\n     ComputeEntryECDSA(uint256& entry, const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubkey)\n     {\n-        CSHA256 hasher = m_salted_hasher;\n+        CSHA256 hasher = m_salted_hasher_ecdsa;\n         hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(&vchSig[0], vchSig.size()).Finalize(entry.begin());\n     }\n \n+    void\n+    ComputeEntrySchnorr(uint256& entry, const uint256 &hash, Span<const unsigned char> sig, const XOnlyPubKey& pubkey)\n+    {\n+        CSHA256 hasher = m_salted_hasher_schnorr;\n+        hasher.Write(hash.begin(), 32).Write(&pubkey[0], pubkey.size()).Write(sig.data(), sig.size()).Finalize(entry.begin());\n+    }\n+\n     bool\n     Get(const uint256& entry, const bool erase)\n     {\n@@ -97,3 +110,13 @@ bool CachingTransactionSignatureChecker::VerifyECDSASignature(const std::vector<\n         signatureCache.Set(entry);\n     return true;\n }\n+\n+bool CachingTransactionSignatureChecker::VerifySchnorrSignature(Span<const unsigned char> sig, const XOnlyPubKey& pubkey, const uint256& sighash) const\n+{\n+    uint256 entry;\n+    signatureCache.ComputeEntrySchnorr(entry, sighash, sig, pubkey);\n+    if (signatureCache.Get(entry, !store)) return true;\n+    if (!TransactionSignatureChecker::VerifySchnorrSignature(sig, pubkey, sighash)) return false;\n+    if (store) signatureCache.Set(entry);\n+    return true;\n+}"
      },
      {
        "sha": "00534f975844c6ae573cbe8c6bc4667dc2c828ae",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_SCRIPT_SIGCACHE_H\n \n #include <script/interpreter.h>\n+#include <span.h>\n \n #include <vector>\n \n@@ -49,6 +50,7 @@ class CachingTransactionSignatureChecker : public TransactionSignatureChecker\n     CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn, bool storeIn, PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amountIn, txdataIn), store(storeIn) {}\n \n     bool VerifyECDSASignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const override;\n+    bool VerifySchnorrSignature(Span<const unsigned char> sig, const XOnlyPubKey& pubkey, const uint256& sighash) const override;\n };\n \n void InitSignatureCache();"
      },
      {
        "sha": "a1cfe1574d72c23e88f5838ab9b428928485739a",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -11,6 +11,7 @@\n #include <pubkey.h>\n #include <script/interpreter.h>\n #include <script/keyorigin.h>\n+#include <span.h>\n #include <streams.h>\n \n class CKey;"
      },
      {
        "sha": "87af71897bf2fa963f534b1e28386e82d816f616",
        "filename": "src/test/fuzz/script_sigcache.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 5,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/test/fuzz/script_sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/test/fuzz/script_sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_sigcache.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -35,11 +35,19 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     const bool store = fuzzed_data_provider.ConsumeBool();\n     PrecomputedTransactionData tx_data;\n     CachingTransactionSignatureChecker caching_transaction_signature_checker{mutable_transaction ? &tx : nullptr, n_in, amount, store, tx_data};\n-    const std::optional<CPubKey> pub_key = ConsumeDeserializable<CPubKey>(fuzzed_data_provider);\n-    if (pub_key) {\n-        const std::vector<uint8_t> random_bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n-        if (!random_bytes.empty()) {\n-            (void)caching_transaction_signature_checker.VerifyECDSASignature(random_bytes, *pub_key, ConsumeUInt256(fuzzed_data_provider));\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        const auto random_bytes = fuzzed_data_provider.ConsumeBytes<unsigned char>(64);\n+        const XOnlyPubKey pub_key(ConsumeUInt256(fuzzed_data_provider));\n+        if (random_bytes.size() == 64) {\n+            (void)caching_transaction_signature_checker.VerifySchnorrSignature(random_bytes, pub_key, ConsumeUInt256(fuzzed_data_provider));\n+        }\n+    } else {\n+        const auto random_bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n+        const auto pub_key = ConsumeDeserializable<CPubKey>(fuzzed_data_provider);\n+        if (pub_key) {\n+            if (!random_bytes.empty()) {\n+                (void)caching_transaction_signature_checker.VerifyECDSASignature(random_bytes, *pub_key, ConsumeUInt256(fuzzed_data_provider));\n+            }\n         }\n     }\n }"
      },
      {
        "sha": "a976ae3c4f412cb8e567bac564e89f2ae0795c97",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -33,6 +33,11 @@ class FuzzedSignatureChecker : public BaseSignatureChecker\n         return m_fuzzed_data_provider.ConsumeBool();\n     }\n \n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const override\n+    {\n+        return m_fuzzed_data_provider.ConsumeBool();\n+    }\n+\n     bool CheckLockTime(const CScriptNum& nLockTime) const override\n     {\n         return m_fuzzed_data_provider.ConsumeBool();"
      },
      {
        "sha": "3362b8d17cdd53b93fc319542b1e525b39c79604",
        "filename": "src/test/key_tests.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52ddb42100adf937e89d6415f610365ac178d213/src/test/key_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52ddb42100adf937e89d6415f610365ac178d213/src/test/key_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_tests.cpp?ref=52ddb42100adf937e89d6415f610365ac178d213",
        "patch": "@@ -264,4 +264,32 @@ BOOST_AUTO_TEST_CASE(pubkey_unserialize)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(bip340_test_vectors)\n+{\n+    static const std::vector<std::pair<std::array<std::string, 3>, bool>> VECTORS = {\n+        {{\"F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9\", \"0000000000000000000000000000000000000000000000000000000000000000\", \"E907831F80848D1069A5371B402410364BDF1C5F8307B0084C55F1CE2DCA821525F66A4A85EA8B71E482A74F382D2CE5EBEEE8FDB2172F477DF4900D310536C0\"}, true},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6896BD60EEAE296DB48A229FF71DFE071BDE413E6D43F917DC8DCF8C78DE33418906D11AC976ABCCB20B091292BFF4EA897EFCB639EA871CFA95F6DE339E4B0A\"}, true},\n+        {{\"DD308AFEC5777E13121FA72B9CC1B7CC0139715309B086C960E18FD969774EB8\", \"7E2D58D8B3BCDF1ABADEC7829054F90DDA9805AAB56C77333024B9D0A508B75C\", \"5831AAEED7B44BB74E5EAB94BA9D4294C49BCF2A60728D8B4C200F50DD313C1BAB745879A5AD954A72C45A91C3A51D3C7ADEA98D82F8481E0E1E03674A6F3FB7\"}, true},\n+        {{\"25D1DFF95105F5253C4022F628A996AD3A0D95FBF21D468A1B33F8C160D8F517\", \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\", \"7EB0509757E246F19449885651611CB965ECC1A187DD51B64FDA1EDC9637D5EC97582B9CB13DB3933705B32BA982AF5AF25FD78881EBB32771FC5922EFC66EA3\"}, true},\n+        {{\"D69C3509BB99E412E68B0FE8544E72837DFA30746D8BE2AA65975F29D22DC7B9\", \"4DF3C3F68FCC83B27E9D42C90431A72499F17875C81A599B566C9889B9696703\", \"00000000000000000000003B78CE563F89A0ED9414F5AA28AD0D96D6795F9C6376AFB1548AF603B3EB45C9F8207DEE1060CB71C04E80F593060B07D28308D7F4\"}, true},\n+        {{\"EEFDEA4CDB677750A420FEE807EACF21EB9898AE79B9768766E4FAA04A2D4A34\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E17776969E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A14602975563CC27944640AC607CD107AE10923D9EF7A73C643E166BE5EBEAFA34B1AC553E2\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"1FA62E331EDBC21C394792D2AB1100A7B432B013DF3F6FF4F99FCB33E0E1515F28890B3EDB6E7189B630448B515CE4F8622A954CFE545735AAEA5134FCCDB2BD\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E177769961764B3AA9B2FFCB6EF947B6887A226E8D7C93E00C5ED0C1834FF0D0C2E6DA6\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"0000000000000000000000000000000000000000000000000000000000000000123DDA8328AF9C23A94C1FEECFD123BA4FB73476F0D594DCB65C6425BD186051\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"00000000000000000000000000000000000000000000000000000000000000017615FBAF5AE28864013C099742DEADB4DBA87F11AC6754F93780D5A1837CF197\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"4A298DACAE57395A15D0795DDBFD1DCB564DA82B0F269BC70A74F8220429BA1D69E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F69E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B\"}, false},\n+        {{\"DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E177769FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\"}, false},\n+        {{\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC30\", \"243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89\", \"6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E17776969E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B\"}, false}\n+    };\n+\n+    for (const auto& test : VECTORS) {\n+        auto pubkey = ParseHex(test.first[0]);\n+        auto msg = ParseHex(test.first[1]);\n+        auto sig = ParseHex(test.first[2]);\n+        BOOST_CHECK_EQUAL(XOnlyPubKey(pubkey).VerifySchnorr(uint256(msg), sig), test.second);\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "828aed0abde79a3a5099cde98ac0a3070774003c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjhhZWQwYWJkZTc5YTNhNTA5OWNkZTk4YWMwYTMwNzA3NzQwMDNj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Implement Taproot validation (BIP 341)\n\nThis includes key path spending and script path spending, but not the\nTapscript execution implementation (leaf 0xc0 remains unemcumbered in\nthis commit).\n\nIncludes constants for various aspects of the consensus rules suggested\nby Jeremy Rubin.",
      "tree": {
        "sha": "3942a694191085658ca42ff63afc825728d7d613",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3942a694191085658ca42ff63afc825728d7d613"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/828aed0abde79a3a5099cde98ac0a3070774003c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/828aed0abde79a3a5099cde98ac0a3070774003c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/828aed0abde79a3a5099cde98ac0a3070774003c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/828aed0abde79a3a5099cde98ac0a3070774003c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52ddb42100adf937e89d6415f610365ac178d213",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52ddb42100adf937e89d6415f610365ac178d213",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52ddb42100adf937e89d6415f610365ac178d213"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 94,
      "deletions": 7
    },
    "files": [
      {
        "sha": "eec28bd593e25b5f576da291f9db3b7e4facd435",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -180,6 +180,13 @@ bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> si\n     return secp256k1_schnorrsig_verify(secp256k1_context_verify, sigbytes.data(), msg.begin(), &pubkey);\n }\n \n+bool XOnlyPubKey::CheckPayToContract(const XOnlyPubKey& base, const uint256& hash, const bool parity) const\n+{\n+    secp256k1_xonly_pubkey base_point;\n+    if (!secp256k1_xonly_pubkey_parse(secp256k1_context_verify, &base_point, base.data())) return false;\n+    return secp256k1_xonly_pubkey_tweak_add_check(secp256k1_context_verify, m_keydata.begin(), parity, &base_point, hash.begin());\n+}\n+\n bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {\n     if (!IsValid())\n         return false;"
      },
      {
        "sha": "f14fc9c2510d72abc50dfc3db947e05755479f38",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -220,8 +220,10 @@ class XOnlyPubKey {\n      * If the signature is not exactly 64 bytes, false is returned.\n      */\n     bool VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const;\n+    bool CheckPayToContract(const XOnlyPubKey& base, const uint256& hash, bool parity) const;\n \n     const unsigned char& operator[](int pos) const { return *(m_keydata.begin() + pos); }\n+    const unsigned char* data() const { return m_keydata.begin(); }\n     size_t size() const { return m_keydata.size(); }\n };\n "
      },
      {
        "sha": "bce2cab29d7b3042f63193ee469b44f90354edcb",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 7,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -1376,6 +1376,9 @@ template PrecomputedTransactionData::PrecomputedTransactionData(const CTransacti\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n \n static const CHashWriter HASHER_TAPSIGHASH = TaggedHash(\"TapSighash\");\n+static const CHashWriter HASHER_TAPLEAF = TaggedHash(\"TapLeaf\");\n+static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n+static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n bool SignatureHashSchnorr(uint256& hash_out, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData* cache)\n@@ -1672,14 +1675,34 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     return true;\n }\n \n-static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n+static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, const std::vector<unsigned char>& program, const CScript& script)\n {\n-    CScript exec_script; //!< Actually executed script (last stack item in P2WSH; implied P2PKH script in P2WPKH)\n+    const int path_len = (control.size() - TAPROOT_CONTROL_BASE_SIZE) / TAPROOT_CONTROL_NODE_SIZE;\n+    const XOnlyPubKey p{uint256(std::vector<unsigned char>(control.begin() + 1, control.begin() + TAPROOT_CONTROL_BASE_SIZE))};\n+    const XOnlyPubKey q{uint256(program)};\n+    uint256 k = (CHashWriter(HASHER_TAPLEAF) << uint8_t(control[0] & TAPROOT_LEAF_MASK) << script).GetSHA256();\n+    for (int i = 0; i < path_len; ++i) {\n+        CHashWriter ss_branch{HASHER_TAPBRANCH};\n+        Span<const unsigned char> node(control.data() + TAPROOT_CONTROL_BASE_SIZE + TAPROOT_CONTROL_NODE_SIZE * i, TAPROOT_CONTROL_NODE_SIZE);\n+        if (std::lexicographical_compare(k.begin(), k.end(), node.begin(), node.end())) {\n+            ss_branch << k << node;\n+        } else {\n+            ss_branch << node << k;\n+        }\n+        k = ss_branch.GetSHA256();\n+    }\n+    k = (CHashWriter(HASHER_TAPTWEAK) << MakeSpan(p) << k).GetSHA256();\n+    return q.CheckPayToContract(p, k, control[0] & 1);\n+}\n+\n+static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror, bool is_p2sh)\n+{\n+    CScript exec_script; //!< Actually executed script (last stack item in P2WSH; implied P2PKH script in P2WPKH; leaf script in P2TR)\n     Span<const valtype> stack{witness.stack};\n \n     if (witversion == 0) {\n         if (program.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\n-            // Version 0 segregated witness program: SHA256(CScript) inside the program, CScript + inputs in witness\n+            // BIP141 P2WSH: 32-byte witness v0 program (which encodes SHA256(script))\n             if (stack.size() == 0) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n             }\n@@ -1692,7 +1715,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             }\n             return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n-            // Special case for pay-to-pubkeyhash; signature + pubkey in witness\n+            // BIP141 P2WPKH: 20-byte witness v0 program (which encodes Hash160(pubkey))\n             if (stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n@@ -1701,11 +1724,41 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n+    } else if (witversion == 1 && program.size() == WITNESS_V1_TAPROOT_SIZE && !is_p2sh) {\n+        // BIP341 Taproot: 32-byte non-P2SH witness v1 program (which encodes a P2C-tweaked pubkey)\n+        if (!(flags & SCRIPT_VERIFY_TAPROOT)) return set_success(serror);\n+        if (stack.size() == 0) return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n+        if (stack.size() >= 2 && !stack.back().empty() && stack.back()[0] == ANNEX_TAG) {\n+            // Drop annex (this is non-standard; see IsWitnessStandard)\n+            SpanPopBack(stack);\n+        }\n+        if (stack.size() == 1) {\n+            // Key path spending (stack size is 1 after removing optional annex)\n+            if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT)) {\n+                return set_error(serror, SCRIPT_ERR_TAPROOT_INVALID_SIG);\n+            }\n+            return set_success(serror);\n+        } else {\n+            // Script path spending (stack size is >1 after removing optional annex)\n+            const valtype& control = SpanPopBack(stack);\n+            const valtype& script_bytes = SpanPopBack(stack);\n+            exec_script = CScript(script_bytes.begin(), script_bytes.end());\n+            if (control.size() < TAPROOT_CONTROL_BASE_SIZE || control.size() > TAPROOT_CONTROL_MAX_SIZE || ((control.size() - TAPROOT_CONTROL_BASE_SIZE) % TAPROOT_CONTROL_NODE_SIZE) != 0) {\n+                return set_error(serror, SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE);\n+            }\n+            if (!VerifyTaprootCommitment(control, program, exec_script)) {\n+                return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n+            }\n+            if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION) {\n+                return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION);\n+            }\n+            return set_success(serror);\n+        }\n     } else {\n         if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM) {\n             return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM);\n         }\n-        // Higher version witness scripts return true for future softfork compatibility\n+        // Other version/size/p2sh combinations return true for future softfork compatibility\n         return true;\n     }\n     // There is intentionally no return statement here, to be able to use \"control reaches end of non-void function\" warnings to detect gaps in the logic above.\n@@ -1751,7 +1804,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n                 // The scriptSig must be _exactly_ CScript(), otherwise we reintroduce malleability.\n                 return set_error(serror, SCRIPT_ERR_WITNESS_MALLEATED);\n             }\n-            if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror)) {\n+            if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror, /* is_p2sh */ false)) {\n                 return false;\n             }\n             // Bypass the cleanstack check at the end. The actual stack is obviously not clean\n@@ -1796,7 +1849,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n                     // reintroduce malleability.\n                     return set_error(serror, SCRIPT_ERR_WITNESS_MALLEATED_P2SH);\n                 }\n-                if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror)) {\n+                if (!VerifyWitnessProgram(*witness, witnessversion, witnessprogram, flags, checker, serror, /* is_p2sh */ true)) {\n                     return false;\n                 }\n                 // Bypass the cleanstack check at the end. The actual stack is obviously not clean"
      },
      {
        "sha": "95da73a169c661cbb6042a5b6714cbfb97616e0e",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -121,6 +121,14 @@ enum\n     // Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n+\n+    // Taproot validation (BIP 341)\n+    //\n+    SCRIPT_VERIFY_TAPROOT = (1U << 17),\n+\n+    // Making unknown Taproot leaf versions non-standard\n+    //\n+    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION = (1U << 18),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);\n@@ -167,6 +175,12 @@ static constexpr size_t WITNESS_V0_SCRIPTHASH_SIZE = 32;\n static constexpr size_t WITNESS_V0_KEYHASH_SIZE = 20;\n static constexpr size_t WITNESS_V1_TAPROOT_SIZE = 32;\n \n+static constexpr uint8_t TAPROOT_LEAF_MASK = 0xfe;\n+static constexpr size_t TAPROOT_CONTROL_BASE_SIZE = 33;\n+static constexpr size_t TAPROOT_CONTROL_NODE_SIZE = 32;\n+static constexpr size_t TAPROOT_CONTROL_MAX_NODE_COUNT = 128;\n+static constexpr size_t TAPROOT_CONTROL_MAX_SIZE = TAPROOT_CONTROL_BASE_SIZE + TAPROOT_CONTROL_NODE_SIZE * TAPROOT_CONTROL_MAX_NODE_COUNT;\n+\n template <class T>\n uint256 SignatureHash(const CScript& scriptCode, const T& txTo, unsigned int nIn, int nHashType, const CAmount& amount, SigVersion sigversion, const PrecomputedTransactionData* cache = nullptr);\n "
      },
      {
        "sha": "6bd434f48c65c89c7599e18fd7d7569d883a064e",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -73,6 +73,8 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"NOPx reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM:\n             return \"Witness version reserved for soft-fork upgrades\";\n+        case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION:\n+            return \"Taproot version reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_PUBKEYTYPE:\n             return \"Public key is neither compressed or uncompressed\";\n         case SCRIPT_ERR_CLEANSTACK:\n@@ -91,6 +93,10 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Witness provided for non-witness script\";\n         case SCRIPT_ERR_WITNESS_PUBKEYTYPE:\n             return \"Using non-compressed keys in segwit\";\n+        case SCRIPT_ERR_TAPROOT_INVALID_SIG:\n+            return \"Invalid signature for Taproot key path spending\";\n+        case SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE:\n+            return \"Invalid Taproot control block size\";\n         case SCRIPT_ERR_OP_CODESEPARATOR:\n             return \"Using OP_CODESEPARATOR in non-witness script\";\n         case SCRIPT_ERR_SIG_FINDANDDELETE:"
      },
      {
        "sha": "7f481b9b6485abc35588dee4292c1ec2c2471816",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/828aed0abde79a3a5099cde98ac0a3070774003c/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=828aed0abde79a3a5099cde98ac0a3070774003c",
        "patch": "@@ -56,6 +56,7 @@ typedef enum ScriptError_t\n     /* softfork safeness */\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM,\n+    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION,\n \n     /* segregated witness */\n     SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH,\n@@ -66,6 +67,10 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_WITNESS_UNEXPECTED,\n     SCRIPT_ERR_WITNESS_PUBKEYTYPE,\n \n+    /* Taproot */\n+    SCRIPT_ERR_TAPROOT_INVALID_SIG,\n+    SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE,\n+\n     /* Constant scriptCode */\n     SCRIPT_ERR_OP_CODESEPARATOR,\n     SCRIPT_ERR_SIG_FINDANDDELETE,"
      }
    ]
  },
  {
    "sha": "a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzlhN2VjODIyMmYwZmU4YjU2ZWZkYWI4Y2MxODU2NzVmZjM5YmY5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:33:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Use ScriptExecutionData to pass through annex hash\n\nInstead of recomputing the annex hash every time a signature is verified, compute it\nonce and cache it in a new ScriptExecutionData structure.",
      "tree": {
        "sha": "a1334dd22254bf03a26ca055cd4274b82608504a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1334dd22254bf03a26ca055cd4274b82608504a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "828aed0abde79a3a5099cde98ac0a3070774003c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/828aed0abde79a3a5099cde98ac0a3070774003c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/828aed0abde79a3a5099cde98ac0a3070774003c"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 33,
      "deletions": 17
    },
    "files": [
      {
        "sha": "bce51b52522c13589d135bedd17156bf6c03132e",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 13,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
        "patch": "@@ -371,7 +371,7 @@ static bool EvalChecksig(const valtype& vchSig, const valtype& vchPubKey, CScrip\n     return true;\n }\n \n-bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, ScriptExecutionData execdata)\n {\n     static const CScriptNum bnZero(0);\n     static const CScriptNum bnOne(1);\n@@ -1381,7 +1381,7 @@ static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n-bool SignatureHashSchnorr(uint256& hash_out, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData* cache)\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData* cache)\n {\n     uint8_t ext_flag;\n     switch (sigversion) {\n@@ -1420,8 +1420,8 @@ bool SignatureHashSchnorr(uint256& hash_out, const T& tx_to, const uint32_t in_p\n     }\n \n     // Data about the input/prevout being spent\n-    const auto* witstack = &tx_to.vin[in_pos].scriptWitness.stack;\n-    bool have_annex = witstack->size() > 1 && witstack->back().size() > 0 && witstack->back()[0] == ANNEX_TAG;\n+    assert(execdata.m_annex_init);\n+    const bool have_annex = execdata.m_annex_present;\n     const uint8_t spend_type = (ext_flag << 1) + (have_annex ? 1 : 0); // The low bit indicates whether an annex is present.\n     ss << spend_type;\n     if (input_type == SIGHASH_ANYONECANPAY) {\n@@ -1432,7 +1432,7 @@ bool SignatureHashSchnorr(uint256& hash_out, const T& tx_to, const uint32_t in_p\n         ss << in_pos;\n     }\n     if (have_annex) {\n-        ss << (CHashWriter(SER_GETHASH, 0) << witstack->back()).GetSHA256();\n+        ss << execdata.m_annex_hash;\n     }\n \n     // Data about the output(s)\n@@ -1550,7 +1550,7 @@ bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vecto\n }\n \n template <class T>\n-bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion) const\n+bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion, const ScriptExecutionData& execdata) const\n {\n     assert(sigversion == SigVersion::TAPROOT);\n     // Schnorr signatures have 32-byte public keys. The caller is responsible for enforcing this.\n@@ -1565,7 +1565,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n         if (hashtype == SIGHASH_DEFAULT) return false;\n     }\n     uint256 sighash;\n-    if (!SignatureHashSchnorr(sighash, *txTo, nIn, hashtype, sigversion, this->txdata)) return false;\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, this->txdata)) return false;\n     return VerifySchnorrSignature(sig, pubkey, sighash);\n }\n \n@@ -1657,7 +1657,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n-static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\n+static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, const ScriptExecutionData& execdata, ScriptError* serror)\n {\n     std::vector<valtype> stack{stack_span.begin(), stack_span.end()};\n \n@@ -1667,7 +1667,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     }\n \n     // Run the script interpreter.\n-    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror)) return false;\n+    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror, execdata)) return false;\n \n     // Scripts inside witness implicitly require cleanstack behaviour\n     if (stack.size() != 1) return set_error(serror, SCRIPT_ERR_CLEANSTACK);\n@@ -1699,6 +1699,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n {\n     CScript exec_script; //!< Actually executed script (last stack item in P2WSH; implied P2PKH script in P2WPKH; leaf script in P2TR)\n     Span<const valtype> stack{witness.stack};\n+    ScriptExecutionData execdata;\n \n     if (witversion == 0) {\n         if (program.size() == WITNESS_V0_SCRIPTHASH_SIZE) {\n@@ -1713,14 +1714,14 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             if (memcmp(hash_exec_script.begin(), program.data(), 32)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n-            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, serror);\n+            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, execdata, serror);\n         } else if (program.size() == WITNESS_V0_KEYHASH_SIZE) {\n             // BIP141 P2WPKH: 20-byte witness v0 program (which encodes Hash160(pubkey))\n             if (stack.size() != 2) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH); // 2 items in witness\n             }\n             exec_script << OP_DUP << OP_HASH160 << program << OP_EQUALVERIFY << OP_CHECKSIG;\n-            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, serror);\n+            return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::WITNESS_V0, checker, execdata, serror);\n         } else {\n             return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH);\n         }\n@@ -1730,11 +1731,16 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n         if (stack.size() == 0) return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY);\n         if (stack.size() >= 2 && !stack.back().empty() && stack.back()[0] == ANNEX_TAG) {\n             // Drop annex (this is non-standard; see IsWitnessStandard)\n-            SpanPopBack(stack);\n+            const valtype& annex = SpanPopBack(stack);\n+            execdata.m_annex_hash = (CHashWriter(SER_GETHASH, 0) << annex).GetSHA256();\n+            execdata.m_annex_present = true;\n+        } else {\n+            execdata.m_annex_present = false;\n         }\n+        execdata.m_annex_init = true;\n         if (stack.size() == 1) {\n             // Key path spending (stack size is 1 after removing optional annex)\n-            if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT)) {\n+            if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT, execdata)) {\n                 return set_error(serror, SCRIPT_ERR_TAPROOT_INVALID_SIG);\n             }\n             return set_success(serror);"
      },
      {
        "sha": "cb7645754c216496f56138812bcd58426cf973f7",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
        "patch": "@@ -170,6 +170,16 @@ enum class SigVersion\n     TAPROOT = 2,     //!< Witness v1 with 32-byte program, not BIP16 P2SH-wrapped, key path spending; see BIP 341\n };\n \n+struct ScriptExecutionData\n+{\n+    //! Whether m_annex_present and (when needed) m_annex_hash are initialized.\n+    bool m_annex_init = false;\n+    //! Whether an annex is present.\n+    bool m_annex_present;\n+    //! Hash of the annex data.\n+    uint256 m_annex_hash;\n+};\n+\n /** Signature hash sizes */\n static constexpr size_t WITNESS_V0_SCRIPTHASH_SIZE = 32;\n static constexpr size_t WITNESS_V0_KEYHASH_SIZE = 20;\n@@ -192,7 +202,7 @@ class BaseSignatureChecker\n         return false;\n     }\n \n-    virtual bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const\n+    virtual bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const\n     {\n         return false;\n     }\n@@ -227,15 +237,15 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(nullptr) {}\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn, const PrecomputedTransactionData& txdataIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(&txdataIn) {}\n     bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override;\n-    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const override;\n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const override;\n     bool CheckLockTime(const CScriptNum& nLockTime) const override;\n     bool CheckSequence(const CScriptNum& nSequence) const override;\n };\n \n using TransactionSignatureChecker = GenericTransactionSignatureChecker<CTransaction>;\n using MutableTransactionSignatureChecker = GenericTransactionSignatureChecker<CMutableTransaction>;\n \n-bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* error = nullptr);\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* error = nullptr, ScriptExecutionData execdata = {});\n bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror = nullptr);\n \n size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags);"
      },
      {
        "sha": "acf9dc6b5384e06dc2832e987dd938a9c6f608f4",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
        "patch": "@@ -33,7 +33,7 @@ class FuzzedSignatureChecker : public BaseSignatureChecker\n         return m_fuzzed_data_provider.ConsumeBool();\n     }\n \n-    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion) const override\n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const override\n     {\n         return m_fuzzed_data_provider.ConsumeBool();\n     }"
      }
    ]
  },
  {
    "sha": "ebce9826f9506c779a31b3e21f131ec869c85714",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYmNlOTgyNmY5NTA2Yzc3OWEzMWIzZTIxZjEzMWVjODY5Yzg1NzE0",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2020-09-11T21:34:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Implement Tapscript script validation rules (BIP 342)\n\nThis adds a new `SigVersion::TAPSCRIPT`, makes the necessary interpreter\nchanges to make it implement BIP342, and uses them for leaf version 0xc0\nin Taproot script path spends.",
      "tree": {
        "sha": "bdb63f706fc89c10e8a323406383a1ea26e3bdf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdb63f706fc89c10e8a323406383a1ea26e3bdf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ebce9826f9506c779a31b3e21f131ec869c85714",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebce9826f9506c779a31b3e21f131ec869c85714",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ebce9826f9506c779a31b3e21f131ec869c85714",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebce9826f9506c779a31b3e21f131ec869c85714/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a39a7ec8222f0fe8b56efdab8cc185675ff39bf9"
      }
    ],
    "stats": {
      "total": 239,
      "additions": 219,
      "deletions": 20
    },
    "files": [
      {
        "sha": "79bf6877bbbdf6051233eb1993a0e19a6e056008",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 161,
        "deletions": 19,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -342,13 +342,10 @@ class ConditionStack {\n };\n }\n \n-/** Helper for OP_CHECKSIG and OP_CHECKSIGVERIFY\n- *\n- * A return value of false means the script fails entirely. When true is returned, the\n- * fSuccess variable indicates whether the signature check itself succeeded.\n- */\n-static bool EvalChecksig(const valtype& vchSig, const valtype& vchPubKey, CScript::const_iterator pbegincodehash, CScript::const_iterator pend, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& fSuccess)\n+static bool EvalChecksigPreTapscript(const valtype& vchSig, const valtype& vchPubKey, CScript::const_iterator pbegincodehash, CScript::const_iterator pend, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& fSuccess)\n {\n+    assert(sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0);\n+\n     // Subset of script starting at the most recent codeseparator\n     CScript scriptCode(pbegincodehash, pend);\n \n@@ -371,6 +368,67 @@ static bool EvalChecksig(const valtype& vchSig, const valtype& vchPubKey, CScrip\n     return true;\n }\n \n+static bool EvalChecksigTapscript(const valtype& sig, const valtype& pubkey, ScriptExecutionData& execdata, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& success)\n+{\n+    assert(sigversion == SigVersion::TAPSCRIPT);\n+\n+    /*\n+     *  The following validation sequence is consensus critical. Please note how --\n+     *    upgradable public key versions precede other rules;\n+     *    the script execution fails when using empty signature with invalid public key;\n+     *    the script execution fails when using non-empty invalid signature.\n+     */\n+    success = !sig.empty();\n+    if (success) {\n+        // Implement the sigops/witnesssize ratio test.\n+        // Passing with an upgradable public key version is also counted.\n+        assert(execdata.m_validation_weight_left_init);\n+        execdata.m_validation_weight_left -= VALIDATION_WEIGHT_PER_SIGOP_PASSED;\n+        if (execdata.m_validation_weight_left < 0) {\n+            return set_error(serror, SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT);\n+        }\n+    }\n+    if (pubkey.size() == 0) {\n+        return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n+    } else if (pubkey.size() == 32) {\n+        if (success && !checker.CheckSchnorrSignature(sig, pubkey, sigversion, execdata)) {\n+            return set_error(serror, SCRIPT_ERR_SIG_NULLFAIL);\n+        }\n+    } else {\n+        /*\n+         *  New public key version softforks should be defined before this `else` block.\n+         *  Generally, the new code should not do anything but failing the script execution. To avoid\n+         *  consensus bugs, it should not modify any existing values (including success).\n+         */\n+        if ((flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE) != 0) {\n+            return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_PUBKEYTYPE);\n+        }\n+    }\n+\n+    return true;\n+}\n+\n+/** Helper for OP_CHECKSIG, OP_CHECKSIGVERIFY, and (in Tapscript) OP_CHECKSIGADD.\n+ *\n+ * A return value of false means the script fails entirely. When true is returned, the\n+ * fSuccess variable indicates whether the signature check itself succeeded.\n+ */\n+static bool EvalChecksig(const valtype& sig, const valtype& pubkey, CScript::const_iterator pbegincodehash, CScript::const_iterator pend, ScriptExecutionData& execdata, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& success)\n+{\n+    switch (sigversion) {\n+    case SigVersion::BASE:\n+    case SigVersion::WITNESS_V0:\n+        return EvalChecksigPreTapscript(sig, pubkey, pbegincodehash, pend, flags, checker, sigversion, serror, success);\n+    case SigVersion::TAPSCRIPT:\n+        return EvalChecksigTapscript(sig, pubkey, execdata, flags, checker, sigversion, serror, success);\n+    case SigVersion::TAPROOT:\n+        // Key path spending in Taproot has no script, so this is unreachable.\n+        break;\n+    }\n+    assert(false);\n+}\n+\n+\n bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, ScriptExecutionData execdata)\n {\n     static const CScriptNum bnZero(0);\n@@ -381,6 +439,9 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     // static const valtype vchZero(0);\n     static const valtype vchTrue(1, 1);\n \n+    // sigversion cannot be TAPROOT here, as it admits no script execution.\n+    assert(sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0 || sigversion == SigVersion::TAPSCRIPT);\n+\n     CScript::const_iterator pc = script.begin();\n     CScript::const_iterator pend = script.end();\n     CScript::const_iterator pbegincodehash = script.begin();\n@@ -389,15 +450,18 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     ConditionStack vfExec;\n     std::vector<valtype> altstack;\n     set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);\n-    if (script.size() > MAX_SCRIPT_SIZE)\n+    if ((sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0) && script.size() > MAX_SCRIPT_SIZE) {\n         return set_error(serror, SCRIPT_ERR_SCRIPT_SIZE);\n+    }\n     int nOpCount = 0;\n     bool fRequireMinimal = (flags & SCRIPT_VERIFY_MINIMALDATA) != 0;\n+    uint32_t opcode_pos = 0;\n+    execdata.m_codeseparator_pos = 0xFFFFFFFFUL;\n+    execdata.m_codeseparator_pos_init = true;\n \n     try\n     {\n-        while (pc < pend)\n-        {\n+        for (; pc < pend; ++opcode_pos) {\n             bool fExec = vfExec.all_true();\n \n             //\n@@ -408,9 +472,12 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n             if (vchPushValue.size() > MAX_SCRIPT_ELEMENT_SIZE)\n                 return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n \n-            // Note how OP_RESERVED does not count towards the opcode limit.\n-            if (opcode > OP_16 && ++nOpCount > MAX_OPS_PER_SCRIPT)\n-                return set_error(serror, SCRIPT_ERR_OP_COUNT);\n+            if (sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0) {\n+                // Note how OP_RESERVED does not count towards the opcode limit.\n+                if (opcode > OP_16 && ++nOpCount > MAX_OPS_PER_SCRIPT) {\n+                    return set_error(serror, SCRIPT_ERR_OP_COUNT);\n+                }\n+            }\n \n             if (opcode == OP_CAT ||\n                 opcode == OP_SUBSTR ||\n@@ -568,7 +635,9 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                         if (stack.size() < 1)\n                             return set_error(serror, SCRIPT_ERR_UNBALANCED_CONDITIONAL);\n                         valtype& vch = stacktop(-1);\n-                        if (sigversion == SigVersion::WITNESS_V0 && (flags & SCRIPT_VERIFY_MINIMALIF)) {\n+                        // Tapscript requires minimal IF/NOTIF inputs as a consensus rules. Under witness v0 rules\n+                        // it is only a policy rule, enabled through SCRIPT_VERIFY_MINIMALIF.\n+                        if (sigversion == SigVersion::TAPSCRIPT || (sigversion == SigVersion::WITNESS_V0 && (flags & SCRIPT_VERIFY_MINIMALIF))) {\n                             if (vch.size() > 1)\n                                 return set_error(serror, SCRIPT_ERR_MINIMALIF);\n                             if (vch.size() == 1 && vch[0] != 1)\n@@ -1001,6 +1070,7 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n \n                     // Hash starts after the code separator\n                     pbegincodehash = pc;\n+                    execdata.m_codeseparator_pos = opcode_pos;\n                 }\n                 break;\n \n@@ -1015,7 +1085,7 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                     valtype& vchPubKey = stacktop(-1);\n \n                     bool fSuccess = true;\n-                    if (!EvalChecksig(vchSig, vchPubKey, pbegincodehash, pend, flags, checker, sigversion, serror, fSuccess)) return false;\n+                    if (!EvalChecksig(vchSig, vchPubKey, pbegincodehash, pend, execdata, flags, checker, sigversion, serror, fSuccess)) return false;\n                     popstack(stack);\n                     popstack(stack);\n                     stack.push_back(fSuccess ? vchTrue : vchFalse);\n@@ -1029,9 +1099,32 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                 }\n                 break;\n \n+                case OP_CHECKSIGADD:\n+                {\n+                    // OP_CHECKSIGADD is only available in Tapscript\n+                    if (sigversion == SigVersion::BASE || sigversion == SigVersion::WITNESS_V0) return set_error(serror, SCRIPT_ERR_BAD_OPCODE);\n+\n+                    // (sig num pubkey -- num)\n+                    if (stack.size() < 3) return set_error(serror, SCRIPT_ERR_INVALID_STACK_OPERATION);\n+\n+                    const valtype& sig = stacktop(-3);\n+                    const CScriptNum num(stacktop(-2), fRequireMinimal);\n+                    const valtype& pubkey = stacktop(-1);\n+\n+                    bool success = true;\n+                    if (!EvalChecksig(sig, pubkey, pbegincodehash, pend, execdata, flags, checker, sigversion, serror, success)) return false;\n+                    popstack(stack);\n+                    popstack(stack);\n+                    popstack(stack);\n+                    stack.push_back((num + (success ? 1 : 0)).getvch());\n+                }\n+                break;\n+\n                 case OP_CHECKMULTISIG:\n                 case OP_CHECKMULTISIGVERIFY:\n                 {\n+                    if (sigversion == SigVersion::TAPSCRIPT) return set_error(serror, SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG);\n+\n                     // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n \n                     int i = 1;\n@@ -1381,13 +1474,16 @@ static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n-bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const PrecomputedTransactionData* cache)\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const uint8_t key_version, const PrecomputedTransactionData* cache)\n {\n     uint8_t ext_flag;\n     switch (sigversion) {\n     case SigVersion::TAPROOT:\n         ext_flag = 0;\n         break;\n+    case SigVersion::TAPSCRIPT:\n+        ext_flag = 1;\n+        break;\n     default:\n         assert(false);\n     }\n@@ -1443,6 +1539,16 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n         ss << sha_single_output.GetSHA256();\n     }\n \n+    // Additional data for BIP 342 signatures\n+    if (sigversion == SigVersion::TAPSCRIPT) {\n+        assert(execdata.m_tapleaf_hash_init);\n+        ss << execdata.m_tapleaf_hash;\n+        assert(key_version == 0); // key_version must be 0 for now\n+        ss << key_version;\n+        assert(execdata.m_codeseparator_pos_init);\n+        ss << execdata.m_codeseparator_pos;\n+    }\n+\n     hash_out = ss.GetSHA256();\n     return true;\n }\n@@ -1552,9 +1658,13 @@ bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vecto\n template <class T>\n bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion, const ScriptExecutionData& execdata) const\n {\n-    assert(sigversion == SigVersion::TAPROOT);\n+    assert(sigversion == SigVersion::TAPROOT || sigversion == SigVersion::TAPSCRIPT);\n     // Schnorr signatures have 32-byte public keys. The caller is responsible for enforcing this.\n     assert(pubkey_in.size() == 32);\n+    // Note that in Tapscript evaluation, empty signatures are treated specially (invalid signature that does not\n+    // abort script execution). This is implemented in EvalChecksigTapscript, which won't invoke\n+    // CheckSchnorrSignature in that case. In other contexts, they are invalid like every other signature with\n+    // size different from 64 or 65.\n     if (sig.size() != 64 && sig.size() != 65) return false;\n \n     XOnlyPubKey pubkey{pubkey_in};\n@@ -1565,7 +1675,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n         if (hashtype == SIGHASH_DEFAULT) return false;\n     }\n     uint256 sighash;\n-    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, this->txdata)) return false;\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, 0x00, this->txdata)) return false;\n     return VerifySchnorrSignature(sig, pubkey, sighash);\n }\n \n@@ -1661,6 +1771,30 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n {\n     std::vector<valtype> stack{stack_span.begin(), stack_span.end()};\n \n+    if (sigversion == SigVersion::TAPSCRIPT) {\n+        // OP_SUCCESSx processing overrides everything, including stack element size limits\n+        CScript::const_iterator pc = scriptPubKey.begin();\n+        while (pc < scriptPubKey.end()) {\n+            opcodetype opcode;\n+            if (!scriptPubKey.GetOp(pc, opcode)) {\n+                // Note how this condition would not be reached if an unknown OP_SUCCESSx was found\n+                return set_error(serror, SCRIPT_ERR_BAD_OPCODE);\n+            }\n+            // New opcodes will be listed here. May use a different sigversion to modify existing opcodes.\n+            if (IsOpSuccess(opcode)) {\n+                if (flags & SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS) {\n+                    return set_error(serror, SCRIPT_ERR_DISCOURAGE_OP_SUCCESS);\n+                }\n+                return set_success(serror);\n+            }\n+        }\n+\n+        // Tapscript enforces initial stack size limits (altstack is empty here)\n+        if (stack.size() > MAX_STACK_SIZE) {\n+            return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n+        }\n+    }\n+\n     // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n     for (const valtype& elem : stack) {\n         if (elem.size() > MAX_SCRIPT_ELEMENT_SIZE) return set_error(serror, SCRIPT_ERR_PUSH_SIZE);\n@@ -1675,12 +1809,13 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     return true;\n }\n \n-static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, const std::vector<unsigned char>& program, const CScript& script)\n+static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, const std::vector<unsigned char>& program, const CScript& script, uint256* tapleaf_hash)\n {\n     const int path_len = (control.size() - TAPROOT_CONTROL_BASE_SIZE) / TAPROOT_CONTROL_NODE_SIZE;\n     const XOnlyPubKey p{uint256(std::vector<unsigned char>(control.begin() + 1, control.begin() + TAPROOT_CONTROL_BASE_SIZE))};\n     const XOnlyPubKey q{uint256(program)};\n     uint256 k = (CHashWriter(HASHER_TAPLEAF) << uint8_t(control[0] & TAPROOT_LEAF_MASK) << script).GetSHA256();\n+    if (tapleaf_hash) *tapleaf_hash = k;\n     for (int i = 0; i < path_len; ++i) {\n         CHashWriter ss_branch{HASHER_TAPBRANCH};\n         Span<const unsigned char> node(control.data() + TAPROOT_CONTROL_BASE_SIZE + TAPROOT_CONTROL_NODE_SIZE * i, TAPROOT_CONTROL_NODE_SIZE);\n@@ -1752,9 +1887,16 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             if (control.size() < TAPROOT_CONTROL_BASE_SIZE || control.size() > TAPROOT_CONTROL_MAX_SIZE || ((control.size() - TAPROOT_CONTROL_BASE_SIZE) % TAPROOT_CONTROL_NODE_SIZE) != 0) {\n                 return set_error(serror, SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE);\n             }\n-            if (!VerifyTaprootCommitment(control, program, exec_script)) {\n+            if (!VerifyTaprootCommitment(control, program, exec_script, &execdata.m_tapleaf_hash)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n+            execdata.m_tapleaf_hash_init = true;\n+            if ((control[0] & TAPROOT_LEAF_MASK) == TAPROOT_LEAF_TAPSCRIPT) {\n+                // Tapscript (leaf version 0xc0)\n+                execdata.m_validation_weight_left = ::GetSerializeSize(witness.stack, PROTOCOL_VERSION) + VALIDATION_WEIGHT_OFFSET;\n+                execdata.m_validation_weight_left_init = true;\n+                return ExecuteWitnessScript(stack, exec_script, flags, SigVersion::TAPSCRIPT, checker, execdata, serror);\n+            }\n             if (flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION) {\n                 return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION);\n             }"
      },
      {
        "sha": "88bc9ec9ce71811a50eac558d25b2e66332d2f5f",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 24,
        "deletions": 1,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -122,13 +122,19 @@ enum\n     //\n     SCRIPT_VERIFY_CONST_SCRIPTCODE = (1U << 16),\n \n-    // Taproot validation (BIP 341)\n+    // Taproot/Tapscript validation (BIPs 341 & 342)\n     //\n     SCRIPT_VERIFY_TAPROOT = (1U << 17),\n \n     // Making unknown Taproot leaf versions non-standard\n     //\n     SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION = (1U << 18),\n+\n+    // Making unknown OP_SUCCESS non-standard\n+    SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS = (1U << 19),\n+\n+    // Making unknown public key versions (in BIP 342 scripts) non-standard\n+    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE = (1U << 20),\n };\n \n bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror);\n@@ -168,16 +174,32 @@ enum class SigVersion\n     BASE = 0,        //!< Bare scripts and BIP16 P2SH-wrapped redeemscripts\n     WITNESS_V0 = 1,  //!< Witness v0 (P2WPKH and P2WSH); see BIP 141\n     TAPROOT = 2,     //!< Witness v1 with 32-byte program, not BIP16 P2SH-wrapped, key path spending; see BIP 341\n+    TAPSCRIPT = 3,   //!< Witness v1 with 32-byte program, not BIP16 P2SH-wrapped, script path spending, leaf version 0xc0; see BIP 342\n };\n \n struct ScriptExecutionData\n {\n+    //! Whether m_tapleaf_hash is initialized.\n+    bool m_tapleaf_hash_init = false;\n+    //! The tapleaf hash.\n+    uint256 m_tapleaf_hash;\n+\n+    //! Whether m_codeseparator_pos is initialized.\n+    bool m_codeseparator_pos_init = false;\n+    //! Opcode position of the last executed OP_CODESEPARATOR (or 0xFFFFFFFF if none executed).\n+    uint32_t m_codeseparator_pos;\n+\n     //! Whether m_annex_present and (when needed) m_annex_hash are initialized.\n     bool m_annex_init = false;\n     //! Whether an annex is present.\n     bool m_annex_present;\n     //! Hash of the annex data.\n     uint256 m_annex_hash;\n+\n+    /** Whether m_validation_weight_left is initialized. */\n+    bool m_validation_weight_left_init = false;\n+    /** How much validation weight is left (decremented for every successful non-empty signature check). */\n+    int64_t m_validation_weight_left;\n };\n \n /** Signature hash sizes */\n@@ -186,6 +208,7 @@ static constexpr size_t WITNESS_V0_KEYHASH_SIZE = 20;\n static constexpr size_t WITNESS_V1_TAPROOT_SIZE = 32;\n \n static constexpr uint8_t TAPROOT_LEAF_MASK = 0xfe;\n+static constexpr uint8_t TAPROOT_LEAF_TAPSCRIPT = 0xc0;\n static constexpr size_t TAPROOT_CONTROL_BASE_SIZE = 33;\n static constexpr size_t TAPROOT_CONTROL_NODE_SIZE = 32;\n static constexpr size_t TAPROOT_CONTROL_MAX_NODE_COUNT = 128;"
      },
      {
        "sha": "8bd10f8bab814e15d78f6bb3da75241fc03258b0",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -140,6 +140,9 @@ std::string GetOpName(opcodetype opcode)\n     case OP_NOP9                   : return \"OP_NOP9\";\n     case OP_NOP10                  : return \"OP_NOP10\";\n \n+    // Opcode added by BIP 342 (Tapscript)\n+    case OP_CHECKSIGADD            : return \"OP_CHECKSIGADD\";\n+\n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n     default:\n@@ -328,3 +331,11 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n     opcodeRet = static_cast<opcodetype>(opcode);\n     return true;\n }\n+\n+bool IsOpSuccess(const opcodetype& opcode)\n+{\n+    return (opcode == 0x50 || opcode == 0x62 || opcode == 0x89 ||\n+            opcode == 0x8a || opcode == 0x8d || opcode == 0x8e ||\n+            (opcode >= 0x7e && opcode <= 0x81) || (opcode >= 0x83 && opcode <= 0x86) ||\n+            (opcode >= 0x95 && opcode <= 0x99) || (opcode >= 0xbb && opcode <= 0xfe));\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "a35b3c1f22240bdb348728510cf0ab074a8cb8b5",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -49,6 +49,12 @@ static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n // has meanings independent of the script\n static const unsigned int ANNEX_TAG = 0x50;\n \n+// Validation weight per passing signature (Tapscript only, see BIP 342).\n+static constexpr uint64_t VALIDATION_WEIGHT_PER_SIGOP_PASSED = 50;\n+\n+// How much weight budget is added to the witness size (Tapscript only, see BIP 342).\n+static constexpr uint64_t VALIDATION_WEIGHT_OFFSET = 50;\n+\n template <typename T>\n std::vector<unsigned char> ToByteVector(const T& in)\n {\n@@ -192,6 +198,9 @@ enum opcodetype\n     OP_NOP9 = 0xb8,\n     OP_NOP10 = 0xb9,\n \n+    // Opcode added by BIP 342 (Tapscript)\n+    OP_CHECKSIGADD = 0xba,\n+\n     OP_INVALIDOPCODE = 0xff,\n };\n \n@@ -560,4 +569,6 @@ struct CScriptWitness\n     std::string ToString() const;\n };\n \n+bool IsOpSuccess(const opcodetype& opcode);\n+\n #endif // BITCOIN_SCRIPT_SCRIPT_H"
      },
      {
        "sha": "64f2c7dbec20316379d2448bf1fe877ac2289dbb",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -75,6 +75,10 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Witness version reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION:\n             return \"Taproot version reserved for soft-fork upgrades\";\n+        case SCRIPT_ERR_DISCOURAGE_OP_SUCCESS:\n+            return \"SUCCESSx reserved for soft-fork upgrades\";\n+        case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_PUBKEYTYPE:\n+            return \"Public key version reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_PUBKEYTYPE:\n             return \"Public key is neither compressed or uncompressed\";\n         case SCRIPT_ERR_CLEANSTACK:\n@@ -97,6 +101,10 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Invalid signature for Taproot key path spending\";\n         case SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE:\n             return \"Invalid Taproot control block size\";\n+        case SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT:\n+            return \"Too much signature validation relative to witness weight\";\n+        case SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG:\n+            return \"OP_CHECKMULTISIG(VERIFY) is not available in tapscript\";\n         case SCRIPT_ERR_OP_CODESEPARATOR:\n             return \"Using OP_CODESEPARATOR in non-witness script\";\n         case SCRIPT_ERR_SIG_FINDANDDELETE:"
      },
      {
        "sha": "1f1312539e6918fc2588b113371148943d055979",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ebce9826f9506c779a31b3e21f131ec869c85714/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=ebce9826f9506c779a31b3e21f131ec869c85714",
        "patch": "@@ -57,6 +57,8 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM,\n     SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION,\n+    SCRIPT_ERR_DISCOURAGE_OP_SUCCESS,\n+    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_PUBKEYTYPE,\n \n     /* segregated witness */\n     SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH,\n@@ -70,6 +72,8 @@ typedef enum ScriptError_t\n     /* Taproot */\n     SCRIPT_ERR_TAPROOT_INVALID_SIG,\n     SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE,\n+    SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT,\n+    SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG,\n \n     /* Constant scriptCode */\n     SCRIPT_ERR_OP_CODESEPARATOR,"
      }
    ]
  },
  {
    "sha": "7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjdkOTgxMjNhZDQ1MWFkOGUxMmRlOWEwZDg0ZTYwY2Q2OWJkOGM2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T16:55:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "--- [TAPROOT] Regtest activation and policy ---",
      "tree": {
        "sha": "bdb63f706fc89c10e8a323406383a1ea26e3bdf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bdb63f706fc89c10e8a323406383a1ea26e3bdf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ebce9826f9506c779a31b3e21f131ec869c85714",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ebce9826f9506c779a31b3e21f131ec869c85714",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ebce9826f9506c779a31b3e21f131ec869c85714"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "812c85615c070c738befa2107e85205bd25a73e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MTJjODU2MTVjMDcwYzczOGJlZmEyMTA3ZTg1MjA1YmQyNWE3M2Uw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:34:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Make Taproot spends standard + policy limits\n\nThis adds a `TxoutType::WITNESS_V1_TAPROOT` for P2TR outputs, and permits spending\nthem in standardness rules. No corresponding `CTxDestination` is added for it,\nas that isn't needed until we want wallet integration. The taproot validation flags\nare also enabled for mempool transactions, and standardness rules are added\n(stack item size limit, no annexes).",
      "tree": {
        "sha": "ce3328c014f6b584be42c09606e6cb27c2a815e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ce3328c014f6b584be42c09606e6cb27c2a815e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/812c85615c070c738befa2107e85205bd25a73e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/812c85615c070c738befa2107e85205bd25a73e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/812c85615c070c738befa2107e85205bd25a73e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/812c85615c070c738befa2107e85205bd25a73e0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b7d98123ad451ad8e12de9a0d84e60cd69bd8c6"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 61,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8cba13fa93ce95cc3bb716e2f653190bea98c7b4",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 1,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -9,7 +9,7 @@\n \n #include <consensus/validation.h>\n #include <coins.h>\n-\n+#include <span.h>\n \n CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n {\n@@ -206,6 +206,7 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n         // get the scriptPubKey corresponding to this input:\n         CScript prevScript = prev.scriptPubKey;\n \n+        bool p2sh = false;\n         if (prevScript.IsPayToScriptHash()) {\n             std::vector <std::vector<unsigned char> > stack;\n             // If the scriptPubKey is P2SH, we try to extract the redeemScript casually by converting the scriptSig\n@@ -216,6 +217,7 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n             if (stack.empty())\n                 return false;\n             prevScript = CScript(stack.back().begin(), stack.back().end());\n+            p2sh = true;\n         }\n \n         int witnessversion = 0;\n@@ -237,6 +239,36 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                     return false;\n             }\n         }\n+\n+        // Check policy limits for Taproot spends:\n+        // - MAX_STANDARD_TAPSCRIPT_STACK_ITEM_SIZE limit for stack item size\n+        // - No annexes\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE && !p2sh) {\n+            // Taproot spend (non-P2SH-wrapped, version 1, witness program size 32; see BIP 341)\n+            auto stack = MakeSpan(tx.vin[i].scriptWitness.stack);\n+            if (stack.size() >= 2 && !stack.back().empty() && stack.back()[0] == ANNEX_TAG) {\n+                // Annexes are nonstandard as long as no semantics are defined for them.\n+                return false;\n+            }\n+            if (stack.size() >= 2) {\n+                // Script path spend (2 or more stack elements are removing optional annex)\n+                const auto& control_block = SpanPopBack(stack);\n+                SpanPopBack(stack); // Ignore script\n+                if (control_block.empty()) return false; // Empty control block is invalid\n+                if ((control_block[0] & TAPROOT_LEAF_MASK) == TAPROOT_LEAF_TAPSCRIPT) {\n+                    // Leaf version 0xc0 (aka Tapscript, see BIP 342)\n+                    for (const auto& item : stack) {\n+                        if (item.size() > MAX_STANDARD_TAPSCRIPT_STACK_ITEM_SIZE) return false;\n+                    }\n+                }\n+            } else if (stack.size() == 1) {\n+                // Key path spend (1 stack element after removing optional annex)\n+                // (no policy rules apply)\n+            } else {\n+                // 0 stack elements; this is already invalid by consensus rules\n+                return false;\n+            }\n+        }\n     }\n     return true;\n }"
      },
      {
        "sha": "51d67b93906557ddd8a41733375c6dbaf5e73b58",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -40,6 +40,8 @@ static const bool DEFAULT_PERMIT_BAREMULTISIG = true;\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEMS = 100;\n /** The maximum size of each witness stack item in a standard P2WSH script */\n static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n+/** The maximum size of each witness stack item in a standard BIP 342 script (Taproot, leaf version 0xc0) */\n+static const unsigned int MAX_STANDARD_TAPSCRIPT_STACK_ITEM_SIZE = 80;\n /** The maximum size of a standard witnessScript */\n static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE = 3600;\n /** Min feerate for defining dust. Historically this has been based on the\n@@ -68,7 +70,11 @@ static constexpr unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VE\n                                                              SCRIPT_VERIFY_WITNESS |\n                                                              SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM |\n                                                              SCRIPT_VERIFY_WITNESS_PUBKEYTYPE |\n-                                                             SCRIPT_VERIFY_CONST_SCRIPTCODE;\n+                                                             SCRIPT_VERIFY_CONST_SCRIPTCODE |\n+                                                             SCRIPT_VERIFY_TAPROOT |\n+                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION |\n+                                                             SCRIPT_VERIFY_DISCOURAGE_OP_SUCCESS |\n+                                                             SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE;\n \n /** For convenience, standard but not mandatory verify flags. */\n static constexpr unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;"
      },
      {
        "sha": "0e6864d547a7f08cfd9262f6602545bf2587c165",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -111,6 +111,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     case TxoutType::NONSTANDARD:\n     case TxoutType::NULL_DATA:\n     case TxoutType::WITNESS_UNKNOWN:\n+    case TxoutType::WITNESS_V1_TAPROOT:\n         return false;\n     case TxoutType::PUBKEY:\n         if (!CreateSig(creator, sigdata, provider, sig, CPubKey(vSolutions[0]), scriptPubKey, sigversion)) return false;"
      },
      {
        "sha": "f2f81664f622f0d5c181dbda125bb88b09aefa97",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -55,6 +55,7 @@ std::string GetTxnOutputType(TxoutType t)\n     case TxoutType::NULL_DATA: return \"nulldata\";\n     case TxoutType::WITNESS_V0_KEYHASH: return \"witness_v0_keyhash\";\n     case TxoutType::WITNESS_V0_SCRIPTHASH: return \"witness_v0_scripthash\";\n+    case TxoutType::WITNESS_V1_TAPROOT: return \"witness_v1_taproot\";\n     case TxoutType::WITNESS_UNKNOWN: return \"witness_unknown\";\n     } // no default case, so the compiler can warn about missing cases\n     assert(false);\n@@ -130,6 +131,11 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n             vSolutionsRet.push_back(witnessprogram);\n             return TxoutType::WITNESS_V0_SCRIPTHASH;\n         }\n+        if (witnessversion == 1 && witnessprogram.size() == WITNESS_V1_TAPROOT_SIZE) {\n+            vSolutionsRet.push_back(std::vector<unsigned char>{(unsigned char)witnessversion});\n+            vSolutionsRet.push_back(std::move(witnessprogram));\n+            return TxoutType::WITNESS_V1_TAPROOT;\n+        }\n         if (witnessversion != 0) {\n             vSolutionsRet.push_back(std::vector<unsigned char>{(unsigned char)witnessversion});\n             vSolutionsRet.push_back(std::move(witnessprogram));\n@@ -203,7 +209,7 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n         std::copy(vSolutions[0].begin(), vSolutions[0].end(), hash.begin());\n         addressRet = hash;\n         return true;\n-    } else if (whichType == TxoutType::WITNESS_UNKNOWN) {\n+    } else if (whichType == TxoutType::WITNESS_UNKNOWN || whichType == TxoutType::WITNESS_V1_TAPROOT) {\n         WitnessUnknown unk;\n         unk.version = vSolutions[0][0];\n         std::copy(vSolutions[1].begin(), vSolutions[1].end(), unk.program);"
      },
      {
        "sha": "721203385ec0bf1f1e85e4ce2f5e275d14548a7f",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -129,6 +129,7 @@ enum class TxoutType {\n     NULL_DATA, //!< unspendable OP_RETURN script that carries data\n     WITNESS_V0_SCRIPTHASH,\n     WITNESS_V0_KEYHASH,\n+    WITNESS_V1_TAPROOT,\n     WITNESS_UNKNOWN, //!< Only for Witness versions not already defined above\n };\n \n@@ -206,7 +207,8 @@ struct WitnessUnknown\n  *  * ScriptHash: TxoutType::SCRIPTHASH destination (P2SH)\n  *  * WitnessV0ScriptHash: TxoutType::WITNESS_V0_SCRIPTHASH destination (P2WSH)\n  *  * WitnessV0KeyHash: TxoutType::WITNESS_V0_KEYHASH destination (P2WPKH)\n- *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN destination (P2W???)\n+ *  * WitnessUnknown: TxoutType::WITNESS_UNKNOWN/WITNESS_V1_TAPROOT destination (P2W???)\n+ *    (taproot outputs do not require their own type as long as no wallet support exists)\n  *  A CTxDestination is the internal data type encoded in a bitcoin address\n  */\n typedef boost::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown> CTxDestination;"
      },
      {
        "sha": "7dcab46ad32dfbc9d67796a2d54b7a5b369d6f96",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -932,6 +932,7 @@ static std::string RecurseImportData(const CScript& script, ImportData& import_d\n         return \"unspendable script\";\n     case TxoutType::NONSTANDARD:\n     case TxoutType::WITNESS_UNKNOWN:\n+    case TxoutType::WITNESS_V1_TAPROOT:\n     default:\n         return \"unrecognized script\";\n     }"
      },
      {
        "sha": "4c1b9043507a58e7190c994216f5a7c6b21bdbfc",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -96,6 +96,7 @@ IsMineResult IsMineInner(const LegacyScriptPubKeyMan& keystore, const CScript& s\n     case TxoutType::NONSTANDARD:\n     case TxoutType::NULL_DATA:\n     case TxoutType::WITNESS_UNKNOWN:\n+    case TxoutType::WITNESS_V1_TAPROOT:\n         break;\n     case TxoutType::PUBKEY:\n         keyID = CPubKey(vSolutions[0]).GetID();"
      },
      {
        "sha": "24399af3f265c83c1b825dbf769644f5de84651b",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/812c85615c070c738befa2107e85205bd25a73e0/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/812c85615c070c738befa2107e85205bd25a73e0/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=812c85615c070c738befa2107e85205bd25a73e0",
        "patch": "@@ -54,6 +54,7 @@\n     MAX_SCRIPT_ELEMENT_SIZE,\n     OP_0,\n     OP_1,\n+    OP_2,\n     OP_16,\n     OP_2DROP,\n     OP_CHECKMULTISIG,\n@@ -1400,7 +1401,11 @@ def test_segwit_versions(self):\n         assert_equal(len(self.nodes[1].getrawmempool()), 0)\n         for version in list(range(OP_1, OP_16 + 1)) + [OP_0]:\n             # First try to spend to a future version segwit script_pubkey.\n-            script_pubkey = CScript([CScriptOp(version), witness_hash])\n+            if version == OP_1:\n+                # Don't use 32-byte v1 witness (used by Taproot; see BIP 341)\n+                script_pubkey = CScript([CScriptOp(version), witness_hash + b'\\x00'])\n+            else:\n+                script_pubkey = CScript([CScriptOp(version), witness_hash])\n             tx.vin = [CTxIn(COutPoint(self.utxo[0].sha256, self.utxo[0].n), b\"\")]\n             tx.vout = [CTxOut(self.utxo[0].nValue - 1000, script_pubkey)]\n             tx.rehash()\n@@ -1413,9 +1418,9 @@ def test_segwit_versions(self):\n         self.sync_blocks()\n         assert len(self.nodes[0].getrawmempool()) == 0\n \n-        # Finally, verify that version 0 -> version 1 transactions\n+        # Finally, verify that version 0 -> version 2 transactions\n         # are standard\n-        script_pubkey = CScript([CScriptOp(OP_1), witness_hash])\n+        script_pubkey = CScript([CScriptOp(OP_2), witness_hash])\n         tx2 = CTransaction()\n         tx2.vin = [CTxIn(COutPoint(tx.sha256, 0), b\"\")]\n         tx2.vout = [CTxOut(tx.vout[0].nValue - 1000, script_pubkey)]"
      }
    ]
  },
  {
    "sha": "5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZWU0OWZkM2I4YjE1OThjYTE1YzAzODAzNDgwNjc0MWI0ZGJiOGY1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:34:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "Activate Taproot/Tapscript on regtest (BIP 341, BIP 342)\n\nDefine a versionbits-based activation for the new consensus rules on regtest.\nNo activation or activation mechanism is defined for testnet or mainnet.",
      "tree": {
        "sha": "3b9af9d4476f0c47549ac3ec1be713a6351e862a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b9af9d4476f0c47549ac3ec1be713a6351e862a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "812c85615c070c738befa2107e85205bd25a73e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/812c85615c070c738befa2107e85205bd25a73e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/812c85615c070c738befa2107e85205bd25a73e0"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 37,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7ca5e7b10e9f6244cb3eb1965ef2e695c7c8dcf5",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -83,6 +83,11 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n+\n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000e1ab5ec9348e9f4b8eb8154\");\n \n@@ -192,6 +197,11 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n \n+        // Deployment of Taproot (BIPs 340-342)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = 1230767999; // December 31, 2008\n+\n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000001495c1d5a01e2af8a23\");\n \n@@ -276,6 +286,9 @@ class CRegTestParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].bit = 2;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00\");"
      },
      {
        "sha": "9aa328437051e943be3fdfb5e74fcf47ab0898ec",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -14,6 +14,7 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_TAPROOT, // Deployment of Schnorr/Taproot (BIPs 340-342)\n     // NOTE: Also add new deployments to VersionBitsDeploymentInfo in versionbits.cpp\n     MAX_VERSION_BITS_DEPLOYMENTS\n };"
      },
      {
        "sha": "9e1b19fd54af1c0cd0cddce6538e2cb33adfd7de",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -1287,6 +1287,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     BuriedForkDescPushBack(softforks, \"csv\", consensusParams.CSVHeight);\n     BuriedForkDescPushBack(softforks, \"segwit\", consensusParams.SegwitHeight);\n     BIP9SoftForkDescPushBack(softforks, \"testdummy\", consensusParams, Consensus::DEPLOYMENT_TESTDUMMY);\n+    BIP9SoftForkDescPushBack(softforks, \"taproot\", consensusParams, Consensus::DEPLOYMENT_TAPROOT);\n     obj.pushKV(\"softforks\",             softforks);\n \n     obj.pushKV(\"warnings\", GetWarnings(false).original);"
      },
      {
        "sha": "9726190b3fc80a3b79227b7ba75078782302cd70",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -1910,6 +1910,11 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n         flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n     }\n \n+    // Start enforcing Taproot using versionbits logic.\n+    if (VersionBitsState(pindex->pprev, consensusparams, Consensus::DEPLOYMENT_TAPROOT, versionbitscache) == ThresholdState::ACTIVE) {\n+        flags |= SCRIPT_VERIFY_TAPROOT;\n+    }\n+\n     // Start enforcing BIP147 NULLDUMMY (activated simultaneously with segwit)\n     if (IsWitnessEnabled(pindex->pprev, consensusparams)) {\n         flags |= SCRIPT_VERIFY_NULLDUMMY;"
      },
      {
        "sha": "20dfc044ca6595b8e2feb26e4528fb2bc25efe2b",
        "filename": "src/versionbitsinfo.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/versionbitsinfo.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/src/versionbitsinfo.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbitsinfo.cpp?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -11,4 +11,8 @@ const struct VBDeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_B\n         /*.name =*/ \"testdummy\",\n         /*.gbt_force =*/ true,\n     },\n+    {\n+        /*.name =*/ \"taproot\",\n+        /*.gbt_force =*/ true,\n+    },\n };"
      },
      {
        "sha": "364e9198cfafe9382de709e1b1dfbf12ab870492",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ee49fd3b8b1598ca15c038034806741b4dbb8f5/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "patch": "@@ -146,7 +146,19 @@ def _test_getblockchaininfo(self):\n                         'possible': True,\n                     },\n                 },\n-                'active': False}\n+                'active': False\n+            },\n+            'taproot': {\n+                'type': 'bip9',\n+                'bip9': {\n+                    'status': 'active',\n+                    'start_time': -1,\n+                    'timeout': 9223372036854775807,\n+                    'since': 0\n+                },\n+                'height': 0,\n+                'active': True\n+            }\n         })\n \n     def _test_getchaintxstats(self):"
      }
    ]
  },
  {
    "sha": "7c9e623cde91ad0322878b4cd375199ee7ab117e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YzllNjIzY2RlOTFhZDAzMjI4NzhiNGNkMzc1MTk5ZWU3YWIxMTdl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T16:53:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "--- [TAPROOT] Tests ---",
      "tree": {
        "sha": "3b9af9d4476f0c47549ac3ec1be713a6351e862a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b9af9d4476f0c47549ac3ec1be713a6351e862a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7c9e623cde91ad0322878b4cd375199ee7ab117e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c9e623cde91ad0322878b4cd375199ee7ab117e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7c9e623cde91ad0322878b4cd375199ee7ab117e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c9e623cde91ad0322878b4cd375199ee7ab117e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ee49fd3b8b1598ca15c038034806741b4dbb8f5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ee49fd3b8b1598ca15c038034806741b4dbb8f5"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "697d4616826e45e34bc6ad43748fd9bc2f15d47d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTdkNDYxNjgyNmU0NWUzNGJjNmFkNDM3NDhmZDliYzJmMTVkNDdk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-11T21:34:24Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "[TESTS] Add BIP340 Schnorr signature support to test framework\n\nAdd a pure Python implementation of BIP340 signing and verification, tested against\nthe BIP's test vectors.",
      "tree": {
        "sha": "41e9ab1d4b30d5574d8b8211b1ef5fd3a98f2eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41e9ab1d4b30d5574d8b8211b1ef5fd3a98f2eb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/697d4616826e45e34bc6ad43748fd9bc2f15d47d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/697d4616826e45e34bc6ad43748fd9bc2f15d47d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/697d4616826e45e34bc6ad43748fd9bc2f15d47d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/697d4616826e45e34bc6ad43748fd9bc2f15d47d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c9e623cde91ad0322878b4cd375199ee7ab117e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c9e623cde91ad0322878b4cd375199ee7ab117e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c9e623cde91ad0322878b4cd375199ee7ab117e"
      }
    ],
    "stats": {
      "total": 211,
      "additions": 205,
      "deletions": 6
    },
    "files": [
      {
        "sha": "e068322deb3b7a65d746aceea809983cf545bb70",
        "filename": "test/functional/test_framework/bip340_test_vectors.csv",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_framework/bip340_test_vectors.csv",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_framework/bip340_test_vectors.csv",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/bip340_test_vectors.csv?ref=697d4616826e45e34bc6ad43748fd9bc2f15d47d",
        "patch": "@@ -0,0 +1,16 @@\n+index,secret key,public key,aux_rand,message,signature,verification result,comment\n+0,0000000000000000000000000000000000000000000000000000000000000003,F9308A019258C31049344F85F89D5229B531C845836F99B08601F113BCE036F9,0000000000000000000000000000000000000000000000000000000000000000,0000000000000000000000000000000000000000000000000000000000000000,E907831F80848D1069A5371B402410364BDF1C5F8307B0084C55F1CE2DCA821525F66A4A85EA8B71E482A74F382D2CE5EBEEE8FDB2172F477DF4900D310536C0,TRUE,\n+1,B7E151628AED2A6ABF7158809CF4F3C762E7160F38B4DA56A784D9045190CFEF,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,0000000000000000000000000000000000000000000000000000000000000001,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,6896BD60EEAE296DB48A229FF71DFE071BDE413E6D43F917DC8DCF8C78DE33418906D11AC976ABCCB20B091292BFF4EA897EFCB639EA871CFA95F6DE339E4B0A,TRUE,\n+2,C90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B14E5C9,DD308AFEC5777E13121FA72B9CC1B7CC0139715309B086C960E18FD969774EB8,C87AA53824B4D7AE2EB035A2B5BBBCCC080E76CDC6D1692C4B0B62D798E6D906,7E2D58D8B3BCDF1ABADEC7829054F90DDA9805AAB56C77333024B9D0A508B75C,5831AAEED7B44BB74E5EAB94BA9D4294C49BCF2A60728D8B4C200F50DD313C1BAB745879A5AD954A72C45A91C3A51D3C7ADEA98D82F8481E0E1E03674A6F3FB7,TRUE,\n+3,0B432B2677937381AEF05BB02A66ECD012773062CF3FA2549E44F58ED2401710,25D1DFF95105F5253C4022F628A996AD3A0D95FBF21D468A1B33F8C160D8F517,FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF,7EB0509757E246F19449885651611CB965ECC1A187DD51B64FDA1EDC9637D5EC97582B9CB13DB3933705B32BA982AF5AF25FD78881EBB32771FC5922EFC66EA3,TRUE,test fails if msg is reduced modulo p or n\n+4,,D69C3509BB99E412E68B0FE8544E72837DFA30746D8BE2AA65975F29D22DC7B9,,4DF3C3F68FCC83B27E9D42C90431A72499F17875C81A599B566C9889B9696703,00000000000000000000003B78CE563F89A0ED9414F5AA28AD0D96D6795F9C6376AFB1548AF603B3EB45C9F8207DEE1060CB71C04E80F593060B07D28308D7F4,TRUE,\n+5,,EEFDEA4CDB677750A420FEE807EACF21EB9898AE79B9768766E4FAA04A2D4A34,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E17776969E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B,FALSE,public key not on the curve\n+6,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,FFF97BD5755EEEA420453A14355235D382F6472F8568A18B2F057A14602975563CC27944640AC607CD107AE10923D9EF7A73C643E166BE5EBEAFA34B1AC553E2,FALSE,has_even_y(R) is false\n+7,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,1FA62E331EDBC21C394792D2AB1100A7B432B013DF3F6FF4F99FCB33E0E1515F28890B3EDB6E7189B630448B515CE4F8622A954CFE545735AAEA5134FCCDB2BD,FALSE,negated message\n+8,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E177769961764B3AA9B2FFCB6EF947B6887A226E8D7C93E00C5ED0C1834FF0D0C2E6DA6,FALSE,negated s value\n+9,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,0000000000000000000000000000000000000000000000000000000000000000123DDA8328AF9C23A94C1FEECFD123BA4FB73476F0D594DCB65C6425BD186051,FALSE,sG - eP is infinite. Test fails in single verification if has_even_y(inf) is defined as true and x(inf) as 0\n+10,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,00000000000000000000000000000000000000000000000000000000000000017615FBAF5AE28864013C099742DEADB4DBA87F11AC6754F93780D5A1837CF197,FALSE,sG - eP is infinite. Test fails in single verification if has_even_y(inf) is defined as true and x(inf) as 1\n+11,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,4A298DACAE57395A15D0795DDBFD1DCB564DA82B0F269BC70A74F8220429BA1D69E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B,FALSE,sig[0:32] is not an X coordinate on the curve\n+12,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F69E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B,FALSE,sig[0:32] is equal to field size\n+13,,DFF1D77F2A671C5F36183726DB2341BE58FEAE1DA2DECED843240F7B502BA659,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E177769FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141,FALSE,sig[32:64] is equal to curve order\n+14,,FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC30,,243F6A8885A308D313198A2E03707344A4093822299F31D0082EFA98EC4E6C89,6CFF5C3BA86C69EA4B7376F31A9BCB4F74C1976089B2D9963DA2E5543E17776969E89B4C5564D00349106B8497785DD7D1D713A8AE82B32FA79D5F7FC407D39B,FALSE,public key is not a valid X coordinate because it exceeds the field size"
      },
      {
        "sha": "5650b5409f57c95ad6f37cbd3c573268957a00c6",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 188,
        "deletions": 6,
        "changes": 194,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=697d4616826e45e34bc6ad43748fd9bc2f15d47d",
        "patch": "@@ -1,15 +1,30 @@\n-# Copyright (c) 2019 Pieter Wuille\n+# Copyright (c) 2019-2020 Pieter Wuille\n+\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test-only secp256k1 elliptic curve implementation\n \n WARNING: This code is slow, uses bad randomness, does not properly protect\n keys, and is trivially vulnerable to side channel attacks. Do not use for\n anything but tests.\"\"\"\n+import csv\n+import hashlib\n+import os\n import random\n+import sys\n+import unittest\n \n from .util import modinv\n \n+def TaggedHash(tag, data):\n+    ss = hashlib.sha256(tag.encode('utf-8')).digest()\n+    ss += ss\n+    ss += data\n+    return hashlib.sha256(ss).digest()\n+\n+def xor_bytes(b0, b1):\n+    return bytes(x ^ y for (x, y) in zip(b0, b1))\n+\n def jacobi_symbol(n, k):\n     \"\"\"Compute the Jacobi symbol of n modulo k\n \n@@ -68,6 +83,10 @@ def affine(self, p1):\n         inv_3 = (inv_2 * inv) % self.p\n         return ((inv_2 * x1) % self.p, (inv_3 * y1) % self.p, 1)\n \n+    def has_even_y(self, p1):\n+        \"\"\"Whether the point p1 has an even Y coordinate when expressed in affine coordinates.\"\"\"\n+        return not (p1[2] == 0 or self.affine(p1)[1] & 1)\n+\n     def negate(self, p1):\n         \"\"\"Negate a Jacobian point tuple p1.\"\"\"\n         x1, y1, z1 = p1\n@@ -86,13 +105,13 @@ def is_x_coord(self, x):\n         return jacobi_symbol(x_3 + self.a * x + self.b, self.p) != -1\n \n     def lift_x(self, x):\n-        \"\"\"Given an X coordinate on the curve, return a corresponding affine point.\"\"\"\n+        \"\"\"Given an X coordinate on the curve, return a corresponding affine point for which the y-coordinate is even.\"\"\"\n         x_3 = pow(x, 3, self.p)\n         v = x_3 + self.a * x + self.b\n         y = modsqrt(v, self.p)\n         if y is None:\n             return None\n-        return (x, y, 1)\n+        return (x, self.p - y if y & 1 else y, 1)\n \n     def double(self, p1):\n         \"\"\"Double a Jacobian tuple p1\n@@ -197,7 +216,8 @@ def mul(self, ps):\n                     r = self.add(r, p)\n         return r\n \n-SECP256K1 = EllipticCurve(2**256 - 2**32 - 977, 0, 7)\n+SECP256K1_FIELD_SIZE = 2**256 - 2**32 - 977\n+SECP256K1 = EllipticCurve(SECP256K1_FIELD_SIZE, 0, 7)\n SECP256K1_G = (0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798, 0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8, 1)\n SECP256K1_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\n SECP256K1_ORDER_HALF = SECP256K1_ORDER // 2\n@@ -223,7 +243,7 @@ def set(self, data):\n                 p = SECP256K1.lift_x(x)\n                 # if the oddness of the y co-ord isn't correct, find the other\n                 # valid y\n-                if (p[1] & 1) != (data[0] & 1):\n+                if data[0] & 1:\n                     p = SECP256K1.negate(p)\n                 self.p = p\n                 self.valid = True\n@@ -307,6 +327,10 @@ def verify_ecdsa(self, sig, msg, low_s=True):\n             return False\n         return True\n \n+def generate_privkey():\n+    \"\"\"Generate a valid random 32-byte private key.\"\"\"\n+    return random.randrange(1, SECP256K1_ORDER).to_bytes(32, 'big')\n+\n class ECKey():\n     \"\"\"A secp256k1 private key\"\"\"\n \n@@ -324,7 +348,7 @@ def set(self, secret, compressed):\n \n     def generate(self, compressed=True):\n         \"\"\"Generate a random private key (compressed or uncompressed).\"\"\"\n-        self.set(random.randrange(1, SECP256K1_ORDER).to_bytes(32, 'big'), compressed)\n+        self.set(generate_privkey(), compressed)\n \n     def get_bytes(self):\n         \"\"\"Retrieve the 32-byte representation of this key.\"\"\"\n@@ -369,3 +393,161 @@ def sign_ecdsa(self, msg, low_s=True):\n         rb = r.to_bytes((r.bit_length() + 8) // 8, 'big')\n         sb = s.to_bytes((s.bit_length() + 8) // 8, 'big')\n         return b'\\x30' + bytes([4 + len(rb) + len(sb), 2, len(rb)]) + rb + bytes([2, len(sb)]) + sb\n+\n+def compute_xonly_pubkey(key):\n+    \"\"\"Compute an x-only (32 byte) public key from a (32 byte) private key.\n+\n+    This also returns whether the resulting public key was negated.\n+    \"\"\"\n+\n+    assert(len(key) == 32)\n+    x = int.from_bytes(key, 'big')\n+    if x == 0 or x >= SECP256K1_ORDER:\n+        return (None, None)\n+    P = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, x)]))\n+    return (P[0].to_bytes(32, 'big'), not SECP256K1.has_even_y(P))\n+\n+def tweak_add_privkey(key, tweak, negated=False):\n+    \"\"\"Tweak a private key (after optionally negating it).\"\"\"\n+\n+    assert(len(key) == 32)\n+    assert(len(tweak) == 32)\n+\n+    x = int.from_bytes(key, 'big')\n+    if x == 0 or x >= SECP256K1_ORDER:\n+        return None\n+    if negated:\n+       x = SECP256K1_ORDER - x\n+    t = int.from_bytes(tweak, 'big')\n+    if t >= SECP256K1_ORDER:\n+        return None\n+    x = (x + t) % SECP256K1_ORDER\n+    if x == 0:\n+        return None\n+    return x.to_bytes(32, 'big')\n+\n+def tweak_add_pubkey(key, tweak):\n+    \"\"\"Tweak a public key and return whether the result was negated.\"\"\"\n+\n+    assert(len(key) == 32)\n+    assert(len(tweak) == 32)\n+\n+    x_coord = int.from_bytes(key, 'big')\n+    if x_coord >= SECP256K1_FIELD_SIZE:\n+        return None\n+    P = SECP256K1.lift_x(x_coord)\n+    if P is None:\n+        return None\n+    t = int.from_bytes(tweak, 'big')\n+    if t >= SECP256K1_ORDER:\n+        return None\n+    Q = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, t), (P, 1)]))\n+    if Q is None:\n+        return None\n+    return (Q[0].to_bytes(32, 'big'), not SECP256K1.has_even_y(Q))\n+\n+def verify_schnorr(key, sig, msg):\n+    \"\"\"Verify a Schnorr signature (see BIP 340).\n+\n+    - key is a 32-byte xonly pubkey (computed using compute_xonly_pubkey).\n+    - sig is a 64-byte Schnorr signature\n+    - msg is a 32-byte message\n+    \"\"\"\n+    assert(len(key) == 32)\n+    assert(len(msg) == 32)\n+    assert(len(sig) == 64)\n+\n+    x_coord = int.from_bytes(key, 'big')\n+    if x_coord == 0 or x_coord >= SECP256K1_FIELD_SIZE:\n+        return False\n+    P = SECP256K1.lift_x(x_coord)\n+    if P is None:\n+        return False\n+    r = int.from_bytes(sig[0:32], 'big')\n+    if r >= SECP256K1_FIELD_SIZE:\n+        return False\n+    s = int.from_bytes(sig[32:64], 'big')\n+    if s >= SECP256K1_ORDER:\n+        return False\n+    e = int.from_bytes(TaggedHash(\"BIP0340/challenge\", sig[0:32] + key + msg), 'big') % SECP256K1_ORDER\n+    R = SECP256K1.mul([(SECP256K1_G, s), (P, SECP256K1_ORDER - e)])\n+    if not SECP256K1.has_even_y(R):\n+        return False\n+    if ((r * R[2] * R[2]) % SECP256K1_FIELD_SIZE) != R[0]:\n+        return False\n+    return True\n+\n+def sign_schnorr(key, msg, aux=None):\n+    \"\"\"Create a Schnorr signature (see BIP 340).\"\"\"\n+\n+    if aux is None:\n+        aux = bytes(0 for _ in range(32))\n+\n+    assert(len(key) == 32)\n+    assert(len(msg) == 32)\n+    assert(len(aux) == 32)\n+\n+    sec = int.from_bytes(key, 'big')\n+    if sec == 0 or sec >= SECP256K1_ORDER:\n+        return None\n+    P = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, sec)]))\n+    if not SECP256K1.has_even_y(P):\n+        sec = SECP256K1_ORDER - sec\n+    t = (sec ^ int.from_bytes(TaggedHash(\"BIP0340/aux\", aux), 'big')).to_bytes(32, 'big')\n+    kp = int.from_bytes(TaggedHash(\"BIP0340/nonce\", t + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n+    assert(kp != 0)\n+    R = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, kp)]))\n+    k = kp if SECP256K1.has_even_y(R) else SECP256K1_ORDER - kp\n+    e = int.from_bytes(TaggedHash(\"BIP0340/challenge\", R[0].to_bytes(32, 'big') + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n+    return R[0].to_bytes(32, 'big') + ((k + e * sec) % SECP256K1_ORDER).to_bytes(32, 'big')\n+\n+class TestFrameworkKey(unittest.TestCase):\n+    def test_schnorr(self):\n+        \"\"\"Test the Python Schnorr implementation.\"\"\"\n+        byte_arrays = [generate_privkey() for _ in range(3)] + [v.to_bytes(32, 'big') for v in [0, SECP256K1_ORDER - 1, SECP256K1_ORDER, 2**256 - 1]]\n+        keys = {}\n+        for privkey in byte_arrays:  # build array of key/pubkey pairs\n+            pubkey, _ = compute_xonly_pubkey(privkey)\n+            if pubkey is not None:\n+                keys[privkey] = pubkey\n+        for msg in byte_arrays:  # test every combination of message, signing key, verification key\n+            for sign_privkey, sign_pubkey in keys.items():\n+                sig = sign_schnorr(sign_privkey, msg)\n+                for verify_privkey, verify_pubkey in keys.items():\n+                    if verify_privkey == sign_privkey:\n+                        self.assertTrue(verify_schnorr(verify_pubkey, sig, msg))\n+                        sig = list(sig)\n+                        sig[random.randrange(64)] ^= (1 << (random.randrange(8)))  # damaging signature should break things\n+                        sig = bytes(sig)\n+                    self.assertFalse(verify_schnorr(verify_pubkey, sig, msg))\n+\n+    def test_schnorr_testvectors(self):\n+        \"\"\"Implement the BIP340 test vectors (read from bip340_test_vectors.csv).\"\"\"\n+        num_tests = 0\n+        with open(os.path.join(sys.path[0], 'test_framework', 'bip340_test_vectors.csv'), newline='', encoding='utf8') as csvfile:\n+            reader = csv.reader(csvfile)\n+            reader.__next__()\n+            for row in reader:\n+                (i_str, seckey_hex, pubkey_hex, aux_rand_hex, msg_hex, sig_hex, result_str, comment) = row\n+                i = int(i_str)\n+                pubkey = bytes.fromhex(pubkey_hex)\n+                msg = bytes.fromhex(msg_hex)\n+                sig = bytes.fromhex(sig_hex)\n+                result = result_str == 'TRUE'\n+                if seckey_hex != '':\n+                    seckey = bytes.fromhex(seckey_hex)\n+                    pubkey_actual = compute_xonly_pubkey(seckey)[0]\n+                    self.assertEqual(pubkey.hex(), pubkey_actual.hex(), \"BIP340 test vector %i (%s): pubkey mismatch\" % (i, comment))\n+                    aux_rand = bytes.fromhex(aux_rand_hex)\n+                    try:\n+                        sig_actual = sign_schnorr(seckey, msg, aux_rand)\n+                        self.assertEqual(sig.hex(), sig_actual.hex(), \"BIP340 test vector %i (%s): sig mismatch\" % (i, comment))\n+                    except RuntimeError as e:\n+                        self.assertFalse(\"BIP340 test vector %i (%s): signing raised exception %s\" % (i, comment, e))\n+                result_actual = verify_schnorr(pubkey, sig, msg)\n+                if result:\n+                    self.assertEqual(result, result_actual, \"BIP340 test vector %i (%s): verification failed\" % (i, comment))\n+                else:\n+                    self.assertEqual(result, result_actual, \"BIP340 test vector %i (%s): verification succeeded unexpectedly\" % (i, comment))\n+                num_tests += 1\n+        self.assertTrue(num_tests >= 15) # expect at least 15 test vectors"
      },
      {
        "sha": "5b618d652ee8712da4dffb9953b9d6c495117c3c",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/697d4616826e45e34bc6ad43748fd9bc2f15d47d/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=697d4616826e45e34bc6ad43748fd9bc2f15d47d",
        "patch": "@@ -70,6 +70,7 @@\n     \"address\",\n     \"blocktools\",\n     \"muhash\",\n+    \"key\",\n     \"script\",\n     \"util\",\n ]"
      }
    ]
  },
  {
    "sha": "fd6e288349f8852dd865b4d7b270425a14ec06c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDZlMjg4MzQ5Zjg4NTJkZDg2NWI0ZDdiMjcwNDI1YTE0ZWMwNmM2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-14T05:20:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "[TESTS] Functional tests for Schnorr/Taproot/Tapscript\n\nA large functional test is added that automatically generates random transactions which\nexercise various aspects of the new rules, and verifies they are accepted into the mempool\n(when appropriate), and correctly accepted/rejected in (Python-constructed) blocks.\n\nIncludes sighashing code and many tests by Johnson Lau.\nIncludes a test by Matthew Zipkin.\nIncludes several tests and improvements by Greg Sanders.",
      "tree": {
        "sha": "3a3fc261625882fc9bbe417736a2d1332e517ac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a3fc261625882fc9bbe417736a2d1332e517ac2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd6e288349f8852dd865b4d7b270425a14ec06c6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6e288349f8852dd865b4d7b270425a14ec06c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6e288349f8852dd865b4d7b270425a14ec06c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6e288349f8852dd865b4d7b270425a14ec06c6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "697d4616826e45e34bc6ad43748fd9bc2f15d47d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/697d4616826e45e34bc6ad43748fd9bc2f15d47d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/697d4616826e45e34bc6ad43748fd9bc2f15d47d"
      }
    ],
    "stats": {
      "total": 1560,
      "additions": 1543,
      "deletions": 17
    },
    "files": [
      {
        "sha": "569d23098cf8d70826e89da34ea7d81296a22457",
        "filename": "test/functional/feature_taproot.py",
        "status": "added",
        "additions": 1401,
        "deletions": 0,
        "changes": 1401,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "patch": "@@ -0,0 +1,1401 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2019-2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+# Test Taproot softfork (BIPs 340-342)\n+\n+from test_framework.blocktools import (\n+    create_coinbase,\n+    create_block,\n+    add_witness_commitment,\n+    MAX_BLOCK_SIGOPS_WEIGHT,\n+    WITNESS_SCALE_FACTOR,\n+)\n+from test_framework.messages import (\n+    COutPoint,\n+    CTransaction,\n+    CTxIn,\n+    CTxInWitness,\n+    CTxOut,\n+    ToHex,\n+)\n+from test_framework.script import (\n+    ANNEX_TAG,\n+    CScript,\n+    CScriptNum,\n+    CScriptOp,\n+    LEAF_VERSION_TAPSCRIPT,\n+    LegacySignatureHash,\n+    LOCKTIME_THRESHOLD,\n+    MAX_SCRIPT_ELEMENT_SIZE,\n+    OP_0,\n+    OP_1,\n+    OP_2,\n+    OP_3,\n+    OP_4,\n+    OP_5,\n+    OP_6,\n+    OP_7,\n+    OP_8,\n+    OP_9,\n+    OP_10,\n+    OP_11,\n+    OP_12,\n+    OP_16,\n+    OP_2DROP,\n+    OP_2DUP,\n+    OP_CHECKMULTISIG,\n+    OP_CHECKMULTISIGVERIFY,\n+    OP_CHECKSIG,\n+    OP_CHECKSIGADD,\n+    OP_CHECKSIGVERIFY,\n+    OP_CODESEPARATOR,\n+    OP_DROP,\n+    OP_DUP,\n+    OP_ELSE,\n+    OP_ENDIF,\n+    OP_EQUAL,\n+    OP_EQUALVERIFY,\n+    OP_HASH160,\n+    OP_IF,\n+    OP_NOP,\n+    OP_NOT,\n+    OP_NOTIF,\n+    OP_PUSHDATA1,\n+    OP_RETURN,\n+    OP_SWAP,\n+    OP_VERIFY,\n+    SIGHASH_DEFAULT,\n+    SIGHASH_ALL,\n+    SIGHASH_NONE,\n+    SIGHASH_SINGLE,\n+    SIGHASH_ANYONECANPAY,\n+    SegwitV0SignatureHash,\n+    TaprootSignatureHash,\n+    is_op_success,\n+    taproot_construct,\n+)\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_raises_rpc_error, assert_equal\n+from test_framework.key import generate_privkey, compute_xonly_pubkey, sign_schnorr, tweak_add_privkey, ECKey\n+from test_framework.address import (\n+    hash160,\n+    sha256,\n+)\n+from collections import namedtuple\n+from io import BytesIO\n+import random\n+\n+# === Framework for building spending transactions. ===\n+#\n+# The computation is represented as a \"context\" dict, whose entries store potentially-unevaluated expressions that\n+# refer to lower-level ones. By overwriting these expression, many aspects - both high and low level - of the signing\n+# process can be overridden.\n+#\n+# Specifically, a context object is a dict that maps names to compositions of:\n+# - values\n+# - lists of values\n+# - callables which, when fed the context object as argument, produce any of these\n+#\n+# # The DEFAULT_CONTEXT object specifies a standard signing process, with many overridable knobs.\n+#\n+# The get(ctx, name) function can evaluate a name, and cache its result in the context.\n+# getter(name) can be used to construct a callable that evaluates name. For example:\n+#\n+#   ctx1 = {**DEFAULT_CONTEXT, inputs=[getter(\"sign\"), b'\\x01']}\n+#\n+# creates a context where the script inputs are a signature plus the bytes 0x01.\n+#\n+# override(expr, name1=expr1, name2=expr2, ...) can be used to cause an expression to be evaluated in a selectively\n+# modified context. For example:\n+#\n+#   ctx2 = {**DEFAULT_CONTEXT, sighash=override(default_sighash, hashtype=SIGHASH_DEFAULT)}\n+#\n+# creates a context ctx2 where the sighash is modified to use hashtype=SIGHASH_DEFAULT. This differs from\n+#\n+#   ctx3 = {**DEFAULT_CONTEXT, hashtype=SIGHASH_DEFAULT}\n+#\n+# in that ctx3 will globally use hashtype=SIGHASH_DEFAULT (including in the hashtype byte appended to the signature)\n+# while ctx2 only uses the modified hashtype inside the sighash calculation.\n+\n+def deep_eval(ctx, expr):\n+    \"\"\"Recursively replace any callables c in expr (including inside lists) with c(ctx).\"\"\"\n+    while callable(expr):\n+        expr = expr(ctx)\n+    if isinstance(expr, list):\n+        expr = [deep_eval(ctx, x) for x in expr]\n+    return expr\n+\n+# Data type to represent fully-evaluated expressions in a context dict (so we can avoid reevaluating them).\n+Final = namedtuple(\"Final\", \"value\")\n+\n+def get(ctx, name):\n+    \"\"\"Evaluate name in context ctx.\"\"\"\n+    assert name in ctx, \"Missing '%s' in context\" % name\n+    expr = ctx[name]\n+    if not isinstance(expr, Final):\n+        # Evaluate and cache the result.\n+        expr = Final(deep_eval(ctx, expr))\n+        ctx[name] = expr\n+    return expr.value\n+\n+def getter(name):\n+    \"\"\"Return a callable that evaluates name in its passed context.\"\"\"\n+    return lambda ctx: get(ctx, name)\n+\n+def override(expr, **kwargs):\n+    \"\"\"Return a callable that evaluates expr in a modified context.\"\"\"\n+    return lambda ctx: deep_eval({**ctx, **kwargs}, expr)\n+\n+# === Implementations for the various default expressions in DEFAULT_CONTEXT ===\n+\n+def default_hashtype(ctx):\n+    \"\"\"Default expression for \"hashtype\": SIGHASH_DEFAULT for taproot, SIGHASH_ALL otherwise.\"\"\"\n+    mode = get(ctx, \"mode\")\n+    if mode == \"taproot\":\n+        return SIGHASH_DEFAULT\n+    else:\n+        return SIGHASH_ALL\n+\n+def default_tapleaf(ctx):\n+    \"\"\"Default expression for \"tapleaf\": looking up leaf in tap[2].\"\"\"\n+    return get(ctx, \"tap\").leaves[get(ctx, \"leaf\")]\n+\n+def default_script_taproot(ctx):\n+    \"\"\"Default expression for \"script_taproot\": tapleaf.script.\"\"\"\n+    return get(ctx, \"tapleaf\").script\n+\n+def default_leafversion(ctx):\n+    \"\"\"Default expression for \"leafversion\": tapleaf.version\"\"\"\n+    return get(ctx, \"tapleaf\").version\n+\n+def default_negflag(ctx):\n+    \"\"\"Default expression for \"negflag\": tap.negflag.\"\"\"\n+    return get(ctx, \"tap\").negflag\n+\n+def default_pubkey_inner(ctx):\n+    \"\"\"Default expression for \"pubkey_inner\": tap.inner_pubkey.\"\"\"\n+    return get(ctx, \"tap\").inner_pubkey\n+\n+def default_merklebranch(ctx):\n+    \"\"\"Default expression for \"merklebranch\": tapleaf.merklebranch.\"\"\"\n+    return get(ctx, \"tapleaf\").merklebranch\n+\n+def default_controlblock(ctx):\n+    \"\"\"Default expression for \"controlblock\": combine leafversion, negflag, pubkey_inner, merklebranch.\"\"\"\n+    return bytes([get(ctx, \"leafversion\") + get(ctx, \"negflag\")]) + get(ctx, \"pubkey_inner\") + get(ctx, \"merklebranch\")\n+\n+def default_sighash(ctx):\n+    \"\"\"Default expression for \"sighash\": depending on mode, compute BIP341, BIP143, or legacy sighash.\"\"\"\n+    tx = get(ctx, \"tx\")\n+    idx = get(ctx, \"idx\")\n+    hashtype = get(ctx, \"hashtype_actual\")\n+    mode = get(ctx, \"mode\")\n+    if mode == \"taproot\":\n+        # BIP341 signature hash\n+        utxos = get(ctx, \"utxos\")\n+        annex = get(ctx, \"annex\")\n+        if get(ctx, \"leaf\") is not None:\n+            codeseppos = get(ctx, \"codeseppos\")\n+            leaf_ver = get(ctx, \"leafversion\")\n+            script = get(ctx, \"script_taproot\")\n+            return TaprootSignatureHash(tx, utxos, hashtype, idx, scriptpath=True, script=script, leaf_ver=leaf_ver, codeseparator_pos=codeseppos, annex=annex)\n+        else:\n+            return TaprootSignatureHash(tx, utxos, hashtype, idx, scriptpath=False, annex=annex)\n+    elif mode == \"witv0\":\n+        # BIP143 signature hash\n+        scriptcode = get(ctx, \"scriptcode\")\n+        utxos = get(ctx, \"utxos\")\n+        return SegwitV0SignatureHash(scriptcode, tx, idx, hashtype, utxos[idx].nValue)\n+    else:\n+        # Pre-segwit signature hash\n+        scriptcode = get(ctx, \"scriptcode\")\n+        return LegacySignatureHash(scriptcode, tx, idx, hashtype)[0]\n+\n+def default_tweak(ctx):\n+    \"\"\"Default expression for \"tweak\": None if a leaf is specified, tap[0] otherwise.\"\"\"\n+    if get(ctx, \"leaf\") is None:\n+        return get(ctx, \"tap\").tweak\n+    return None\n+\n+def default_key_tweaked(ctx):\n+    \"\"\"Default expression for \"key_tweaked\": key if tweak is None, tweaked with it otherwise.\"\"\"\n+    key = get(ctx, \"key\")\n+    tweak = get(ctx, \"tweak\")\n+    if tweak is None:\n+        return key\n+    else:\n+        _, negated = compute_xonly_pubkey(key)\n+        return tweak_add_privkey(key, tweak, negated)\n+\n+def default_signature(ctx):\n+    \"\"\"Default expression for \"signature\": BIP340 signature or ECDSA signature depending on mode.\"\"\"\n+    sighash = get(ctx, \"sighash\")\n+    if get(ctx, \"mode\") == \"taproot\":\n+        key = get(ctx, \"key_tweaked\")\n+        flip_r = get(ctx, \"flag_flip_r\")\n+        flip_p = get(ctx, \"flag_flip_p\")\n+        return sign_schnorr(key, sighash, flip_r=flip_r, flip_p=flip_p)\n+    else:\n+        key = get(ctx, \"key\")\n+        return key.sign_ecdsa(sighash)\n+\n+def default_hashtype_actual(ctx):\n+    \"\"\"Default expression for \"hashtype_actual\": hashtype, unless mismatching SIGHASH_SINGLE in taproot.\"\"\"\n+    hashtype = get(ctx, \"hashtype\")\n+    mode = get(ctx, \"mode\")\n+    if mode != \"taproot\":\n+        return hashtype\n+    idx = get(ctx, \"idx\")\n+    tx = get(ctx, \"tx\")\n+    if hashtype & 3 == SIGHASH_SINGLE and idx >= len(tx.vout):\n+        return (hashtype & ~3) | SIGHASH_NONE\n+    return hashtype\n+\n+def default_bytes_hashtype(ctx):\n+    \"\"\"Default expression for \"bytes_hashtype\": bytes([hashtype_actual]) if not 0, b\"\" otherwise.\"\"\"\n+    return bytes([x for x in [get(ctx, \"hashtype_actual\")] if x != 0])\n+\n+def default_sign(ctx):\n+    \"\"\"Default expression for \"sign\": concatenation of signature and bytes_hashtype.\"\"\"\n+    return get(ctx, \"signature\") + get(ctx, \"bytes_hashtype\")\n+\n+def default_inputs_keypath(ctx):\n+    \"\"\"Default expression for \"inputs_keypath\": a signature.\"\"\"\n+    return [get(ctx, \"sign\")]\n+\n+def default_witness_taproot(ctx):\n+    \"\"\"Default expression for \"witness_taproot\", consisting of inputs, script, control block, and annex as needed.\"\"\"\n+    annex = get(ctx, \"annex\")\n+    suffix_annex = []\n+    if annex is not None:\n+        suffix_annex = [annex]\n+    if get(ctx, \"leaf\") is None:\n+        return get(ctx, \"inputs_keypath\") + suffix_annex\n+    else:\n+        return get(ctx, \"inputs\") + [bytes(get(ctx, \"script_taproot\")), get(ctx, \"controlblock\")] + suffix_annex\n+\n+def default_witness_witv0(ctx):\n+    \"\"\"Default expression for \"witness_witv0\", consisting of inputs and witness script, as needed.\"\"\"\n+    script = get(ctx, \"script_witv0\")\n+    inputs = get(ctx, \"inputs\")\n+    if script is None:\n+        return inputs\n+    else:\n+        return inputs + [script]\n+\n+def default_witness(ctx):\n+    \"\"\"Default expression for \"witness\", delegating to \"witness_taproot\" or \"witness_witv0\" as needed.\"\"\"\n+    mode = get(ctx, \"mode\")\n+    if mode == \"taproot\":\n+        return get(ctx, \"witness_taproot\")\n+    elif mode == \"witv0\":\n+        return get(ctx, \"witness_witv0\")\n+    else:\n+        return []\n+\n+def default_scriptsig(ctx):\n+    \"\"\"Default expression for \"scriptsig\", consisting of inputs and redeemscript, as needed.\"\"\"\n+    scriptsig = []\n+    mode = get(ctx, \"mode\")\n+    if mode == \"legacy\":\n+        scriptsig = get(ctx, \"inputs\")\n+    redeemscript = get(ctx, \"script_p2sh\")\n+    if redeemscript is not None:\n+        scriptsig += [bytes(redeemscript)]\n+    return scriptsig\n+\n+# The default context object.\n+DEFAULT_CONTEXT = {\n+    # == The main expressions to evaluate. Only override these for unusual or invalid spends. ==\n+    # The overall witness stack, as a list of bytes objects.\n+    \"witness\": default_witness,\n+    # The overall scriptsig, as a list of CScript objects (to be concatenated) and bytes objects (to be pushed)\n+    \"scriptsig\": default_scriptsig,\n+\n+    # == Expressions you'll generally only override for intentionally invalid spends. ==\n+    # The witness stack for spending a taproot output.\n+    \"witness_taproot\": default_witness_taproot,\n+    # The witness stack for spending a P2WPKH/P2WSH output.\n+    \"witness_witv0\": default_witness_witv0,\n+    # The script inputs for a taproot key path spend.\n+    \"inputs_keypath\": default_inputs_keypath,\n+    # The actual hashtype to use (usually equal to hashtype, but in taproot SIGHASH_SINGLE is not always allowed).\n+    \"hashtype_actual\": default_hashtype_actual,\n+    # The bytes object for a full signature (including hashtype byte, if needed).\n+    \"bytes_hashtype\": default_bytes_hashtype,\n+    # A full script signature (bytes including hashtype, if needed)\n+    \"sign\": default_sign,\n+    # An ECDSA or Schnorr signature (excluding hashtype byte).\n+    \"signature\": default_signature,\n+    # The 32-byte tweaked key (equal to key for script path spends, or key+tweak for key path spends).\n+    \"key_tweaked\": default_key_tweaked,\n+    # The tweak to use (None for script path spends, the actual tweak for key path spends).\n+    \"tweak\": default_tweak,\n+    # The sighash value (32 bytes)\n+    \"sighash\": default_sighash,\n+    # The information about the chosen script path spend (TaprootLeafInfo object).\n+    \"tapleaf\": default_tapleaf,\n+    # The script to push, and include in the sighash, for a taproot script path spend.\n+    \"script_taproot\": default_script_taproot,\n+    # The inner pubkey for a taproot script path spend (32 bytes).\n+    \"pubkey_inner\": default_pubkey_inner,\n+    # The negation flag of the inner pubkey for a taproot script path spend.\n+    \"negflag\": default_negflag,\n+    # The leaf version to include in the sighash (this does not affect the one in the control block).\n+    \"leafversion\": default_leafversion,\n+    # The Merkle path to include in the control block for a script path spend.\n+    \"merklebranch\": default_merklebranch,\n+    # The control block to push for a taproot script path spend.\n+    \"controlblock\": default_controlblock,\n+    # Whether to produce signatures with invalid P sign (Schnorr signatures only).\n+    \"flag_flip_p\": False,\n+    # Whether to produce signatures with invalid R sign (Schnorr signatures only).\n+    \"flag_flip_r\": False,\n+\n+    # == Parameters that can be changed without invalidating, but do have a default: ==\n+    # The hashtype (as an integer).\n+    \"hashtype\": default_hashtype,\n+    # The annex (only when mode==\"taproot\").\n+    \"annex\": None,\n+    # The codeseparator position (only when mode==\"taproot\").\n+    \"codeseppos\": -1,\n+    # The redeemscript to add to the scriptSig (if P2SH; None implies not P2SH).\n+    \"script_p2sh\": None,\n+    # The script to add to the witness in (if P2WSH; None implies P2WPKH)\n+    \"script_witv0\": None,\n+    # The leaf to use in taproot spends (if script path spend; None implies key path spend).\n+    \"leaf\": None,\n+    # The input arguments to provide to the executed script\n+    \"inputs\": [],\n+\n+    # == Parameters to be set before evaluation: ==\n+    # - mode: what spending style to use (\"taproot\", \"witv0\", or \"legacy\").\n+    # - key: the (untweaked) private key to sign with (ECKey object for ECDSA, 32 bytes for Schnorr).\n+    # - tap: the TaprootInfo object (see taproot_construct; needed in mode==\"taproot\").\n+    # - tx: the transaction to sign.\n+    # - utxos: the UTXOs being spent (needed in mode==\"witv0\" and mode==\"taproot\").\n+    # - idx: the input position being signed.\n+    # - scriptcode: the scriptcode to include in legacy and witv0 sighashes.\n+}\n+\n+def flatten(lst):\n+    ret = []\n+    for elem in lst:\n+        if isinstance(elem, list):\n+            ret += flatten(elem)\n+        else:\n+            ret.append(elem)\n+    return ret\n+\n+def spend(tx, idx, utxos, **kwargs):\n+    \"\"\"Sign transaction input idx of tx, provided utxos is the list of outputs being spent.\n+\n+    Additional arguments may be provided that override any aspect of the signing process.\n+    See DEFAULT_CONTEXT above for what can be overridden, and what must be provided.\n+    \"\"\"\n+\n+    ctx = {**DEFAULT_CONTEXT, \"tx\":tx, \"idx\":idx, \"utxos\":utxos, **kwargs}\n+\n+    def to_script(elem):\n+        \"\"\"If fed a CScript, return it; if fed bytes, return a CScript that pushes it.\"\"\"\n+        if isinstance(elem, CScript):\n+            return elem\n+        else:\n+            return CScript([elem])\n+\n+    scriptsig_list = flatten(get(ctx, \"scriptsig\"))\n+    tx.vin[idx].scriptSig = CScript(b\"\".join(bytes(to_script(elem)) for elem in scriptsig_list))\n+    tx.wit.vtxinwit[idx].scriptWitness.stack = flatten(get(ctx, \"witness\"))\n+\n+\n+# === Spender objects ===\n+#\n+# Each spender is a tuple of:\n+# - A scriptPubKey which is to be spent from (CScript)\n+# - A comment describing the test (string)\n+# - Whether the spending (on itself) is expected to be standard (bool)\n+# - A tx-signing lambda taking as inputs:\n+#   - A transaction to sign (CTransaction)\n+#   - An input position (int)\n+#   - The spent UTXOs by this transaction (list of CTxOut)\n+#   - Whether to produce a valid spend (bool)\n+# - A string with an expected error message for failure case if known\n+# - The (pre-taproot) sigops weight consumed by a successful spend\n+# - Whether this spend cannot fail\n+# - Whether this test demands being placed in a txin with no corresponding txout (for testing SIGHASH_SINGLE behavior)\n+\n+Spender = namedtuple(\"Spender\", \"script,comment,is_standard,sat_function,err_msg,sigops_weight,no_fail,need_vin_vout_mismatch\")\n+\n+def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=False, spk_mutate_pre_p2sh=None, failure=None, standard=True, err_msg=None, sigops_weight=0, need_vin_vout_mismatch=False, **kwargs):\n+    \"\"\"Helper for constructing Spender objects using the context signing framework.\n+\n+    * tap: a TaprootInfo object (see taproot_construct), for Taproot spends (cannot be combined with pkh, witv0, or script)\n+    * witv0: boolean indicating the use of witness v0 spending (needs one of script or pkh)\n+    * script: the actual script executed (for bare/P2WSH/P2SH spending)\n+    * pkh: the public key for P2PKH or P2WPKH spending\n+    * p2sh: whether the output is P2SH wrapper (this is supported even for Taproot, where it makes the output unencumbered)\n+    * spk_mutate_pre_psh: a callable to be applied to the script (before potentially P2SH-wrapping it)\n+    * failure: a dict of entries to override in the context when intentionally failing to spend (if None, no_fail will be set)\n+    * standard: whether the (valid version of) spending is expected to be standard\n+    * err_msg: a string with an expected error message for failure (or None, if not cared about)\n+    * sigops_weight: the pre-taproot sigops weight consumed by a successful spend\n+    \"\"\"\n+\n+    conf = dict()\n+\n+    # Compute scriptPubKey and set useful defaults based on the inputs.\n+    if witv0:\n+        assert(tap is None)\n+        conf[\"mode\"] = \"witv0\"\n+        if pkh is not None:\n+            # P2WPKH\n+            assert(script is None)\n+            pubkeyhash = hash160(pkh)\n+            spk = CScript([OP_0, pubkeyhash])\n+            conf[\"scriptcode\"] = CScript([OP_DUP, OP_HASH160, pubkeyhash, OP_EQUALVERIFY, OP_CHECKSIG])\n+            conf[\"script_witv0\"] = None\n+            conf[\"inputs\"] = [getter(\"sign\"), pkh]\n+        elif script is not None:\n+            # P2WSH\n+            spk = CScript([OP_0, sha256(script)])\n+            conf[\"scriptcode\"] = script\n+            conf[\"script_witv0\"] = script\n+        else:\n+            assert False\n+    elif tap is None:\n+        conf[\"mode\"] = \"legacy\"\n+        if pkh is not None:\n+            # P2PKH\n+            assert(script is None)\n+            pubkeyhash = hash160(pkh)\n+            spk = CScript([OP_DUP, OP_HASH160, pubkeyhash, OP_EQUALVERIFY, OP_CHECKSIG])\n+            conf[\"scriptcode\"] = spk\n+            conf[\"inputs\"] = [getter(\"sign\"), pkh]\n+        elif script is not None:\n+            # bare\n+            spk = script\n+            conf[\"scriptcode\"] = script\n+        else:\n+            assert False\n+    else:\n+        assert(script is None)\n+        conf[\"mode\"] = \"taproot\"\n+        conf[\"tap\"] = tap\n+        spk = tap.scriptPubKey\n+\n+    if spk_mutate_pre_p2sh is not None:\n+        spk = spk_mutate_pre_p2sh(spk)\n+\n+    if p2sh:\n+        # P2SH wrapper can be combined with anything else\n+        conf[\"script_p2sh\"] = spk\n+        spk = CScript([OP_HASH160, hash160(spk), OP_EQUAL])\n+\n+    conf = {**conf, **kwargs}\n+\n+    def sat_fn(tx, idx, utxos, valid):\n+        if valid:\n+            spend(tx, idx, utxos, **conf)\n+        else:\n+            assert(failure is not None)\n+            spend(tx, idx, utxos, **{**conf, **failure})\n+\n+    return Spender(script=spk, comment=comment, is_standard=standard, sat_function=sat_fn, err_msg=err_msg, sigops_weight=sigops_weight, no_fail=failure is None, need_vin_vout_mismatch=need_vin_vout_mismatch)\n+\n+def add_spender(spenders, *args, **kwargs):\n+    \"\"\"Make a spender using make_spender, and add it to spenders.\"\"\"\n+    spenders.append(make_spender(*args, **kwargs))\n+\n+# === Helpers for the test ===\n+\n+def random_checksig_style(pubkey):\n+    \"\"\"Creates a random CHECKSIG* tapscript that would succeed with only the valid signature on witness stack.\"\"\"\n+    return bytes(CScript([pubkey, OP_CHECKSIG]))\n+    opcode = random.choice([OP_CHECKSIG, OP_CHECKSIGVERIFY, OP_CHECKSIGADD])\n+    if (opcode == OP_CHECKSIGVERIFY):\n+        ret = CScript([pubkey, opcode, OP_1])\n+    elif (opcode == OP_CHECKSIGADD):\n+        num = random.choice([0, 0x7fffffff, -0x7fffffff])\n+        ret = CScript([num, pubkey, opcode, num + 1, OP_EQUAL])\n+    else:\n+        ret = CScript([pubkey, opcode])\n+    return bytes(ret)\n+\n+def random_bytes(n):\n+    \"\"\"Return a random bytes object of length n.\"\"\"\n+    return bytes(random.getrandbits(8) for i in range(n))\n+\n+def bitflipper(expr):\n+    \"\"\"Return a callable that evaluates expr and returns it with a random bitflip.\"\"\"\n+    def fn(ctx):\n+        sub = deep_eval(ctx, expr)\n+        assert isinstance(sub, bytes)\n+        return (int.from_bytes(sub, 'little') ^ (1 << random.randrange(len(sub) * 8))).to_bytes(len(sub), 'little')\n+    return fn\n+\n+def zero_appender(expr):\n+    \"\"\"Return a callable that evaluates expr and returns it with a zero added.\"\"\"\n+    return lambda ctx: deep_eval(ctx, expr) + b\"\\x00\"\n+\n+def byte_popper(expr):\n+    \"\"\"Return a callable that evaluates expr and returns it with its last byte removed.\"\"\"\n+    return lambda ctx: deep_eval(ctx, expr)[:-1]\n+\n+# Expected error strings\n+ERR_KEYPATH_INVALID_SIG = {\"err_msg\": \"Invalid signature for Taproot key path spending\"}\n+ERR_SCRIPTPATH_INVALID_SIG = {\"err_msg\": \"Signature must be zero for failed CHECK(MULTI)SIG operation\"}\n+ERR_OP_RETURN = {\"err_msg\": \"OP_RETURN was encountered\"}\n+ERR_CONTROLBLOCK_SIZE = {\"err_msg\": \"Invalid Taproot control block size\"}\n+ERR_WITNESS_PROGRAM_MISMATCH = {\"err_msg\": \"Witness program hash mismatch\"}\n+ERR_PUSH_LIMIT = {\"err_msg\": \"Push value size limit exceeded\"}\n+ERR_DISABLED_OPCODE = {\"err_msg\": \"Attempted to use a disabled opcode\"}\n+ERR_TAPSCRIPT_CHECKMULTISIG = {\"err_msg\": \"OP_CHECKMULTISIG(VERIFY) is not available in tapscript\"}\n+ERR_MINIMALIF = {\"err_msg\": \"OP_IF/NOTIF argument must be minimal\"}\n+ERR_UNKNOWN_PUBKEY = {\"err_msg\": \"Public key is neither compressed or uncompressed\"}\n+ERR_STACK_SIZE = {\"err_msg\": \"Stack size limit exceeded\"}\n+ERR_CLEANSTACK = {\"err_msg\": \"Extra items left on stack after execution\"}\n+ERR_STACK_EMPTY = {\"err_msg\": \"Operation not valid with the current stack size\"}\n+ERR_SIGOPS_RATIO = {\"err_msg\": \"Too much signature validation relative to witness weight\"}\n+ERR_UNDECODABLE = {\"err_msg\": \"Opcode missing or not understood\"}\n+ERR_NO_SUCCESS = {\"err_msg\": \"Script evaluated without error but finished with a false/empty top stack element\"}\n+ERR_EMPTY_WITNESS = {\"err_msg\": \"Witness program was passed an empty witness\"}\n+ERR_CHECKSIGVERIFY = {\"err_msg\": \"Script failed an OP_CHECKSIGVERIFY operation\"}\n+\n+VALID_SIGHASHES_ECDSA = [\n+    SIGHASH_ALL,\n+    SIGHASH_NONE,\n+    SIGHASH_SINGLE,\n+    SIGHASH_ANYONECANPAY + SIGHASH_ALL,\n+    SIGHASH_ANYONECANPAY + SIGHASH_NONE,\n+    SIGHASH_ANYONECANPAY + SIGHASH_SINGLE\n+]\n+\n+VALID_SIGHASHES_TAPROOT = [SIGHASH_DEFAULT] + VALID_SIGHASHES_ECDSA\n+\n+VALID_SIGHASHES_TAPROOT_SINGLE = [\n+    SIGHASH_SINGLE,\n+    SIGHASH_ANYONECANPAY + SIGHASH_SINGLE\n+]\n+\n+VALID_SIGHASHES_TAPROOT_NO_SINGLE = [h for h in VALID_SIGHASHES_TAPROOT if h not in VALID_SIGHASHES_TAPROOT_SINGLE]\n+\n+SIGHASH_BITFLIP = {\"failure\": {\"sighash\": bitflipper(default_sighash)}}\n+SIG_POP_BYTE = {\"failure\": {\"sign\": byte_popper(default_sign)}}\n+SINGLE_SIG = {\"inputs\": [getter(\"sign\")]}\n+SIG_ADD_ZERO = {\"failure\": {\"sign\": zero_appender(default_sign)}}\n+\n+DUST_LIMIT = 600\n+MIN_FEE = 50000\n+\n+# === Actual test cases ===\n+\n+\n+def spenders_taproot_active():\n+    \"\"\"Return a list of Spenders for testing post-Taproot activation behavior.\"\"\"\n+\n+    secs = [generate_privkey() for _ in range(8)]\n+    pubs = [compute_xonly_pubkey(sec)[0] for sec in secs]\n+\n+    spenders = []\n+\n+    # == Tests for BIP340 signature validation. ==\n+    # These are primarily tested through the test vectors implemented in libsecp256k1, and in src/tests/key_tests.cpp.\n+    # Some things are tested programmatically as well here.\n+\n+    tap = taproot_construct(pubs[0])\n+    # Test with key with bit flipped.\n+    add_spender(spenders, \"sig/key\", tap=tap, key=secs[0], failure={\"key_tweaked\": bitflipper(default_key_tweaked)}, **ERR_KEYPATH_INVALID_SIG)\n+    # Test with sighash with bit flipped.\n+    add_spender(spenders, \"sig/sighash\", tap=tap, key=secs[0], failure={\"sighash\": bitflipper(default_sighash)}, **ERR_KEYPATH_INVALID_SIG)\n+    # Test with invalid R sign.\n+    add_spender(spenders, \"sig/flip_r\", tap=tap, key=secs[0], failure={\"flag_flip_r\": True}, **ERR_KEYPATH_INVALID_SIG)\n+    # Test with invalid P sign.\n+    add_spender(spenders, \"sig/flip_p\", tap=tap, key=secs[0], failure={\"flag_flip_p\": True}, **ERR_KEYPATH_INVALID_SIG)\n+    # Test with signature with bit flipped.\n+    add_spender(spenders, \"sig/bitflip\", tap=tap, key=secs[0], failure={\"signature\": bitflipper(default_signature)}, **ERR_KEYPATH_INVALID_SIG)\n+\n+    # == Tests for signature hashing ==\n+\n+    # Run all tests once with no annex, and once with a valid random annex.\n+    for annex in [None, lambda _: bytes([ANNEX_TAG]) + random_bytes(random.randrange(0, 250))]:\n+        # Non-empty annex is non-standard\n+        no_annex = annex is None\n+\n+        # Sighash mutation tests (test all sighash combinations)\n+        for hashtype in VALID_SIGHASHES_TAPROOT:\n+            common = {\"annex\": annex, \"hashtype\": hashtype, \"standard\": no_annex}\n+\n+            # Pure pubkey\n+            tap = taproot_construct(pubs[0])\n+            add_spender(spenders, \"sighash/purepk\", tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n+\n+            # Pubkey/P2PK script combination\n+            scripts = [(\"s0\", CScript(random_checksig_style(pubs[1])))]\n+            tap = taproot_construct(pubs[0], scripts)\n+            add_spender(spenders, \"sighash/keypath_hashtype_%x\" % hashtype, tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n+            add_spender(spenders, \"sighash/scriptpath_hashtype_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+\n+            # Test SIGHASH_SINGLE behavior in combination with mismatching outputs\n+            if hashtype in VALID_SIGHASHES_TAPROOT_SINGLE:\n+                add_spender(spenders, \"sighash/keypath_hashtype_mis_%x\" % hashtype, tap=tap, key=secs[0], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), failure={\"hashtype_actual\": hashtype}, **ERR_KEYPATH_INVALID_SIG, need_vin_vout_mismatch=True)\n+                add_spender(spenders, \"sighash/scriptpath_hashtype_mis_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), **SINGLE_SIG, failure={\"hashtype_actual\": hashtype}, **ERR_SCRIPTPATH_INVALID_SIG, need_vin_vout_mismatch=True)\n+\n+        # Test OP_CODESEPARATOR impact on sighashing.\n+        hashtype = lambda _: random.choice(VALID_SIGHASHES_TAPROOT)\n+        common = {\"annex\": annex, \"hashtype\": hashtype, \"standard\": no_annex}\n+        scripts = [\n+            (\"pk_codesep\", CScript(random_checksig_style(pubs[1]) + bytes([OP_CODESEPARATOR]))),  # codesep after checksig\n+            (\"codesep_pk\", CScript(bytes([OP_CODESEPARATOR]) + random_checksig_style(pubs[1]))),  # codesep before checksig\n+            (\"branched_codesep\", CScript([random_bytes(random.randrange(511)), OP_DROP, OP_IF, OP_CODESEPARATOR, pubs[0], OP_ELSE, OP_CODESEPARATOR, pubs[1], OP_ENDIF, OP_CHECKSIG])),  # branch dependent codesep\n+        ]\n+        random.shuffle(scripts)\n+        tap = taproot_construct(pubs[0], scripts)\n+        add_spender(spenders, \"sighash/pk_codesep\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/codesep_pk\", tap=tap, leaf=\"codesep_pk\", key=secs[1], codeseppos=0, **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/branched_codesep/left\", tap=tap, leaf=\"branched_codesep\", key=secs[0], codeseppos=3, **common, inputs=[getter(\"sign\"), b'\\x01'], **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/branched_codesep/right\", tap=tap, leaf=\"branched_codesep\", key=secs[1], codeseppos=6, **common, inputs=[getter(\"sign\"), b''], **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+\n+    # Reusing the scripts above, test that various features affect the sighash.\n+    add_spender(spenders, \"sighash/annex\", tap=tap, leaf=\"pk_codesep\", key=secs[1], hashtype=hashtype, standard=False, **SINGLE_SIG, annex=bytes([ANNEX_TAG]), failure={\"sighash\": override(default_sighash, annex=None)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/script\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, script_taproot=tap.leaves[\"codesep_pk\"].script)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/leafver\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leafversion=random.choice([x & 0xFE for x in range(0x100) if x & 0xFE != 0xC0]))}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leaf=None)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/keypath\", tap=tap, key=secs[0], **common, failure={\"sighash\": override(default_sighash, leaf=\"pk_codesep\")}, **ERR_KEYPATH_INVALID_SIG)\n+\n+    # Test that invalid hashtypes don't work, both in key path and script path spends\n+    hashtype = lambda _: random.choice(VALID_SIGHASHES_TAPROOT)\n+    for invalid_hashtype in [x for x in range(0x100) if x not in VALID_SIGHASHES_TAPROOT]:\n+        add_spender(spenders, \"sighash/keypath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, key=secs[0], hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_KEYPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/scriptpath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_SCRIPTPATH_INVALID_SIG)\n+\n+    # Test that hashtype 0 cannot have a hashtype byte, and 1 must have one.\n+    add_spender(spenders, \"sighash/hashtype0_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype0_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype1_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype1_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    # Test that hashtype 0 and hashtype 1 cannot be transmuted into each other.\n+    add_spender(spenders, \"sighash/hashtype0to1_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype0to1_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype1to0_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype1to0_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SCRIPTPATH_INVALID_SIG)\n+\n+    # Test aspects of signatures with unusual lengths\n+    for hashtype in [SIGHASH_DEFAULT, random.choice(VALID_SIGHASHES_TAPROOT)]:\n+        scripts = [\n+            (\"csv\", CScript([pubs[2], OP_CHECKSIGVERIFY, OP_1])),\n+            (\"cs_pos\", CScript([pubs[2], OP_CHECKSIG])),\n+            (\"csa_pos\", CScript([OP_0, pubs[2], OP_CHECKSIGADD, OP_1, OP_EQUAL])),\n+            (\"cs_neg\", CScript([pubs[2], OP_CHECKSIG, OP_NOT])),\n+            (\"csa_neg\", CScript([OP_2, pubs[2], OP_CHECKSIGADD, OP_2, OP_EQUAL]))\n+        ]\n+        random.shuffle(scripts)\n+        tap = taproot_construct(pubs[3], scripts)\n+        # Empty signatures\n+        add_spender(spenders, \"siglen/empty_keypath\", tap=tap, key=secs[3], hashtype=hashtype, failure={\"sign\": b\"\"}, **ERR_KEYPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/empty_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_CHECKSIGVERIFY)\n+        add_spender(spenders, \"siglen/empty_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_NO_SUCCESS)\n+        add_spender(spenders, \"siglen/empty_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_NO_SUCCESS)\n+        add_spender(spenders, \"siglen/empty_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(1, 100))}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/empty_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(1, 100))}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        # Appending a zero byte to signatures invalidates them\n+        add_spender(spenders, \"siglen/padzero_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_ADD_ZERO, **ERR_KEYPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        # Removing the last byte from signatures invalidates them\n+        add_spender(spenders, \"siglen/popbyte_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_POP_BYTE, **ERR_KEYPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        # Verify that an invalid signature is not allowed, not even when the CHECKSIG* is expected to fail.\n+        add_spender(spenders, \"siglen/invalid_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/invalid_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+\n+    # == Test that BIP341 spending only applies to witness version 1, program length 32, no P2SH ==\n+\n+    for p2sh in [False, True]:\n+        for witver in range(1, 17):\n+            for witlen in [20, 31, 32, 33]:\n+                def mutate(spk):\n+                    prog = spk[2:]\n+                    assert(len(prog) == 32)\n+                    if witlen < 32:\n+                        prog = prog[0:witlen]\n+                    elif witlen > 32:\n+                        prog += bytes([0 for _ in range(witlen - 32)])\n+                    return CScript([CScriptOp.encode_op_n(witver), prog])\n+                scripts = [(\"s0\", CScript([pubs[0], OP_CHECKSIG])), (\"dummy\", CScript([OP_RETURN]))]\n+                tap = taproot_construct(pubs[1], scripts)\n+                if not p2sh and witver == 1 and witlen == 32:\n+                    add_spender(spenders, \"applic/keypath\", p2sh=p2sh, spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[1], **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n+                    add_spender(spenders, \"applic/scriptpath\", p2sh=p2sh, leaf=\"s0\", spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[0], **SINGLE_SIG, failure={\"leaf\": \"dummy\"}, **ERR_OP_RETURN)\n+                else:\n+                    add_spender(spenders, \"applic/keypath\", p2sh=p2sh, spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[1], standard=False)\n+                    add_spender(spenders, \"applic/scriptpath\", p2sh=p2sh, leaf=\"s0\", spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[0], **SINGLE_SIG, standard=False)\n+\n+    # == Test various aspects of BIP341 spending paths ==\n+\n+    # A set of functions that compute the hashing partner in a Merkle tree, designed to exercise\n+    # edge cases. This relies on the taproot_construct feature that a lambda can be passed in\n+    # instead of a subtree, to compute the partner to be hashed with.\n+    PARTNER_MERKLE_FN = [\n+        # Combine with itself\n+        lambda h: h,\n+        # Combine with hash 0\n+        lambda h: bytes([0 for _ in range(32)]),\n+        # Combine with hash 2^256-1\n+        lambda h: bytes([0xff for _ in range(32)]),\n+        # Combine with itself-1 (BE)\n+        lambda h: (int.from_bytes(h, 'big') - 1).to_bytes(32, 'big'),\n+        # Combine with itself+1 (BE)\n+        lambda h: (int.from_bytes(h, 'big') + 1).to_bytes(32, 'big'),\n+        # Combine with itself-1 (LE)\n+        lambda h: (int.from_bytes(h, 'little') - 1).to_bytes(32, 'big'),\n+        # Combine with itself+1 (LE)\n+        lambda h: (int.from_bytes(h, 'little') + 1).to_bytes(32, 'little'),\n+        # Combine with random bitflipped version of self.\n+        lambda h: (int.from_bytes(h, 'little') ^ (1 << random.randrange(256))).to_bytes(32, 'little')\n+    ]\n+    # Start with a tree of that has depth 1 for \"128deep\" and depth 2 for \"129deep\".\n+    scripts = [(\"128deep\", CScript([pubs[0], OP_CHECKSIG])), [(\"129deep\", CScript([pubs[0], OP_CHECKSIG])), random.choice(PARTNER_MERKLE_FN)]]\n+    # Add 127 nodes on top of that tree, so that \"128deep\" and \"129deep\" end up at their designated depths.\n+    for _ in range(127):\n+        scripts = [scripts, random.choice(PARTNER_MERKLE_FN)]\n+    tap = taproot_construct(pubs[0], scripts)\n+    # Test that spends with a depth of 128 work, but 129 doesn't (even with a tree with weird Merkle branches in it).\n+    add_spender(spenders, \"spendpath/merklelimit\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"leaf\": \"129deep\"}, **ERR_CONTROLBLOCK_SIZE)\n+    # Test that flipping the negation bit invalidates spends.\n+    add_spender(spenders, \"spendpath/negflag\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"negflag\": lambda ctx: 1 - default_negflag(ctx)}, **ERR_WITNESS_PROGRAM_MISMATCH)\n+    # Test that bitflips in the Merkle branch invalidate it.\n+    add_spender(spenders, \"spendpath/bitflipmerkle\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"merklebranch\": bitflipper(default_merklebranch)}, **ERR_WITNESS_PROGRAM_MISMATCH)\n+    # Test that bitflips in the inner pubkey invalidate it.\n+    add_spender(spenders, \"spendpath/bitflippubkey\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"pubkey_inner\": bitflipper(default_pubkey_inner)}, **ERR_WITNESS_PROGRAM_MISMATCH)\n+    # Test that empty witnesses are invalid.\n+    add_spender(spenders, \"spendpath/emptywit\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"witness\": []}, **ERR_EMPTY_WITNESS)\n+    # Test that adding garbage to the control block invalidates it.\n+    add_spender(spenders, \"spendpath/padlongcontrol\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"controlblock\": lambda ctx: default_controlblock(ctx) + random_bytes(random.randrange(1, 32))}, **ERR_CONTROLBLOCK_SIZE)\n+    # Test that truncating the control block invalidates it.\n+    add_spender(spenders, \"spendpath/trunclongcontrol\", tap=tap, leaf=\"128deep\", **SINGLE_SIG, key=secs[0], failure={\"controlblock\": lambda ctx: default_merklebranch(ctx)[0:random.randrange(1, 32)]}, **ERR_CONTROLBLOCK_SIZE)\n+\n+    scripts = [(\"s\", CScript([pubs[0], OP_CHECKSIG]))]\n+    tap = taproot_construct(pubs[1], scripts)\n+    # Test that adding garbage to the control block invalidates it.\n+    add_spender(spenders, \"spendpath/padshortcontrol\", tap=tap, leaf=\"s\", **SINGLE_SIG, key=secs[0], failure={\"controlblock\": lambda ctx: default_controlblock(ctx) + random_bytes(random.randrange(1, 32))}, **ERR_CONTROLBLOCK_SIZE)\n+    # Test that truncating the control block invalidates it.\n+    add_spender(spenders, \"spendpath/truncshortcontrol\", tap=tap, leaf=\"s\", **SINGLE_SIG, key=secs[0], failure={\"controlblock\": lambda ctx: default_merklebranch(ctx)[0:random.randrange(1, 32)]}, **ERR_CONTROLBLOCK_SIZE)\n+    # Test that truncating the control block to 1 byte (\"-1 Merkle length\") invalidates it\n+    add_spender(spenders, \"spendpath/trunc1shortcontrol\", tap=tap, leaf=\"s\", **SINGLE_SIG, key=secs[0], failure={\"controlblock\": lambda ctx: default_merklebranch(ctx)[0:1]}, **ERR_CONTROLBLOCK_SIZE)\n+\n+    # == Test BIP342 edge cases ==\n+\n+    csa_low_val = random.randrange(0, 17) # Within range for OP_n\n+    csa_low_result = csa_low_val + 1\n+\n+    csa_high_val = random.randrange(17, 100) if random.getrandbits(1) else random.randrange(-100, -1) # Outside OP_n range\n+    csa_high_result = csa_high_val + 1\n+\n+    OVERSIZE_NUMBER = 2**31\n+    assert_equal(len(CScriptNum.encode(CScriptNum(OVERSIZE_NUMBER))), 6)\n+    assert_equal(len(CScriptNum.encode(CScriptNum(OVERSIZE_NUMBER-1))), 5)\n+\n+    big_choices = []\n+    big_scriptops = []\n+    for i in range(1000):\n+        r = random.randrange(len(pubs))\n+        big_choices.append(r)\n+        big_scriptops += [pubs[r], OP_CHECKSIGVERIFY]\n+\n+\n+    def big_spend_inputs(ctx):\n+        \"\"\"Helper function to construct the script input for t33/t34 below.\"\"\"\n+        # Instead of signing 999 times, precompute signatures for every (key, hashtype) combination\n+        sigs = {}\n+        for ht in VALID_SIGHASHES_TAPROOT:\n+            for k in range(len(pubs)):\n+                sigs[(k, ht)] = override(default_sign, hashtype=ht, key=secs[k])(ctx)\n+        num = get(ctx, \"num\")\n+        return [sigs[(big_choices[i], random.choice(VALID_SIGHASHES_TAPROOT))] for i in range(num - 1, -1, -1)]\n+\n+    # Various BIP342 features\n+    scripts = [\n+        # 0) drop stack element and OP_CHECKSIG\n+        (\"t0\", CScript([OP_DROP, pubs[1], OP_CHECKSIG])),\n+        # 1) normal OP_CHECKSIG\n+        (\"t1\", CScript([pubs[1], OP_CHECKSIG])),\n+        # 2) normal OP_CHECKSIGVERIFY\n+        (\"t2\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_1])),\n+        # 3) Hypothetical OP_CHECKMULTISIG script that takes a single sig as input\n+        (\"t3\", CScript([OP_0, OP_SWAP, OP_1, pubs[1], OP_1, OP_CHECKMULTISIG])),\n+        # 4) Hypothetical OP_CHECKMULTISIGVERIFY script that takes a single sig as input\n+        (\"t4\", CScript([OP_0, OP_SWAP, OP_1, pubs[1], OP_1, OP_CHECKMULTISIGVERIFY, OP_1])),\n+        # 5) OP_IF script that needs a true input\n+        (\"t5\", CScript([OP_IF, pubs[1], OP_CHECKSIG, OP_ELSE, OP_RETURN, OP_ENDIF])),\n+        # 6) OP_NOTIF script that needs a true input\n+        (\"t6\", CScript([OP_NOTIF, OP_RETURN, OP_ELSE, pubs[1], OP_CHECKSIG, OP_ENDIF])),\n+        # 7) OP_CHECKSIG with an empty key\n+        (\"t7\", CScript([OP_0, OP_CHECKSIG])),\n+        # 8) OP_CHECKSIGVERIFY with an empty key\n+        (\"t8\", CScript([OP_0, OP_CHECKSIGVERIFY, OP_1])),\n+        # 9) normal OP_CHECKSIGADD that also ensures return value is correct\n+        (\"t9\", CScript([csa_low_val, pubs[1], OP_CHECKSIGADD, csa_low_result, OP_EQUAL])),\n+        # 10) OP_CHECKSIGADD with empty key\n+        (\"t10\", CScript([csa_low_val, OP_0, OP_CHECKSIGADD, csa_low_result, OP_EQUAL])),\n+        # 11) OP_CHECKSIGADD with missing counter stack element\n+        (\"t11\", CScript([pubs[1], OP_CHECKSIGADD, OP_1, OP_EQUAL])),\n+        # 12) OP_CHECKSIG that needs invalid signature\n+        (\"t12\", CScript([pubs[1], OP_CHECKSIGVERIFY, pubs[0], OP_CHECKSIG, OP_NOT])),\n+        # 13) OP_CHECKSIG with empty key that needs invalid signature\n+        (\"t13\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_0, OP_CHECKSIG, OP_NOT])),\n+        # 14) OP_CHECKSIGADD that needs invalid signature\n+        (\"t14\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_0, pubs[0], OP_CHECKSIGADD, OP_NOT])),\n+        # 15) OP_CHECKSIGADD with empty key that needs invalid signature\n+        (\"t15\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_0, OP_0, OP_CHECKSIGADD, OP_NOT])),\n+        # 16) OP_CHECKSIG with unknown pubkey type\n+        (\"t16\", CScript([OP_1, OP_CHECKSIG])),\n+        # 17) OP_CHECKSIGADD with unknown pubkey type\n+        (\"t17\", CScript([OP_0, OP_1, OP_CHECKSIGADD])),\n+        # 18) OP_CHECKSIGVERIFY with unknown pubkey type\n+        (\"t18\", CScript([OP_1, OP_CHECKSIGVERIFY, OP_1])),\n+        # 19) script longer than 10000 bytes and over 201 non-push opcodes\n+        (\"t19\", CScript([OP_0, OP_0, OP_2DROP] * 10001 + [pubs[1], OP_CHECKSIG])),\n+        # 20) OP_CHECKSIGVERIFY with empty key\n+        (\"t20\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_0, OP_0, OP_CHECKSIGVERIFY, OP_1])),\n+        # 21) Script that grows the stack to 1000 elements\n+        (\"t21\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_1] + [OP_DUP] * 999 + [OP_DROP] * 999)),\n+        # 22) Script that grows the stack to 1001 elements\n+        (\"t22\", CScript([pubs[1], OP_CHECKSIGVERIFY, OP_1] + [OP_DUP] * 1000 + [OP_DROP] * 1000)),\n+        # 23) Script that expects an input stack of 1000 elements\n+        (\"t23\", CScript([OP_DROP] * 999 + [pubs[1], OP_CHECKSIG])),\n+        # 24) Script that expects an input stack of 1001 elements\n+        (\"t24\", CScript([OP_DROP] * 1000 + [pubs[1], OP_CHECKSIG])),\n+        # 25) Script that pushes a MAX_SCRIPT_ELEMENT_SIZE-bytes element\n+        (\"t25\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE), OP_DROP, pubs[1], OP_CHECKSIG])),\n+        # 26) Script that pushes a (MAX_SCRIPT_ELEMENT_SIZE+1)-bytes element\n+        (\"t26\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1), OP_DROP, pubs[1], OP_CHECKSIG])),\n+        # 27) CHECKSIGADD that must fail because numeric argument number is >4 bytes\n+        (\"t27\", CScript([CScriptNum(OVERSIZE_NUMBER), pubs[1], OP_CHECKSIGADD])),\n+        # 28) Pushes random CScriptNum value, checks OP_CHECKSIGADD result\n+        (\"t28\", CScript([csa_high_val, pubs[1], OP_CHECKSIGADD, csa_high_result, OP_EQUAL])),\n+        # 29) CHECKSIGADD that succeeds with proper sig because numeric argument number is <=4 bytes\n+        (\"t29\", CScript([CScriptNum(OVERSIZE_NUMBER-1), pubs[1], OP_CHECKSIGADD])),\n+        # 30) Variant of t1 with \"normal\" 33-byte pubkey\n+        (\"t30\", CScript([b'\\x03' + pubs[1], OP_CHECKSIG])),\n+        # 31) Variant of t2 with \"normal\" 33-byte pubkey\n+        (\"t31\", CScript([b'\\x02' + pubs[1], OP_CHECKSIGVERIFY, OP_1])),\n+        # 32) Variant of t28 with \"normal\" 33-byte pubkey\n+        (\"t32\", CScript([csa_high_val, b'\\x03' + pubs[1], OP_CHECKSIGADD, csa_high_result, OP_EQUAL])),\n+        # 33) 999-of-999 multisig\n+        (\"t33\", CScript(big_scriptops[:1998] + [OP_1])),\n+        # 34) 1000-of-1000 multisig\n+        (\"t34\", CScript(big_scriptops[:2000] + [OP_1])),\n+        # 35) Variant of t9 that uses a non-minimally encoded input arg\n+        (\"t35\", CScript([bytes([csa_low_val]), pubs[1], OP_CHECKSIGADD, csa_low_result, OP_EQUAL])),\n+    ]\n+    # Add many dummies to test huge trees\n+    for j in range(100000):\n+        scripts.append((None, CScript([OP_RETURN, random.randrange(100000)])))\n+    random.shuffle(scripts)\n+    tap = taproot_construct(pubs[0], scripts)\n+    common = {\n+        \"hashtype\": hashtype,\n+        \"key\": secs[1],\n+        \"tap\": tap,\n+    }\n+    # Test that MAX_SCRIPT_ELEMENT_SIZE byte stack element inputs are valid, but not one more (and 80 bytes is standard but 81 is not).\n+    add_spender(spenders, \"tapscript/inputmaxlimit\", leaf=\"t0\", **common, standard=False, inputs=[getter(\"sign\"), random_bytes(MAX_SCRIPT_ELEMENT_SIZE)], failure={\"inputs\": [getter(\"sign\"), random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1)]}, **ERR_PUSH_LIMIT)\n+    add_spender(spenders, \"tapscript/input80limit\", leaf=\"t0\", **common, inputs=[getter(\"sign\"), random_bytes(80)])\n+    add_spender(spenders, \"tapscript/input81limit\", leaf=\"t0\", **common, standard=False, inputs=[getter(\"sign\"), random_bytes(81)])\n+    # Test that OP_CHECKMULTISIG and OP_CHECKMULTISIGVERIFY cause failure, but OP_CHECKSIG and OP_CHECKSIGVERIFY work.\n+    add_spender(spenders, \"tapscript/disabled_checkmultisig\", leaf=\"t1\", **common, **SINGLE_SIG, failure={\"leaf\": \"t3\"}, **ERR_TAPSCRIPT_CHECKMULTISIG)\n+    add_spender(spenders, \"tapscript/disabled_checkmultisigverify\", leaf=\"t2\", **common, **SINGLE_SIG, failure={\"leaf\": \"t4\"}, **ERR_TAPSCRIPT_CHECKMULTISIG)\n+    # Test that OP_IF and OP_NOTIF do not accept non-0x01 as truth value (the MINIMALIF rule is consensus in Tapscript)\n+    add_spender(spenders, \"tapscript/minimalif\", leaf=\"t5\", **common, inputs=[getter(\"sign\"), b'\\x01'], failure={\"inputs\": [getter(\"sign\"), b'\\x02']}, **ERR_MINIMALIF)\n+    add_spender(spenders, \"tapscript/minimalnotif\", leaf=\"t6\", **common, inputs=[getter(\"sign\"), b'\\x01'], failure={\"inputs\": [getter(\"sign\"), b'\\x03']}, **ERR_MINIMALIF)\n+    add_spender(spenders, \"tapscript/minimalif\", leaf=\"t5\", **common, inputs=[getter(\"sign\"), b'\\x01'], failure={\"inputs\": [getter(\"sign\"), b'\\x0001']}, **ERR_MINIMALIF)\n+    add_spender(spenders, \"tapscript/minimalnotif\", leaf=\"t6\", **common, inputs=[getter(\"sign\"), b'\\x01'], failure={\"inputs\": [getter(\"sign\"), b'\\x0100']}, **ERR_MINIMALIF)\n+    # Test that 1-byte public keys (which are unknown) are acceptable but nonstandard with unrelated signatures, but 0-byte public keys are not valid.\n+    add_spender(spenders, \"tapscript/unkpk/checksig\", leaf=\"t16\", standard=False, **common, **SINGLE_SIG, failure={\"leaf\": \"t7\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/unkpk/checksigadd\", leaf=\"t17\", standard=False, **common, **SINGLE_SIG, failure={\"leaf\": \"t10\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/unkpk/checksigverify\", leaf=\"t18\", standard=False, **common, **SINGLE_SIG, failure={\"leaf\": \"t8\"}, **ERR_UNKNOWN_PUBKEY)\n+    # Test that 33-byte public keys (which are unknown) are acceptable but nonstandard with valid signatures, but normal pubkeys are not valid in that case.\n+    add_spender(spenders, \"tapscript/oldpk/checksig\", leaf=\"t30\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t1\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"tapscript/oldpk/checksigadd\", leaf=\"t31\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t2\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"tapscript/oldpk/checksigverify\", leaf=\"t32\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t28\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    # Test that 0-byte public keys are not acceptable.\n+    add_spender(spenders, \"tapscript/emptypk/checksig\", leaf=\"t1\", **SINGLE_SIG, **common, failure={\"leaf\": \"t7\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/emptypk/checksigverify\", leaf=\"t2\", **SINGLE_SIG, **common, failure={\"leaf\": \"t8\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/emptypk/checksigadd\", leaf=\"t9\", **SINGLE_SIG, **common, failure={\"leaf\": \"t10\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/emptypk/checksigadd\", leaf=\"t35\", standard=False, **SINGLE_SIG, **common, failure={\"leaf\": \"t10\"}, **ERR_UNKNOWN_PUBKEY)\n+    # Test that OP_CHECKSIGADD results are as expected\n+    add_spender(spenders, \"tapscript/checksigaddresults\", leaf=\"t28\", **SINGLE_SIG, **common, failure={\"leaf\": \"t27\"}, err_msg=\"unknown error\")\n+    add_spender(spenders, \"tapscript/checksigaddoversize\", leaf=\"t29\", **SINGLE_SIG, **common, failure={\"leaf\": \"t27\"}, err_msg=\"unknown error\")\n+    # Test that OP_CHECKSIGADD requires 3 stack elements.\n+    add_spender(spenders, \"tapscript/checksigadd3args\", leaf=\"t9\", **SINGLE_SIG, **common, failure={\"leaf\": \"t11\"}, **ERR_STACK_EMPTY)\n+    # Test that empty signatures do not cause script failure in OP_CHECKSIG and OP_CHECKSIGADD (but do fail with empty pubkey, and do fail OP_CHECKSIGVERIFY)\n+    add_spender(spenders, \"tapscript/emptysigs/checksig\", leaf=\"t12\", **common, inputs=[b'', getter(\"sign\")], failure={\"leaf\": \"t13\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/emptysigs/nochecksigverify\", leaf=\"t12\", **common, inputs=[b'', getter(\"sign\")], failure={\"leaf\": \"t20\"}, **ERR_UNKNOWN_PUBKEY)\n+    add_spender(spenders, \"tapscript/emptysigs/checksigadd\", leaf=\"t14\", **common, inputs=[b'', getter(\"sign\")], failure={\"leaf\": \"t15\"}, **ERR_UNKNOWN_PUBKEY)\n+    # Test that scripts over 10000 bytes (and over 201 non-push ops) are acceptable.\n+    add_spender(spenders, \"tapscript/no10000limit\", leaf=\"t19\", **SINGLE_SIG, **common)\n+    # Test that a stack size of 1000 elements is permitted, but 1001 isn't.\n+    add_spender(spenders, \"tapscript/1000stack\", leaf=\"t21\", **SINGLE_SIG, **common, failure={\"leaf\": \"t22\"}, **ERR_STACK_SIZE)\n+    # Test that an input stack size of 1000 elements is permitted, but 1001 isn't.\n+    add_spender(spenders, \"tapscript/1000inputs\", leaf=\"t23\", **common, inputs=[getter(\"sign\")] + [b'' for _ in range(999)], failure={\"leaf\": \"t24\", \"inputs\": [getter(\"sign\")] + [b'' for _ in range(1000)]}, **ERR_STACK_SIZE)\n+    # Test that pushing a MAX_SCRIPT_ELEMENT_SIZE byte stack element is valid, but one longer is not.\n+    add_spender(spenders, \"tapscript/pushmaxlimit\", leaf=\"t25\", **common, **SINGLE_SIG, failure={\"leaf\": \"t26\"}, **ERR_PUSH_LIMIT)\n+    # Test that 999-of-999 multisig works (but 1000-of-1000 triggers stack size limits)\n+    add_spender(spenders, \"tapscript/bigmulti\", leaf=\"t33\", **common, inputs=big_spend_inputs, num=999, failure={\"leaf\": \"t34\", \"num\": 1000}, **ERR_STACK_SIZE)\n+\n+    # == Test for sigops ratio limit ==\n+\n+    # Given a number n, and a public key pk, functions that produce a (CScript, sigops). Each script takes as\n+    # input a valid signature with the passed pk followed by a dummy push of bytes that are to be dropped, and\n+    # will execute sigops signature checks.\n+    SIGOPS_RATIO_SCRIPTS = [\n+        # n OP_CHECKSIGVERFIYs and 1 OP_CHECKSIG.\n+        lambda n, pk: (CScript([OP_DROP, pk] + [OP_2DUP, OP_CHECKSIGVERIFY] * n + [OP_CHECKSIG]), n + 1),\n+        # n OP_CHECKSIGVERIFYs and 1 OP_CHECKSIGADD, but also one unexecuted OP_CHECKSIGVERIFY.\n+        lambda n, pk: (CScript([OP_DROP, pk, OP_0, OP_IF, OP_2DUP, OP_CHECKSIGVERIFY, OP_ENDIF] + [OP_2DUP, OP_CHECKSIGVERIFY] * n + [OP_2, OP_SWAP, OP_CHECKSIGADD, OP_3, OP_EQUAL]), n + 1),\n+        # n OP_CHECKSIGVERIFYs and 1 OP_CHECKSIGADD, but also one unexecuted OP_CHECKSIG.\n+        lambda n, pk: (CScript([random_bytes(220), OP_2DROP, pk, OP_1, OP_NOTIF, OP_2DUP, OP_CHECKSIG, OP_VERIFY, OP_ENDIF] + [OP_2DUP, OP_CHECKSIGVERIFY] * n + [OP_4, OP_SWAP, OP_CHECKSIGADD, OP_5, OP_EQUAL]), n + 1),\n+        # n OP_CHECKSIGVERFIYs and 1 OP_CHECKSIGADD, but also one unexecuted OP_CHECKSIGADD.\n+        lambda n, pk: (CScript([OP_DROP, pk, OP_1, OP_IF, OP_ELSE, OP_2DUP, OP_6, OP_SWAP, OP_CHECKSIGADD, OP_7, OP_EQUALVERIFY, OP_ENDIF] + [OP_2DUP, OP_CHECKSIGVERIFY] * n + [OP_8, OP_SWAP, OP_CHECKSIGADD, OP_9, OP_EQUAL]), n + 1),\n+        # n+1 OP_CHECKSIGs, but also one OP_CHECKSIG with an empty signature.\n+        lambda n, pk: (CScript([OP_DROP, OP_0, pk, OP_CHECKSIG, OP_NOT, OP_VERIFY, pk] + [OP_2DUP, OP_CHECKSIG, OP_VERIFY] * n + [OP_CHECKSIG]), n + 1),\n+        # n OP_CHECKSIGADDs and 1 OP_CHECKSIG, but also an OP_CHECKSIGADD with an empty signature.\n+        lambda n, pk: (CScript([OP_DROP, OP_0, OP_10, pk, OP_CHECKSIGADD, OP_10, OP_EQUALVERIFY, pk] + [OP_2DUP, OP_16, OP_SWAP, OP_CHECKSIGADD, b'\\x11', OP_EQUALVERIFY] * n + [OP_CHECKSIG]), n + 1),\n+    ]\n+    for annex in [None, bytes([ANNEX_TAG]) + random_bytes(random.randrange(1000))]:\n+        for hashtype in [SIGHASH_DEFAULT, SIGHASH_ALL]:\n+            for pubkey in [pubs[1], random_bytes(random.choice([x for x in range(2, 81) if x != 32]))]:\n+                for fn_num, fn in enumerate(SIGOPS_RATIO_SCRIPTS):\n+                    merkledepth = random.randrange(129)\n+\n+\n+                    def predict_sigops_ratio(n, dummy_size):\n+                        \"\"\"Predict whether spending fn(n, pubkey) with dummy_size will pass the ratio test.\"\"\"\n+                        script, sigops = fn(n, pubkey)\n+                        # Predict the size of the witness for a given choice of n\n+                        stacklen_size = 1\n+                        sig_size = 64 + (hashtype != SIGHASH_DEFAULT)\n+                        siglen_size = 1\n+                        dummylen_size = 1 + 2 * (dummy_size >= 253)\n+                        script_size = len(script)\n+                        scriptlen_size = 1 + 2 * (script_size >= 253)\n+                        control_size = 33 + 32 * merkledepth\n+                        controllen_size = 1 + 2 * (control_size >= 253)\n+                        annex_size = 0 if annex is None else len(annex)\n+                        annexlen_size = 0 if annex is None else 1 + 2 * (annex_size >= 253)\n+                        witsize = stacklen_size + sig_size + siglen_size + dummy_size + dummylen_size + script_size + scriptlen_size + control_size + controllen_size + annex_size + annexlen_size\n+                        # sigops ratio test\n+                        return witsize + 50 >= 50 * sigops\n+                    # Make sure n is high enough that with empty dummy, the script is not valid\n+                    n = 0\n+                    while predict_sigops_ratio(n, 0):\n+                        n += 1\n+                    # But allow picking a bit higher still\n+                    n += random.randrange(5)\n+                    # Now pick dummy size *just* large enough that the overall construction passes\n+                    dummylen = 0\n+                    while not predict_sigops_ratio(n, dummylen):\n+                        dummylen += 1\n+                    scripts = [(\"s\", fn(n, pubkey)[0])]\n+                    for _ in range(merkledepth):\n+                        scripts = [scripts, random.choice(PARTNER_MERKLE_FN)]\n+                    tap = taproot_construct(pubs[0], scripts)\n+                    standard = annex is None and dummylen <= 80 and len(pubkey) == 32\n+                    add_spender(spenders, \"tapscript/sigopsratio_%i\" % fn_num, tap=tap, leaf=\"s\", annex=annex, hashtype=hashtype, key=secs[1], inputs=[getter(\"sign\"), random_bytes(dummylen)], standard=standard, failure={\"inputs\": [getter(\"sign\"), random_bytes(dummylen - 1)]}, **ERR_SIGOPS_RATIO)\n+\n+    # Future leaf versions\n+    for leafver in range(0, 0x100, 2):\n+        if leafver == LEAF_VERSION_TAPSCRIPT or leafver == ANNEX_TAG:\n+            # Skip the defined LEAF_VERSION_TAPSCRIPT, and the ANNEX_TAG which is not usable as leaf version\n+            continue\n+        scripts = [\n+            (\"bare_c0\", CScript([OP_NOP])),\n+            (\"bare_unkver\", CScript([OP_NOP]), leafver),\n+            (\"return_c0\", CScript([OP_RETURN])),\n+            (\"return_unkver\", CScript([OP_RETURN]), leafver),\n+            (\"undecodable_c0\", CScript([OP_PUSHDATA1])),\n+            (\"undecodable_unkver\", CScript([OP_PUSHDATA1]), leafver),\n+            (\"bigpush_c0\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1), OP_DROP])),\n+            (\"bigpush_unkver\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1), OP_DROP]), leafver),\n+            (\"1001push_c0\", CScript([OP_0] * 1001)),\n+            (\"1001push_unkver\", CScript([OP_0] * 1001), leafver),\n+        ]\n+        random.shuffle(scripts)\n+        tap = taproot_construct(pubs[0], scripts)\n+        add_spender(spenders, \"unkver/bare\", standard=False, tap=tap, leaf=\"bare_unkver\", failure={\"leaf\": \"bare_c0\"}, **ERR_CLEANSTACK)\n+        add_spender(spenders, \"unkver/return\", standard=False, tap=tap, leaf=\"return_unkver\", failure={\"leaf\": \"return_c0\"}, **ERR_OP_RETURN)\n+        add_spender(spenders, \"unkver/undecodable\", standard=False, tap=tap, leaf=\"undecodable_unkver\", failure={\"leaf\": \"undecodable_c0\"}, **ERR_UNDECODABLE)\n+        add_spender(spenders, \"unkver/bigpush\", standard=False, tap=tap, leaf=\"bigpush_unkver\", failure={\"leaf\": \"bigpush_c0\"}, **ERR_PUSH_LIMIT)\n+        add_spender(spenders, \"unkver/1001push\", standard=False, tap=tap, leaf=\"1001push_unkver\", failure={\"leaf\": \"1001push_c0\"}, **ERR_STACK_SIZE)\n+        add_spender(spenders, \"unkver/1001inputs\", standard=False, tap=tap, leaf=\"bare_unkver\", inputs=[b'']*1001, failure={\"leaf\": \"bare_c0\"}, **ERR_STACK_SIZE)\n+\n+    # OP_SUCCESSx tests.\n+    hashtype = lambda _: random.choice(VALID_SIGHASHES_TAPROOT)\n+    for opval in range(76, 0x100):\n+        opcode = CScriptOp(opval)\n+        if not is_op_success(opcode):\n+            continue\n+        scripts = [\n+            (\"bare_success\", CScript([opcode])),\n+            (\"bare_nop\", CScript([OP_NOP])),\n+            (\"unexecif_success\", CScript([OP_0, OP_IF, opcode, OP_ENDIF])),\n+            (\"unexecif_nop\", CScript([OP_0, OP_IF, OP_NOP, OP_ENDIF])),\n+            (\"return_success\", CScript([OP_RETURN, opcode])),\n+            (\"return_nop\", CScript([OP_RETURN, OP_NOP])),\n+            (\"undecodable_success\", CScript([opcode, OP_PUSHDATA1])),\n+            (\"undecodable_nop\", CScript([OP_NOP, OP_PUSHDATA1])),\n+            (\"undecodable_bypassed_success\", CScript([OP_PUSHDATA1, OP_2, opcode])),\n+            (\"bigpush_success\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1), OP_DROP, opcode])),\n+            (\"bigpush_nop\", CScript([random_bytes(MAX_SCRIPT_ELEMENT_SIZE+1), OP_DROP, OP_NOP])),\n+            (\"1001push_success\", CScript([OP_0] * 1001 + [opcode])),\n+            (\"1001push_nop\", CScript([OP_0] * 1001 + [OP_NOP])),\n+        ]\n+        random.shuffle(scripts)\n+        tap = taproot_construct(pubs[0], scripts)\n+        add_spender(spenders, \"opsuccess/bare\", standard=False, tap=tap, leaf=\"bare_success\", failure={\"leaf\": \"bare_nop\"}, **ERR_CLEANSTACK)\n+        add_spender(spenders, \"opsuccess/exexecif\", standard=False, tap=tap, leaf=\"unexecif_success\", failure={\"leaf\": \"unexecif_nop\"}, **ERR_CLEANSTACK)\n+        add_spender(spenders, \"opsuccess/return\", standard=False, tap=tap, leaf=\"return_success\", failure={\"leaf\": \"return_nop\"}, **ERR_OP_RETURN)\n+        add_spender(spenders, \"opsuccess/undecodable\", standard=False, tap=tap, leaf=\"undecodable_success\", failure={\"leaf\": \"undecodable_nop\"}, **ERR_UNDECODABLE)\n+        add_spender(spenders, \"opsuccess/undecodable_bypass\", standard=False, tap=tap, leaf=\"undecodable_success\", failure={\"leaf\": \"undecodable_bypassed_success\"}, **ERR_UNDECODABLE)\n+        add_spender(spenders, \"opsuccess/bigpush\", standard=False, tap=tap, leaf=\"bigpush_success\", failure={\"leaf\": \"bigpush_nop\"}, **ERR_PUSH_LIMIT)\n+        add_spender(spenders, \"opsuccess/1001push\", standard=False, tap=tap, leaf=\"1001push_success\", failure={\"leaf\": \"1001push_nop\"}, **ERR_STACK_SIZE)\n+        add_spender(spenders, \"opsuccess/1001inputs\", standard=False, tap=tap, leaf=\"bare_success\", inputs=[b'']*1001, failure={\"leaf\": \"bare_nop\"}, **ERR_STACK_SIZE)\n+\n+    # Non-OP_SUCCESSx (verify that those aren't accidentally treated as OP_SUCCESSx)\n+    for opval in range(0, 0x100):\n+        opcode = CScriptOp(opval)\n+        if is_op_success(opcode):\n+            continue\n+        scripts = [\n+            (\"normal\", CScript([OP_RETURN, opcode] + [OP_NOP] * 75)),\n+            (\"op_success\", CScript([OP_RETURN, CScriptOp(0x50)]))\n+        ]\n+        tap = taproot_construct(pubs[0], scripts)\n+        add_spender(spenders, \"alwaysvalid/notsuccessx\", tap=tap, leaf=\"op_success\", inputs=[], standard=False, failure={\"leaf\": \"normal\"}) # err_msg differs based on opcode\n+\n+    # == Legacy tests ==\n+\n+    # Also add a few legacy spends into the mix, so that transactions which combine taproot and pre-taproot spends get tested too.\n+    eckey1 = ECKey()\n+    eckey1.set(generate_privkey(), True)\n+    pubkey1 = eckey1.get_pubkey().get_bytes()\n+    eckey2 = ECKey()\n+    eckey2.set(generate_privkey(), True)\n+    for p2sh in [False, True]:\n+        for witv0 in [False, True]:\n+            for hashtype in VALID_SIGHASHES_ECDSA + [random.randrange(0x04, 0x80), random.randrange(0x84, 0x100)]:\n+                standard = hashtype in VALID_SIGHASHES_ECDSA\n+                add_spender(spenders, \"legacy/pk-wrongkey\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([pubkey1, OP_CHECKSIG]), **SINGLE_SIG, key=eckey1, failure={\"key\": eckey2}, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n+                add_spender(spenders, \"legacy/pkh-sighashflip\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, pkh=pubkey1, key=eckey1, **SIGHASH_BITFLIP, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n+\n+    # Verify that OP_CHECKSIGADD wasn't accidentally added to pre-taproot validation logic.\n+    for p2sh in [False, True]:\n+        for witv0 in [False, True]:\n+            for hashtype in VALID_SIGHASHES_ECDSA + [random.randrange(0x04, 0x80), random.randrange(0x84, 0x100)]:\n+                standard = hashtype in VALID_SIGHASHES_ECDSA and (p2sh or witv0)\n+                add_spender(spenders, \"legacy/nocsa\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([OP_IF, OP_11, pubkey1, OP_CHECKSIGADD, OP_12, OP_EQUAL, OP_ELSE, pubkey1, OP_CHECKSIG, OP_ENDIF]), key=eckey1, sigops_weight=4-3*witv0, inputs=[getter(\"sign\"), b''], failure={\"inputs\": [getter(\"sign\"), b'\\x01']}, **ERR_UNDECODABLE)\n+\n+    return spenders\n+\n+def spenders_taproot_inactive():\n+    \"\"\"Spenders for testing that pre-activation Taproot rules don't apply.\"\"\"\n+\n+    spenders = []\n+\n+    sec = generate_privkey()\n+    pub, _ = compute_xonly_pubkey(sec)\n+    scripts = [\n+        (\"pk\", CScript([pub, OP_CHECKSIG])),\n+        (\"future_leaf\", CScript([pub, OP_CHECKSIG]), 0xc2),\n+        (\"op_success\", CScript([pub, OP_CHECKSIG, OP_0, OP_IF, CScriptOp(0x50), OP_ENDIF])),\n+    ]\n+    tap = taproot_construct(pub, scripts)\n+\n+    # Test that keypath spending is valid & standard if compliant, but valid and nonstandard otherwise.\n+    add_spender(spenders, \"inactive/keypath_valid\", key=sec, tap=tap)\n+    add_spender(spenders, \"inactive/keypath_invalidsig\", key=sec, tap=tap, standard=False, sighash=bitflipper(default_sighash))\n+    add_spender(spenders, \"inactive/keypath_empty\", key=sec, tap=tap, standard=False, witness=[])\n+\n+    # Same for scriptpath spending (but using future features like annex, leaf versions, or OP_SUCCESS is nonstandard).\n+    add_spender(spenders, \"inactive/scriptpath_valid\", key=sec, tap=tap, leaf=\"pk\", inputs=[getter(\"sign\")])\n+    add_spender(spenders, \"inactive/scriptpath_invalidsig\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n+    add_spender(spenders, \"inactive/scriptpath_invalidcb\", key=sec, tap=tap, leaf=\"pk\", standard=False, inputs=[getter(\"sign\")], controlblock=bitflipper(default_controlblock))\n+    add_spender(spenders, \"inactive/scriptpath_valid_unkleaf\", key=sec, tap=tap, leaf=\"future_leaf\", standard=False, inputs=[getter(\"sign\")])\n+    add_spender(spenders, \"inactive/scriptpath_invalid_unkleaf\", key=sec, tap=tap, leaf=\"future_leaf\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n+    add_spender(spenders, \"inactive/scriptpath_valid_opsuccess\", key=sec, tap=tap, leaf=\"op_success\", standard=False, inputs=[getter(\"sign\")])\n+    add_spender(spenders, \"inactive/scriptpath_valid_opsuccess\", key=sec, tap=tap, leaf=\"op_success\", standard=False, inputs=[getter(\"sign\")], sighash=bitflipper(default_sighash))\n+\n+    return spenders\n+\n+# Data type to keep track of UTXOs, where they were created, and how to spend them.\n+UTXOData = namedtuple('UTXOData', 'outpoint,output,spender')\n+\n+class TaprootTest(BitcoinTestFramework):\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def set_test_params(self):\n+        self.num_nodes = 2\n+        self.setup_clean_chain = True\n+        # Node 0 has Taproot inactive, Node 1 active.\n+        self.extra_args = [[\"-whitelist=127.0.0.1\", \"-par=1\", \"-vbparams=taproot:1:1\"], [\"-whitelist=127.0.0.1\", \"-par=1\"]]\n+\n+    def block_submit(self, node, txs, msg, err_msg, cb_pubkey=None, fees=0, sigops_weight=0, witness=False, accept=False):\n+\n+        # Deplete block of any non-tapscript sigops using a single additional 0-value coinbase output.\n+        # It is not impossible to fit enough tapscript sigops to hit the old 80k limit without\n+        # busting txin-level limits. We simply have to account for the p2pk outputs in all\n+        # transactions.\n+        extra_output_script = CScript([OP_CHECKSIG]*((MAX_BLOCK_SIGOPS_WEIGHT - sigops_weight) // WITNESS_SCALE_FACTOR))\n+\n+        block = create_block(self.tip, create_coinbase(self.lastblockheight + 1, pubkey=cb_pubkey, extra_output_script=extra_output_script, fees=fees), self.lastblocktime + 1)\n+        block.nVersion = 4\n+        for tx in txs:\n+            tx.rehash()\n+            block.vtx.append(tx)\n+        block.hashMerkleRoot = block.calc_merkle_root()\n+        witness and add_witness_commitment(block)\n+        block.rehash()\n+        block.solve()\n+        block_response = node.submitblock(block.serialize(True).hex())\n+        if err_msg is not None:\n+            assert block_response is not None and err_msg in block_response, \"Missing error message '%s' from block response '%s': %s\" % (err_msg, \"(None)\" if block_response is None else block_response, msg)\n+        if (accept):\n+            assert node.getbestblockhash() == block.hash, \"Failed to accept: %s (response: %s)\" % (msg, block_response)\n+            self.tip = block.sha256\n+            self.lastblockhash = block.hash\n+            self.lastblocktime += 1\n+            self.lastblockheight += 1\n+        else:\n+            assert node.getbestblockhash() == self.lastblockhash, \"Failed to reject: \" + msg\n+\n+    def test_spenders(self, node, spenders, input_counts):\n+        \"\"\"Run randomized tests with a number of \"spenders\".\n+\n+        Steps:\n+            1) Generate an appropriate UTXO for each spender to test spend conditions\n+            2) Generate 100 random addresses of all wallet types: pkh/sh_wpkh/wpkh\n+            3) Select random number of inputs from (1)\n+            4) Select random number of addresses from (2) as outputs\n+\n+        Each spender embodies a test; in a large randomized test, it is verified\n+        that toggling the valid argument to each lambda toggles the validity of\n+        the transaction. This is accomplished by constructing transactions consisting\n+        of all valid inputs, except one invalid one.\n+        \"\"\"\n+\n+        # Generate some coins to fund the wallet.\n+        node.generate(10)\n+\n+        # Construct a bunch of sPKs that send coins back to the host wallet\n+        self.log.info(\"- Constructing addresses for returning coins\")\n+        host_spks = []\n+        host_pubkeys = []\n+        for i in range(16):\n+            addr = node.getnewaddress(address_type=random.choice([\"legacy\", \"p2sh-segwit\", \"bech32\"]))\n+            info = node.getaddressinfo(addr)\n+            spk = bytes.fromhex(info['scriptPubKey'])\n+            host_spks.append(spk)\n+            host_pubkeys.append(bytes.fromhex(info['pubkey']))\n+\n+        # Initialize variables used by block_submit().\n+        self.lastblockhash = node.getbestblockhash()\n+        self.tip = int(self.lastblockhash, 16)\n+        block = node.getblock(self.lastblockhash)\n+        self.lastblockheight = block['height']\n+        self.lastblocktime = block['time']\n+\n+        # Create transactions spending up to 50 of the wallet's inputs, with one output for each spender, and\n+        # one change output at the end. The transaction is constructed on the Python side to enable\n+        # having multiple outputs to the same address and outputs with no assigned address. The wallet\n+        # is then asked to sign it through signrawtransactionwithwallet, and then added to a block on the\n+        # Python side (to bypass standardness rules).\n+        self.log.info(\"- Creating test UTXOs...\")\n+        random.shuffle(spenders)\n+        normal_utxos = []\n+        mismatching_utxos = [] # UTXOs with input that requires mismatching output position\n+        done = 0\n+        while done < len(spenders):\n+            # Compute how many UTXOs to create with this transaction\n+            count_this_tx = min(len(spenders) - done, (len(spenders) + 4) // 5, 10000)\n+\n+            fund_tx = CTransaction()\n+            # Add the 50 highest-value inputs\n+            unspents = node.listunspent()\n+            random.shuffle(unspents)\n+            unspents.sort(key=lambda x: -int(x[\"amount\"] * 100000000))\n+            if len(unspents) > 50:\n+                unspents = unspents[:50]\n+            random.shuffle(unspents)\n+            balance = 0\n+            for unspent in unspents:\n+                balance += int(unspent[\"amount\"] * 100000000)\n+                txid = int(unspent[\"txid\"], 16)\n+                fund_tx.vin.append(CTxIn(COutPoint(txid, int(unspent[\"vout\"])), CScript()))\n+            # Add outputs\n+            cur_progress = done / len(spenders)\n+            next_progress = (done + count_this_tx) / len(spenders)\n+            change_goal = (1.0 - 0.6 * next_progress) / (1.0 - 0.6 * cur_progress) * balance\n+            self.log.debug(\"Create %i UTXOs in a transaction spending %i inputs worth %.8f (sending ~%.8f to change)\" % (count_this_tx, len(unspents), balance * 0.00000001, change_goal * 0.00000001))\n+            for i in range(count_this_tx):\n+                avg = (balance - change_goal) / (count_this_tx - i)\n+                amount = int(random.randrange(int(avg*0.85 + 0.5), int(avg*1.15 + 0.5)) + 0.5)\n+                balance -= amount\n+                fund_tx.vout.append(CTxOut(amount, spenders[done + i].script))\n+            # Add change\n+            fund_tx.vout.append(CTxOut(balance - 10000, random.choice(host_spks)))\n+            # Ask the wallet to sign\n+            ss = BytesIO(bytes.fromhex(node.signrawtransactionwithwallet(ToHex(fund_tx))[\"hex\"]))\n+            fund_tx.deserialize(ss)\n+            # Construct UTXOData entries\n+            fund_tx.rehash()\n+            for i in range(count_this_tx):\n+                utxodata = UTXOData(outpoint=COutPoint(fund_tx.sha256, i), output=fund_tx.vout[i], spender=spenders[done])\n+                if utxodata.spender.need_vin_vout_mismatch:\n+                    mismatching_utxos.append(utxodata)\n+                else:\n+                    normal_utxos.append(utxodata)\n+                done += 1\n+            # Mine into a block\n+            self.block_submit(node, [fund_tx], \"Funding tx\", None, random.choice(host_pubkeys), 10000, MAX_BLOCK_SIGOPS_WEIGHT, True, True)\n+\n+        # Consume groups of choice(input_coins) from utxos in a tx, testing the spenders.\n+        self.log.info(\"- Running %i spending tests\" % done)\n+        random.shuffle(normal_utxos)\n+        random.shuffle(mismatching_utxos)\n+        assert(done == len(normal_utxos) + len(mismatching_utxos))\n+\n+        left = done\n+        while left:\n+            # Construct CTransaction with random nVersion, nLocktime\n+            tx = CTransaction()\n+            tx.nVersion = random.choice([1, 2, random.randint(-0x80000000, 0x7fffffff)])\n+            min_sequence = (tx.nVersion != 1 and tx.nVersion != 0) * 0x80000000  # The minimum sequence number to disable relative locktime\n+            if random.choice([True, False]):\n+                tx.nLockTime = random.randrange(LOCKTIME_THRESHOLD, self.lastblocktime - 7200)  # all absolute locktimes in the past\n+            else:\n+                tx.nLockTime = random.randrange(self.lastblockheight + 1)  # all block heights in the past\n+\n+            # Decide how many UTXOs to test with.\n+            acceptable = [n for n in input_counts if n <= left and (left - n > max(input_counts) or (left - n) in [0] + input_counts)]\n+            num_inputs = random.choice(acceptable)\n+\n+            # If we have UTXOs that require mismatching inputs/outputs left, include exactly one of those\n+            # unless there is only one normal UTXO left (as tests with mismatching UTXOs require at least one\n+            # normal UTXO to go in the first position), and we don't want to run out of normal UTXOs.\n+            input_utxos = []\n+            while len(mismatching_utxos) and (len(input_utxos) == 0 or len(normal_utxos) == 1):\n+                input_utxos.append(mismatching_utxos.pop())\n+                left -= 1\n+\n+            # Top up until we hit num_inputs (but include at least one normal UTXO always).\n+            for _ in range(max(1, num_inputs - len(input_utxos))):\n+                input_utxos.append(normal_utxos.pop())\n+                left -= 1\n+\n+            # The first input cannot require a mismatching output (as there is at least one output).\n+            while True:\n+                random.shuffle(input_utxos)\n+                if not input_utxos[0].spender.need_vin_vout_mismatch:\n+                    break\n+            first_mismatch_input = None\n+            for i in range(len(input_utxos)):\n+                if input_utxos[i].spender.need_vin_vout_mismatch:\n+                    first_mismatch_input = i\n+            assert(first_mismatch_input is None or first_mismatch_input > 0)\n+\n+            # Decide fee, and add CTxIns to tx.\n+            amount = sum(utxo.output.nValue for utxo in input_utxos)\n+            fee = min(random.randrange(MIN_FEE * 2, MIN_FEE * 4), amount - DUST_LIMIT)  # 10000-20000 sat fee\n+            in_value = amount - fee\n+            tx.vin = [CTxIn(outpoint=utxo.outpoint, nSequence=random.randint(min_sequence, 0xffffffff)) for utxo in input_utxos]\n+            tx.wit.vtxinwit = [CTxInWitness() for _ in range(len(input_utxos))]\n+            sigops_weight = sum(utxo.spender.sigops_weight for utxo in input_utxos)\n+            self.log.debug(\"Test: %s\" % (\", \".join(utxo.spender.comment for utxo in input_utxos)))\n+\n+            # Add 1 to 4 random outputs (but constrained by inputs that require mismatching outputs)\n+            num_outputs = random.choice(range(1, 1 + min(4, 4 if first_mismatch_input is None else first_mismatch_input)))\n+            assert in_value >= 0 and fee - num_outputs * DUST_LIMIT >= MIN_FEE\n+            for i in range(num_outputs):\n+                tx.vout.append(CTxOut())\n+                if in_value <= DUST_LIMIT:\n+                    tx.vout[-1].nValue = DUST_LIMIT\n+                elif i < num_outputs - 1:\n+                    tx.vout[-1].nValue = in_value\n+                else:\n+                    tx.vout[-1].nValue = random.randint(DUST_LIMIT, in_value)\n+                in_value -= tx.vout[-1].nValue\n+                tx.vout[-1].scriptPubKey = random.choice(host_spks)\n+                sigops_weight += CScript(tx.vout[-1].scriptPubKey).GetSigOpCount(False) * WITNESS_SCALE_FACTOR\n+            fee += in_value\n+            assert(fee >= 0)\n+\n+            # Select coinbase pubkey\n+            cb_pubkey = random.choice(host_pubkeys)\n+            sigops_weight += 1 * WITNESS_SCALE_FACTOR\n+\n+            # Sign each input incorrectly once on each complete signing pass, except the very last.\n+            for fail_input in list(range(len(input_utxos))) + [None]:\n+                # Skip trying to fail at spending something that can't be made to fail.\n+                if fail_input is not None and input_utxos[fail_input].spender.no_fail:\n+                    continue\n+                # Expected message with each input failure, may be None(which is ignored)\n+                expected_fail_msg = None if fail_input is None else input_utxos[fail_input].spender.err_msg\n+                # Wipe scriptSig/witness\n+                for i in range(len(input_utxos)):\n+                    tx.vin[i].scriptSig = CScript()\n+                    tx.wit.vtxinwit[i] = CTxInWitness()\n+                # Fill inputs/witnesses\n+                for i in range(len(input_utxos)):\n+                    fn = input_utxos[i].spender.sat_function\n+                    fn(tx, i, [utxo.output for utxo in input_utxos], i != fail_input)\n+                # Submit to mempool to check standardness\n+                is_standard_tx = fail_input is None and all(utxo.spender.is_standard for utxo in input_utxos) and tx.nVersion >= 1 and tx.nVersion <= 2\n+                tx.rehash()\n+                msg = ','.join(utxo.spender.comment + (\"*\" if n == fail_input else \"\") for n, utxo in enumerate(input_utxos))\n+                if is_standard_tx:\n+                    node.sendrawtransaction(tx.serialize().hex(), 0)\n+                    assert node.getmempoolentry(tx.hash) is not None, \"Failed to accept into mempool: \" + msg\n+                else:\n+                    assert_raises_rpc_error(-26, None, node.sendrawtransaction, tx.serialize().hex(), 0)\n+                # Submit in a block\n+                self.block_submit(node, [tx], msg, witness=True, accept=fail_input is None, cb_pubkey=cb_pubkey, fees=fee, sigops_weight=sigops_weight, err_msg=expected_fail_msg)\n+\n+            if (len(spenders) - left) // 200 > (len(spenders) - left - len(input_utxos)) // 200:\n+                self.log.info(\"  - %i tests done\" % (len(spenders) - left))\n+\n+        assert left == 0\n+        assert len(normal_utxos) == 0\n+        assert len(mismatching_utxos) == 0\n+        self.log.info(\"  - Done\")\n+\n+    def run_test(self):\n+        self.connect_nodes(0, 1)\n+\n+        # Post-taproot activation tests go first (pre-taproot tests' blocks are invalid post-taproot).\n+        self.log.info(\"Post-activation tests...\")\n+        self.nodes[1].generate(101)\n+        self.test_spenders(self.nodes[1], spenders_taproot_active(), input_counts=[1, 2, 2, 2, 2, 3])\n+\n+        # Transfer % of funds to pre-taproot node.\n+        addr = self.nodes[0].getnewaddress()\n+        self.nodes[1].sendtoaddress(address=addr, amount=int(self.nodes[1].getbalance() * 70000000) / 100000000)\n+        self.nodes[1].generate(1)\n+        self.sync_blocks()\n+\n+        # Pre-taproot activation tests.\n+        self.log.info(\"Pre-activation tests...\")\n+        self.test_spenders(self.nodes[0], spenders_taproot_inactive(), input_counts=[1, 2, 2, 2, 2, 3])\n+\n+\n+if __name__ == '__main__':\n+    TaprootTest().main()"
      },
      {
        "sha": "4be8b7d80b7b4aa5190d165f2c64602c09741ade",
        "filename": "test/functional/test_framework/blocktools.py",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/blocktools.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/blocktools.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/blocktools.py?ref=fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "patch": "@@ -43,7 +43,9 @@\n from .util import assert_equal\n from io import BytesIO\n \n+WITNESS_SCALE_FACTOR = 4\n MAX_BLOCK_SIGOPS = 20000\n+MAX_BLOCK_SIGOPS_WEIGHT = MAX_BLOCK_SIGOPS * WITNESS_SCALE_FACTOR\n \n # Genesis block time (regtest)\n TIME_GENESIS_BLOCK = 1296688602\n@@ -101,22 +103,31 @@ def script_BIP34_coinbase_height(height):\n     return CScript([CScriptNum(height)])\n \n \n-def create_coinbase(height, pubkey=None):\n-    \"\"\"Create a coinbase transaction, assuming no miner fees.\n+def create_coinbase(height, pubkey=None, extra_output_script=None, fees=0):\n+    \"\"\"Create a coinbase transaction.\n \n     If pubkey is passed in, the coinbase output will be a P2PK output;\n-    otherwise an anyone-can-spend output.\"\"\"\n+    otherwise an anyone-can-spend output.\n+\n+    If extra_output_script is given, make a 0-value output to that\n+    script. This is useful to pad block weight/sigops as needed. \"\"\"\n     coinbase = CTransaction()\n     coinbase.vin.append(CTxIn(COutPoint(0, 0xffffffff), script_BIP34_coinbase_height(height), 0xffffffff))\n     coinbaseoutput = CTxOut()\n     coinbaseoutput.nValue = 50 * COIN\n     halvings = int(height / 150)  # regtest\n     coinbaseoutput.nValue >>= halvings\n-    if (pubkey is not None):\n+    coinbaseoutput.nValue += fees\n+    if pubkey is not None:\n         coinbaseoutput.scriptPubKey = CScript([pubkey, OP_CHECKSIG])\n     else:\n         coinbaseoutput.scriptPubKey = CScript([OP_TRUE])\n     coinbase.vout = [coinbaseoutput]\n+    if extra_output_script is not None:\n+        coinbaseoutput2 = CTxOut()\n+        coinbaseoutput2.nValue = 0\n+        coinbaseoutput2.scriptPubKey = extra_output_script\n+        coinbase.vout.append(coinbaseoutput2)\n     coinbase.calc_sha256()\n     return coinbase\n "
      },
      {
        "sha": "91f6113a043ef741573e7500db58011de68ba5e2",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "patch": "@@ -477,7 +477,7 @@ def verify_schnorr(key, sig, msg):\n         return False\n     return True\n \n-def sign_schnorr(key, msg, aux=None):\n+def sign_schnorr(key, msg, aux=None, flip_p=False, flip_r=False):\n     \"\"\"Create a Schnorr signature (see BIP 340).\"\"\"\n \n     if aux is None:\n@@ -491,13 +491,13 @@ def sign_schnorr(key, msg, aux=None):\n     if sec == 0 or sec >= SECP256K1_ORDER:\n         return None\n     P = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, sec)]))\n-    if not SECP256K1.has_even_y(P):\n+    if SECP256K1.has_even_y(P) == flip_p:\n         sec = SECP256K1_ORDER - sec\n     t = (sec ^ int.from_bytes(TaggedHash(\"BIP0340/aux\", aux), 'big')).to_bytes(32, 'big')\n     kp = int.from_bytes(TaggedHash(\"BIP0340/nonce\", t + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n     assert(kp != 0)\n     R = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, kp)]))\n-    k = kp if SECP256K1.has_even_y(R) else SECP256K1_ORDER - kp\n+    k = kp if SECP256K1.has_even_y(R) != flip_r else SECP256K1_ORDER - kp\n     e = int.from_bytes(TaggedHash(\"BIP0340/challenge\", R[0].to_bytes(32, 'big') + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n     return R[0].to_bytes(32, 'big') + ((k + e * sec) % SECP256K1_ORDER).to_bytes(32, 'big')\n "
      },
      {
        "sha": "8e5848d49359b06e0ca168f1edf4a8a6d0fe6297",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 123,
        "deletions": 10,
        "changes": 133,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "patch": "@@ -6,11 +6,15 @@\n \n This file is modified from python-bitcoinlib.\n \"\"\"\n+\n+from collections import namedtuple\n import hashlib\n import struct\n import unittest\n from typing import List, Dict\n \n+from .key import TaggedHash, tweak_add_pubkey\n+\n from .messages import (\n     CTransaction,\n     CTxOut,\n@@ -22,8 +26,13 @@\n )\n \n MAX_SCRIPT_ELEMENT_SIZE = 520\n+LOCKTIME_THRESHOLD = 500000000\n+ANNEX_TAG = 0x50\n+\n OPCODE_NAMES = {}  # type: Dict[CScriptOp, str]\n \n+LEAF_VERSION_TAPSCRIPT = 0xc0\n+\n def hash160(s):\n     return hashlib.new('ripemd160', sha256(s)).digest()\n \n@@ -239,11 +248,8 @@ def __new__(cls, n):\n OP_NOP9 = CScriptOp(0xb8)\n OP_NOP10 = CScriptOp(0xb9)\n \n-# template matching params\n-OP_SMALLINTEGER = CScriptOp(0xfa)\n-OP_PUBKEYS = CScriptOp(0xfb)\n-OP_PUBKEYHASH = CScriptOp(0xfd)\n-OP_PUBKEY = CScriptOp(0xfe)\n+# BIP 342 opcodes (Tapscript)\n+OP_CHECKSIGADD = CScriptOp(0xba)\n \n OP_INVALIDOPCODE = CScriptOp(0xff)\n \n@@ -359,10 +365,7 @@ def __new__(cls, n):\n     OP_NOP8: 'OP_NOP8',\n     OP_NOP9: 'OP_NOP9',\n     OP_NOP10: 'OP_NOP10',\n-    OP_SMALLINTEGER: 'OP_SMALLINTEGER',\n-    OP_PUBKEYS: 'OP_PUBKEYS',\n-    OP_PUBKEYHASH: 'OP_PUBKEYHASH',\n-    OP_PUBKEY: 'OP_PUBKEY',\n+    OP_CHECKSIGADD: 'OP_CHECKSIGADD',\n     OP_INVALIDOPCODE: 'OP_INVALIDOPCODE',\n })\n \n@@ -593,6 +596,7 @@ def GetSigOpCount(self, fAccurate):\n         return n\n \n \n+SIGHASH_DEFAULT = 0 # Taproot-only default, semantics same as SIGHASH_ALL\n SIGHASH_ALL = 1\n SIGHASH_NONE = 2\n SIGHASH_SINGLE = 3\n@@ -615,7 +619,6 @@ def FindAndDelete(script, sig):\n         r += script[last_sop_idx:]\n     return CScript(r)\n \n-\n def LegacySignatureHash(script, txTo, inIdx, hashtype):\n     \"\"\"Consensus-correct SignatureHash\n \n@@ -738,3 +741,113 @@ def test_cscriptnum_encoding(self):\n         values = [0, 1, -1, -2, 127, 128, -255, 256, (1 << 15) - 1, -(1 << 16), (1 << 24) - 1, (1 << 31), 1 - (1 << 32), 1 << 40, 1500, -1500]\n         for value in values:\n             self.assertEqual(CScriptNum.decode(CScriptNum.encode(CScriptNum(value))), value)\n+\n+def TaprootSignatureHash(txTo, spent_utxos, hash_type, input_index = 0, scriptpath = False, script = CScript(), codeseparator_pos = -1, annex = None, leaf_ver = LEAF_VERSION_TAPSCRIPT):\n+    assert (len(txTo.vin) == len(spent_utxos))\n+    assert (input_index < len(txTo.vin))\n+    out_type = SIGHASH_ALL if hash_type == 0 else hash_type & 3\n+    in_type = hash_type & SIGHASH_ANYONECANPAY\n+    spk = spent_utxos[input_index].scriptPubKey\n+    ss = bytes([0, hash_type]) # epoch, hash_type\n+    ss += struct.pack(\"<i\", txTo.nVersion)\n+    ss += struct.pack(\"<I\", txTo.nLockTime)\n+    if in_type != SIGHASH_ANYONECANPAY:\n+        ss += sha256(b\"\".join(i.prevout.serialize() for i in txTo.vin))\n+        ss += sha256(b\"\".join(struct.pack(\"<q\", u.nValue) for u in spent_utxos))\n+        ss += sha256(b\"\".join(ser_string(u.scriptPubKey) for u in spent_utxos))\n+        ss += sha256(b\"\".join(struct.pack(\"<I\", i.nSequence) for i in txTo.vin))\n+    if out_type == SIGHASH_ALL:\n+        ss += sha256(b\"\".join(o.serialize() for o in txTo.vout))\n+    spend_type = 0\n+    if annex is not None:\n+        spend_type |= 1\n+    if (scriptpath):\n+        spend_type |= 2\n+    ss += bytes([spend_type])\n+    if in_type == SIGHASH_ANYONECANPAY:\n+        ss += txTo.vin[input_index].prevout.serialize()\n+        ss += struct.pack(\"<q\", spent_utxos[input_index].nValue)\n+        ss += ser_string(spk)\n+        ss += struct.pack(\"<I\", txTo.vin[input_index].nSequence)\n+    else:\n+        ss += struct.pack(\"<I\", input_index)\n+    if (spend_type & 1):\n+        ss += sha256(ser_string(annex))\n+    if out_type == SIGHASH_SINGLE:\n+        if input_index < len(txTo.vout):\n+            ss += sha256(txTo.vout[input_index].serialize())\n+        else:\n+            ss += bytes(0 for _ in range(32))\n+    if (scriptpath):\n+        ss += TaggedHash(\"TapLeaf\", bytes([leaf_ver]) + ser_string(script))\n+        ss += bytes([0])\n+        ss += struct.pack(\"<i\", codeseparator_pos)\n+    assert len(ss) ==  175 - (in_type == SIGHASH_ANYONECANPAY) * 49 - (out_type != SIGHASH_ALL and out_type != SIGHASH_SINGLE) * 32 + (annex is not None) * 32 + scriptpath * 37\n+    return TaggedHash(\"TapSighash\", ss)\n+\n+def taproot_tree_helper(scripts):\n+    if len(scripts) == 0:\n+        return ([], bytes(0 for _ in range(32)))\n+    if len(scripts) == 1:\n+        # One entry: treat as a leaf\n+        script = scripts[0]\n+        assert(not callable(script))\n+        if isinstance(script, list):\n+            return taproot_tree_helper(script)\n+        assert(isinstance(script, tuple))\n+        version = LEAF_VERSION_TAPSCRIPT\n+        name = script[0]\n+        code = script[1]\n+        if len(script) == 3:\n+            version = script[2]\n+        assert version & 1 == 0\n+        assert isinstance(code, bytes)\n+        h = TaggedHash(\"TapLeaf\", bytes([version]) + ser_string(code))\n+        if name is None:\n+            return ([], h)\n+        return ([(name, version, code, bytes())], h)\n+    elif len(scripts) == 2 and callable(scripts[1]):\n+        # Two entries, and the right one is a function\n+        left, left_h = taproot_tree_helper(scripts[0:1])\n+        right_h = scripts[1](left_h)\n+        left = [(name, version, script, control + right_h) for name, version, script, control in left]\n+        right = []\n+    else:\n+        # Two or more entries: descend into each side\n+        split_pos = len(scripts) // 2\n+        left, left_h = taproot_tree_helper(scripts[0:split_pos])\n+        right, right_h = taproot_tree_helper(scripts[split_pos:])\n+        left = [(name, version, script, control + right_h) for name, version, script, control in left]\n+        right = [(name, version, script, control + left_h) for name, version, script, control in right]\n+    if right_h < left_h:\n+        right_h, left_h = left_h, right_h\n+    h = TaggedHash(\"TapBranch\", left_h + right_h)\n+    return (left + right, h)\n+\n+TaprootInfo = namedtuple(\"TaprootInfo\", \"scriptPubKey,inner_pubkey,negflag,tweak,leaves\")\n+TaprootLeafInfo = namedtuple(\"TaprootLeafInfo\", \"script,version,merklebranch\")\n+\n+def taproot_construct(pubkey, scripts=None):\n+    \"\"\"Construct a tree of Taproot spending conditions\n+\n+    pubkey: an ECPubKey object for the internal pubkey\n+    scripts: a list of items; each item is either:\n+             - a (name, CScript) tuple\n+             - a (name, CScript, leaf version) tuple\n+             - another list of items (with the same structure)\n+             - a function, which specifies how to compute the hashing partner\n+               in function of the hash of whatever it is combined with\n+\n+    Returns: script (sPK or redeemScript), tweak, {name:(script, leaf version, negation flag, innerkey, merklepath), ...}\n+    \"\"\"\n+    if scripts is None:\n+        scripts = []\n+\n+    ret, h = taproot_tree_helper(scripts)\n+    tweak = TaggedHash(\"TapTweak\", pubkey + h)\n+    tweaked, negated = tweak_add_pubkey(pubkey, tweak)\n+    leaves = dict((name, TaprootLeafInfo(script, version, merklebranch)) for name, version, script, merklebranch in ret)\n+    return TaprootInfo(CScript([OP_1, tweaked]), pubkey, negated + 0, tweak, leaves)\n+\n+def is_op_success(o):\n+    return o == 0x50 or o == 0x62 or o == 0x89 or o == 0x8a or o == 0x8d or o == 0x8e or (o >= 0x7e and o <= 0x81) or (o >= 0x83 and o <= 0x86) or (o >= 0x95 and o <= 0x99) or (o >= 0xbb and o <= 0xfe)"
      },
      {
        "sha": "e70485f7433f17c43997a042249e21b755a09bfc",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6e288349f8852dd865b4d7b270425a14ec06c6/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "patch": "@@ -106,6 +106,7 @@\n     'mempool_updatefromblock.py',\n     'wallet_dump.py',\n     'wallet_listtransactions.py',\n+    'feature_taproot.py',\n     # vv Tests less than 60s vv\n     'p2p_sendheaders.py',\n     'wallet_importmulti.py',"
      }
    ]
  },
  {
    "sha": "64030b1152abb90f45027b7711f6d1eb494683a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDAzMGIxMTUyYWJiOTBmNDUwMjdiNzcxMWY2ZDFlYjQ5NDY4M2Ez",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-16T04:00:43Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T20:35:42Z"
      },
      "message": "[TESTS] Add minimized test vector as unit test\n\nThis adds a relatively small set of test cases for the BIP341/BIP342\nscript validation rules as a unit test. The tests were generated by\nmodifying the feature_taproot.py randomized tester to dump the\nconstructed transactions and witnesses used, and using the fuzzing\nframework to minimize it.",
      "tree": {
        "sha": "03166a3b86a7dc540dd06634a51239ae956c569b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03166a3b86a7dc540dd06634a51239ae956c569b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64030b1152abb90f45027b7711f6d1eb494683a3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64030b1152abb90f45027b7711f6d1eb494683a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64030b1152abb90f45027b7711f6d1eb494683a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64030b1152abb90f45027b7711f6d1eb494683a3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6e288349f8852dd865b4d7b270425a14ec06c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6e288349f8852dd865b4d7b270425a14ec06c6"
      }
    ],
    "stats": {
      "total": 189,
      "additions": 186,
      "deletions": 3
    },
    "files": [
      {
        "sha": "1ff800c2f37ec6de708b06ec9b0cf541db16ae05",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64030b1152abb90f45027b7711f6d1eb494683a3/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64030b1152abb90f45027b7711f6d1eb494683a3/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=64030b1152abb90f45027b7711f6d1eb494683a3",
        "patch": "@@ -169,6 +169,7 @@ JSON_TEST_FILES = \\\n   test/data/blockfilters.json \\\n   test/data/key_io_valid.json \\\n   test/data/key_io_invalid.json \\\n+  test/data/script_taproot_tests.json \\\n   test/data/script_tests.json \\\n   test/data/sighash.json \\\n   test/data/tx_invalid.json \\"
      },
      {
        "sha": "5483424cf244961ea716c756632f7ed20edd445e",
        "filename": "src/test/data/script_taproot_tests.json",
        "status": "added",
        "additions": 107,
        "deletions": 0,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64030b1152abb90f45027b7711f6d1eb494683a3/src/test/data/script_taproot_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64030b1152abb90f45027b7711f6d1eb494683a3/src/test/data/script_taproot_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_taproot_tests.json?ref=64030b1152abb90f45027b7711f6d1eb494683a3"
      },
      {
        "sha": "fe79a840ae4d1e74e84a2191ffc23f5683f8de20",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 78,
        "deletions": 3,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64030b1152abb90f45027b7711f6d1eb494683a3/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64030b1152abb90f45027b7711f6d1eb494683a3/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=64030b1152abb90f45027b7711f6d1eb494683a3",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <test/data/script_tests.json.h>\n+#include <test/data/script_taproot_tests.json.h>\n \n #include <core_io.h>\n #include <key.h>\n@@ -1339,13 +1340,41 @@ BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n     BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n }\n \n-static CScript\n-ScriptFromHex(const char* hex)\n+static CScript ScriptFromHex(const std::string& str)\n {\n-    std::vector<unsigned char> data = ParseHex(hex);\n+    std::vector<unsigned char> data = ParseHex(str);\n     return CScript(data.begin(), data.end());\n }\n \n+static CMutableTransaction TxFromHex(const std::string& str)\n+{\n+    CMutableTransaction tx;\n+    VectorReader(SER_DISK, SERIALIZE_TRANSACTION_NO_WITNESS, ParseHex(str), 0) >> tx;\n+    return tx;\n+}\n+\n+static std::vector<CTxOut> TxOutsFromJSON(const UniValue& univalue)\n+{\n+    assert(univalue.isArray());\n+    std::vector<CTxOut> prevouts;\n+    for (size_t i = 0; i < univalue.size(); ++i) {\n+        CTxOut txout;\n+        VectorReader(SER_DISK, 0, ParseHex(univalue[i].get_str()), 0) >> txout;\n+        prevouts.push_back(std::move(txout));\n+    }\n+    return prevouts;\n+}\n+\n+static CScriptWitness ScriptWitnessFromJSON(const UniValue& univalue)\n+{\n+    assert(univalue.isArray());\n+    CScriptWitness scriptwitness;\n+    for (size_t i = 0; i < univalue.size(); ++i) {\n+        auto bytes = ParseHex(univalue[i].get_str());\n+        scriptwitness.stack.push_back(std::move(bytes));\n+    }\n+    return scriptwitness;\n+}\n \n BOOST_AUTO_TEST_CASE(script_FindAndDelete)\n {\n@@ -1470,6 +1499,7 @@ BOOST_AUTO_TEST_CASE(script_HasValidOps)\n     BOOST_CHECK(!script.HasValidOps());\n }\n \n+\n #if defined(HAVE_CONSENSUS_LIB)\n \n /* Test simple (successful) usage of bitcoinconsensus_verify_script */\n@@ -1610,5 +1640,50 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_invalid_flags)\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_INVALID_FLAGS);\n }\n \n+BOOST_AUTO_TEST_CASE(script_taproot)\n+{\n+    UniValue tests = read_json(std::string(std::begin(json_tests::script_taproot_tests), std::end(json_tests::script_taproot_tests)));\n+\n+    static constexpr unsigned int VERIFY_FLAGS =\n+        SCRIPT_VERIFY_P2SH |\n+        SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY |\n+        SCRIPT_VERIFY_CHECKSEQUENCEVERIFY |\n+        SCRIPT_VERIFY_WITNESS |\n+        SCRIPT_VERIFY_NULLFAIL |\n+        SCRIPT_VERIFY_TAPROOT;\n+\n+    for (size_t i = 0; i < tests.size(); i++) {\n+        const UniValue& test = tests[i];\n+\n+        CMutableTransaction tx = TxFromHex(test[\"tx\"].get_str());\n+        const std::vector<CTxOut> prevouts = TxOutsFromJSON(test[\"prevouts\"]);\n+        BOOST_CHECK_EQUAL(prevouts.size(), tx.vin.size());\n+        size_t idx = test[\"index\"].get_int64();\n+        CScript success_scriptsig = ScriptFromHex(test[\"success\"][\"scriptSig\"].get_str());\n+        CScriptWitness success_witness = ScriptWitnessFromJSON(test[\"success\"][\"witness\"]);\n+        CScript failure_scriptsig = ScriptFromHex(test[\"failure\"][\"scriptSig\"].get_str());\n+        CScriptWitness failure_witness = ScriptWitnessFromJSON(test[\"failure\"][\"witness\"]);\n+\n+        // Successful scriptSig/witness\n+        {\n+            tx.vin[idx].scriptSig = std::move(success_scriptsig);\n+            tx.vin[idx].scriptWitness = std::move(success_witness);\n+            PrecomputedTransactionData txdata;\n+            txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+            MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n+            BOOST_CHECK(VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, VERIFY_FLAGS, txcheck, nullptr));\n+        }\n+        // Failing scriptSig/witness\n+        {\n+            tx.vin[idx].scriptSig = std::move(failure_scriptsig);\n+            tx.vin[idx].scriptWitness = std::move(failure_witness);\n+            PrecomputedTransactionData txdata;\n+            txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+            MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n+            BOOST_CHECK(!VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, VERIFY_FLAGS, txcheck, nullptr));\n+        }\n+    }\n+}\n+\n #endif\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "33b6a13c869a27b0c1d23a62a90520b752dc8505",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2I2YTEzYzg2OWEyN2IwYzFkMjNhNjJhOTA1MjBiNzUyZGM4NTA1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:18:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:18:53Z"
      },
      "message": "--- [TAPROOT] Updates 2020-09-22 ---",
      "tree": {
        "sha": "03166a3b86a7dc540dd06634a51239ae956c569b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03166a3b86a7dc540dd06634a51239ae956c569b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33b6a13c869a27b0c1d23a62a90520b752dc8505",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b6a13c869a27b0c1d23a62a90520b752dc8505",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33b6a13c869a27b0c1d23a62a90520b752dc8505",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b6a13c869a27b0c1d23a62a90520b752dc8505/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64030b1152abb90f45027b7711f6d1eb494683a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64030b1152abb90f45027b7711f6d1eb494683a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64030b1152abb90f45027b7711f6d1eb494683a3"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjUyNzJjZjVjNjAxZjEyYjNjNGFhZGRiMmU4Nzk1YzIzYWYzMjVl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:22:11Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:40:37Z"
      },
      "message": "Document length assumption in XOnlyPubKey::VerifySchnorr correctly",
      "tree": {
        "sha": "d834ab65a16c48e1f9408ad1a23a3a32718a63ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d834ab65a16c48e1f9408ad1a23a3a32718a63ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f5272cf5c601f12b3c4aaddb2e8795c23af325e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33b6a13c869a27b0c1d23a62a90520b752dc8505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33b6a13c869a27b0c1d23a62a90520b752dc8505",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33b6a13c869a27b0c1d23a62a90520b752dc8505"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "bf1305cced0e281e07a2b49110908c9ae215ac8e",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f5272cf5c601f12b3c4aaddb2e8795c23af325e/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f5272cf5c601f12b3c4aaddb2e8795c23af325e/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
        "patch": "@@ -215,9 +215,9 @@ class XOnlyPubKey {\n     /** Construct an x-only pubkey from exactly 32 bytes. */\n     XOnlyPubKey(Span<const unsigned char> input);\n \n-    /** Verify a 64-byte Schnorr signature.\n+    /** Verify a Schnorr signature against this public key.\n      *\n-     * If the signature is not exactly 64 bytes, false is returned.\n+     * sigbytes must be exactly 64 bytes.\n      */\n     bool VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const;\n     bool CheckPayToContract(const XOnlyPubKey& base, const uint256& hash, bool parity) const;"
      }
    ]
  },
  {
    "sha": "672b1af9c2063273075a1315ea69c1db75cea2a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NzJiMWFmOWMyMDYzMjczMDc1YTEzMTVlYTY5YzFkYjc1Y2VhMmE2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:40:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:41:13Z"
      },
      "message": "Make IsOpSuccess match BIP text more closely",
      "tree": {
        "sha": "f40d07d13aefed327a85ae115954b382f3fef836",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f40d07d13aefed327a85ae115954b382f3fef836"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/672b1af9c2063273075a1315ea69c1db75cea2a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/672b1af9c2063273075a1315ea69c1db75cea2a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/672b1af9c2063273075a1315ea69c1db75cea2a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/672b1af9c2063273075a1315ea69c1db75cea2a6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f5272cf5c601f12b3c4aaddb2e8795c23af325e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f5272cf5c601f12b3c4aaddb2e8795c23af325e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f31472e42d99cc9d21b0016978279b065ef55322",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/672b1af9c2063273075a1315ea69c1db75cea2a6/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/672b1af9c2063273075a1315ea69c1db75cea2a6/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=672b1af9c2063273075a1315ea69c1db75cea2a6",
        "patch": "@@ -334,8 +334,8 @@ bool GetScriptOp(CScriptBase::const_iterator& pc, CScriptBase::const_iterator en\n \n bool IsOpSuccess(const opcodetype& opcode)\n {\n-    return (opcode == 0x50 || opcode == 0x62 || opcode == 0x89 ||\n-            opcode == 0x8a || opcode == 0x8d || opcode == 0x8e ||\n-            (opcode >= 0x7e && opcode <= 0x81) || (opcode >= 0x83 && opcode <= 0x86) ||\n-            (opcode >= 0x95 && opcode <= 0x99) || (opcode >= 0xbb && opcode <= 0xfe));\n-}\n\\ No newline at end of file\n+    return opcode == 80 || opcode == 98 || (opcode >= 126 && opcode <= 129) ||\n+           (opcode >= 131 && opcode <= 134) || (opcode >= 137 && opcode <= 138) ||\n+           (opcode >= 141 && opcode <= 142) || (opcode >= 149 && opcode <= 153) ||\n+           (opcode >= 187 && opcode <= 254);\n+}"
      },
      {
        "sha": "b29c583375ce46291aadf0705e1c049e83e83b71",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/672b1af9c2063273075a1315ea69c1db75cea2a6/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/672b1af9c2063273075a1315ea69c1db75cea2a6/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=672b1af9c2063273075a1315ea69c1db75cea2a6",
        "patch": "@@ -569,6 +569,7 @@ struct CScriptWitness\n     std::string ToString() const;\n };\n \n+/** Test for OP_SUCCESSx opcodes as defined by BIP342. */\n bool IsOpSuccess(const opcodetype& opcode);\n \n #endif // BITCOIN_SCRIPT_SCRIPT_H"
      }
    ]
  },
  {
    "sha": "c22d75b70251b322cd7c22aafacc253eca859b5c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjJkNzViNzAyNTFiMzIyY2Q3YzIyYWFmYWNjMjUzZWNhODU5YjVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:42:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:42:44Z"
      },
      "message": "Use OP_SUCCESSx instead of SUCCESSx in error message",
      "tree": {
        "sha": "b741528438a21df6de4647d7c94529f394009b0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b741528438a21df6de4647d7c94529f394009b0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c22d75b70251b322cd7c22aafacc253eca859b5c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c22d75b70251b322cd7c22aafacc253eca859b5c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c22d75b70251b322cd7c22aafacc253eca859b5c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c22d75b70251b322cd7c22aafacc253eca859b5c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "672b1af9c2063273075a1315ea69c1db75cea2a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/672b1af9c2063273075a1315ea69c1db75cea2a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/672b1af9c2063273075a1315ea69c1db75cea2a6"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d7e3a066ff07a227395713a9ac3958790677721d",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c22d75b70251b322cd7c22aafacc253eca859b5c/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c22d75b70251b322cd7c22aafacc253eca859b5c/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=c22d75b70251b322cd7c22aafacc253eca859b5c",
        "patch": "@@ -76,7 +76,7 @@ std::string ScriptErrorString(const ScriptError serror)\n         case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_TAPROOT_VERSION:\n             return \"Taproot version reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_DISCOURAGE_OP_SUCCESS:\n-            return \"SUCCESSx reserved for soft-fork upgrades\";\n+            return \"OP_SUCCESSx reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_DISCOURAGE_UPGRADABLE_PUBKEYTYPE:\n             return \"Public key version reserved for soft-fork upgrades\";\n         case SCRIPT_ERR_PUBKEYTYPE:"
      }
    ]
  },
  {
    "sha": "550edc05e53305934a3339230a6b5822da1f8d80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTBlZGMwNWU1MzMwNTkzNGEzMzM5MjMwYTZiNTgyMmRhMWY4ZDgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:59:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T21:59:01Z"
      },
      "message": "Simplify/clarify tweak_add_{priv,pub}_key in tests",
      "tree": {
        "sha": "cd415d7956d0a287bdbcc029e8d9ebf8f849ffab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd415d7956d0a287bdbcc029e8d9ebf8f849ffab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/550edc05e53305934a3339230a6b5822da1f8d80",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/550edc05e53305934a3339230a6b5822da1f8d80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/550edc05e53305934a3339230a6b5822da1f8d80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/550edc05e53305934a3339230a6b5822da1f8d80/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c22d75b70251b322cd7c22aafacc253eca859b5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c22d75b70251b322cd7c22aafacc253eca859b5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c22d75b70251b322cd7c22aafacc253eca859b5c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6f06e591aafe03ce28be0c7690fd76da4900dd1a",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/550edc05e53305934a3339230a6b5822da1f8d80/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/550edc05e53305934a3339230a6b5822da1f8d80/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=550edc05e53305934a3339230a6b5822da1f8d80",
        "patch": "@@ -225,8 +225,7 @@ def default_key_tweaked(ctx):\n     if tweak is None:\n         return key\n     else:\n-        _, negated = compute_xonly_pubkey(key)\n-        return tweak_add_privkey(key, tweak, negated)\n+        return tweak_add_privkey(key, tweak)\n \n def default_signature(ctx):\n     \"\"\"Default expression for \"signature\": BIP340 signature or ECDSA signature depending on mode.\"\"\""
      },
      {
        "sha": "6af720be0b8a22cea3b2e6c2d725124876ec1b00",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/550edc05e53305934a3339230a6b5822da1f8d80/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/550edc05e53305934a3339230a6b5822da1f8d80/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=550edc05e53305934a3339230a6b5822da1f8d80",
        "patch": "@@ -105,7 +105,7 @@ def is_x_coord(self, x):\n         return jacobi_symbol(x_3 + self.a * x + self.b, self.p) != -1\n \n     def lift_x(self, x):\n-        \"\"\"Given an X coordinate on the curve, return a corresponding affine point for which the y-coordinate is even.\"\"\"\n+        \"\"\"Given an X coordinate on the curve, return a corresponding affine point for which the Y coordinate is even.\"\"\"\n         x_3 = pow(x, 3, self.p)\n         v = x_3 + self.a * x + self.b\n         y = modsqrt(v, self.p)\n@@ -407,16 +407,16 @@ def compute_xonly_pubkey(key):\n     P = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, x)]))\n     return (P[0].to_bytes(32, 'big'), not SECP256K1.has_even_y(P))\n \n-def tweak_add_privkey(key, tweak, negated=False):\n-    \"\"\"Tweak a private key (after optionally negating it).\"\"\"\n+def tweak_add_privkey(key, tweak):\n+    \"\"\"Tweak a private key (after negating it if needed).\"\"\"\n \n     assert(len(key) == 32)\n     assert(len(tweak) == 32)\n \n     x = int.from_bytes(key, 'big')\n     if x == 0 or x >= SECP256K1_ORDER:\n         return None\n-    if negated:\n+    if not SECP256K1.has_even_y(SECP256K1.mul([(SECP256K1_G, x)])):\n        x = SECP256K1_ORDER - x\n     t = int.from_bytes(tweak, 'big')\n     if t >= SECP256K1_ORDER:\n@@ -427,7 +427,7 @@ def tweak_add_privkey(key, tweak, negated=False):\n     return x.to_bytes(32, 'big')\n \n def tweak_add_pubkey(key, tweak):\n-    \"\"\"Tweak a public key and return whether the result was negated.\"\"\"\n+    \"\"\"Tweak a public key and return whether the result had to be negated.\"\"\"\n \n     assert(len(key) == 32)\n     assert(len(tweak) == 32)"
      }
    ]
  },
  {
    "sha": "076dfd97a37678fb7fe818f94e37ede6b5d6048d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzZkZmQ5N2EzNzY3OGZiN2ZlODE4Zjk0ZTM3ZWRlNmI1ZDYwNDhk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T22:01:29Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-22T22:01:29Z"
      },
      "message": "Python assert does not need parens",
      "tree": {
        "sha": "aaec5c4fafeb3b56315b2640a8bfbdd60fda8724",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaec5c4fafeb3b56315b2640a8bfbdd60fda8724"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/076dfd97a37678fb7fe818f94e37ede6b5d6048d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/076dfd97a37678fb7fe818f94e37ede6b5d6048d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/076dfd97a37678fb7fe818f94e37ede6b5d6048d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/076dfd97a37678fb7fe818f94e37ede6b5d6048d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "550edc05e53305934a3339230a6b5822da1f8d80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/550edc05e53305934a3339230a6b5822da1f8d80",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/550edc05e53305934a3339230a6b5822da1f8d80"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 23,
      "deletions": 23
    },
    "files": [
      {
        "sha": "d0457a71edc6e25498d982d8fda4e3675b649f99",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/076dfd97a37678fb7fe818f94e37ede6b5d6048d/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/076dfd97a37678fb7fe818f94e37ede6b5d6048d/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=076dfd97a37678fb7fe818f94e37ede6b5d6048d",
        "patch": "@@ -445,11 +445,11 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     # Compute scriptPubKey and set useful defaults based on the inputs.\n     if witv0:\n-        assert(tap is None)\n+        assert tap is None\n         conf[\"mode\"] = \"witv0\"\n         if pkh is not None:\n             # P2WPKH\n-            assert(script is None)\n+            assert script is None\n             pubkeyhash = hash160(pkh)\n             spk = CScript([OP_0, pubkeyhash])\n             conf[\"scriptcode\"] = CScript([OP_DUP, OP_HASH160, pubkeyhash, OP_EQUALVERIFY, OP_CHECKSIG])\n@@ -466,7 +466,7 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n         conf[\"mode\"] = \"legacy\"\n         if pkh is not None:\n             # P2PKH\n-            assert(script is None)\n+            assert script is None\n             pubkeyhash = hash160(pkh)\n             spk = CScript([OP_DUP, OP_HASH160, pubkeyhash, OP_EQUALVERIFY, OP_CHECKSIG])\n             conf[\"scriptcode\"] = spk\n@@ -478,7 +478,7 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n         else:\n             assert False\n     else:\n-        assert(script is None)\n+        assert script is None\n         conf[\"mode\"] = \"taproot\"\n         conf[\"tap\"] = tap\n         spk = tap.scriptPubKey\n@@ -497,7 +497,7 @@ def sat_fn(tx, idx, utxos, valid):\n         if valid:\n             spend(tx, idx, utxos, **conf)\n         else:\n-            assert(failure is not None)\n+            assert failure is not None\n             spend(tx, idx, utxos, **{**conf, **failure})\n \n     return Spender(script=spk, comment=comment, is_standard=standard, sat_function=sat_fn, err_msg=err_msg, sigops_weight=sigops_weight, no_fail=failure is None, need_vin_vout_mismatch=need_vin_vout_mismatch)\n@@ -722,7 +722,7 @@ def spenders_taproot_active():\n             for witlen in [20, 31, 32, 33]:\n                 def mutate(spk):\n                     prog = spk[2:]\n-                    assert(len(prog) == 32)\n+                    assert len(prog) == 32\n                     if witlen < 32:\n                         prog = prog[0:witlen]\n                     elif witlen > 32:\n@@ -1271,7 +1271,7 @@ def test_spenders(self, node, spenders, input_counts):\n         self.log.info(\"- Running %i spending tests\" % done)\n         random.shuffle(normal_utxos)\n         random.shuffle(mismatching_utxos)\n-        assert(done == len(normal_utxos) + len(mismatching_utxos))\n+        assert done == len(normal_utxos) + len(mismatching_utxos)\n \n         left = done\n         while left:\n@@ -1310,7 +1310,7 @@ def test_spenders(self, node, spenders, input_counts):\n             for i in range(len(input_utxos)):\n                 if input_utxos[i].spender.need_vin_vout_mismatch:\n                     first_mismatch_input = i\n-            assert(first_mismatch_input is None or first_mismatch_input > 0)\n+            assert first_mismatch_input is None or first_mismatch_input > 0\n \n             # Decide fee, and add CTxIns to tx.\n             amount = sum(utxo.output.nValue for utxo in input_utxos)\n@@ -1336,7 +1336,7 @@ def test_spenders(self, node, spenders, input_counts):\n                 tx.vout[-1].scriptPubKey = random.choice(host_spks)\n                 sigops_weight += CScript(tx.vout[-1].scriptPubKey).GetSigOpCount(False) * WITNESS_SCALE_FACTOR\n             fee += in_value\n-            assert(fee >= 0)\n+            assert fee >= 0\n \n             # Select coinbase pubkey\n             cb_pubkey = random.choice(host_pubkeys)"
      },
      {
        "sha": "ad45012fd2bddb40c168d7428c962032f70844b4",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/076dfd97a37678fb7fe818f94e37ede6b5d6048d/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/076dfd97a37678fb7fe818f94e37ede6b5d6048d/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=076dfd97a37678fb7fe818f94e37ede6b5d6048d",
        "patch": "@@ -400,7 +400,7 @@ def compute_xonly_pubkey(key):\n     This also returns whether the resulting public key was negated.\n     \"\"\"\n \n-    assert(len(key) == 32)\n+    assert len(key) == 32\n     x = int.from_bytes(key, 'big')\n     if x == 0 or x >= SECP256K1_ORDER:\n         return (None, None)\n@@ -410,8 +410,8 @@ def compute_xonly_pubkey(key):\n def tweak_add_privkey(key, tweak):\n     \"\"\"Tweak a private key (after negating it if needed).\"\"\"\n \n-    assert(len(key) == 32)\n-    assert(len(tweak) == 32)\n+    assert len(key) == 32\n+    assert len(tweak) == 32\n \n     x = int.from_bytes(key, 'big')\n     if x == 0 or x >= SECP256K1_ORDER:\n@@ -429,8 +429,8 @@ def tweak_add_privkey(key, tweak):\n def tweak_add_pubkey(key, tweak):\n     \"\"\"Tweak a public key and return whether the result had to be negated.\"\"\"\n \n-    assert(len(key) == 32)\n-    assert(len(tweak) == 32)\n+    assert len(key) == 32\n+    assert len(tweak) == 32\n \n     x_coord = int.from_bytes(key, 'big')\n     if x_coord >= SECP256K1_FIELD_SIZE:\n@@ -453,9 +453,9 @@ def verify_schnorr(key, sig, msg):\n     - sig is a 64-byte Schnorr signature\n     - msg is a 32-byte message\n     \"\"\"\n-    assert(len(key) == 32)\n-    assert(len(msg) == 32)\n-    assert(len(sig) == 64)\n+    assert len(key) == 32\n+    assert len(msg) == 32\n+    assert len(sig) == 64\n \n     x_coord = int.from_bytes(key, 'big')\n     if x_coord == 0 or x_coord >= SECP256K1_FIELD_SIZE:\n@@ -481,11 +481,11 @@ def sign_schnorr(key, msg, aux=None, flip_p=False, flip_r=False):\n     \"\"\"Create a Schnorr signature (see BIP 340).\"\"\"\n \n     if aux is None:\n-        aux = bytes(0 for _ in range(32))\n+        aux = bytes(32)\n \n-    assert(len(key) == 32)\n-    assert(len(msg) == 32)\n-    assert(len(aux) == 32)\n+    assert len(key) == 32\n+    assert len(msg) == 32\n+    assert len(aux) == 32\n \n     sec = int.from_bytes(key, 'big')\n     if sec == 0 or sec >= SECP256K1_ORDER:\n@@ -495,7 +495,7 @@ def sign_schnorr(key, msg, aux=None, flip_p=False, flip_r=False):\n         sec = SECP256K1_ORDER - sec\n     t = (sec ^ int.from_bytes(TaggedHash(\"BIP0340/aux\", aux), 'big')).to_bytes(32, 'big')\n     kp = int.from_bytes(TaggedHash(\"BIP0340/nonce\", t + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n-    assert(kp != 0)\n+    assert kp != 0\n     R = SECP256K1.affine(SECP256K1.mul([(SECP256K1_G, kp)]))\n     k = kp if SECP256K1.has_even_y(R) != flip_r else SECP256K1_ORDER - kp\n     e = int.from_bytes(TaggedHash(\"BIP0340/challenge\", R[0].to_bytes(32, 'big') + P[0].to_bytes(32, 'big') + msg), 'big') % SECP256K1_ORDER\n@@ -526,7 +526,7 @@ def test_schnorr_testvectors(self):\n         num_tests = 0\n         with open(os.path.join(sys.path[0], 'test_framework', 'bip340_test_vectors.csv'), newline='', encoding='utf8') as csvfile:\n             reader = csv.reader(csvfile)\n-            reader.__next__()\n+            next(reader)\n             for row in reader:\n                 (i_str, seckey_hex, pubkey_hex, aux_rand_hex, msg_hex, sig_hex, result_str, comment) = row\n                 i = int(i_str)"
      }
    ]
  },
  {
    "sha": "388928824ee33eb8a3aed709f0626f40fa562e15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODg5Mjg4MjRlZTMzZWI4YTNhZWQ3MDlmMDYyNmY0MGZhNTYyZTE1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T01:08:50Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T01:08:50Z"
      },
      "message": "--- [TAPROOT] Update: test vectors in qa-assets ---",
      "tree": {
        "sha": "aaec5c4fafeb3b56315b2640a8bfbdd60fda8724",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aaec5c4fafeb3b56315b2640a8bfbdd60fda8724"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/388928824ee33eb8a3aed709f0626f40fa562e15",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/388928824ee33eb8a3aed709f0626f40fa562e15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/388928824ee33eb8a3aed709f0626f40fa562e15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/388928824ee33eb8a3aed709f0626f40fa562e15/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "076dfd97a37678fb7fe818f94e37ede6b5d6048d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/076dfd97a37678fb7fe818f94e37ede6b5d6048d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/076dfd97a37678fb7fe818f94e37ede6b5d6048d"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "00d8575ffcbc502eed122d55df98f9004195a280",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMGQ4NTc1ZmZjYmM1MDJlZWQxMjJkNTVkZjk4ZjkwMDQxOTVhMjgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T01:10:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T19:23:40Z"
      },
      "message": "Always clone qa-assets repo in CI, but shallowly",
      "tree": {
        "sha": "98f6c3c2bc9a44a11459fbaaf216a35390aedc85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98f6c3c2bc9a44a11459fbaaf216a35390aedc85"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/00d8575ffcbc502eed122d55df98f9004195a280",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d8575ffcbc502eed122d55df98f9004195a280",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/00d8575ffcbc502eed122d55df98f9004195a280",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d8575ffcbc502eed122d55df98f9004195a280/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "388928824ee33eb8a3aed709f0626f40fa562e15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/388928824ee33eb8a3aed709f0626f40fa562e15",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/388928824ee33eb8a3aed709f0626f40fa562e15"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d9c47adf870bec449df2c3da3c8db2991bc76fea",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/00d8575ffcbc502eed122d55df98f9004195a280/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/00d8575ffcbc502eed122d55df98f9004195a280/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=00d8575ffcbc502eed122d55df98f9004195a280",
        "patch": "@@ -81,9 +81,7 @@ else\n fi\n \n if [ ! -d ${DIR_QA_ASSETS} ]; then\n- if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n-  DOCKER_EXEC git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n- fi\n+  DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n fi\n export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n "
      }
    ]
  },
  {
    "sha": "35fc47be3600b65d9f6b782cc7f49186c166b63e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWZjNDdiZTM2MDBiNjVkOWY2Yjc4MmNjN2Y0OTE4NmMxNjZiNjNl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T02:31:37Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T19:23:40Z"
      },
      "message": "Improve script unit test and use qa-assets JSON",
      "tree": {
        "sha": "ab69b28d488c4677c5d082fd7241868032f5a754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab69b28d488c4677c5d082fd7241868032f5a754"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35fc47be3600b65d9f6b782cc7f49186c166b63e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35fc47be3600b65d9f6b782cc7f49186c166b63e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35fc47be3600b65d9f6b782cc7f49186c166b63e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35fc47be3600b65d9f6b782cc7f49186c166b63e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "00d8575ffcbc502eed122d55df98f9004195a280",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/00d8575ffcbc502eed122d55df98f9004195a280",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/00d8575ffcbc502eed122d55df98f9004195a280"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 97,
      "deletions": 40
    },
    "files": [
      {
        "sha": "632bccf574bd5f4a2cfa56aca30c821b9208ca0e",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35fc47be3600b65d9f6b782cc7f49186c166b63e/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35fc47be3600b65d9f6b782cc7f49186c166b63e/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "patch": "@@ -84,6 +84,7 @@ if [ ! -d ${DIR_QA_ASSETS} ]; then\n   DOCKER_EXEC git clone --depth=1 https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n fi\n export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+export DIR_UNIT_TEST_DATA=${DIR_QA_ASSETS}/unit_test_data/\n \n DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n "
      },
      {
        "sha": "607a2820dd578c10abdc52570e5f34f328ae5372",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35fc47be3600b65d9f6b782cc7f49186c166b63e/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35fc47be3600b65d9f6b782cc7f49186c166b63e/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "patch": "@@ -23,13 +23,13 @@ fi\n \n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n   END_FOLD\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests-seq\n-  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n+  DOCKER_EXEC DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib \"${BASE_BUILD_DIR}/bitcoin-*/src/test/test_bitcoin*\" --catch_system_errors=no -l test_suite\n   END_FOLD\n fi\n "
      },
      {
        "sha": "dea444f17dca6cfc86b8008ebdd3a06e46080582",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 93,
        "deletions": 38,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35fc47be3600b65d9f6b782cc7f49186c166b63e/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35fc47be3600b65d9f6b782cc7f49186c166b63e/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "patch": "@@ -3,13 +3,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <test/data/script_tests.json.h>\n-#include <test/data/script_taproot_tests.json.h>\n \n #include <core_io.h>\n+#include <fs.h>\n #include <key.h>\n #include <rpc/util.h>\n #include <script/script.h>\n #include <script/script_error.h>\n+#include <script/sigcache.h>\n #include <script/sign.h>\n #include <script/signingprovider.h>\n #include <streams.h>\n@@ -1640,50 +1641,104 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_invalid_flags)\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_INVALID_FLAGS);\n }\n \n-BOOST_AUTO_TEST_CASE(script_taproot)\n+static std::vector<unsigned int> AllConsensusFlags()\n {\n-    UniValue tests = read_json(std::string(std::begin(json_tests::script_taproot_tests), std::end(json_tests::script_taproot_tests)));\n+    std::vector<unsigned int> ret;\n+\n+    for (unsigned int i = 0; i < 128; ++i) {\n+        unsigned int flag = 0;\n+        if (i & 1) flag |= SCRIPT_VERIFY_P2SH;\n+        if (i & 2) flag |= SCRIPT_VERIFY_DERSIG;\n+        if (i & 4) flag |= SCRIPT_VERIFY_NULLDUMMY;\n+        if (i & 8) flag |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+        if (i & 16) flag |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+        if (i & 32) flag |= SCRIPT_VERIFY_WITNESS;\n+        if (i & 64) flag |= SCRIPT_VERIFY_TAPROOT;\n+\n+        // SCRIPT_VERIFY_WITNESS requires SCRIPT_VERIFY_P2SH\n+        if (flag & SCRIPT_VERIFY_WITNESS && !(flag & SCRIPT_VERIFY_P2SH)) continue;\n+        // SCRIPT_VERIFY_TAPROOT requires SCRIPT_VERIFY_WITNESS\n+        if (flag & SCRIPT_VERIFY_TAPROOT && !(flag & SCRIPT_VERIFY_WITNESS)) continue;\n+\n+        ret.push_back(flag);\n+    }\n \n-    static constexpr unsigned int VERIFY_FLAGS =\n-        SCRIPT_VERIFY_P2SH |\n-        SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY |\n-        SCRIPT_VERIFY_CHECKSEQUENCEVERIFY |\n-        SCRIPT_VERIFY_WITNESS |\n-        SCRIPT_VERIFY_NULLFAIL |\n-        SCRIPT_VERIFY_TAPROOT;\n+    return ret;\n+}\n \n-    for (size_t i = 0; i < tests.size(); i++) {\n-        const UniValue& test = tests[i];\n-\n-        CMutableTransaction tx = TxFromHex(test[\"tx\"].get_str());\n-        const std::vector<CTxOut> prevouts = TxOutsFromJSON(test[\"prevouts\"]);\n-        BOOST_CHECK_EQUAL(prevouts.size(), tx.vin.size());\n-        size_t idx = test[\"index\"].get_int64();\n-        CScript success_scriptsig = ScriptFromHex(test[\"success\"][\"scriptSig\"].get_str());\n-        CScriptWitness success_witness = ScriptWitnessFromJSON(test[\"success\"][\"witness\"]);\n-        CScript failure_scriptsig = ScriptFromHex(test[\"failure\"][\"scriptSig\"].get_str());\n-        CScriptWitness failure_witness = ScriptWitnessFromJSON(test[\"failure\"][\"witness\"]);\n-\n-        // Successful scriptSig/witness\n-        {\n-            tx.vin[idx].scriptSig = std::move(success_scriptsig);\n-            tx.vin[idx].scriptWitness = std::move(success_witness);\n-            PrecomputedTransactionData txdata;\n-            txdata.Init(tx, std::vector<CTxOut>(prevouts));\n-            MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n-            BOOST_CHECK(VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, VERIFY_FLAGS, txcheck, nullptr));\n+/** Precomputed list of all valid combinations of consensus-relevant script validation flags. */\n+static const std::vector<unsigned int> ALL_CONSENSUS_FLAGS = AllConsensusFlags();\n+\n+static void AssetTest(const UniValue& test)\n+{\n+    BOOST_CHECK(test.isObject());\n+\n+    CMutableTransaction mtx = TxFromHex(test[\"tx\"].get_str());\n+    const std::vector<CTxOut> prevouts = TxOutsFromJSON(test[\"prevouts\"]);\n+    BOOST_CHECK(prevouts.size() == mtx.vin.size());\n+    size_t idx = test[\"index\"].get_int64();\n+    unsigned int test_flags = ParseScriptFlags(test[\"flags\"].get_str());\n+    bool fin = test.exists(\"final\") && test[\"final\"].get_bool();\n+\n+    if (test.exists(\"success\")) {\n+        mtx.vin[idx].scriptSig = ScriptFromHex(test[\"success\"][\"scriptSig\"].get_str());\n+        mtx.vin[idx].scriptWitness = ScriptWitnessFromJSON(test[\"success\"][\"witness\"]);\n+        CTransaction tx(mtx);\n+        PrecomputedTransactionData txdata;\n+        txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+        CachingTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, true, txdata);\n+        for (const auto flags : ALL_CONSENSUS_FLAGS) {\n+            // \"final\": true tests are valid for all flags. Others are only valid with flags that are\n+            // a subset of test_flags.\n+            if (fin || ((flags & test_flags) == flags)) {\n+                bool ret = VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n+                BOOST_CHECK(ret);\n+            }\n         }\n-        // Failing scriptSig/witness\n-        {\n-            tx.vin[idx].scriptSig = std::move(failure_scriptsig);\n-            tx.vin[idx].scriptWitness = std::move(failure_witness);\n-            PrecomputedTransactionData txdata;\n-            txdata.Init(tx, std::vector<CTxOut>(prevouts));\n-            MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n-            BOOST_CHECK(!VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, VERIFY_FLAGS, txcheck, nullptr));\n+    }\n+\n+    if (test.exists(\"failure\")) {\n+        mtx.vin[idx].scriptSig = ScriptFromHex(test[\"failure\"][\"scriptSig\"].get_str());\n+        mtx.vin[idx].scriptWitness = ScriptWitnessFromJSON(test[\"failure\"][\"witness\"]);\n+        CTransaction tx(mtx);\n+        PrecomputedTransactionData txdata;\n+        txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+        CachingTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, true, txdata);\n+        for (const auto flags : ALL_CONSENSUS_FLAGS) {\n+            // If a test is supposed to fail with test_flags, it should also fail with any superset thereof.\n+            if ((flags & test_flags) == test_flags) {\n+                bool ret = VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n+                BOOST_CHECK(!ret);\n+            }\n         }\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(script_assets_test)\n+{\n+    const char* dir = std::getenv(\"DIR_UNIT_TEST_DATA\");\n+    BOOST_WARN_MESSAGE(dir != nullptr, \"Variable DIR_UNIT_TEST_DATA unset, skipping script_assets_test\");\n+    if (dir == nullptr) return;\n+    auto path = fs::path(dir) / \"script_assets_test.json\";\n+    bool exists = fs::exists(path);\n+    BOOST_WARN_MESSAGE(exists, \"File $DIR_UNIT_TEST_DATA/script_assets_test.json not found, skipping script_assets_test\");\n+    if (!exists) return;\n+    fs::ifstream file(path);\n+    BOOST_CHECK(file.is_open());\n+    file.seekg(0, std::ios::end);\n+    size_t length = file.tellg();\n+    file.seekg(0, std::ios::beg);\n+    std::string data(length, '\\0');\n+    file.read(&data[0], data.size());\n+    UniValue tests = read_json(data);\n+    BOOST_CHECK(tests.isArray());\n+    BOOST_CHECK(tests.size() > 0);\n+\n+    for (size_t i = 0; i < tests.size(); i++) {\n+        AssetTest(tests[i]);\n+    }\n+    file.close();\n+}\n+\n #endif\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "b7ee2803366e1c36b6d6113950ed1199d05b6735",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35fc47be3600b65d9f6b782cc7f49186c166b63e/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35fc47be3600b65d9f6b782cc7f49186c166b63e/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "patch": "@@ -57,6 +57,7 @@ static std::map<std::string, unsigned int> mapFlagNames = {\n     {std::string(\"DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM\"), (unsigned int)SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM},\n     {std::string(\"WITNESS_PUBKEYTYPE\"), (unsigned int)SCRIPT_VERIFY_WITNESS_PUBKEYTYPE},\n     {std::string(\"CONST_SCRIPTCODE\"), (unsigned int)SCRIPT_VERIFY_CONST_SCRIPTCODE},\n+    {std::string(\"TAPROOT\"), (unsigned int)SCRIPT_VERIFY_TAPROOT},\n };\n \n unsigned int ParseScriptFlags(std::string strFlags)"
      }
    ]
  },
  {
    "sha": "9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGZjZDM2M2E5OWRiMWFiMjViZmZhMDZiYWQ2MGZhMmYzOTFmN2Vj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:33:03Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:33:03Z"
      },
      "message": "--- [TAPROOT] Updates 2020/09/23 ---",
      "tree": {
        "sha": "ab69b28d488c4677c5d082fd7241868032f5a754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab69b28d488c4677c5d082fd7241868032f5a754"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35fc47be3600b65d9f6b782cc7f49186c166b63e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35fc47be3600b65d9f6b782cc7f49186c166b63e"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGM1N2JhYTcyM2U2N2RjZjAzNzZlMWE0NmQwNTZhZmFjYjdmNWVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:38:28Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:38:28Z"
      },
      "message": "Script interpreter nits",
      "tree": {
        "sha": "8df0bd3cfba448aecddd61b857c4aac6683f8a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8df0bd3cfba448aecddd61b857c4aac6683f8a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc57baa723e67dcf0376e1a46d056afacb7f5ec/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9dfcd363a99db1ab25bffa06bad60fa2f391f7ec"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2624bab8e4417b31d749df446769133c07a4378d",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdc57baa723e67dcf0376e1a46d056afacb7f5ec/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdc57baa723e67dcf0376e1a46d056afacb7f5ec/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
        "patch": "@@ -1531,7 +1531,7 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n         ss << execdata.m_annex_hash;\n     }\n \n-    // Data about the output(s)\n+    // Data about the output (if only one).\n     if (output_type == SIGHASH_SINGLE) {\n         if (in_pos >= tx_to.vout.size()) return false;\n         CHashWriter sha_single_output(SER_GETHASH, 0);\n@@ -1675,7 +1675,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n         if (hashtype == SIGHASH_DEFAULT) return false;\n     }\n     uint256 sighash;\n-    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, 0x00, this->txdata)) return false;\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, /* key_version */ 0x00, this->txdata)) return false;\n     return VerifySchnorrSignature(sig, pubkey, sighash);\n }\n "
      }
    ]
  },
  {
    "sha": "2612d16422daa47b43a698da2d325776630a4061",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjEyZDE2NDIyZGFhNDdiNDNhNjk4ZGEyZDMyNTc3NjYzMGE0MDYx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:47:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:47:44Z"
      },
      "message": "Document implicit CLEANSTACK/MINIMALIF in witv0/tapscript execution",
      "tree": {
        "sha": "e57abe29fa141ec94e49f9ab1b0499c3f736ac57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e57abe29fa141ec94e49f9ab1b0499c3f736ac57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2612d16422daa47b43a698da2d325776630a4061",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2612d16422daa47b43a698da2d325776630a4061",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2612d16422daa47b43a698da2d325776630a4061",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2612d16422daa47b43a698da2d325776630a4061/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdc57baa723e67dcf0376e1a46d056afacb7f5ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdc57baa723e67dcf0376e1a46d056afacb7f5ec"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c71a125e7300578d72a0ed7ba2832330346a41d1",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2612d16422daa47b43a698da2d325776630a4061/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2612d16422daa47b43a698da2d325776630a4061/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=2612d16422daa47b43a698da2d325776630a4061",
        "patch": "@@ -86,6 +86,8 @@ enum\n     // \"Exactly one stack element must remain, and when interpreted as a boolean, it must be true\".\n     // (BIP62 rule 6)\n     // Note: CLEANSTACK should never be used without P2SH or WITNESS.\n+    // Note: WITNESS_V0 and TAPSCRIPT script execution have behavior similar to CLEANSTACK as part of their\n+    //       consensus rules. It is automatic there and does not need this flag.\n     SCRIPT_VERIFY_CLEANSTACK = (1U << 8),\n \n     // Verify CHECKLOCKTIMEVERIFY\n@@ -108,6 +110,8 @@ enum\n \n     // Segwit script only: Require the argument of OP_IF/NOTIF to be exactly 0x01 or empty vector\n     //\n+    // Note: TAPSCRIPT script execution has behavior similar to MINIMALIF as part of its consensus\n+    //       rules. It is automatic there and does not depend on this flag.\n     SCRIPT_VERIFY_MINIMALIF = (1U << 13),\n \n     // Signature(s) must be empty vector if a CHECK(MULTI)SIG operation failed"
      }
    ]
  },
  {
    "sha": "7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDY5NGY4Zjc2MDZkZTY0ZDg2NGVkODdkOGZlMWQyMDM3YTQ2ZWM2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:56:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-23T20:56:10Z"
      },
      "message": "Remove script_taproot_tests (moved to qa-assets)",
      "tree": {
        "sha": "46f1011cec45a27b034ec2641cf2ebad74998705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46f1011cec45a27b034ec2641cf2ebad74998705"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d694f8f7606de64d864ed87d8fe1d2037a46ec6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2612d16422daa47b43a698da2d325776630a4061",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2612d16422daa47b43a698da2d325776630a4061",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2612d16422daa47b43a698da2d325776630a4061"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 0,
      "deletions": 108
    },
    "files": [
      {
        "sha": "91cdecad4030548d151862fd0e47a3e6d696c361",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d694f8f7606de64d864ed87d8fe1d2037a46ec6/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d694f8f7606de64d864ed87d8fe1d2037a46ec6/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
        "patch": "@@ -169,7 +169,6 @@ JSON_TEST_FILES = \\\n   test/data/blockfilters.json \\\n   test/data/key_io_valid.json \\\n   test/data/key_io_invalid.json \\\n-  test/data/script_taproot_tests.json \\\n   test/data/script_tests.json \\\n   test/data/sighash.json \\\n   test/data/tx_invalid.json \\"
      },
      {
        "sha": "5483424cf244961ea716c756632f7ed20edd445e",
        "filename": "src/test/data/script_taproot_tests.json",
        "status": "removed",
        "additions": 0,
        "deletions": 107,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2612d16422daa47b43a698da2d325776630a4061/src/test/data/script_taproot_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2612d16422daa47b43a698da2d325776630a4061/src/test/data/script_taproot_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_taproot_tests.json?ref=2612d16422daa47b43a698da2d325776630a4061"
      }
    ]
  },
  {
    "sha": "b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWQyZjNiYWI4YThlZGNjZWI5OWUzOGEyMWU0MjJjZTI1MzQ5M2Y2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T02:43:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T02:43:40Z"
      },
      "message": "--- [TAPROOT] Updates 2020/09/24 ---",
      "tree": {
        "sha": "46f1011cec45a27b034ec2641cf2ebad74998705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/46f1011cec45a27b034ec2641cf2ebad74998705"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d2f3bab8a8edcceb99e38a21e422ce253493f6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d694f8f7606de64d864ed87d8fe1d2037a46ec6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d694f8f7606de64d864ed87d8fe1d2037a46ec6"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "4181a0c1d6800e027010af568459fdfd83c77f76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTgxYTBjMWQ2ODAwZTAyNzAxMGFmNTY4NDU5ZmRmZDgzYzc3Zjc2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T02:54:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T02:54:52Z"
      },
      "message": "Exit bip143/341 checking loop early",
      "tree": {
        "sha": "b64bc3076ee28fc58a1b4b511f242062ebfc4bcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b64bc3076ee28fc58a1b4b511f242062ebfc4bcf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4181a0c1d6800e027010af568459fdfd83c77f76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4181a0c1d6800e027010af568459fdfd83c77f76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4181a0c1d6800e027010af568459fdfd83c77f76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4181a0c1d6800e027010af568459fdfd83c77f76/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5d2f3bab8a8edcceb99e38a21e422ce253493f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5d2f3bab8a8edcceb99e38a21e422ce253493f6"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "852976170309783e5649c40402f7a54499367ec1",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4181a0c1d6800e027010af568459fdfd83c77f76/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4181a0c1d6800e027010af568459fdfd83c77f76/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=4181a0c1d6800e027010af568459fdfd83c77f76",
        "patch": "@@ -1435,6 +1435,7 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_o\n                 uses_bip143_segwit = true;\n             }\n         }\n+        if (uses_bip341_taproot && uses_bip143_segwit) break; // No need to scan further if we already need all.\n     }\n \n     if (uses_bip143_segwit || uses_bip341_taproot) {"
      }
    ]
  },
  {
    "sha": "4e6c2005f4542102efd8072f57defff2358cbdf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTZjMjAwNWY0NTQyMTAyZWZkODA3MmY1N2RlZmZmMjM1OGNiZGY4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:00:22Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:00:22Z"
      },
      "message": "Make SignatureHashCache take cache reference instead of pointer",
      "tree": {
        "sha": "31752e57d2efac9e3c0f708c9ab09a659a0f113f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31752e57d2efac9e3c0f708c9ab09a659a0f113f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e6c2005f4542102efd8072f57defff2358cbdf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6c2005f4542102efd8072f57defff2358cbdf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e6c2005f4542102efd8072f57defff2358cbdf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6c2005f4542102efd8072f57defff2358cbdf8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4181a0c1d6800e027010af568459fdfd83c77f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4181a0c1d6800e027010af568459fdfd83c77f76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4181a0c1d6800e027010af568459fdfd83c77f76"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "fccb4386744d8e13b101783fd910b6389b25f7db",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e6c2005f4542102efd8072f57defff2358cbdf8/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e6c2005f4542102efd8072f57defff2358cbdf8/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=4e6c2005f4542102efd8072f57defff2358cbdf8",
        "patch": "@@ -1475,7 +1475,7 @@ static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n-bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const uint8_t key_version, const PrecomputedTransactionData* cache)\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const uint8_t key_version, const PrecomputedTransactionData& cache)\n {\n     uint8_t ext_flag;\n     switch (sigversion) {\n@@ -1489,7 +1489,7 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n         assert(false);\n     }\n     assert(in_pos < tx_to.vin.size());\n-    assert(cache != nullptr && cache->m_bip341_taproot_ready && cache->m_spent_outputs_ready);\n+    assert(cache.m_bip341_taproot_ready && cache.m_spent_outputs_ready);\n \n     CHashWriter ss = HASHER_TAPSIGHASH;\n \n@@ -1507,13 +1507,13 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n     ss << tx_to.nVersion;\n     ss << tx_to.nLockTime;\n     if (input_type != SIGHASH_ANYONECANPAY) {\n-        ss << cache->m_prevouts_single_hash;\n-        ss << cache->m_spent_amounts_single_hash;\n-        ss << cache->m_spent_scripts_single_hash;\n-        ss << cache->m_sequences_single_hash;\n+        ss << cache.m_prevouts_single_hash;\n+        ss << cache.m_spent_amounts_single_hash;\n+        ss << cache.m_spent_scripts_single_hash;\n+        ss << cache.m_sequences_single_hash;\n     }\n     if (output_type == SIGHASH_ALL) {\n-        ss << cache->m_outputs_single_hash;\n+        ss << cache.m_outputs_single_hash;\n     }\n \n     // Data about the input/prevout being spent\n@@ -1523,7 +1523,7 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n     ss << spend_type;\n     if (input_type == SIGHASH_ANYONECANPAY) {\n         ss << tx_to.vin[in_pos].prevout;\n-        ss << cache->m_spent_outputs[in_pos];\n+        ss << cache.m_spent_outputs[in_pos];\n         ss << tx_to.vin[in_pos].nSequence;\n     } else {\n         ss << in_pos;\n@@ -1676,7 +1676,8 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n         if (hashtype == SIGHASH_DEFAULT) return false;\n     }\n     uint256 sighash;\n-    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, /* key_version */ 0x00, this->txdata)) return false;\n+    assert(this->txdata);\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, /* key_version */ 0x00, *this->txdata)) return false;\n     return VerifySchnorrSignature(sig, pubkey, sighash);\n }\n "
      }
    ]
  },
  {
    "sha": "29bf92a5b082913a23a404a10b2889e0768beff5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWJmOTJhNWIwODI5MTNhMjNhNDA0YTEwYjI4ODllMDc2OGJlZmY1",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:09:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:09:05Z"
      },
      "message": "Use separate script error for tapscript MINIMALIF",
      "tree": {
        "sha": "29e7fee10d876b7a64e871b21f5f9d3b257dd693",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/29e7fee10d876b7a64e871b21f5f9d3b257dd693"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29bf92a5b082913a23a404a10b2889e0768beff5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bf92a5b082913a23a404a10b2889e0768beff5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29bf92a5b082913a23a404a10b2889e0768beff5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bf92a5b082913a23a404a10b2889e0768beff5/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e6c2005f4542102efd8072f57defff2358cbdf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e6c2005f4542102efd8072f57defff2358cbdf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e6c2005f4542102efd8072f57defff2358cbdf8"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 12,
      "deletions": 4
    },
    "files": [
      {
        "sha": "c48d8628d0181ed770a4d5450fe7e9bb7099e03a",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=29bf92a5b082913a23a404a10b2889e0768beff5",
        "patch": "@@ -635,9 +635,14 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                         if (stack.size() < 1)\n                             return set_error(serror, SCRIPT_ERR_UNBALANCED_CONDITIONAL);\n                         valtype& vch = stacktop(-1);\n-                        // Tapscript requires minimal IF/NOTIF inputs as a consensus rules. Under witness v0 rules\n-                        // it is only a policy rule, enabled through SCRIPT_VERIFY_MINIMALIF.\n-                        if (sigversion == SigVersion::TAPSCRIPT || (sigversion == SigVersion::WITNESS_V0 && (flags & SCRIPT_VERIFY_MINIMALIF))) {\n+                        // Tapscript requires minimal IF/NOTIF inputs as a consensus rule.\n+                        if (sigversion == SigVersion::TAPSCRIPT) {\n+                            if (vch.size() > 1 || (vch.size() == 1 && vch[0] != 1)) {\n+                                return set_error(serror, SCRIPT_ERR_TAPSCRIPT_MINIMALIF);\n+                            }\n+                        }\n+                        // Under witness v0 rules it is only a policy rule, enabled through SCRIPT_VERIFY_MINIMALIF.\n+                        if (sigversion == SigVersion::WITNESS_V0 && (flags & SCRIPT_VERIFY_MINIMALIF)) {\n                             if (vch.size() > 1)\n                                 return set_error(serror, SCRIPT_ERR_MINIMALIF);\n                             if (vch.size() == 1 && vch[0] != 1)"
      },
      {
        "sha": "f1f1b1d9a2500675fc550b65d6c55cc9c26e7848",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=29bf92a5b082913a23a404a10b2889e0768beff5",
        "patch": "@@ -105,6 +105,8 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Too much signature validation relative to witness weight\";\n         case SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG:\n             return \"OP_CHECKMULTISIG(VERIFY) is not available in tapscript\";\n+        case SCRIPT_ERR_TAPSCRIPT_MINIMALIF:\n+            return \"OP_IF/NOTIF argument must be minimal in tapscript\";\n         case SCRIPT_ERR_OP_CODESEPARATOR:\n             return \"Using OP_CODESEPARATOR in non-witness script\";\n         case SCRIPT_ERR_SIG_FINDANDDELETE:"
      },
      {
        "sha": "ed0d8aded6908ae646b07f6d7b5573e6ffb68e67",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29bf92a5b082913a23a404a10b2889e0768beff5/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=29bf92a5b082913a23a404a10b2889e0768beff5",
        "patch": "@@ -74,6 +74,7 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE,\n     SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT,\n     SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG,\n+    SCRIPT_ERR_TAPSCRIPT_MINIMALIF,\n \n     /* Constant scriptCode */\n     SCRIPT_ERR_OP_CODESEPARATOR,"
      },
      {
        "sha": "21ac855d1096c884dc39c853cb0bbcff84fcdc0d",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29bf92a5b082913a23a404a10b2889e0768beff5/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29bf92a5b082913a23a404a10b2889e0768beff5/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=29bf92a5b082913a23a404a10b2889e0768beff5",
        "patch": "@@ -550,7 +550,7 @@ def byte_popper(expr):\n ERR_PUSH_LIMIT = {\"err_msg\": \"Push value size limit exceeded\"}\n ERR_DISABLED_OPCODE = {\"err_msg\": \"Attempted to use a disabled opcode\"}\n ERR_TAPSCRIPT_CHECKMULTISIG = {\"err_msg\": \"OP_CHECKMULTISIG(VERIFY) is not available in tapscript\"}\n-ERR_MINIMALIF = {\"err_msg\": \"OP_IF/NOTIF argument must be minimal\"}\n+ERR_MINIMALIF = {\"err_msg\": \"OP_IF/NOTIF argument must be minimal in tapscript\"}\n ERR_UNKNOWN_PUBKEY = {\"err_msg\": \"Public key is neither compressed or uncompressed\"}\n ERR_STACK_SIZE = {\"err_msg\": \"Stack size limit exceeded\"}\n ERR_CLEANSTACK = {\"err_msg\": \"Extra items left on stack after execution\"}"
      }
    ]
  },
  {
    "sha": "1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWM5Y2UyZWQ3YThjOTUyMjhmMGMzZWU0NzM1MzFlYjhhYjYxMTlk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:20:34Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-09-25T03:20:34Z"
      },
      "message": "Add a test for consensus CLEANSTACK in tapscript",
      "tree": {
        "sha": "5272be9f26c15b5c7ca2895e1ed8e6fd9093ef8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5272be9f26c15b5c7ca2895e1ed8e6fd9093ef8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29bf92a5b082913a23a404a10b2889e0768beff5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bf92a5b082913a23a404a10b2889e0768beff5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29bf92a5b082913a23a404a10b2889e0768beff5"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "899f25fabfccfddba629abba3f0cbe3b29ea03fa",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
        "patch": "@@ -542,6 +542,7 @@ def byte_popper(expr):\n     return lambda ctx: deep_eval(ctx, expr)[:-1]\n \n # Expected error strings\n+\n ERR_KEYPATH_INVALID_SIG = {\"err_msg\": \"Invalid signature for Taproot key path spending\"}\n ERR_SCRIPTPATH_INVALID_SIG = {\"err_msg\": \"Signature must be zero for failed CHECK(MULTI)SIG operation\"}\n ERR_OP_RETURN = {\"err_msg\": \"OP_RETURN was encountered\"}\n@@ -894,6 +895,8 @@ def big_spend_inputs(ctx):\n         (\"t34\", CScript(big_scriptops[:2000] + [OP_1])),\n         # 35) Variant of t9 that uses a non-minimally encoded input arg\n         (\"t35\", CScript([bytes([csa_low_val]), pubs[1], OP_CHECKSIGADD, csa_low_result, OP_EQUAL])),\n+        # 36) Empty script\n+        (\"t36\", CScript([])),\n     ]\n     # Add many dummies to test huge trees\n     for j in range(100000):\n@@ -949,6 +952,8 @@ def big_spend_inputs(ctx):\n     add_spender(spenders, \"tapscript/pushmaxlimit\", leaf=\"t25\", **common, **SINGLE_SIG, failure={\"leaf\": \"t26\"}, **ERR_PUSH_LIMIT)\n     # Test that 999-of-999 multisig works (but 1000-of-1000 triggers stack size limits)\n     add_spender(spenders, \"tapscript/bigmulti\", leaf=\"t33\", **common, inputs=big_spend_inputs, num=999, failure={\"leaf\": \"t34\", \"num\": 1000}, **ERR_STACK_SIZE)\n+    # Test that the CLEANSTACK rule is consensus critical in tapscript\n+    add_spender(spenders, \"tapscript/cleanstack\", leaf=\"t36\", tap=tap, inputs=[b'\\x01'], failure={\"inputs\": [b'\\x01', b'\\x01']}, **ERR_CLEANSTACK)\n \n     # == Test for sigops ratio limit ==\n "
      }
    ]
  },
  {
    "sha": "8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZThiNDU4NjhiNWE0MWI3OGNkODk3NWQ4ZWQ0YjRhYTI0MmIyMDVm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T21:47:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T21:47:10Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/01 ---",
      "tree": {
        "sha": "5272be9f26c15b5c7ca2895e1ed8e6fd9093ef8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5272be9f26c15b5c7ca2895e1ed8e6fd9093ef8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ec9ce2ed7a8c95228f0c3ee473531eb8ab6119d"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "ba4ac3e8327844889f0082b11418b2bbb022081b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTRhYzNlODMyNzg0NDg4OWYwMDgyYjExNDE4YjJiYmIwMjIwODFi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T21:54:46Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T21:54:46Z"
      },
      "message": "Improve some code comments",
      "tree": {
        "sha": "6c7a9221c56541948b8ff4720cfc7c07b903fcca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c7a9221c56541948b8ff4720cfc7c07b903fcca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba4ac3e8327844889f0082b11418b2bbb022081b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ac3e8327844889f0082b11418b2bbb022081b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba4ac3e8327844889f0082b11418b2bbb022081b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ac3e8327844889f0082b11418b2bbb022081b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e8b45868b5a41b78cd8975d8ed4b4aa242b205f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "69f2b456f1eee7f5080461f588a53f976e8f3ffa",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba4ac3e8327844889f0082b11418b2bbb022081b/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba4ac3e8327844889f0082b11418b2bbb022081b/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=ba4ac3e8327844889f0082b11418b2bbb022081b",
        "patch": "@@ -251,7 +251,7 @@ bool IsWitnessStandard(const CTransaction& tx, const CCoinsViewCache& mapInputs)\n                 return false;\n             }\n             if (stack.size() >= 2) {\n-                // Script path spend (2 or more stack elements are removing optional annex)\n+                // Script path spend (2 or more stack elements after removing optional annex)\n                 const auto& control_block = SpanPopBack(stack);\n                 SpanPopBack(stack); // Ignore script\n                 if (control_block.empty()) return false; // Empty control block is invalid"
      },
      {
        "sha": "8c6dea85a2b8b70296315d011a8259cb94f8cb88",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba4ac3e8327844889f0082b11418b2bbb022081b/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba4ac3e8327844889f0082b11418b2bbb022081b/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=ba4ac3e8327844889f0082b11418b2bbb022081b",
        "patch": "@@ -1430,8 +1430,10 @@ void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_o\n         if (!txTo.vin[inpos].scriptWitness.IsNull()) {\n             if (m_spent_outputs_ready && m_spent_outputs[inpos].scriptPubKey.size() == 2 + WITNESS_V1_TAPROOT_SIZE &&\n                 m_spent_outputs[inpos].scriptPubKey[0] == OP_1) {\n-                // Treat every native witness v1 spend as a Taproot spend. This only works if spent_outputs was\n-                // provided as well, but if it wasn't, actual validation will fail anyway.\n+                // Treat every witness-bearing spend with 34-byte scriptPubKey that starts with OP_1 as a Taproot\n+                // spend. This only works if spent_outputs was provided as well, but if it wasn't, actual validation\n+                // will fail anyway. Note that this branch may trigger for scriptPubKeys that aren't actually segwit\n+                // but in that case validation will fail as SCRIPT_ERR_WITNESS_UNEXPECTED anyway.\n                 uses_bip341_taproot = true;\n             } else {\n                 // Treat every spend that's not known to native witness v1 as a Witness v0 spend. This branch may"
      }
    ]
  },
  {
    "sha": "c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjM0ZjdlY2RiYWE2MWIyZDYwZmZjYWM3Yzk3MjYzNGU2NTg5Zjc3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:18:26Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:18:26Z"
      },
      "message": "Compute witnesses only once for each input in feature_taproot.py\n\nInstead of re-evaluating the entire signing logic for every input, for every\nattempt, compute them once and reuse them.",
      "tree": {
        "sha": "53f27ba6910381043d491dd897a1d8b5c4101046",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53f27ba6910381043d491dd897a1d8b5c4101046"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c634f7ecdbaa61b2d60ffcac7c972634e6589f77/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba4ac3e8327844889f0082b11418b2bbb022081b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba4ac3e8327844889f0082b11418b2bbb022081b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba4ac3e8327844889f0082b11418b2bbb022081b"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 18,
      "deletions": 11
    },
    "files": [
      {
        "sha": "4910bfc58b8125926f176ee7f69409e9a670062a",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 18,
        "deletions": 11,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c634f7ecdbaa61b2d60ffcac7c972634e6589f77/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c634f7ecdbaa61b2d60ffcac7c972634e6589f77/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
        "patch": "@@ -404,8 +404,9 @@ def to_script(elem):\n             return CScript([elem])\n \n     scriptsig_list = flatten(get(ctx, \"scriptsig\"))\n-    tx.vin[idx].scriptSig = CScript(b\"\".join(bytes(to_script(elem)) for elem in scriptsig_list))\n-    tx.wit.vtxinwit[idx].scriptWitness.stack = flatten(get(ctx, \"witness\"))\n+    scriptsig = CScript(b\"\".join(bytes(to_script(elem)) for elem in scriptsig_list))\n+    witness_stack = flatten(get(ctx, \"witness\"))\n+    return (scriptsig, witness_stack)\n \n \n # === Spender objects ===\n@@ -414,7 +415,7 @@ def to_script(elem):\n # - A scriptPubKey which is to be spent from (CScript)\n # - A comment describing the test (string)\n # - Whether the spending (on itself) is expected to be standard (bool)\n-# - A tx-signing lambda taking as inputs:\n+# - A tx-signing lambda returning (scriptsig, witness_stack), taking as inputs:\n #   - A transaction to sign (CTransaction)\n #   - An input position (int)\n #   - The spent UTXOs by this transaction (list of CTxOut)\n@@ -495,10 +496,10 @@ def make_spender(comment, *, tap=None, witv0=False, script=None, pkh=None, p2sh=\n \n     def sat_fn(tx, idx, utxos, valid):\n         if valid:\n-            spend(tx, idx, utxos, **conf)\n+            return spend(tx, idx, utxos, **conf)\n         else:\n             assert failure is not None\n-            spend(tx, idx, utxos, **{**conf, **failure})\n+            return spend(tx, idx, utxos, **{**conf, **failure})\n \n     return Spender(script=spk, comment=comment, is_standard=standard, sat_function=sat_fn, err_msg=err_msg, sigops_weight=sigops_weight, no_fail=failure is None, need_vin_vout_mismatch=need_vin_vout_mismatch)\n \n@@ -1347,21 +1348,27 @@ def test_spenders(self, node, spenders, input_counts):\n             cb_pubkey = random.choice(host_pubkeys)\n             sigops_weight += 1 * WITNESS_SCALE_FACTOR\n \n+            # Precompute one satisfying and one failing scriptSig/witness for each input.\n+            input_data = []\n+            for i in range(len(input_utxos)):\n+                fn = input_utxos[i].spender.sat_function\n+                fail = None\n+                success = fn(tx, i, [utxo.output for utxo in input_utxos], True)\n+                if not input_utxos[i].spender.no_fail:\n+                    fail = fn(tx, i, [utxo.output for utxo in input_utxos], False)\n+                input_data.append((fail, success))\n+\n             # Sign each input incorrectly once on each complete signing pass, except the very last.\n             for fail_input in list(range(len(input_utxos))) + [None]:\n                 # Skip trying to fail at spending something that can't be made to fail.\n                 if fail_input is not None and input_utxos[fail_input].spender.no_fail:\n                     continue\n                 # Expected message with each input failure, may be None(which is ignored)\n                 expected_fail_msg = None if fail_input is None else input_utxos[fail_input].spender.err_msg\n-                # Wipe scriptSig/witness\n-                for i in range(len(input_utxos)):\n-                    tx.vin[i].scriptSig = CScript()\n-                    tx.wit.vtxinwit[i] = CTxInWitness()\n                 # Fill inputs/witnesses\n                 for i in range(len(input_utxos)):\n-                    fn = input_utxos[i].spender.sat_function\n-                    fn(tx, i, [utxo.output for utxo in input_utxos], i != fail_input)\n+                    tx.vin[i].scriptSig = input_data[i][i != fail_input][0]\n+                    tx.wit.vtxinwit[i].scriptWitness.stack = input_data[i][i != fail_input][1]\n                 # Submit to mempool to check standardness\n                 is_standard_tx = fail_input is None and all(utxo.spender.is_standard for utxo in input_utxos) and tx.nVersion >= 1 and tx.nVersion <= 2\n                 tx.rehash()"
      }
    ]
  },
  {
    "sha": "9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTk2M2EwZmZiY2YxYmVmNmVlNWI4YzM3NzAzMzY2YTBhZGE1MGZl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:21:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:24:07Z"
      },
      "message": "Run legacy tests with both compressed and uncompressed keys",
      "tree": {
        "sha": "d28d3af5953e7101094031a8877b481730b48324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d28d3af5953e7101094031a8877b481730b48324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c634f7ecdbaa61b2d60ffcac7c972634e6589f77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c634f7ecdbaa61b2d60ffcac7c972634e6589f77"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "3df3b6f4055ce5dda258737a02ae325880623f71",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 12,
        "deletions": 11,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
        "patch": "@@ -1089,17 +1089,18 @@ def predict_sigops_ratio(n, dummy_size):\n     # == Legacy tests ==\n \n     # Also add a few legacy spends into the mix, so that transactions which combine taproot and pre-taproot spends get tested too.\n-    eckey1 = ECKey()\n-    eckey1.set(generate_privkey(), True)\n-    pubkey1 = eckey1.get_pubkey().get_bytes()\n-    eckey2 = ECKey()\n-    eckey2.set(generate_privkey(), True)\n-    for p2sh in [False, True]:\n-        for witv0 in [False, True]:\n-            for hashtype in VALID_SIGHASHES_ECDSA + [random.randrange(0x04, 0x80), random.randrange(0x84, 0x100)]:\n-                standard = hashtype in VALID_SIGHASHES_ECDSA\n-                add_spender(spenders, \"legacy/pk-wrongkey\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([pubkey1, OP_CHECKSIG]), **SINGLE_SIG, key=eckey1, failure={\"key\": eckey2}, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n-                add_spender(spenders, \"legacy/pkh-sighashflip\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, pkh=pubkey1, key=eckey1, **SIGHASH_BITFLIP, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n+    for compressed in [False, True]:\n+        eckey1 = ECKey()\n+        eckey1.set(generate_privkey(), compressed)\n+        pubkey1 = eckey1.get_pubkey().get_bytes()\n+        eckey2 = ECKey()\n+        eckey2.set(generate_privkey(), compressed)\n+        for p2sh in [False, True]:\n+            for witv0 in [False, True]:\n+                for hashtype in VALID_SIGHASHES_ECDSA + [random.randrange(0x04, 0x80), random.randrange(0x84, 0x100)]:\n+                    standard = (hashtype in VALID_SIGHASHES_ECDSA) and (compressed or not witv0)\n+                    add_spender(spenders, \"legacy/pk-wrongkey\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([pubkey1, OP_CHECKSIG]), **SINGLE_SIG, key=eckey1, failure={\"key\": eckey2}, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n+                    add_spender(spenders, \"legacy/pkh-sighashflip\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, pkh=pubkey1, key=eckey1, **SIGHASH_BITFLIP, sigops_weight=4-3*witv0, **ERR_NO_SUCCESS)\n \n     # Verify that OP_CHECKSIGADD wasn't accidentally added to pre-taproot validation logic.\n     for p2sh in [False, True]:"
      }
    ]
  },
  {
    "sha": "687c91ae5430c2356b5fef47662d26d38dc5f4a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ODdjOTFhZTU0MzBjMjM1NmI1ZmVmNDc2NjJkMjZkMzhkYzVmNGEw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:32:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-01T22:32:42Z"
      },
      "message": "Use a separate prefix for legacy tests that need taproot validation tests",
      "tree": {
        "sha": "ec77386e5de1492094704f740cb4323515b5b297",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec77386e5de1492094704f740cb4323515b5b297"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/687c91ae5430c2356b5fef47662d26d38dc5f4a0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/687c91ae5430c2356b5fef47662d26d38dc5f4a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/687c91ae5430c2356b5fef47662d26d38dc5f4a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/687c91ae5430c2356b5fef47662d26d38dc5f4a0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e963a0ffbcf1bef6ee5b8c37703366a0ada50fe"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "19591292b5943783075ba28087128b24d6e120ed",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/687c91ae5430c2356b5fef47662d26d38dc5f4a0/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/687c91ae5430c2356b5fef47662d26d38dc5f4a0/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=687c91ae5430c2356b5fef47662d26d38dc5f4a0",
        "patch": "@@ -1107,7 +1107,7 @@ def predict_sigops_ratio(n, dummy_size):\n         for witv0 in [False, True]:\n             for hashtype in VALID_SIGHASHES_ECDSA + [random.randrange(0x04, 0x80), random.randrange(0x84, 0x100)]:\n                 standard = hashtype in VALID_SIGHASHES_ECDSA and (p2sh or witv0)\n-                add_spender(spenders, \"legacy/nocsa\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([OP_IF, OP_11, pubkey1, OP_CHECKSIGADD, OP_12, OP_EQUAL, OP_ELSE, pubkey1, OP_CHECKSIG, OP_ENDIF]), key=eckey1, sigops_weight=4-3*witv0, inputs=[getter(\"sign\"), b''], failure={\"inputs\": [getter(\"sign\"), b'\\x01']}, **ERR_UNDECODABLE)\n+                add_spender(spenders, \"compat/nocsa\", hashtype=hashtype, p2sh=p2sh, witv0=witv0, standard=standard, script=CScript([OP_IF, OP_11, pubkey1, OP_CHECKSIGADD, OP_12, OP_EQUAL, OP_ELSE, pubkey1, OP_CHECKSIG, OP_ENDIF]), key=eckey1, sigops_weight=4-3*witv0, inputs=[getter(\"sign\"), b''], failure={\"inputs\": [getter(\"sign\"), b'\\x01']}, **ERR_UNDECODABLE)\n \n     return spenders\n "
      }
    ]
  },
  {
    "sha": "6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDIzZmQ2YTA5ZmYwMTkxZDNlM2ZhNmRjMjU4NzM3NWRmZmZmMGI4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T00:21:53Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T06:33:00Z"
      },
      "message": "Add support for dumping generated test cases",
      "tree": {
        "sha": "4661b957dc26687494d67966184591d2874d3653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4661b957dc26687494d67966184591d2874d3653"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "687c91ae5430c2356b5fef47662d26d38dc5f4a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/687c91ae5430c2356b5fef47662d26d38dc5f4a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/687c91ae5430c2356b5fef47662d26d38dc5f4a0"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 48,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dafdae316944367335db115c474c0139412d9cce",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 48,
        "deletions": 1,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
        "patch": "@@ -82,8 +82,11 @@\n     hash160,\n     sha256,\n )\n-from collections import namedtuple\n+from collections import OrderedDict, namedtuple\n from io import BytesIO\n+import json\n+import hashlib\n+import os\n import random\n \n # === Framework for building spending transactions. ===\n@@ -1141,10 +1144,52 @@ def spenders_taproot_inactive():\n \n     return spenders\n \n+# Consensus validation flags to use in dumps for tests with \"legacy/\" or \"inactive/\" prefix.\n+LEGACY_FLAGS = \"P2SH,DERSIG,CHECKLOCKTIMEVERIFY,CHECKSEQUENCEVERIFY,WITNESS,NULLDUMMY\"\n+# Consensus validation flags to use in dumps for all other tests.\n+TAPROOT_FLAGS = \"P2SH,DERSIG,CHECKLOCKTIMEVERIFY,CHECKSEQUENCEVERIFY,WITNESS,NULLDUMMY,TAPROOT\"\n+\n+def dump_json_test(tx, input_utxos, idx, success, failure):\n+    spender = input_utxos[idx].spender\n+    # Determine flags to dump\n+    flags = LEGACY_FLAGS if spender.comment.startswith(\"legacy/\") or spender.comment.startswith(\"inactive/\") else TAPROOT_FLAGS\n+\n+    fields = [\n+        (\"tx\", tx.serialize().hex()),\n+        (\"prevouts\", [x.output.serialize().hex() for x in input_utxos]),\n+        (\"index\", idx),\n+        (\"flags\", flags),\n+        (\"comment\", spender.comment)\n+    ]\n+\n+    # The \"final\" field indicates that a spend should be always valid, even with more validation flags enabled\n+    # than the listed ones. Use standardness as a proxy for this (which gives a conservative underestimate).\n+    if spender.is_standard:\n+        fields.append((\"final\", True))\n+\n+    def dump_witness(wit):\n+        return OrderedDict([(\"scriptSig\", wit[0].hex()), (\"witness\", [x.hex() for x in wit[1]])])\n+    if success is not None:\n+        fields.append((\"success\", dump_witness(success)))\n+    if failure is not None:\n+        fields.append((\"failure\", dump_witness(failure)))\n+\n+    # Write the dump to $TEST_DUMP_DIR/x/xyz... where x,y,z,... are the SHA1 sum of the dump (which makes the\n+    # file naming scheme compatible with fuzzing infrastructure).\n+    dump = json.dumps(OrderedDict(fields)) + \",\\n\"\n+    sha1 = hashlib.sha1(dump.encode(\"utf-8\")).hexdigest()\n+    dirname = os.environ.get(\"TEST_DUMP_DIR\", \".\") + (\"/%s\" % sha1[0])\n+    os.makedirs(dirname, exist_ok=True)\n+    with open(dirname + (\"/%s\" % sha1), 'w', encoding=\"utf8\") as f:\n+        f.write(dump)\n+\n # Data type to keep track of UTXOs, where they were created, and how to spend them.\n UTXOData = namedtuple('UTXOData', 'outpoint,output,spender')\n \n class TaprootTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        parser.add_argument(\"--dumptests\", dest=\"dump_tests\", default=False, action=\"store_true\",\n+                            help=\"Dump generated test cases to directory set by TEST_DUMP_DIR environment variable\")\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -1358,6 +1403,8 @@ def test_spenders(self, node, spenders, input_counts):\n                 if not input_utxos[i].spender.no_fail:\n                     fail = fn(tx, i, [utxo.output for utxo in input_utxos], False)\n                 input_data.append((fail, success))\n+                if self.options.dump_tests:\n+                    dump_json_test(tx, input_utxos, i, success, fail)\n \n             # Sign each input incorrectly once on each complete signing pass, except the very last.\n             for fail_input in list(range(len(input_utxos))) + [None]:"
      }
    ]
  },
  {
    "sha": "7d5fd3c1d9115660d130a673b4b8d81991fbed79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDVmZDNjMWQ5MTE1NjYwZDEzMGE2NzNiNGI4ZDgxOTkxZmJlZDc5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T05:30:40Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T06:33:03Z"
      },
      "message": "Add fuzz 'test' to minimize script_assets_test.json",
      "tree": {
        "sha": "b1119f766a8dc46c87bb0f5c7e59f1078fe81102",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1119f766a8dc46c87bb0f5c7e59f1078fe81102"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d5fd3c1d9115660d130a673b4b8d81991fbed79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d5fd3c1d9115660d130a673b4b8d81991fbed79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d5fd3c1d9115660d130a673b4b8d81991fbed79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d5fd3c1d9115660d130a673b4b8d81991fbed79/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d23fd6a09ff0191d3e3fa6dc2587375dffff0b8"
      }
    ],
    "stats": {
      "total": 210,
      "additions": 210,
      "deletions": 0
    },
    "files": [
      {
        "sha": "177a1c859cae9acaa1dfd1a10a3ce2d744cd5fc5",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7d5fd3c1d9115660d130a673b4b8d81991fbed79",
        "patch": "@@ -129,6 +129,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/script_deserialize \\\n   test/fuzz/script_flags \\\n   test/fuzz/script_interpreter \\\n+  test/fuzz/script_assets_test_minimizer \\\n   test/fuzz/script_ops \\\n   test/fuzz/script_sigcache \\\n   test/fuzz/script_sign \\\n@@ -1079,6 +1080,12 @@ test_fuzz_script_interpreter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_script_interpreter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_script_interpreter_SOURCES = test/fuzz/script_interpreter.cpp\n \n+test_fuzz_script_assets_test_minimizer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_script_assets_test_minimizer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_script_assets_test_minimizer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_script_assets_test_minimizer_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_assets_test_minimizer_SOURCES = test/fuzz/script_assets_test_minimizer.cpp\n+\n test_fuzz_script_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "d20fa43d68a1d746a52d7fc91736cd159000913c",
        "filename": "src/test/fuzz/script_assets_test_minimizer.cpp",
        "status": "added",
        "additions": 200,
        "deletions": 0,
        "changes": 200,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/test/fuzz/script_assets_test_minimizer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/test/fuzz/script_assets_test_minimizer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script_assets_test_minimizer.cpp?ref=7d5fd3c1d9115660d130a673b4b8d81991fbed79",
        "patch": "@@ -0,0 +1,200 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+\n+#include <primitives/transaction.h>\n+#include <pubkey.h>\n+#include <script/interpreter.h>\n+#include <serialize.h>\n+#include <streams.h>\n+#include <univalue.h>\n+#include <util/strencodings.h>\n+\n+#include <boost/algorithm/string.hpp>\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+// This fuzz \"test\" can be used to minimize test cases for script_assets_test in\n+// src/test/script_tests.cpp. While it written as a fuzz test, and can be used as such,\n+// fuzzing the inputs is unlikely to construct useful test cases.\n+//\n+// Instead, it is primarily intended to be run on a test set that was generated\n+// externally, for example using test/functional/feature_taproot.py's --dumptests mode.\n+// The minimized set can then be concatenated together, surrounded by '[' and ']',\n+// and used as the script_assets_test.json input to the script_assets_test unit test:\n+//\n+// (normal build)\n+// $ mkdir dump\n+// $ for N in $(seq 1 10); do TEST_DUMP_DIR=dump test/functional/feature_taproot --dumptests; done\n+// $ ...\n+//\n+// (fuzz test build)\n+// $ mkdir dump-min\n+// $ ./src/test/fuzz/script_assets_test_minimizer -merge=1 dump-min/ dump/\n+// $ (echo -en '[\\n'; cat dump-min/* | head -c -2; echo -en '\\n]') >script_assets_test.json\n+\n+namespace {\n+\n+std::vector<unsigned char> CheckedParseHex(const std::string& str)\n+{\n+    if (str.size() && !IsHex(str)) throw std::runtime_error(\"Non-hex input '\" + str + \"'\");\n+    return ParseHex(str);\n+}\n+\n+CScript ScriptFromHex(const std::string& str)\n+{\n+    std::vector<unsigned char> data = CheckedParseHex(str);\n+    return CScript(data.begin(), data.end());\n+}\n+\n+CMutableTransaction TxFromHex(const std::string& str)\n+{\n+    CMutableTransaction tx;\n+    try {\n+        VectorReader(SER_DISK, SERIALIZE_TRANSACTION_NO_WITNESS, CheckedParseHex(str), 0) >> tx;\n+    } catch (const std::ios_base::failure&) {\n+        throw std::runtime_error(\"Tx deserialization failure\");\n+    }\n+    return tx;\n+}\n+\n+std::vector<CTxOut> TxOutsFromJSON(const UniValue& univalue)\n+{\n+    if (!univalue.isArray()) throw std::runtime_error(\"Prevouts must be array\");\n+    std::vector<CTxOut> prevouts;\n+    for (size_t i = 0; i < univalue.size(); ++i) {\n+        CTxOut txout;\n+        try {\n+            VectorReader(SER_DISK, 0, CheckedParseHex(univalue[i].get_str()), 0) >> txout;\n+        } catch (const std::ios_base::failure&) {\n+            throw std::runtime_error(\"Prevout invalid format\");\n+        }\n+        prevouts.push_back(std::move(txout));\n+    }\n+    return prevouts;\n+}\n+\n+CScriptWitness ScriptWitnessFromJSON(const UniValue& univalue)\n+{\n+    if (!univalue.isArray()) throw std::runtime_error(\"Script witness is not array\");\n+    CScriptWitness scriptwitness;\n+    for (size_t i = 0; i < univalue.size(); ++i) {\n+        auto bytes = CheckedParseHex(univalue[i].get_str());\n+        scriptwitness.stack.push_back(std::move(bytes));\n+    }\n+    return scriptwitness;\n+}\n+\n+const std::map<std::string, unsigned int> FLAG_NAMES = {\n+    {std::string(\"P2SH\"), (unsigned int)SCRIPT_VERIFY_P2SH},\n+    {std::string(\"DERSIG\"), (unsigned int)SCRIPT_VERIFY_DERSIG},\n+    {std::string(\"NULLDUMMY\"), (unsigned int)SCRIPT_VERIFY_NULLDUMMY},\n+    {std::string(\"CHECKLOCKTIMEVERIFY\"), (unsigned int)SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY},\n+    {std::string(\"CHECKSEQUENCEVERIFY\"), (unsigned int)SCRIPT_VERIFY_CHECKSEQUENCEVERIFY},\n+    {std::string(\"WITNESS\"), (unsigned int)SCRIPT_VERIFY_WITNESS},\n+    {std::string(\"TAPROOT\"), (unsigned int)SCRIPT_VERIFY_TAPROOT},\n+};\n+\n+std::vector<unsigned int> AllFlags()\n+{\n+    std::vector<unsigned int> ret;\n+\n+    for (unsigned int i = 0; i < 128; ++i) {\n+        unsigned int flag = 0;\n+        if (i & 1) flag |= SCRIPT_VERIFY_P2SH;\n+        if (i & 2) flag |= SCRIPT_VERIFY_DERSIG;\n+        if (i & 4) flag |= SCRIPT_VERIFY_NULLDUMMY;\n+        if (i & 8) flag |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n+        if (i & 16) flag |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n+        if (i & 32) flag |= SCRIPT_VERIFY_WITNESS;\n+        if (i & 64) flag |= SCRIPT_VERIFY_TAPROOT;\n+\n+        // SCRIPT_VERIFY_WITNESS requires SCRIPT_VERIFY_P2SH\n+        if (flag & SCRIPT_VERIFY_WITNESS && !(flag & SCRIPT_VERIFY_P2SH)) continue;\n+        // SCRIPT_VERIFY_TAPROOT requires SCRIPT_VERIFY_WITNESS\n+        if (flag & SCRIPT_VERIFY_TAPROOT && !(flag & SCRIPT_VERIFY_WITNESS)) continue;\n+\n+        ret.push_back(flag);\n+    }\n+\n+    return ret;\n+}\n+\n+const std::vector<unsigned int> ALL_FLAGS = AllFlags();\n+\n+unsigned int ParseScriptFlags(const std::string& str)\n+{\n+    if (str.empty()) return 0;\n+\n+    unsigned int flags = 0;\n+    std::vector<std::string> words;\n+    boost::algorithm::split(words, str, boost::algorithm::is_any_of(\",\"));\n+\n+    for (const std::string& word : words)\n+    {\n+        auto it = FLAG_NAMES.find(word);\n+        if (it == FLAG_NAMES.end()) throw std::runtime_error(\"Unknown verification flag \" + word);\n+        flags |= it->second;\n+    }\n+\n+    return flags;\n+}\n+\n+void Test(const std::string& str)\n+{\n+    UniValue test;\n+    if (!test.read(str) || !test.isObject()) throw std::runtime_error(\"Non-object test input\");\n+\n+    CMutableTransaction tx = TxFromHex(test[\"tx\"].get_str());\n+    const std::vector<CTxOut> prevouts = TxOutsFromJSON(test[\"prevouts\"]);\n+    if (prevouts.size() != tx.vin.size()) throw std::runtime_error(\"Incorrect number of prevouts\");\n+    size_t idx = test[\"index\"].get_int64();\n+    if (idx >= tx.vin.size()) throw std::runtime_error(\"Invalid index\");\n+    unsigned int test_flags = ParseScriptFlags(test[\"flags\"].get_str());\n+    bool final = test.exists(\"final\") && test[\"final\"].get_bool();\n+\n+    if (test.exists(\"success\")) {\n+        tx.vin[idx].scriptSig = ScriptFromHex(test[\"success\"][\"scriptSig\"].get_str());\n+        tx.vin[idx].scriptWitness = ScriptWitnessFromJSON(test[\"success\"][\"witness\"]);\n+        PrecomputedTransactionData txdata;\n+        txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+        MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n+        for (const auto flags : ALL_FLAGS) {\n+            // \"final\": true tests are valid for all flags. Others are only valid with flags that are\n+            // a subset of test_flags.\n+            if (final || ((flags & test_flags) == flags)) {\n+                (void)VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n+            }\n+        }\n+    }\n+\n+    if (test.exists(\"failure\")) {\n+        tx.vin[idx].scriptSig = ScriptFromHex(test[\"failure\"][\"scriptSig\"].get_str());\n+        tx.vin[idx].scriptWitness = ScriptWitnessFromJSON(test[\"failure\"][\"witness\"]);\n+        PrecomputedTransactionData txdata;\n+        txdata.Init(tx, std::vector<CTxOut>(prevouts));\n+        MutableTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, txdata);\n+        for (const auto flags : ALL_FLAGS) {\n+            // If a test is supposed to fail with test_flags, it should also fail with any superset thereof.\n+            if ((flags & test_flags) == test_flags) {\n+                (void)VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n+            }\n+        }\n+    }\n+}\n+\n+ECCVerifyHandle handle;\n+\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    if (buffer.size() < 2 || buffer.back() != '\\n' || buffer[buffer.size() - 2] != ',') return;\n+    const std::string str((const char*)buffer.data(), buffer.size() - 2);\n+    try {\n+        Test(str);\n+    } catch (const std::runtime_error&) {}\n+}"
      },
      {
        "sha": "fcbd0c6e6204d45c7604c579f05ba7ff1e957ce6",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d5fd3c1d9115660d130a673b4b8d81991fbed79/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=7d5fd3c1d9115660d130a673b4b8d81991fbed79",
        "patch": "@@ -1716,6 +1716,9 @@ static void AssetTest(const UniValue& test)\n \n BOOST_AUTO_TEST_CASE(script_assets_test)\n {\n+    // See src/test/fuzz/script_assets_test_minimizer.cpp for information on how to generate\n+    // the script_assets_test.json file used by this test.\n+\n     const char* dir = std::getenv(\"DIR_UNIT_TEST_DATA\");\n     BOOST_WARN_MESSAGE(dir != nullptr, \"Variable DIR_UNIT_TEST_DATA unset, skipping script_assets_test\");\n     if (dir == nullptr) return;"
      }
    ]
  },
  {
    "sha": "99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWM1MGE2OTFhZmQ0ZDU1YzI0OWQwYTY2YmZhNWYyNGJkM2NhMTcz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:13:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:13:31Z"
      },
      "message": "--- [TAPROOT] Merge with master 2020/10/02 ---",
      "tree": {
        "sha": "b1119f766a8dc46c87bb0f5c7e59f1078fe81102",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1119f766a8dc46c87bb0f5c7e59f1078fe81102"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d5fd3c1d9115660d130a673b4b8d81991fbed79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d5fd3c1d9115660d130a673b4b8d81991fbed79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d5fd3c1d9115660d130a673b4b8d81991fbed79"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "31031361c319aaabb87cc3d5f552d1e1534c25cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMTAzMTM2MWMzMTlhYWFiYjg3Y2MzZDVmNTUyZDFlMTUzNGMyNWNi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:13:35Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:13:35Z"
      },
      "message": "Merge remote-tracking branch 'upstream/master' into taproot-history",
      "tree": {
        "sha": "def6a5e7e2126814a25363f248eeb3c27421729e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/def6a5e7e2126814a25363f248eeb3c27421729e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31031361c319aaabb87cc3d5f552d1e1534c25cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31031361c319aaabb87cc3d5f552d1e1534c25cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31031361c319aaabb87cc3d5f552d1e1534c25cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31031361c319aaabb87cc3d5f552d1e1534c25cb/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99c50a691afd4d55c249d0a66bfa5f24bd3ca173"
      },
      {
        "sha": "60ec57b3d73e5cef71ebf3c4cdf54a4474bf492b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/60ec57b3d73e5cef71ebf3c4cdf54a4474bf492b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/60ec57b3d73e5cef71ebf3c4cdf54a4474bf492b"
      }
    ],
    "stats": {
      "total": 26188,
      "additions": 21665,
      "deletions": 4523
    },
    "files": [
      {
        "sha": "67739916f6e1c5251264a178c1d3493e86ddd597",
        "filename": ".appveyor.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/.appveyor.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/.appveyor.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.appveyor.yml?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -11,25 +11,19 @@ environment:\n   QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'\n   QT_LOCAL_PATH: 'C:\\Qt5.9.8_x64_static_vs2019'\n   VCPKG_INSTALL_PATH: 'C:\\tools\\vcpkg\\installed'\n-  VCPKG_COMMIT_ID: 'f3f329a048eaff759c1992c458f2e12351486bc7'\n+  VCPKG_COMMIT_ID: '13590753fec479c5b0a3d48dd553dde8d49615fc'\n install:\n # Disable zmq test for now since python zmq library on Windows would cause Access violation sometimes.\n # - cmd: pip install zmq\n # Powershell block below is to install the c++ dependencies via vcpkg. The pseudo code is:\n #    a. Checkout the vcpkg source (including port files) for the specific checkout and build the vcpkg binary,\n-#    b. Install the missing packages.\n+#    b. Install the missing packages using the vcpkg manifest.\n - ps: |\n-      $env:PACKAGES = Get-Content -Path build_msvc\\vcpkg-packages.txt\n-      Write-Host \"vcpkg installing packages: $env:PACKAGES\"\n       cd c:\\tools\\vcpkg\n       $env:GIT_REDIRECT_STDERR = '2>&1' # git is writing non-errors to STDERR when doing git pull. Send to STDOUT instead.\n       git pull origin master > $null\n       git -c advice.detachedHead=false checkout $env:VCPKG_COMMIT_ID\n       .\\bootstrap-vcpkg.bat > $null\n-      Add-Content \"C:\\tools\\vcpkg\\triplets\\$env:PLATFORM-windows-static.cmake\" \"set(VCPKG_BUILD_TYPE release)\"\n-      .\\vcpkg install --triplet $env:PLATFORM-windows-static $env:PACKAGES.split() > $null\n-      Write-Host \"vcpkg packages installed successfully.\"\n-      .\\vcpkg integrate install\n       cd \"$env:APPVEYOR_BUILD_FOLDER\"\n before_build:\n # Powershell block below is to download and extract the Qt static libraries. The pseudo code is:"
      },
      {
        "sha": "86b517a6120ccf7036aef3e1bea936612cc5b3b0",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-020x]\n+[bitcoin.qt-translation-021x]\n file_filter = src/qt/locale/bitcoin_<lang>.ts\n source_file = src/qt/locale/bitcoin_en.ts\n source_lang = en"
      },
      {
        "sha": "24a80fb35d28a2427628d8dc35ff5ec0ac4fb4b1",
        "filename": "CODEOWNERS",
        "status": "added",
        "additions": 136,
        "deletions": 0,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/CODEOWNERS",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/CODEOWNERS",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CODEOWNERS?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,136 @@\n+# ==============================================================================\n+#                          Bitcoin Core CODEOWNERS\n+# ==============================================================================\n+\n+# Configuration of code ownership and review approvals for the bitcoin/bitcoin\n+# repo.\n+\n+# Order is important; the last matching pattern takes the most precedence.\n+# More info on how this file works can be found at:\n+# https://help.github.com/articles/about-codeowners/\n+\n+# This file is called CODEOWNERS because it is a magic file for GitHub to\n+# automatically suggest reviewers. In this project's case, the names below\n+# should be thought of as code reviewers rather than owners. Regular\n+# contributors are free to add their names to specific directories or files\n+# provided that they are willing to provide a review when automatically\n+# assigned.\n+\n+# Absence from this list should not be interpreted as a discouragement to\n+# review a pull request. Peer review is always welcome and is a critical\n+# component of the progress of the codebase. Information on peer review\n+# guidelines can be found in the CONTRIBUTING.md doc.\n+\n+\n+# Maintainers\n+#   @laanwj\n+#   @sipa\n+#   @fanquake\n+#   @jonasschnelli\n+#   @marcofalke\n+#   @meshcollider\n+\n+# Docs\n+/doc/*[a-zA-Z-].md                          @harding\n+/doc/Doxyfile.in                            @fanquake\n+/doc/REST-interface.md                      @jonasschnelli\n+/doc/benchmarking.md                        @ariard\n+/doc/bitcoin-conf.md                        @hebasto\n+/doc/build-freebsd.md                       @fanquake\n+/doc/build-netbsd.md                        @fanquake\n+/doc/build-openbsd.md                       @laanwj\n+/doc/build-osx.md                           @fanquake\n+/doc/build-unix.md                          @laanwj\n+/doc/build-windows.md                       @sipsorcery\n+/doc/dependencies.md                        @fanquake\n+/doc/developer-notes.md                     @laanwj\n+/doc/files.md                               @hebasto\n+/doc/gitian-building.md                     @laanwj\n+/doc/reduce-memory.md                       @fanquake\n+/doc/reduce-traffic.md                      @jonasschnelli\n+/doc/release-process.md                     @laanwj\n+/doc/translation_strings_policy.md          @laanwj\n+\n+# Build aux\n+/build-aux/m4/bitcoin_qt.m4                 @hebasto\n+\n+# MSVC build system\n+/build_msvc/                                @sipsorcery\n+\n+# Settings\n+/src/util/settings.*                        @ryanofsky\n+\n+# Fuzzing\n+/src/test/fuzz/                             @practicalswift\n+/doc/fuzzing.md                             @practicalswift\n+\n+# Test framework\n+/test/functional/mempool_updatefromblock.py @hebasto\n+/test/functional/feature_asmap.py           @jonatack\n+/test/functional/interface_bitcoin_cli.py   @jonatack\n+/test/functional/tool_wallet.py             @jonatack\n+\n+# Translations\n+/src/util/translation.h                     @hebasto\n+\n+# Dev Tools\n+/contrib/devtools/security-check.py         @fanquake\n+/contrib/devtools/test-security-check.py    @fanquake\n+/contrib/devtools/symbol-check.py           @fanquake\n+\n+# Gitian/Guix\n+/contrib/gitian-build.py                    @hebasto\n+/contrib/guix/                              @dongcarl\n+\n+# Compatibility\n+/src/compat/glibc_*                         @fanquake\n+\n+# GUI\n+/src/qt/forms/                              @hebasto\n+\n+# Wallet\n+/src/wallet/                                @achow101\n+\n+# CLI\n+/src/bitcoin-cli.cpp                        @jonatack\n+\n+# Coinstats\n+/src/node/coinstats.*                       @fjahr\n+\n+# Index\n+/src/index/                                 @fjahr\n+\n+# Descriptors\n+*descriptor*                                @achow101 @sipa\n+\n+# Interfaces\n+/src/interfaces/                            @ryanofsky\n+\n+# DB\n+/src/txdb.*                                 @jamesob\n+/src/dbwrapper.*                            @jamesob\n+\n+# Scripts/Linter\n+*.sh                                        @practicalswift\n+/test/lint/                                 @practicalswift\n+/test/lint/lint-shell.sh                    @hebasto\n+\n+# Bech32\n+/src/bech32.*                               @sipa\n+/src/bench/bech32.*                         @sipa\n+\n+# PSBT\n+/src/psbt*                                  @achow101\n+/src/node/psbt*                             @achow101\n+/doc/psbt.md                                @achow101\n+\n+# P2P\n+/src/net_processing.*                       @sipa\n+/src/protocol.*                             @sipa\n+\n+# Consensus\n+/src/coins.*                                @sipa @jamesob\n+/src/script/script.*                        @sipa\n+/src/script/interpreter.*                   @sipa\n+/src/validation.*                           @sipa\n+/src/consensus/                             @sipa"
      },
      {
        "sha": "1598d077ff020f1f0be8388fded01c871c946354",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "modified",
        "additions": 125,
        "deletions": 103,
        "changes": 228,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1,5 +1,5 @@\n # ===========================================================================\n-#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+#        https://www.gnu.org/software/autoconf-archive/ax_pthread.html\n # ===========================================================================\n #\n # SYNOPSIS\n@@ -55,6 +55,7 @@\n #\n #   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n #   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#   Copyright (c) 2019 Marc Stevens <marc.stevens@cwi.nl>\n #\n #   This program is free software: you can redistribute it and/or modify it\n #   under the terms of the GNU General Public License as published by the\n@@ -67,7 +68,7 @@\n #   Public License for more details.\n #\n #   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#   with this program. If not, see <https://www.gnu.org/licenses/>.\n #\n #   As a special exception, the respective Autoconf Macro's copyright owner\n #   gives unlimited permission to copy, distribute and modify the configure\n@@ -82,7 +83,7 @@\n #   modified version of the Autoconf Macro, you may extend this special\n #   exception to the GPL to apply to your modified version as well.\n \n-#serial 23\n+#serial 27\n \n AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n AC_DEFUN([AX_PTHREAD], [\n@@ -123,10 +124,12 @@ fi\n # (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n # libraries is broken (non-POSIX).\n \n-# Create a list of thread flags to try.  Items starting with a \"-\" are\n-# C compiler flags, and other items are library names, except for \"none\"\n-# which indicates that we try without any flags at all, and \"pthread-config\"\n-# which is a program returning the flags for the Pth emulation library.\n+# Create a list of thread flags to try. Items with a \",\" contain both\n+# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n+# starting with a \"-\" are C compiler flags, and remaining items are\n+# library names, except for \"none\" which indicates that we try without\n+# any flags at all, and \"pthread-config\" which is a program returning\n+# the flags for the Pth emulation library.\n \n ax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n \n@@ -194,14 +197,47 @@ case $host_os in\n         # that too in a future libc.)  So we'll check first for the\n         # standard Solaris way of linking pthreads (-mt -lpthread).\n \n-        ax_pthread_flags=\"-mt,pthread pthread $ax_pthread_flags\"\n+        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n         ;;\n esac\n \n+# Are we compiling with Clang?\n+\n+AC_CACHE_CHECK([whether $CC is Clang],\n+    [ax_cv_PTHREAD_CLANG],\n+    [ax_cv_PTHREAD_CLANG=no\n+     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n+     if test \"x$GCC\" = \"xyes\"; then\n+        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n+            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n+#            if defined(__clang__) && defined(__llvm__)\n+             AX_PTHREAD_CC_IS_CLANG\n+#            endif\n+            ],\n+            [ax_cv_PTHREAD_CLANG=yes])\n+     fi\n+    ])\n+ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+\n+\n # GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n \n+# Note that for GCC and Clang -pthread generally implies -lpthread,\n+# except when -nostdlib is passed.\n+# This is problematic using libtool to build C++ shared libraries with pthread:\n+# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n+# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n+# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n+# To solve this, first try -pthread together with -lpthread for GCC\n+\n AS_IF([test \"x$GCC\" = \"xyes\"],\n-      [ax_pthread_flags=\"-pthread -pthreads $ax_pthread_flags\"])\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"])\n+\n+# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n+\n+AS_IF([test \"x$ax_pthread_clang\" = \"xyes\"],\n+      [ax_pthread_flags=\"-pthread,-lpthread -pthread\"])\n+\n \n # The presence of a feature test macro requesting re-entrant function\n # definitions is, on some systems, a strong hint that pthreads support is\n@@ -224,25 +260,86 @@ AS_IF([test \"x$ax_pthread_check_macro\" = \"x--\"],\n       [ax_pthread_check_cond=0],\n       [ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\"])\n \n-# Are we compiling with Clang?\n \n-AC_CACHE_CHECK([whether $CC is Clang],\n-    [ax_cv_PTHREAD_CLANG],\n-    [ax_cv_PTHREAD_CLANG=no\n-     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n-     if test \"x$GCC\" = \"xyes\"; then\n-        AC_EGREP_CPP([AX_PTHREAD_CC_IS_CLANG],\n-            [/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n-#            if defined(__clang__) && defined(__llvm__)\n-             AX_PTHREAD_CC_IS_CLANG\n-#            endif\n-            ],\n-            [ax_cv_PTHREAD_CLANG=yes])\n-     fi\n-    ])\n-ax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n+if test \"x$ax_pthread_ok\" = \"xno\"; then\n+for ax_pthread_try_flag in $ax_pthread_flags; do\n+\n+        case $ax_pthread_try_flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                *,*)\n+                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n+                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n+                AC_MSG_CHECKING([whether pthreads work with \"$PTHREAD_CFLAGS\" and \"$PTHREAD_LIBS\"])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n+                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n+                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n+                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n+                ;;\n+        esac\n+\n+        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n+        ax_pthread_save_LIBS=\"$LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+#                       if $ax_pthread_check_cond\n+#                        error \"$ax_pthread_check_macro must be defined\"\n+#                       endif\n+                        static void *some_global = NULL;\n+                        static void routine(void *a)\n+                          {\n+                             /* To avoid any unused-parameter or\n+                                unused-but-set-parameter warning.  */\n+                             some_global = a;\n+                          }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+            [ax_pthread_ok=yes],\n+            [])\n+\n+        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n+        LIBS=\"$ax_pthread_save_LIBS\"\n+\n+        AC_MSG_RESULT([$ax_pthread_ok])\n+        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n \n-ax_pthread_clang_warning=no\n \n # Clang needs special handling, because older versions handle the -pthread\n # option in a rather... idiosyncratic way\n@@ -261,11 +358,6 @@ if test \"x$ax_pthread_clang\" = \"xyes\"; then\n         # -pthread does define _REENTRANT, and while the Darwin headers\n         # ignore this macro, third-party headers might not.)\n \n-        PTHREAD_CFLAGS=\"-pthread\"\n-        PTHREAD_LIBS=\n-\n-        ax_pthread_ok=yes\n-\n         # However, older versions of Clang make a point of warning the user\n         # that, in an invocation where only linking and no compilation is\n         # taking place, the -pthread option has no effect (\"argument unused\n@@ -320,78 +412,7 @@ if test \"x$ax_pthread_clang\" = \"xyes\"; then\n \n fi # $ax_pthread_clang = yes\n \n-if test \"x$ax_pthread_ok\" = \"xno\"; then\n-for ax_pthread_try_flag in $ax_pthread_flags; do\n-\n-        case $ax_pthread_try_flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                -mt,pthread)\n-                AC_MSG_CHECKING([whether pthreads work with -mt -lpthread])\n-                PTHREAD_CFLAGS=\"-mt\"\n-                PTHREAD_LIBS=\"-lpthread\"\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $ax_pthread_try_flag])\n-                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                AS_IF([test \"x$ax_pthread_config\" = \"xno\"], [continue])\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n \n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$ax_pthread_try_flag])\n-                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n-                ;;\n-        esac\n-\n-        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n-        ax_pthread_save_LIBS=\"$LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-#                       if $ax_pthread_check_cond\n-#                        error \"$ax_pthread_check_macro must be defined\"\n-#                       endif\n-                        static void routine(void *a) { a = 0; }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-            [ax_pthread_ok=yes],\n-            [])\n-\n-        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n-        LIBS=\"$ax_pthread_save_LIBS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        AS_IF([test \"x$ax_pthread_ok\" = \"xyes\"], [break])\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n \n # Various other checks:\n if test \"x$ax_pthread_ok\" = \"xyes\"; then\n@@ -438,7 +459,8 @@ if test \"x$ax_pthread_ok\" = \"xyes\"; then\n         AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n             [ax_cv_PTHREAD_PRIO_INHERIT],\n             [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                             [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                                             [[int i = PTHREAD_PRIO_INHERIT;\n+                                               return i;]])],\n                             [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n                             [ax_cv_PTHREAD_PRIO_INHERIT=no])\n             ])"
      },
      {
        "sha": "ae8120fdf3a44ab47700fe40a3a3cd93f3cb8d96",
        "filename": "build_msvc/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/.gitignore?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -24,3 +24,4 @@ libtest_util/libtest_util.vcxproj\n */Win32\n libbitcoin_qt/QtGeneratedFiles/*\n test_bitcoin-qt/QtGeneratedFiles/*\n+vcpkg_installed\n\\ No newline at end of file"
      },
      {
        "sha": "87ea556a23b31897ac72907ebb5f9ee9516b7a1b",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 21,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -3,7 +3,7 @@ Building Bitcoin Core with Visual Studio\n \n Introduction\n ---------------------\n-Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the build_msvc directory. The build has been tested with Visual Studio 2017 and 2019.\n+Solution and project files to build the Bitcoin Core applications `msbuild` or Visual Studio can be found in the `build_msvc` directory. The build has been tested with Visual Studio 2017 and 2019.\n \n Building with Visual Studio is an alternative to the Linux based [cross-compiler build](https://github.com/bitcoin/bitcoin/blob/master/doc/build-windows.md).\n \n@@ -12,10 +12,9 @@ Quick Start\n The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n \n ```\n-vcpkg install --triplet x64-windows-static berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion\n-vcpkg integrate install\n-py -3 build_msvc\\msvc-autogen.py\n-msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n+cd build_msvc\n+py -3 msvc-autogen.py\n+msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n \n Dependencies\n@@ -28,14 +27,7 @@ Options for installing the dependencies in a Visual Studio compatible manner are\n - Download the source code, build each dependency, add the required include paths, link libraries and binary tools to the Visual Studio project files.\n - Use [nuget](https://www.nuget.org/) packages with the understanding that any binary files have been compiled by an untrusted third party.\n \n-The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are:\n-\n-- Berkeley DB\n-- Boost\n-- DoubleConversion\n-- libevent\n-- Qt5\n-- ZeroMQ\n+The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md) required for building are listed in the `build_msvc/vcpkg.json` file. The `msbuild` project files are configured to automatically install the `vcpkg` dependencies.\n \n Qt\n ---------------------\n@@ -52,20 +44,14 @@ Building\n The instructions below use `vcpkg` to install the dependencies.\n \n - Install [`vcpkg`](https://github.com/Microsoft/vcpkg).\n-- Install the required packages (replace x64 with x86 as required). The list of required packages can be found in the `build_msvc\\vcpkg-packages.txt` file. The PowerShell command below will work if run from the repository root directory and `vcpkg` is in the path. Alternatively the contents of the packages text file can be pasted in place of the `Get-Content` cmdlet.\n-\n-```\n-PS >.\\vcpkg install --triplet x64-windows-static $(Get-Content -Path build_msvc\\vcpkg-packages.txt).split()\n-PS >.\\vcpkg integrate install\n-```\n \n - Use Python to generate `*.vcxproj` from Makefile\n \n ```\n PS >py -3 msvc-autogen.py\n ```\n \n-- An optional step is to adjust the settings in the build_msvc directory and the common.init.vcxproj file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n+- An optional step is to adjust the settings in the `build_msvc` directory and the `common.init.vcxproj` file. This project file contains settings that are common to all projects such as the runtime library version and target Windows SDK version. The Qt directories can also be set.\n \n - To build from the command line with the Visual Studio 2017 toolchain use:\n \n@@ -79,7 +65,7 @@ msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /p:PlatformTools\n msbuild /m bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n \n-- Alternatively open the `build_msvc\\bitcoin.sln` file in Visual Studio.\n+- Alternatively open the `build_msvc/bitcoin.sln` file in Visual Studio.\n \n AppVeyor\n ---------------------"
      },
      {
        "sha": "ed227519ae10181a24145d33e131358e5c49a477",
        "filename": "build_msvc/common.init.vcxproj",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/common.init.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/common.init.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/common.init.vcxproj?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -9,6 +9,15 @@\n     <UseNativeEnvironment>true</UseNativeEnvironment>\n    </PropertyGroup>\n \n+   <PropertyGroup Label=\"Vcpkg\">\n+    <VcpkgEnabled>true</VcpkgEnabled>\n+    <VcpkgEnableManifest>true</VcpkgEnableManifest>\n+    <VcpkgManifestInstall>true</VcpkgManifestInstall>\n+    <VcpkgUseStatic>true</VcpkgUseStatic>\n+    <VcpkgAutoLink>true</VcpkgAutoLink>\n+    <VcpkgConfiguration>$(Configuration)</VcpkgConfiguration>\n+  </PropertyGroup>\n+\n   <PropertyGroup Condition=\"'$(WindowsTargetPlatformVersion)'=='' and !Exists('$(WindowsSdkDir)\\DesignTime\\CommonConfiguration\\Neutral\\Windows.props')\">\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>\n      <WindowsTargetPlatformVersion_10 Condition=\"'$(WindowsTargetPlatformVersion_10)' == ''\">$(Registry:HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Microsoft SDKs\\Windows\\v10.0@ProductVersion)</WindowsTargetPlatformVersion_10>"
      },
      {
        "sha": "edce8576c33185b35094b67d3a3aa4e785850113",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=99c50a691afd4d55c249d0a66bfa5f24bd3ca173",
        "patch": "@@ -1 +0,0 @@\n-berkeleydb boost-filesystem boost-multi-index boost-process boost-signals2 boost-test boost-thread libevent[thread] zeromq double-conversion"
      },
      {
        "sha": "5d5f94227f8e5cef658ee528cff89bfe8d1f1d90",
        "filename": "build_msvc/vcpkg.json",
        "status": "added",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/vcpkg.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/build_msvc/vcpkg.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg.json?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,19 @@\n+{\n+  \"name\": \"bitcoin-core\",\n+  \"version-string\": \"1\",\n+  \"dependencies\": [\n+    \"berkeleydb\",\n+    \"boost-filesystem\",\n+    \"boost-multi-index\",\n+    \"boost-process\",\n+    \"boost-signals2\",\n+    \"boost-test\",\n+    \"boost-thread\",\n+    \"double-conversion\",\n+    {\n+      \"name\": \"libevent\",\n+      \"features\": [\"thread\"]\n+    },\n+    \"zeromq\"\n+  ]\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "3df59e0b7b813e2f715e0a5dd7f49837481b5bcb",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1684,10 +1684,10 @@ echo \"  target os     = $TARGET_OS\"\n echo \"  build os      = $build_os\"\n echo\n echo \"  CC            = $CC\"\n-echo \"  CFLAGS        = $CFLAGS\"\n+echo \"  CFLAGS        = $PTHREAD_CFLAGS $CFLAGS\"\n echo \"  CPPFLAGS      = $DEBUG_CPPFLAGS $HARDENED_CPPFLAGS $CPPFLAGS\"\n echo \"  CXX           = $CXX\"\n echo \"  CXXFLAGS      = $DEBUG_CXXFLAGS $HARDENED_CXXFLAGS $WARN_CXXFLAGS $NOWARN_CXXFLAGS $ERROR_CXXFLAGS $GPROF_CXXFLAGS $CXXFLAGS\"\n-echo \"  LDFLAGS       = $PTHREAD_CFLAGS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n+echo \"  LDFLAGS       = $PTHREAD_LIBS $HARDENED_LDFLAGS $GPROF_LDFLAGS $LDFLAGS\"\n echo \"  ARFLAGS       = $ARFLAGS\"\n echo"
      },
      {
        "sha": "5f566261ca6746f15edcf2cf41fb7c46525fa79e",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -13,6 +13,9 @@ port=8332\n #regtest default\n #port=18443\n \n+#signet default\n+#port=38332\n+\n # bootstrap.dat hashlist settings (linearize-hashes)\n max_height=313000\n \n@@ -33,6 +36,11 @@ input=/home/example/.bitcoin/blocks\n #genesis=0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\n #input=/home/example/.bitcoin/regtest/blocks\n \n+# signet\n+#netmagic=0a03cf40\n+#genesis=00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\n+#input=/home/example/.bitcoin/signet/blocks\n+\n # \"output\" option causes blockchain files to be written to the given location,\n # with \"output_file\" ignored. If not used, \"output_file\" is used instead.\n # output=/home/example/blockchain_directory"
      },
      {
        "sha": "8b8503331d2c23abc9514f204bab1771de39b179",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -11,7 +11,8 @@\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-                -zmqpubhashblock=tcp://127.0.0.1:28332\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n+                -zmqpubsequence=tcp://127.0.0.1:28332\n \n     We use the asyncio library here.  `self.handle()` installs itself as a\n     future at the end of the function.  Since it never returns with the event\n@@ -47,16 +48,14 @@ def __init__(self):\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n         self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"sequence\")\n         self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n \n     async def handle(self) :\n-        msg = await self.zmqSubSocket.recv_multipart()\n-        topic = msg[0]\n-        body = msg[1]\n+        topic, body, seq = await self.zmqSubSocket.recv_multipart()\n         sequence = \"Unknown\"\n-        if len(msg[-1]) == 4:\n-          msgSequence = struct.unpack('<I', msg[-1])[-1]\n-          sequence = str(msgSequence)\n+        if len(seq) == 4:\n+            sequence = str(struct.unpack('<I', seq)[-1])\n         if topic == b\"hashblock\":\n             print('- HASH BLOCK ('+sequence+') -')\n             print(binascii.hexlify(body))\n@@ -69,6 +68,12 @@ async def handle(self) :\n         elif topic == b\"rawtx\":\n             print('- RAW TX ('+sequence+') -')\n             print(binascii.hexlify(body))\n+        elif topic == b\"sequence\":\n+            hash = binascii.hexlify(body[:32])\n+            label = chr(body[32])\n+            mempool_sequence = None if len(body) != 32+1+8 else struct.unpack(\"<Q\", body[32+1:])[0]\n+            print('- SEQUENCE ('+sequence+') -')\n+            print(hash, label, mempool_sequence)\n         # schedule ourselves to receive the next message\n         asyncio.ensure_future(self.handle())\n "
      },
      {
        "sha": "58d882eb053ac571cd05547e951feaaca1854c74",
        "filename": "depends/funcs.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -265,4 +265,4 @@ $(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$\n $(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))\n \n #special exception: if a toolchain package exists, all non-native packages depend on it\n-$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) $($($(host_arch)_$(host_os)_native_binutils)_cached) ))\n+$(foreach package,$(packages),$(eval $($(package)_extracted): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) $($($(host_arch)_$(host_os)_native_binutils)_cached) ))"
      },
      {
        "sha": "083bc68d66c3bb1c2b881747d25ec1827a576077",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -11,7 +11,7 @@ $(package)_qt_libs=corelib network widgets gui plugins testlib\n $(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch fix_no_printer.patch\n $(package)_patches+= fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n $(package)_patches+= fix_android_qmake_conf.patch fix_android_jni_static.patch dont_hardcode_pwd.patch\n-$(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch\n+$(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch fix_powerpc_libpng.patch\n \n # Update OSX_QT_TRANSLATIONS when this is updated\n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n@@ -194,6 +194,7 @@ endef\n \n define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_powerpc_libpng.patch && \\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   patch -p1 -i $($(package)_patch_dir)/drop_lrelease_dependency.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/dont_hardcode_pwd.patch &&\\"
      },
      {
        "sha": "d37b6c777646c39bd09b4ee63e8c98047b49bab4",
        "filename": "depends/patches/qt/fix_powerpc_libpng.patch",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/patches/qt/fix_powerpc_libpng.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/depends/patches/qt/fix_powerpc_libpng.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_powerpc_libpng.patch?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,23 @@\n+commit 6f9feb773a43c5abfa3455da2e324180e789285b\n+Author: fanquake <fanquake@gmail.com>\n+Date:   Tue Sep 15 21:44:31 2020 +0800\n+\n+    Fix PowerPC build of libpng\n+\n+    See https://bugreports.qt.io/browse/QTBUG-66388.\n+\n+    Can be dropped when we are building qt 5.12.0 or later.\n+\n+diff --git a/qtbase/src/3rdparty/libpng/libpng.pro b/qtbase/src/3rdparty/libpng/libpng.pro\n+index 577b61d8..a2f56669 100644\n+--- a/qtbase/src/3rdparty/libpng/libpng.pro\n++++ b/qtbase/src/3rdparty/libpng/libpng.pro\n+@@ -10,7 +10,7 @@ MODULE_INCLUDEPATH = $$PWD\n+ \n+ load(qt_helper_lib)\n+ \n+-DEFINES += PNG_ARM_NEON_OPT=0\n++DEFINES += PNG_ARM_NEON_OPT=0 PNG_POWERPC_VSX_OPT=0\n+ SOURCES += \\\n+     png.c \\\n+     pngerror.c \\"
      },
      {
        "sha": "2d099b96261e68a316a67c5464da015ffc8c8a61",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -42,4 +42,5 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.21.0**):\n * [`BIP 173`](https://github.com/bitcoin/bips/blob/master/bip-0173.mediawiki): Bech32 addresses for native Segregated Witness outputs are supported as of **v0.16.0** ([PR 11167](https://github.com/bitcoin/bitcoin/pull/11167)). Bech32 addresses are generated by default as of **v0.20.0** ([PR 16884](https://github.com/bitcoin/bitcoin/pull/16884)).\n * [`BIP 174`](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki): RPCs to operate on Partially Signed Bitcoin Transactions (PSBT) are present as of **v0.17.0** ([PR 13557](https://github.com/bitcoin/bitcoin/pull/13557)).\n * [`BIP 176`](https://github.com/bitcoin/bips/blob/master/bip-0176.mediawiki): Bits Denomination [QT only] is supported as of **v0.16.0** ([PR 12035](https://github.com/bitcoin/bitcoin/pull/12035)).\n+* [`BIP 325`](https://github.com/bitcoin/bips/blob/master/bip-0325.mediawiki): Signet test network is supported as of **v0.21.0** ([PR 18267](https://github.com/bitcoin/bitcoin/pull/18267)).\n * [`BIP 339`](https://github.com/bitcoin/bips/blob/master/bip-0339.mediawiki): Relay of transactions by wtxid is supported as of **v0.21.0** ([PR 18044](https://github.com/bitcoin/bitcoin/pull/18044))."
      },
      {
        "sha": "2b051c078c8748b9e2988457d724655a7d9f7665",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -2,9 +2,7 @@ OpenBSD build guide\n ======================\n (updated for OpenBSD 6.7)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n-\n-OpenBSD is most commonly used as a server OS, so this guide does not contain instructions for building the GUI.\n+This guide describes how to build bitcoind, bitcoin-qt, and command-line utilities on OpenBSD.\n \n Preparation\n -------------\n@@ -13,6 +11,7 @@ Run the following as root to install the base dependencies for building:\n \n ```bash\n pkg_add git gmake libevent libtool boost\n+pkg_add qt5 # (optional for enabling the GUI)\n pkg_add autoconf # (select highest version, e.g. 2.69)\n pkg_add automake # (select highest version, e.g. 1.16)\n pkg_add python # (select highest version, e.g. 3.8)\n@@ -80,6 +79,14 @@ To configure without wallet:\n ./configure --disable-wallet --with-gui=no CC=cc CC_FOR_BUILD=cc CXX=c++ MAKE=gmake\n ```\n \n+To configure with GUI:\n+```bash\n+./configure --with-gui=yes CC=cc CXX=c++ \\\n+    BDB_LIBS=\"-L${BDB_PREFIX}/lib -ldb_cxx-4.8\" \\\n+    BDB_CFLAGS=\"-I${BDB_PREFIX}/include\" \\\n+    MAKE=gmake\n+```\n+\n Build and run the tests:\n ```bash\n gmake # use -jX here for parallelism"
      },
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:\n-\n-```C++\n-// net_processing.h\n-void RelayTransaction(...) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n-\n-// net_processing.cpp\n-void RelayTransaction(...)\n-{\n-    AssertLockHeld(::cs_main);\n-\n-    connman.ForEachNode([&txid, &wtxid](CNode* pnode) {\n-        LockAssertion lock(::cs_main);\n-        ...\n-    });\n-}\n-\n-```\n-\n - Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n   deadlocks are introduced. As of 0.12, this is defined by default when\n   configuring with `--enable-debug`."
      },
      {
        "sha": "598e49dcae53c09c7afc2c8b4f8a3e68e0c15017",
        "filename": "doc/release-notes-15367.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-15367.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-15367.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15367.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,6 @@\n+Configuration option changes\n+----------------------------\n+\n+- The `startupnotify` option is used to specify a command to\n+  execute when Bitcoin Core has finished with its startup\n+  sequence. (#15367)\n\\ No newline at end of file"
      },
      {
        "sha": "00c847a8d2928f3e679e600b49dd9934e5706b42",
        "filename": "doc/release-notes-15454.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-15454.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-15454.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-15454.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,6 @@\n+Wallet\n+------\n+\n+Bitcoin Core will no longer create an unnamed `\"\"` wallet by default when no wallet is specified on the command line or in the configuration files.\n+For backwards compatibility, if an unnamed `\"\"` wallet already exists and would have been loaded previously, then it will still be loaded.\n+Users without an unnamed `\"\"` wallet and without any other wallets to be loaded on startup  will be prompted to either choose a wallet to load, or to create a new wallet."
      },
      {
        "sha": "958633e780a2dd3e62650b2336180a219e5d3231",
        "filename": "doc/release-notes-16378.md",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-16378.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-16378.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16378.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,6 @@\n+RPC\n+---\n+- A new `send` RPC with similar syntax to `walletcreatefundedpsbt`, including\n+  support for coin selection and a custom fee rate. The `send` RPC is experimental\n+  and may change in subsequent releases. Using it is encouraged once it's no\n+  longer experimental: `sendmany` and `sendtoaddress` may be deprecated in a future release."
      },
      {
        "sha": "b31f85eb6ed0e130d2f1d60d106081c3ae608f44",
        "filename": "doc/release-notes-18309.md",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-18309.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes-18309.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-18309.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -0,0 +1,4 @@\n+Command-line options\n+-----------------------------\n+\n+The same ZeroMQ notification (e.g. `-zmqpubhashtx=address`) can now be specified multiple times to publish the same notification to different ZeroMQ sockets.\n\\ No newline at end of file"
      },
      {
        "sha": "d5cc5e90f8c07912f6131bedd1ba8b4f372dbf90",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -102,6 +102,20 @@ will trigger BIP 125 (replace-by-fee) opt-in. (#11413)\n   option `-deprecatedrpc=banscore` is used. The `banscore` field will be fully\n   removed in the next major release. (#19469)\n \n+- The `testmempoolaccept` RPC returns `vsize` and a `fee` object with the `base` fee\n+  if the transaction passes validation. (#19940)\n+\n+- The `getpeerinfo` RPC now returns a `connection_type` field. This indicates\n+  the type of connection established with the peer. It will return one of six\n+  options. For more information, see the `getpeerinfo` help documentation.\n+  (#19725)\n+\n+- The `getpeerinfo` RPC no longer returns the `addnode` field by default. This\n+  field will be fully removed in the next major release.  It can be accessed\n+  with the configuration option `-deprecatedrpc=getpeerinfo_addnode`. However,\n+  it is recommended to instead use the `connection_type` field (it will return\n+  `manual` when addnode is true). (#19725)\n+\n - The `walletcreatefundedpsbt` RPC call will now fail with\n   `Insufficient funds` when inputs are manually selected but are not enough to cover\n   the outputs and fee. Additional inputs can automatically be added through the\n@@ -141,7 +155,8 @@ Updated settings\n \n - Netmasks that contain 1-bits after 0-bits (the 1-bits are not contiguous on\n   the left side, e.g. 255.0.255.255) are no longer accepted. They are invalid\n-  according to RFC 4632.\n+  according to RFC 4632. Netmasks are used in the `-rpcallowip` and `-whitelist`\n+  configuration options and in the `setban` RPC. (#19628)\n \n Changes to Wallet or GUI related settings can be found in the GUI or Wallet  section below.\n \n@@ -176,6 +191,9 @@ Wallet\n   introduced unbroadcast set. See the \"P2P and network changes\" section for\n   more information on the unbroadcast set. (#18038)\n \n+- The `sendtoaddress` and `sendmany` RPCs accept an optional `verbose=True`\n+  argument to also return the fee reason about the sent tx. (#19501)\n+\n - The wallet can create a transaction without change even when the keypool is\n   empty. Previously it failed. (#17219)\n \n@@ -332,6 +350,10 @@ RPC\n Tests\n -----\n \n+- The BIP 325 default signet can be enabled by the `-chain=signet` or `-signet`\n+  setting. The settings `-signetchallenge` and `-signetseednode` allow\n+  enabling a custom signet.\n+\n Credits\n =======\n "
      },
      {
        "sha": "85f33701306bc261355ef5318b17e2189a617580",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 25,
        "deletions": 6,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -63,9 +63,11 @@ Currently, the following notifications are supported:\n     -zmqpubhashblock=address\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n+    -zmqpubsequence=address\n \n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n+The same notification can be specified more than once.\n \n The option to set the PUB socket's outbound message high water mark\n (SNDHWM) may be set individually for each notification:\n@@ -74,20 +76,30 @@ The option to set the PUB socket's outbound message high water mark\n     -zmqpubhashblockhwm=n\n     -zmqpubrawblockhwm=n\n     -zmqpubrawtxhwm=n\n+    -zmqpubsequencehwm=address\n \n The high water mark value must be an integer greater than or equal to 0.\n \n For instance:\n \n     $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubhashtx=tcp://192.168.1.2:28332 \\\n                -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw \\\n                -zmqpubhashtxhwm=10000\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the transaction hash (32\n-bytes).\n+bytes) for all but `sequence` topic. For `sequence`, the body\n+is structured as the following based on the type of message:\n+\n+    <32-byte hash>C :                 Blockhash connected\n+    <32-byte hash>D :                 Blockhash disconnected\n+    <32-byte hash>R<8-byte LE uint> : Transactionhash removed from mempool for non-block inclusion reason\n+    <32-byte hash>A<8-byte LE uint> : Transactionhash added mempool\n+\n+Where the 8-byte uints correspond to the mempool sequence number.\n \n These options can also be provided in bitcoin.conf.\n \n@@ -124,13 +136,20 @@ No authentication or authorization is done on connecting clients; it\n is assumed that the ZeroMQ port is exposed only to trusted entities,\n using other means such as firewalling.\n \n-Note that when the block chain tip changes, a reorganisation may occur\n-and just the tip will be notified. It is up to the subscriber to\n-retrieve the chain from the last known block to the new tip. Also note\n-that no notification occurs if the tip was in the active chain - this\n-is the case after calling invalidateblock RPC.\n+Note that for `*block` topics, when the block chain tip changes,\n+a reorganisation may occur and just the tip will be notified.\n+It is up to the subscriber to retrieve the chain from the last known\n+block to the new tip. Also note that no notification will occur if the tip\n+was in the active chain--as would be the case after calling invalidateblock RPC.\n+In contrast, the `sequence` topic publishes all block connections and\n+disconnections.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type you are\n using. Bitcoind appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications.\n+\n+The `sequence` topic refers specifically to the mempool sequence\n+number, which is also published along with all mempool events. This\n+is a different sequence value than in ZMQ itself in order to allow a total\n+ordering of mempool events to be constructed."
      },
      {
        "sha": "aa63b5f516cbca15ab47c86f155661383c4aa098",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -4,10 +4,11 @@\n \n DIST_SUBDIRS = secp256k1 univalue\n \n-AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n+AM_LDFLAGS = $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS) $(GPROF_LDFLAGS) $(SANITIZER_LDFLAGS)\n AM_CXXFLAGS = $(DEBUG_CXXFLAGS) $(HARDENED_CXXFLAGS) $(WARN_CXXFLAGS) $(NOWARN_CXXFLAGS) $(ERROR_CXXFLAGS) $(GPROF_CXXFLAGS) $(SANITIZER_CXXFLAGS)\n AM_CPPFLAGS = $(DEBUG_CPPFLAGS) $(HARDENED_CPPFLAGS)\n AM_LIBTOOLFLAGS = --preserve-dup-deps\n+PTHREAD_FLAGS = $(PTHREAD_CFLAGS) $(PTHREAD_LIBS)\n EXTRA_LIBRARIES =\n \n if EMBEDDED_UNIVALUE\n@@ -201,6 +202,7 @@ BITCOIN_CORE_H = \\\n   script/signingprovider.h \\\n   script/standard.h \\\n   shutdown.h \\\n+  signet.h \\\n   streams.h \\\n   support/allocators/secure.h \\\n   support/allocators/zeroafterfree.h \\\n@@ -262,10 +264,10 @@ BITCOIN_CORE_H = \\\n   walletinitinterface.h \\\n   warnings.h \\\n   zmq/zmqabstractnotifier.h \\\n-  zmq/zmqconfig.h\\\n   zmq/zmqnotificationinterface.h \\\n   zmq/zmqpublishnotifier.h \\\n-  zmq/zmqrpc.h\n+  zmq/zmqrpc.h \\\n+  zmq/zmqutil.h\n \n \n obj/build.h: FORCE\n@@ -321,6 +323,7 @@ libbitcoin_server_a_SOURCES = \\\n   rpc/server.cpp \\\n   script/sigcache.cpp \\\n   shutdown.cpp \\\n+  signet.cpp \\\n   timedata.cpp \\\n   torcontrol.cpp \\\n   txdb.cpp \\\n@@ -344,7 +347,8 @@ libbitcoin_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n   zmq/zmqpublishnotifier.cpp \\\n-  zmq/zmqrpc.cpp\n+  zmq/zmqrpc.cpp \\\n+  zmq/zmqutil.cpp\n endif\n \n \n@@ -566,7 +570,7 @@ nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n bitcoin_daemon_sources = bitcoind.cpp\n bitcoin_bin_cppflags = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n bitcoin_bin_cxxflags = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_bin_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_bin_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n if TARGET_WINDOWS\n bitcoin_daemon_sources += bitcoind-res.rc\n@@ -603,7 +607,7 @@ bitcoin_node_LDADD = $(LIBBITCOIN_SERVER) $(bitcoin_bin_ldadd)\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n if TARGET_WINDOWS\n bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n@@ -622,7 +626,7 @@ bitcoin_cli_LDADD += $(BOOST_LIBS) $(EVENT_LIBS)\n bitcoin_tx_SOURCES = bitcoin-tx.cpp\n bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n if TARGET_WINDOWS\n bitcoin_tx_SOURCES += bitcoin-tx-res.rc"
      },
      {
        "sha": "bd9143a3817c6712b0e6cb112ce819da0d03b631",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -75,7 +75,7 @@ bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)\n "
      },
      {
        "sha": "69ff0f025139b8483db3f8a7aadfea8e012061bc",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -322,7 +322,7 @@ endif\n bitcoin_qt_ldadd += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bitcoin_qt_ldflags = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n bitcoin_qt_libtoolflags = $(AM_LIBTOOLFLAGS) --tag CXX\n \n qt_bitcoin_qt_CPPFLAGS = $(bitcoin_qt_cppflags)"
      },
      {
        "sha": "17ba0780e610d7cf8773dea8e3472b739de7b8f1",
        "filename": "src/Makefile.qt_locale.include",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qt_locale.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qt_locale.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt_locale.include?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -27,6 +27,7 @@ QT_TS = \\\n   qt/locale/bitcoin_fi.ts \\\n   qt/locale/bitcoin_fil.ts \\\n   qt/locale/bitcoin_fr.ts \\\n+  qt/locale/bitcoin_gl_ES.ts \\\n   qt/locale/bitcoin_he.ts \\\n   qt/locale/bitcoin_hi.ts \\\n   qt/locale/bitcoin_hr.ts \\\n@@ -71,7 +72,6 @@ QT_TS = \\\n   qt/locale/bitcoin_ta.ts \\\n   qt/locale/bitcoin_te.ts \\\n   qt/locale/bitcoin_th.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n   qt/locale/bitcoin_uk.ts \\\n   qt/locale/bitcoin_ur.ts \\\n   qt/locale/bitcoin_uz@Cyrl.ts \\\n@@ -82,4 +82,5 @@ QT_TS = \\\n   qt/locale/bitcoin_zh.ts \\\n   qt/locale/bitcoin_zh_CN.ts \\\n   qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+  qt/locale/bitcoin_zh_TW.ts \\\n+  qt/locale/bitcoin_zu.ts"
      },
      {
        "sha": "d300398b25517514351b7b9c41d1232a0e46e37a",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -57,7 +57,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBIT\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno"
      },
      {
        "sha": "28608715b4c30f494ffce9fa18ee402dfba11372",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 160,
        "deletions": 151,
        "changes": 311,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -138,6 +138,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/secp256k1_ecdsa_signature_parse_der_lax \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/signature_checker \\\n+  test/fuzz/signet \\\n   test/fuzz/snapshotmetadata_deserialize \\\n   test/fuzz/span \\\n   test/fuzz/spanparsing \\\n@@ -316,768 +317,770 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS) -static\n \n if ENABLE_ZMQ\n test_test_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_FUZZ\n \n+FUZZ_SUITE_LDFLAGS_COMMON = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) $(PTHREAD_FLAGS)\n+\n test_fuzz_addition_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_addition_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_addition_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addition_overflow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addition_overflow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_addition_overflow_SOURCES = test/fuzz/addition_overflow.cpp\n \n test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDR_INFO_DESERIALIZE=1\n test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addr_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addr_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_addr_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_addrdb_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_addrdb_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_addrdb_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addrdb_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addrdb_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_addrdb_SOURCES = test/fuzz/addrdb.cpp\n \n test_fuzz_address_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDRESS_DESERIALIZE=1\n test_fuzz_address_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_address_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_address_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_address_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_address_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_addrman_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDRMAN_DESERIALIZE=1\n test_fuzz_addrman_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_addrman_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_addrman_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addrman_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_addrman_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_asmap_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_asmap_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_asmap_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_asmap_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_asmap_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_asmap_SOURCES = test/fuzz/asmap.cpp\n \n test_fuzz_asmap_direct_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_asmap_direct_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_asmap_direct_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_asmap_direct_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_asmap_direct_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_asmap_direct_SOURCES = test/fuzz/asmap_direct.cpp\n \n test_fuzz_autofile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_autofile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_autofile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_autofile_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_autofile_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_autofile_SOURCES = test/fuzz/autofile.cpp\n \n test_fuzz_banentry_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBANENTRY_DESERIALIZE=1\n test_fuzz_banentry_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_banentry_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_banentry_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_banentry_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_banentry_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_banman_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_banman_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_banman_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_banman_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_banman_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_banman_SOURCES = test/fuzz/banman.cpp\n \n test_fuzz_base_encode_decode_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_base_encode_decode_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_base_encode_decode_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_base_encode_decode_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_base_encode_decode_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_base_encode_decode_SOURCES = test/fuzz/base_encode_decode.cpp\n \n test_fuzz_bech32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_bech32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_bech32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bech32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bech32_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_bech32_SOURCES = test/fuzz/bech32.cpp\n \n test_fuzz_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_SOURCES = test/fuzz/block.cpp\n \n test_fuzz_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_DESERIALIZE=1\n test_fuzz_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_block_file_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILE_INFO_DESERIALIZE=1\n test_fuzz_block_file_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_file_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_file_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_file_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_file_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_block_filter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILTER_DESERIALIZE=1\n test_fuzz_block_filter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_filter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_filter_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_filter_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_block_header_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_block_header_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_header_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_header_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_header_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_header_SOURCES = test/fuzz/block_header.cpp\n \n test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1\n test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_block_header_and_short_txids_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blockfilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_blockfilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blockfilter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockfilter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blockfilter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blockfilter_SOURCES = test/fuzz/blockfilter.cpp\n \n test_fuzz_blockheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKHEADER_DESERIALIZE=1\n test_fuzz_blockheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blockheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockheader_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blockheader_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blockheader_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blocklocator_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKLOCATOR_DESERIALIZE=1\n test_fuzz_blocklocator_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blocklocator_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocklocator_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blocklocator_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blocklocator_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blockmerkleroot_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKMERKLEROOT=1\n test_fuzz_blockmerkleroot_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blockmerkleroot_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockmerkleroot_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blockmerkleroot_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blockmerkleroot_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blocktransactions_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKTRANSACTIONS_DESERIALIZE=1\n test_fuzz_blocktransactions_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blocktransactions_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocktransactions_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blocktransactions_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blocktransactions_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blocktransactionsrequest_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKTRANSACTIONSREQUEST_DESERIALIZE=1\n test_fuzz_blocktransactionsrequest_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blocktransactionsrequest_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blocktransactionsrequest_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blocktransactionsrequest_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_blockundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCKUNDO_DESERIALIZE=1\n test_fuzz_blockundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_blockundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_blockundo_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_blockundo_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_blockundo_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bloom_filter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_bloom_filter_SOURCES = test/fuzz/bloom_filter.cpp\n \n test_fuzz_bloomfilter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOOMFILTER_DESERIALIZE=1\n test_fuzz_bloomfilter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_bloomfilter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_bloomfilter_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_bloomfilter_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_buffered_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_buffered_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_buffered_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_buffered_file_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_buffered_file_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_buffered_file_SOURCES = test/fuzz/buffered_file.cpp\n \n test_fuzz_chain_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_chain_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_chain_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_chain_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_chain_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_chain_SOURCES = test/fuzz/chain.cpp\n \n test_fuzz_checkqueue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_checkqueue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_checkqueue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_checkqueue_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_checkqueue_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_checkqueue_SOURCES = test/fuzz/checkqueue.cpp\n \n test_fuzz_coins_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DCOINS_DESERIALIZE=1\n test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_coins_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_coins_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_coins_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_coins_view_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_coins_view_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_coins_view_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_coins_view_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_coins_view_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_coins_view_SOURCES = test/fuzz/coins_view.cpp\n \n test_fuzz_crypto_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_SOURCES = test/fuzz/crypto.cpp\n \n test_fuzz_crypto_aes256_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_aes256_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_aes256_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_aes256_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_aes256_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_aes256_SOURCES = test/fuzz/crypto_aes256.cpp\n \n test_fuzz_crypto_aes256cbc_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_aes256cbc_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_aes256cbc_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_aes256cbc_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_aes256cbc_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_aes256cbc_SOURCES = test/fuzz/crypto_aes256cbc.cpp\n \n test_fuzz_crypto_chacha20_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_chacha20_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_chacha20_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_chacha20_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_chacha20_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_chacha20_SOURCES = test/fuzz/crypto_chacha20.cpp\n \n test_fuzz_crypto_chacha20_poly1305_aead_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_chacha20_poly1305_aead_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_chacha20_poly1305_aead_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_chacha20_poly1305_aead_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_chacha20_poly1305_aead_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_chacha20_poly1305_aead_SOURCES = test/fuzz/crypto_chacha20_poly1305_aead.cpp\n \n test_fuzz_crypto_common_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_common_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_common_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_common_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_common_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_common_SOURCES = test/fuzz/crypto_common.cpp\n \n test_fuzz_crypto_hkdf_hmac_sha256_l32_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_hkdf_hmac_sha256_l32_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_hkdf_hmac_sha256_l32_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_hkdf_hmac_sha256_l32_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_hkdf_hmac_sha256_l32_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_hkdf_hmac_sha256_l32_SOURCES = test/fuzz/crypto_hkdf_hmac_sha256_l32.cpp\n \n test_fuzz_crypto_poly1305_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_crypto_poly1305_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_crypto_poly1305_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_crypto_poly1305_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_crypto_poly1305_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_crypto_poly1305_SOURCES = test/fuzz/crypto_poly1305.cpp\n \n test_fuzz_cuckoocache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_cuckoocache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_cuckoocache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_cuckoocache_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_cuckoocache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_cuckoocache_SOURCES = test/fuzz/cuckoocache.cpp\n \n test_fuzz_decode_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_decode_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_decode_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_decode_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_decode_tx_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_decode_tx_SOURCES = test/fuzz/decode_tx.cpp\n \n test_fuzz_descriptor_parse_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_descriptor_parse_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_descriptor_parse_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_descriptor_parse_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_descriptor_parse_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_descriptor_parse_SOURCES = test/fuzz/descriptor_parse.cpp\n \n test_fuzz_diskblockindex_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DDISKBLOCKINDEX_DESERIALIZE=1\n test_fuzz_diskblockindex_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_diskblockindex_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_diskblockindex_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_diskblockindex_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_diskblockindex_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_eval_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_eval_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_eval_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_eval_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_eval_script_SOURCES = test/fuzz/eval_script.cpp\n \n test_fuzz_fee_rate_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_fee_rate_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fee_rate_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fee_rate_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fee_rate_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_fee_rate_SOURCES = test/fuzz/fee_rate.cpp\n \n test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fee_rate_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fee_rate_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_fee_rate_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_fees_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_fees_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fees_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_fees_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fees_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_fees_SOURCES = test/fuzz/fees.cpp\n \n test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1\n test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_flat_file_pos_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_flatfile_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_flatfile_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_flatfile_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_flatfile_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_flatfile_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_flatfile_SOURCES = test/fuzz/flatfile.cpp\n \n test_fuzz_float_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_float_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_float_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_float_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_float_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_float_SOURCES = test/fuzz/float.cpp\n \n test_fuzz_golomb_rice_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_golomb_rice_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_golomb_rice_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_golomb_rice_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_golomb_rice_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_golomb_rice_SOURCES = test/fuzz/golomb_rice.cpp\n \n test_fuzz_hex_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_hex_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_hex_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_hex_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_hex_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_hex_SOURCES = test/fuzz/hex.cpp\n \n test_fuzz_http_request_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_http_request_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_http_request_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_http_request_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_http_request_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_http_request_SOURCES = test/fuzz/http_request.cpp\n \n test_fuzz_integer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_integer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_integer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_integer_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_integer_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_integer_SOURCES = test/fuzz/integer.cpp\n \n test_fuzz_inv_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DINV_DESERIALIZE=1\n test_fuzz_inv_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_inv_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_inv_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_inv_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_inv_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_key_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_key_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_key_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_key_SOURCES = test/fuzz/key.cpp\n \n test_fuzz_key_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_key_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_key_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_io_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_io_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_key_io_SOURCES = test/fuzz/key_io.cpp\n \n test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1\n test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_key_origin_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_origin_info_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_key_origin_info_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_kitchen_sink_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_kitchen_sink_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_kitchen_sink_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_kitchen_sink_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_kitchen_sink_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_kitchen_sink_SOURCES = test/fuzz/kitchen_sink.cpp\n \n test_fuzz_load_external_block_file_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_load_external_block_file_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_load_external_block_file_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_load_external_block_file_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_load_external_block_file_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_load_external_block_file_SOURCES = test/fuzz/load_external_block_file.cpp\n \n test_fuzz_locale_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_locale_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_locale_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_locale_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_locale_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_locale_SOURCES = test/fuzz/locale.cpp\n \n test_fuzz_merkle_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMERKLE_BLOCK_DESERIALIZE=1\n test_fuzz_merkle_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_merkle_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_merkle_block_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_merkle_block_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_merkleblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_merkleblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_merkleblock_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_merkleblock_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_merkleblock_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_merkleblock_SOURCES = test/fuzz/merkleblock.cpp\n \n test_fuzz_message_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_message_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_message_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_message_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_message_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_message_SOURCES = test/fuzz/message.cpp\n \n test_fuzz_messageheader_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGEHEADER_DESERIALIZE=1\n test_fuzz_messageheader_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_messageheader_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_messageheader_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_messageheader_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_messageheader_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_multiplication_overflow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_multiplication_overflow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_multiplication_overflow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_multiplication_overflow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_multiplication_overflow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_multiplication_overflow_SOURCES = test/fuzz/multiplication_overflow.cpp\n \n test_fuzz_net_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_net_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_net_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_net_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_net_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_net_SOURCES = test/fuzz/net.cpp\n \n test_fuzz_net_permissions_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_net_permissions_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_net_permissions_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_net_permissions_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_net_permissions_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_net_permissions_SOURCES = test/fuzz/net_permissions.cpp\n \n test_fuzz_netaddr_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DNETADDR_DESERIALIZE=1\n test_fuzz_netaddr_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_netaddr_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_netaddr_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_netaddr_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_netaddr_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_netaddress_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_netaddress_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_netaddress_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_netaddress_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_netaddress_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_netaddress_SOURCES = test/fuzz/netaddress.cpp\n \n test_fuzz_out_point_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DOUT_POINT_DESERIALIZE=1\n test_fuzz_out_point_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_out_point_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_out_point_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_out_point_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_out_point_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_p2p_transport_deserializer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_p2p_transport_deserializer_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_p2p_transport_deserializer_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_p2p_transport_deserializer_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_p2p_transport_deserializer_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_p2p_transport_deserializer_SOURCES = test/fuzz/p2p_transport_deserializer.cpp\n \n test_fuzz_parse_hd_keypath_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_parse_hd_keypath_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_hd_keypath_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_hd_keypath_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_hd_keypath_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_parse_hd_keypath_SOURCES = test/fuzz/parse_hd_keypath.cpp\n \n test_fuzz_parse_iso8601_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_iso8601_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_parse_iso8601_SOURCES = test/fuzz/parse_iso8601.cpp\n \n test_fuzz_parse_numbers_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_parse_numbers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_numbers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_numbers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_numbers_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_parse_numbers_SOURCES = test/fuzz/parse_numbers.cpp\n \n test_fuzz_parse_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_parse_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_parse_script_SOURCES = test/fuzz/parse_script.cpp\n \n test_fuzz_parse_univalue_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_parse_univalue_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_univalue_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_parse_univalue_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_parse_univalue_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_parse_univalue_SOURCES = test/fuzz/parse_univalue.cpp\n \n test_fuzz_prevector_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_prevector_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_prevector_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_prevector_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_prevector_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_prevector_SOURCES = test/fuzz/prevector.cpp\n \n test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIAL_MERKLE_TREE_DESERIALIZE=1\n test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_partial_merkle_tree_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_partial_merkle_tree_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIALLY_SIGNED_TRANSACTION_DESERIALIZE=1\n test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_partially_signed_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_partially_signed_transaction_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_policy_estimator_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_policy_estimator_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_policy_estimator_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_policy_estimator_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_policy_estimator_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_policy_estimator_SOURCES = test/fuzz/policy_estimator.cpp\n \n test_fuzz_policy_estimator_io_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_policy_estimator_io_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_policy_estimator_io_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_policy_estimator_io_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_policy_estimator_io_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_policy_estimator_io_SOURCES = test/fuzz/policy_estimator_io.cpp\n \n test_fuzz_pow_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_pow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_pow_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_pow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_pow_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_pow_SOURCES = test/fuzz/pow.cpp\n \n test_fuzz_prefilled_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPREFILLED_TRANSACTION_DESERIALIZE=1\n test_fuzz_prefilled_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_prefilled_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_prefilled_transaction_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_primitives_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_primitives_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_primitives_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_primitives_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_primitives_transaction_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_primitives_transaction_SOURCES = test/fuzz/primitives_transaction.cpp\n \n test_fuzz_process_messages_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_process_messages_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_messages_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_messages_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_messages_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_messages_SOURCES = test/fuzz/process_messages.cpp\n \n test_fuzz_process_message_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_process_message_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_addr_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=addr\n test_fuzz_process_message_addr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_addr_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_addr_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_addr_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_addr_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_block_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=block\n test_fuzz_process_message_block_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_block_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_block_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_block_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_block_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_blocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=blocktxn\n test_fuzz_process_message_blocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_blocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_blocktxn_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_blocktxn_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_blocktxn_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_cmpctblock_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=cmpctblock\n test_fuzz_process_message_cmpctblock_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_cmpctblock_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_cmpctblock_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_cmpctblock_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_cmpctblock_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_feefilter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=feefilter\n test_fuzz_process_message_feefilter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_feefilter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_feefilter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_feefilter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_feefilter_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_filteradd_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filteradd\n test_fuzz_process_message_filteradd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_filteradd_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filteradd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_filteradd_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_filteradd_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_filterclear_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filterclear\n test_fuzz_process_message_filterclear_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_filterclear_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filterclear_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_filterclear_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_filterclear_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_filterload_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=filterload\n test_fuzz_process_message_filterload_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_filterload_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_filterload_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_filterload_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_filterload_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_getaddr_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getaddr\n test_fuzz_process_message_getaddr_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_getaddr_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getaddr_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_getaddr_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_getaddr_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_getblocks_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getblocks\n test_fuzz_process_message_getblocks_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_getblocks_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getblocks_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_getblocks_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_getblocks_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_getblocktxn_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getblocktxn\n test_fuzz_process_message_getblocktxn_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_getblocktxn_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getblocktxn_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_getblocktxn_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_getblocktxn_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_getdata_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getdata\n test_fuzz_process_message_getdata_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_getdata_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getdata_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_getdata_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_getdata_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_getheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=getheaders\n test_fuzz_process_message_getheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_getheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_getheaders_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_getheaders_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_getheaders_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_headers_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=headers\n test_fuzz_process_message_headers_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_headers_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_headers_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_headers_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_headers_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_inv_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=inv\n test_fuzz_process_message_inv_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_inv_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_inv_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_inv_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_inv_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_mempool_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=mempool\n test_fuzz_process_message_mempool_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_mempool_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_mempool_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_mempool_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_mempool_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_notfound_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=notfound\n test_fuzz_process_message_notfound_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_notfound_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_notfound_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_notfound_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_notfound_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_ping_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=ping\n test_fuzz_process_message_ping_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_ping_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_ping_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_ping_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_ping_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_pong_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=pong\n test_fuzz_process_message_pong_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_pong_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_pong_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_pong_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_pong_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_sendcmpct_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=sendcmpct\n test_fuzz_process_message_sendcmpct_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_sendcmpct_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_sendcmpct_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_sendcmpct_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_sendcmpct_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_sendheaders_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=sendheaders\n test_fuzz_process_message_sendheaders_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_sendheaders_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_sendheaders_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_sendheaders_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_sendheaders_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=tx\n test_fuzz_process_message_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_tx_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_tx_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_tx_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_verack_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=verack\n test_fuzz_process_message_verack_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_verack_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_verack_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_verack_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_verack_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_process_message_version_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMESSAGE_TYPE=version\n test_fuzz_process_message_version_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_process_message_version_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_process_message_version_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_process_message_version_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_process_message_version_SOURCES = test/fuzz/process_message.cpp\n \n test_fuzz_protocol_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_protocol_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_protocol_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_protocol_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_protocol_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_protocol_SOURCES = test/fuzz/protocol.cpp\n \n test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_psbt_SOURCES = test/fuzz/psbt.cpp\n \n test_fuzz_psbt_input_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_INPUT_DESERIALIZE=1\n test_fuzz_psbt_input_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_psbt_input_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_input_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_input_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_psbt_input_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_psbt_output_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_OUTPUT_DESERIALIZE=1\n test_fuzz_psbt_output_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_psbt_output_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_psbt_output_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_output_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_psbt_output_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_pub_key_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPUB_KEY_DESERIALIZE=1\n test_fuzz_pub_key_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_pub_key_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_pub_key_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_random_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_random_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_random_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_random_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_random_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_random_SOURCES = test/fuzz/random.cpp\n \n test_fuzz_rbf_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_rbf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_rbf_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_rbf_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_rbf_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_rbf_SOURCES = test/fuzz/rbf.cpp\n \n test_fuzz_rolling_bloom_filter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_rolling_bloom_filter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_rolling_bloom_filter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_rolling_bloom_filter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_rolling_bloom_filter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_rolling_bloom_filter_SOURCES = test/fuzz/rolling_bloom_filter.cpp\n \n test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_SOURCES = test/fuzz/script.cpp\n \n test_fuzz_script_bitcoin_consensus_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_bitcoin_consensus_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_bitcoin_consensus_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_bitcoin_consensus_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_bitcoin_consensus_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_bitcoin_consensus_SOURCES = test/fuzz/script_bitcoin_consensus.cpp\n \n test_fuzz_script_descriptor_cache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_descriptor_cache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_descriptor_cache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_descriptor_cache_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_descriptor_cache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_descriptor_cache_SOURCES = test/fuzz/script_descriptor_cache.cpp\n \n test_fuzz_script_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSCRIPT_DESERIALIZE=1\n test_fuzz_script_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_script_flags_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_flags_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_flags_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_flags_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_flags_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_flags_SOURCES = test/fuzz/script_flags.cpp\n \n test_fuzz_script_interpreter_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_interpreter_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_interpreter_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_interpreter_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_interpreter_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_interpreter_SOURCES = test/fuzz/script_interpreter.cpp\n \n test_fuzz_script_assets_test_minimizer_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n@@ -1089,145 +1092,151 @@ test_fuzz_script_assets_test_minimizer_SOURCES = test/fuzz/script_assets_test_mi\n test_fuzz_script_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_ops_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_ops_SOURCES = test/fuzz/script_ops.cpp\n \n test_fuzz_script_sigcache_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_sigcache_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_sigcache_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_sigcache_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_sigcache_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_sigcache_SOURCES = test/fuzz/script_sigcache.cpp\n \n test_fuzz_script_sign_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_sign_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_script_sign_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_script_sign_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_sign_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_script_sign_SOURCES = test/fuzz/script_sign.cpp\n \n test_fuzz_scriptnum_ops_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_scriptnum_ops_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_scriptnum_ops_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_scriptnum_ops_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_scriptnum_ops_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_scriptnum_ops_SOURCES = test/fuzz/scriptnum_ops.cpp\n \n test_fuzz_secp256k1_ec_seckey_import_export_der_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_secp256k1_ec_seckey_import_export_der_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_secp256k1_ec_seckey_import_export_der_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_secp256k1_ec_seckey_import_export_der_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_secp256k1_ec_seckey_import_export_der_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_secp256k1_ec_seckey_import_export_der_SOURCES = test/fuzz/secp256k1_ec_seckey_import_export_der.cpp\n \n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_secp256k1_ecdsa_signature_parse_der_lax_SOURCES = test/fuzz/secp256k1_ecdsa_signature_parse_der_lax.cpp\n \n test_fuzz_service_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSERVICE_DESERIALIZE=1\n test_fuzz_service_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_service_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_service_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_service_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_service_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_signature_checker_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_signature_checker_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_signature_checker_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_signature_checker_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_signature_checker_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_signature_checker_SOURCES = test/fuzz/signature_checker.cpp\n \n+test_fuzz_signet_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_signet_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_signet_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_signet_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_signet_SOURCES = test/fuzz/signet.cpp\n+\n test_fuzz_snapshotmetadata_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSNAPSHOTMETADATA_DESERIALIZE=1\n test_fuzz_snapshotmetadata_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_snapshotmetadata_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_snapshotmetadata_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_snapshotmetadata_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_span_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_span_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_span_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_span_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_span_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_span_SOURCES = test/fuzz/span.cpp\n \n test_fuzz_spanparsing_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_spanparsing_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_spanparsing_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_spanparsing_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_spanparsing_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_spanparsing_SOURCES = test/fuzz/spanparsing.cpp\n \n test_fuzz_string_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_string_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_string_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_string_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_string_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_string_SOURCES = test/fuzz/string.cpp\n \n test_fuzz_strprintf_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_strprintf_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_strprintf_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_strprintf_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_strprintf_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_strprintf_SOURCES = test/fuzz/strprintf.cpp\n \n test_fuzz_sub_net_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSUB_NET_DESERIALIZE=1\n test_fuzz_sub_net_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_sub_net_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_sub_net_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_sub_net_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_system_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_system_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_system_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_system_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_system_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_system_SOURCES = test/fuzz/system.cpp\n \n test_fuzz_timedata_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_timedata_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_timedata_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_timedata_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_timedata_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_timedata_SOURCES = test/fuzz/timedata.cpp\n \n test_fuzz_transaction_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_transaction_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_transaction_SOURCES = test/fuzz/transaction.cpp\n \n test_fuzz_tx_in_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_tx_in_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_tx_in_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_in_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_tx_in_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_tx_in_SOURCES = test/fuzz/tx_in.cpp\n \n test_fuzz_tx_in_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTX_IN_DESERIALIZE=1\n test_fuzz_tx_in_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_tx_in_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_in_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_tx_in_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_tx_in_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_tx_out_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_tx_out_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_tx_out_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_tx_out_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_tx_out_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_tx_out_SOURCES = test/fuzz/tx_out.cpp\n \n test_fuzz_txoutcompressor_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXOUTCOMPRESSOR_DESERIALIZE=1\n test_fuzz_txoutcompressor_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_txoutcompressor_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_txoutcompressor_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_txoutcompressor_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_txoutcompressor_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_txundo_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTXUNDO_DESERIALIZE=1\n test_fuzz_txundo_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_txundo_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_txundo_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_txundo_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_txundo_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_uint160_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DUINT160_DESERIALIZE=1\n test_fuzz_uint160_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_uint160_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_uint160_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_uint160_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_uint160_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n test_fuzz_uint256_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DUINT256_DESERIALIZE=1\n test_fuzz_uint256_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_uint256_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n-test_fuzz_uint256_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_uint256_deserialize_LDFLAGS = $(FUZZ_SUITE_LDFLAGS_COMMON)\n test_fuzz_uint256_deserialize_SOURCES = test/fuzz/deserialize.cpp\n \n endif # ENABLE_FUZZ"
      },
      {
        "sha": "a9f3f5f84d20f922db74bc2d0cb1c694bdc29104",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -34,7 +34,8 @@ static void DeserializeAndCheckBlockTest(benchmark::Bench& bench)\n     char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n \n-    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n+    ArgsManager bench_args;\n+    const auto chainParams = CreateChainParams(bench_args, CBaseChainParams::MAIN);\n \n     bench.unit(\"block\").run([&] {\n         CBlock block; // Note that CBlock caches its checked state, so we need to recreate it here"
      },
      {
        "sha": "28394e7041929580026639d2505207139c3d7b9e",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 215,
        "deletions": 10,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -39,6 +39,8 @@ static const char DEFAULT_RPCCONNECT[] = \"127.0.0.1\";\n static const int DEFAULT_HTTP_CLIENT_TIMEOUT=900;\n static const bool DEFAULT_NAMED=false;\n static const int CONTINUE_EXECUTION=-1;\n+static const std::string ONION{\".onion\"};\n+static const size_t ONION_LEN{ONION.size()};\n \n /** Default number of blocks to generate for RPC generatetoaddress. */\n static const std::string DEFAULT_NBLOCKS = \"1\";\n@@ -49,20 +51,23 @@ static void SetupCliArgs(ArgsManager& argsman)\n \n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n+    const auto signetBaseParams = CreateBaseChainParams(CBaseChainParams::SIGNET);\n     const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n \n     argsman.AddArg(\"-version\", \"Print version and exit\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-datadir=<dir>\", \"Specify data directory\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-generate\", strprintf(\"Generate blocks immediately, equivalent to RPC generatenewaddress followed by RPC generatetoaddress. Optional positional integer arguments are number of blocks to generate (default: %s) and maximum iterations to try (default: %s), equivalent to RPC generatetoaddress nblocks and maxtries arguments. Example: bitcoin-cli -generate 4 1000\", DEFAULT_NBLOCKS, DEFAULT_MAX_TRIES), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-getinfo\", \"Get general information from the remote server. Note that unlike server-side RPC calls, the results of -getinfo is the result of multiple non-atomic requests. Some entries in the result may represent results from different states (e.g. wallet balance may be as of a different block from the chain state reported)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-netinfo\", \"Get network peer connection information from the remote server. An optional integer argument from 0 to 4 can be passed for different peers listings (default: 0).\", ArgsManager::ALLOW_INT, OptionsCategory::OPTIONS);\n+\n     SetupChainParamsBaseOptions(argsman);\n     argsman.AddArg(\"-named\", strprintf(\"Pass named instead of positional arguments (default: %s)\", DEFAULT_NAMED), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcclienttimeout=<n>\", strprintf(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\", DEFAULT_HTTP_CLIENT_TIMEOUT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcconnect=<ip>\", strprintf(\"Send commands to node running on <ip> (default: %s)\", DEFAULT_RPCCONNECT), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Connect to JSON-RPC on <port> (default: %u, testnet: %u, signet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), signetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcuser=<user>\", \"Username for JSON-RPC connections\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcwait\", \"Wait for RPC server to start\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-rpcwallet=<walletname>\", \"Send RPC for non-default wallet on RPC server (needs to exactly match corresponding -wallet option passed to bitcoind). This changes the RPC endpoint used, e.g. http://127.0.0.1:8332/wallet/<walletname>\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -83,11 +88,6 @@ static void libevent_log_cb(int severity, const char *msg)\n     }\n }\n \n-//////////////////////////////////////////////////////////////////////////////\n-//\n-// Start\n-//\n-\n //\n // Exception thrown on connection error.  This error is used to determine\n // when to wait if -rpcwait is given.\n@@ -108,9 +108,6 @@ class CConnectionFailed : public std::runtime_error\n //\n static int AppInitRPC(int argc, char* argv[])\n {\n-    //\n-    // Parameters\n-    //\n     SetupCliArgs(gArgs);\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {\n@@ -143,7 +140,7 @@ static int AppInitRPC(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error reading configuration file: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n-    // Check for -chain, -testnet or -regtest parameter (BaseParams() calls are only valid after this clause)\n+    // Check for chain settings (BaseParams() calls are only valid after this clause)\n     try {\n         SelectBaseParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {\n@@ -297,6 +294,211 @@ class GetinfoRequestHandler: public BaseRequestHandler\n     }\n };\n \n+/** Process netinfo requests */\n+class NetinfoRequestHandler : public BaseRequestHandler\n+{\n+private:\n+    bool IsAddrIPv6(const std::string& addr) const\n+    {\n+        return !addr.empty() && addr.front() == '[';\n+    }\n+    bool IsInboundOnion(const std::string& addr_local, int mapped_as) const\n+    {\n+        return mapped_as == 0 && addr_local.find(ONION) != std::string::npos;\n+    }\n+    bool IsOutboundOnion(const std::string& addr, int mapped_as) const\n+    {\n+        const size_t addr_len{addr.size()};\n+        const size_t onion_pos{addr.rfind(ONION)};\n+        return mapped_as == 0 && onion_pos != std::string::npos && addr_len > ONION_LEN &&\n+               (onion_pos == addr_len - ONION_LEN || onion_pos == addr.find_last_of(\":\") - ONION_LEN);\n+    }\n+    uint8_t m_details_level{0}; //!< Optional user-supplied arg to set dashboard details level\n+    bool DetailsRequested() const { return m_details_level > 0 && m_details_level < 5; }\n+    bool IsAddressSelected() const { return m_details_level == 2 || m_details_level == 4; }\n+    bool IsVersionSelected() const { return m_details_level == 3 || m_details_level == 4; }\n+    enum struct NetType {\n+        ipv4,\n+        ipv6,\n+        onion,\n+    };\n+    struct Peer {\n+        int id;\n+        int mapped_as;\n+        int version;\n+        int64_t conn_time;\n+        int64_t last_blck;\n+        int64_t last_recv;\n+        int64_t last_send;\n+        int64_t last_trxn;\n+        double min_ping;\n+        double ping;\n+        std::string addr;\n+        std::string sub_version;\n+        NetType net_type;\n+        bool is_block_relay;\n+        bool is_outbound;\n+        bool operator<(const Peer& rhs) const { return std::tie(is_outbound, min_ping) < std::tie(rhs.is_outbound, rhs.min_ping); }\n+    };\n+    std::string NetTypeEnumToString(NetType t)\n+    {\n+        switch (t) {\n+        case NetType::ipv4: return \"ipv4\";\n+        case NetType::ipv6: return \"ipv6\";\n+        case NetType::onion: return \"onion\";\n+        } // no default case, so the compiler can warn about missing cases\n+        assert(false);\n+    }\n+    std::string ChainToString() const\n+    {\n+        if (gArgs.GetChainName() == CBaseChainParams::TESTNET) return \" testnet\";\n+        if (gArgs.GetChainName() == CBaseChainParams::REGTEST) return \" regtest\";\n+        return \"\";\n+    }\n+public:\n+    const int ID_PEERINFO = 0;\n+    const int ID_NETWORKINFO = 1;\n+\n+    UniValue PrepareRequest(const std::string& method, const std::vector<std::string>& args) override\n+    {\n+        if (!args.empty()) {\n+            uint8_t n{0};\n+            if (ParseUInt8(args.at(0), &n)) {\n+                m_details_level = n;\n+            }\n+        }\n+        UniValue result(UniValue::VARR);\n+        result.push_back(JSONRPCRequestObj(\"getpeerinfo\", NullUniValue, ID_PEERINFO));\n+        result.push_back(JSONRPCRequestObj(\"getnetworkinfo\", NullUniValue, ID_NETWORKINFO));\n+        return result;\n+    }\n+\n+    UniValue ProcessReply(const UniValue& batch_in) override\n+    {\n+        const std::vector<UniValue> batch{JSONRPCProcessBatchReply(batch_in)};\n+        if (!batch[ID_PEERINFO][\"error\"].isNull()) return batch[ID_PEERINFO];\n+        if (!batch[ID_NETWORKINFO][\"error\"].isNull()) return batch[ID_NETWORKINFO];\n+\n+        const UniValue& networkinfo{batch[ID_NETWORKINFO][\"result\"]};\n+        if (networkinfo[\"version\"].get_int() < 209900) {\n+            throw std::runtime_error(\"-netinfo requires bitcoind server to be running v0.21.0 and up\");\n+        }\n+\n+        // Count peer connection totals, and if DetailsRequested(), store peer data in a vector of structs.\n+        const int64_t time_now{GetSystemTimeInSeconds()};\n+        int ipv4_i{0}, ipv6_i{0}, onion_i{0}, block_relay_i{0}, total_i{0}; // inbound conn counters\n+        int ipv4_o{0}, ipv6_o{0}, onion_o{0}, block_relay_o{0}, total_o{0}; // outbound conn counters\n+        size_t max_peer_id_length{2}, max_addr_length{0};\n+        bool is_asmap_on{false};\n+        std::vector<Peer> peers;\n+        const UniValue& getpeerinfo{batch[ID_PEERINFO][\"result\"]};\n+\n+        for (const UniValue& peer : getpeerinfo.getValues()) {\n+            const std::string addr{peer[\"addr\"].get_str()};\n+            const std::string addr_local{peer[\"addrlocal\"].isNull() ? \"\" : peer[\"addrlocal\"].get_str()};\n+            const int mapped_as{peer[\"mapped_as\"].isNull() ? 0 : peer[\"mapped_as\"].get_int()};\n+            const bool is_block_relay{!peer[\"relaytxes\"].get_bool()};\n+            const bool is_inbound{peer[\"inbound\"].get_bool()};\n+            NetType net_type{NetType::ipv4};\n+            if (is_inbound) {\n+                if (IsAddrIPv6(addr)) {\n+                    net_type = NetType::ipv6;\n+                    ++ipv6_i;\n+                } else if (IsInboundOnion(addr_local, mapped_as)) {\n+                    net_type = NetType::onion;\n+                    ++onion_i;\n+                } else {\n+                    ++ipv4_i;\n+                }\n+                if (is_block_relay) ++block_relay_i;\n+            } else {\n+                if (IsAddrIPv6(addr)) {\n+                    net_type = NetType::ipv6;\n+                    ++ipv6_o;\n+                } else if (IsOutboundOnion(addr, mapped_as)) {\n+                    net_type = NetType::onion;\n+                    ++onion_o;\n+                } else {\n+                    ++ipv4_o;\n+                }\n+                if (is_block_relay) ++block_relay_o;\n+            }\n+            if (DetailsRequested()) {\n+                // Push data for this peer to the peers vector.\n+                const int peer_id{peer[\"id\"].get_int()};\n+                const int version{peer[\"version\"].get_int()};\n+                const std::string sub_version{peer[\"subver\"].get_str()};\n+                const int64_t conn_time{peer[\"conntime\"].get_int64()};\n+                const int64_t last_blck{peer[\"last_block\"].get_int64()};\n+                const int64_t last_recv{peer[\"lastrecv\"].get_int64()};\n+                const int64_t last_send{peer[\"lastsend\"].get_int64()};\n+                const int64_t last_trxn{peer[\"last_transaction\"].get_int64()};\n+                const double min_ping{peer[\"minping\"].isNull() ? -1 : peer[\"minping\"].get_real()};\n+                const double ping{peer[\"pingtime\"].isNull() ? -1 : peer[\"pingtime\"].get_real()};\n+                peers.push_back({peer_id, mapped_as, version, conn_time, last_blck, last_recv, last_send, last_trxn, min_ping, ping, addr, sub_version, net_type, is_block_relay, !is_inbound});\n+                max_peer_id_length = std::max(ToString(peer_id).length(), max_peer_id_length);\n+                max_addr_length = std::max(addr.length() + 1, max_addr_length);\n+                is_asmap_on |= (mapped_as != 0);\n+            }\n+        }\n+\n+        // Generate report header.\n+        std::string result{strprintf(\"%s %s%s - %i%s\\n\\n\", PACKAGE_NAME, FormatFullVersion(), ChainToString(), networkinfo[\"protocolversion\"].get_int(), networkinfo[\"subversion\"].get_str())};\n+\n+        // Report detailed peer connections list sorted by direction and minimum ping time.\n+        if (DetailsRequested() && !peers.empty()) {\n+            std::sort(peers.begin(), peers.end());\n+            result += \"Peer connections sorted by direction and min ping\\n<-> relay   net mping   ping send recv  txn  blk uptime \";\n+            if (is_asmap_on) result += \" asmap \";\n+            result += strprintf(\"%*s %-*s%s\\n\", max_peer_id_length, \"id\", IsAddressSelected() ? max_addr_length : 0, IsAddressSelected() ? \"address\" : \"\", IsVersionSelected() ? \"version\" : \"\");\n+            for (const Peer& peer : peers) {\n+                std::string version{ToString(peer.version) + peer.sub_version};\n+                result += strprintf(\n+                    \"%3s %5s %5s%6s%7s%5s%5s%5s%5s%7s%*i %*s %-*s%s\\n\",\n+                    peer.is_outbound ? \"out\" : \"in\",\n+                    peer.is_block_relay ? \"block\" : \"full\",\n+                    NetTypeEnumToString(peer.net_type),\n+                    peer.min_ping == -1 ? \"\" : ToString(round(1000 * peer.min_ping)),\n+                    peer.ping == -1 ? \"\" : ToString(round(1000 * peer.ping)),\n+                    peer.last_send == 0 ? \"\" : ToString(time_now - peer.last_send),\n+                    peer.last_recv == 0 ? \"\" : ToString(time_now - peer.last_recv),\n+                    peer.last_trxn == 0 ? \"\" : ToString((time_now - peer.last_trxn) / 60),\n+                    peer.last_blck == 0 ? \"\" : ToString((time_now - peer.last_blck) / 60),\n+                    peer.conn_time == 0 ? \"\" : ToString((time_now - peer.conn_time) / 60),\n+                    is_asmap_on ? 7 : 0, // variable spacing\n+                    is_asmap_on && peer.mapped_as != 0 ? ToString(peer.mapped_as) : \"\",\n+                    max_peer_id_length, // variable spacing\n+                    peer.id,\n+                    IsAddressSelected() ? max_addr_length : 0, // variable spacing\n+                    IsAddressSelected() ? peer.addr : \"\",\n+                    IsVersionSelected() && version != \"0\" ? version : \"\");\n+            }\n+            result += \"                   ms     ms  sec  sec  min  min    min\\n\\n\";\n+        }\n+\n+        // Report peer connection totals by type.\n+        total_i = ipv4_i + ipv6_i + onion_i;\n+        total_o = ipv4_o + ipv6_o + onion_o;\n+        result += \"        ipv4    ipv6   onion   total  block-relay\\n\";\n+        result += strprintf(\"in     %5i   %5i   %5i   %5i   %5i\\n\", ipv4_i, ipv6_i, onion_i, total_i, block_relay_i);\n+        result += strprintf(\"out    %5i   %5i   %5i   %5i   %5i\\n\", ipv4_o, ipv6_o, onion_o, total_o, block_relay_o);\n+        result += strprintf(\"total  %5i   %5i   %5i   %5i   %5i\\n\", ipv4_i + ipv4_o, ipv6_i + ipv6_o, onion_i + onion_o, total_i + total_o, block_relay_i + block_relay_o);\n+\n+        // Report local addresses, ports, and scores.\n+        result += \"\\nLocal addresses\";\n+        const UniValue& local_addrs{networkinfo[\"localaddresses\"]};\n+        if (local_addrs.empty()) {\n+            result += \": n/a\\n\";\n+        } else {\n+            for (const UniValue& addr : local_addrs.getValues()) {\n+                result += strprintf(\"\\n%-40i  port %5i     score %6i\", addr[\"address\"].get_str(), addr[\"port\"].get_int(), addr[\"score\"].get_int());\n+            }\n+        }\n+\n+        return JSONRPCReplyObj(UniValue{result}, NullUniValue, 1);\n+    }\n+};\n+\n /** Process RPC generatetoaddress request. */\n class GenerateToAddressRequestHandler : public BaseRequestHandler\n {\n@@ -394,6 +596,7 @@ static UniValue CallRPC(BaseRequestHandler* rh, const std::string& strMethod, co\n     assert(output_headers);\n     evhttp_add_header(output_headers, \"Host\", host.c_str());\n     evhttp_add_header(output_headers, \"Connection\", \"close\");\n+    evhttp_add_header(output_headers, \"Content-Type\", \"application/json\");\n     evhttp_add_header(output_headers, \"Authorization\", (std::string(\"Basic \") + EncodeBase64(strRPCUserColonPass)).c_str());\n \n     // Attach request data\n@@ -624,6 +827,8 @@ static int CommandLineRPC(int argc, char *argv[])\n         std::string method;\n         if (gArgs.IsArgSet(\"-getinfo\")) {\n             rh.reset(new GetinfoRequestHandler());\n+        } else if (gArgs.GetBoolArg(\"-netinfo\", false)) {\n+            rh.reset(new NetinfoRequestHandler());\n         } else if (gArgs.GetBoolArg(\"-generate\", false)) {\n             const UniValue getnewaddress{GetNewAddress()};\n             const UniValue& error{find_value(getnewaddress, \"error\")};"
      },
      {
        "sha": "085f1ecfda5eb8e0970c96f5e9972ff9d69f373a",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -78,17 +78,14 @@ static void SetupBitcoinTxArgs(ArgsManager &argsman)\n //\n static int AppInitRawTx(int argc, char* argv[])\n {\n-    //\n-    // Parameters\n-    //\n     SetupBitcoinTxArgs(gArgs);\n     std::string error;\n     if (!gArgs.ParseParameters(argc, argv, error)) {\n         tfm::format(std::cerr, \"Error parsing command line arguments: %s\\n\", error);\n         return EXIT_FAILURE;\n     }\n \n-    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for chain settings (Params() calls are only valid after this clause)\n     try {\n         SelectParams(gArgs.GetChainName());\n     } catch (const std::exception& e) {"
      },
      {
        "sha": "8fdf1bae0f4e109bf7ccd70182a23ac2e0f6206a",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -62,7 +62,7 @@ static bool WalletAppInit(int argc, char* argv[])\n         tfm::format(std::cerr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", gArgs.GetArg(\"-datadir\", \"\"));\n         return false;\n     }\n-    // Check for -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for chain settings (Params() calls are only valid after this clause)\n     SelectParams(gArgs.GetChainName());\n \n     return true;"
      },
      {
        "sha": "455a82e39053583fb775b10c4988b55fdc60da2e",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -37,10 +37,6 @@ static void WaitForShutdown(NodeContext& node)\n     Interrupt(node);\n }\n \n-//////////////////////////////////////////////////////////////////////////////\n-//\n-// Start\n-//\n static bool AppInit(int argc, char* argv[])\n {\n     NodeContext node;\n@@ -81,7 +77,7 @@ static bool AppInit(int argc, char* argv[])\n         if (!args.ReadConfigFiles(error, true)) {\n             return InitError(Untranslated(strprintf(\"Error reading configuration file: %s\\n\", error)));\n         }\n-        // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+        // Check for chain settings (Params() calls are only valid after this clause)\n         try {\n             SelectParams(args.GetChainName());\n         } catch (const std::exception& e) {"
      },
      {
        "sha": "a34bf350fce5cb2bab9cc15e33417158934b7774",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 113,
        "deletions": 6,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -7,6 +7,7 @@\n \n #include <chainparamsseeds.h>\n #include <consensus/merkle.h>\n+#include <hash.h> // for signet block challenge hash\n #include <tinyformat.h>\n #include <util/system.h>\n #include <util/strencodings.h>\n@@ -63,6 +64,8 @@ class CMainParams : public CChainParams {\n public:\n     CMainParams() {\n         strNetworkID = CBaseChainParams::MAIN;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n         consensus.BIP34Height = 227931;\n@@ -177,6 +180,8 @@ class CTestNetParams : public CChainParams {\n public:\n     CTestNetParams() {\n         strNetworkID = CBaseChainParams::TESTNET;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n         consensus.nSubsidyHalvingInterval = 210000;\n         consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n         consensus.BIP34Height = 21111;\n@@ -260,13 +265,112 @@ class CTestNetParams : public CChainParams {\n     }\n };\n \n+/**\n+ * Signet\n+ */\n+class SigNetParams : public CChainParams {\n+public:\n+    explicit SigNetParams(const ArgsManager& args) {\n+        std::vector<uint8_t> bin;\n+        vSeeds.clear();\n+\n+        if (!args.IsArgSet(\"-signetchallenge\")) {\n+            bin = ParseHex(\"512103ad5e0edad18cb1f0fc0d28a3d4f1f3e445640337489abb10404f2d1e086be430210359ef5021964fe22d6f8e05b2463c9540ce96883fe3b278760f048f5189f2e6c452ae\");\n+            vSeeds.emplace_back(\"178.128.221.177\");\n+            vSeeds.emplace_back(\"2a01:7c8:d005:390::5\");\n+            vSeeds.emplace_back(\"ntv3mtqw5wt63red.onion:38333\");\n+\n+            consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000000000000000000d145533ce\");\n+            consensus.defaultAssumeValid = uint256S(\"0x00000128807d9175c494e24d805fc7854f7d79aa965cbb128342ad8b70cecfa5\"); // 5348\n+            m_assumed_blockchain_size = 1;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                // Data from RPC: getchaintxstats 4096 00000128807d9175c494e24d805fc7854f7d79aa965cbb128342ad8b70cecfa5\n+                /* nTime    */ 1601382000,\n+                /* nTxCount */ 5435,\n+                /* dTxRate  */ 0.001898346323372538,\n+            };\n+        } else {\n+            const auto signet_challenge = args.GetArgs(\"-signetchallenge\");\n+            if (signet_challenge.size() != 1) {\n+                throw std::runtime_error(strprintf(\"%s: -signetchallenge cannot be multiple values.\", __func__));\n+            }\n+            bin = ParseHex(signet_challenge[0]);\n+\n+            m_assumed_blockchain_size = 0;\n+            m_assumed_chain_state_size = 0;\n+            chainTxData = ChainTxData{\n+                0,\n+                0,\n+                0,\n+            };\n+            LogPrintf(\"Signet with challenge %s\\n\", signet_challenge[0]);\n+        }\n+\n+        if (args.IsArgSet(\"-signetseednode\")) {\n+            vSeeds = args.GetArgs(\"-signetseednode\");\n+        }\n+\n+        strNetworkID = CBaseChainParams::SIGNET;\n+        consensus.signet_blocks = true;\n+        consensus.signet_challenge.assign(bin.begin(), bin.end());\n+        consensus.nSubsidyHalvingInterval = 210000;\n+        consensus.BIP34Height = 1;\n+        consensus.BIP65Height = 1;\n+        consensus.BIP66Height = 1;\n+        consensus.CSVHeight = 1;\n+        consensus.SegwitHeight = 1;\n+        consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n+        consensus.nPowTargetSpacing = 10 * 60;\n+        consensus.fPowAllowMinDifficultyBlocks = false;\n+        consensus.fPowNoRetargeting = false;\n+        consensus.nRuleChangeActivationThreshold = 1916;\n+        consensus.nMinerConfirmationWindow = 2016;\n+        consensus.powLimit = uint256S(\"00000377ae000000000000000000000000000000000000000000000000000000\");\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+\n+        // message start is defined as the first 4 bytes of the sha256d of the block script\n+        CHashWriter h(SER_DISK, 0);\n+        h << consensus.signet_challenge;\n+        uint256 hash = h.GetHash();\n+        memcpy(pchMessageStart, hash.begin(), 4);\n+\n+        nDefaultPort = 38333;\n+        nPruneAfterHeight = 1000;\n+\n+        genesis = CreateGenesisBlock(1598918400, 52613770, 0x1e0377ae, 1, 50 * COIN);\n+        consensus.hashGenesisBlock = genesis.GetHash();\n+        assert(consensus.hashGenesisBlock == uint256S(\"0x00000008819873e925422c1ff0f99f7cc9bbb232af63a077a480a3633bee1ef6\"));\n+        assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n+\n+        vFixedSeeds.clear();\n+\n+        base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n+        base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);\n+        base58Prefixes[SECRET_KEY] =     std::vector<unsigned char>(1,239);\n+        base58Prefixes[EXT_PUBLIC_KEY] = {0x04, 0x35, 0x87, 0xCF};\n+        base58Prefixes[EXT_SECRET_KEY] = {0x04, 0x35, 0x83, 0x94};\n+\n+        bech32_hrp = \"tb\";\n+\n+        fDefaultConsistencyChecks = false;\n+        fRequireStandard = true;\n+        m_is_test_chain = true;\n+        m_is_mockable_chain = false;\n+    }\n+};\n+\n /**\n  * Regression test\n  */\n class CRegTestParams : public CChainParams {\n public:\n     explicit CRegTestParams(const ArgsManager& args) {\n         strNetworkID =  CBaseChainParams::REGTEST;\n+        consensus.signet_blocks = false;\n+        consensus.signet_challenge.clear();\n         consensus.nSubsidyHalvingInterval = 150;\n         consensus.BIP16Exception = uint256();\n         consensus.BIP34Height = 500; // BIP34 activated on regtest (Used in functional tests)\n@@ -402,19 +506,22 @@ const CChainParams &Params() {\n     return *globalChainParams;\n }\n \n-std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain)\n+std::unique_ptr<const CChainParams> CreateChainParams(const ArgsManager& args, const std::string& chain)\n {\n-    if (chain == CBaseChainParams::MAIN)\n+    if (chain == CBaseChainParams::MAIN) {\n         return std::unique_ptr<CChainParams>(new CMainParams());\n-    else if (chain == CBaseChainParams::TESTNET)\n+    } else if (chain == CBaseChainParams::TESTNET) {\n         return std::unique_ptr<CChainParams>(new CTestNetParams());\n-    else if (chain == CBaseChainParams::REGTEST)\n-        return std::unique_ptr<CChainParams>(new CRegTestParams(gArgs));\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return std::unique_ptr<CChainParams>(new SigNetParams(args));\n+    } else if (chain == CBaseChainParams::REGTEST) {\n+        return std::unique_ptr<CChainParams>(new CRegTestParams(args));\n+    }\n     throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n void SelectParams(const std::string& network)\n {\n     SelectBaseParams(network);\n-    globalChainParams = CreateChainParams(network);\n+    globalChainParams = CreateChainParams(gArgs, network);\n }"
      },
      {
        "sha": "d8b25c722046adc298c1c092f39b793257766674",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -23,6 +23,11 @@ typedef std::map<int, uint256> MapCheckpoints;\n \n struct CCheckpointData {\n     MapCheckpoints mapCheckpoints;\n+\n+    int GetHeight() const {\n+        const auto& final_checkpoint = mapCheckpoints.rbegin();\n+        return final_checkpoint->first /* height */;\n+    }\n };\n \n /**\n@@ -114,7 +119,7 @@ class CChainParams\n  * @returns a CChainParams* of the chosen chain.\n  * @throws a std::runtime_error if the chain is not supported.\n  */\n-std::unique_ptr<const CChainParams> CreateChainParams(const std::string& chain);\n+std::unique_ptr<const CChainParams> CreateChainParams(const ArgsManager& args, const std::string& chain);\n \n /**\n  * Return the currently selected parameters. This won't change after app"
      },
      {
        "sha": "f19e72e9abdd318f2e97a453d20b945ac4524d72",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -13,16 +13,20 @@\n \n const std::string CBaseChainParams::MAIN = \"main\";\n const std::string CBaseChainParams::TESTNET = \"test\";\n+const std::string CBaseChainParams::SIGNET = \"signet\";\n const std::string CBaseChainParams::REGTEST = \"regtest\";\n \n void SetupChainParamsBaseOptions(ArgsManager& argsman)\n {\n-    argsman.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-chain=<chain>\", \"Use the chain <chain> (default: main). Allowed values: main, test, signet, regtest\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-regtest\", \"Enter regression test mode, which uses a special chain in which blocks can be solved instantly. \"\n                  \"This is intended for regression testing tools and app development. Equivalent to -chain=regtest.\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-segwitheight=<n>\", \"Set the activation height of segwit. -1 to disable. (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-testnet\", \"Use the test chain. Equivalent to -chain=test.\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n     argsman.AddArg(\"-vbparams=deployment:start:end\", \"Use given start/end times for specified version bits deployment (regtest-only)\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signet\", \"Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter\", ArgsManager::ALLOW_ANY, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signetchallenge\", \"Blocks must satisfy the given script to be considered valid (only for signet networks; defaults to the global default signet test network challenge)\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n+    argsman.AddArg(\"-signetseednode\", \"Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes; defaults to the global default signet test network seed node(s))\", ArgsManager::ALLOW_STRING, OptionsCategory::CHAINPARAMS);\n }\n \n static std::unique_ptr<CBaseChainParams> globalChainBaseParams;\n@@ -35,14 +39,16 @@ const CBaseChainParams& BaseParams()\n \n std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n-    if (chain == CBaseChainParams::MAIN)\n+    if (chain == CBaseChainParams::MAIN) {\n         return MakeUnique<CBaseChainParams>(\"\", 8332);\n-    else if (chain == CBaseChainParams::TESTNET)\n+    } else if (chain == CBaseChainParams::TESTNET) {\n         return MakeUnique<CBaseChainParams>(\"testnet3\", 18332);\n-    else if (chain == CBaseChainParams::REGTEST)\n+    } else if (chain == CBaseChainParams::SIGNET) {\n+        return MakeUnique<CBaseChainParams>(\"signet\", 38332);\n+    } else if (chain == CBaseChainParams::REGTEST) {\n         return MakeUnique<CBaseChainParams>(\"regtest\", 18443);\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+    }\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n void SelectBaseParams(const std::string& chain)"
      },
      {
        "sha": "9852446b3c34338a1acb50925f91f5aa494d0f16",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -21,6 +21,7 @@ class CBaseChainParams\n     /** Chain name strings */\n     static const std::string MAIN;\n     static const std::string TESTNET;\n+    static const std::string SIGNET;\n     static const std::string REGTEST;\n     ///@}\n "
      },
      {
        "sha": "932f0d2c6055d336f89c2439f887c7a15ff643af",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -81,6 +81,13 @@ struct Params {\n     int64_t DifficultyAdjustmentInterval() const { return nPowTargetTimespan / nPowTargetSpacing; }\n     uint256 nMinimumChainWork;\n     uint256 defaultAssumeValid;\n+\n+    /**\n+     * If true, witness commitments contain a payload equal to a Bitcoin Script solution\n+     * to the signet challenge. See BIP325.\n+     */\n+    bool signet_blocks{false};\n+    std::vector<uint8_t> signet_challenge;\n };\n } // namespace Consensus\n "
      },
      {
        "sha": "e007c481df4a942529119ab78a1adf3538a2d466",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -12,6 +12,12 @@\n #include <primitives/transaction.h>\n #include <primitives/block.h>\n \n+/** Index marker for when no witness commitment is present in a coinbase transaction. */\n+static constexpr int NO_WITNESS_COMMITMENT{-1};\n+\n+/** Minimum size of a witness commitment structure. Defined in BIP 141. **/\n+static constexpr size_t MINIMUM_WITNESS_COMMITMENT{38};\n+\n /** A \"reason\" why a transaction was invalid, suitable for determining whether the\n   * provider of the transaction should be banned/ignored/disconnected/etc.\n   */\n@@ -151,4 +157,25 @@ static inline int64_t GetTransactionInputWeight(const CTxIn& txin)\n     return ::GetSerializeSize(txin, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) * (WITNESS_SCALE_FACTOR - 1) + ::GetSerializeSize(txin, PROTOCOL_VERSION) + ::GetSerializeSize(txin.scriptWitness.stack, PROTOCOL_VERSION);\n }\n \n+/** Compute at which vout of the block's coinbase transaction the witness commitment occurs, or -1 if not found */\n+inline int GetWitnessCommitmentIndex(const CBlock& block)\n+{\n+    int commitpos = NO_WITNESS_COMMITMENT;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            const CTxOut& vout = block.vtx[0]->vout[o];\n+            if (vout.scriptPubKey.size() >= MINIMUM_WITNESS_COMMITMENT &&\n+                vout.scriptPubKey[0] == OP_RETURN &&\n+                vout.scriptPubKey[1] == 0x24 &&\n+                vout.scriptPubKey[2] == 0xaa &&\n+                vout.scriptPubKey[3] == 0x21 &&\n+                vout.scriptPubKey[4] == 0xa9 &&\n+                vout.scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n+        }\n+    }\n+    return commitpos;\n+}\n+\n #endif // BITCOIN_CONSENSUS_VALIDATION_H"
      },
      {
        "sha": "c1acf8b22e4ec91e4235f3760909bd1dec2c948f",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -53,6 +53,13 @@ void static inline WriteLE64(unsigned char* ptr, uint64_t x)\n     memcpy(ptr, (char*)&v, 8);\n }\n \n+uint16_t static inline ReadBE16(const unsigned char* ptr)\n+{\n+    uint16_t x;\n+    memcpy((char*)&x, ptr, 2);\n+    return be16toh(x);\n+}\n+\n uint32_t static inline ReadBE32(const unsigned char* ptr)\n {\n     uint32_t x;"
      },
      {
        "sha": "2e0106b165c86d0b2cc2aeccf19de4bac5673156",
        "filename": "src/crypto/siphash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/siphash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/siphash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/siphash.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -49,7 +49,7 @@ CSipHasher& CSipHasher::Write(const unsigned char* data, size_t size)\n {\n     uint64_t v0 = v[0], v1 = v[1], v2 = v[2], v3 = v[3];\n     uint64_t t = tmp;\n-    int c = count;\n+    uint8_t c = count;\n \n     while (size--) {\n         t |= ((uint64_t)(*(data++))) << (8 * (c % 8));"
      },
      {
        "sha": "6b38950f8e729f10ca6b8c72b9fbb6bd540de983",
        "filename": "src/crypto/siphash.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/siphash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/crypto/siphash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/siphash.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -15,7 +15,7 @@ class CSipHasher\n private:\n     uint64_t v[4];\n     uint64_t tmp;\n-    int count;\n+    uint8_t count; // Only the low 8 bits of the input size matter.\n \n public:\n     /** Construct a SipHash calculator initialized with 128-bit key (k0, k1) */"
      },
      {
        "sha": "edf2a799983fb8341d39d200c3e3cb7435e88a42",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 10,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -37,6 +37,7 @@\n #include <policy/fees.h>\n #include <policy/policy.h>\n #include <policy/settings.h>\n+#include <protocol.h>\n #include <rpc/blockchain.h>\n #include <rpc/register.h>\n #include <rpc/server.h>\n@@ -378,10 +379,12 @@ void SetupServerArgs(NodeContext& node)\n \n     const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n     const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n+    const auto signetBaseParams = CreateBaseChainParams(CBaseChainParams::SIGNET);\n     const auto regtestBaseParams = CreateBaseChainParams(CBaseChainParams::REGTEST);\n-    const auto defaultChainParams = CreateChainParams(CBaseChainParams::MAIN);\n-    const auto testnetChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n-    const auto regtestChainParams = CreateChainParams(CBaseChainParams::REGTEST);\n+    const auto defaultChainParams = CreateChainParams(argsman, CBaseChainParams::MAIN);\n+    const auto testnetChainParams = CreateChainParams(argsman, CBaseChainParams::TESTNET);\n+    const auto signetChainParams = CreateChainParams(argsman, CBaseChainParams::SIGNET);\n+    const auto regtestChainParams = CreateChainParams(argsman, CBaseChainParams::REGTEST);\n \n     // Hidden Options\n     std::vector<std::string> hidden_args = {\n@@ -393,7 +396,7 @@ void SetupServerArgs(NodeContext& node)\n #if HAVE_SYSTEM\n     argsman.AddArg(\"-alertnotify=<cmd>\", \"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif\n-    argsman.AddArg(\"-assumevalid=<hex>\", strprintf(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\", defaultChainParams->GetConsensus().defaultAssumeValid.GetHex(), testnetChainParams->GetConsensus().defaultAssumeValid.GetHex()), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-assumevalid=<hex>\", strprintf(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s, signet: %s)\", defaultChainParams->GetConsensus().defaultAssumeValid.GetHex(), testnetChainParams->GetConsensus().defaultAssumeValid.GetHex(), signetChainParams->GetConsensus().defaultAssumeValid.GetHex()), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-blocksdir=<dir>\", \"Specify directory to hold blocks subdirectory for *.dat files (default: <datadir>)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #if HAVE_SYSTEM\n     argsman.AddArg(\"-blocknotify=<cmd>\", \"Execute command when the best block changes (%s in cmd is replaced by block hash)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -411,7 +414,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-maxmempool=<n>\", strprintf(\"Keep the transaction memory pool below <n> megabytes (default: %u)\", DEFAULT_MAX_MEMPOOL_SIZE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-maxorphantx=<n>\", strprintf(\"Keep at most <n> unconnectable transactions in memory (default: %u)\", DEFAULT_MAX_ORPHAN_TRANSACTIONS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-mempoolexpiry=<n>\", strprintf(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\", DEFAULT_MEMPOOL_EXPIRY), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-minimumchainwork=<hex>\", strprintf(\"Minimum work assumed to exist on a valid chain in hex (default: %s, testnet: %s)\", defaultChainParams->GetConsensus().nMinimumChainWork.GetHex(), testnetChainParams->GetConsensus().nMinimumChainWork.GetHex()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n+    argsman.AddArg(\"-minimumchainwork=<hex>\", strprintf(\"Minimum work assumed to exist on a valid chain in hex (default: %s, testnet: %s, signet: %s)\", defaultChainParams->GetConsensus().nMinimumChainWork.GetHex(), testnetChainParams->GetConsensus().nMinimumChainWork.GetHex(), signetChainParams->GetConsensus().nMinimumChainWork.GetHex()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-par=<n>\", strprintf(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\",\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-persistmempool\", strprintf(\"Whether to save the mempool on shutdown and load on restart (default: %u)\", DEFAULT_PERSIST_MEMPOOL), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n@@ -422,6 +425,9 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-reindex\", \"Rebuild chain state and block index from the blk*.dat files on disk\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-reindex-chainstate\", \"Rebuild chain state from the currently indexed blocks. When in pruning mode or if blocks on disk might be corrupted, use full -reindex instead.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n     argsman.AddArg(\"-settings=<file>\", strprintf(\"Specify path to dynamic settings data file. Can be disabled with -nosettings. File is written at runtime and not meant to be edited by users (use %s instead for custom settings). Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME, BITCOIN_SETTINGS_FILENAME), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+#if HAVE_SYSTEM\n+    argsman.AddArg(\"-startupnotify=<cmd>\", \"Execute command on startup.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n+#endif\n #ifndef WIN32\n     argsman.AddArg(\"-sysperms\", \"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #else\n@@ -455,7 +461,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERBLOCKFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-port=<port>\", strprintf(\"Listen for connections on <port> (default: %u, testnet: %u signet: %u, regtest: %u)\", defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort(), signetChainParams->GetDefaultPort(), regtestChainParams->GetDefaultPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxy=<ip:port>\", \"Connect through SOCKS5 proxy, set -noproxy to disable (default: disabled)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-proxyrandomize\", strprintf(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\", DEFAULT_PROXYRANDOMIZE), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-seednode=<ip>\", \"Connect to a node to retrieve peer addresses, and disconnect. This option can be specified multiple times to connect to multiple nodes.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n@@ -488,26 +494,30 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-zmqpubhashtx=<address>\", \"Enable publish hash transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubrawblock=<address>\", \"Enable publish raw block in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubrawtx=<address>\", \"Enable publish raw transaction in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    argsman.AddArg(\"-zmqpubsequence=<address>\", \"Enable publish hash block and tx sequence in <address>\", ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubhashblockhwm=<n>\", strprintf(\"Set publish hash block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubhashtxhwm=<n>\", strprintf(\"Set publish hash transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubrawblockhwm=<n>\", strprintf(\"Set publish raw block outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n     argsman.AddArg(\"-zmqpubrawtxhwm=<n>\", strprintf(\"Set publish raw transaction outbound message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n+    argsman.AddArg(\"-zmqpubsequencehwm=<n>\", strprintf(\"Set publish hash sequence message high water mark (default: %d)\", CZMQAbstractNotifier::DEFAULT_ZMQ_SNDHWM), ArgsManager::ALLOW_ANY, OptionsCategory::ZMQ);\n #else\n     hidden_args.emplace_back(\"-zmqpubhashblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubhashtx=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawblock=<address>\");\n     hidden_args.emplace_back(\"-zmqpubrawtx=<address>\");\n+    hidden_args.emplace_back(\"-zmqpubsequence=<n>\");\n     hidden_args.emplace_back(\"-zmqpubhashblockhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubhashtxhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawblockhwm=<n>\");\n     hidden_args.emplace_back(\"-zmqpubrawtxhwm=<n>\");\n+    hidden_args.emplace_back(\"-zmqpubsequencehwm=<n>\");\n #endif\n \n     argsman.AddArg(\"-checkblocks=<n>\", strprintf(\"How many blocks to check at startup (default: %u, 0 = all)\", DEFAULT_CHECKBLOCKS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is: %s (0-4, default: %u)\", Join(CHECKLEVEL_DOC, \", \"), DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-checkblockindex\", strprintf(\"Do a consistency check for the block tree, chainstate, and other validation data structures occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block 295000 (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block %s (default: %u)\", defaultChainParams->Checkpoints().GetHeight(), DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-deprecatedrpc=<method>\", \"Allows deprecated RPC method(s) to be used\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\", ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     argsman.AddArg(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n@@ -561,7 +571,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-rpcbind=<addr>[:port]\", \"Bind to given address to listen for JSON-RPC connections. Do not expose the RPC server to untrusted networks such as the public internet! This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY | ArgsManager::SENSITIVE, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpccookiefile=<loc>\", \"Location of the auth cookie. Relative paths will be prefixed by a net-specific datadir location. (default: data dir)\", ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcpassword=<pw>\", \"Password for JSON-RPC connections\", ArgsManager::ALLOW_ANY | ArgsManager::SENSITIVE, OptionsCategory::RPC);\n-    argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::RPC);\n+    argsman.AddArg(\"-rpcport=<port>\", strprintf(\"Listen for JSON-RPC connections on <port> (default: %u, testnet: %u, signet: %u, regtest: %u)\", defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort(), signetBaseParams->RPCPort(), regtestBaseParams->RPCPort()), ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcserialversion\", strprintf(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\", DEFAULT_RPC_SERIALIZE_VERSION), ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcservertimeout=<n>\", strprintf(\"Timeout during HTTP requests (default: %d)\", DEFAULT_HTTP_SERVER_TIMEOUT), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::RPC);\n     argsman.AddArg(\"-rpcthreads=<n>\", strprintf(\"Set the number of threads to service RPC calls (default: %d)\", DEFAULT_HTTP_THREADS), ArgsManager::ALLOW_ANY, OptionsCategory::RPC);\n@@ -670,6 +680,17 @@ static void CleanupBlockRevFiles()\n     }\n }\n \n+#if HAVE_SYSTEM\n+static void StartupNotify(const ArgsManager& args)\n+{\n+    std::string cmd = args.GetArg(\"-startupnotify\", \"\");\n+    if (!cmd.empty()) {\n+        std::thread t(runCommand, cmd);\n+        t.detach(); // thread runs free\n+    }\n+}\n+#endif\n+\n static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImportFiles, const ArgsManager& args)\n {\n     const CChainParams& chainparams = Params();\n@@ -946,6 +967,9 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n     // specified in default section of config file, but not overridden\n     // on the command line or in this network's section of the config file.\n     std::string network = args.GetChainName();\n+    if (network == CBaseChainParams::SIGNET) {\n+        LogPrintf(\"Signet derived magic (message start): %s\\n\", HexStr(chainparams.MessageStart()));\n+    }\n     bilingual_str errors;\n     for (const auto& arg : args.GetUnsuitableSectionOnlyArgs()) {\n         errors += strprintf(_(\"Config setting for %s only applied on %s network when in [%s] section.\") + Untranslated(\"\\n\"), arg, network, network);\n@@ -1172,6 +1196,10 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n \n     nMaxTipAge = args.GetArg(\"-maxtipage\", DEFAULT_MAX_TIP_AGE);\n \n+    if (args.IsArgSet(\"-proxy\") && args.GetArg(\"-proxy\", \"\").empty()) {\n+        return InitError(_(\"No proxy server specified. Use -proxy=<ip> or -proxy=<ip:port>.\"));\n+    }\n+\n     return true;\n }\n \n@@ -1559,7 +1587,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n-                UnloadBlockIndex(node.mempool.get());\n+                UnloadBlockIndex(node.mempool.get(), chainman);\n \n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:\n@@ -1614,7 +1642,6 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 bool failed_chainstate_init = false;\n \n                 for (CChainState* chainstate : chainman.GetAll()) {\n-                    LogPrintf(\"Initializing chainstate %s\\n\", chainstate->ToString());\n                     chainstate->InitCoinsDB(\n                         /* cache_size_bytes */ nCoinDBCache,\n                         /* in_memory */ false,\n@@ -1969,5 +1996,9 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n         banman->DumpBanlist();\n     }, DUMP_BANS_INTERVAL);\n \n+#if HAVE_SYSTEM\n+    StartupNotify(args);\n+#endif\n+\n     return true;\n }"
      },
      {
        "sha": "4c5ebe66fc92d0a3ff94899a86dfec31780fce70",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -59,13 +59,13 @@ class NotificationsProxy : public CValidationInterface\n     explicit NotificationsProxy(std::shared_ptr<Chain::Notifications> notifications)\n         : m_notifications(std::move(notifications)) {}\n     virtual ~NotificationsProxy() = default;\n-    void TransactionAddedToMempool(const CTransactionRef& tx) override\n+    void TransactionAddedToMempool(const CTransactionRef& tx, uint64_t mempool_sequence) override\n     {\n-        m_notifications->transactionAddedToMempool(tx);\n+        m_notifications->transactionAddedToMempool(tx, mempool_sequence);\n     }\n-    void TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) override\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason, uint64_t mempool_sequence) override\n     {\n-        m_notifications->transactionRemovedFromMempool(tx, reason);\n+        m_notifications->transactionRemovedFromMempool(tx, reason, mempool_sequence);\n     }\n     void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* index) override\n     {\n@@ -405,7 +405,7 @@ class ChainImpl : public Chain\n         if (!m_node.mempool) return;\n         LOCK2(::cs_main, m_node.mempool->cs);\n         for (const CTxMemPoolEntry& entry : m_node.mempool->mapTx) {\n-            notifications.transactionAddedToMempool(entry.GetSharedTx());\n+            notifications.transactionAddedToMempool(entry.GetSharedTx(), 0 /* mempool_sequence */);\n         }\n     }\n     NodeContext& m_node;"
      },
      {
        "sha": "85d09be0f33081ee2daac8ce6fa8436a7b1e3939",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -242,8 +242,8 @@ class Chain\n     {\n     public:\n         virtual ~Notifications() {}\n-        virtual void transactionAddedToMempool(const CTransactionRef& tx) {}\n-        virtual void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {}\n+        virtual void transactionAddedToMempool(const CTransactionRef& tx, uint64_t mempool_sequence) {}\n+        virtual void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason, uint64_t mempool_sequence) {}\n         virtual void blockConnected(const CBlock& block, int height) {}\n         virtual void blockDisconnected(const CBlock& block, int height) {}\n         virtual void updatedBlockTip() {}"
      },
      {
        "sha": "f68016b557368d6025739555c41b8c820e03b064",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -231,8 +231,9 @@ class WalletImpl : public Wallet\n     {\n         LOCK(m_wallet->cs_wallet);\n         CTransactionRef tx;\n+        FeeCalculation fee_calc_out;\n         if (!m_wallet->CreateTransaction(recipients, tx, fee, change_pos,\n-                fail_reason, coin_control, sign)) {\n+                fail_reason, coin_control, fee_calc_out, sign)) {\n             return {};\n         }\n         return tx;\n@@ -488,8 +489,7 @@ class WalletImpl : public Wallet\n class WalletClientImpl : public WalletClient\n {\n public:\n-    WalletClientImpl(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames)\n-        : m_wallet_filenames(std::move(wallet_filenames))\n+    WalletClientImpl(Chain& chain, ArgsManager& args)\n     {\n         m_context.chain = &chain;\n         m_context.args = &args;\n@@ -506,8 +506,8 @@ class WalletClientImpl : public WalletClient\n             m_rpc_handlers.emplace_back(m_context.chain->handleRpc(m_rpc_commands.back()));\n         }\n     }\n-    bool verify() override { return VerifyWallets(*m_context.chain, m_wallet_filenames); }\n-    bool load() override { return LoadWallets(*m_context.chain, m_wallet_filenames); }\n+    bool verify() override { return VerifyWallets(*m_context.chain); }\n+    bool load() override { return LoadWallets(*m_context.chain); }\n     void start(CScheduler& scheduler) override { return StartWallets(scheduler, *Assert(m_context.args)); }\n     void flush() override { return FlushWallets(); }\n     void stop() override { return StopWallets(); }\n@@ -566,9 +566,9 @@ class WalletClientImpl : public WalletClient\n \n std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet) { return wallet ? MakeUnique<WalletImpl>(wallet) : nullptr; }\n \n-std::unique_ptr<WalletClient> MakeWalletClient(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames)\n+std::unique_ptr<WalletClient> MakeWalletClient(Chain& chain, ArgsManager& args)\n {\n-    return MakeUnique<WalletClientImpl>(chain, args, std::move(wallet_filenames));\n+    return MakeUnique<WalletClientImpl>(chain, args);\n }\n \n } // namespace interfaces"
      },
      {
        "sha": "6ccfd7fc205a421d1d066795386d6e79e444ef16",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -411,7 +411,7 @@ std::unique_ptr<Wallet> MakeWallet(const std::shared_ptr<CWallet>& wallet);\n \n //! Return implementation of ChainClient interface for a wallet client. This\n //! function will be undefined in builds where ENABLE_WALLET is false.\n-std::unique_ptr<WalletClient> MakeWalletClient(Chain& chain, ArgsManager& args, std::vector<std::string> wallet_filenames);\n+std::unique_ptr<WalletClient> MakeWalletClient(Chain& chain, ArgsManager& args);\n \n } // namespace interfaces\n "
      },
      {
        "sha": "7dec4abfb9d6f90514406eb2e5cf3a243ce40a90",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 121,
        "deletions": 62,
        "changes": 183,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -10,7 +10,6 @@\n #include <net.h>\n \n #include <banman.h>\n-#include <chainparams.h>\n #include <clientversion.h>\n #include <consensus/consensus.h>\n #include <crypto/sha256.h>\n@@ -94,6 +93,7 @@ const std::string NET_MESSAGE_COMMAND_OTHER = \"*other*\";\n \n static const uint64_t RANDOMIZER_ID_NETGROUP = 0x6c0edd8036ef4036ULL; // SHA256(\"netgroup\")[0:8]\n static const uint64_t RANDOMIZER_ID_LOCALHOSTNONCE = 0xd93e69e2bbfa5735ULL; // SHA256(\"localhostnonce\")[0:8]\n+static const uint64_t RANDOMIZER_ID_ADDRCACHE = 0x1cf2e4ddd306dda9ULL; // SHA256(\"addrcache\")[0:8]\n //\n // Global state variables\n //\n@@ -487,6 +487,26 @@ void CConnman::AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNet\n     }\n }\n \n+std::string CNode::ConnectionTypeAsString() const\n+{\n+    switch (m_conn_type) {\n+    case ConnectionType::INBOUND:\n+        return \"inbound\";\n+    case ConnectionType::MANUAL:\n+        return \"manual\";\n+    case ConnectionType::FEELER:\n+        return \"feeler\";\n+    case ConnectionType::OUTBOUND_FULL_RELAY:\n+        return \"outbound-full-relay\";\n+    case ConnectionType::BLOCK_RELAY:\n+        return \"block-relay-only\";\n+    case ConnectionType::ADDR_FETCH:\n+        return \"addr-fetch\";\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n std::string CNode::GetAddrName() const {\n     LOCK(cs_addrName);\n     return addrName;\n@@ -581,9 +601,21 @@ void CNode::copyStats(CNodeStats &stats, const std::vector<bool> &m_asmap)\n     // Leave string empty if addrLocal invalid (not filled in yet)\n     CService addrLocalUnlocked = GetAddrLocal();\n     stats.addrLocal = addrLocalUnlocked.IsValid() ? addrLocalUnlocked.ToString() : \"\";\n+\n+    stats.m_conn_type_string = ConnectionTypeAsString();\n }\n #undef X\n \n+/**\n+ * Receive bytes from the buffer and deserialize them into messages.\n+ *\n+ * @param[in]   pch         A pointer to the raw data\n+ * @param[in]   nBytes      Size of the data\n+ * @param[out]  complete    Set True if at least one message has been\n+ *                          deserialized and is ready to be processed\n+ * @return  True if the peer should stay connected,\n+ *          False if the peer should be disconnected from.\n+ */\n bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete)\n {\n     complete = false;\n@@ -594,25 +626,35 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     while (nBytes > 0) {\n         // absorb network data\n         int handled = m_deserializer->Read(pch, nBytes);\n-        if (handled < 0) return false;\n+        if (handled < 0) {\n+            // Serious header problem, disconnect from the peer.\n+            return false;\n+        }\n \n         pch += handled;\n         nBytes -= handled;\n \n         if (m_deserializer->Complete()) {\n             // decompose a transport agnostic CNetMessage from the deserializer\n-            CNetMessage msg = m_deserializer->GetMessage(Params().MessageStart(), time);\n+            uint32_t out_err_raw_size{0};\n+            Optional<CNetMessage> result{m_deserializer->GetMessage(time, out_err_raw_size)};\n+            if (!result) {\n+                // Message deserialization failed.  Drop the message but don't disconnect the peer.\n+                // store the size of the corrupt message\n+                mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER)->second += out_err_raw_size;\n+                continue;\n+            }\n \n             //store received bytes per message command\n             //to prevent a memory DOS, only allow valid commands\n-            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(msg.m_command);\n+            mapMsgCmdSize::iterator i = mapRecvBytesPerMsgCmd.find(result->m_command);\n             if (i == mapRecvBytesPerMsgCmd.end())\n                 i = mapRecvBytesPerMsgCmd.find(NET_MESSAGE_COMMAND_OTHER);\n             assert(i != mapRecvBytesPerMsgCmd.end());\n-            i->second += msg.m_raw_message_size;\n+            i->second += result->m_raw_message_size;\n \n             // push the message to the process queue,\n-            vRecvMsg.push_back(std::move(msg));\n+            vRecvMsg.push_back(std::move(*result));\n \n             complete = true;\n         }\n@@ -621,32 +663,6 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n     return true;\n }\n \n-void CNode::SetSendVersion(int nVersionIn)\n-{\n-    // Send version may only be changed in the version message, and\n-    // only one version message is allowed per session. We can therefore\n-    // treat this value as const and even atomic as long as it's only used\n-    // once a version message has been successfully processed. Any attempt to\n-    // set this twice is an error.\n-    if (nSendVersion != 0) {\n-        error(\"Send version already set for node: %i. Refusing to change from %i to %i\", id, nSendVersion, nVersionIn);\n-    } else {\n-        nSendVersion = nVersionIn;\n-    }\n-}\n-\n-int CNode::GetSendVersion() const\n-{\n-    // The send version should always be explicitly set to\n-    // INIT_PROTO_VERSION rather than using this value until SetSendVersion\n-    // has been called.\n-    if (nSendVersion == 0) {\n-        error(\"Requesting unset send version for node: %i. Using %i\", id, INIT_PROTO_VERSION);\n-        return INIT_PROTO_VERSION;\n-    }\n-    return nSendVersion;\n-}\n-\n int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n {\n     // copy data to temporary parsing buffer\n@@ -665,11 +681,19 @@ int V1TransportDeserializer::readHeader(const char *pch, unsigned int nBytes)\n         hdrbuf >> hdr;\n     }\n     catch (const std::exception&) {\n+        LogPrint(BCLog::NET, \"HEADER ERROR - UNABLE TO DESERIALIZE, peer=%d\\n\", m_node_id);\n+        return -1;\n+    }\n+\n+    // Check start string, network magic\n+    if (memcmp(hdr.pchMessageStart, m_chain_params.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n+        LogPrint(BCLog::NET, \"HEADER ERROR - MESSAGESTART (%s, %u bytes), received %s, peer=%d\\n\", hdr.GetCommand(), hdr.nMessageSize, HexStr(hdr.pchMessageStart), m_node_id);\n         return -1;\n     }\n \n     // reject messages larger than MAX_SIZE or MAX_PROTOCOL_MESSAGE_LENGTH\n     if (hdr.nMessageSize > MAX_SIZE || hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n+        LogPrint(BCLog::NET, \"HEADER ERROR - SIZE (%s, %u bytes), peer=%d\\n\", hdr.GetCommand(), hdr.nMessageSize, m_node_id);\n         return -1;\n     }\n \n@@ -704,36 +728,39 @@ const uint256& V1TransportDeserializer::GetMessageHash() const\n     return data_hash;\n }\n \n-CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageStartChars& message_start, const std::chrono::microseconds time)\n+Optional<CNetMessage> V1TransportDeserializer::GetMessage(const std::chrono::microseconds time, uint32_t& out_err_raw_size)\n {\n     // decompose a single CNetMessage from the TransportDeserializer\n-    CNetMessage msg(std::move(vRecv));\n+    Optional<CNetMessage> msg(std::move(vRecv));\n \n-    // store state about valid header, netmagic and checksum\n-    msg.m_valid_header = hdr.IsValid(message_start);\n-    msg.m_valid_netmagic = (memcmp(hdr.pchMessageStart, message_start, CMessageHeader::MESSAGE_START_SIZE) == 0);\n-    uint256 hash = GetMessageHash();\n+    // store command string, time, and sizes\n+    msg->m_command = hdr.GetCommand();\n+    msg->m_time = time;\n+    msg->m_message_size = hdr.nMessageSize;\n+    msg->m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n-    // store command string, payload size\n-    msg.m_command = hdr.GetCommand();\n-    msg.m_message_size = hdr.nMessageSize;\n-    msg.m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n+    uint256 hash = GetMessageHash();\n \n     // We just received a message off the wire, harvest entropy from the time (and the message checksum)\n     RandAddEvent(ReadLE32(hash.begin()));\n \n-    msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n-    if (!msg.m_valid_checksum) {\n-        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n-                 SanitizeString(msg.m_command), msg.m_message_size,\n+    // Check checksum and header command string\n+    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0) {\n+        LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s, peer=%d\\n\",\n+                 SanitizeString(msg->m_command), msg->m_message_size,\n                  HexStr(Span<uint8_t>(hash.begin(), hash.begin() + CMessageHeader::CHECKSUM_SIZE)),\n-                 HexStr(hdr.pchChecksum));\n-    }\n-\n-    // store receive time\n-    msg.m_time = time;\n-\n-    // reset the network deserializer (prepare for the next message)\n+                 HexStr(hdr.pchChecksum),\n+                 m_node_id);\n+        out_err_raw_size = msg->m_raw_message_size;\n+        msg = nullopt;\n+    } else if (!hdr.IsCommandValid()) {\n+        LogPrint(BCLog::NET, \"HEADER ERROR - COMMAND (%s, %u bytes), peer=%d\\n\",\n+                 hdr.GetCommand(), msg->m_message_size, m_node_id);\n+        out_err_raw_size = msg->m_raw_message_size;\n+        msg = nullopt;\n+    }\n+\n+    // Always reset the network deserializer (prepare for the next message)\n     Reset();\n     return msg;\n }\n@@ -1193,7 +1220,7 @@ void CConnman::InactivityCheck(CNode *pnode)\n             LogPrintf(\"socket sending timeout: %is\\n\", nTime - pnode->nLastSend);\n             pnode->fDisconnect = true;\n         }\n-        else if (nTime - pnode->nLastRecv > (pnode->nVersion > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n+        else if (nTime - pnode->nLastRecv > (pnode->GetCommonVersion() > BIP0031_VERSION ? TIMEOUT_INTERVAL : 90*60))\n         {\n             LogPrintf(\"socket receive timeout: %is\\n\", nTime - pnode->nLastRecv);\n             pnode->fDisconnect = true;\n@@ -1784,7 +1811,7 @@ void CConnman::SetTryNewOutboundPeer(bool flag)\n \n // Return the number of peers we have over our outbound connection limit\n // Exclude peers that are marked for disconnect, or are going to be\n-// disconnected soon (eg one-shots and feelers)\n+// disconnected soon (eg ADDR_FETCH and FEELER)\n // Also exclude peers that haven't finished initial connection handshake yet\n // (so that we don't decide we're over our desired connection limit, and then\n // evict some peer that has finished the handshake)\n@@ -2560,15 +2587,47 @@ std::vector<CAddress> CConnman::GetAddresses(size_t max_addresses, size_t max_pc\n     return addresses;\n }\n \n-std::vector<CAddress> CConnman::GetAddresses(Network requestor_network, size_t max_addresses, size_t max_pct)\n+std::vector<CAddress> CConnman::GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct)\n {\n+    SOCKET socket;\n+    WITH_LOCK(requestor.cs_hSocket, socket = requestor.hSocket);\n+    auto local_socket_bytes = GetBindAddress(socket).GetAddrBytes();\n+    uint64_t cache_id = GetDeterministicRandomizer(RANDOMIZER_ID_ADDRCACHE)\n+        .Write(requestor.addr.GetNetwork())\n+        .Write(local_socket_bytes.data(), local_socket_bytes.size())\n+        .Finalize();\n     const auto current_time = GetTime<std::chrono::microseconds>();\n-    if (m_addr_response_caches.find(requestor_network) == m_addr_response_caches.end() ||\n-        m_addr_response_caches[requestor_network].m_update_addr_response < current_time) {\n-        m_addr_response_caches[requestor_network].m_addrs_response_cache = GetAddresses(max_addresses, max_pct);\n-        m_addr_response_caches[requestor_network].m_update_addr_response = current_time + std::chrono::hours(21) + GetRandMillis(std::chrono::hours(6));\n+    auto r = m_addr_response_caches.emplace(cache_id, CachedAddrResponse{});\n+    CachedAddrResponse& cache_entry = r.first->second;\n+    if (cache_entry.m_cache_entry_expiration < current_time) { // If emplace() added new one it has expiration 0.\n+        cache_entry.m_addrs_response_cache = GetAddresses(max_addresses, max_pct);\n+        // Choosing a proper cache lifetime is a trade-off between the privacy leak minimization\n+        // and the usefulness of ADDR responses to honest users.\n+        //\n+        // Longer cache lifetime makes it more difficult for an attacker to scrape\n+        // enough AddrMan data to maliciously infer something useful.\n+        // By the time an attacker scraped enough AddrMan records, most of\n+        // the records should be old enough to not leak topology info by\n+        // e.g. analyzing real-time changes in timestamps.\n+        //\n+        // It takes only several hundred requests to scrape everything from an AddrMan containing 100,000 nodes,\n+        // so ~24 hours of cache lifetime indeed makes the data less inferable by the time\n+        // most of it could be scraped (considering that timestamps are updated via\n+        // ADDR self-announcements and when nodes communicate).\n+        // We also should be robust to those attacks which may not require scraping *full* victim's AddrMan\n+        // (because even several timestamps of the same handful of nodes may leak privacy).\n+        //\n+        // On the other hand, longer cache lifetime makes ADDR responses\n+        // outdated and less useful for an honest requestor, e.g. if most nodes\n+        // in the ADDR response are no longer active.\n+        //\n+        // However, the churn in the network is known to be rather low. Since we consider\n+        // nodes to be \"terrible\" (see IsTerrible()) if the timestamps are older than 30 days,\n+        // max. 24 hours of \"penalty\" due to cache shouldn't make any meaningful difference\n+        // in terms of the freshness of the response.\n+        cache_entry.m_cache_entry_expiration = current_time + std::chrono::hours(21) + GetRandMillis(std::chrono::hours(6));\n     }\n-    return m_addr_response_caches[requestor_network].m_addrs_response_cache;\n+    return cache_entry.m_addrs_response_cache;\n }\n \n bool CConnman::AddNode(const std::string& strNode)\n@@ -2821,7 +2880,7 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n         LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\n     }\n \n-    m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params().MessageStart(), SER_NETWORK, INIT_PROTO_VERSION));\n+    m_deserializer = MakeUnique<V1TransportDeserializer>(V1TransportDeserializer(Params(), GetId(), SER_NETWORK, INIT_PROTO_VERSION));\n     m_serializer = MakeUnique<V1TransportSerializer>(V1TransportSerializer());\n }\n "
      },
      {
        "sha": "fb68827144a2054a10b723e6228bf717912b1241",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 57,
        "deletions": 32,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -10,12 +10,14 @@\n #include <addrman.h>\n #include <amount.h>\n #include <bloom.h>\n+#include <chainparams.h>\n #include <compat.h>\n #include <crypto/siphash.h>\n #include <hash.h>\n #include <limitedmap.h>\n-#include <netaddress.h>\n #include <net_permissions.h>\n+#include <netaddress.h>\n+#include <optional.h>\n #include <policy/feerate.h>\n #include <protocol.h>\n #include <random.h>\n@@ -114,6 +116,14 @@ struct CSerializedNetMsg\n     std::string m_type;\n };\n \n+const std::vector<std::string> CONNECTION_TYPE_DOC{\n+    \"outbound-full-relay (default automatic connections)\",\n+    \"block-relay-only (does not relay transactions or addresses)\",\n+    \"inbound (initiated by the peer)\",\n+    \"manual (added via addnode RPC or -addnode/-connect configuration options)\",\n+    \"addr-fetch (short-lived automatic connection for soliciting addresses)\",\n+    \"feeler (short-lived automatic connection for testing addresses)\"};\n+\n /** Different types of connections to a peer. This enum encapsulates the\n  * information we have available at the time of opening or accepting the\n  * connection. Aside from INBOUND, all types are initiated by us. */\n@@ -143,10 +153,19 @@ enum class ConnectionType {\n     MANUAL,\n \n     /**\n-     * Feeler connections are short lived connections used to increase the\n-     * number of connectable addresses in our AddrMan. Approximately every\n-     * FEELER_INTERVAL, we attempt to connect to a random address from the new\n-     * table. If successful, we add it to the tried table.\n+     * Feeler connections are short-lived connections made to check that a node\n+     * is alive. They can be useful for:\n+     * - test-before-evict: if one of the peers is considered for eviction from\n+     *   our AddrMan because another peer is mapped to the same slot in the tried table,\n+     *   evict only if this longer-known peer is offline.\n+     * - move node addresses from New to Tried table, so that we have more\n+     *   connectable addresses in our AddrMan.\n+     * Note that in the literature (\"Eclipse Attacks on Bitcoin\u2019s Peer-to-Peer Network\")\n+     * only the latter feature is referred to as \"feeler connections\",\n+     * although in our codebase feeler connections encompass test-before-evict as well.\n+     * We make these connections approximately every FEELER_INTERVAL:\n+     * first we resolve previously found collisions if they exist (test-before-evict),\n+     * otherwise connect to a node from the new table.\n      */\n     FEELER,\n \n@@ -258,8 +277,8 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func)\n+    using NodeFn = std::function<void(CNode*)>;\n+    void ForEachNode(const NodeFn& func)\n     {\n         LOCK(cs_vNodes);\n         for (auto&& node : vNodes) {\n@@ -268,8 +287,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(const NodeFn& func) const\n     {\n         LOCK(cs_vNodes);\n         for (auto&& node : vNodes) {\n@@ -311,7 +329,7 @@ class CConnman\n      * A non-malicious call (from RPC or a peer with addr permission) should\n      * call the function without a parameter to avoid using the cache.\n      */\n-    std::vector<CAddress> GetAddresses(Network requestor_network, size_t max_addresses, size_t max_pct);\n+    std::vector<CAddress> GetAddresses(CNode& requestor, size_t max_addresses, size_t max_pct);\n \n     // This allows temporarily exceeding m_max_outbound_full_relay, with the goal of finding\n     // a peer that is better than all our current peers.\n@@ -484,20 +502,24 @@ class CConnman\n      */\n     struct CachedAddrResponse {\n         std::vector<CAddress> m_addrs_response_cache;\n-        std::chrono::microseconds m_update_addr_response{0};\n+        std::chrono::microseconds m_cache_entry_expiration{0};\n     };\n \n     /**\n      * Addr responses stored in different caches\n-     * per network prevent cross-network node identification.\n+     * per (network, local socket) prevent cross-network node identification.\n      * If a node for example is multi-homed under Tor and IPv6,\n      * a single cache (or no cache at all) would let an attacker\n      * to easily detect that it is the same node by comparing responses.\n-     * The used memory equals to 1000 CAddress records (or around 32 bytes) per\n+     * Indexing by local socket prevents leakage when a node has multiple\n+     * listening addresses on the same network.\n+     *\n+     * The used memory equals to 1000 CAddress records (or around 40 bytes) per\n      * distinct Network (up to 5) we have/had an inbound peer from,\n-     * resulting in at most ~160 KB.\n+     * resulting in at most ~196 KB. Every separate local socket may\n+     * add up to ~196 KB extra.\n      */\n-    std::map<Network, CachedAddrResponse> m_addr_response_caches;\n+    std::map<uint64_t, CachedAddrResponse> m_addr_response_caches;\n \n     /**\n      * Services this instance offers.\n@@ -688,6 +710,7 @@ class CNodeStats\n     // Bind address of our side of the connection\n     CAddress addrBind;\n     uint32_t m_mapped_as;\n+    std::string m_conn_type_string;\n };\n \n \n@@ -700,11 +723,8 @@ class CNetMessage {\n public:\n     CDataStream m_recv;                  //!< received message data\n     std::chrono::microseconds m_time{0}; //!< time of message receipt\n-    bool m_valid_netmagic = false;\n-    bool m_valid_header = false;\n-    bool m_valid_checksum = false;\n-    uint32_t m_message_size{0};     //!< size of the payload\n-    uint32_t m_raw_message_size{0}; //!< used wire size of the message (including header/checksum)\n+    uint32_t m_message_size{0};          //!< size of the payload\n+    uint32_t m_raw_message_size{0};      //!< used wire size of the message (including header/checksum)\n     std::string m_command;\n \n     CNetMessage(CDataStream&& recv_in) : m_recv(std::move(recv_in)) {}\n@@ -728,13 +748,15 @@ class TransportDeserializer {\n     // read and deserialize data\n     virtual int Read(const char *data, unsigned int bytes) = 0;\n     // decomposes a message from the context\n-    virtual CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, std::chrono::microseconds time) = 0;\n+    virtual Optional<CNetMessage> GetMessage(std::chrono::microseconds time, uint32_t& out_err) = 0;\n     virtual ~TransportDeserializer() {}\n };\n \n class V1TransportDeserializer final : public TransportDeserializer\n {\n private:\n+    const CChainParams& m_chain_params;\n+    const NodeId m_node_id; // Only for logging\n     mutable CHash256 hasher;\n     mutable uint256 data_hash;\n     bool in_data;                   // parsing header (false) or data (true)\n@@ -760,8 +782,12 @@ class V1TransportDeserializer final : public TransportDeserializer\n     }\n \n public:\n-\n-    V1TransportDeserializer(const CMessageHeader::MessageStartChars& pchMessageStartIn, int nTypeIn, int nVersionIn) : hdrbuf(nTypeIn, nVersionIn), hdr(pchMessageStartIn), vRecv(nTypeIn, nVersionIn) {\n+    V1TransportDeserializer(const CChainParams& chain_params, const NodeId node_id, int nTypeIn, int nVersionIn)\n+        : m_chain_params(chain_params),\n+          m_node_id(node_id),\n+          hdrbuf(nTypeIn, nVersionIn),\n+          vRecv(nTypeIn, nVersionIn)\n+    {\n         Reset();\n     }\n \n@@ -781,7 +807,7 @@ class V1TransportDeserializer final : public TransportDeserializer\n         if (ret < 0) Reset();\n         return ret;\n     }\n-    CNetMessage GetMessage(const CMessageHeader::MessageStartChars& message_start, std::chrono::microseconds time) override;\n+    Optional<CNetMessage> GetMessage(std::chrono::microseconds time, uint32_t& out_err_raw_size) override;\n };\n \n /** The TransportSerializer prepares messages for the network transport\n@@ -827,7 +853,6 @@ class CNode\n \n     std::deque<CInv> vRecvGetData;\n     uint64_t nRecvBytes GUARDED_BY(cs_vRecv){0};\n-    std::atomic<int> nRecvVersion{INIT_PROTO_VERSION};\n \n     std::atomic<int64_t> nLastSend{0};\n     std::atomic<int64_t> nLastRecv{0};\n@@ -1014,6 +1039,7 @@ class CNode\n     const NodeId id;\n     const uint64_t nLocalHostNonce;\n     const ConnectionType m_conn_type;\n+    std::atomic<int> m_greatest_common_version{INIT_PROTO_VERSION};\n \n     //! Services offered to this peer.\n     //!\n@@ -1033,7 +1059,6 @@ class CNode\n     const ServiceFlags nLocalServices;\n \n     const int nMyStartingHeight;\n-    int nSendVersion{0};\n     NetPermissionFlags m_permissionFlags{ PF_NONE };\n     std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n \n@@ -1065,16 +1090,14 @@ class CNode\n \n     bool ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete);\n \n-    void SetRecvVersion(int nVersionIn)\n+    void SetCommonVersion(int greatest_common_version)\n     {\n-        nRecvVersion = nVersionIn;\n+        m_greatest_common_version = greatest_common_version;\n     }\n-    int GetRecvVersion() const\n+    int GetCommonVersion() const\n     {\n-        return nRecvVersion;\n+        return m_greatest_common_version;\n     }\n-    void SetSendVersion(int nVersionIn);\n-    int GetSendVersion() const;\n \n     CService GetAddrLocal() const;\n     //! May not be called more than once\n@@ -1144,6 +1167,8 @@ class CNode\n     std::string GetAddrName() const;\n     //! Sets the addrName only if it was not previously set\n     void MaybeSetAddrName(const std::string& addrNameIn);\n+\n+    std::string ConnectionTypeAsString() const;\n };\n \n /** Return a timestamp in the future (in microseconds) for exponentially distributed events. */"
      },
      {
        "sha": "d3a357fee2bfc8d00a14de1ca97c102fd3bcc14c",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 108,
        "deletions": 134,
        "changes": 242,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -153,8 +153,14 @@ struct COrphanTx {\n     int64_t nTimeExpire;\n     size_t list_pos;\n };\n+\n+/** Guards orphan transactions and extra txs for compact blocks */\n RecursiveMutex g_cs_orphans;\n+/** Map from txid to orphan transaction record. Limited by\n+ *  -maxorphantx/DEFAULT_MAX_ORPHAN_TRANSACTIONS */\n std::map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(g_cs_orphans);\n+/** Index from wtxid into the mapOrphanTransactions to lookup orphan\n+ *  transactions using their witness ids. */\n std::map<uint256, std::map<uint256, COrphanTx>::iterator> g_orphans_by_wtxid GUARDED_BY(g_cs_orphans);\n \n void EraseOrphansFor(NodeId peer);\n@@ -258,12 +264,19 @@ namespace {\n             return &(*a) < &(*b);\n         }\n     };\n-    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n \n-    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans); //! For random eviction\n+    /** Index from the parents' COutPoint into the mapOrphanTransactions. Used\n+     *  to remove orphan transactions from the mapOrphanTransactions */\n+    std::map<COutPoint, std::set<std::map<uint256, COrphanTx>::iterator, IteratorComparator>> mapOrphanTransactionsByPrev GUARDED_BY(g_cs_orphans);\n+    /** Orphan transactions in vector for quick random eviction */\n+    std::vector<std::map<uint256, COrphanTx>::iterator> g_orphan_list GUARDED_BY(g_cs_orphans);\n \n-    static size_t vExtraTxnForCompactIt GUARDED_BY(g_cs_orphans) = 0;\n+    /** Orphan/conflicted/etc transactions that are kept for compact block reconstruction.\n+     *  The last -blockreconstructionextratxn/DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN of\n+     *  these are kept in a ring buffer */\n     static std::vector<std::pair<uint256, CTransactionRef>> vExtraTxnForCompact GUARDED_BY(g_cs_orphans);\n+    /** Offset into vExtraTxnForCompact to insert the next tx */\n+    static size_t vExtraTxnForCompactIt GUARDED_BY(g_cs_orphans) = 0;\n } // namespace\n \n namespace {\n@@ -662,19 +675,19 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n                 return;\n             }\n         }\n-        connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            LockAssertion lock(::cs_main);\n+        connman.ForNode(nodeid, [&connman](CNode* pfrom) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n             uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n             if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n                 // As per BIP152, we only get 3 of our peers to announce\n                 // blocks using compact encodings.\n                 connman.ForNode(lNodesAnnouncingHeaderAndIDs.front(), [&connman, nCMPCTBLOCKVersion](CNode* pnodeStop){\n-                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetSendVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n+                    connman.PushMessage(pnodeStop, CNetMsgMaker(pnodeStop->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/false, nCMPCTBLOCKVersion));\n                     return true;\n                 });\n                 lNodesAnnouncingHeaderAndIDs.pop_front();\n             }\n-            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetSendVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n+            connman.PushMessage(pfrom, CNetMsgMaker(pfrom->GetCommonVersion()).Make(NetMsgType::SENDCMPCT, /*fAnnounceUsingCMPCTBLOCK=*/true, nCMPCTBLOCKVersion));\n             lNodesAnnouncingHeaderAndIDs.push_back(pfrom->GetId());\n             return true;\n         });\n@@ -889,15 +902,16 @@ void PeerManager::InitializeNode(CNode *pnode) {\n \n void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::set<uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+\n+    for (const auto& txid : unbroadcast_txids) {\n+        CTransactionRef tx = m_mempool.get(txid);\n \n-    for (const auto& elem : unbroadcast_txids) {\n-        // Sanity check: all unbroadcast txns should exist in the mempool\n-        if (m_mempool.exists(elem.first)) {\n+        if (tx != nullptr) {\n             LOCK(cs_main);\n-            RelayTransaction(elem.first, elem.second, m_connman);\n+            RelayTransaction(txid, tx->GetWitnessHash(), m_connman);\n         } else {\n-            m_mempool.RemoveUnbroadcastTx(elem.first, true);\n+            m_mempool.RemoveUnbroadcastTx(txid, true);\n         }\n     }\n \n@@ -1354,11 +1368,11 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\n         fWitnessesPresentInMostRecentCompactBlock = fWitnessEnabled;\n     }\n \n-    m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        LockAssertion lock(::cs_main);\n+    m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n \n         // TODO: Avoid the repeated-serialization here\n-        if (pnode->nVersion < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\n+        if (pnode->GetCommonVersion() < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\n             return;\n         ProcessBlockAvailability(pnode->GetId());\n         CNodeState &state = *State(pnode->GetId());\n@@ -1488,12 +1502,12 @@ bool static AlreadyHaveBlock(const uint256& block_hash) EXCLUSIVE_LOCKS_REQUIRED\n \n void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman)\n {\n-    connman.ForEachNode([&txid, &wtxid](CNode* pnode)\n-    {\n-        LockAssertion lock(::cs_main);\n+    connman.ForEachNode([&txid, &wtxid](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n \n-        CNodeState &state = *State(pnode->GetId());\n-        if (state.m_wtxid_relay) {\n+        CNodeState* state = State(pnode->GetId());\n+        if (state == nullptr) return;\n+        if (state->m_wtxid_relay) {\n             pnode->PushTxInventory(wtxid);\n         } else {\n             pnode->PushTxInventory(txid);\n@@ -1584,7 +1598,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n             LogPrint(BCLog::NET, \"%s: ignoring request from peer=%i for old block that isn't in the main chain\\n\", __func__, pfrom.GetId());\n         }\n     }\n-    const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     // disconnect node in case we have reached the outbound limit for serving historical blocks\n     if (send &&\n         connman.OutboundTargetReached(true) &&\n@@ -1727,7 +1741,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n \n     std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n     std::vector<CInv> vNotFound;\n-    const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n     const std::chrono::seconds now = GetTime<std::chrono::seconds>();\n     // Get last mempool request time\n@@ -1833,14 +1847,14 @@ void PeerManager::SendBlockTransactions(CNode& pfrom, const CBlock& block, const\n         resp.txn[i] = block.vtx[req.indexes[i]];\n     }\n     LOCK(cs_main);\n-    const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     int nSendFlags = State(pfrom.GetId())->fWantsCmpctWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS;\n     m_connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCKTXN, resp));\n }\n \n void PeerManager::ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHeader>& headers, bool via_compact_block)\n {\n-    const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     size_t nCount = headers.size();\n \n     if (nCount == 0) {\n@@ -2020,32 +2034,34 @@ void PeerManager::ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHe\n     return;\n }\n \n-void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<CTransactionRef>& removed_txn)\n+/**\n+ * Reconsider orphan transactions after a parent has been accepted to the mempool.\n+ *\n+ * @param[in/out]  orphan_work_set  The set of orphan transactions to reconsider. Generally only one\n+ *                                  orphan will be reconsidered on each call of this function. This set\n+ *                                  may be added to if accepting an orphan causes its children to be\n+ *                                  reconsidered.\n+ */\n+void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(g_cs_orphans);\n-    std::set<NodeId> setMisbehaving;\n-    bool done = false;\n-    while (!done && !orphan_work_set.empty()) {\n+\n+    while (!orphan_work_set.empty()) {\n         const uint256 orphanHash = *orphan_work_set.begin();\n         orphan_work_set.erase(orphan_work_set.begin());\n \n         auto orphan_it = mapOrphanTransactions.find(orphanHash);\n         if (orphan_it == mapOrphanTransactions.end()) continue;\n \n         const CTransactionRef porphanTx = orphan_it->second.tx;\n-        const CTransaction& orphanTx = *porphanTx;\n-        NodeId fromPeer = orphan_it->second.fromPeer;\n-        // Use a new TxValidationState because orphans come from different peers (and we call\n-        // MaybePunishNodeForTx based on the source peer from the orphan map, not based on the peer\n-        // that relayed the previous transaction).\n-        TxValidationState orphan_state;\n-\n-        if (setMisbehaving.count(fromPeer)) continue;\n-        if (AcceptToMemoryPool(m_mempool, orphan_state, porphanTx, &removed_txn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n+        TxValidationState state;\n+        std::list<CTransactionRef> removed_txn;\n+\n+        if (AcceptToMemoryPool(m_mempool, state, porphanTx, &removed_txn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n             LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n             RelayTransaction(orphanHash, porphanTx->GetWitnessHash(), m_connman);\n-            for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n+            for (unsigned int i = 0; i < porphanTx->vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(orphanHash, i));\n                 if (it_by_prev != mapOrphanTransactionsByPrev.end()) {\n                     for (const auto& elem : it_by_prev->second) {\n@@ -2054,22 +2070,23 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<\n                 }\n             }\n             EraseOrphanTx(orphanHash);\n-            done = true;\n-        } else if (orphan_state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n-            if (orphan_state.IsInvalid()) {\n-                // Punish peer that gave us an invalid orphan tx\n-                if (MaybePunishNodeForTx(fromPeer, orphan_state)) {\n-                    setMisbehaving.insert(fromPeer);\n-                }\n+            for (const CTransactionRef& removedTx : removed_txn) {\n+                AddToCompactExtraTransactions(removedTx);\n+            }\n+            break;\n+        } else if (state.GetResult() != TxValidationResult::TX_MISSING_INPUTS) {\n+            if (state.IsInvalid()) {\n                 LogPrint(BCLog::MEMPOOL, \"   invalid orphan tx %s from peer=%d. %s\\n\",\n                     orphanHash.ToString(),\n-                    fromPeer,\n-                    orphan_state.ToString());\n+                    orphan_it->second.fromPeer,\n+                    state.ToString());\n+                // Maybe punish peer that gave us an invalid orphan tx\n+                MaybePunishNodeForTx(orphan_it->second.fromPeer, state);\n             }\n             // Has inputs but not accepted to mempool\n             // Probably non-standard or insufficient fee\n             LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n-            if (orphan_state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n+            if (state.GetResult() != TxValidationResult::TX_WITNESS_STRIPPED) {\n                 // We can add the wtxid of this transaction to our reject filter.\n                 // Do not add txids of witness transactions or witness-stripped\n                 // transactions to the filter, as they can have been malleated;\n@@ -2084,7 +2101,7 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<\n                 // for concerns around weakening security of unupgraded nodes\n                 // if we start doing this too early.\n                 assert(recentRejects);\n-                recentRejects->insert(orphanTx.GetWitnessHash());\n+                recentRejects->insert(porphanTx->GetWitnessHash());\n                 // If the transaction failed for TX_INPUTS_NOT_STANDARD,\n                 // then we know that the witness was irrelevant to the policy\n                 // failure, since this check depends only on the txid\n@@ -2093,17 +2110,17 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<\n                 // processing of this transaction in the event that child\n                 // transactions are later received (resulting in\n                 // parent-fetching by txid via the orphan-handling logic).\n-                if (orphan_state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && orphanTx.GetWitnessHash() != orphanTx.GetHash()) {\n+                if (state.GetResult() == TxValidationResult::TX_INPUTS_NOT_STANDARD && porphanTx->GetWitnessHash() != porphanTx->GetHash()) {\n                     // We only add the txid if it differs from the wtxid, to\n                     // avoid wasting entries in the rolling bloom filter.\n-                    recentRejects->insert(orphanTx.GetHash());\n+                    recentRejects->insert(porphanTx->GetHash());\n                 }\n             }\n             EraseOrphanTx(orphanHash);\n-            done = true;\n+            break;\n         }\n-        m_mempool.check(&::ChainstateActive().CoinsTip());\n     }\n+    m_mempool.check(&::ChainstateActive().CoinsTip());\n }\n \n /**\n@@ -2210,7 +2227,7 @@ static void ProcessGetCFilters(CNode& peer, CDataStream& vRecv, const CChainPara\n     }\n \n     for (const auto& filter : filters) {\n-        CSerializedNetMsg msg = CNetMsgMaker(peer.GetSendVersion())\n+        CSerializedNetMsg msg = CNetMsgMaker(peer.GetCommonVersion())\n             .Make(NetMsgType::CFILTER, filter);\n         connman.PushMessage(&peer, std::move(msg));\n     }\n@@ -2262,7 +2279,7 @@ static void ProcessGetCFHeaders(CNode& peer, CDataStream& vRecv, const CChainPar\n         return;\n     }\n \n-    CSerializedNetMsg msg = CNetMsgMaker(peer.GetSendVersion())\n+    CSerializedNetMsg msg = CNetMsgMaker(peer.GetCommonVersion())\n         .Make(NetMsgType::CFHEADERS,\n               filter_type_ser,\n               stop_index->GetBlockHash(),\n@@ -2314,7 +2331,7 @@ static void ProcessGetCFCheckPt(CNode& peer, CDataStream& vRecv, const CChainPar\n         }\n     }\n \n-    CSerializedNetMsg msg = CNetMsgMaker(peer.GetSendVersion())\n+    CSerializedNetMsg msg = CNetMsgMaker(peer.GetCommonVersion())\n         .Make(NetMsgType::CFCHECKPT,\n               filter_type_ser,\n               stop_index->GetBlockHash(),\n@@ -2349,13 +2366,11 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         uint64_t nServiceInt;\n         ServiceFlags nServices;\n         int nVersion;\n-        int nSendVersion;\n         std::string cleanSubVer;\n         int nStartingHeight = -1;\n         bool fRelay = true;\n \n         vRecv >> nVersion >> nServiceInt >> nTime >> addrMe;\n-        nSendVersion = std::min(nVersion, PROTOCOL_VERSION);\n         nServices = ServiceFlags(nServiceInt);\n         if (!pfrom.IsInboundConn())\n         {\n@@ -2404,11 +2419,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         if (pfrom.IsInboundConn())\n             PushNodeVersion(pfrom, m_connman, GetAdjustedTime());\n \n-        if (nVersion >= WTXID_RELAY_VERSION) {\n-            m_connman.PushMessage(&pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::WTXIDRELAY));\n+        // Change version\n+        const int greatest_common_version = std::min(nVersion, PROTOCOL_VERSION);\n+        pfrom.SetCommonVersion(greatest_common_version);\n+        pfrom.nVersion = nVersion;\n+\n+        if (greatest_common_version >= WTXID_RELAY_VERSION) {\n+            m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::WTXIDRELAY));\n         }\n \n-        m_connman.PushMessage(&pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERACK));\n+        m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::VERACK));\n \n         pfrom.nServices = nServices;\n         pfrom.SetAddrLocal(addrMe);\n@@ -2429,10 +2449,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.m_tx_relay->fRelayTxes = fRelay; // set to true after we get the first filter* message\n         }\n \n-        // Change version\n-        pfrom.SetSendVersion(nSendVersion);\n-        pfrom.nVersion = nVersion;\n-\n         if((nServices & NODE_WITNESS))\n         {\n             LOCK(cs_main);\n@@ -2478,7 +2494,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             }\n \n             // Get recent addresses\n-            m_connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(NetMsgType::GETADDR));\n+            m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(NetMsgType::GETADDR));\n             pfrom.fGetAddr = true;\n \n             // Moves address from New to Tried table in Addrman, resolves\n@@ -2500,9 +2516,9 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         AddTimeData(pfrom.addr, nTimeOffset);\n \n         // If the peer is old enough to have the old alert system, send it the final alert.\n-        if (pfrom.nVersion <= 70012) {\n+        if (greatest_common_version <= 70012) {\n             CDataStream finalAlert(ParseHex(\"60010000000000000000000000ffffff7f00000000ffffff7ffeffff7f01ffffff7f00000000ffffff7f00ffffff7f002f555247454e543a20416c657274206b657920636f6d70726f6d697365642c2075706772616465207265717569726564004630440220653febd6410f470f6bae11cad19c48413becb1ac2c17f908fd0fd53bdc3abd5202206d0e9c96fe88d4a0f01ed9dedae2b6f9e00da94cad0fecaae66ecf689bf71b50\"), SER_NETWORK, PROTOCOL_VERSION);\n-            m_connman.PushMessage(&pfrom, CNetMsgMaker(nSendVersion).Make(\"alert\", finalAlert));\n+            m_connman.PushMessage(&pfrom, CNetMsgMaker(greatest_common_version).Make(\"alert\", finalAlert));\n         }\n \n         // Feeler connections exist only to verify if address is online.\n@@ -2519,12 +2535,10 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n     }\n \n     // At this point, the outgoing message serialization version can't change.\n-    const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n \n     if (msg_type == NetMsgType::VERACK)\n     {\n-        pfrom.SetRecvVersion(std::min(pfrom.nVersion.load(), PROTOCOL_VERSION));\n-\n         if (!pfrom.IsInboundConn()) {\n             // Mark this node as currently connected, so we update its timestamp later.\n             LOCK(cs_main);\n@@ -2535,14 +2549,14 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                       pfrom.m_tx_relay == nullptr ? \"block-relay\" : \"full-relay\");\n         }\n \n-        if (pfrom.nVersion >= SENDHEADERS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SENDHEADERS_VERSION) {\n             // Tell our peer we prefer to receive headers rather than inv's\n             // We send this to non-NODE NETWORK peers as well, because even\n             // non-NODE NETWORK peers can announce blocks (such as pruning\n             // nodes)\n             m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::SENDHEADERS));\n         }\n-        if (pfrom.nVersion >= SHORT_IDS_BLOCKS_VERSION) {\n+        if (pfrom.GetCommonVersion() >= SHORT_IDS_BLOCKS_VERSION) {\n             // Tell our peer we are willing to provide version 1 or 2 cmpctblocks\n             // However, we do not request new block announcements using\n             // cmpctblock messages.\n@@ -2568,7 +2582,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             pfrom.fDisconnect = true;\n             return;\n         }\n-        if (pfrom.nVersion >= WTXID_RELAY_VERSION) {\n+        if (pfrom.GetCommonVersion() >= WTXID_RELAY_VERSION) {\n             LOCK(cs_main);\n             if (!State(pfrom.GetId())->m_wtxid_relay) {\n                 State(pfrom.GetId())->m_wtxid_relay = true;\n@@ -3019,8 +3033,12 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                 tx.GetHash().ToString(),\n                 m_mempool.size(), m_mempool.DynamicMemoryUsage() / 1000);\n \n+            for (const CTransactionRef& removedTx : lRemovedTxn) {\n+                AddToCompactExtraTransactions(removedTx);\n+            }\n+\n             // Recursively process any orphan transactions that depended on this one\n-            ProcessOrphanTx(pfrom.orphan_work_set, lRemovedTxn);\n+            ProcessOrphanTx(pfrom.orphan_work_set);\n         }\n         else if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS)\n         {\n@@ -3105,8 +3123,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                 if (RecursiveDynamicUsage(*ptx) < 100000) {\n                     AddToCompactExtraTransactions(ptx);\n                 }\n-            } else if (tx.HasWitness() && RecursiveDynamicUsage(*ptx) < 100000) {\n-                AddToCompactExtraTransactions(ptx);\n             }\n \n             if (pfrom.HasPermission(PF_FORCERELAY)) {\n@@ -3123,9 +3139,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             }\n         }\n \n-        for (const CTransactionRef& removedTx : lRemovedTxn)\n-            AddToCompactExtraTransactions(removedTx);\n-\n         // If a tx has been detected by recentRejects, we will have reached\n         // this point and the tx will have been ignored. Because we haven't run\n         // the tx through AcceptToMemoryPool, we won't have computed a DoS\n@@ -3524,11 +3537,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n         if (!pfrom.IsInboundConn()) {\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from outbound connection. peer=%d\\n\", pfrom.GetId());\n-            return;\n-        }\n-        if (!pfrom.RelayAddrsWithConn()) {\n-            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from block-relay-only connection. peer=%d\\n\", pfrom.GetId());\n+            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from %s connection. peer=%d\\n\", pfrom.ConnectionTypeAsString(), pfrom.GetId());\n             return;\n         }\n \n@@ -3545,7 +3554,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         if (pfrom.HasPermission(PF_ADDR)) {\n             vAddr = m_connman.GetAddresses(MAX_ADDR_TO_SEND, MAX_PCT_ADDR_TO_SEND);\n         } else {\n-            vAddr = m_connman.GetAddresses(pfrom.addr.GetNetwork(), MAX_ADDR_TO_SEND, MAX_PCT_ADDR_TO_SEND);\n+            vAddr = m_connman.GetAddresses(pfrom, MAX_ADDR_TO_SEND, MAX_PCT_ADDR_TO_SEND);\n         }\n         FastRandomContext insecure_rand;\n         for (const CAddress &addr : vAddr) {\n@@ -3583,8 +3592,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n     }\n \n     if (msg_type == NetMsgType::PING) {\n-        if (pfrom.nVersion > BIP0031_VERSION)\n-        {\n+        if (pfrom.GetCommonVersion() > BIP0031_VERSION) {\n             uint64_t nonce = 0;\n             vRecv >> nonce;\n             // Echo the message back with the nonce. This allows for two useful features:\n@@ -3824,26 +3832,14 @@ bool PeerManager::MaybeDiscourageAndDisconnect(CNode& pnode)\n \n bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgProc)\n {\n-    //\n-    // Message format\n-    //  (4) message start\n-    //  (12) command\n-    //  (4) size\n-    //  (4) checksum\n-    //  (x) data\n-    //\n     bool fMoreWork = false;\n \n     if (!pfrom->vRecvGetData.empty())\n         ProcessGetData(*pfrom, m_chainparams, m_connman, m_mempool, interruptMsgProc);\n \n     if (!pfrom->orphan_work_set.empty()) {\n-        std::list<CTransactionRef> removed_txn;\n         LOCK2(cs_main, g_cs_orphans);\n-        ProcessOrphanTx(pfrom->orphan_work_set, removed_txn);\n-        for (const CTransactionRef& removedTx : removed_txn) {\n-            AddToCompactExtraTransactions(removedTx);\n-        }\n+        ProcessOrphanTx(pfrom->orphan_work_set);\n     }\n \n     if (pfrom->fDisconnect)\n@@ -3871,36 +3867,14 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n     }\n     CNetMessage& msg(msgs.front());\n \n-    msg.SetVersion(pfrom->GetRecvVersion());\n-    // Check network magic\n-    if (!msg.m_valid_netmagic) {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n-        pfrom->fDisconnect = true;\n-        return false;\n-    }\n-\n-    // Check header\n-    if (!msg.m_valid_header)\n-    {\n-        LogPrint(BCLog::NET, \"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(msg.m_command), pfrom->GetId());\n-        return fMoreWork;\n-    }\n+    msg.SetVersion(pfrom->GetCommonVersion());\n     const std::string& msg_type = msg.m_command;\n \n     // Message size\n     unsigned int nMessageSize = msg.m_message_size;\n \n-    // Checksum\n-    CDataStream& vRecv = msg.m_recv;\n-    if (!msg.m_valid_checksum)\n-    {\n-        LogPrint(BCLog::NET, \"%s(%s, %u bytes): CHECKSUM ERROR peer=%d\\n\", __func__,\n-           SanitizeString(msg_type), nMessageSize, pfrom->GetId());\n-        return fMoreWork;\n-    }\n-\n     try {\n-        ProcessMessage(*pfrom, msg_type, vRecv, msg.m_time, interruptMsgProc);\n+        ProcessMessage(*pfrom, msg_type, msg.m_recv, msg.m_time, interruptMsgProc);\n         if (interruptMsgProc)\n             return false;\n         if (!pfrom->vRecvGetData.empty())\n@@ -3919,7 +3893,7 @@ void PeerManager::ConsiderEviction(CNode& pto, int64_t time_in_seconds)\n     AssertLockHeld(cs_main);\n \n     CNodeState &state = *State(pto.GetId());\n-    const CNetMsgMaker msgMaker(pto.GetSendVersion());\n+    const CNetMsgMaker msgMaker(pto.GetCommonVersion());\n \n     if (!state.m_chain_sync.m_protect && pto.IsOutboundOrBlockRelayConn() && state.fSyncStarted) {\n         // This is an outbound peer subject to disconnection if they don't\n@@ -3979,8 +3953,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         NodeId worst_peer = -1;\n         int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n \n-        m_connman.ForEachNode([&](CNode* pnode) {\n-            LockAssertion lock(::cs_main);\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already\n             if (!pnode->IsOutboundOrBlockRelayConn() || pnode->fDisconnect) return;\n@@ -3996,8 +3970,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             }\n         });\n         if (worst_peer != -1) {\n-            bool disconnected = m_connman.ForNode(worst_peer, [&](CNode *pnode) {\n-                LockAssertion lock(::cs_main);\n+            bool disconnected = m_connman.ForNode(worst_peer, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+                AssertLockHeld(::cs_main);\n \n                 // Only disconnect a peer that has been connected to us for\n                 // some reasonable fraction of our check-frequency, to give\n@@ -4081,7 +4055,7 @@ bool PeerManager::SendMessages(CNode* pto)\n         return true;\n \n     // If we get here, the outgoing message serialization version is set and can't change.\n-    const CNetMsgMaker msgMaker(pto->GetSendVersion());\n+    const CNetMsgMaker msgMaker(pto->GetCommonVersion());\n \n     //\n     // Message: ping\n@@ -4102,7 +4076,7 @@ bool PeerManager::SendMessages(CNode* pto)\n         }\n         pto->fPingQueued = false;\n         pto->m_ping_start = GetTime<std::chrono::microseconds>();\n-        if (pto->nVersion > BIP0031_VERSION) {\n+        if (pto->GetCommonVersion() > BIP0031_VERSION) {\n             pto->nPingNonceSent = nonce;\n             m_connman.PushMessage(pto, msgMaker.Make(NetMsgType::PING, nonce));\n         } else {\n@@ -4641,7 +4615,7 @@ bool PeerManager::SendMessages(CNode* pto)\n         //\n         // Message: feefilter\n         //\n-        if (pto->m_tx_relay != nullptr && pto->nVersion >= FEEFILTER_VERSION && gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n+        if (pto->m_tx_relay != nullptr && pto->GetCommonVersion() >= FEEFILTER_VERSION && gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n             !pto->HasPermission(PF_FORCERELAY) // peers with the forcerelay permission should not filter txs to us\n         ) {\n             CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();"
      },
      {
        "sha": "946a5f471501b3452047604415bc873ac9cb4456",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -121,8 +121,7 @@ class PeerManager final : public CValidationInterface, public NetEventsInterface\n      */\n     bool MaybeDiscourageAndDisconnect(CNode& pnode);\n \n-    void ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<CTransactionRef>& removed_txn)\n-        EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n+    void ProcessOrphanTx(std::set<uint256>& orphan_work_set) EXCLUSIVE_LOCKS_REQUIRED(cs_main, g_cs_orphans);\n     /** Process a single headers message from a peer. */\n     void ProcessHeadersMessage(CNode& pfrom, const std::vector<CBlockHeader>& headers, bool via_compact_block);\n "
      },
      {
        "sha": "08714dc2ecdc7b91cb2036aa064588a6c9f63280",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 254,
        "deletions": 52,
        "changes": 306,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -5,18 +5,112 @@\n \n #include <netaddress.h>\n \n+#include <crypto/common.h>\n+#include <crypto/sha3.h>\n #include <hash.h>\n+#include <prevector.h>\n #include <tinyformat.h>\n-#include <util/strencodings.h>\n #include <util/asmap.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <algorithm>\n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <iterator>\n #include <tuple>\n \n constexpr size_t CNetAddr::V1_SERIALIZATION_SIZE;\n+constexpr size_t CNetAddr::MAX_ADDRV2_SIZE;\n+\n+CNetAddr::BIP155Network CNetAddr::GetBIP155Network() const\n+{\n+    switch (m_net) {\n+    case NET_IPV4:\n+        return BIP155Network::IPV4;\n+    case NET_IPV6:\n+        return BIP155Network::IPV6;\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return BIP155Network::TORV2;\n+        case ADDR_TORV3_SIZE:\n+            return BIP155Network::TORV3;\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return BIP155Network::I2P;\n+    case NET_CJDNS:\n+        return BIP155Network::CJDNS;\n+    case NET_INTERNAL:   // should have been handled before calling this function\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n+}\n+\n+bool CNetAddr::SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size)\n+{\n+    switch (possible_bip155_net) {\n+    case BIP155Network::IPV4:\n+        if (address_size == ADDR_IPV4_SIZE) {\n+            m_net = NET_IPV4;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv4 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV4_SIZE));\n+    case BIP155Network::IPV6:\n+        if (address_size == ADDR_IPV6_SIZE) {\n+            m_net = NET_IPV6;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 IPv6 address with length %u (should be %u)\", address_size,\n+                      ADDR_IPV6_SIZE));\n+    case BIP155Network::TORV2:\n+        if (address_size == ADDR_TORV2_SIZE) {\n+            m_net = NET_ONION;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv2 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV2_SIZE));\n+    case BIP155Network::TORV3:\n+        if (address_size == ADDR_TORV3_SIZE) {\n+            m_net = NET_ONION;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 TORv3 address with length %u (should be %u)\", address_size,\n+                      ADDR_TORV3_SIZE));\n+    case BIP155Network::I2P:\n+        if (address_size == ADDR_I2P_SIZE) {\n+            m_net = NET_I2P;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 I2P address with length %u (should be %u)\", address_size,\n+                      ADDR_I2P_SIZE));\n+    case BIP155Network::CJDNS:\n+        if (address_size == ADDR_CJDNS_SIZE) {\n+            m_net = NET_CJDNS;\n+            return true;\n+        }\n+        throw std::ios_base::failure(\n+            strprintf(\"BIP155 CJDNS address with length %u (should be %u)\", address_size,\n+                      ADDR_CJDNS_SIZE));\n+    }\n+\n+    // Don't throw on addresses with unknown network ids (maybe from the future).\n+    // Instead silently drop them and have the unserialization code consume\n+    // subsequent ones which may be known to us.\n+    return false;\n+}\n \n /**\n  * Construct an unspecified IPv6 network address (::/128).\n@@ -36,7 +130,13 @@ void CNetAddr::SetIP(const CNetAddr& ipIn)\n         assert(ipIn.m_addr.size() == ADDR_IPV6_SIZE);\n         break;\n     case NET_ONION:\n-        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE);\n+        assert(ipIn.m_addr.size() == ADDR_TORV2_SIZE || ipIn.m_addr.size() == ADDR_TORV3_SIZE);\n+        break;\n+    case NET_I2P:\n+        assert(ipIn.m_addr.size() == ADDR_I2P_SIZE);\n+        break;\n+    case NET_CJDNS:\n+        assert(ipIn.m_addr.size() == ADDR_CJDNS_SIZE);\n         break;\n     case NET_INTERNAL:\n         assert(ipIn.m_addr.size() == ADDR_INTERNAL_SIZE);\n@@ -50,13 +150,6 @@ void CNetAddr::SetIP(const CNetAddr& ipIn)\n     m_addr = ipIn.m_addr;\n }\n \n-template <typename T1, size_t PREFIX_LEN>\n-inline bool HasPrefix(const T1& obj, const std::array<uint8_t, PREFIX_LEN>& prefix)\n-{\n-    return obj.size() >= PREFIX_LEN &&\n-           std::equal(std::begin(prefix), std::end(prefix), std::begin(obj));\n-}\n-\n void CNetAddr::SetLegacyIPv6(Span<const uint8_t> ipv6)\n {\n     assert(ipv6.size() == ADDR_IPV6_SIZE);\n@@ -101,24 +194,80 @@ bool CNetAddr::SetInternal(const std::string &name)\n     return true;\n }\n \n+namespace torv3 {\n+// https://gitweb.torproject.org/torspec.git/tree/rend-spec-v3.txt#n2135\n+static constexpr size_t CHECKSUM_LEN = 2;\n+static const unsigned char VERSION[] = {3};\n+static constexpr size_t TOTAL_LEN = ADDR_TORV3_SIZE + CHECKSUM_LEN + sizeof(VERSION);\n+\n+static void Checksum(Span<const uint8_t> addr_pubkey, uint8_t (&checksum)[CHECKSUM_LEN])\n+{\n+    // TORv3 CHECKSUM = H(\".onion checksum\" | PUBKEY | VERSION)[:2]\n+    static const unsigned char prefix[] = \".onion checksum\";\n+    static constexpr size_t prefix_len = 15;\n+\n+    SHA3_256 hasher;\n+\n+    hasher.Write(MakeSpan(prefix).first(prefix_len));\n+    hasher.Write(addr_pubkey);\n+    hasher.Write(VERSION);\n+\n+    uint8_t checksum_full[SHA3_256::OUTPUT_SIZE];\n+\n+    hasher.Finalize(checksum_full);\n+\n+    memcpy(checksum, checksum_full, sizeof(checksum));\n+}\n+\n+}; // namespace torv3\n+\n /**\n- * Parse a TORv2 address and set this object to it.\n+ * Parse a TOR address and set this object to it.\n  *\n  * @returns Whether or not the operation was successful.\n  *\n  * @see CNetAddr::IsTor()\n  */\n-bool CNetAddr::SetSpecial(const std::string &strName)\n+bool CNetAddr::SetSpecial(const std::string& str)\n {\n-    if (strName.size()>6 && strName.substr(strName.size() - 6, 6) == \".onion\") {\n-        std::vector<unsigned char> vchAddr = DecodeBase32(strName.substr(0, strName.size() - 6).c_str());\n-        if (vchAddr.size() != ADDR_TORV2_SIZE) {\n+    static const char* suffix{\".onion\"};\n+    static constexpr size_t suffix_len{6};\n+\n+    if (!ValidAsCString(str) || str.size() <= suffix_len ||\n+        str.substr(str.size() - suffix_len) != suffix) {\n+        return false;\n+    }\n+\n+    bool invalid;\n+    const auto& input = DecodeBase32(str.substr(0, str.size() - suffix_len).c_str(), &invalid);\n+\n+    if (invalid) {\n+        return false;\n+    }\n+\n+    switch (input.size()) {\n+    case ADDR_TORV2_SIZE:\n+        m_net = NET_ONION;\n+        m_addr.assign(input.begin(), input.end());\n+        return true;\n+    case torv3::TOTAL_LEN: {\n+        Span<const uint8_t> input_pubkey{input.data(), ADDR_TORV3_SIZE};\n+        Span<const uint8_t> input_checksum{input.data() + ADDR_TORV3_SIZE, torv3::CHECKSUM_LEN};\n+        Span<const uint8_t> input_version{input.data() + ADDR_TORV3_SIZE + torv3::CHECKSUM_LEN, sizeof(torv3::VERSION)};\n+\n+        uint8_t calculated_checksum[torv3::CHECKSUM_LEN];\n+        torv3::Checksum(input_pubkey, calculated_checksum);\n+\n+        if (input_checksum != calculated_checksum || input_version != torv3::VERSION) {\n             return false;\n         }\n+\n         m_net = NET_ONION;\n-        m_addr.assign(vchAddr.begin(), vchAddr.end());\n+        m_addr.assign(input_pubkey.begin(), input_pubkey.end());\n         return true;\n     }\n+    }\n+\n     return false;\n }\n \n@@ -235,13 +384,21 @@ bool CNetAddr::IsHeNet() const\n }\n \n /**\n- * @returns Whether or not this is a dummy address that maps an onion address\n- *          into IPv6.\n- *\n+ * Check whether this object represents a TOR address.\n  * @see CNetAddr::SetSpecial(const std::string &)\n  */\n bool CNetAddr::IsTor() const { return m_net == NET_ONION; }\n \n+/**\n+ * Check whether this object represents an I2P address.\n+ */\n+bool CNetAddr::IsI2P() const { return m_net == NET_I2P; }\n+\n+/**\n+ * Check whether this object represents a CJDNS address.\n+ */\n+bool CNetAddr::IsCJDNS() const { return m_net == NET_CJDNS; }\n+\n bool CNetAddr::IsLocal() const\n {\n     // IPv4 loopback (127.0.0.0/8 or 0.0.0.0/8)\n@@ -328,28 +485,72 @@ enum Network CNetAddr::GetNetwork() const\n     return m_net;\n }\n \n+static std::string IPv6ToString(Span<const uint8_t> a)\n+{\n+    assert(a.size() == ADDR_IPV6_SIZE);\n+    // clang-format off\n+    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n+                     ReadBE16(&a[0]),\n+                     ReadBE16(&a[2]),\n+                     ReadBE16(&a[4]),\n+                     ReadBE16(&a[6]),\n+                     ReadBE16(&a[8]),\n+                     ReadBE16(&a[10]),\n+                     ReadBE16(&a[12]),\n+                     ReadBE16(&a[14]));\n+    // clang-format on\n+}\n+\n std::string CNetAddr::ToStringIP() const\n {\n-    if (IsTor())\n-        return EncodeBase32(m_addr) + \".onion\";\n-    if (IsInternal())\n+    switch (m_net) {\n+    case NET_IPV4:\n+    case NET_IPV6: {\n+        CService serv(*this, 0);\n+        struct sockaddr_storage sockaddr;\n+        socklen_t socklen = sizeof(sockaddr);\n+        if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n+            char name[1025] = \"\";\n+            if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name,\n+                             sizeof(name), nullptr, 0, NI_NUMERICHOST))\n+                return std::string(name);\n+        }\n+        if (m_net == NET_IPV4) {\n+            return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n+        }\n+        return IPv6ToString(m_addr);\n+    }\n+    case NET_ONION:\n+        switch (m_addr.size()) {\n+        case ADDR_TORV2_SIZE:\n+            return EncodeBase32(m_addr) + \".onion\";\n+        case ADDR_TORV3_SIZE: {\n+\n+            uint8_t checksum[torv3::CHECKSUM_LEN];\n+            torv3::Checksum(m_addr, checksum);\n+\n+            // TORv3 onion_address = base32(PUBKEY | CHECKSUM | VERSION) + \".onion\"\n+            prevector<torv3::TOTAL_LEN, uint8_t> address{m_addr.begin(), m_addr.end()};\n+            address.insert(address.end(), checksum, checksum + torv3::CHECKSUM_LEN);\n+            address.insert(address.end(), torv3::VERSION, torv3::VERSION + sizeof(torv3::VERSION));\n+\n+            return EncodeBase32(address) + \".onion\";\n+        }\n+        default:\n+            assert(false);\n+        }\n+    case NET_I2P:\n+        return EncodeBase32(m_addr, false /* don't pad with = */) + \".b32.i2p\";\n+    case NET_CJDNS:\n+        return IPv6ToString(m_addr);\n+    case NET_INTERNAL:\n         return EncodeBase32(m_addr) + \".internal\";\n-    CService serv(*this, 0);\n-    struct sockaddr_storage sockaddr;\n-    socklen_t socklen = sizeof(sockaddr);\n-    if (serv.GetSockAddr((struct sockaddr*)&sockaddr, &socklen)) {\n-        char name[1025] = \"\";\n-        if (!getnameinfo((const struct sockaddr*)&sockaddr, socklen, name, sizeof(name), nullptr, 0, NI_NUMERICHOST))\n-            return std::string(name);\n-    }\n-    if (IsIPv4())\n-        return strprintf(\"%u.%u.%u.%u\", m_addr[0], m_addr[1], m_addr[2], m_addr[3]);\n-    assert(IsIPv6());\n-    return strprintf(\"%x:%x:%x:%x:%x:%x:%x:%x\",\n-                     m_addr[0] << 8 | m_addr[1], m_addr[2] << 8 | m_addr[3],\n-                     m_addr[4] << 8 | m_addr[5], m_addr[6] << 8 | m_addr[7],\n-                     m_addr[8] << 8 | m_addr[9], m_addr[10] << 8 | m_addr[11],\n-                     m_addr[12] << 8 | m_addr[13], m_addr[14] << 8 | m_addr[15]);\n+    case NET_UNROUTABLE: // m_net is never and should not be set to NET_UNROUTABLE\n+    case NET_MAX:        // m_net is never and should not be set to NET_MAX\n+        assert(false);\n+    } // no default case, so the compiler can warn about missing cases\n+\n+    assert(false);\n }\n \n std::string CNetAddr::ToString() const\n@@ -428,21 +629,22 @@ uint32_t CNetAddr::GetLinkedIPv4() const\n     assert(false);\n }\n \n-uint32_t CNetAddr::GetNetClass() const {\n-    uint32_t net_class = NET_IPV6;\n-    if (IsLocal()) {\n-        net_class = 255;\n-    }\n+uint32_t CNetAddr::GetNetClass() const\n+{\n+    // Make sure that if we return NET_IPV6, then IsIPv6() is true. The callers expect that.\n+\n+    // Check for \"internal\" first because such addresses are also !IsRoutable()\n+    // and we don't want to return NET_UNROUTABLE in that case.\n     if (IsInternal()) {\n-        net_class = NET_INTERNAL;\n-    } else if (!IsRoutable()) {\n-        net_class = NET_UNROUTABLE;\n-    } else if (HasLinkedIPv4()) {\n-        net_class = NET_IPV4;\n-    } else if (IsTor()) {\n-        net_class = NET_ONION;\n+        return NET_INTERNAL;\n     }\n-    return net_class;\n+    if (!IsRoutable()) {\n+        return NET_UNROUTABLE;\n+    }\n+    if (HasLinkedIPv4()) {\n+        return NET_IPV4;\n+    }\n+    return m_net;\n }\n \n uint32_t CNetAddr::GetMappedAS(const std::vector<bool> &asmap) const {\n@@ -517,7 +719,7 @@ std::vector<unsigned char> CNetAddr::GetGroup(const std::vector<bool> &asmap) co\n         vchRet.push_back((ipv4 >> 24) & 0xFF);\n         vchRet.push_back((ipv4 >> 16) & 0xFF);\n         return vchRet;\n-    } else if (IsTor()) {\n+    } else if (IsTor() || IsI2P() || IsCJDNS()) {\n         nBits = 4;\n     } else if (IsHeNet()) {\n         // for he.net, use /36 groups\n@@ -742,7 +944,7 @@ std::string CService::ToStringPort() const\n \n std::string CService::ToStringIPPort() const\n {\n-    if (IsIPv4() || IsTor() || IsInternal()) {\n+    if (IsIPv4() || IsTor() || IsI2P() || IsInternal()) {\n         return ToStringIP() + \":\" + ToStringPort();\n     } else {\n         return \"[\" + ToStringIP() + \"]:\" + ToStringPort();"
      },
      {
        "sha": "59f1b87ad3f84ef1de50432e2cf2d8f89e220877",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 163,
        "deletions": 6,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -13,12 +13,24 @@\n #include <compat.h>\n #include <prevector.h>\n #include <serialize.h>\n+#include <tinyformat.h>\n+#include <util/strencodings.h>\n+#include <util/string.h>\n \n #include <array>\n #include <cstdint>\n+#include <ios>\n #include <string>\n #include <vector>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that addresses\n+ * should be serialized in (unserialized from) v2 format (BIP155).\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `SERIALIZE_TRANSACTION_NO_WITNESS`.\n+ */\n+static const int ADDRV2_FORMAT = 0x20000000;\n+\n /**\n  * A network type.\n  * @note An address may belong to more than one network, for example `10.0.0.1`\n@@ -39,9 +51,15 @@ enum Network\n     /// IPv6\n     NET_IPV6,\n \n-    /// TORv2\n+    /// TOR (v2 or v3)\n     NET_ONION,\n \n+    /// I2P\n+    NET_I2P,\n+\n+    /// CJDNS\n+    NET_CJDNS,\n+\n     /// A set of addresses that represent the hash of a string or FQDN. We use\n     /// them in CAddrMan to keep track of which DNS seeds were used.\n     NET_INTERNAL,\n@@ -82,6 +100,16 @@ static constexpr size_t ADDR_IPV6_SIZE = 16;\n /// Size of TORv2 address (in bytes).\n static constexpr size_t ADDR_TORV2_SIZE = 10;\n \n+/// Size of TORv3 address (in bytes). This is the length of just the address\n+/// as used in BIP155, without the checksum and the version byte.\n+static constexpr size_t ADDR_TORV3_SIZE = 32;\n+\n+/// Size of I2P address (in bytes).\n+static constexpr size_t ADDR_I2P_SIZE = 32;\n+\n+/// Size of CJDNS address (in bytes).\n+static constexpr size_t ADDR_CJDNS_SIZE = 16;\n+\n /// Size of \"internal\" (NET_INTERNAL) address (in bytes).\n static constexpr size_t ADDR_INTERNAL_SIZE = 10;\n \n@@ -139,6 +167,8 @@ class CNetAddr\n         bool IsRFC6145() const; // IPv6 IPv4-translated address (::FFFF:0:0:0/96) (actually defined in RFC2765)\n         bool IsHeNet() const;   // IPv6 Hurricane Electric - https://he.net (2001:0470::/36)\n         bool IsTor() const;\n+        bool IsI2P() const;\n+        bool IsCJDNS() const;\n         bool IsLocal() const;\n         bool IsRoutable() const;\n         bool IsInternal() const;\n@@ -177,7 +207,11 @@ class CNetAddr\n         template <typename Stream>\n         void Serialize(Stream& s) const\n         {\n-            SerializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                SerializeV2Stream(s);\n+            } else {\n+                SerializeV1Stream(s);\n+            }\n         }\n \n         /**\n@@ -186,20 +220,58 @@ class CNetAddr\n         template <typename Stream>\n         void Unserialize(Stream& s)\n         {\n-            UnserializeV1Stream(s);\n+            if (s.GetVersion() & ADDRV2_FORMAT) {\n+                UnserializeV2Stream(s);\n+            } else {\n+                UnserializeV1Stream(s);\n+            }\n         }\n \n         friend class CSubNet;\n \n     private:\n+        /**\n+         * BIP155 network ids recognized by this software.\n+         */\n+        enum BIP155Network : uint8_t {\n+            IPV4 = 1,\n+            IPV6 = 2,\n+            TORV2 = 3,\n+            TORV3 = 4,\n+            I2P = 5,\n+            CJDNS = 6,\n+        };\n+\n         /**\n          * Size of CNetAddr when serialized as ADDRv1 (pre-BIP155) (in bytes).\n          */\n         static constexpr size_t V1_SERIALIZATION_SIZE = ADDR_IPV6_SIZE;\n \n+        /**\n+         * Maximum size of an address as defined in BIP155 (in bytes).\n+         * This is only the size of the address, not the entire CNetAddr object\n+         * when serialized.\n+         */\n+        static constexpr size_t MAX_ADDRV2_SIZE = 512;\n+\n+        /**\n+         * Get the BIP155 network id of this address.\n+         * Must not be called for IsInternal() objects.\n+         * @returns BIP155 network id\n+         */\n+        BIP155Network GetBIP155Network() const;\n+\n+        /**\n+         * Set `m_net` from the provided BIP155 network id and size after validation.\n+         * @retval true the network was recognized, is valid and `m_net` was set\n+         * @retval false not recognised (from future?) and should be silently ignored\n+         * @throws std::ios_base::failure if the network is one of the BIP155 founding\n+         * networks (id 1..6) with wrong address size.\n+         */\n+        bool SetNetFromBIP155Network(uint8_t possible_bip155_net, size_t address_size);\n+\n         /**\n          * Serialize in pre-ADDRv2/BIP155 format to an array.\n-         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n          */\n         void SerializeV1Array(uint8_t (&arr)[V1_SERIALIZATION_SIZE]) const\n         {\n@@ -217,6 +289,9 @@ class CNetAddr\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n                 return;\n             case NET_ONION:\n+                if (m_addr.size() == ADDR_TORV3_SIZE) {\n+                    break;\n+                }\n                 prefix_size = sizeof(TORV2_IN_IPV6_PREFIX);\n                 assert(prefix_size + m_addr.size() == sizeof(arr));\n                 memcpy(arr, TORV2_IN_IPV6_PREFIX.data(), prefix_size);\n@@ -228,17 +303,21 @@ class CNetAddr\n                 memcpy(arr, INTERNAL_IN_IPV6_PREFIX.data(), prefix_size);\n                 memcpy(arr + prefix_size, m_addr.data(), m_addr.size());\n                 return;\n+            case NET_I2P:\n+                break;\n+            case NET_CJDNS:\n+                break;\n             case NET_UNROUTABLE:\n             case NET_MAX:\n                 assert(false);\n             } // no default case, so the compiler can warn about missing cases\n \n-            assert(false);\n+            // Serialize TORv3, I2P and CJDNS as all-zeros.\n+            memset(arr, 0x0, V1_SERIALIZATION_SIZE);\n         }\n \n         /**\n          * Serialize in pre-ADDRv2/BIP155 format to a stream.\n-         * Some addresses (e.g. TORv3) cannot be serialized in pre-BIP155 format.\n          */\n         template <typename Stream>\n         void SerializeV1Stream(Stream& s) const\n@@ -250,6 +329,25 @@ class CNetAddr\n             s << serialized;\n         }\n \n+        /**\n+         * Serialize as ADDRv2 / BIP155.\n+         */\n+        template <typename Stream>\n+        void SerializeV2Stream(Stream& s) const\n+        {\n+            if (IsInternal()) {\n+                // Serialize NET_INTERNAL as embedded in IPv6. We need to\n+                // serialize such addresses from addrman.\n+                s << static_cast<uint8_t>(BIP155Network::IPV6);\n+                s << COMPACTSIZE(ADDR_IPV6_SIZE);\n+                SerializeV1Stream(s);\n+                return;\n+            }\n+\n+            s << static_cast<uint8_t>(GetBIP155Network());\n+            s << m_addr;\n+        }\n+\n         /**\n          * Unserialize from a pre-ADDRv2/BIP155 format from an array.\n          */\n@@ -272,6 +370,65 @@ class CNetAddr\n \n             UnserializeV1Array(serialized);\n         }\n+\n+        /**\n+         * Unserialize from a ADDRv2 / BIP155 format.\n+         */\n+        template <typename Stream>\n+        void UnserializeV2Stream(Stream& s)\n+        {\n+            uint8_t bip155_net;\n+            s >> bip155_net;\n+\n+            size_t address_size;\n+            s >> COMPACTSIZE(address_size);\n+\n+            if (address_size > MAX_ADDRV2_SIZE) {\n+                throw std::ios_base::failure(strprintf(\n+                    \"Address too long: %u > %u\", address_size, MAX_ADDRV2_SIZE));\n+            }\n+\n+            scopeId = 0;\n+\n+            if (SetNetFromBIP155Network(bip155_net, address_size)) {\n+                m_addr.resize(address_size);\n+                s >> MakeSpan(m_addr);\n+\n+                if (m_net != NET_IPV6) {\n+                    return;\n+                }\n+\n+                // Do some special checks on IPv6 addresses.\n+\n+                // Recognize NET_INTERNAL embedded in IPv6, such addresses are not\n+                // gossiped but could be coming from addrman, when unserializing from\n+                // disk.\n+                if (HasPrefix(m_addr, INTERNAL_IN_IPV6_PREFIX)) {\n+                    m_net = NET_INTERNAL;\n+                    memmove(m_addr.data(), m_addr.data() + INTERNAL_IN_IPV6_PREFIX.size(),\n+                            ADDR_INTERNAL_SIZE);\n+                    m_addr.resize(ADDR_INTERNAL_SIZE);\n+                    return;\n+                }\n+\n+                if (!HasPrefix(m_addr, IPV4_IN_IPV6_PREFIX) &&\n+                    !HasPrefix(m_addr, TORV2_IN_IPV6_PREFIX)) {\n+                    return;\n+                }\n+\n+                // IPv4 and TORv2 are not supposed to be embedded in IPv6 (like in V1\n+                // encoding). Unserialize as !IsValid(), thus ignoring them.\n+            } else {\n+                // If we receive an unknown BIP155 network id (from the future?) then\n+                // ignore the address - unserialize as !IsValid().\n+                s.ignore(address_size);\n+            }\n+\n+            // Mimic a default-constructed CNetAddr object which is !IsValid() and thus\n+            // will not be gossiped, but continue reading next addresses from the stream.\n+            m_net = NET_IPV6;\n+            m_addr.assign(ADDR_IPV6_SIZE, 0x0);\n+        }\n };\n \n class CSubNet"
      },
      {
        "sha": "9ae47007433539d9f22eff5b0bd3e95283482f06",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -38,8 +38,8 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     if (!node.mempool->exists(hashTx)) {\n         // Transaction is not already in the mempool. Submit it.\n         TxValidationState state;\n-        if (!AcceptToMemoryPool(*node.mempool, state, std::move(tx),\n-                nullptr /* plTxnReplaced */, false /* bypass_limits */, max_tx_fee)) {\n+        if (!AcceptToMemoryPool(*node.mempool, state, tx,\n+                                nullptr /* plTxnReplaced */, false /* bypass_limits */, max_tx_fee)) {\n             err_string = state.ToString();\n             if (state.IsInvalid()) {\n                 if (state.GetResult() == TxValidationResult::TX_MISSING_INPUTS) {\n@@ -80,7 +80,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     if (relay) {\n         // the mempool tracks locally submitted transactions to make a\n         // best-effort of initial broadcast\n-        node.mempool->AddUnbroadcastTx(hashTx, tx->GetWitnessHash());\n+        node.mempool->AddUnbroadcastTx(hashTx);\n \n         LOCK(cs_main);\n         RelayTransaction(hashTx, tx->GetWitnessHash(), *node.connman);"
      },
      {
        "sha": "0f31093dbb6b4b47b089038680771a509172fcb8",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 54,
        "deletions": 58,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -55,7 +55,7 @@ class TxConfirmStats\n \n     // Sum the total feerate of all tx's in each bucket\n     // Track the historical moving average of this total over blocks\n-    std::vector<double> avg;\n+    std::vector<double> m_feerate_avg;\n \n     // Combine the conf counts with tx counts to calculate the confirmation % for each Y,X\n     // Combine the total value with the tx counts to calculate the avg feerate per bucket\n@@ -114,12 +114,10 @@ class TxConfirmStats\n      * @param confTarget target number of confirmations\n      * @param sufficientTxVal required average number of transactions per block in a bucket range\n      * @param minSuccess the success probability we require\n-     * @param requireGreater return the lowest feerate such that all higher values pass minSuccess OR\n-     *        return the highest feerate such that all lower values fail minSuccess\n      * @param nBlockHeight the current block height\n      */\n     double EstimateMedianVal(int confTarget, double sufficientTxVal,\n-                             double minSuccess, bool requireGreater, unsigned int nBlockHeight,\n+                             double minSuccess, unsigned int nBlockHeight,\n                              EstimationResult *result = nullptr) const;\n \n     /** Return the max number of confirms we're tracking */\n@@ -139,22 +137,18 @@ class TxConfirmStats\n TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n                                 const std::map<double, unsigned int>& defaultBucketMap,\n                                unsigned int maxPeriods, double _decay, unsigned int _scale)\n-    : buckets(defaultBuckets), bucketMap(defaultBucketMap)\n+    : buckets(defaultBuckets), bucketMap(defaultBucketMap), decay(_decay), scale(_scale)\n {\n-    decay = _decay;\n     assert(_scale != 0 && \"_scale must be non-zero\");\n-    scale = _scale;\n     confAvg.resize(maxPeriods);\n-    for (unsigned int i = 0; i < maxPeriods; i++) {\n-        confAvg[i].resize(buckets.size());\n-    }\n     failAvg.resize(maxPeriods);\n     for (unsigned int i = 0; i < maxPeriods; i++) {\n+        confAvg[i].resize(buckets.size());\n         failAvg[i].resize(buckets.size());\n     }\n \n     txCtAvg.resize(buckets.size());\n-    avg.resize(buckets.size());\n+    m_feerate_avg.resize(buckets.size());\n \n     resizeInMemoryCounters(buckets.size());\n }\n@@ -172,68 +166,61 @@ void TxConfirmStats::resizeInMemoryCounters(size_t newbuckets) {\n void TxConfirmStats::ClearCurrent(unsigned int nBlockHeight)\n {\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n-        oldUnconfTxs[j] += unconfTxs[nBlockHeight%unconfTxs.size()][j];\n+        oldUnconfTxs[j] += unconfTxs[nBlockHeight % unconfTxs.size()][j];\n         unconfTxs[nBlockHeight%unconfTxs.size()][j] = 0;\n     }\n }\n \n \n-void TxConfirmStats::Record(int blocksToConfirm, double val)\n+void TxConfirmStats::Record(int blocksToConfirm, double feerate)\n {\n     // blocksToConfirm is 1-based\n     if (blocksToConfirm < 1)\n         return;\n-    int periodsToConfirm = (blocksToConfirm + scale - 1)/scale;\n-    unsigned int bucketindex = bucketMap.lower_bound(val)->second;\n+    int periodsToConfirm = (blocksToConfirm + scale - 1) / scale;\n+    unsigned int bucketindex = bucketMap.lower_bound(feerate)->second;\n     for (size_t i = periodsToConfirm; i <= confAvg.size(); i++) {\n         confAvg[i - 1][bucketindex]++;\n     }\n     txCtAvg[bucketindex]++;\n-    avg[bucketindex] += val;\n+    m_feerate_avg[bucketindex] += feerate;\n }\n \n void TxConfirmStats::UpdateMovingAverages()\n {\n+    assert(confAvg.size() == failAvg.size());\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n-        for (unsigned int i = 0; i < confAvg.size(); i++)\n-            confAvg[i][j] = confAvg[i][j] * decay;\n-        for (unsigned int i = 0; i < failAvg.size(); i++)\n-            failAvg[i][j] = failAvg[i][j] * decay;\n-        avg[j] = avg[j] * decay;\n-        txCtAvg[j] = txCtAvg[j] * decay;\n+        for (unsigned int i = 0; i < confAvg.size(); i++) {\n+            confAvg[i][j] *= decay;\n+            failAvg[i][j] *= decay;\n+        }\n+        m_feerate_avg[j] *= decay;\n+        txCtAvg[j] *= decay;\n     }\n }\n \n // returns -1 on error conditions\n double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n-                                         double successBreakPoint, bool requireGreater,\n-                                         unsigned int nBlockHeight, EstimationResult *result) const\n+                                         double successBreakPoint, unsigned int nBlockHeight,\n+                                         EstimationResult *result) const\n {\n     // Counters for a bucket (or range of buckets)\n     double nConf = 0; // Number of tx's confirmed within the confTarget\n     double totalNum = 0; // Total number of tx's that were ever confirmed\n     int extraNum = 0;  // Number of tx's still in mempool for confTarget or longer\n     double failNum = 0; // Number of tx's that were never confirmed but removed from the mempool after confTarget\n-    int periodTarget = (confTarget + scale - 1)/scale;\n-\n-    int maxbucketindex = buckets.size() - 1;\n-\n-    // requireGreater means we are looking for the lowest feerate such that all higher\n-    // values pass, so we start at maxbucketindex (highest feerate) and look at successively\n-    // smaller buckets until we reach failure.  Otherwise, we are looking for the highest\n-    // feerate such that all lower values fail, and we go in the opposite direction.\n-    unsigned int startbucket = requireGreater ? maxbucketindex : 0;\n-    int step = requireGreater ? -1 : 1;\n+    const int periodTarget = (confTarget + scale - 1) / scale;\n+    const int maxbucketindex = buckets.size() - 1;\n \n     // We'll combine buckets until we have enough samples.\n     // The near and far variables will define the range we've combined\n     // The best variables are the last range we saw which still had a high\n     // enough confirmation rate to count as success.\n     // The cur variables are the current range we're counting.\n-    unsigned int curNearBucket = startbucket;\n-    unsigned int bestNearBucket = startbucket;\n-    unsigned int curFarBucket = startbucket;\n-    unsigned int bestFarBucket = startbucket;\n+    unsigned int curNearBucket = maxbucketindex;\n+    unsigned int bestNearBucket = maxbucketindex;\n+    unsigned int curFarBucket = maxbucketindex;\n+    unsigned int bestFarBucket = maxbucketindex;\n \n     bool foundAnswer = false;\n     unsigned int bins = unconfTxs.size();\n@@ -242,8 +229,8 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n     EstimatorBucket passBucket;\n     EstimatorBucket failBucket;\n \n-    // Start counting from highest(default) or lowest feerate transactions\n-    for (int bucket = startbucket; bucket >= 0 && bucket <= maxbucketindex; bucket += step) {\n+    // Start counting from highest feerate transactions\n+    for (int bucket = maxbucketindex; bucket >= 0; --bucket) {\n         if (newBucketRange) {\n             curNearBucket = bucket;\n             newBucketRange = false;\n@@ -253,7 +240,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         totalNum += txCtAvg[bucket];\n         failNum += failAvg[periodTarget - 1][bucket];\n         for (unsigned int confct = confTarget; confct < GetMaxConfirms(); confct++)\n-            extraNum += unconfTxs[(nBlockHeight - confct)%bins][bucket];\n+            extraNum += unconfTxs[(nBlockHeight - confct) % bins][bucket];\n         extraNum += oldUnconfTxs[bucket];\n         // If we have enough transaction data points in this range of buckets,\n         // we can test for success\n@@ -263,7 +250,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n             double curPct = nConf / (totalNum + failNum + extraNum);\n \n             // Check to see if we are no longer getting confirmed at the success rate\n-            if ((requireGreater && curPct < successBreakPoint) || (!requireGreater && curPct > successBreakPoint)) {\n+            if (curPct < successBreakPoint) {\n                 if (passing == true) {\n                     // First time we hit a failure record the failed bucket\n                     unsigned int failMinBucket = std::min(curNearBucket, curFarBucket);\n@@ -317,7 +304,7 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n             if (txCtAvg[j] < txSum)\n                 txSum -= txCtAvg[j];\n             else { // we're in the right bucket\n-                median = avg[j] / txCtAvg[j];\n+                median = m_feerate_avg[j] / txCtAvg[j];\n                 break;\n             }\n         }\n@@ -338,13 +325,22 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         failBucket.leftMempool = failNum;\n     }\n \n-    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n-             confTarget, requireGreater ? \">\" : \"<\", 100.0 * successBreakPoint, decay,\n+    float passed_within_target_perc = 0.0;\n+    float failed_within_target_perc = 0.0;\n+    if ((passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool)) {\n+        passed_within_target_perc = 100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool);\n+    }\n+    if ((failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool)) {\n+        failed_within_target_perc = 100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool);\n+    }\n+\n+    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d > %.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+             confTarget, 100.0 * successBreakPoint, decay,\n              median, passBucket.start, passBucket.end,\n-             100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n+             passed_within_target_perc,\n              passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n              failBucket.start, failBucket.end,\n-             100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool),\n+             failed_within_target_perc,\n              failBucket.withinTarget, failBucket.totalConfirmed, failBucket.inMempool, failBucket.leftMempool);\n \n \n@@ -361,7 +357,7 @@ void TxConfirmStats::Write(CAutoFile& fileout) const\n {\n     fileout << decay;\n     fileout << scale;\n-    fileout << avg;\n+    fileout << m_feerate_avg;\n     fileout << txCtAvg;\n     fileout << confAvg;\n     fileout << failAvg;\n@@ -384,8 +380,8 @@ void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets\n         throw std::runtime_error(\"Corrupt estimates file. Scale must be non-zero\");\n     }\n \n-    filein >> avg;\n-    if (avg.size() != numBuckets) {\n+    filein >> m_feerate_avg;\n+    if (m_feerate_avg.size() != numBuckets) {\n         throw std::runtime_error(\"Corrupt estimates file. Mismatch in feerate average bucket count\");\n     }\n     filein >> txCtAvg;\n@@ -664,7 +660,7 @@ CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThr\n     if (successThreshold > 1)\n         return CFeeRate(0);\n \n-    double median = stats->EstimateMedianVal(confTarget, sufficientTxs, successThreshold, true, nBestSeenHeight, result);\n+    double median = stats->EstimateMedianVal(confTarget, sufficientTxs, successThreshold, nBestSeenHeight, result);\n \n     if (median < 0)\n         return CFeeRate(0);\n@@ -725,26 +721,26 @@ double CBlockPolicyEstimator::estimateCombinedFee(unsigned int confTarget, doubl\n     if (confTarget >= 1 && confTarget <= longStats->GetMaxConfirms()) {\n         // Find estimate from shortest time horizon possible\n         if (confTarget <= shortStats->GetMaxConfirms()) { // short horizon\n-            estimate = shortStats->EstimateMedianVal(confTarget, SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight, result);\n+            estimate = shortStats->EstimateMedianVal(confTarget, SUFFICIENT_TXS_SHORT, successThreshold, nBestSeenHeight, result);\n         }\n         else if (confTarget <= feeStats->GetMaxConfirms()) { // medium horizon\n-            estimate = feeStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, result);\n+            estimate = feeStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, result);\n         }\n         else { // long horizon\n-            estimate = longStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, result);\n+            estimate = longStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, result);\n         }\n         if (checkShorterHorizon) {\n             EstimationResult tempResult;\n             // If a lower confTarget from a more recent horizon returns a lower answer use it.\n             if (confTarget > feeStats->GetMaxConfirms()) {\n-                double medMax = feeStats->EstimateMedianVal(feeStats->GetMaxConfirms(), SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight, &tempResult);\n+                double medMax = feeStats->EstimateMedianVal(feeStats->GetMaxConfirms(), SUFFICIENT_FEETXS, successThreshold, nBestSeenHeight, &tempResult);\n                 if (medMax > 0 && (estimate == -1 || medMax < estimate)) {\n                     estimate = medMax;\n                     if (result) *result = tempResult;\n                 }\n             }\n             if (confTarget > shortStats->GetMaxConfirms()) {\n-                double shortMax = shortStats->EstimateMedianVal(shortStats->GetMaxConfirms(), SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight, &tempResult);\n+                double shortMax = shortStats->EstimateMedianVal(shortStats->GetMaxConfirms(), SUFFICIENT_TXS_SHORT, successThreshold, nBestSeenHeight, &tempResult);\n                 if (shortMax > 0 && (estimate == -1 || shortMax < estimate)) {\n                     estimate = shortMax;\n                     if (result) *result = tempResult;\n@@ -763,10 +759,10 @@ double CBlockPolicyEstimator::estimateConservativeFee(unsigned int doubleTarget,\n     double estimate = -1;\n     EstimationResult tempResult;\n     if (doubleTarget <= shortStats->GetMaxConfirms()) {\n-        estimate = feeStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight, result);\n+        estimate = feeStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, nBestSeenHeight, result);\n     }\n     if (doubleTarget <= feeStats->GetMaxConfirms()) {\n-        double longEstimate = longStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight, &tempResult);\n+        double longEstimate = longStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, nBestSeenHeight, &tempResult);\n         if (longEstimate > estimate) {\n             estimate = longEstimate;\n             if (result) *result = tempResult;"
      },
      {
        "sha": "8ea8816dc3772a7808bea9fa1330a7b09ae7ece5",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -138,9 +138,9 @@ class CBlockPolicyEstimator\n \n     /** Decay of .962 is a half-life of 18 blocks or about 3 hours */\n     static constexpr double SHORT_DECAY = .962;\n-    /** Decay of .998 is a half-life of 144 blocks or about 1 day */\n+    /** Decay of .9952 is a half-life of 144 blocks or about 1 day */\n     static constexpr double MED_DECAY = .9952;\n-    /** Decay of .9995 is a half-life of 1008 blocks or about 1 week */\n+    /** Decay of .99931 is a half-life of 1008 blocks or about 1 week */\n     static constexpr double LONG_DECAY = .99931;\n \n     /** Require greater than 60% of X feerate transactions to be confirmed within Y/2 blocks*/"
      },
      {
        "sha": "77cb1781a487b6bb0142c7daaab00b39d1b6ce75",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -14,6 +14,12 @@\n \n #include <tuple>\n \n+/**\n+ * A flag that is ORed into the protocol version to designate that a transaction\n+ * should be (un)serialized without witness data.\n+ * Make sure that this does not collide with any of the values in `version.h`\n+ * or with `ADDRV2_FORMAT`.\n+ */\n static const int SERIALIZE_TRANSACTION_NO_WITNESS = 0x40000000;\n \n /** An outpoint - a combination of a transaction hash and an index n into its vout */"
      },
      {
        "sha": "84b6e96aee90b4be1d58ee920c2b149602afd0e5",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 22,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -84,9 +84,9 @@ const static std::string allNetMessageTypes[] = {\n };\n const static std::vector<std::string> allNetMessageTypesVec(allNetMessageTypes, allNetMessageTypes+ARRAYLEN(allNetMessageTypes));\n \n-CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn)\n+CMessageHeader::CMessageHeader()\n {\n-    memcpy(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE);\n+    memset(pchMessageStart, 0, MESSAGE_START_SIZE);\n     memset(pchCommand, 0, sizeof(pchCommand));\n     nMessageSize = -1;\n     memset(pchChecksum, 0, CHECKSUM_SIZE);\n@@ -111,31 +111,20 @@ std::string CMessageHeader::GetCommand() const\n     return std::string(pchCommand, pchCommand + strnlen(pchCommand, COMMAND_SIZE));\n }\n \n-bool CMessageHeader::IsValid(const MessageStartChars& pchMessageStartIn) const\n+bool CMessageHeader::IsCommandValid() const\n {\n-    // Check start string\n-    if (memcmp(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE) != 0)\n-        return false;\n-\n     // Check the command string for errors\n-    for (const char* p1 = pchCommand; p1 < pchCommand + COMMAND_SIZE; p1++)\n-    {\n-        if (*p1 == 0)\n-        {\n+    for (const char* p1 = pchCommand; p1 < pchCommand + COMMAND_SIZE; ++p1) {\n+        if (*p1 == 0) {\n             // Must be all zeros after the first zero\n-            for (; p1 < pchCommand + COMMAND_SIZE; p1++)\n-                if (*p1 != 0)\n+            for (; p1 < pchCommand + COMMAND_SIZE; ++p1) {\n+                if (*p1 != 0) {\n                     return false;\n-        }\n-        else if (*p1 < ' ' || *p1 > 0x7E)\n+                }\n+            }\n+        } else if (*p1 < ' ' || *p1 > 0x7E) {\n             return false;\n-    }\n-\n-    // Message size\n-    if (nMessageSize > MAX_SIZE)\n-    {\n-        LogPrintf(\"CMessageHeader::IsValid(): (%s, %u bytes) nMessageSize > MAX_SIZE\\n\", GetCommand(), nMessageSize);\n-        return false;\n+        }\n     }\n \n     return true;"
      },
      {
        "sha": "9a44a1626c58ff07d36b11019612a8e3dbfdf26d",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -37,15 +37,15 @@ class CMessageHeader\n     static constexpr size_t HEADER_SIZE = MESSAGE_START_SIZE + COMMAND_SIZE + MESSAGE_SIZE_SIZE + CHECKSUM_SIZE;\n     typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-    explicit CMessageHeader(const MessageStartChars& pchMessageStartIn);\n+    explicit CMessageHeader();\n \n     /** Construct a P2P message header from message-start characters, a command and the size of the message.\n      * @note Passing in a `pszCommand` longer than COMMAND_SIZE will result in a run-time assertion error.\n      */\n     CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn);\n \n     std::string GetCommand() const;\n-    bool IsValid(const MessageStartChars& messageStart) const;\n+    bool IsCommandValid() const;\n \n     SERIALIZE_METHODS(CMessageHeader, obj) { READWRITE(obj.pchMessageStart, obj.pchCommand, obj.nMessageSize, obj.pchChecksum); }\n "
      },
      {
        "sha": "3055cd7da65b2fa3972cc9000b7d56bc65819244",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -166,8 +166,8 @@ void BitcoinCore::initialize()\n {\n     try\n     {\n-        qDebug() << __func__ << \": Running initialization in thread\";\n         util::ThreadRename(\"qt-init\");\n+        qDebug() << __func__ << \": Running initialization in thread\";\n         interfaces::BlockAndHeaderTipInfo tip_info;\n         bool rv = m_node.appInitMain(&tip_info);\n         Q_EMIT initializeResult(rv, tip_info);\n@@ -533,7 +533,7 @@ int GuiMain(int argc, char* argv[])\n     // - QSettings() will use the new application name after this, resulting in network-specific settings\n     // - Needs to be done before createOptionsModel\n \n-    // Check for -chain, -testnet or -regtest parameter (Params() calls are only valid after this clause)\n+    // Check for chain settings (Params() calls are only valid after this clause)\n     try {\n         SelectParams(gArgs.GetChainName());\n     } catch(std::exception &e) {"
      },
      {
        "sha": "d438d6b3d5407332bb8f6a36398f913d0300adc9",
        "filename": "src/qt/bitcoin_locale.qrc",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoin_locale.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoin_locale.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin_locale.qrc?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -28,6 +28,7 @@\n         <file alias=\"fi\">locale/bitcoin_fi.qm</file>\n         <file alias=\"fil\">locale/bitcoin_fil.qm</file>\n         <file alias=\"fr\">locale/bitcoin_fr.qm</file>\n+        <file alias=\"gl_ES\">locale/bitcoin_gl_ES.qm</file>\n         <file alias=\"he\">locale/bitcoin_he.qm</file>\n         <file alias=\"hi\">locale/bitcoin_hi.qm</file>\n         <file alias=\"hr\">locale/bitcoin_hr.qm</file>\n@@ -72,7 +73,6 @@\n         <file alias=\"ta\">locale/bitcoin_ta.qm</file>\n         <file alias=\"te\">locale/bitcoin_te.qm</file>\n         <file alias=\"th\">locale/bitcoin_th.qm</file>\n-        <file alias=\"tr\">locale/bitcoin_tr.qm</file>\n         <file alias=\"uk\">locale/bitcoin_uk.qm</file>\n         <file alias=\"ur\">locale/bitcoin_ur.qm</file>\n         <file alias=\"uz@Cyrl\">locale/bitcoin_uz@Cyrl.qm</file>\n@@ -84,5 +84,6 @@\n         <file alias=\"zh_CN\">locale/bitcoin_zh_CN.qm</file>\n         <file alias=\"zh_HK\">locale/bitcoin_zh_HK.qm</file>\n         <file alias=\"zh_TW\">locale/bitcoin_zh_TW.qm</file>\n+        <file alias=\"zu\">locale/bitcoin_zu.qm</file>\n     </qresource>\n </RCC>"
      },
      {
        "sha": "0c2dcc3584e5f95cc3266bcbd6319147a2e8739b",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -660,6 +660,11 @@ void BitcoinGUI::setWalletController(WalletController* wallet_controller)\n     }\n }\n \n+WalletController* BitcoinGUI::getWalletController()\n+{\n+    return m_wallet_controller;\n+}\n+\n void BitcoinGUI::addWallet(WalletModel* walletModel)\n {\n     if (!walletFrame) return;"
      },
      {
        "sha": "912297a74eef532730ae10d7cd42f5871a356e10",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -79,6 +79,7 @@ class BitcoinGUI : public QMainWindow\n     void setClientModel(ClientModel *clientModel = nullptr, interfaces::BlockAndHeaderTipInfo* tip_info = nullptr);\n #ifdef ENABLE_WALLET\n     void setWalletController(WalletController* wallet_controller);\n+    WalletController* getWalletController();\n #endif\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "8b89242f6c3e335776338b1a423450ef2202c187",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 14,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -11,20 +11,19 @@\n static const char UNUSED *bitcoin_strings[] = {\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"The %s developers\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring \"\n+\"a backup.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"-maxtxfee is set very high! Fees this large could be paid on a single \"\n \"transaction.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Can't generate a change-address key. No keys in the internal keypool and \"\n-\"can't generate any keys.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot obtain a lock on data directory %s. %s is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot provide specific connections and have addrman find outgoing \"\n \"connections at the same.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Cannot upgrade a non HD split wallet without upgrading to support pre split \"\n-\"keypool. Please use -upgradewallet=169900 or -upgradewallet with no version \"\n-\"specified.\"),\n+\"keypool. Please use version 169900 or no version specified.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Distributed under the MIT software license, see the accompanying file %s or \"\n \"%s\"),\n@@ -58,9 +57,16 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"The transaction amount is too small to send after the fee has been deducted\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"This error could occur if this wallet was not shutdown cleanly and was last \"\n+\"loaded using a build with a newer version of Berkeley DB. If so, please use \"\n+\"the software that last loaded this wallet\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is a pre-release test build - use at your own risk - do not use for \"\n \"mining or merchant applications\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"This is the maximum transaction fee you pay (in addition to the normal fee) \"\n+\"to prioritize partial spend avoidance over regular coin selection.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"This is the transaction fee you may discard if change is smaller than dust \"\n \"at this level\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -69,6 +75,9 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Total length of network version string (%i) exceeds maximum length (%i). \"\n \"Reduce the number or size of uacomments.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n+\"Transaction needs a change address, but we can't generate it. Please call \"\n+\"keypoolrefill first.\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Unable to replay blocks. You will need to rebuild the database using -\"\n \"reindex-chainstate.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n@@ -80,28 +89,25 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: The network does not appear to fully agree! Some miners appear to \"\n \"be experiencing issues.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; \"\n-\"if your balance or transactions are incorrect you should restore from a \"\n-\"backup.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: We do not appear to fully agree with our peers! You may need to \"\n \"upgrade, or other nodes may need to upgrade.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"You need to rebuild the database using -reindex to go back to unpruned \"\n \"mode.  This will redownload the entire blockchain\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%d of last 100 blocks have unexpected version\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s corrupt, salvage failed\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s is set very high!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"-maxmempool must be at least %d MB\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"A fatal internal error occurred, see debug.log for details\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot downgrade wallet\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot resolve -%s address: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot set -peerblockfilters without -blockfilterindex.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Cannot write to data directory '%s'; check permissions.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Change index out of range\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Config setting for %s only applied on %s network when in [%s] section.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Copyright (C) %i-%i\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Corrupted block database detected\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Could not find asmap file %s\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Could not parse asmap file %s\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Disk space is too low!\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Do you want to rebuild the block database now?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Done loading\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error initializing block database\"),\n@@ -115,11 +121,11 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error loading wallet %s. Duplicate -wallet fi\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error opening block database\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error reading from database, shutting down.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error upgrading chainstate database\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: A fatal internal error occurred, see debug.log for details\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is low for %s\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Disk space is too low!\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Error: Keypool ran out, please call keypoolrefill first\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to listen on any port. Use -listen=0 if you want this.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Failed to rescan the wallet during initialization\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Fee rate (%s) is lower than the minimum fee rate setting (%s)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Importing...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Incorrect or no genesis block found. Wrong datadir for network?\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Initialization sanity check failed. %s is shutting down.\"),\n@@ -137,6 +143,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading banlist...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading block index...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Loading wallet...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Need to specify a port with -whitebind: '%s'\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"No proxy server specified. Use -proxy=<ip> or -proxy=<ip:port>.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prune cannot be configured with a negative value.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Prune mode is incompatible with -blockfilterindex.\"),\n@@ -184,5 +191,4 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying blocks...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Verifying wallet(s)...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Wallet needed to be rewritten: restart %s to complete\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Warning: unknown new rules activated (versionbit %i)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Zapping all transactions from wallet...\"),\n };"
      },
      {
        "sha": "a2f46c339b8449eb7a8e579a1aea097a632415dc",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -15,6 +15,7 @@\n #include <net.h>\n #include <netbase.h>\n #include <util/system.h>\n+#include <util/threadnames.h>\n #include <validation.h>\n \n #include <stdint.h>\n@@ -52,6 +53,9 @@ ClientModel::ClientModel(interfaces::Node& node, OptionsModel *_optionsModel, QO\n     // move timer to thread so that polling doesn't disturb main event loop\n     timer->moveToThread(m_thread);\n     m_thread->start();\n+    QTimer::singleShot(0, timer, []() {\n+        util::ThreadRename(\"qt-clientmodl\");\n+    });\n \n     subscribeToCoreSignals();\n }"
      },
      {
        "sha": "882d2c8f52d9802013b8633a7a88d5d0fdfcf6b4",
        "filename": "src/qt/guiconstants.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/guiconstants.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/guiconstants.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiconstants.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -46,6 +46,7 @@ static const int TOOLTIP_WRAP_THRESHOLD = 80;\n #define QAPP_ORG_DOMAIN \"bitcoin.org\"\n #define QAPP_APP_NAME_DEFAULT \"Bitcoin-Qt\"\n #define QAPP_APP_NAME_TESTNET \"Bitcoin-Qt-testnet\"\n+#define QAPP_APP_NAME_SIGNET \"Bitcoin-Qt-signet\"\n #define QAPP_APP_NAME_REGTEST \"Bitcoin-Qt-regtest\"\n \n /* One gigabyte (GB) in bytes */"
      },
      {
        "sha": "aa09dc197b778fe19503b53b572f8da52896b18b",
        "filename": "src/qt/locale/bitcoin_af.ts",
        "status": "modified",
        "additions": 2225,
        "deletions": 559,
        "changes": 2784,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_af.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_af.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "0209705b251033895d4a68ca839b7485606b6a1e",
        "filename": "src/qt/locale/bitcoin_ar.ts",
        "status": "modified",
        "additions": 45,
        "deletions": 1,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ar.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ar.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ar.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -183,6 +183,10 @@\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n         <translation>\u0627\u062f\u062e\u0644 \u0643\u0645\u0644\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u0642\u062f\u064a\u0645\u0629 \u0648\u0643\u0644\u0645\u0629 \u0627\u0644\u0645\u0631\u0648\u0631 \u0627\u0644\u062c\u062f\u064a\u062f\u0629 \u0644\u0644\u0645\u062d\u0641\u0638\u0629.</translation>\n     </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u062a\u0630\u0643\u0631 \u0623\u0646 \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643 \u0644\u0627 \u064a\u062d\u0645\u064a \u0627\u0644\u0628\u064a\u062a\u0643\u0648\u064a\u0646 \u0627\u0644\u062e\u0627\u0635\u0629 \u0628\u0643 \u0628\u0634\u0643\u0644 \u0643\u0627\u0645\u0644 \u0645\u0646 \u0627\u0644\u0633\u0631\u0642\u0629 \u0645\u0646 \u0642\u0628\u0644 \u0627\u0644\u0628\u0631\u0627\u0645\u062c \u0627\u0644\u062e\u0628\u064a\u062b\u0629\u0627\u0644\u062a\u064a \u062a\u0635\u064a\u0628 \u062d\u0627\u0633\u0648\u0628\u0643</translation>\n+    </message>\n     <message>\n         <source>Wallet to be encrypted</source>\n         <translation>\u0633\u0648\u0641 \u064a\u062a\u0645 \u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u062a\u0643</translation>\n@@ -756,9 +760,41 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>\u0641\u0634\u0644 \u0625\u0646\u0634\u0627\u0621 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>\u062a\u062d\u0630\u064a\u0631 \u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u0641\u0638\u0629</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\u0625\u0646\u0634\u0627\u0621 \u0645\u062d\u0641\u0638\u0629</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>\u0625\u0633\u0645 \u0627\u0644\u0645\u062d\u0641\u0638\u0629</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>\u0634\u0641\u0631 \u0627\u0644\u0645\u062d\u0641\u0638\u0629. \u0627\u0644\u0645\u062d\u0641\u0638\u0629 \u0633\u064a\u062a\u0645 \u062a\u0634\u0641\u064a\u0631\u0647\u0627 \u0628\u0625\u0633\u062a\u062e\u062f\u0627\u0645 \u0643\u0644\u0645\u0629 \u0645\u0631\u0648\u0631 \u0645\u0646 \u0625\u062e\u062a\u064a\u0627\u0631\u0643.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>\u062a\u0634\u0641\u064a\u0631 \u0645\u062d\u0641\u0638\u0629</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>\u0625\u064a\u0642\u0627\u0641 \u0627\u0644\u0645\u0641\u0627\u062a\u064a\u062d \u0627\u0644\u062e\u0627\u0635\u0629</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>\u0623\u0646\u0634\u0626 \u0645\u062d\u0641\u0638\u0629 \u0641\u0627\u0631\u063a\u0629</translation>\n+    </message>\n     <message>\n         <source>Create</source>\n         <translation>\u0625\u0646\u0634\u0627\u0621</translation>\n@@ -802,6 +838,14 @@\n         <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n         <translation>\u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u062f\u062e\u0644 \"%1\" \u0644\u064a\u0633 \u0639\u0646\u0648\u0627\u0646 \u0628\u064a\u062a \u0643\u0648\u064a\u0646 \u0635\u062d\u064a\u062d.</translation>\n     </message>\n+    <message>\n+        <source>Address \"%1\" already exists as a receiving address with label \"%2\" and so cannot be added as a sending address.</source>\n+        <translation>\u0627\u0644\u0639\u0646\u0648\u0627\u0646 \"%1\" \u0645\u0648\u062c\u0648\u062f \u0628\u0627\u0644\u0641\u0639\u0644 \u0643\u0639\u0646\u0648\u0627\u0646 \u0625\u0633\u062a\u0642\u0628\u0627\u0644 \u062a\u062d\u062a \u0645\u0633\u0645\u0649 \"%2\" \u0648\u0644\u0630\u0644\u0643 \u0644\u0627 \u064a\u0645\u0643\u0646 \u0625\u0636\u0627\u0641\u062a\u0647 \u0643\u0639\u0646\u0648\u0627\u0646 \u0625\u0631\u0633\u0627\u0644.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is already in the address book with label \"%2\".</source>\n+        <translation>\u0627\u0644\u0639\u0646\u0648\u0627\u0646 \u0627\u0644\u0645\u062f\u062e\u0644  \"%1\" \u0645\u0648\u062c\u0648\u062f \u0628\u0627\u0644\u0641\u0639\u0644 \u0641\u064a \u0633\u062c\u0644 \u0627\u0644\u0639\u0646\u0627\u0648\u064a\u0646 \u062a\u062d\u062a \u0645\u0633\u0645\u0649 \" \"%2\".</translation>\n+    </message>\n     <message>\n         <source>Could not unlock wallet.</source>\n         <translation> \u064a\u0645\u0643\u0646 \u0641\u062a\u062d \u0627\u0644\u0645\u062d\u0641\u0638\u0629.</translation>"
      },
      {
        "sha": "5a98c56acde20370cfb6758c336e18dc033fe148",
        "filename": "src/qt/locale/bitcoin_bn.ts",
        "status": "modified",
        "additions": 3770,
        "deletions": 136,
        "changes": 3906,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_bn.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_bn.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_bn.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "c5a0d398ff5588dc402f30c5f7062f9ddd898915",
        "filename": "src/qt/locale/bitcoin_ca.ts",
        "status": "modified",
        "additions": 427,
        "deletions": 8,
        "changes": 435,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ca.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ca.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ca.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>Feu clic dret per a editar l'adre\u00e7a o l'etiqueta</translation>\n+        <translation>Feu clic al bot\u00f3 dret per a editar l'adre\u00e7a o l'etiqueta</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -69,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Aquestes s\u00f3n les vostres adreces de Bitcoin per enviar els pagaments. Sempre reviseu l'import i l'adre\u00e7a del destinatari abans de transferir monedes.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>Aquestes s\u00f3n les teves adreces Bitcoin per rebre pagaments. Utilitza el bot\u00f3 \"Crear nova adre\u00e7a de recepci\u00f3\" de la pestanya de recepci\u00f3 per crear noves adreces.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copia l'adre\u00e7a</translation>\n@@ -183,6 +187,10 @@\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n         <translation>Introdu\u00efu la contrasenya antiga i la contrasenya nova a la cartera.</translation>\n     </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Recorda que tot i xifrant la teva cartera, els teus bitcoins no estan completament protegits de robatori a trav\u00e9s de programari malici\u00f3s que estigui infectant el teu ordinador.</translation>\n+    </message>\n     <message>\n         <source>Wallet to be encrypted</source>\n         <translation>Cartera per ser encriptada</translation>\n@@ -283,7 +291,7 @@\n     </message>\n     <message>\n         <source>Show information about %1</source>\n-        <translation>Mosta informaci\u00f3 sobre el %1</translation>\n+        <translation>Mostra informaci\u00f3 sobre el %1</translation>\n     </message>\n     <message>\n         <source>About &amp;Qt</source>\n@@ -317,6 +325,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>Obre un &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Crear Cartera...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Crear una nova cartera</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>Moneder:</translation>\n@@ -421,6 +437,10 @@\n         <source>&amp;Command-line options</source>\n         <translation>Opcions de la &amp;l\u00ednia d'ordres</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n active connection(s) to Bitcoin network</source>\n+        <translation><numerusform>Una connexi\u00f3 activa a la xarxa de Bitcoin</numerusform><numerusform>%n connexions actives a la xarxa de Bitcoin</numerusform></translation>\n+    </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n         <translation>S'estan indexant els blocs al disc...</translation>\n@@ -429,6 +449,10 @@\n         <source>Processing blocks on disk...</source>\n         <translation>S'estan processant els blocs al disc...</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Processed %n block(s) of transaction history.</source>\n+        <translation><numerusform>Processat un bloc de l'historial de transaccions.</numerusform><numerusform>Processat %n blocs de l'historial de transaccions.</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 darrere</translation>\n@@ -457,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Actualitzat</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Finestra node</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Obrir depurador de node i consola de diagnosi.</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>Adreces d'&amp;enviament</translation>\n@@ -465,13 +497,17 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>Adreces de &amp;recepci\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Obrir un bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Obre la cartera</translation>\n     </message>\n     <message>\n         <source>Open a wallet</source>\n-        <translation>Obre la cartera</translation>\n+        <translation>Obre una cartera</translation>\n     </message>\n     <message>\n         <source>Close Wallet...</source>\n@@ -525,6 +561,10 @@\n         <source>Error: %1</source>\n         <translation>Av\u00eds: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Av\u00eds: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -747,10 +787,59 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Creant cartera &lt;b&gt;%1&lt;/b&gt;...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>La creaci\u00f3 de cartera ha fallat</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Av\u00eds en la creaci\u00f3 de la cartera</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Crear cartera</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Nom de la cartera</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>Xifra la cartera. La cartera ser\u00e0 xifrada amb la contrasenya que escullis.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>Xifrar la cartera</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Deshabilita les claus privades per a aquesta cartera. Carteres amb claus privades deshabilitades no tindran cap clau privada i no podran tenir cap llavor HD o importar claus privades.\n+Aix\u00f2 \u00e9s ideal per a carteres de mode nom\u00e9s lectura.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Deshabilitar claus privades</translation>\n+    </message>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>Crea una cartera en blanc. Carteres en blanc no tenen claus privades inicialment o scripts. Claus privades i adreces poden ser importades, o una llavor HD, m\u00e9s endavant.</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>Fes cartera en blanc</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Crear</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -856,12 +945,16 @@\n     </message>\n     <message>\n         <source>As this is the first time the program is launched, you can choose where %1 will store its data.</source>\n-        <translation>Com \u00e9s la primera vegada que s'executa el programa, podeu triar on %1 emmagatzemar\u00e0 les dades.</translation>\n+        <translation>Com \u00e9s la primera vegada que s'executa el programa, podeu triar on %1 emmagatzemaran les dades.</translation>\n     </message>\n     <message>\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n         <translation>Quan feu clic a D'acord, %1 comen\u00e7ar\u00e0 a descarregar i processar la cadena de blocs %4 completa (%2 GB) comen\u00e7ant per les primeres transaccions de %3, any de llen\u00e7ament inicial de %4.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Desfer aquest canvi requereix tornar-se a descarregar el blockchain sencer. \u00c9s m\u00e9s r\u00e0pid descarregar la cadena completa primer i despr\u00e9s podar. Deshabilita algunes de les caracter\u00edstiques avan\u00e7ades.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>Aquesta sincronitzaci\u00f3 inicial \u00e9s molt exigent i pot exposar problemes de maquinari amb l'equip que anteriorment havien passat desapercebuts. Cada vegada que executeu %1, continuar\u00e0 descarregant des del punt on es va deixar.</translation>\n@@ -882,6 +975,10 @@\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n+        <translation>Descarta blocs despr\u00e9s de la verificaci\u00f3, excepte el m\u00e9s recent %1 GB (podar)</translation>\n+    </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n         <translation>Almenys %1 GB de dades s'emmagatzemaran en aquest directori, i creixer\u00e0 amb el temps.</translation>\n@@ -906,7 +1003,19 @@\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>Un GB d'espai lliure disponible.</numerusform><numerusform>%n GB d'espai lliure disponibles</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(of %n GB needed)</source>\n+        <translation><numerusform>(Un GB necessari)</numerusform><numerusform>(de %n GB necess\u00e0ris)</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>(%n GB needed for full chain)</source>\n+        <translation><numerusform>(Un GB necessari per a la cadena completa)</numerusform><numerusform>(Un GB necessari per a la cadena completa)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>ModalOverlay</name>\n     <message>\n@@ -953,20 +1062,40 @@\n         <source>Hide</source>\n         <translation>Amaga</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 sincronitzant ara mateix. Es descarregaran cap\u00e7aleres i blocs d'altres peers i es validaran fins a obtenir la punta de la cadena de blocs. </translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Desconegut. Sincronitzaci\u00f3 de les cap\u00e7aleres (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Obre Bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Ha fallat l'obertura de la cartera</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Av\u00eds en l'obertura de la cartera</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>moneder per defecte</translation>\n@@ -1194,6 +1323,10 @@\n         <source>&amp;Third party transaction URLs</source>\n         <translation>URL de transaccions de tercers</translation>\n     </message>\n+    <message>\n+        <source>Options set in this dialog are overridden by the command line or in the configuration file:</source>\n+        <translation>Opcions configurades en aquest di\u00e0leg s\u00f3n sobreescrites per la l\u00ednia de comandes o el fitxer de configuraci\u00f3:</translation>\n+    </message>\n     <message>\n         <source>&amp;OK</source>\n         <translation>&amp;D'acord</translation>\n@@ -1340,6 +1473,18 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' no \u00e9s una URI v\u00e0lida. Usi 'bitcoin:' en lloc seu.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>No es pot processar la petici\u00f3 de pagament perqu\u00e8 BIP70 no est\u00e0 suportat.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>A causa dels defectes generalitzats en el BIP70 \u00e9s altament recomanable que qualsevol instrucci\u00f3 comerciant per canviar carteres sigui ignorada.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Si est\u00e0s rebent aquest error, hauries de demanar al comerciant que et doni una URI compatible amb el BIP21.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Adre\u00e7a de pagament no v\u00e0lida %1</translation>\n@@ -1418,10 +1563,34 @@\n         <source>%1 ms</source>\n         <translation>%1 ms</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>Un segon</numerusform><numerusform>%n segons</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>Un minut</numerusform><numerusform>%n minuts</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>Una hora</numerusform><numerusform>%n hores</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>Un dia</numerusform><numerusform>%n dies</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>Una setmana</numerusform><numerusform>%n setmanes</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 i %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>Un any</numerusform><numerusform>%n anys</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 B</source>\n         <translation>%1 B</translation>\n@@ -1477,6 +1646,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>Error en codificar l'URI en un codi QR.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>Suport de codi QR no disponible.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>Desa el codi QR</translation>\n@@ -1512,10 +1685,18 @@\n         <source>Datadir</source>\n         <translation>Datadir</translation>\n     </message>\n+    <message>\n+        <source>To specify a non-default location of the data directory use the '%1' option.</source>\n+        <translation>Per tal d'especificar una ubicaci\u00f3 que no \u00e9s per defecte del directori de dades utilitza la '%1' opci\u00f3.</translation>\n+    </message>\n     <message>\n         <source>Blocksdir</source>\n         <translation>Directori de blocs</translation>\n     </message>\n+    <message>\n+        <source>To specify a non-default location of the blocks directory use the '%1' option.</source>\n+        <translation>Per tal d'especificar una ubicaci\u00f3 que no \u00e9s per defecte del directori de blocs utilitza la '%1' opci\u00f3.</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>&amp;Temps d'inici</translation>\n@@ -1608,10 +1789,22 @@\n         <source>Synced Blocks</source>\n         <translation>Blocs sincronitzats</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>El sistema aut\u00f2nom de mapat utilitzat per diversificar la selecci\u00f3 entre iguals.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapat com</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agent d'usuari</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Finestra node</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Obre el fitxer de registre de depuraci\u00f3 %1 del directori de dades actual. Aix\u00f2 pot trigar uns segons en fitxers de registre grans.</translation>\n@@ -1823,6 +2016,18 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Un import opcional per sol\u00b7licitar. Deixeu-ho en blanc o zero per no sol\u00b7licitar cap import espec\u00edfic.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Una etiqueta opcional per associar-se a la nova adre\u00e7a de recepci\u00f3 (usada per vost\u00e8 per identificar una factura). Tamb\u00e9 s\u2019adjunta a la sol\u00b7licitud de pagament.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Un missatge opcional adjunt a la sol\u00b7licitud de pagament i que es pot mostrar al remitent.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;Creeu una nova adre\u00e7a de recepci\u00f3</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>Neteja tots els camps del formulari.</translation>\n@@ -2072,6 +2277,18 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Dust:</source>\n         <translation>Polsim:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Amagueu la configuraci\u00f3 de les tarifes de transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>Quan no hi ha prou espai en els blocs per encabir totes les transaccions, els miners i aix\u00ed mateix els nodes repetidors poden exigir una taxa m\u00ednima. \u00c9s acceptable pagar \u00fanicament la taxa m\u00ednima, per\u00f2 tingueu present que pot resultar que la vostra transacci\u00f3 no sigui mai confirmada mentre hi hagi m\u00e9s demanda de transaccions bitcoin de les que la xarxa pot processar.</translation>\n+    </message>\n+    <message>\n+        <source>A too low fee might result in a never confirming transaction (read the tooltip)</source>\n+        <translation>Una taxa massa baixa pot resultar en una transacci\u00f3 que no es confirmi mai (llegiu el consell)</translation>\n+    </message>\n     <message>\n         <source>Confirmation time target:</source>\n         <translation>Temps de confirmaci\u00f3 objectiu:</translation>\n@@ -2132,18 +2349,38 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blocs)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>Creaci\u00f3 sense firmar</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Crea una transacci\u00f3 bitcoin parcialment signada (PSBT) per a utilitzar, per exemple,  amb una cartera %1 fora de l\u00ednia o amb una cartera compatible amb PSBT.</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation>de la cartera \"%1\"</translation>\n     </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>%1 a '%2'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 a %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Voleu redactar aquesta transacci\u00f3?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Esteu segur que ho voleu enviar?</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Revisa la teva proposta de transacci\u00f3. Es produir\u00e0 una transacci\u00f3 de Bitcoin amb signatura parcial (PSBT) que podeu copiar i despr\u00e9s signar, per exemple, amb una cartera %1 de tipus fora de l\u00ednia o una cartera f\u00edsica compatible amb PSBT.</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n@@ -2160,14 +2397,42 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Transaction fee</source>\n         <translation>Comissi\u00f3 de transacci\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Not signalling Replace-By-Fee, BIP-125.</source>\n+        <translation>Substituci\u00f3 per tarifa sense senyalitzaci\u00f3, BIP-125</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Import total</translation>\n     </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>Per revisar la llista de destinataris, feu clic a \"Mostra els detalls ...\"</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>Confirma l'enviament de monedes</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Confirmeu la proposta de transacci\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Copiar PSBT al porta-retalls.</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Enviar</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT copiada</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Saldo nom\u00e9s de vigil\u00e0ncia:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>L'adre\u00e7a del destinatari no \u00e9s v\u00e0lida. Torneu-la a comprovar.</translation>\n@@ -2200,6 +2465,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Payment request expired.</source>\n         <translation>La sol\u00b7licitud de pagament ha ven\u00e7ut.</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>S\u2019estima que comenci la confirmaci\u00f3 dintre d'un bloc.</numerusform><numerusform>S\u2019estima que comenci la confirmaci\u00f3 dintre de %n blocs.</numerusform></translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Av\u00eds: adre\u00e7a Bitcoin no v\u00e0lida</translation>\n@@ -2259,6 +2528,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Remove this entry</source>\n         <translation>Elimina aquesta entrada</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>L\u2019import a enviar a la unitat seleccionada</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>La comissi\u00f3 es deduir\u00e0 de l'import que s'enviar\u00e0. El destinatari rebr\u00e0 menys bitcoins que les que introdu\u00efu al camp d'import. Si se seleccionen m\u00faltiples destinataris, la comissi\u00f3 es dividir\u00e0 per igual.</translation>\n@@ -2385,6 +2658,14 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>L'adre\u00e7a Bitcoin amb qu\u00e8 va ser signat el missatge</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>El missatge signat per verificar</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>La signatura donada quan es va signar el missatge</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Verificar el missatge per assegurar-se que ha estat signat amb una adre\u00e7a Bitcoin espec\u00edfica</translation>\n@@ -2417,6 +2698,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Wallet unlock was cancelled.</source>\n         <translation>S'ha cancel\u00b7lat el desblocatge de la cartera.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Cap error</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>La clau privada per a la adre\u00e7a introdu\u00efda no est\u00e0 disponible.</translation>\n@@ -2459,6 +2744,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Obre per un bloc m\u00e9s</numerusform><numerusform>Obre per %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Obert fins %1</translation>\n@@ -2535,6 +2824,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Credit</source>\n         <translation>Cr\u00e8dit</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>madura en un bloc m\u00e9s</numerusform><numerusform>madura en %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>no acceptat</translation>\n@@ -2583,6 +2876,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Output index</source>\n         <translation>\u00cdndex de resultats</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(El certificat no s'ha verificat)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Mercader</translation>\n@@ -2641,6 +2938,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Label</source>\n         <translation>Etiqueta</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Obre per un bloc m\u00e9s</numerusform><numerusform>Obre per %n blocs m\u00e9s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Obert fins %1</translation>\n@@ -2902,7 +3203,15 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Close wallet</source>\n         <translation>Tanca la cartera</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>Segur que voleu tancar la cartera &lt;i&gt;%1 &lt;/i&gt;?</translation>\n+    </message>\n+    <message>\n+        <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n+        <translation>Si tanqueu la cartera durant massa temps, es pot haver de tornar a sincronitzar tota la cadena si teniu el sistema de poda habilitat.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n     <message>\n@@ -2928,6 +3237,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Do you want to increase the fee?</source>\n         <translation>Voleu augmentar la tarifa?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Voleu redactar una transacci\u00f3 amb augment de tarifes?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>tarifa actual:</translation>\n@@ -2944,6 +3257,14 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Confirm fee bump</source>\n         <translation>Confirmeu el rec\u00e0rrec de tarifes</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>No es pot redactar la transacci\u00f3.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT copiada</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>No es pot signar la transacci\u00f3.</translation>\n@@ -3026,10 +3347,18 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>The %s developers</source>\n         <translation>Els desenvolupadors %s</translation>\n     </message>\n+    <message>\n+        <source>Can't generate a change-address key. No keys in the internal keypool and can't generate any keys.</source>\n+        <translation>No es pot generar una clau d\u2019adre\u00e7a de canvi. No hi ha claus al keypool intern i no es pot generar cap clau.</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n         <translation>No es pot obtenir un bloqueig al directori de dades %s. %s probablement ja s'estigui executant.</translation>\n     </message>\n+    <message>\n+        <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n+        <translation>No es poden proporcionar connexions espec\u00edfiques i no es poden trobar connexions sortint al mateix temps.</translation>\n+    </message>\n     <message>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>S'ha produ\u00eft un error en llegir %s. Totes les claus es llegeixen correctament, per\u00f2 les dades de la transacci\u00f3 o les entrades de la llibreta d'adreces podrien faltar o ser incorrectes.</translation>\n@@ -3090,6 +3419,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Change index out of range</source>\n         <translation>Canvieu l'\u00edndex fora de l'abast</translation>\n     </message>\n+    <message>\n+        <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n+        <translation>Configuraci\u00f3 per a %s \u00fanicament aplicada a  %s de la xarxa quan es troba a la secci\u00f3 [%s].</translation>\n+    </message>\n     <message>\n         <source>Copyright (C) %i-%i</source>\n         <translation>Copyright (C) %i-%i</translation>\n@@ -3098,6 +3431,14 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Corrupted block database detected</source>\n         <translation>S'ha detectat una base de dades de blocs corrupta</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>No s'ha pogut trobar el fitxer asmap %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>No s'ha pogut analitzar el fitxer asmap %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Voleu reconstruir la base de dades de blocs ara?</translation>\n@@ -3114,6 +3455,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Error loading %s</source>\n         <translation>Error carregant %s</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s: Private keys can only be disabled during creation</source>\n+        <translation>Error carregant %s: les claus privades nom\u00e9s es poden desactivar durant la creaci\u00f3</translation>\n+    </message>\n     <message>\n         <source>Error loading %s: Wallet corrupted</source>\n         <translation>S'ha produ\u00eft un error en carregar %s: la cartera \u00e9s corrupta</translation>\n@@ -3134,6 +3479,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Ha fallat escoltar a qualsevol port. Feu servir -listen=0 si voleu fer aix\u00f2.</translation>\n     </message>\n+    <message>\n+        <source>Failed to rescan the wallet during initialization</source>\n+        <translation>No s'ha pogut escanejar novament la cartera durant la inicialitzaci\u00f3</translation>\n+    </message>\n     <message>\n         <source>Importing...</source>\n         <translation>S'est\u00e0 important...</translation>\n@@ -3146,6 +3495,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Initialization sanity check failed. %s is shutting down.</source>\n         <translation>S'ha produ\u00eft un error en la verificaci\u00f3 de sanejament d'inicialitzaci\u00f3. S'est\u00e0 tancant %s.</translation>\n     </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>Perm\u00eds P2P no v\u00e0lid: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>Import inv\u00e0lid per -%s=&lt;amount&gt;: '%s'</translation>\n@@ -3158,10 +3511,30 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Import inv\u00e0lid per -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Specified blocks directory \"%s\" does not exist.</source>\n+        <translation>El directori de blocs especificat \"%s\" no existeix.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Tipus d'adre\u00e7a desconegut '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>Tipus de canvi desconegut '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Upgrading txindex database</source>\n+        <translation>Actualitzant txindex de la base de dades</translation>\n+    </message>\n     <message>\n         <source>Loading P2P addresses...</source>\n         <translation>S'estan carregant les adreces P2P ...</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>Error: l'espai del disc \u00e9s insuficient.</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>Carregant banlist ...</translation>\n@@ -3246,6 +3619,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Error upgrading chainstate database</source>\n         <translation>S'ha produ\u00eft un error en actualitzar la base de dades de chainstate</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is low for %s</source>\n+        <translation>Error: l'espai del disc \u00e9s insuficient per a %s</translation>\n+    </message>\n     <message>\n         <source>Invalid -onion address or hostname: '%s'</source>\n         <translation>Adre\u00e7a o nom de l'ordinador -onion no v\u00e0lida: '%s'</translation>\n@@ -3266,6 +3643,10 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>Cal especificar un port amb -whitebind: \u00ab%s\u00bb</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>El mode de poda no \u00e9s compatible amb -blockfilterindex.</translation>\n+    </message>\n     <message>\n         <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation>Reducci\u00f3 de -maxconnections de %d a %d, a causa de les limitacions del sistema.</translation>\n@@ -3278,6 +3659,24 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Signing transaction failed</source>\n         <translation>Ha fallat la signatura de la transacci\u00f3</translation>\n     </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" does not exist</source>\n+        <translation>-Walletdir especificat \"%s\" no existeix</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is a relative path</source>\n+        <translation>-Walletdir especificat \"%s\" \u00e9s una ruta relativa</translation>\n+    </message>\n+    <message>\n+        <source>Specified -walletdir \"%s\" is not a directory</source>\n+        <translation>-Walletdir especificat \"%s\" no \u00e9s un directori</translation>\n+    </message>\n+    <message>\n+        <source>The specified config file %s does not exist\n+</source>\n+        <translation>El fitxer de configuraci\u00f3 especificat %s no existeix\n+</translation>\n+    </message>\n     <message>\n         <source>The transaction amount is too small to pay the fee</source>\n         <translation>L'import de la transacci\u00f3 \u00e9s massa petit per pagar-ne una comissi\u00f3</translation>\n@@ -3298,10 +3697,18 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Unable to bind to %s on this computer (bind returned error %s)</source>\n         <translation>No s'ha pogut vincular a %s en aquest ordinador (la vinculaci\u00f3 ha retornat l'error %s)</translation>\n     </message>\n+    <message>\n+        <source>Unable to create the PID file '%s': %s</source>\n+        <translation>No es pot crear el fitxer PID '%s': %s</translation>\n+    </message>\n     <message>\n         <source>Unable to generate initial keys</source>\n         <translation>No s'han pogut generar les claus inicials</translation>\n     </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>Valor %s -blockfilterindex desconegut</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>S'estan verificant les carteres...</translation>\n@@ -3374,6 +3781,18 @@ Nota: Com que la comissi\u00f3 es calcula en funci\u00f3 dels bytes, una comissi\u00f3 de \"1\n         <source>Insufficient funds</source>\n         <translation>Balan\u00e7 insuficient</translation>\n     </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.</source>\n+        <translation>No es pot actualitzar una cartera de tipus dividida que no sigui f\u00edsica sense haver d'actualitzar per tal de suportar keypool pre dividida. Si us plau, utilitzeu -upgradewallet = 169900 o -upgradewallet sense cap versi\u00f3 especificada.</translation>\n+    </message>\n+    <message>\n+        <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n+        <translation>L'estimaci\u00f3 de la quota ha fallat. Fallbackfee est\u00e0 desactivat. Espereu uns quants blocs o activeu -fallbackfee.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n+        <translation>Av\u00eds: Claus privades detectades en la cartera {%s} amb claus privades deshabilitades</translation>\n+    </message>\n     <message>\n         <source>Cannot write to data directory '%s'; check permissions.</source>\n         <translation>No es pot escriure en el directori de dades \"%s\". Reviseu-ne els permisos.</translation>"
      },
      {
        "sha": "7d6ba6772b57e37f7483d14ef8a15c09e4cd2b18",
        "filename": "src/qt/locale/bitcoin_cs.ts",
        "status": "modified",
        "additions": 259,
        "deletions": 7,
        "changes": 266,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_cs.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_cs.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_cs.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Aktu\u00e1ln\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Okno uzlu</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Otev\u0159\u00edt konzolu pro lad\u011bn\u00ed a diagnostiku uzl\u016f</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>Odes\u00edlac\u00ed adresy</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>P\u0159ij\u00edmac\u00ed adresy</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Na\u010d\u00edst Bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Otev\u0159\u00edt pen\u011b\u017eenku</translation>\n@@ -549,6 +561,10 @@\n         <source>Error: %1</source>\n         <translation>Chyba: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Varov\u00e1n\u00ed: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -771,10 +787,58 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Vytv\u00e1\u0159\u00edm pen\u011b\u017eenku &lt;b&gt;%1&lt;/b&gt;...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>Vytvo\u0159en\u00ed pen\u011b\u017eenky selhalo</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Vytvo\u0159it varov\u00e1n\u00ed pen\u011b\u017eenky</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Vytvo\u0159it pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>N\u00e1zev pen\u011b\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>Za\u0161ifrovat pen\u011b\u017eenku. Pen\u011b\u017eenka bude za\u0161ifrov\u00e1na pomoc\u00ed va\u0161eho hesla.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>Za\u0161ifrovat pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Vypnout soukrom\u00e9 kl\u00ed\u010de pro tuto pen\u011b\u017eenku. Pen\u011b\u017eenky s vypnut\u00fdmi soukrom\u00fdmi kl\u00ed\u010di nebudou m\u00edt soukrom\u00e9 kl\u00ed\u010de a nemohou m\u00edt HD inicializaci ani importovan\u00e9 soukrom\u00e9 kl\u00ed\u010de. Tohle je ide\u00e1ln\u00ed pro pen\u011b\u017eenky pouze na sledov\u00e1n\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Zru\u0161it soukrom\u00e9 kl\u00ed\u010de</translation>\n+    </message>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>Vytvo\u0159it pr\u00e1zdnou pen\u011b\u017eenku. Pr\u00e1zdn\u00e9 pen\u011b\u017eenky na za\u010d\u00e1tku nemaj\u00ed \u017e\u00e1dn\u00e9 soukrom\u00e9 kl\u00ed\u010de ani skripty. Pozd\u011bji mohou b\u00fdt importov\u00e1ny soukrom\u00e9 kl\u00ed\u010de a adresy nebo nastaven\u00e1 HD inicializace.</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>Vytvo\u0159it pr\u00e1zdnou pen\u011b\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Vytvo\u0159it</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -886,6 +950,10 @@\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n         <translation>Jakmile stiskne\u0161 OK, %1 za\u010dne stahovat a zpracov\u00e1vat cel\u00fd %4ov\u00fd blockchain (%2 GB), po\u010d\u00ednaje nejstar\u0161\u00edmi transakcemi z roku %3, kdy byl %4 spu\u0161t\u011bn.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Vr\u00e1cen\u00ed tohoto nastaven\u00ed vy\u017eaduje op\u011btovn\u00e9 sta\u017een\u00ed cel\u00e9ho blockchainu. Je rychlej\u0161\u00ed st\u00e1hnout cel\u00fd \u0159et\u011bzec nejprve a pro\u0159ezat jej pozd\u011bji. N\u011bkter\u00e9 pokro\u010dil\u00e9 funkce budou zak\u00e1z\u00e1ny, dokud cel\u00fd blockchain nebude sta\u017een nanovo.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>Prvotn\u00ed synchronizace je velice n\u00e1ro\u010dn\u00e1, a mohou se tak d\u00edky n\u00ed za\u010d\u00edt na tv\u00e9m po\u010d\u00edta\u010di projevovat dosud skryt\u00e9 hardwarov\u00e9 probl\u00e9my. Poka\u017ed\u00e9, kdy\u017e spust\u00ed\u0161 %1, bude stahov\u00e1n\u00ed pokra\u010dovat tam, kde skon\u010dilo.</translation>\n@@ -906,6 +974,10 @@\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n+        <translation>Zahodit bloky po ov\u011b\u0159en\u00ed, s v\u00fdjimkou posledn\u00edch %1 GB (pro\u0159ezat)</translation>\n+    </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n         <translation>Bude proto pot\u0159ebovat do tohoto adres\u00e1\u0159e ulo\u017eit nejm\u00e9n\u011b %1 GB dat \u2013 tohle \u010d\u00edslo nav\u00edc bude v pr\u016fb\u011bhu \u010dasu r\u016fst.</translation>\n@@ -938,7 +1010,11 @@\n         <source>(of %n GB needed)</source>\n         <translation><numerusform>(z pot\u0159ebn\u00e9ho %n GB)</numerusform><numerusform>(z pot\u0159ebn\u00fdch %n GB)</numerusform><numerusform>(z pot\u0159ebn\u00fdch %n GB)</numerusform><numerusform>(z pot\u0159ebn\u00fdch %n GB)</numerusform></translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>(%n GB needed for full chain)</source>\n+        <translation><numerusform>(%n GB pot\u0159eba pre pln\u00fd \u0159et\u011bzec)</numerusform><numerusform>(%n GB pot\u0159eba pre pln\u00fd \u0159et\u011bzec) </numerusform><numerusform>(%n GB pot\u0159eba pre pln\u00fd \u0159et\u011bzec) </numerusform><numerusform>(%n GB pot\u0159eba pre pln\u00fd \u0159et\u011bzec) </numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>ModalOverlay</name>\n     <message>\n@@ -985,20 +1061,40 @@\n         <source>Hide</source>\n         <translation>Skryj</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc - \u00fanikov\u00e1 kl\u00e1vesa</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 se pr\u00e1v\u011b synchronizuje. St\u00e1hnou se hlavi\u010dky a bloky od prot\u011bjsk\u016f. Ty se budou se ov\u011b\u0159ovat a\u017e se kompletn\u011b ov\u011b\u0159\u00ed cel\u00fd \u0159et\u011bzec blok\u016f.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Nezn\u00e1m\u00e9. Synchronizace hlavi\u010dek (%1, %2)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Otev\u0159\u00edt bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Otev\u0159en\u00ed pen\u011b\u017eenky selhalo</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Varov\u00e1n\u00ed otev\u0159en\u00ed pen\u011b\u017eenky</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>v\u00fdchoz\u00ed pen\u011b\u017eenka</translation>\n@@ -1376,6 +1472,18 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' nen\u00ed platn\u00e9 URI. M\u00edsto toho pou\u017eij 'bitcoin:'.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Nelze zpracovat \u017e\u00e1dost o platbu, proto\u017ee podpora pro BIP70 nen\u00ed podporov\u00e1na.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>Vzhledem k roz\u0161\u00ed\u0159en\u00fdm bezpe\u010dnostn\u00edm nedostatk\u016fm v BIP70 se d\u016frazn\u011b doporu\u010duje, aby byly ignorov\u00e1ny ve\u0161ker\u00e9 obchodn\u00ed pokyny pro p\u0159ep\u00edn\u00e1n\u00ed pen\u011b\u017eenek.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Pokud obdr\u017e\u00edte tuto chybu, m\u011bli byste po\u017e\u00e1dat obchodn\u00edka, aby poskytl URI kompatibiln\u00ed s BIP21.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Neplatn\u00e1 platebn\u00ed adresa %1</translation>\n@@ -1537,6 +1645,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>Chyba p\u0159i k\u00f3dov\u00e1n\u00ed URI do QR k\u00f3du.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>Podpora QR k\u00f3du nen\u00ed k dispozici.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>Ulo\u017e QR k\u00f3d</translation>\n@@ -1676,10 +1788,22 @@\n         <source>Synced Blocks</source>\n         <translation>Aktu\u00e1ln\u011b blok\u016f</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Mapovan\u00fd nez\u00e1visl\u00fd - Autonomn\u00ed Syst\u00e9m pou\u017e\u00edvan\u00fd pro roz\u0161\u00edren\u00ed vz\u00e1jemn\u00e9ho v\u00fdb\u011bru prot\u011bjsk\u016f.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapovan\u00fd AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Typ klienta</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Okno uzlu</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Otev\u0159i soubor s ladic\u00edmi z\u00e1znamy %1 z aktu\u00e1ln\u00edho datov\u00e9ho adres\u00e1\u0159e. U velk\u00fdch \u017eurn\u00e1l\u016f to m\u016f\u017ee p\u00e1r vte\u0159in zabrat.</translation>\n@@ -1891,6 +2015,18 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Voliteln\u00e1 \u010d\u00e1stka, kterou po\u017eaduje\u0161. Nech pr\u00e1zdn\u00e9 nebo nulov\u00e9, pokud nepo\u017eaduje\u0161 konkr\u00e9tn\u00ed \u010d\u00e1stku.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Voliteln\u00fd popis kter\u00fd sa p\u0159id\u00e1 k t\u00e9jo nov\u00e9 p\u0159ij\u00edmac\u00ed adrese (pro jednoduch\u0161\u00ed identifikaci). Tenhle popis bude tak\u00e9 p\u0159id\u00e1n do v\u00fdzvy k platb\u011b.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Voliteln\u00e1 zpr\u00e1va kter\u00e1 se p\u0159id\u00e1 k t\u00e9jo platebn\u00ed v\u00fdzv\u011b a m\u016f\u017ee b\u00fdt zobrazena odes\u00edlateli.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;Vytvo\u0159it novou p\u0159ij\u00edmac\u00ed adresu</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>Proma\u017e obsah ze v\u0161ech formul\u00e1\u0159ov\u00fdch pol\u00ed\u010dek.</translation>\n@@ -1905,7 +2041,7 @@\n     </message>\n     <message>\n         <source>Generate native segwit (Bech32) address</source>\n-        <translation>Generovat nativn\u00ed segwit adresu (Bench32)</translation>\n+        <translation>Generovat nativn\u00ed segwit adresu (Bech32)</translation>\n     </message>\n     <message>\n         <source>Requested payments history</source>\n@@ -2140,6 +2276,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Dust:</source>\n         <translation>Prach:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Schovat nastaven\u00ed poplatk\u016f transakce - transaction fee</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Kdy\u017e je zde m\u011bn\u011b transakc\u00ed ne\u017e m\u00edsta na bloky, mine\u0159i stejn\u011b tak relay-e mohou nasadit minim\u00e1ln\u00ed poplatky. Zaplacen\u00edm pouze minim\u00e1ln\u00edho poplatku je v pohod\u011b, ale m\u011bjte na pam\u011bti \u017ee toto m\u016f\u017ee m\u00edt za n\u00e1sledek nikdy neov\u011b\u0159enou transakci pokud zde bude v\u00edce bitcoinov\u00fdch transakc\u00ed ne\u017e m\u016f\u017ee s\u00ed\u0165 zvl\u00e1dnout.</translation>\n@@ -2208,14 +2348,38 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blok\u016f)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>Vytvo\u0159it bez podpisu</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Vytvo\u0159it \u010d\u00e1ste\u010dn\u011b podepsanou Bitcoin transakci (Partially Signed Bitcoin Transaction - PSBT) k pou\u017et\u00ed kup\u0159\u00edkladu s offline %1 pen\u011b\u017eenkou nebo s jinou kompatibiln\u00ed PSBT hardware pen\u011b\u017eenkou.</translation>\n+    </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation>z pen\u011b\u017eenky '%1'</translation>\n+    </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>%1 do '%2'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n-        <translation>%1 pro %2</translation>\n+        <translation>%1 do %2</translation>\n+    </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Chcete napl\u00e1novat tuhle transakci?</translation>\n     </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Jsi si jist\u00fd, \u017ee tuhle transakci chce\u0161 poslat?</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Zkontrolujte pros\u00edm sv\u016fj n\u00e1vrh transakce. V\u00fdsledkem bude \u010d\u00e1ste\u010dn\u011b podepsan\u00e1 bitcoinov\u00e1 transakce (PSBT), kterou m\u016f\u017eete kop\u00edrovat a pot\u00e9 podepsat nap\u0159. pomoc\u00ed offline %1 pen\u011b\u017eenky nebo hardwarov\u00e9 pen\u011b\u017eenky kompatibiln\u00ed s PSBT.</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>nebo</translation>\n@@ -2240,13 +2404,33 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Total Amount</source>\n         <translation>Celkov\u00e1 \u010d\u00e1stka</translation>\n     </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>Chcete-li zkontrolovat seznam p\u0159\u00edjemc\u016f, klikn\u011bte na \u201eZobrazit podrobnosti ...\u201c</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>Potvr\u010f odesl\u00e1n\u00ed minc\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Potvrdit n\u00e1vrh transakce</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Zkop\u00edrovat PSBT do schr\u00e1nky</translation>\n+    </message>\n     <message>\n         <source>Send</source>\n-        <translation>Po\u0161li</translation>\n+        <translation>Odeslat</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT zkop\u00edrov\u00e1n</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Pouze sledovan\u00fd z\u016fstatek:</translation>\n     </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n@@ -2343,6 +2527,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Remove this entry</source>\n         <translation>Sma\u017e tento z\u00e1znam</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>\u010c\u00e1stka k odesl\u00e1n\u00ed ve vybran\u00e9 m\u011bn\u011b</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Poplatek se ode\u010dte od pos\u00edlan\u00e9 \u010d\u00e1stky. P\u0159\u00edjemce tak dostane m\u00e9n\u011b bitcoin\u016f, ne\u017e zad\u00e1\u0161 do pole \u010c\u00e1stka. Pokud vybere\u0161 v\u00edce p\u0159\u00edjemc\u016f, tak se poplatek rovnom\u011brn\u011b rozlo\u017e\u00ed.</translation>\n@@ -2469,6 +2657,14 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Bitcoinov\u00e1 adresa, kterou je zpr\u00e1va podeps\u00e1na</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Podepsan\u00e1 zpr\u00e1va na ov\u011b\u0159en\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>Podpis dan\u00fd p\u0159i podpisu zpr\u00e1vy</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Ov\u011b\u0159 zpr\u00e1vu, aby ses ujistil, \u017ee byla podeps\u00e1na danou bitcoinovou adresou</translation>\n@@ -2501,6 +2697,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Odem\u010den\u00ed pen\u011b\u017eenky bylo zru\u0161eno.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Bez chyby</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>Soukrom\u00fd kl\u00ed\u010d pro zadanou adresu nen\u00ed dostupn\u00fd.</translation>\n@@ -2675,6 +2875,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Output index</source>\n         <translation>Po\u0159ad\u00ed v\u00fdstupu</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(Certifik\u00e1t nebyl ov\u011b\u0159en)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Obchodn\u00edk</translation>\n@@ -2998,6 +3202,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Close wallet</source>\n         <translation>Zav\u0159\u00edt pen\u011b\u017eenku</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>Opravdu chcete zav\u0159\u00edt pen\u011b\u017eenku &lt;i&gt;%1&lt;/i&gt;?</translation>\n+    </message>\n     <message>\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>Zav\u0159en\u00ed pen\u011b\u017eenky na p\u0159\u00edli\u0161 dlouhou dobu m\u016f\u017ee vy\u00fastit v pot\u0159ebu resynchronizace cel\u00e9ho blockchainu pokud je zapnut\u00e9 pro\u0159ez\u00e1v\u00e1n\u00ed.</translation>\n@@ -3026,7 +3234,11 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n     </message>\n     <message>\n         <source>Do you want to increase the fee?</source>\n-        <translation>Chce\u0161 poplatek nav\u00fd\u0161it?</translation>\n+        <translation>Chcete nav\u00fd\u0161it poplatek?</translation>\n+    </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Chcete napl\u00e1novat tuhle transakci s nav\u00fd\u0161en\u00edm poplatku?</translation>\n     </message>\n     <message>\n         <source>Current fee:</source>\n@@ -3044,6 +3256,14 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Confirm fee bump</source>\n         <translation>Potvr\u010f nav\u00fd\u0161en\u00ed poplatku</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Nelze navrhnout transakci.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT zkop\u00edrov\u00e1no</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>Nem\u016f\u017eu podepsat transakci.</translation>\n@@ -3210,6 +3430,14 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Corrupted block database detected</source>\n         <translation>Bylo zji\u0161t\u011bno po\u0161kozen\u00ed datab\u00e1ze blok\u016f</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Soubor asmap nelze naj\u00edt %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Soubor asmap nelze analyzovat %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Chce\u0161 p\u0159estav\u011bt datab\u00e1zi blok\u016f hned te\u010f?</translation>\n@@ -3266,6 +3494,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Initialization sanity check failed. %s is shutting down.</source>\n         <translation>Selhala \u00favodn\u00ed zevrubn\u00e1 prov\u011brka. %s se ukon\u010duje.</translation>\n     </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>Neplatn\u00e9 opr\u00e1vnenie P2P: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>Neplatn\u00e1 \u010d\u00e1stka pro -%s=&lt;\u010d\u00e1stka&gt;: '%s'</translation>\n@@ -3282,6 +3514,14 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>Zadan\u00fd adres\u00e1\u0159 blok\u016f \"%s\" neexistuje.</translation>\n     </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Nezn\u00e1m\u00fd typ adresy '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>Nezn\u00e1m\u00fd typ zm\u011bny '%s'</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>Aktualizuje se txindex datab\u00e1ze</translation>\n@@ -3290,6 +3530,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Loading P2P addresses...</source>\n         <translation>Na\u010d\u00edt\u00e1m P2P adresy\u2026</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>Chyba: M\u00edsto na disku je p\u0159\u00edli\u0161 mal\u00e9!</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>Na\u010d\u00edt\u00e1m seznam klateb...</translation>\n@@ -3398,6 +3642,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>V r\u00e1mci -whitebind je t\u0159eba specifikovat i port: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>Re\u017eim pro\u0159ez\u00e1v\u00e1n\u00ed nen\u00ed kompatibiln\u00ed s -blockfilterindex.</translation>\n+    </message>\n     <message>\n         <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation>Omezuji -maxconnections z %d na %d kv\u016fli syst\u00e9mov\u00fdm omezen\u00edm.</translation>\n@@ -3456,6 +3704,10 @@ Pozn\u00e1mka: Jeliko\u017e je poplatek po\u010d\u00edtan\u00fd za bajt, poplatek o hodnot\u011b \"100 sa\n         <source>Unable to generate initial keys</source>\n         <translation>Nepoda\u0159ilo se mi vygenerovat po\u010d\u00e1te\u010dn\u00ed kl\u00ed\u010de</translation>\n     </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>Nezn\u00e1m\u00e1 -blockfilterindex hodnota %s.</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>Kontroluji pen\u011b\u017eenku/y\u2026</translation>"
      },
      {
        "sha": "a087ebe522b3a7fd61ab01597864783600b00bc6",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Synkroniserede blokke</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Afbildning fra Autonome Systemer (et Internet-Protocol-rutefindingsprefiks) til IP-adresser som bruges til at diversificere knudeforbindelser. Den engelske betegnelse er \"asmap\".</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Autonomt-System-afbildning</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Brugeragent</translation>"
      },
      {
        "sha": "ff272af4433b58a94881fa7a73b0c6e6902f2f83",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 8,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -658,7 +658,7 @@\n     </message>\n     <message>\n         <source>Dust:</source>\n-        <translation>\"Dust\":</translation>\n+        <translation>\"Staub\":</translation>\n     </message>\n     <message>\n         <source>After Fee:</source>\n@@ -808,7 +808,7 @@\n     </message>\n     <message>\n         <source>Wallet Name</source>\n-        <translation>Wallet Name</translation>\n+        <translation>Wallet-Name</translation>\n     </message>\n     <message>\n         <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n@@ -1012,7 +1012,7 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>(%n GB needed for full chain)</source>\n-        <translation><numerusform>(%n GB ben\u00f6tigt f\u00fcr komplette Blockchain)</numerusform><numerusform>(%n GB ben\u00f6tigt f\u00fcr komplette Blockchain)</numerusform></translation>\n+        <translation><numerusform>(%n GB ben\u00f6tigt f\u00fcr komplette Blockchain)</numerusform><numerusform>(%n GB wird die komplette Blockchain ben\u00f6tigen)</numerusform></translation>\n     </message>\n </context>\n <context>\n@@ -1067,7 +1067,7 @@\n     </message>\n     <message>\n         <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n-        <translation>%1 synchronisiert gerade. Es l\u00e4dt Header und Bl\u00f6cke von anderen Nodes und validiert sie bis zum Erreichen der Spitze der Blockkette.</translation>\n+        <translation>%1 synchronisiert gerade. Es l\u00e4dt Header und Bl\u00f6cke von Gegenstellen und validiert sie bis zum Erreichen der Spitze der Blockkette.</translation>\n     </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n@@ -1097,7 +1097,7 @@\n     </message>\n     <message>\n         <source>default wallet</source>\n-        <translation>Standard Wallet</translation>\n+        <translation>Standard-Wallet</translation>\n     </message>\n     <message>\n         <source>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n@@ -1124,7 +1124,7 @@\n     </message>\n     <message>\n         <source>Size of &amp;database cache</source>\n-        <translation>Gr\u00f6\u00dfe des &amp;Datenbankcaches</translation>\n+        <translation>Gr\u00f6\u00dfe des &amp;Datenbankpufferspeichers</translation>\n     </message>\n     <message>\n         <source>Number of script &amp;verification threads</source>\n@@ -1758,7 +1758,7 @@\n     </message>\n     <message>\n         <source>Banned peers</source>\n-        <translation>Gesperrte Peers</translation>\n+        <translation>Gesperrte Gegenstellen</translation>\n     </message>\n     <message>\n         <source>Select a peer to view detailed information.</source>\n@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Synchronisierte Bl\u00f6cke</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Das zugeordnete autonome System zur Diversifizierung der Gegenstellen-Auswahl.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Zugeordnetes AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User-Agent</translation>\n@@ -2266,7 +2274,7 @@ Hinweis: Eine Geb\u00fchr von \"100 Satoshis pro kB\" bei einer Gr\u00f6\u00dfe der Transaktio\n     </message>\n     <message>\n         <source>Dust:</source>\n-        <translation>\"Dust\":</translation>\n+        <translation>\"Staub\":</translation>\n     </message>\n     <message>\n         <source>Hide transaction fee settings</source>"
      },
      {
        "sha": "d4787e62183a8e439a221a0a23fbe25b7f51cb79",
        "filename": "src/qt/locale/bitcoin_el.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_el.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_el.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1773,6 +1773,14 @@\n         <source>Synced Blocks</source>\n         <translation>\u03a3\u03c5\u03b3\u03c7\u03c1\u03bf\u03bd\u03b9\u03c3\u03bc\u03ad\u03bd\u03b1 \u039c\u03c0\u03bb\u03bf\u03ba\u03c2</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>\u03a4\u03bf \u03c7\u03b1\u03c1\u03c4\u03bf\u03b3\u03c1\u03b1\u03c6\u03b7\u03bc\u03ad\u03bd\u03bf \u0391\u03c5\u03c4\u03cc\u03bd\u03bf\u03bc\u03bf \u03a3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2 \u03bf\u03bc\u03bf\u03c4\u03af\u03bc\u03c9\u03bd.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>\u03a7\u03b1\u03c1\u03c4\u03bf\u03b3\u03c1\u03b1\u03c6\u03b7\u03bc\u03ad\u03bd\u03bf \u03c9\u03c2</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agent \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7</translation>"
      },
      {
        "sha": "71467a915b7c084289eb795256bcf74f3263b7e1",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 556,
        "deletions": 273,
        "changes": 829,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -90,7 +90,8 @@\n     </message>\n     <message>\n         <location line=\"+5\"/>\n-        <source>These are your Bitcoin addresses for receiving payments. Use the &apos;Create new receiving address&apos; button in the receive tab to create new addresses.</source>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the &apos;Create new receiving address&apos; button in the receive tab to create new addresses.\n+Signing is only possible with addresses of the type &apos;legacy&apos;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -109,7 +110,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+177\"/>\n+        <location line=\"+179\"/>\n         <source>Export Address List</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -132,7 +133,7 @@\n <context>\n     <name>AddressTableModel</name>\n     <message>\n-        <location filename=\"../addresstablemodel.cpp\" line=\"+165\"/>\n+        <location filename=\"../addresstablemodel.cpp\" line=\"+168\"/>\n         <source>Label</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -175,7 +176,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../askpassphrasedialog.cpp\" line=\"+50\"/>\n+        <location filename=\"../askpassphrasedialog.cpp\" line=\"+51\"/>\n         <source>Encrypt wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -205,7 +206,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n+        <location line=\"+48\"/>\n         <source>Confirm wallet encryption</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -226,7 +227,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-145\"/>\n+        <location line=\"-147\"/>\n         <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -236,7 +237,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+55\"/>\n         <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -325,17 +326,17 @@\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+316\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+322\"/>\n         <source>Sign &amp;message...</source>\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+630\"/>\n+        <location line=\"+668\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-708\"/>\n+        <location line=\"-746\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n@@ -410,7 +411,7 @@\n         <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n-        <location line=\"+18\"/>\n+        <location line=\"+22\"/>\n         <source>Open &amp;URI...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -425,12 +426,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+191\"/>\n+        <location line=\"+210\"/>\n         <source>Wallet:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+339\"/>\n+        <location line=\"+350\"/>\n         <source>Click to disable network activity.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -450,17 +451,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+57\"/>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"+317\"/>\n+        <location line=\"+315\"/>\n         <source>Proxy is &lt;b&gt;enabled&lt;/b&gt;: %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-1028\"/>\n+        <location line=\"-1064\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -515,17 +516,17 @@\n         <translation>Verify messages to ensure they were signed with specified Bitcoin addresses</translation>\n     </message>\n     <message>\n-        <location line=\"+111\"/>\n+        <location line=\"+129\"/>\n         <source>&amp;File</source>\n         <translation>&amp;File</translation>\n     </message>\n     <message>\n-        <location line=\"+15\"/>\n+        <location line=\"+18\"/>\n         <source>&amp;Settings</source>\n         <translation>&amp;Settings</translation>\n     </message>\n     <message>\n-        <location line=\"+59\"/>\n+        <location line=\"+61\"/>\n         <source>&amp;Help</source>\n         <translation>&amp;Help</translation>\n     </message>\n@@ -535,12 +536,12 @@\n         <translation>Tabs toolbar</translation>\n     </message>\n     <message>\n-        <location line=\"-258\"/>\n+        <location line=\"-281\"/>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+71\"/>\n+        <location line=\"+75\"/>\n         <source>Show the list of used sending addresses and labels</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -550,20 +551,20 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+20\"/>\n         <source>&amp;Command-line options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+528\"/>\n+        <location line=\"+555\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n             <numerusform>%n active connections to Bitcoin network</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location line=\"+76\"/>\n+        <location line=\"+80\"/>\n         <source>Indexing blocks on disk...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -596,7 +597,7 @@\n         <translation>Transactions after this will not yet be visible.</translation>\n     </message>\n     <message>\n-        <location line=\"+28\"/>\n+        <location line=\"+25\"/>\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n@@ -611,12 +612,32 @@\n         <translation>Information</translation>\n     </message>\n     <message>\n-        <location line=\"-81\"/>\n+        <location line=\"-78\"/>\n         <source>Up to date</source>\n         <translation>Up to date</translation>\n     </message>\n     <message>\n-        <location line=\"-655\"/>\n+        <location line=\"-694\"/>\n+        <source>&amp;Load PSBT from file...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Load Partially Signed Bitcoin Transaction</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Load PSBT from clipboard...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Load Partially Signed Bitcoin Transaction from clipboard</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Node window</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -661,12 +682,32 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+6\"/>\n+        <source>Close All Wallets...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Close all wallets</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+29\"/>\n+        <location line=\"+2\"/>\n+        <source>&amp;Mask values</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Mask the values in the Overview tab</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+32\"/>\n         <source>default wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -676,7 +717,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+55\"/>\n+        <location line=\"+64\"/>\n         <source>&amp;Window</source>\n         <translation type=\"unfinished\">&amp;Window</translation>\n     </message>\n@@ -696,12 +737,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+238\"/>\n+        <location line=\"+245\"/>\n         <source>%1 client</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+241\"/>\n+        <location line=\"+249\"/>\n         <source>Connecting to peers...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -711,7 +752,7 @@\n         <translation>Catching up...</translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+47\"/>\n         <source>Error: %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -721,7 +762,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+99\"/>\n+        <location line=\"+100\"/>\n         <source>Date: %1\n </source>\n         <translation type=\"unfinished\"></translation>\n@@ -792,8 +833,13 @@\n         <translation>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+384\"/>\n-        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <location line=\"+129\"/>\n+        <source>Original message:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../bitcoin.cpp\" line=\"+418\"/>\n+        <source>A fatal error occurred. %1 can no longer continue safely and will quit.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n@@ -885,7 +931,7 @@\n         <translation type=\"unfinished\">Confirmed</translation>\n     </message>\n     <message>\n-        <location filename=\"../coincontroldialog.cpp\" line=\"+53\"/>\n+        <location filename=\"../coincontroldialog.cpp\" line=\"+54\"/>\n         <source>Copy address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -946,12 +992,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+313\"/>\n+        <location line=\"+302\"/>\n         <source>(%1 locked)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+157\"/>\n+        <location line=\"+155\"/>\n         <source>yes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -971,7 +1017,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+45\"/>\n+        <location line=\"+38\"/>\n         <location line=\"+54\"/>\n         <source>(no label)</source>\n         <translation type=\"unfinished\"></translation>\n@@ -990,12 +1036,12 @@\n <context>\n     <name>CreateWalletActivity</name>\n     <message>\n-        <location filename=\"../walletcontroller.cpp\" line=\"+209\"/>\n+        <location filename=\"../walletcontroller.cpp\" line=\"+241\"/>\n         <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+28\"/>\n         <source>Create wallet failed</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1047,6 +1093,16 @@\n         <source>Make Blank Wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Use descriptors for scriptPubKey management</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Descriptor Wallet</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location filename=\"../createwalletdialog.cpp\" line=\"+19\"/>\n         <source>Create</source>\n@@ -1096,7 +1152,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+75\"/>\n+        <location line=\"+77\"/>\n         <source>The entered address &quot;%1&quot; is not a valid Bitcoin address.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1124,7 +1180,7 @@\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n-        <location filename=\"../intro.cpp\" line=\"+71\"/>\n+        <location filename=\"../intro.cpp\" line=\"+72\"/>\n         <source>A new data directory will be created.</source>\n         <translation>A new data directory will be created.</translation>\n     </message>\n@@ -1152,7 +1208,7 @@\n <context>\n     <name>HelpMessageDialog</name>\n     <message>\n-        <location filename=\"../utilitydialog.cpp\" line=\"+35\"/>\n+        <location filename=\"../utilitydialog.cpp\" line=\"+37\"/>\n         <source>version</source>\n         <translation type=\"unfinished\">version</translation>\n     </message>\n@@ -1304,7 +1360,7 @@\n     <message>\n         <location line=\"+7\"/>\n         <location line=\"+26\"/>\n-        <location filename=\"../modaloverlay.cpp\" line=\"+145\"/>\n+        <location filename=\"../modaloverlay.cpp\" line=\"+153\"/>\n         <source>Unknown...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1345,12 +1401,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../modaloverlay.cpp\" line=\"-111\"/>\n+        <location filename=\"../modaloverlay.cpp\" line=\"-119\"/>\n         <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+117\"/>\n+        <location line=\"+125\"/>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1437,12 +1493,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+38\"/>\n-        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor hidden services:</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+108\"/>\n+        <location line=\"+146\"/>\n         <source>Hide the icon from the system tray.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1611,12 +1662,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n-        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+105\"/>\n+        <location line=\"+130\"/>\n         <source>&amp;Window</source>\n         <translation>&amp;Window</translation>\n     </message>\n@@ -1666,7 +1712,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+464\"/>\n+        <location line=\"+250\"/>\n+        <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor onion services.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor onion services:</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+211\"/>\n         <source>&amp;Third party transaction URLs</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1691,7 +1747,7 @@\n         <translation>default</translation>\n     </message>\n     <message>\n-        <location line=\"+65\"/>\n+        <location line=\"+67\"/>\n         <source>none</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1751,12 +1807,12 @@\n     </message>\n     <message>\n         <location line=\"+62\"/>\n-        <location line=\"+386\"/>\n+        <location line=\"+394\"/>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n         <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n-        <location line=\"-139\"/>\n+        <location line=\"-141\"/>\n         <source>Watch-only:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1766,22 +1822,22 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+17\"/>\n         <source>Your current spendable balance</source>\n         <translation>Your current spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+41\"/>\n+        <location line=\"+42\"/>\n         <source>Pending:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-236\"/>\n+        <location line=\"-242\"/>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n         <translation>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</translation>\n     </message>\n     <message>\n-        <location line=\"+112\"/>\n+        <location line=\"+114\"/>\n         <source>Immature:</source>\n         <translation>Immature:</translation>\n     </message>\n@@ -1791,22 +1847,22 @@\n         <translation>Mined balance that has not yet matured</translation>\n     </message>\n     <message>\n-        <location line=\"-177\"/>\n+        <location line=\"-181\"/>\n         <source>Balances</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+161\"/>\n+        <location line=\"+164\"/>\n         <source>Total:</source>\n         <translation>Total:</translation>\n     </message>\n     <message>\n-        <location line=\"+61\"/>\n+        <location line=\"+63\"/>\n         <source>Your current total balance</source>\n         <translation>Your current total balance</translation>\n     </message>\n     <message>\n-        <location line=\"+92\"/>\n+        <location line=\"+95\"/>\n         <source>Your current balance in watch-only addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1821,20 +1877,178 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-317\"/>\n+        <location line=\"-324\"/>\n         <source>Unconfirmed transactions to watch-only addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+50\"/>\n+        <location line=\"+52\"/>\n         <source>Mined balance in watch-only addresses that has not yet matured</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+128\"/>\n+        <location line=\"+131\"/>\n         <source>Current total balance in watch-only addresses</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location filename=\"../overviewpage.cpp\" line=\"+166\"/>\n+        <source>Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings-&gt;Mask values.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+</context>\n+<context>\n+    <name>PSBTOperationsDialog</name>\n+    <message>\n+        <location filename=\"../forms/psbtoperationsdialog.ui\" line=\"+14\"/>\n+        <source>Dialog</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+72\"/>\n+        <source>Sign Tx</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source>Broadcast Tx</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+20\"/>\n+        <source>Copy to Clipboard</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Save...</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>Close</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location filename=\"../psbtoperationsdialog.cpp\" line=\"+55\"/>\n+        <source>Failed to load transaction: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+18\"/>\n+        <source>Failed to sign transaction: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Could not sign any more inputs.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Signed %1 inputs, but more signatures are still required.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Signed transaction successfully. Transaction is ready to broadcast.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Unknown error processing transaction.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Transaction broadcast successfully! Transaction ID: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Transaction broadcast failed: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>PSBT copied to clipboard.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+23\"/>\n+        <source>Save Transaction Data</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>PSBT saved to disk.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+16\"/>\n+        <source> * Sends %1 to %2</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Unable to calculate transaction fee or total transaction amount.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n+        <source>Pays transaction fee: </source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n+        <source>Total Amount</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>or</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+6\"/>\n+        <source>Transaction has %1 unsigned inputs.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+42\"/>\n+        <source>Transaction is missing some information about inputs.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Transaction still needs signature(s).</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(But this wallet cannot sign transactions.)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>(But this wallet does not have the right keys.)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Transaction is fully signed and ready for broadcast.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+4\"/>\n+        <source>Transaction status is unknown.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>PaymentServer</name>\n@@ -1931,17 +2145,17 @@\n <context>\n     <name>QObject</name>\n     <message>\n-        <location filename=\"../bitcoinunits.cpp\" line=\"+195\"/>\n+        <location filename=\"../bitcoinunits.cpp\" line=\"+209\"/>\n         <source>Amount</source>\n         <translation type=\"unfinished\">Amount</translation>\n     </message>\n     <message>\n-        <location filename=\"../guiutil.cpp\" line=\"+111\"/>\n+        <location filename=\"../guiutil.cpp\" line=\"+108\"/>\n         <source>Enter a Bitcoin address (e.g. %1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+618\"/>\n+        <location line=\"+652\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1957,7 +2171,7 @@\n     </message>\n     <message>\n         <location line=\"+2\"/>\n-        <location line=\"+48\"/>\n+        <location line=\"+26\"/>\n         <source>%1 s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2051,7 +2265,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../bitcoin.cpp\" line=\"+114\"/>\n+        <location filename=\"../bitcoin.cpp\" line=\"+102\"/>\n         <source>Error: Specified data directory &quot;%1&quot; does not exist.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2065,6 +2279,11 @@\n         <source>Error: %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+9\"/>\n+        <source>Error initializing settings: %1</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+65\"/>\n         <source>%1 didn&apos;t yet exit safely...</source>\n@@ -2129,8 +2348,7 @@\n         <location line=\"+23\"/>\n         <location line=\"+36\"/>\n         <location line=\"+23\"/>\n-        <location line=\"+716\"/>\n-        <location line=\"+23\"/>\n+        <location line=\"+710\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n@@ -2148,12 +2366,13 @@\n         <location line=\"+23\"/>\n         <location line=\"+23\"/>\n         <location line=\"+26\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+1121\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+1127\"/>\n+        <location line=\"+8\"/>\n         <source>N/A</source>\n         <translation>N/A</translation>\n     </message>\n     <message>\n-        <location line=\"-1456\"/>\n+        <location line=\"-1427\"/>\n         <source>Client version</source>\n         <translation>Client version</translation>\n     </message>\n@@ -2218,12 +2437,7 @@\n         <translation>Block chain</translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>Current number of blocks</source>\n-        <translation>Current number of blocks</translation>\n-    </message>\n-    <message>\n-        <location line=\"+52\"/>\n+        <location line=\"+59\"/>\n         <source>Memory Pool</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2254,18 +2468,18 @@\n     </message>\n     <message>\n         <location line=\"+80\"/>\n-        <location line=\"+589\"/>\n+        <location line=\"+560\"/>\n         <source>Received</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-509\"/>\n-        <location line=\"+486\"/>\n+        <location line=\"-480\"/>\n+        <location line=\"+457\"/>\n         <source>Sent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-445\"/>\n+        <location line=\"-416\"/>\n         <source>&amp;Peers</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2276,18 +2490,13 @@\n     </message>\n     <message>\n         <location line=\"+65\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-624\"/>\n-        <location line=\"+756\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-637\"/>\n+        <location line=\"+766\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+37\"/>\n-        <source>Whitelisted</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+54\"/>\n         <source>Direction</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2312,7 +2521,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+256\"/>\n+        <location line=\"+233\"/>\n         <source>The mapped Autonomous System used for diversifying peer selection.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2322,18 +2531,23 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-1423\"/>\n-        <location line=\"+1072\"/>\n+        <location line=\"-1394\"/>\n+        <location line=\"+1066\"/>\n         <source>User Agent</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-1146\"/>\n+        <location line=\"-1140\"/>\n         <source>Node window</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+409\"/>\n+        <location line=\"+279\"/>\n+        <source>Current block height</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+130\"/>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2348,17 +2562,17 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+644\"/>\n-        <source>Services</source>\n+        <location line=\"+546\"/>\n+        <source>Permissions</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n         <location line=\"+92\"/>\n-        <source>Ban Score</source>\n+        <source>Services</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n+        <location line=\"+92\"/>\n         <source>Connection Time</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2398,7 +2612,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-1169\"/>\n+        <location line=\"-1140\"/>\n         <source>Last block time</source>\n         <translation>Last block time</translation>\n     </message>\n@@ -2423,7 +2637,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../rpcconsole.cpp\" line=\"-408\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"-416\"/>\n         <source>In:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2521,7 +2735,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+189\"/>\n+        <location line=\"+192\"/>\n         <source>(node id: %1)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2547,17 +2761,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Yes</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n-        <source>No</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+13\"/>\n+        <location line=\"+20\"/>\n         <location line=\"+6\"/>\n         <source>Unknown</source>\n         <translation type=\"unfinished\"></translation>\n@@ -2597,12 +2801,12 @@\n     </message>\n     <message>\n         <location line=\"-39\"/>\n-        <location line=\"+153\"/>\n+        <location line=\"+159\"/>\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-121\"/>\n+        <location line=\"-127\"/>\n         <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2617,7 +2821,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+17\"/>\n+        <location line=\"+23\"/>\n         <source>Clear all fields of the form.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2677,72 +2881,77 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Copy amount</source>\n+        <location line=\"+1\"/>\n+        <source>Copy amount</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+131\"/>\n+        <source>Could not unlock wallet.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Could not generate new %1 address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n-        <location filename=\"../forms/receiverequestdialog.ui\" line=\"+29\"/>\n-        <source>QR Code</source>\n+        <location filename=\"../forms/receiverequestdialog.ui\" line=\"+14\"/>\n+        <source>Request payment to ...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+46\"/>\n-        <source>Copy &amp;URI</source>\n+        <location line=\"+76\"/>\n+        <source>Address:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>Copy &amp;Address</source>\n+        <location line=\"+29\"/>\n+        <source>Amount:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n-        <source>&amp;Save Image...</source>\n+        <location line=\"+29\"/>\n+        <source>Label:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../receiverequestdialog.cpp\" line=\"+64\"/>\n-        <source>Request payment to %1</source>\n+        <location line=\"+32\"/>\n+        <source>Message:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>Payment information</source>\n+        <location line=\"+32\"/>\n+        <source>Wallet:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>URI</source>\n+        <location line=\"+28\"/>\n+        <source>Copy &amp;URI</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Address</source>\n+        <location line=\"+10\"/>\n+        <source>Copy &amp;Address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Amount</source>\n-        <translation type=\"unfinished\">Amount</translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n-        <source>Label</source>\n+        <location line=\"+10\"/>\n+        <source>&amp;Save Image...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Message</source>\n+        <location filename=\"../receiverequestdialog.cpp\" line=\"+49\"/>\n+        <source>Request payment to %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Wallet</source>\n-        <translation type=\"unfinished\">Wallet</translation>\n+        <location filename=\"../forms/receiverequestdialog.ui\" line=\"-221\"/>\n+        <source>Payment information</source>\n+        <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n@@ -2787,7 +2996,7 @@\n     <name>SendCoinsDialog</name>\n     <message>\n         <location filename=\"../forms/sendcoinsdialog.ui\" line=\"+14\"/>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"+622\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"+662\"/>\n         <source>Send Coins</source>\n         <translation>Send Coins</translation>\n     </message>\n@@ -2974,7 +3183,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation>S&amp;end</translation>\n     </message>\n     <message>\n-        <location filename=\"../sendcoinsdialog.cpp\" line=\"-533\"/>\n+        <location filename=\"../sendcoinsdialog.cpp\" line=\"-572\"/>\n         <source>Copy quantity</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3024,7 +3233,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+100\"/>\n+        <location line=\"+90\"/>\n         <source> from wallet &apos;%1&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3039,7 +3248,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+7\"/>\n         <source>Do you want to draft this transaction?</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3049,12 +3258,27 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n-        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <location line=\"+71\"/>\n+        <source>Create Unsigned</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+43\"/>\n+        <location line=\"+44\"/>\n+        <source>Save Transaction Data</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Partially Signed Transaction (Binary) (*.psbt)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>PSBT saved</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"-75\"/>\n         <source>or</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3064,7 +3288,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-22\"/>\n+        <location line=\"-24\"/>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can save or copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+2\"/>\n         <source>Please, review your transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3084,12 +3313,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+7\"/>\n         <source>To review recipient list click &quot;Show Details...&quot;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"+18\"/>\n         <source>Confirm send coins</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3100,21 +3329,11 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Copy PSBT to clipboard</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+0\"/>\n         <source>Send</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+23\"/>\n-        <source>PSBT copied</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+166\"/>\n+        <location line=\"+228\"/>\n         <source>Watch-only balance:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3159,15 +3378,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+125\"/>\n+        <location line=\"+118\"/>\n         <source>Estimated to begin confirmation within %n block(s).</source>\n         <translation>\n             <numerusform>Estimated to begin confirmation within %n block.</numerusform>\n             <numerusform>Estimated to begin confirmation within %n blocks.</numerusform>\n         </translation>\n     </message>\n     <message>\n-        <location line=\"+101\"/>\n+        <location line=\"+100\"/>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3305,7 +3524,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n-        <location filename=\"../utilitydialog.cpp\" line=\"+83\"/>\n+        <location filename=\"../utilitydialog.cpp\" line=\"+85\"/>\n         <source>%1 is shutting down...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3444,7 +3663,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location filename=\"../signverifymessagedialog.cpp\" line=\"+117\"/>\n+        <location filename=\"../signverifymessagedialog.cpp\" line=\"+120\"/>\n         <location line=\"+99\"/>\n         <source>The entered address is invalid.</source>\n         <translation type=\"unfinished\"></translation>\n@@ -3518,7 +3737,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n <context>\n     <name>TrafficGraphWidget</name>\n     <message>\n-        <location filename=\"../trafficgraphwidget.cpp\" line=\"+81\"/>\n+        <location filename=\"../trafficgraphwidget.cpp\" line=\"+82\"/>\n         <source>KB/s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -3764,15 +3983,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation>This pane shows a detailed description of the transaction</translation>\n     </message>\n     <message>\n-        <location filename=\"../transactiondescdialog.cpp\" line=\"+17\"/>\n+        <location filename=\"../transactiondescdialog.cpp\" line=\"+18\"/>\n         <source>Details for %1</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>TransactionTableModel</name>\n     <message>\n-        <location filename=\"../transactiontablemodel.cpp\" line=\"+225\"/>\n+        <location filename=\"../transactiontablemodel.cpp\" line=\"+221\"/>\n         <source>Date</source>\n         <translation type=\"unfinished\">Date</translation>\n     </message>\n@@ -4094,7 +4313,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+171\"/>\n+        <location line=\"+172\"/>\n         <source>Range:</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4107,15 +4326,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n     <message>\n-        <location filename=\"../bitcoingui.cpp\" line=\"+156\"/>\n+        <location filename=\"../bitcoingui.cpp\" line=\"+40\"/>\n         <source>Unit to show amounts in. Click to select another unit.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>WalletController</name>\n     <message>\n-        <location filename=\"../walletcontroller.cpp\" line=\"-211\"/>\n+        <location filename=\"../walletcontroller.cpp\" line=\"-238\"/>\n         <source>Close wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4129,24 +4348,41 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+13\"/>\n+        <source>Close all wallets</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Are you sure you wish to close all wallets?</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n </context>\n <context>\n     <name>WalletFrame</name>\n     <message>\n-        <location filename=\"../walletframe.cpp\" line=\"+28\"/>\n-        <source>No wallet has been loaded.</source>\n+        <location filename=\"../walletframe.cpp\" line=\"+37\"/>\n+        <source>No wallet has been loaded.\n+Go to File &gt; Open Wallet to load a wallet.\n+- OR -</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Create a new wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n </context>\n <context>\n     <name>WalletModel</name>\n     <message>\n-        <location filename=\"../walletmodel.cpp\" line=\"+195\"/>\n+        <location filename=\"../walletmodel.cpp\" line=\"+214\"/>\n         <source>Send Coins</source>\n         <translation type=\"unfinished\">Send Coins</translation>\n     </message>\n     <message>\n-        <location line=\"+288\"/>\n+        <location line=\"+282\"/>\n         <location line=\"+45\"/>\n         <location line=\"+13\"/>\n         <location line=\"+5\"/>\n@@ -4217,7 +4453,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n <context>\n     <name>WalletView</name>\n     <message>\n-        <location filename=\"../walletview.cpp\" line=\"+46\"/>\n+        <location filename=\"../walletview.cpp\" line=\"+51\"/>\n         <source>&amp;Export</source>\n         <translation type=\"unfinished\">&amp;Export</translation>\n     </message>\n@@ -4227,7 +4463,39 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\">Export the data in the current tab to a file</translation>\n     </message>\n     <message>\n-        <location line=\"+182\"/>\n+        <location line=\"+165\"/>\n+        <location line=\"+9\"/>\n+        <location line=\"+10\"/>\n+        <source>Error</source>\n+        <translation type=\"unfinished\">Error</translation>\n+    </message>\n+    <message>\n+        <location line=\"-19\"/>\n+        <source>Unable to decode PSBT from clipboard (invalid base64)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n+        <source>Load Transaction Data</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>Partially Signed Transaction (*.psbt)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>PSBT file must be smaller than 100 MiB</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+10\"/>\n+        <source>Unable to decode PSBT</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+39\"/>\n         <source>Backup Wallet</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4265,7 +4533,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+28\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+27\"/>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4280,12 +4548,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+68\"/>\n-        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+26\"/>\n+        <location line=\"+102\"/>\n         <source>Pruning blockstore...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4295,17 +4558,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-162\"/>\n+        <location line=\"-169\"/>\n         <source>The %s developers</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n-        <source>Can&apos;t generate a change-address key. No keys in the internal keypool and can&apos;t generate any keys.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+7\"/>\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4315,7 +4573,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+9\"/>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4335,17 +4593,17 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+11\"/>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+3\"/>\n+        <location line=\"+6\"/>\n         <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+11\"/>\n         <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4360,32 +4618,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n+        <location line=\"+3\"/>\n         <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n-        <source>%d of last 100 blocks have unexpected version</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>%s corrupt, salvage failed</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+7\"/>\n         <source>-maxmempool must be at least %d MB</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+3\"/>\n         <source>Cannot resolve -%s address: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+3\"/>\n         <source>Change index out of range</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4415,7 +4663,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Do you want to rebuild the block database now?</translation>\n     </message>\n@@ -4460,7 +4708,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation>Error opening block database</translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+5\"/>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n         <translation>Failed to listen on any port. Use -listen=0 if you want this.</translation>\n     </message>\n@@ -4470,7 +4718,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n+        <location line=\"+2\"/>\n         <source>Importing...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4505,7 +4753,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+22\"/>\n+        <location line=\"+23\"/>\n         <source>Specified blocks directory &quot;%s&quot; does not exist.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4525,22 +4773,17 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-46\"/>\n+        <location line=\"-47\"/>\n         <source>Loading P2P addresses...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-15\"/>\n-        <source>Error: Disk space is too low!</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+16\"/>\n+        <location line=\"+1\"/>\n         <source>Loading banlist...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+4\"/>\n+        <location line=\"+5\"/>\n         <source>Not enough file descriptors available.</source>\n         <translation>Not enough file descriptors available.</translation>\n     </message>\n@@ -4610,12 +4853,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-151\"/>\n+        <location line=\"-159\"/>\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+5\"/>\n+        <location line=\"-20\"/>\n+        <source>%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use version 169900 or no version specified.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+14\"/>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: &apos;%s&apos; (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4625,12 +4878,42 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+31\"/>\n+        <location line=\"+2\"/>\n+        <source>This error could occur if this wallet was not shutdown cleanly and was last loaded using a build with a newer version of Berkeley DB. If so, please use the software that last loaded this wallet</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+7\"/>\n+        <source>This is the maximum transaction fee you pay (in addition to the normal fee) to prioritize partial spend avoidance over regular coin selection.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+11\"/>\n+        <source>Transaction needs a change address, but we can&apos;t generate it. Please call keypoolrefill first.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+17\"/>\n         <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+27\"/>\n+        <location line=\"+5\"/>\n+        <source>A fatal internal error occurred, see debug.log for details</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Cannot set -peerblockfilters without -blockfilterindex.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+8\"/>\n+        <source>Disk space is too low!</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+12\"/>\n         <source>Error reading from database, shutting down.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4640,12 +4923,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n+        <location line=\"+1\"/>\n         <source>Error: Disk space is low for %s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+8\"/>\n+        <location line=\"+1\"/>\n+        <source>Error: Keypool ran out, please call keypoolrefill first</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+3\"/>\n+        <source>Fee rate (%s) is lower than the minimum fee rate setting (%s)</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n+    <message>\n+        <location line=\"+5\"/>\n         <source>Invalid -onion address or hostname: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4669,6 +4962,11 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <source>Need to specify a port with -whitebind: &apos;%s&apos;</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n+    <message>\n+        <location line=\"+1\"/>\n+        <source>No proxy server specified. Use -proxy=&lt;ip&gt; or -proxy=&lt;ip:port&gt;.</source>\n+        <translation type=\"unfinished\"></translation>\n+    </message>\n     <message>\n         <location line=\"+3\"/>\n         <source>Prune mode is incompatible with -blockfilterindex.</source>\n@@ -4761,17 +5059,12 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+1\"/>\n-        <source>Zapping all transactions from wallet...</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"-174\"/>\n+        <location line=\"-177\"/>\n         <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+53\"/>\n+        <location line=\"+56\"/>\n         <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4781,22 +5074,17 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+14\"/>\n-        <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+12\"/>\n+        <location line=\"+23\"/>\n         <source>%s is set very high!</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+20\"/>\n+        <location line=\"+23\"/>\n         <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+41\"/>\n+        <location line=\"+42\"/>\n         <source>Starting network threads...</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4836,32 +5124,27 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"-52\"/>\n+        <location line=\"-53\"/>\n         <source>Insufficient funds</source>\n         <translation>Insufficient funds</translation>\n     </message>\n     <message>\n-        <location line=\"-102\"/>\n-        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+12\"/>\n+        <location line=\"-97\"/>\n         <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+41\"/>\n+        <location line=\"+51\"/>\n         <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+21\"/>\n+        <location line=\"+17\"/>\n         <source>Cannot write to data directory &apos;%s&apos;; check permissions.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+39\"/>\n+        <location line=\"+40\"/>\n         <source>Loading block index...</source>\n         <translation>Loading block index...</translation>\n     </message>\n@@ -4871,17 +5154,17 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of &quot;100 satos\n         <translation>Loading wallet...</translation>\n     </message>\n     <message>\n-        <location line=\"-42\"/>\n+        <location line=\"-44\"/>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n     <message>\n-        <location line=\"+51\"/>\n+        <location line=\"+54\"/>\n         <source>Rescanning...</source>\n         <translation>Rescanning...</translation>\n     </message>\n     <message>\n-        <location line=\"-41\"/>\n+        <location line=\"-42\"/>\n         <source>Done loading</source>\n         <translation>Done loading</translation>\n     </message>"
      },
      {
        "sha": "4d943fd53264642ff3baa5accbbfa7514c042bd8",
        "filename": "src/qt/locale/bitcoin_en_GB.ts",
        "status": "modified",
        "additions": 87,
        "deletions": 79,
        "changes": 166,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_en_GB.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_en_GB.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en_GB.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -189,7 +189,7 @@\n     </message>\n     <message>\n         <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n-        <translation>Remember that encrypting your wallet cannot fully protect your Bitcoins from being stolen by malware infecting your computer.</translation>\n+        <translation>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</translation>\n     </message>\n     <message>\n         <source>Wallet to be encrypted</source>\n@@ -255,11 +255,11 @@\n     <name>BitcoinGUI</name>\n     <message>\n         <source>Sign &amp;message...</source>\n-        <translation>Sign &amp;message ...</translation>\n+        <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n         <source>Synchronizing with network...</source>\n-        <translation>Synchronising with network ...</translation>\n+        <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n@@ -303,27 +303,27 @@\n     </message>\n     <message>\n         <source>&amp;Options...</source>\n-        <translation>&amp;Options ...</translation>\n+        <translation>&amp;Options...</translation>\n     </message>\n     <message>\n         <source>Modify configuration options for %1</source>\n         <translation>Modify configuration options for %1</translation>\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>&amp;Encrypt Wallet ...</translation>\n+        <translation>&amp;Encrypt Wallet...</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>&amp;Backup Wallet ...</translation>\n+        <translation>&amp;Backup Wallet...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>&amp;Change Passphrase ...</translation>\n+        <translation>&amp;Change Passphrase...</translation>\n     </message>\n     <message>\n         <source>Open &amp;URI...</source>\n-        <translation>Open &amp;URI ...</translation>\n+        <translation>Open &amp;URI...</translation>\n     </message>\n     <message>\n         <source>Create Wallet...</source>\n@@ -351,11 +351,11 @@\n     </message>\n     <message>\n         <source>Syncing Headers (%1%)...</source>\n-        <translation>Syncing Headers (%1%) ...</translation>\n+        <translation>Syncing Headers (%1%)...</translation>\n     </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n-        <translation>Reindexing blocks on disk ...</translation>\n+        <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n         <source>Proxy is &lt;b&gt;enabled&lt;/b&gt;: %1</source>\n@@ -375,7 +375,7 @@\n     </message>\n     <message>\n         <source>&amp;Verify message...</source>\n-        <translation>&amp;Verify message ...</translation>\n+        <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n         <source>&amp;Send</source>\n@@ -443,11 +443,11 @@\n     </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n-        <translation>Indexing blocks on disk ...</translation>\n+        <translation>Indexing blocks on disk...</translation>\n     </message>\n     <message>\n         <source>Processing blocks on disk...</source>\n-        <translation>Processing blocks on disk ...</translation>\n+        <translation>Processing blocks on disk...</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>Processed %n block(s) of transaction history.</source>\n@@ -499,7 +499,7 @@\n     </message>\n     <message>\n         <source>Open a bitcoin: URI</source>\n-        <translation>Open a Bitcoin: URI</translation>\n+        <translation>Open a bitcoin: URI</translation>\n     </message>\n     <message>\n         <source>Open Wallet</source>\n@@ -511,7 +511,7 @@\n     </message>\n     <message>\n         <source>Close Wallet...</source>\n-        <translation>Close Wallet ...</translation>\n+        <translation>Close Wallet...</translation>\n     </message>\n     <message>\n         <source>Close wallet</source>\n@@ -535,7 +535,7 @@\n     </message>\n     <message>\n         <source>Minimize</source>\n-        <translation>Minimise</translation>\n+        <translation>Minimize</translation>\n     </message>\n     <message>\n         <source>Zoom</source>\n@@ -551,11 +551,11 @@\n     </message>\n     <message>\n         <source>Connecting to peers...</source>\n-        <translation>Connecting to peers ...</translation>\n+        <translation>Connecting to peers...</translation>\n     </message>\n     <message>\n         <source>Catching up...</source>\n-        <translation>Catching up ...</translation>\n+        <translation>Catching up...</translation>\n     </message>\n     <message>\n         <source>Error: %1</source>\n@@ -952,15 +952,15 @@\n     </message>\n     <message>\n         <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n-        <translation>Reverting this setting requires re-downloading the entire Blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</translation>\n+        <translation>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</translation>\n     </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</translation>\n     </message>\n     <message>\n         <source>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</source>\n-        <translation>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterwards to keep your disk usage low.</translation>\n+        <translation>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</translation>\n     </message>\n     <message>\n         <source>Use the default data directory</source>\n@@ -1023,19 +1023,19 @@\n     </message>\n     <message>\n         <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n-        <translation>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronising with the Bitcoin network, as detailed below.</translation>\n+        <translation>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</translation>\n     </message>\n     <message>\n         <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n-        <translation>Attempting to spend Bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</translation>\n+        <translation>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</translation>\n     </message>\n     <message>\n         <source>Number of blocks left</source>\n         <translation>Number of blocks left</translation>\n     </message>\n     <message>\n         <source>Unknown...</source>\n-        <translation>Unknown ...</translation>\n+        <translation>Unknown...</translation>\n     </message>\n     <message>\n         <source>Last block time</source>\n@@ -1051,7 +1051,7 @@\n     </message>\n     <message>\n         <source>calculating...</source>\n-        <translation>calculating ...</translation>\n+        <translation>calculating...</translation>\n     </message>\n     <message>\n         <source>Estimated time left until synced</source>\n@@ -1071,14 +1071,14 @@\n     </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n-        <translation>Unknown. Syncing Headers (%1, %2%) ...</translation>\n+        <translation>Unknown. Syncing Headers (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n         <source>Open bitcoin URI</source>\n-        <translation>Open Bitcoin URI</translation>\n+        <translation>Open bitcoin URI</translation>\n     </message>\n     <message>\n         <source>URI:</source>\n@@ -1101,7 +1101,7 @@\n     </message>\n     <message>\n         <source>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n-        <translation>Opening Wallet &lt;b&gt;%1&lt;/b&gt; ...</translation>\n+        <translation>Opening Wallet &lt;b&gt;%1&lt;/b&gt;...</translation>\n     </message>\n </context>\n <context>\n@@ -1152,7 +1152,7 @@\n     </message>\n     <message>\n         <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n-        <translation>Minimise instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</translation>\n+        <translation>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</translation>\n     </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n@@ -1284,15 +1284,15 @@\n     </message>\n     <message>\n         <source>Show only a tray icon after minimizing the window.</source>\n-        <translation>Show on a tray icon after minimising the window.</translation>\n+        <translation>Show only a tray icon after minimizing the window.</translation>\n     </message>\n     <message>\n         <source>&amp;Minimize to the tray instead of the taskbar</source>\n-        <translation>&amp;Minimise to the tray instead of the task bar</translation>\n+        <translation>&amp;Minimize to the tray instead of the taskbar</translation>\n     </message>\n     <message>\n         <source>M&amp;inimize on close</source>\n-        <translation>M&amp;inimise on close</translation>\n+        <translation>M&amp;inimize on close</translation>\n     </message>\n     <message>\n         <source>&amp;Display</source>\n@@ -1387,7 +1387,7 @@\n     </message>\n     <message>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n-        <translation>The displayed information may be out of date. Your Wallet automatically synchronises with the Bitcoin Network after a connection is established, but this process has not been completed yet.</translation>\n+        <translation>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</translation>\n     </message>\n     <message>\n         <source>Watch-only:</source>\n@@ -1462,7 +1462,7 @@\n     </message>\n     <message>\n         <source>Cannot start bitcoin: click-to-pay handler</source>\n-        <translation>Cannot start Bitcoin: click-to-pay handler</translation>\n+        <translation>Cannot start bitcoin: click-to-pay handler</translation>\n     </message>\n     <message>\n         <source>URI handling</source>\n@@ -1620,7 +1620,7 @@\n     </message>\n     <message>\n         <source>%1 didn't yet exit safely...</source>\n-        <translation>%1 didn't exit safely yet ...</translation>\n+        <translation>%1 didn't yet exit safely...</translation>\n     </message>\n     <message>\n         <source>unknown</source>\n@@ -1631,7 +1631,7 @@\n     <name>QRImageWidget</name>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation>&amp;Save Image ...</translation>\n+        <translation>&amp;Save Image...</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Image</source>\n@@ -1698,7 +1698,7 @@\n     </message>\n     <message>\n         <source>Startup time</source>\n-        <translation>Start up time</translation>\n+        <translation>Startup time</translation>\n     </message>\n     <message>\n         <source>Network</source>\n@@ -1734,7 +1734,7 @@\n     </message>\n     <message>\n         <source>Wallet: </source>\n-        <translation>Wallet:</translation>\n+        <translation>Wallet: </translation>\n     </message>\n     <message>\n         <source>(none)</source>\n@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Synced Blocks</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>The mapped Autonomous System used for diversifying peer selection.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapped AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User Agent</translation>\n@@ -1930,7 +1938,7 @@\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</source>\n-        <translation>WARNING: Scammers have been active, telling users to type commands here and stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</translation>\n+        <translation>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</translation>\n     </message>\n     <message>\n         <source>Network activity disabled</source>\n@@ -2088,7 +2096,7 @@\n     </message>\n     <message>\n         <source>&amp;Save Image...</source>\n-        <translation>&amp;Save Image ...</translation>\n+        <translation>&amp;Save Image...</translation>\n     </message>\n     <message>\n         <source>Request payment to %1</source>\n@@ -2166,7 +2174,7 @@\n     </message>\n     <message>\n         <source>Inputs...</source>\n-        <translation>Inputs ...</translation>\n+        <translation>Inputs...</translation>\n     </message>\n     <message>\n         <source>automatically selected</source>\n@@ -2214,11 +2222,11 @@\n     </message>\n     <message>\n         <source>Choose...</source>\n-        <translation>Choose ...</translation>\n+        <translation>Choose...</translation>\n     </message>\n     <message>\n         <source>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</source>\n-        <translation>Using the fallback fee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</translation>\n+        <translation>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until you have validated the complete chain.</translation>\n     </message>\n     <message>\n         <source>Warning: Fee estimation is currently not possible.</source>\n@@ -2250,7 +2258,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>(Smart fee not initialized yet. This usually takes a few blocks...)</source>\n-        <translation>(Smart fee not initialised yet. This usually takes a few blocks ...)</translation>\n+        <translation>(Smart fee not initialized yet. This usually takes a few blocks...)</translation>\n     </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n@@ -2278,7 +2286,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>A too low fee might result in a never confirming transaction (read the tooltip)</source>\n-        <translation>A too low fee might result in a never-confirming transaction (read the tooltip)</translation>\n+        <translation>A too low fee might result in a never confirming transaction (read the tooltip)</translation>\n     </message>\n     <message>\n         <source>Confirmation time target:</source>\n@@ -2568,7 +2576,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     <name>ShutdownWindow</name>\n     <message>\n         <source>%1 is shutting down...</source>\n-        <translation>%1 is shutting down ...</translation>\n+        <translation>%1 is shutting down...</translation>\n     </message>\n     <message>\n         <source>Do not shut down the computer until this window disappears.</source>\n@@ -3050,7 +3058,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Range...</source>\n-        <translation>Range ...</translation>\n+        <translation>Range...</translation>\n     </message>\n     <message>\n         <source>Received with</source>\n@@ -3074,7 +3082,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Enter address, transaction id, or label to search</source>\n-        <translation>Enter address, transaction id or label to search.</translation>\n+        <translation>Enter address, transaction id, or label to search</translation>\n     </message>\n     <message>\n         <source>Min amount</source>\n@@ -3222,7 +3230,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Increasing transaction fee failed</source>\n-        <translation>Increasing transaction fee failed.</translation>\n+        <translation>Increasing transaction fee failed</translation>\n     </message>\n     <message>\n         <source>Do you want to increase the fee?</source>\n@@ -3262,7 +3270,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Could not commit transaction</source>\n-        <translation>Could not commit transaction.</translation>\n+        <translation>Could not commit transaction</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n@@ -3312,7 +3320,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     <name>bitcoin-core</name>\n     <message>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n-        <translation>Distributed under the MIT software license, see the accompanying file %s or %s.</translation>\n+        <translation>Distributed under the MIT software license, see the accompanying file %s or %s</translation>\n     </message>\n     <message>\n         <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n@@ -3328,7 +3336,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Pruning blockstore...</source>\n-        <translation>Pruning blockstore ...</translation>\n+        <translation>Pruning blockstore...</translation>\n     </message>\n     <message>\n         <source>Unable to start HTTP server. See debug log for details.</source>\n@@ -3372,15 +3380,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n-        <translation>This is the transaction fee you may discard if change is smaller than dust at this level.</translation>\n+        <translation>This is the transaction fee you may discard if change is smaller than dust at this level</translation>\n     </message>\n     <message>\n         <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n         <translation>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</translation>\n     </message>\n     <message>\n         <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n-        <translation>Unable to rewind the database to a pre-fork state. You will need to re-download the blockchain</translation>\n+        <translation>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</translation>\n     </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n@@ -3392,7 +3400,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>%d of last 100 blocks have unexpected version</source>\n-        <translation>%d of last 100 blocks have unexpected version.</translation>\n+        <translation>%d of last 100 blocks have unexpected version</translation>\n     </message>\n     <message>\n         <source>%s corrupt, salvage failed</source>\n@@ -3436,11 +3444,11 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Error initializing block database</source>\n-        <translation>Error initialising block database</translation>\n+        <translation>Error initializing block database</translation>\n     </message>\n     <message>\n         <source>Error initializing wallet database environment %s!</source>\n-        <translation>Error initialising wallet database environment %s!</translation>\n+        <translation>Error initializing wallet database environment %s!</translation>\n     </message>\n     <message>\n         <source>Error loading %s</source>\n@@ -3472,19 +3480,19 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Failed to rescan the wallet during initialization</source>\n-        <translation>Failed to rescan the wallet during initialisation.</translation>\n+        <translation>Failed to rescan the wallet during initialization</translation>\n     </message>\n     <message>\n         <source>Importing...</source>\n-        <translation>Importing ...</translation>\n+        <translation>Importing...</translation>\n     </message>\n     <message>\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>Incorrect or no genesis block found. Wrong datadir for network?</translation>\n     </message>\n     <message>\n         <source>Initialization sanity check failed. %s is shutting down.</source>\n-        <translation>Initialisation sanity check failed. %s is shutting down.</translation>\n+        <translation>Initialization sanity check failed. %s is shutting down.</translation>\n     </message>\n     <message>\n         <source>Invalid P2P permission: '%s'</source>\n@@ -3520,15 +3528,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Loading P2P addresses...</source>\n-        <translation>Loading P2P addresses ...</translation>\n+        <translation>Loading P2P addresses...</translation>\n     </message>\n     <message>\n         <source>Error: Disk space is too low!</source>\n         <translation>Error: Disk space is too low!</translation>\n     </message>\n     <message>\n         <source>Loading banlist...</source>\n-        <translation>Loading banlist ...</translation>\n+        <translation>Loading banlist...</translation>\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n@@ -3544,19 +3552,19 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Replaying blocks...</source>\n-        <translation>Replaying blocks ...</translation>\n+        <translation>Replaying blocks...</translation>\n     </message>\n     <message>\n         <source>Rewinding blocks...</source>\n-        <translation>Rewinding blocks ...</translation>\n+        <translation>Rewinding blocks...</translation>\n     </message>\n     <message>\n         <source>The source code is available from %s.</source>\n         <translation>The source code is available from %s.</translation>\n     </message>\n     <message>\n         <source>Transaction fee and change calculation failed</source>\n-        <translation>Transaction fee and change calculation failed.</translation>\n+        <translation>Transaction fee and change calculation failed</translation>\n     </message>\n     <message>\n         <source>Unable to bind to %s on this computer. %s is probably already running.</source>\n@@ -3580,7 +3588,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Verifying blocks...</source>\n-        <translation>Verifying blocks ...</translation>\n+        <translation>Verifying blocks...</translation>\n     </message>\n     <message>\n         <source>Wallet needed to be rewritten: restart %s to complete</source>\n@@ -3608,7 +3616,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Error upgrading chainstate database</source>\n-        <translation>Error upgrading chainstate database.</translation>\n+        <translation>Error upgrading chainstate database</translation>\n     </message>\n     <message>\n         <source>Error: Disk space is low for %s</source>\n@@ -3652,15 +3660,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Specified -walletdir \"%s\" does not exist</source>\n-        <translation>Specified -walletdir \"%s\" does not exist.</translation>\n+        <translation>Specified -walletdir \"%s\" does not exist</translation>\n     </message>\n     <message>\n         <source>Specified -walletdir \"%s\" is a relative path</source>\n-        <translation>Specified -walletdir \"%s\" is a relative path.</translation>\n+        <translation>Specified -walletdir \"%s\" is a relative path</translation>\n     </message>\n     <message>\n         <source>Specified -walletdir \"%s\" is not a directory</source>\n-        <translation>Specified -walletdir \"%s\" is not a directory.</translation>\n+        <translation>Specified -walletdir \"%s\" is not a directory</translation>\n     </message>\n     <message>\n         <source>The specified config file %s does not exist\n@@ -3694,23 +3702,23 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Unable to generate initial keys</source>\n-        <translation>Unable to generate initial keys.</translation>\n+        <translation>Unable to generate initial keys</translation>\n     </message>\n     <message>\n         <source>Unknown -blockfilterindex value %s.</source>\n         <translation>Unknown -blockfilterindex value %s.</translation>\n     </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n-        <translation>Verifying wallet(s) ...</translation>\n+        <translation>Verifying wallet(s)...</translation>\n     </message>\n     <message>\n         <source>Warning: unknown new rules activated (versionbit %i)</source>\n         <translation>Warning: unknown new rules activated (versionbit %i)</translation>\n     </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n-        <translation>Zapping all transactions from wallet ...</translation>\n+        <translation>Zapping all transactions from wallet...</translation>\n     </message>\n     <message>\n         <source>-maxtxfee is set very high! Fees this large could be paid on a single transaction.</source>\n@@ -3738,7 +3746,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Starting network threads...</source>\n-        <translation>Starting network threads ...</translation>\n+        <translation>Starting network threads...</translation>\n     </message>\n     <message>\n         <source>The wallet will avoid paying less than the minimum relay fee.</source>\n@@ -3754,15 +3762,15 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Transaction amounts must not be negative</source>\n-        <translation>Transaction amounts must not be negative.</translation>\n+        <translation>Transaction amounts must not be negative</translation>\n     </message>\n     <message>\n         <source>Transaction has too long of a mempool chain</source>\n-        <translation>Transaction has too long of a mempool chain.</translation>\n+        <translation>Transaction has too long of a mempool chain</translation>\n     </message>\n     <message>\n         <source>Transaction must have at least one recipient</source>\n-        <translation>Transaction must have at least one recipient.</translation>\n+        <translation>Transaction must have at least one recipient</translation>\n     </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n@@ -3790,19 +3798,19 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Loading block index...</source>\n-        <translation>Loading block index ...</translation>\n+        <translation>Loading block index...</translation>\n     </message>\n     <message>\n         <source>Loading wallet...</source>\n-        <translation>Loading wallet ...</translation>\n+        <translation>Loading wallet...</translation>\n     </message>\n     <message>\n         <source>Cannot downgrade wallet</source>\n         <translation>Cannot downgrade wallet</translation>\n     </message>\n     <message>\n         <source>Rescanning...</source>\n-        <translation>Rescanning ...</translation>\n+        <translation>Rescanning...</translation>\n     </message>\n     <message>\n         <source>Done loading</source>"
      },
      {
        "sha": "e4c28c4704765ac284a3659f70db764f9edc0946",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 112,
        "deletions": 32,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -395,7 +395,7 @@\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n-        <translation>Cifrar las claves privadas de su monedero</translation>\n+        <translation>Encriptar las claves privadas que pertenecen a su billetera</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n@@ -471,7 +471,7 @@\n     </message>\n     <message>\n         <source>Warning</source>\n-        <translation>Aviso</translation>\n+        <translation>Advertencia</translation>\n     </message>\n     <message>\n         <source>Information</source>\n@@ -519,7 +519,7 @@\n     </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n-        <translation>Muestre el mensaje de ayuda %1 para obtener una lista con posibles opciones de l\u00ednea de comandos de Bitcoin</translation>\n+        <translation>Muestra el mensaje de ayuda %1 para obtener una lista con posibles opciones de l\u00ednea de comandos de Bitcoin.</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n@@ -812,7 +812,7 @@\n     </message>\n     <message>\n         <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n-        <translation>Encriptar monedero. El monedero ser\u00e1 cifrado con la contrase\u00f1a que elija.</translation>\n+        <translation>Cifrar monedero. El monedero ser\u00e1 cifrado con la contrase\u00f1a que elija.</translation>\n     </message>\n     <message>\n         <source>Encrypt Wallet</source>\n@@ -1093,7 +1093,7 @@\n     </message>\n     <message>\n         <source>Open wallet warning</source>\n-        <translation>Advertencia sobre apertura de monedero</translation>\n+        <translation>Aviso de apertura de monedero</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n@@ -1114,6 +1114,10 @@\n         <source>&amp;Main</source>\n         <translation>&amp;Principal</translation>\n     </message>\n+    <message>\n+        <source>Automatically start %1 after logging in to the system.</source>\n+        <translation>Iniciar automaticamente %1 al encender el sistema.</translation>\n+    </message>\n     <message>\n         <source>&amp;Start %1 on system login</source>\n         <translation>&amp; Comience %1 en el inicio de sesi\u00f3n del sistema</translation>\n@@ -1164,7 +1168,7 @@\n     </message>\n     <message>\n         <source>Reset all client options to default.</source>\n-        <translation>Restablecer todas las opciones del cliente a las predeterminadas.</translation>\n+        <translation>Restablecer todas las opciones predeterminadas del cliente.</translation>\n     </message>\n     <message>\n         <source>&amp;Reset Options</source>\n@@ -1220,7 +1224,7 @@\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n-        <translation>Abrir autom\u00e1ticamente el puerto del cliente Bitcoin en el router. Esta opci\u00f3n solo funciona si el router admite UPnP y est\u00e1 activado.</translation>\n+        <translation>Abrir autom\u00e1ticamente el puerto del cliente Bitcoin en el router. Esta opci\u00f3n solo funciona cuando el router admite UPnP y est\u00e1 activado.</translation>\n     </message>\n     <message>\n         <source>Map port using &amp;UPnP</source>\n@@ -1236,7 +1240,7 @@\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n-        <translation>Con\u00e9ctese a la red de Bitcoin a trav\u00e9s de un proxy SOCKS5.</translation>\n+        <translation>Conectar a la red de Bitcoin a trav\u00e9s de un proxy SOCKS5.</translation>\n     </message>\n     <message>\n         <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n@@ -1280,7 +1284,7 @@\n     </message>\n     <message>\n         <source>Show only a tray icon after minimizing the window.</source>\n-        <translation>Minimizar la ventana a la bandeja de iconos del sistema.</translation>\n+        <translation>Mostrar solo un icono de sistema despu\u00e9s de minimizar la ventana</translation>\n     </message>\n     <message>\n         <source>&amp;Minimize to the tray instead of the taskbar</source>\n@@ -1379,7 +1383,7 @@\n     <name>OverviewPage</name>\n     <message>\n         <source>Form</source>\n-        <translation>Desde</translation>\n+        <translation>Formulario</translation>\n     </message>\n     <message>\n         <source>The displayed information may be out of date. Your wallet automatically synchronizes with the Bitcoin network after a connection is established, but this process has not completed yet.</source>\n@@ -1395,15 +1399,15 @@\n     </message>\n     <message>\n         <source>Your current spendable balance</source>\n-        <translation>Su balance actual gastable</translation>\n+        <translation>Su saldo actual gastable</translation>\n     </message>\n     <message>\n         <source>Pending:</source>\n         <translation>Pendiente:</translation>\n     </message>\n     <message>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n-        <translation>Total de transacciones que deben ser confirmadas y que no cuentan aun con el balance gastable necesario.</translation>\n+        <translation>Total de transacciones que deben ser confirmadas y que no cuentan con el saldo disponible necesario.</translation>\n     </message>\n     <message>\n         <source>Immature:</source>\n@@ -1784,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Bloques sincronizados</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>El Sistema Aut\u00f3nomo mapeado utilizado para la selecci\u00f3n diversificada de participantes.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>SA Mapeado</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agente de usuario</translation>\n@@ -2003,6 +2015,14 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Monto opcional a solicitar. Dejarlo vac\u00edo o en cero para no solicitar un monto espec\u00edfico.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Etiqueta opcional para asociar con la nueva direcci\u00f3n de recepci\u00f3n (utilizado por ti para identificar una factura). Tambi\u00e9n esta asociado a la solicitud de pago.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Mensaje opcional asociado a la solicitud de pago que podr\u00eda ser presentado al remitente </translation>\n+    </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n         <translation>Crear nueva direcci\u00f3n para recepci\u00f3n</translation>\n@@ -2190,11 +2210,11 @@\n     </message>\n     <message>\n         <source>If this is activated, but the change address is empty or invalid, change will be sent to a newly generated address.</source>\n-        <translation>Al activarse, si la direcci\u00f3n de cambio est\u00e1 vac\u00eda o es inv\u00e1lida, las monedas ser\u00e1n enviadas a una nueva direcci\u00f3n generada.</translation>\n+        <translation>Si se activa, pero la direcci\u00f3n de cambio est\u00e1 vac\u00eda o es inv\u00e1lida, las monedas ser\u00e1n enviadas a una nueva direcci\u00f3n generada.</translation>\n     </message>\n     <message>\n         <source>Custom change address</source>\n-        <translation>Direcci\u00f3n propia</translation>\n+        <translation>Direcci\u00f3n de cambio personalizada.</translation>\n     </message>\n     <message>\n         <source>Transaction Fee:</source>\n@@ -2256,6 +2276,10 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Dust:</source>\n         <translation>Polvo:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Esconder ajustes de tarifas de transacci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Cuando hay menos volumen de transacciones que espacio en los bloques, los mineros y los nodos de retransmisi\u00f3n pueden imponer una comisi\u00f3n m\u00ednima. Pagar solo esta comisi\u00f3n m\u00ednima est\u00e1 bien, pero tenga en cuenta que esto puede resultar en una transacci\u00f3n nunca confirmada una vez que haya m\u00e1s demanda de transacciones de Bitcoin de la que la red puede procesar.</translation>\n@@ -2330,7 +2354,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source> from wallet '%1'</source>\n-        <translation>de monedero %1</translation>\n+        <translation>desde el monedero %1</translation>\n     </message>\n     <message>\n         <source>%1 to '%2'</source>\n@@ -2340,6 +2364,10 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>%1 to %2</source>\n         <translation>%1 a %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\u00bfDesea preparar esta transacci\u00f3n?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u00bfSeguro que quiere enviar?</translation>\n@@ -2376,10 +2404,26 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Confirm send coins</source>\n         <translation>Confirmar el env\u00edo de monedas</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Confirme la propuesta de transaccion</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Copiar la TBPF al portapapeles</translation>\n+    </message>\n     <message>\n         <source>Send</source>\n         <translation>Enviar</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>TBPF copiada</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Visualizaci\u00f3n unicamente balance:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>La direcci\u00f3n de env\u00edo no es v\u00e1lida. Por favor, rev\u00edsela.</translation>\n@@ -2398,7 +2442,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Duplicate address found: addresses should only be used once each.</source>\n-        <translation>Direcci\u00f3n duplicada encontrada: la direcci\u00f3n s\u00f3lo deber\u00eda ser utilizada una vez por cada uso.</translation>\n+        <translation>Direcci\u00f3n duplicada encontrada: las direcciones s\u00f3lo deber\u00edan ser utilizadas una vez.</translation>\n     </message>\n     <message>\n         <source>Transaction creation failed!</source>\n@@ -2418,19 +2462,19 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n-        <translation>Peligro: Direcci\u00f3n de Bitcoin inv\u00e1lida</translation>\n+        <translation>Advertencia: Direcci\u00f3n de Bitcoin inv\u00e1lida.</translation>\n     </message>\n     <message>\n         <source>Warning: Unknown change address</source>\n-        <translation>Peligro: Direcci\u00f3n de cambio desconocida</translation>\n+        <translation>Advertencia: Direcci\u00f3n de cambio desconocida.</translation>\n     </message>\n     <message>\n         <source>Confirm custom change address</source>\n         <translation>Confirma direcci\u00f3n de cambio personalizada</translation>\n     </message>\n     <message>\n         <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n-        <translation>La direcci\u00f3n de cambio seleccionada no es parte de su monedero. Parte de sus fondos ser\u00e1n enviados a esta direcci\u00f3n. \u00bfEst\u00e1 seguro?</translation>\n+        <translation>La direcci\u00f3n que ha seleccionado para el cambio no es parte de su monedero. Parte o todos sus fondos pueden ser enviados a esta direcci\u00f3n. \u00bfEst\u00e1 seguro?</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n@@ -2475,9 +2519,13 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Remove this entry</source>\n         <translation>Eliminar esta entrada.</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>El monto a enviar en las unidades seleccionadas</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n-        <translation>La comisi\u00f3n ser\u00e1 deducida de la cantidad que sea enviada. El destinatario recibir\u00e1 menos bitcoins que la cantidad introducida en el campo Cantidad. Si hay varios destinatarios seleccionados, la comisi\u00f3n ser\u00e1 distribuida a partes iguales.</translation>\n+        <translation>La comisi\u00f3n ser\u00e1 deducida de la cantidad enviada. El destinatario recibir\u00e1 menos bitcoins que la cantidad introducida en el campo Cantidad. Si hay varios destinatarios seleccionados, la comisi\u00f3n ser\u00e1 distribuida a partes iguales.</translation>\n     </message>\n     <message>\n         <source>S&amp;ubtract fee from amount</source>\n@@ -2509,7 +2557,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Pay To:</source>\n-        <translation>Paga a:</translation>\n+        <translation>Pagar a:</translation>\n     </message>\n     <message>\n         <source>Memo:</source>\n@@ -2601,6 +2649,14 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>La direcci\u00f3n Bitcoin con la que se firm\u00f3 el mensaje</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>El mensaje firmado para verificar</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>La firma proporcionada cuando el mensaje fue firmado</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Verificar el mensaje para comprobar que fue firmado con la direcci\u00f3n Bitcoin indicada</translation>\n@@ -2633,6 +2689,10 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Wallet unlock was cancelled.</source>\n         <translation>El desbloqueo del monedero fue cancelado.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Sin error </translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>La llave privada para la direcci\u00f3n introducida no est\u00e1 disponible.</translation>\n@@ -2817,7 +2877,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>Los bitcoins generados deben madurar %1 bloques antes de que puedan gastarse. Cuando gener\u00f3 este bloque, se transmiti\u00f3 a la red para que se a\u00f1adiera a la cadena de bloques. Si no consigue entrar en la cadena, su estado cambiar\u00e1 a \"no aceptado\" y ya no se podr\u00e1 gastar. Esto puede ocurrir ocasionalmente si otro nodo genera un bloque a pocos segundos del suyo.</translation>\n+        <translation>Las monedas generadas deben madurar %1 bloques antes de que puedan gastarse. Cuando gener\u00f3 este bloque, fue retransmitido a la red para que se a\u00f1adiera a la cadena de bloques. Si no consigue entrar en la cadena, su estado cambiar\u00e1 a \"no aceptado\" y ya no se podr\u00e1 gastar. Esto puede ocurrir ocasionalmente si otro nodo genera un bloque a pocos segundos del suyo.</translation>\n     </message>\n     <message>\n         <source>Debug information</source>\n@@ -2899,7 +2959,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n-        <translation>Inmaduro (%1 confirmaci\u00f3n(es), Estar\u00e1n disponibles despu\u00e9s de %2)</translation>\n+        <translation>Inmaduro (%1 confirmaciones, Estar\u00e1 disponible despu\u00e9s de %2)</translation>\n     </message>\n     <message>\n         <source>Generated but not accepted</source>\n@@ -3168,6 +3228,10 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Do you want to increase the fee?</source>\n         <translation>\u00bfDesea incrementar la comisi\u00f3n?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>\u00bfDesea preparar una transacci\u00f3n con aumento de comisi\u00f3n ?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>Comisi\u00f3n actual:</translation>\n@@ -3184,6 +3248,14 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Confirm fee bump</source>\n         <translation>Confirmar incremento de comisi\u00f3n</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>No se pudo preparar la transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>TBPF copiada</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>No se ha podido firmar la transacci\u00f3n.</translation>\n@@ -3272,7 +3344,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n-        <translation>No se puede bloquear el directorio %s. %s ya se est\u00e1 ejecutando.</translation>\n+        <translation>No se puede bloquear el directorio %s. %s probablemente ya se est\u00e1 ejecutando.</translation>\n     </message>\n     <message>\n         <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n@@ -3300,7 +3372,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n-        <translation>Esta es la cuota de transacci\u00f3n que puede descartar si el cambio es m\u00e1s peque\u00f1o que el polvo a este nivel.</translation>\n+        <translation>Esta es la comisi\u00f3n por transacci\u00f3n que puede descartar si el cambio es m\u00e1s peque\u00f1o que el polvo a este nivel.</translation>\n     </message>\n     <message>\n         <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n@@ -3332,7 +3404,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Cannot resolve -%s address: '%s'</source>\n-        <translation>No se puede resolver -%s direccion: '%s'</translation>\n+        <translation>No se puede resolver -%s direcci\u00f3n: '%s'</translation>\n     </message>\n     <message>\n         <source>Change index out of range</source>\n@@ -3350,6 +3422,14 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n         <source>Corrupted block database detected</source>\n         <translation>Corrupci\u00f3n de base de datos de bloques detectada.</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>No se pudo encontrar el archivo asmap %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>No se pudo analizar el archivo asmap %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u00bfQuiere reconstruir la base de datos de bloques ahora?</translation>\n@@ -3368,7 +3448,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Error loading %s: Private keys can only be disabled during creation</source>\n-        <translation>Error cargando %s: Las claves privadas solo pueden ser deshabilitadas durante la creaci\u00f3n</translation>\n+        <translation>Error cargando %s: Las llaves privadas solo pueden ser deshabilitadas durante la creaci\u00f3n.</translation>\n     </message>\n     <message>\n         <source>Error loading %s: Wallet corrupted</source>\n@@ -3512,7 +3592,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n-        <translation>Cantidad no v\u00e1lida para -maxtxfee=&lt;amount&gt;: '%s' (debe ser por lo menos la comisi\u00f3n m\u00ednima de %s para prevenir transacciones atascadas)</translation>\n+        <translation>Cantidad no v\u00e1lida para -maxtxfee=&lt;amount&gt;: '%s' (debe ser al menos la comisi\u00f3n m\u00ednima de %s para prevenir transacciones atascadas)</translation>\n     </message>\n     <message>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n@@ -3622,7 +3702,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n-        <translation>Verificando monedero...</translation>\n+        <translation>Verificando monedero(s)...</translation>\n     </message>\n     <message>\n         <source>Warning: unknown new rules activated (versionbit %i)</source>\n@@ -3666,7 +3746,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n-        <translation>Esta es la tarifa m\u00ednima a pagar en cada transacci\u00f3n.</translation>\n+        <translation>Esta es la comisi\u00f3n por transacci\u00f3n m\u00ednima a pagar en cada transacci\u00f3n.</translation>\n     </message>\n     <message>\n         <source>This is the transaction fee you will pay if you send a transaction.</source>\n@@ -3686,7 +3766,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n-        <translation>La red especificada en -onlynet '%s' es desconocida</translation>\n+        <translation>Red desconocida especificada en -onlynet '%s'</translation>\n     </message>\n     <message>\n         <source>Insufficient funds</source>\n@@ -3718,7 +3798,7 @@ Nota: Dado que la comisi\u00f3n se calcula por byte, una comisi\u00f3n de \"100 satoshis\n     </message>\n     <message>\n         <source>Cannot downgrade wallet</source>\n-        <translation>No se puede rebajar el monedero</translation>\n+        <translation>No se puede actualizar a una versi\u00f3n mas antigua el monedero.</translation>\n     </message>\n     <message>\n         <source>Rescanning...</source>"
      },
      {
        "sha": "265eeeb2f7dfff6551ecf60b4c291124666c3456",
        "filename": "src/qt/locale/bitcoin_es_CL.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_CL.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_CL.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CL.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -997,7 +997,7 @@ Exportar los datos en la pesta\u00f1a actual a un archivo</translation>\n     </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n-        <translation>(0 = auto, &lt;0 = deja muchos n\u00facleos gratis)</translation>\n+        <translation>(0 = auto, &lt;0 = deja esta cantidad de n\u00facleos libres)</translation>\n     </message>\n     <message>\n         <source>W&amp;allet</source>"
      },
      {
        "sha": "751dd5ca5bd1b5309f4354c27d42287793cfb5d0",
        "filename": "src/qt/locale/bitcoin_es_CO.ts",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_CO.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_CO.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_CO.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -699,6 +699,10 @@\n     </context>\n <context>\n     <name>CreateWalletDialog</name>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>Crea una billetera en blanco. Las billeteras en blanco inicialmente no tienen llaves privadas o texto. Las llaves privadas y las direcciones pueden ser importadas, o se puede establecer una semilla HD, m\u00e1s tarde.</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -803,6 +807,10 @@\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n         <translation>Al hacer clic OK, %1 iniciar\u00e1 el proceso de descarga y procesar\u00e1 el blockchain completo de %4 (%2 GB), iniciando desde el la transacci\u00f3n m\u00e1s antigua %3 cuando %4 se ejecut\u00f3 inicialmente.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Revertir esta configuraci\u00f3n requiere descargar la blockchain completa nuevamente. Es m\u00e1s r\u00e1pido descargar la cadena completa  y podarla despu\u00e9s. Desactiva algunas funciones avanzadas.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>El primer proceso de sincronizaci\u00f3n consume muchos recursos, y es posible que puedan ocurrir problemas de hardware que anteriormente no hayas notado. Cada vez que ejecutes %1 autom\u00e1ticamente se reiniciar\u00e1 el proceso de sincronizaci\u00f3n desde el punto que lo dejaste anteriormente.</translation>\n@@ -993,7 +1001,7 @@\n     </message>\n     <message>\n         <source>(0 = auto, &lt;0 = leave that many cores free)</source>\n-        <translation>(0 = auto, &lt;0 = deja muchos n\u00facleos gratis)</translation>\n+        <translation>(0 = auto, &lt;0 = deja esta cantidad de n\u00facleos libres)</translation>\n     </message>\n     <message>\n         <source>W&amp;allet</source>"
      },
      {
        "sha": "2c0028debc2ee7e632be34f271de544da84de4be",
        "filename": "src/qt/locale/bitcoin_es_MX.ts",
        "status": "modified",
        "additions": 703,
        "deletions": 9,
        "changes": 712,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_MX.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_es_MX.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_MX.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -69,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Estas son tus direcciones de Bitcoin para enviar pagos. Siempre revisa el monto y la direcci\u00f3n de env\u00edo antes de enviar monedas.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>Estas son tus direcciones Bitcoin para recibir pagos. Usa el bot\u00f3n \"Crear Nueva Direcci\u00f3n de Recepci\u00f3n\" en la pesta\u00f1a de recepciones para crear nuevas direcciones.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Copiar direcci\u00f3n</translation>\n@@ -131,6 +135,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>Repita la nueva contrase\u00f1a</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>Mostrar contrase\u00f1a</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Encriptar cartera</translation>\n@@ -171,6 +179,30 @@\n         <source>Wallet encrypted</source>\n         <translation>Cartera encriptada</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Ingresa la nueva frase contrase\u00f1a para la billetera &lt;br/&gt;Por favor usa una frase contrase\u00f1a de &lt;b&gt;diez o mas caracteres aleatorios &lt;/b&gt;, o &lt;b&gt;ocho o mas palabras&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>Ingresa la antigua frase de contrase\u00f1a y la nueva frase de contrase\u00f1a para la billetera.</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Recuerda que encriptar tu billetera no puede proteger completamente tus bitcoins de ser robadas por malware que haya infectado tu computadora.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Billetera para ser encriptada</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>Tu billetera est\u00e1 por ser encriptada</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>Tu billetera ha sido encriptada</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANTE: cualquier copia de seguridad anterior que haya hecho de su archivo de cartera debe ser reemplazada por el archivo de cartera encriptado y reci\u00e9n generado. Por razones de seguridad, las copias de seguridad anteriores del archivo de cartera sin cifrar ser\u00e1n in\u00fatiles tan pronto como empieces a usar la nueva billetera encriptada.</translation>\n@@ -293,6 +325,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>Abrir &amp;URL...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Crear cartera</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Crear una nueva cartera</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>Cartera:</translation>\n@@ -388,10 +428,30 @@ Haga clic para habilitar la actividad de red nuevamente.</translation>\n Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n \u00a0</translation>\n     </message>\n+    <message>\n+        <source>Show the list of used sending addresses and labels</source>\n+        <translation>Mostrar la lista de direcciones y etiquetas de env\u00edo usadas</translation>\n+    </message>\n+    <message>\n+        <source>Show the list of used receiving addresses and labels</source>\n+        <translation>Mostrar la lista de direcciones y etiquetas de recepci\u00f3n usadas</translation>\n+    </message>\n     <message>\n         <source>&amp;Command-line options</source>\n         <translation>opciones de la &amp;Linea de comandos</translation>\n     </message>\n+    <message>\n+        <source>Indexing blocks on disk...</source>\n+        <translation>Indexando bloques en el disco...</translation>\n+    </message>\n+    <message>\n+        <source>Processing blocks on disk...</source>\n+        <translation>Procesando bloques en el disco...</translation>\n+    </message>\n+    <message>\n+        <source>Transactions after this will not yet be visible.</source>\n+        <translation>Las transacciones despu\u00e9s de esto todav\u00eda no ser\u00e1n visibles.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Error</translation>\n@@ -408,10 +468,64 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Up to date</source>\n         <translation>Actualizado al dia </translation>\n     </message>\n+    <message>\n+        <source>Open Wallet</source>\n+        <translation>Abrir Cartera</translation>\n+    </message>\n+    <message>\n+        <source>Open a wallet</source>\n+        <translation>Abrir una cartera</translation>\n+    </message>\n+    <message>\n+        <source>Close Wallet...</source>\n+        <translation>Cerrar Cartera...</translation>\n+    </message>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Cerrar cartera</translation>\n+    </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>cartera predeterminada</translation>\n+    </message>\n+    <message>\n+        <source>No wallets available</source>\n+        <translation>No hay carteras disponibles</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>&amp;Ventana</translation>\n+    </message>\n+    <message>\n+        <source>Minimize</source>\n+        <translation>Minimizar</translation>\n+    </message>\n+    <message>\n+        <source>Main Window</source>\n+        <translation>Ventana Principal</translation>\n+    </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>Conectando con los compa\u00f1eros...</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>Recibiendo...</translation>\n     </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Error: %1</translation>\n+    </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Alerta: %1</translation>\n+    </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>Fecha: %1\n+</translation>\n+    </message>\n     <message>\n         <source>Sent transaction</source>\n         <translation>Enviar Transacci\u00f3n</translation>\n@@ -428,9 +542,17 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>La cartera esta &lt;b&gt;encriptada&lt;/b&gt; y &lt;b&gt;bloqueada&lt;/b&gt; actualmente </translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Se produjo un error fatal. Bitcoin ya no puede continuar de forma segura y va a renunciar.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>Selecci\u00f3n de moneda</translation>\n+    </message>\n     <message>\n         <source>Quantity:</source>\n         <translation>Cantidad</translation>\n@@ -447,6 +569,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Fee:</source>\n         <translation>Cuota:</translation>\n     </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Remanente monetario:</translation>\n+    </message>\n     <message>\n         <source>After Fee:</source>\n         <translation>Despu\u00e9s de los cargos por comisi\u00f3n. </translation>\n@@ -455,14 +581,38 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Change:</source>\n         <translation>Cambio</translation>\n     </message>\n+    <message>\n+        <source>(un)select all</source>\n+        <translation>(De)seleccionar todo</translation>\n+    </message>\n+    <message>\n+        <source>Tree mode</source>\n+        <translation>Modo \u00e1rbol </translation>\n+    </message>\n+    <message>\n+        <source>List mode</source>\n+        <translation>Modo lista\u00a0</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>Monto</translation>\n     </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>Recibido con etiqueta</translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>recibido con direcci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Fecha</translation>\n     </message>\n+    <message>\n+        <source>Confirmations</source>\n+        <translation>Confirmaciones</translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>Confirmado </translation>\n@@ -511,6 +661,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>no</source>\n         <translation>no</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n+        <translation>Esta capa se vuelve roja si alg\u00fan destinatario recibe un monto menor al actual limite del remanente monetario </translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(sin etiqueta)</translation>\n@@ -522,10 +676,46 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>La creaci\u00f3n de la cartera fall\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Crear advertencia de cartera</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Crear una cartera </translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Nombre de la cartera </translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>Encriptar la cartera. La cartera ser\u00e1 encriptada con una frase de contrase\u00f1a de tu elecci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>Encripta la cartera</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Desactivar las llaves privadas de esta cartera. Las carteras con las llaves privadas desactivadas no tendr\u00e1n llaves privadas y no podr\u00e1n tener una semilla HD o llaves privadas importadas. Esto es ideal para las carteras \"watch-only\".</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Desactivar las claves privadas</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Crear</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -536,6 +726,14 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>&amp;Label</source>\n         <translation>&amp;Etiqueta</translation>\n     </message>\n+    <message>\n+        <source>The label associated with this address list entry</source>\n+        <translation>La etiqueta asociada a esta entrada de la lista de direcciones</translation>\n+    </message>\n+    <message>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation>La direcci\u00f3n asociada a esta entrada de la lista de direcciones. Esto s\u00f3lo puede ser modificado para las direcciones de env\u00edo.</translation>\n+    </message>\n     <message>\n         <source>&amp;Address</source>\n         <translation>&amp;Direcci\u00f3n</translation>\n@@ -563,11 +761,23 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n </context>\n <context>\n     <name>FreespaceChecker</name>\n+    <message>\n+        <source>A new data directory will be created.</source>\n+        <translation>Un nuevo directorio de datos ser\u00e1 creado.</translation>\n+    </message>\n     <message>\n         <source>name</source>\n         <translation>nombre</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Path already exists, and is not a directory.</source>\n+        <translation>El camino ya existe, y no es un directorio.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot create data directory here.</source>\n+        <translation>No se puede crear un directorio de datos aqu\u00ed.</translation>\n+    </message>\n+</context>\n <context>\n     <name>HelpMessageDialog</name>\n     <message>\n@@ -581,10 +791,34 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Welcome</source>\n+        <translation>Bienvenido</translation>\n+    </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Revertir esta configuraci\u00f3n requiere descargar nuevamente la cadena de bloques en su totalidad. es mas eficaz descargar la cadena de bloques completa y despu\u00e9s reducirla. Desabilitar\u00e1 algunas funciones avanzadas.</translation>\n+    </message>\n+    <message>\n+        <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n+        <translation>La sincronizaci\u00f3n inicial es muy demandante, por lo que algunos problemas en su equipo de computo que no hayan sido detectados pueden verse reflejados. Cada vez que corra al %1, continuar\u00e1 descargando donde se le dej\u00f3.</translation>\n+    </message>\n+    <message>\n+        <source>Use the default data directory</source>\n+        <translation>Usar el directorio de datos predeterminado</translation>\n+    </message>\n+    <message>\n+        <source>Use a custom data directory:</source>\n+        <translation>Usar un directorio de datos customizado:</translation>\n+    </message>\n     <message>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>The wallet will also be stored in this directory.</source>\n+        <translation>La cartera tambi\u00e9n se almacenar\u00e1 en este directorio.</translation>\n+    </message>\n     <message>\n         <source>Error</source>\n         <translation>Error</translation>\n@@ -596,23 +830,107 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Form</source>\n         <translation>Formulario</translation>\n     </message>\n+    <message>\n+        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n+        <translation>Las transacciones recientes pueden no ser visibles todav\u00eda, y por lo tanto el saldo de su cartera podr\u00eda ser incorrecto. Esta informaci\u00f3n ser\u00e1 correcta una vez que su cartera haya terminado de sincronizarse con la red de bitcoin, como se detalla abajo.</translation>\n+    </message>\n+    <message>\n+        <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n+        <translation>Los intentos de gastar bitcoins que se vean afectados por transacciones a\u00fan no mostradas no ser\u00e1n aceptados por la red.</translation>\n+    </message>\n+    <message>\n+        <source>Number of blocks left</source>\n+        <translation>N\u00famero de bloques restantes</translation>\n+    </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Desconocido...</translation>\n+    </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>Progreso </translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>Aumento del progreso por hora</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>calculando...</translation>\n+    </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Tiempo estimado restante hasta la sincronizaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Ocultar </translation>\n+    </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n-    </context>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Abrir la URI de bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>URI:</source>\n+        <translation>URI:</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Abrir la cartera fall\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>cartera predeterminada</translation>\n+    </message>\n     </context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n         <source>Options</source>\n         <translation>Opciones</translation>\n     </message>\n+    <message>\n+        <source>Minimize instead of exit the application when the window is closed. When this option is enabled, the application will be closed only after selecting Exit in the menu.</source>\n+        <translation>Minimizar en lugar de salir de la aplicaci\u00f3n cuando la ventana se cierra. Cuando esta opci\u00f3n est\u00e1 activada, la aplicaci\u00f3n se cerrar\u00e1 s\u00f3lo despu\u00e9s de seleccionar Salir en el men\u00fa.</translation>\n+    </message>\n+    <message>\n+        <source>Open Configuration File</source>\n+        <translation>Abrir Configuraci\u00f3n de Archivo</translation>\n+    </message>\n     <message>\n         <source>W&amp;allet</source>\n         <translation>Cartera</translation>\n     </message>\n+    <message>\n+        <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n+        <translation>Si usted desactiva el gasto de cambio no confirmado, el cambio de una transacci\u00f3n no puede ser utilizado hasta que esa transacci\u00f3n tenga al menos una confirmaci\u00f3n. Esto tambi\u00e9n afecta la manera en que se calcula su saldo.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Spend unconfirmed change</source>\n+        <translation>&amp;Gastar el cambio no confirmado</translation>\n+    </message>\n+    <message>\n+        <source>Accept connections from outside.</source>\n+        <translation>Aceptar las conexiones del exterior.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Window</source>\n+        <translation>&amp;Ventana</translation>\n+    </message>\n+    <message>\n+        <source>User Interface &amp;language:</source>\n+        <translation>Idioma de la interfaz de usuario:</translation>\n+    </message>\n     <message>\n         <source>none</source>\n         <translation>Ninguno </translation>\n@@ -621,6 +939,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Error</source>\n         <translation>Error</translation>\n     </message>\n+    <message>\n+        <source>This change would require a client restart.</source>\n+        <translation>Este cambio requerir\u00eda un reinicio del cliente.</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n@@ -634,24 +956,160 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n     </context>\n <context>\n     <name>PeerTableModel</name>\n-    </context>\n+    <message>\n+        <source>Sent</source>\n+        <translation>Enviado</translation>\n+    </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>Recibido</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject</name>\n     <message>\n         <source>Amount</source>\n         <translation>Monto</translation>\n     </message>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Error: %1</translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>desconocido</translation>\n     </message>\n </context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>&amp;Guardar imagen...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>&amp;Copiar Imagen</translation>\n+    </message>\n+    <message>\n+        <source>Error encoding URI into QR Code.</source>\n+        <translation>Error codificando la URI en el C\u00f3digo QR.</translation>\n+    </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>El soporte del c\u00f3digo QR no est\u00e1 disponible.</translation>\n+    </message>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>Guardar C\u00f3digo QR</translation>\n+    </message>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>PNG imagen (*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n-    </context>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>Client version</source>\n+        <translation>Versi\u00f3n cliente </translation>\n+    </message>\n+    <message>\n+        <source>&amp;Information</source>\n+        <translation>&amp;Informaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>General</source>\n+        <translation>General</translation>\n+    </message>\n+    <message>\n+        <source>Network</source>\n+        <translation>Red</translation>\n+    </message>\n+    <message>\n+        <source>Name</source>\n+        <translation>Nombre</translation>\n+    </message>\n+    <message>\n+        <source>Wallet: </source>\n+        <translation>Cartera:</translation>\n+    </message>\n+    <message>\n+        <source>(none)</source>\n+        <translation>(ninguno)</translation>\n+    </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>Recibido</translation>\n+    </message>\n+    <message>\n+        <source>Sent</source>\n+        <translation>Enviado</translation>\n+    </message>\n+    <message>\n+        <source>Decrease font size</source>\n+        <translation>Reducir el tama\u00f1o de la letra</translation>\n+    </message>\n+    <message>\n+        <source>Increase font size</source>\n+        <translation>Aumentar el tama\u00f1o de la letra</translation>\n+    </message>\n+    <message>\n+        <source>Services</source>\n+        <translation>Servicios</translation>\n+    </message>\n+    <message>\n+        <source>Connection Time</source>\n+        <translation>Tiempo de conexi\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Last Send</source>\n+        <translation>\u00daltimo env\u00edo</translation>\n+    </message>\n+    <message>\n+        <source>Last Receive</source>\n+        <translation>\u00daltima recepci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled</source>\n+        <translation>Actividad de la red desactivada</translation>\n+    </message>\n+    <message>\n+        <source>Executing command without any wallet</source>\n+        <translation>Ejecutando el comando sin ninguna cartera</translation>\n+    </message>\n+    <message>\n+        <source>never</source>\n+        <translation>nunca</translation>\n+    </message>\n+    <message>\n+        <source>Inbound</source>\n+        <translation>Entrada</translation>\n+    </message>\n+    <message>\n+        <source>Outbound</source>\n+        <translation>Salida</translation>\n+    </message>\n+    <message>\n+        <source>Yes</source>\n+        <translation>S\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>No</source>\n+        <translation>No</translation>\n+    </message>\n+    <message>\n+        <source>Unknown</source>\n+        <translation>Desconocido</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     <message>\n@@ -670,6 +1128,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</source>\n         <translation>Mensaje opcional para agregar a la solicitud de pago, el cual ser\u00e1 mostrado cuando la solicitud este abierta. Nota: El mensaje no se manda con el pago a trav\u00e9z de la red de Bitcoin.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address.</source>\n+        <translation>Una etiqueta opcional para asociar a la nueva direcci\u00f3n de recepci\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Use this form to request payments. All fields are &lt;b&gt;optional&lt;/b&gt;.</source>\n         <translation>Use este formulario para la solicitud de pagos. Todos los campos son &lt;b&gt;opcionales&lt;/b&gt;</translation>\n@@ -678,6 +1140,46 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Monto opcional a solicitar. Dejarlo vacion o en cero no solicita un monto especifico.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Una etiqueta opcional para asociar a la nueva direcci\u00f3n de recepci\u00f3n (utilizada por usted para identificar una factura). Tambi\u00e9n se adjunta a la solicitud de pago.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Un mensaje opcional que se adjunta a la solicitud de pago y que puede mostrarse al remitente.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;Crear una nueva direcci\u00f3n de recepci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Borrar todos los campos del formulario.</translation>\n+    </message>\n+    <message>\n+        <source>Clear</source>\n+        <translation>Borrar </translation>\n+    </message>\n+    <message>\n+        <source>Requested payments history</source>\n+        <translation>Historial de pagos solicitados</translation>\n+    </message>\n+    <message>\n+        <source>Show the selected request (does the same as double clicking an entry)</source>\n+        <translation>Mostrar la solicitud seleccionada (hace lo mismo que hacer doble clic en una entrada)</translation>\n+    </message>\n+    <message>\n+        <source>Show</source>\n+        <translation>Mostrar</translation>\n+    </message>\n+    <message>\n+        <source>Remove the selected entries from the list</source>\n+        <translation>Eliminar las entradas seleccionadas de la lista</translation>\n+    </message>\n+    <message>\n+        <source>Remove</source>\n+        <translation>Eliminar </translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>Copiar capa </translation>\n@@ -693,6 +1195,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Copy &amp;Address</source>\n         <translation>&amp;Copiar direcci\u00f3n</translation>\n     </message>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>&amp;Guardar imagen...</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Direcci\u00f3n</translation>\n@@ -763,10 +1269,22 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Change:</source>\n         <translation>Cambio</translation>\n     </message>\n+    <message>\n+        <source>Hide</source>\n+        <translation>Ocultar </translation>\n+    </message>\n     <message>\n         <source>Send to multiple recipients at once</source>\n         <translation>Enviar a m\u00faltiples receptores a la vez</translation>\n     </message>\n+    <message>\n+        <source>Clear all fields of the form.</source>\n+        <translation>Despeja todos los campos del formulario.</translation>\n+    </message>\n+    <message>\n+        <source>Dust:</source>\n+        <translation>Remanente monetario:</translation>\n+    </message>\n     <message>\n         <source>Balance:</source>\n         <translation>Saldo:</translation>\n@@ -799,22 +1317,70 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Copy change</source>\n         <translation>Copiar cambio</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\u00bfQuiere redactar esta transacci\u00f3n?</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you want to send?</source>\n+        <translation>\u00bfEst\u00e1 seguro de que quiere enviar?</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>o</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction.</source>\n+        <translation>Por favor, revise su transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Cuota de transacci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Total Amount</source>\n+        <translation>Cantidad total</translation>\n+    </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>Para revisar la lista de destinatarios haga clic en \"Mostrar detalles...\"</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>Confirme para enviar monedas</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Confirmar la propuesta de transacci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Enviar</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>La direcci\u00f3n del destinatario no es v\u00e1lida. Por favor, vuelva a verificarla.</translation>\n+    </message>\n     <message>\n         <source>The amount to pay must be larger than 0.</source>\n         <translation>El monto a pagar debe ser mayor a 0</translation>\n     </message>\n+    <message>\n+        <source>The amount exceeds your balance.</source>\n+        <translation>La cantidad excede su saldo.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Duplicado de la direcci\u00f3n encontrada: las direcciones s\u00f3lo deben ser utilizadas una vez cada una.</translation>\n+    </message>\n     <message>\n         <source>Transaction creation failed!</source>\n         <translation>\u00a1La creaci\u00f3n de la transaci\u00f3n fall\u00f3!</translation>\n     </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>La solicitud de pago expir\u00f3.</translation>\n+    </message>\n     <message>\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Advertencia: Direcci\u00f3n de Bitcoin invalida</translation>\n@@ -823,6 +1389,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Warning: Unknown change address</source>\n         <translation>Advertencia: Cambio de direcci\u00f3n desconocido</translation>\n     </message>\n+    <message>\n+        <source>Confirm custom change address</source>\n+        <translation>Confirmar la direcci\u00f3n de cambio personalizada</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(sin etiqueta)</translation>\n@@ -842,6 +1412,14 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>&amp;Label:</source>\n         <translation>&amp;Etiqueta</translation>\n     </message>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>Elegir la direcci\u00f3n utilizada anteriormente</translation>\n+    </message>\n+    <message>\n+        <source>The Bitcoin address to send the payment to</source>\n+        <translation>La direcci\u00f3n de Bitcoin para enviar el pago a</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -858,10 +1436,26 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Remove this entry</source>\n         <translation>Quitar esta entrada</translation>\n     </message>\n+    <message>\n+        <source>Use available balance</source>\n+        <translation>Usar el saldo disponible</translation>\n+    </message>\n     <message>\n         <source>Message:</source>\n         <translation>Mensaje:</translation>\n     </message>\n+    <message>\n+        <source>This is an unauthenticated payment request.</source>\n+        <translation>Esta es una solicitud de pago no autentificada.</translation>\n+    </message>\n+    <message>\n+        <source>This is an authenticated payment request.</source>\n+        <translation>Esta es una solicitud de pago autentificada.</translation>\n+    </message>\n+    <message>\n+        <source>Enter a label for this address to add it to the list of used addresses</source>\n+        <translation>Introducir una etiqueta para esta direcci\u00f3n para a\u00f1adirla a la lista de direcciones utilizadas</translation>\n+    </message>\n     <message>\n         <source>Pay To:</source>\n         <translation>Pago para:</translation>\n@@ -876,6 +1470,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n </context>\n <context>\n     <name>SignVerifyMessageDialog</name>\n+    <message>\n+        <source>Choose previously used address</source>\n+        <translation>Elegir la direcci\u00f3n utilizada anteriormente</translation>\n+    </message>\n     <message>\n         <source>Alt+A</source>\n         <translation>Alt+A</translation>\n@@ -934,6 +1532,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>label</source>\n         <translation>etiqueta</translation>\n     </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Cuota de transacci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>Message</source>\n         <translation>Mensaje</translation>\n@@ -1153,6 +1755,10 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n     </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Cerrar cartera</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n@@ -1167,7 +1773,11 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n         <source>Send Coins</source>\n         <translation>Enviar monedas</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>cartera predeterminada</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n     <message>\n@@ -1189,10 +1799,94 @@ Solicitar pagos (genera c\u00f3digos QR y bitcoin: URI)\n     </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>Failed to rescan the wallet during initialization</source>\n+        <translation>Fall\u00f3 al volver a escanear la cartera durante la inicializaci\u00f3n</translation>\n+    </message>\n+    <message>\n+        <source>Importing...</source>\n+        <translation>Importando...</translation>\n+    </message>\n+    <message>\n+        <source>Loading banlist...</source>\n+        <translation>Cargando la lista de anuncios...</translation>\n+    </message>\n+    <message>\n+        <source>Not enough file descriptors available.</source>\n+        <translation>No hay suficientes descriptores de archivos disponibles.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee and change calculation failed</source>\n+        <translation>La tarifa de la transacci\u00f3n y el c\u00e1lculo del cambio fallaron</translation>\n+    </message>\n+    <message>\n+        <source>Unable to generate keys</source>\n+        <translation>Incapaz de generar claves</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>Verificando bloques...</translation>\n     </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>La cantidad de la transacci\u00f3n es demasiado peque\u00f1a para enviarla despu\u00e9s de que se haya deducido la tarifa</translation>\n+    </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Error de lectura de la base de datos, apagando.</translation>\n+    </message>\n+    <message>\n+        <source>Signing transaction failed</source>\n+        <translation>La transacci\u00f3n de firma fall\u00f3</translation>\n+    </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>El monto de la transacci\u00f3n es demasiado peque\u00f1o para pagar la tarifa</translation>\n+    </message>\n+    <message>\n+        <source>This is experimental software.</source>\n+        <translation>Este es un software experimental.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction amount too small</source>\n+        <translation>El monto de la transacci\u00f3n es demasiado peque\u00f1o</translation>\n+    </message>\n+    <message>\n+        <source>Transaction too large</source>\n+        <translation>La transacci\u00f3n es demasiado grande</translation>\n+    </message>\n+    <message>\n+        <source>Unable to generate initial keys</source>\n+        <translation>Incapaz de generar claves iniciales</translation>\n+    </message>\n+    <message>\n+        <source>Verifying wallet(s)...</source>\n+        <translation>Verificando la(s) cartera(s)...</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n+        <translation>Esta es la tarifa de transacci\u00f3n que puede pagar cuando no se dispone de estimaciones de tarifas.</translation>\n+    </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Esta es la tarifa de transacci\u00f3n m\u00ednima que se paga en cada transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>Esta es la tarifa de transacci\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Los montos de las transacciones no deben ser negativos</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>La transacci\u00f3n debe tener al menos un destinatario</translation>\n+    </message>\n+    <message>\n+        <source>Insufficient funds</source>\n+        <translation>Fondos insuficientes</translation>\n+    </message>\n     <message>\n         <source>Loading block index...</source>\n         <translation>Cargando indice de bloques... </translation>"
      },
      {
        "sha": "025527b680d0b3385aef58b57a9cbb058ea35f1b",
        "filename": "src/qt/locale/bitcoin_et.ts",
        "status": "modified",
        "additions": 53,
        "deletions": 1,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_et.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_et.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -131,6 +131,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>Korda uut parooli</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>N\u00e4ita salafraasi</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Kr\u00fcpteeri rahakott</translation>\n@@ -171,6 +175,30 @@\n         <source>Wallet encrypted</source>\n         <translation>Rahakott kr\u00fcpteeritud</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Sisesta rahakotile uus salafraas.&lt;br/&gt;Kasuta salafraasi millles on&lt;b&gt;k\u00fcmme v\u00f5i rohkem juhuslikku s\u00fcmbolit&lt;b&gt;,v\u00f5i&lt;b&gt;kaheksa v\u00f5i rohkem s\u00f5na&lt;b/&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>Sisesta rahakoti vana salafraas ja uus salafraas.</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>Pea meeles, et rahakoti kr\u00fcpteerimine ei v\u00e4lista bitcoinide vargust, kui sinu arvuti on nakatunud pahavaraga.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Kr\u00fcpteeritav rahakott</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>Rahakott kr\u00fcpteeritakse.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>Rahakott kr\u00fcpteeritud.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>T\u00c4HTIS: K\u00f5ik varasemad rahakoti varundfailid tuleks \u00fcle kirjutada \u00e4sja loodud kr\u00fcpteeritud rahakoti failiga. Turvakaalutlustel t\u00fchistatakse kr\u00fcpteerimata rahakoti failid alates uue, kr\u00fcpteeritud rahakoti, kasutusele v\u00f5tust.</translation>\n@@ -214,7 +242,11 @@\n         <source>IP/Netmask</source>\n         <translation>IP/V\u00f5rgumask</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Blokeeritud kuni</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n     <message>\n@@ -253,6 +285,10 @@\n         <source>&amp;About %1</source>\n         <translation>&amp;Teave %1</translation>\n     </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>N\u00e4ita informatsiooni %1 kohta</translation>\n+    </message>\n     <message>\n         <source>About &amp;Qt</source>\n         <translation>Teave &amp;Qt kohta</translation>\n@@ -265,6 +301,10 @@\n         <source>&amp;Options...</source>\n         <translation>&amp;Valikud...</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>Muuda %1 seadeid</translation>\n+    </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation>&amp;Kr\u00fcpteeri Rahakott</translation>\n@@ -281,6 +321,18 @@\n         <source>Open &amp;URI...</source>\n         <translation>Ava &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Loo rahakott</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Loo uus rahakott</translation>\n+    </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>Rahakott:</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>K\u00f5vakettal olevate plokkide reindekseerimine...</translation>"
      },
      {
        "sha": "2881754ac947a7011b7b8bdc50416daeebba3baf",
        "filename": "src/qt/locale/bitcoin_eu.ts",
        "status": "modified",
        "additions": 37,
        "deletions": 1,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_eu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_eu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eu.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -357,6 +357,10 @@\n         <source>Reindexing blocks on disk...</source>\n         <translation>Blokeak diskoan berriro zerrendatzen...</translation>\n     </message>\n+    <message>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation>Bidali txanponak Bitcoin helbide batera</translation>\n+    </message>\n     <message>\n         <source>Change the passphrase used for wallet encryption</source>\n         <translation>Diruzorroa enkriptatzeko erabilitako pasahitza aldatu</translation>\n@@ -381,6 +385,10 @@\n         <source>Show or hide the main Window</source>\n         <translation>Lehio nagusia erakutsi edo izkutatu</translation>\n     </message>\n+    <message>\n+        <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n+        <translation>Egiaztatu mesua Bitcoin helbide espezifikoarekin erregistratu direla ziurtatzeko</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;Artxiboa</translation>\n@@ -405,10 +413,22 @@\n         <source>Error</source>\n         <translation>Akatsa</translation>\n     </message>\n+    <message>\n+        <source>Information</source>\n+        <translation>Informazioa</translation>\n+    </message>\n     <message>\n         <source>Up to date</source>\n         <translation>Eguneratua</translation>\n     </message>\n+    <message>\n+        <source>&amp;Sending addresses</source>\n+        <translation>&amp;Helbideak bidaltzen</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses</source>\n+        <translation>&amp;Helbideak jasotzen</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Diruzorroa zabaldu</translation>\n@@ -425,10 +445,18 @@\n         <source>Close wallet</source>\n         <translation>Diruzorroa itxi</translation>\n     </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>Diruzorro lehenetsia</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Lehioa</translation>\n     </message>\n+    <message>\n+        <source>Minimize</source>\n+        <translation>Txikitu</translation>\n+    </message>\n     <message>\n         <source>Zoom</source>\n         <translation>Gerturatu</translation>\n@@ -701,6 +729,10 @@\n         <source>Open wallet warning</source>\n         <translation>Diruzorroa irekitzen abisua</translation>\n     </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>Diruzorro lehenetsia</translation>\n+    </message>\n     </context>\n <context>\n     <name>OptionsDialog</name>\n@@ -1194,7 +1226,11 @@\n         <source>Send Coins</source>\n         <translation>Txanponak bidali</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>Diruzorro lehenetsia</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n     <message>"
      },
      {
        "sha": "33833baed448433ff1d332c3197c31b4287a31b9",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 215,
        "deletions": 7,
        "changes": 222,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -7,15 +7,15 @@\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u06af\u0634\u0627\u06cc\u0634 \u0622\u062f\u0631\u0633 \u062c\u062f\u06cc\u062f</translation>\n+        <translation>\u0633\u0627\u062e\u062a \u06cc\u06a9 \u0622\u062f\u0631\u0633 \u062c\u062f\u06cc\u062f</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n         <translation>\u062c\u062f\u06cc\u062f</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u062d\u0633\u0627\u0628 \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0628\u0647 \u062d\u0627\u0641\u0638\u0647 \u0633\u06cc\u0633\u062a\u0645 - \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f</translation>\n+        <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u0622\u062f\u0631\u0633  \u0627\u0646\u062a\u062e\u0627\u0628 \u0634\u062f\u0647 \u0628\u0647 \u062d\u0627\u0641\u0638\u0647  \u06a9\u0644\u06cc\u067e \u0628\u0648\u0631\u062f \u0633\u06cc\u0633\u062a\u0645</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -69,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633\u200c\u0647\u0627\u06cc \u0634\u0645\u0627 \u0628\u0631\u0627\u06cc \u0627\u0631\u0633\u0627\u0644 \u0648\u062c\u0648\u0647 \u0647\u0633\u062a\u0646\u062f. \u0647\u0645\u06cc\u0634\u0647 \u0642\u0628\u0644 \u0627\u0632 \u0627\u0631\u0633\u0627\u0644\u060c \u0645\u0642\u062f\u0627\u0631 \u0648 \u0622\u062f\u0631\u0633 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0631\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>\u0627\u06cc\u0646\u0647\u0627 \u0622\u062f\u0631\u0633 \u0628\u06cc\u062a \u06a9\u0648\u06cc\u0646 \u0647\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc \u0634\u0645\u0627 \u0645\u06cc \u0628\u0627\u0634\u062f\u0646\u062f. \u062f\u0631 \u062a\u0628 \u062f\u0631\u06cc\u0627\u0641\u062a \u0627\u0632 \u062f\u06a9\u0645\u0647 '\u0627\u06cc\u062d\u0627\u062f \u0622\u062f\u0631\u0633 \u062c\u062f\u06cc\u062f' \u0628\u0631\u0627\u06cc \u0633\u0627\u062e\u062a \u0622\u062f\u0631\u0633 \u062c\u062f\u06cc\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u0645\u0627\u0626\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>\u06a9\u067e\u06cc \u0622\u062f\u0631\u0633</translation>\n@@ -131,17 +135,21 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0631\u0645\u0632/\u067e\u064e\u0633 \u0641\u0631\u0650\u06cc\u0632 \u0631\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0634 \u0631\u0645\u0632</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>\u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n-        <translation>\u0628\u0631\u0627\u06cc \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0639\u0645\u0644\u06cc\u0627\u062a\u060c \u0628\u0627\u06cc\u062f \u0631\u0645\u0632 \u06a9\u06cc\u0641\u200c\u067e\u0648\u0644 \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.</translation>\n+        <translation>\u0627\u06cc\u0646 \u0639\u0645\u0644\u06cc\u0627\u062a \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0631\u0645\u0632 \u06a9\u06cc\u0641 \u200c\u067e\u0648\u0644 \u0634\u0645\u0627 \u062f\u0627\u0631\u062f \u062a\u0627 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627\u0632 \u0634\u0648\u062f</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n-        <translation>\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u06a9\u06cc\u0641\u200c\u067e\u0648\u0644</translation>\n+        <translation>\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u06a9\u06cc\u0641 \u200c\u067e\u0648\u0644</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n@@ -165,17 +173,37 @@\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n-        <translation>\u0622\u06cc\u0627 \u0627\u0632 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641\u200c\u067e\u0648\u0644 \u062e\u0648\u062f \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u062f\u0627\u0631\u06cc\u062f\u061f</translation>\n+        <translation>\u0622\u06cc\u0627 \u0627\u0632 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u200c\u067e\u0648\u0644 \u062e\u0648\u062f \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u062f\u0627\u0631\u06cc\u062f\u061f</translation>\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u0628\u0631\u0627\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u06cc\u06a9 \u0631\u0645\u0632 \u062c\u062f\u06cc\u062f \u0648\u0627\u0631\u062f \u0646\u0645\u0627\u0626\u06cc\u062f&lt;br/&gt;\u0644\u0637\u0641\u0627\u064b \u0631\u0645\u0632 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0627\u0646\u062a\u062e\u0627\u0628\u06cc \u0631\u0627 \u0628\u062f\u06cc\u0646 \u06af\u0648\u0646\u0647 \u0628\u0633\u0627\u0632\u06cc\u062f&lt;b&gt;\u0627\u0646\u062a\u062e\u0627\u0628 \u062f\u0647 \u0648\u06cc\u0627 \u0628\u06cc\u0634\u062a\u0631 \u06a9\u0627\u0631\u0627\u06a9\u062a\u0631 \u062a\u0635\u0627\u062f\u0641\u06cc&lt;/b&gt; \u06cc\u0627 &lt;b&gt; \u062d\u062f\u0627\u0642\u0644 \u0647\u0634\u062a \u06a9\u0644\u0645\u0647&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u0642\u062f\u06cc\u0645\u06cc \u0648 \u0631\u0645\u0632 \u0639\u0628\u0648\u0631 \u062c\u062f\u06cc\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n         <translation>\u0648\u0627\u0644\u062a \u0631\u0645\u0632 \u0628\u0646\u062f\u06cc \u0634\u062f . \n \u06cc\u0627\u062f \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f \u06a9\u0647 \u067e\u0646\u062c\u0631\u0647 \u0631\u0645\u0632 \u0634\u062f\u0647 \u0646\u0645\u06cc \u062a\u0648\u0627\u0646\u062f \u06a9\u0644\u0627 \u0627\u0632 \u0633\u0631\u0642\u062a \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u0647\u0627\u06cc \u0645\u062e\u0631\u0628 \u0645\u062d\u0627\u0641\u0638 \u06a9\u0646\u062f</translation>\n     </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0645\u0632 \u0646\u06af\u0627\u0631\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0634\u0645\u0627 \u062f\u0631 \u062d\u0627\u0644 \u0631\u0645\u0632 \u0646\u06af\u0627\u0631\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0634\u0645\u0627 \u0627\u06a9\u0646\u0648\u0646 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06af\u0631\u062f\u06cc\u062f\u0647 \u0627\u0633\u062a.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u0645\u0647\u0645: \u0647\u0631 \u0628\u06a9\u200c\u0622\u067e \u0642\u0628\u0644\u06cc \u06a9\u0647 \u0627\u0632 \u06a9\u06cc\u0641\u200c\u067e\u0648\u0644 \u062e\u0648\u062f \u06af\u0631\u0641\u062a\u0647\u200c\u0627\u06cc\u062f\u060c \u0628\u0627 \u0646\u0633\u062e\u0647\u200c\u06cc \u062c\u062f\u06cc\u062f \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc\u200c\u0634\u062f\u0647 \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0648\u0627\u0647\u062f \u0634\u062f. \u0628\u0647 \u062f\u0644\u0627\u06cc\u0644 \u0627\u0645\u0646\u06cc\u062a\u06cc\u060c \u067e\u0633 \u0627\u0632 \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641\u200c\u067e\u0648\u0644\u060c \u0628\u06a9\u200c\u0622\u067e\u200c\u0647\u0627\u06cc \u0642\u062f\u06cc\u0645\u06cc \u0634\u0645\u0627 \u0628\u0644\u0627\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062e\u0648\u0627\u0647\u062f \u0634\u062f.</translation>\n@@ -298,6 +326,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u0628\u0627\u0632\u06a9\u0631\u062f\u0646 \u0622\u062f\u0631\u0633...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\u0627\u06cc\u062c\u0627\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u0633\u0627\u062e\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062c\u062f\u06cc\u062f</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644:</translation>\n@@ -446,6 +482,14 @@\n         <source>Up to date</source>\n         <translation>\u0628\u0647 \u0631\u0648\u0632</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u067e\u0646\u062c\u0631\u0647 \u06af\u0631\u0647</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u06a9\u0646\u0633\u0648\u0644 \u062f\u06cc \u0628\u0627\u06af \u0648 \u062a\u0634\u062e\u06cc\u0635 \u06af\u0631\u0647</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>\u0627\u062f\u0631\u0633 \u0627\u0631\u0633\u0627\u0644</translation>\n@@ -454,6 +498,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>\u0627\u062f\u0631\u0633 \u062f\u0631\u0633\u0627\u0641\u062a</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>\u0628\u0627\u0631\u06a9 \u06a9\u0631\u062f\u0646 \u06cc\u06a9 \u0628\u06cc\u062a\u200c\u06a9\u0648\u06cc\u0646: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u062d\u0633\u0627\u0628</translation>\n@@ -462,14 +510,30 @@\n         <source>Open a wallet</source>\n         <translation>\u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u06cc\u06a9 \u062d\u0633\u0627\u0628</translation>\n     </message>\n+    <message>\n+        <source>Close Wallet...</source>\n+        <translation>\u0628\u0633\u062a\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644...</translation>\n+    </message>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0628\u0628\u0646\u062f\u06cc\u062f</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n     </message>\n+    <message>\n+        <source>No wallets available</source>\n+        <translation>\u0647\u06cc\u0686 \u06a9\u06cc\u0641 \u067e\u0648\u0644\u06cc \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0646\u0645\u06cc \u0628\u0627\u0634\u062f</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>\u067e\u0646\u062c\u0631\u0647</translation>\n     </message>\n+    <message>\n+        <source>Minimize</source>\n+        <translation>\u0628\u0647 \u062d\u062f\u0627\u0642\u0644 \u0631\u0633\u0627\u0646\u062f\u0646</translation>\n+    </message>\n     <message>\n         <source>Zoom</source>\n         <translation>\u0628\u0632\u0631\u06af\u0646\u0645\u0627\u06cc\u06cc</translation>\n@@ -494,6 +558,10 @@\n         <source>Error: %1</source>\n         <translation>\u062e\u0637\u0627: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>\u0647\u0634\u062f\u0627\u0631: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -538,6 +606,18 @@\n         <source>Incoming transaction</source>\n         <translation>\u062a\u0631\u0627\u06a9\u0646\u0634 \u062f\u0631\u06cc\u0627\u0641\u062a\u06cc</translation>\n     </message>\n+    <message>\n+        <source>HD key generation is &lt;b&gt;enabled&lt;/b&gt;</source>\n+        <translation>\u062a\u0648\u0644\u06cc\u062f \u06a9\u0644\u06cc\u062f HD &lt;b&gt;\u0641\u0639\u0627\u0644 \u0627\u0633\u062a&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>HD key generation is &lt;b&gt;disabled&lt;/b&gt;</source>\n+        <translation>\u062a\u0648\u0644\u06cc\u062f \u06a9\u0644\u06cc\u062f HD &lt;b&gt; \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u0627\u0633\u062a&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Private key &lt;b&gt;disabled&lt;/b&gt;</source>\n+        <translation>\u06a9\u0644\u06cc\u062f \u062e\u0635\u0648\u0635\u06cc &lt;b&gt;\u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 &lt;/b&gt;</translation>\n+    </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>wallet \u0631\u0645\u0632\u06af\u0630\u0627\u0631\u06cc \u0634\u062f \u0648 \u062f\u0631 \u062d\u0627\u0644 \u062d\u0627\u0636\u0631 \u0627\u0632 \u062d\u0627\u0644\u062a \u0642\u0641\u0644 \u062f\u0631 \u0622\u0645\u062f\u0647 \u0627\u0633\u062a</translation>\n@@ -681,6 +761,10 @@\n         <source>no</source>\n         <translation>\u062e\u06cc\u0631</translation>\n     </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n+        <translation>\u0627\u06af\u0631 \u0647\u0631 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0645\u0642\u062f\u0627\u0631\u06cc \u06a9\u0645\u062a\u0631 \u0622\u0633\u062a\u0627\u0646\u0647 \u0641\u0639\u0644\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u062f \u0627\u0632 \u0627\u06cc\u0646 \u0644\u06cc\u0628\u0644 \u0642\u0631\u0645\u0632 \u0645\u06cc\u200c\u0634\u0648\u062f.</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u0631\u0686\u0633\u0628 \u0646\u062f\u0627\u0631\u062f)</translation>\n@@ -696,10 +780,58 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>\u062f\u0631 \u062d\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644 &lt;b&gt; %1&lt;/b&gt;...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0627\u06cc\u062c\u0627\u062f \u0646\u06af\u0631\u062f\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>\u0647\u0634\u062f\u0627\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\u0627\u06cc\u062c\u0627\u062f \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>\u0646\u0627\u0645 \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0631\u0645\u0632 \u0646\u06af\u0627\u0631\u06cc \u0646\u0645\u0627\u0626\u06cc\u062f. \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0628\u0627 \u06a9\u0644\u0645\u0627\u062a \u0631\u0645\u0632 \u0627\u0646\u062a\u062e\u0627\u0628 \u062e\u0648\u062f\u062a\u0627\u0646 \u0631\u0645\u0632 \u0646\u06af\u0627\u0631\u06cc \u062e\u0648\u0627\u0647\u062f \u0634\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>\u0631\u0645\u0632 \u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>\u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u06a9\u0644\u06cc\u062f\u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u0628\u0631\u0627\u06cc \u0627\u06cc\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644. \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0647\u0627\u06cc\u06cc \u0628\u0627 \u06a9\u0644\u06cc\u062f \u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u0647\u06cc\u0686 \u06a9\u0644\u06cc\u062f \u062e\u0635\u0648\u0635\u06cc \u0646\u062f\u0627\u0634\u062a\u0647 \u0648 \u0646\u0645\u06cc\u062a\u0648\u0627\u0646\u0646\u062f HD \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f \u0648 \u06cc\u0627 \u06a9\u0644\u06cc\u062f \u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u062f\u0627\u0631\u062f \u0634\u062f\u0646\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0646\u062f. \u0627\u06cc\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0647\u0627 \u0635\u0631\u0641\u0627\u064b \u0628\u0631\u0627\u06cc \u0631\u0635\u062f \u0645\u0646\u0627\u0633\u0628 \u0647\u0633\u062a\u0646\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>\u063a\u06cc\u0631 \u0641\u0639\u0627\u0644 \u06a9\u0631\u062f\u0646 \u06a9\u0644\u06cc\u062f\u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>\u06cc\u06a9 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0627\u0644\u06cc \u062f\u0631\u0633\u062a \u06a9\u0646\u06cc\u062f. \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0647\u0627\u06cc \u062e\u0627\u0644\u06cc \u062f\u0631 \u0627\u0628\u062a\u062f\u0627 \u06a9\u0644\u06cc\u062f \u06cc\u0627 \u0627\u0633\u06a9\u0631\u06cc\u067e\u062a \u062e\u0635\u0648\u0635\u06cc \u0646\u062f\u0627\u0631\u0646\u062f. \u06a9\u0644\u06cc\u062f\u0647\u0627 \u0648 \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u062e\u0635\u0648\u0635\u06cc \u0645\u06cc \u062a\u0648\u0627\u0646\u0646\u062f \u0648\u0627\u0631\u062f \u0634\u0648\u0646\u062f \u06cc\u0627 \u0628\u0630\u0631 HD \u0631\u0627 \u0645\u06cc \u062a\u0648\u0627\u0646 \u0628\u0639\u062f\u0627\u064b \u062a\u0646\u0638\u06cc\u0645 \u0646\u0645\u0648\u062f.</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>\u0633\u0627\u062e\u062a \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u062e\u0627\u0644\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>\u0627\u06cc\u062c\u0627\u062f</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -710,6 +842,14 @@\n         <source>&amp;Label</source>\n         <translation>\u0628\u0631\u0686\u0633\u0628</translation>\n     </message>\n+    <message>\n+        <source>The label associated with this address list entry</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628 \u0645\u0631\u062a\u0628\u0637 \u0628\u0627 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0648\u0631\u0648\u062f\u06cc</translation>\n+    </message>\n+    <message>\n+        <source>The address associated with this address list entry. This can only be modified for sending addresses.</source>\n+        <translation>\u0628\u0631\u0686\u0633\u0628 \u0645\u0631\u062a\u0628\u0637 \u0628\u0627 \u0644\u06cc\u0633\u062a \u0622\u062f\u0631\u0633 \u0648\u0631\u0648\u062f\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f. \u0627\u06cc\u0646 \u0645\u06cc \u062a\u0648\u0627\u0646\u062f \u0641\u0642\u0637  \u0628\u0631\u0627\u06cc \u0622\u062f\u0631\u0633 \u0647\u0627\u06cc \u0627\u0631\u0633\u0627\u0644\u06cc \u0627\u0635\u0644\u0627\u062d \u0634\u0648\u062f.</translation>\n+    </message>\n     <message>\n         <source>&amp;Address</source>\n         <translation>\u0622\u062f\u0631\u0633</translation>\n@@ -880,6 +1020,10 @@\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>\u0647\u0634\u062f\u0627\u0631 \u0628\u0627\u0632 \u06a9\u0631\u062f\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u067e\u06cc\u0634\u200c\u0641\u0631\u0636</translation>\n@@ -928,6 +1072,10 @@\n         <source>GB</source>\n         <translation>\u06af\u06cc\u06af\u0627\u0628\u0627\u06cc\u062a</translation>\n     </message>\n+    <message>\n+        <source>MiB</source>\n+        <translation>MiB</translation>\n+    </message>\n     <message>\n         <source>W&amp;allet</source>\n         <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -1165,6 +1313,10 @@\n </context>\n <context>\n     <name>PeerTableModel</name>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0646\u062f\u0647 \u06a9\u0627\u0631\u0628\u0631</translation>\n+    </message>\n     <message>\n         <source>Node/Service</source>\n         <translation>\u06af\u0631\u0647/\u062e\u062f\u0645\u062a</translation>\n@@ -1276,6 +1428,10 @@\n         <source>Error: %1</source>\n         <translation>\u062e\u0637\u0627: %1</translation>\n     </message>\n+    <message>\n+        <source>%1 didn't yet exit safely...</source>\n+        <translation>%1 \u0628\u0647 \u062f\u0631\u0633\u062a\u06cc \u0628\u0633\u062a\u0647 \u0646\u0634\u062f</translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>\u0646\u0627\u0634\u0646\u0627\u0633</translation>\n@@ -1299,6 +1455,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>\u062e\u0637\u0627 \u062f\u0631 \u062a\u0628\u062f\u06cc\u0644 \u0646\u0634\u0627\u0646\u06cc \u0627\u06cc\u0646\u062a\u0631\u0646\u062a\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u062f QR.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>\u067e\u0633\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 QR \u06a9\u062f \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0646\u06cc\u0633\u062a.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>\u0630\u062d\u06cc\u0631\u0647 \u06a9\u0631\u062f\u0646 Qr Code</translation>\n@@ -1326,10 +1486,18 @@\n         <source>General</source>\n         <translation>\u0639\u0645\u0648\u0645\u06cc</translation>\n     </message>\n+    <message>\n+        <source>Using BerkeleyDB version</source>\n+        <translation>\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0646\u0633\u062e\u0647 \u067e\u0627\u06cc\u06af\u0627\u0647\u200c\u062f\u0627\u062f\u0647 \u0628\u0631\u06a9\u0644\u06cc</translation>\n+    </message>\n     <message>\n         <source>Datadir</source>\n         <translation>\u067e\u0648\u0634\u0647 \u062f\u0627\u062f\u0647 Datadir</translation>\n     </message>\n+    <message>\n+        <source>Blocksdir</source>\n+        <translation>\u0641\u0648\u0644\u062f\u0631 \u0628\u0644\u0627\u06a9\u0647\u0627</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u063a\u0627\u0632 \u0628\u0647 \u06a9\u0627\u0631</translation>\n@@ -1410,10 +1578,22 @@\n         <source>Version</source>\n         <translation>\u0646\u0633\u062e\u0647</translation>\n     </message>\n+    <message>\n+        <source>Starting Block</source>\n+        <translation>\u0628\u0644\u0627\u06a9 \u0627\u0648\u0644\u06cc\u0647</translation>\n+    </message>\n     <message>\n         <source>Synced Blocks</source>\n         <translation>\u0628\u0644\u0627\u06a9\u200c\u0647\u0627\u06cc \u0647\u0645\u06af\u0627\u0645\u200c\u0633\u0627\u0632\u06cc\u200c \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>User Agent</source>\n+        <translation>\u0646\u0645\u0627\u06cc\u0646\u062f\u0647 \u06a9\u0627\u0631\u0628\u0631</translation>\n+    </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u067e\u0646\u062c\u0631\u0647 \u06af\u0631\u0647</translation>\n+    </message>\n     <message>\n         <source>Decrease font size</source>\n         <translation>\u06a9\u0627\u0647\u0634 \u062f\u0627\u062f\u0646 \u0627\u0646\u062f\u0627\u0632\u0647 \u0641\u0648\u0646\u062a</translation>\n@@ -1878,6 +2058,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm send coins</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u06a9\u0631\u062f\u0646 \u0627\u0631\u0633\u0627\u0644 \u06a9\u0648\u06cc\u0646 \u0647\u0627</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u06a9\u067e\u06cc \u0634\u062f</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u0622\u062f\u0631\u0633 \u06af\u06cc\u0631\u0646\u062f\u0647 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0627\u0633\u062a.\u0644\u0637\u0641\u0627 \u062f\u0648\u0628\u0627\u0631\u0647 \u0686\u06a9 \u06cc\u0627 \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f.</translation>\n@@ -2407,6 +2591,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Min amount</source>\n         <translation>\u062d\u062f\u0627\u0642\u0644 \u0645\u06cc\u0632\u0627\u0646 \u0648\u062c\u0647</translation>\n     </message>\n+    <message>\n+        <source>Abandon transaction</source>\n+        <translation>\u062a\u0631\u0627\u06a9\u0646\u0634 \u0631\u0627 \u0631\u0647\u0627 \u0646\u0645\u0627\u0626\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Increase transaction fee</source>\n         <translation>\u0627\u0641\u0632\u0627\u06cc\u0634 \u06a9\u0627\u0631\u0645\u0632\u062f \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n@@ -2427,6 +2615,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Copy transaction ID</source>\n         <translation>\u06a9\u067e\u06cc \u0634\u0646\u0627\u0633\u0647 \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n     </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>\u0645\u0639\u0627\u0645\u0644\u0647 \u0627\u0648\u0644\u06cc\u0647 \u0631\u0627 \u06a9\u067e\u06cc \u0646\u0645\u0627\u0626\u06cc\u062f.</translation>\n+    </message>\n     <message>\n         <source>Copy full transaction details</source>\n         <translation>\u06a9\u067e\u06cc \u06a9\u0631\u062f\u0646 \u062a\u0645\u0627\u0645\u06cc \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u062a\u0631\u0627\u06a9\u0646\u0634</translation>\n@@ -2451,6 +2643,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirmed</source>\n         <translation>\u062a\u0627\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>\u0631\u0635\u062f</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>\u062a\u0627\u0631\u06cc\u062e</translation>\n@@ -2493,6 +2689,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>\u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0631\u0627 \u0628\u0628\u0646\u062f\u06cc\u062f</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>\u0622\u06cc\u0627 \u0628\u0631\u0627\u06cc \u0628\u0633\u062a\u0646 \u06a9\u06cc\u0641 \u067e\u0648\u0644 \u0645\u0637\u0645\u0626\u0646 \u0647\u0633\u062a\u06cc\u062f&lt;i&gt; %1 &lt;/i&gt; \u061f</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n@@ -2527,6 +2731,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>New fee:</source>\n         <translation>\u06a9\u0627\u0631\u0645\u0632\u062f \u062c\u062f\u06cc\u062f:</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u06a9\u067e\u06cc \u0634\u062f</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>\u0646\u0645\u06cc\u062a\u0648\u0627\u0646 \u062a\u0631\u0627\u06a9\u0646\u0634 \u0631\u0627 \u062b\u0628\u062a \u06a9\u0631\u062f</translation>"
      },
      {
        "sha": "5af9f5f0559d29875a3bce7599ee73ca7f301408",
        "filename": "src/qt/locale/bitcoin_fi.ts",
        "status": "modified",
        "additions": 202,
        "deletions": 2,
        "changes": 204,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fi.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Rahansiirtohistoria on ajan tasalla</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Solmu ikkuna</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Avaa solmun diagnostiikka- ja vianm\u00e4\u00e4rityskonsoli </translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;L\u00e4hetysosoitteet</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;Vastaanotto-osoitteet</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Avaa bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Avaa lompakko</translation>\n@@ -783,7 +795,11 @@\n         <source>Create wallet failed</source>\n         <translation>Lompakon luonti ep\u00e4onnistui</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Luo lompakkovaroitus</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n     <message>\n@@ -802,6 +818,10 @@\n         <source>Encrypt Wallet</source>\n         <translation>Salaa lompakko</translation>\n     </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Poista t\u00e4m\u00e4n lompakon yksityiset avaimet k\u00e4yt\u00f6st\u00e4. Lompakot, joissa yksityiset avaimet on poistettu k\u00e4yt\u00f6st\u00e4, eiv\u00e4t sis\u00e4ll\u00e4 yksityisi\u00e4 avaimia, eik\u00e4 niiss\u00e4 voi olla HD-juurisanoja tai tuotuja yksityisi\u00e4 avaimia. T\u00e4m\u00e4 on ihanteellinen katselulompakkoihin.</translation>\n+    </message>\n     <message>\n         <source>Disable Private Keys</source>\n         <translation>Poista yksityisavaimet k\u00e4yt\u00f6st\u00e4</translation>\n@@ -1041,13 +1061,25 @@\n         <source>Hide</source>\n         <translation>Piilota</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Poistu</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 synkronoidaan parhaillaan. Se lataa tunnisteet ja lohkot vertaisilta ja vahvistaa ne, kunnes ne saavuttavat lohkon ketjun k\u00e4rjen.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Tuntematon. Synkronoidaan tunnisteita (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Avaa bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1059,6 +1091,10 @@\n         <source>Open wallet failed</source>\n         <translation>Lompakon avaaminen ep\u00e4onnistui</translation>\n     </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Avoimen lompakon varoitus</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>oletuslompakko</translation>\n@@ -1436,6 +1472,14 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' ei ole kelvollinen URI. K\u00e4yt\u00e4 'bitcoin:' sen sijaan.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Maksupyynt\u00f6\u00e4 ei voida k\u00e4sitell\u00e4, koska BIP70:t\u00e4 ei tueta.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>BIP70:n laajalle levinneiden tietoturvavirheiden vuoksi on eritt\u00e4in suositeltavaa, ett\u00e4 kaikki kauppiaan ohjeet lompakkojen vaihtamiseksi j\u00e4tet\u00e4\u00e4n huomioimatta.</translation>\n+    </message>\n     <message>\n         <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n         <translation>T\u00e4m\u00e4n virheen saadessasi tulee sinun pyyt\u00e4\u00e4 kauppiaalta BIP21 -yhteensopivaa URI-osoitetta.</translation>\n@@ -1744,10 +1788,22 @@\n         <source>Synced Blocks</source>\n         <translation>Synkronoidut lohkot</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Kartoitettu autonominen j\u00e4rjestelm\u00e4, jota k\u00e4ytet\u00e4\u00e4n monipuolistamaan solmuvalikoimaa</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Kartoitettu AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>K\u00e4ytt\u00f6liittym\u00e4</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Solmun n\u00e4kym\u00e4</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Avaa %1 -debug-loki t\u00e4m\u00e4nhetkisest\u00e4 data-hakemistosta. T\u00e4m\u00e4 voi vied\u00e4 muutaman sekunnin suurille lokitiedostoille.</translation>\n@@ -1959,6 +2015,18 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Valinnainen pyynt\u00f6m\u00e4\u00e4r\u00e4. J\u00e4t\u00e4 tyhj\u00e4ksi tai nollaksi jos et pyyd\u00e4 tietty\u00e4 m\u00e4\u00e4r\u00e4\u00e4.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Valinnainen tarra, joka liitet\u00e4\u00e4n uuteen vastaanotto-osoitteeseen (jonka k\u00e4yt\u00e4t laskun tunnistamiseen). Se liitet\u00e4\u00e4n my\u00f6s maksupyynt\u00f6\u00f6n.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Valinnainen viesti, joka on liitetty maksupyynt\u00f6\u00f6n ja joka voidaan n\u00e4ytt\u00e4\u00e4 l\u00e4hett\u00e4j\u00e4lle.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation> &amp;Luo uusi vastaanotto-osoite</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>Tyhjenn\u00e4 lomakkeen kaikki kent\u00e4t.</translation>\n@@ -2208,6 +2276,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Dust:</source>\n         <translation>Tomu:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation> Piilota siirtomaksuasetukset</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Mik\u00e4li lohkoissa ei ole tilaa kaikille siirtotapahtumille, voi louhijat sek\u00e4 v\u00e4litt\u00e4v\u00e4t solmut pakottaa v\u00e4himm\u00e4ispalkkion. T\u00e4m\u00e4n v\u00e4himm\u00e4ispalkkion maksaminen on t\u00e4ysin OK, mutta huomaa, ett\u00e4 se saattaa johtaa siihen, ettei siirto vahvistu koskaan, jos bitcoin-siirtoja on enemm\u00e4n kuin mit\u00e4 verkko pystyy k\u00e4sittelem\u00e4\u00e4n.</translation>\n@@ -2276,6 +2348,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 lohkoa)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>L&amp;uo allekirjoittamaton</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Luo osittain allekirjoitetun bitcoin-siirtotapahtuman (PSBT) k\u00e4ytett\u00e4v\u00e4ksi mm. offline %1 lompakko tai PSBT-yhteensopiva hardware-lompakko.</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation> lompakosta '%1'</translation>\n@@ -2284,10 +2364,18 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>%1 to %2</source>\n         <translation>%1 to %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Haluatko laatia t\u00e4m\u00e4n siirron?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Oletko varma, ett\u00e4 haluat l\u00e4hett\u00e4\u00e4?</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Ole hyv\u00e4 ja katso siirtotapahtuma ehdotuksesi. T\u00e4m\u00e4 tuottaa osittain allekirjoitetun bitcoin-siirtotapahtuman (PSBT), jonka voit kopioida ja sitten allekirjoittaa esimerkiksi offline %1 lompakko tai PSBT-yhteensopiva hardware-lompakko.</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>tai</translation>\n@@ -2304,6 +2392,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Transaction fee</source>\n         <translation>Siirtokulu</translation>\n     </message>\n+    <message>\n+        <source>Not signalling Replace-By-Fee, BIP-125.</source>\n+        <translation>Ei signalointia Korvattavissa korkeammalla kululla, BIP-125.</translation>\n+    </message>\n     <message>\n         <source>Total Amount</source>\n         <translation>Yhteens\u00e4</translation>\n@@ -2316,6 +2408,26 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Confirm send coins</source>\n         <translation>Vahvista kolikoiden l\u00e4hetys</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Vahvista siirtoehdotus</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Kopioi PSBT leikep\u00f6yd\u00e4lle</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>L\u00e4het\u00e4</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT kopioitu</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Katselulompakon saldo:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Vastaanottajan osoite ei ole kelvollinen. Tarkista osoite.</translation>\n@@ -2411,6 +2523,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Remove this entry</source>\n         <translation>Poista t\u00e4m\u00e4 alkio</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>L\u00e4hetett\u00e4v\u00e4 summa valitussa yksik\u00f6ss\u00e4</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Kulu v\u00e4hennet\u00e4\u00e4n l\u00e4hetett\u00e4v\u00e4st\u00e4 m\u00e4\u00e4r\u00e4st\u00e4. Saaja vastaanottaa v\u00e4hemm\u00e4n bitcoineja kuin merkitset M\u00e4\u00e4r\u00e4-kentt\u00e4\u00e4n. Jos saajia on monia, kulu jaetaan tasan.</translation>\n@@ -2537,6 +2653,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Bitcoin-osoite jolla viesti on allekirjoitettu</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Allekirjoitettu viesti vahvistettavaksi</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>Viestin allekirjoittamisen yhteydess\u00e4 annettu allekirjoitus</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Tarkista viestin allekirjoitus varmistaaksesi, ett\u00e4 se allekirjoitettiin tietyll\u00e4 Bitcoin-osoitteella</translation>\n@@ -2569,6 +2693,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Lompakon avaaminen peruttiin.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Ei virhett\u00e4</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>Yksityist\u00e4 avainta sy\u00f6tetylle osoitteelle ei ole saatavilla.</translation>\n@@ -2739,6 +2867,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Transaction virtual size</source>\n         <translation>Tapahtuman n\u00e4enn\u00e4iskoko</translation>\n     </message>\n+    <message>\n+        <source>Output index</source>\n+        <translation>Ulostulon indeksi</translation>\n+    </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation> (Sertifikaattia ei vahvistettu)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Kauppias</translation>\n@@ -3092,6 +3228,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Do you want to increase the fee?</source>\n         <translation>Haluatko nostaa siirtomaksua?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Haluatko nostaa siirtomaksua siirtoon?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>Nykyinen palkkio:</translation>\n@@ -3108,6 +3248,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Confirm fee bump</source>\n         <translation>Vahvista palkkion korotus</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation> Siirtoa ei voida laatia.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT kopioitu</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>Siirtoa ei voida allekirjoittaa.</translation>\n@@ -3198,6 +3346,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n         <translation>Ei voida lukita data-hakemistoa %s. %s on luultavasti jo k\u00e4ynniss\u00e4.</translation>\n     </message>\n+    <message>\n+        <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n+        <translation>Ei voida tarjota tiettyj\u00e4 yhteyksi\u00e4, ja antaa addrmanin l\u00f6yt\u00e4\u00e4 l\u00e4htevi\u00e4 yhteyksi\u00e4 samanaikaisesti.</translation>\n+    </message>\n     <message>\n         <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n         <translation>Virhe luettaessa %s! Avaimet luetttiin oikein, mutta rahansiirtotiedot tai osoitekirjan sis\u00e4lt\u00f6 saattavat olla puutteellisia tai v\u00e4\u00e4ri\u00e4.</translation>\n@@ -3254,6 +3406,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>-%s -osoitteen '%s' selvitt\u00e4minen ep\u00e4onnistui</translation>\n     </message>\n+    <message>\n+        <source>Change index out of range</source>\n+        <translation>Vaihda hakemisto alueen ulkopuolelle</translation>\n+    </message>\n+    <message>\n+        <source>Config setting for %s only applied on %s network when in [%s] section.</source>\n+        <translation>Konfigurointiasetuksen %s k\u00e4ytt\u00f6\u00f6n vain %s -verkossa, kun osassa [%s].</translation>\n+    </message>\n     <message>\n         <source>Copyright (C) %i-%i</source>\n         <translation>Tekij\u00e4noikeus (C) %i-%i</translation>\n@@ -3262,6 +3422,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Corrupted block database detected</source>\n         <translation>Vioittunut lohkotietokanta havaittu</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Asmap-tiedostoa %s ei l\u00f6ytynyt</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Asmap-tiedostoa %s ei voitu j\u00e4sent\u00e4\u00e4</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Haluatko uudelleenrakentaa lohkotietokannan nyt?</translation>\n@@ -3278,6 +3446,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Error loading %s</source>\n         <translation>Virhe ladattaessa %s</translation>\n     </message>\n+    <message>\n+        <source>Error loading %s: Private keys can only be disabled during creation</source>\n+        <translation>Virhe %s:n lataamisessa: Yksityiset avaimet voidaan poistaa k\u00e4yt\u00f6st\u00e4 vain luomisen aikana</translation>\n+    </message>\n     <message>\n         <source>Error loading %s: Wallet corrupted</source>\n         <translation>Virhe ladattaessa %s: Lompakko vioittunut</translation>\n@@ -3330,6 +3502,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>M\u00e4\u00e4r\u00e4tty\u00e4 lohkohakemistoa \"%s\" ei ole olemassa.</translation>\n     </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Tuntematon osoitetyyppi '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>Tuntematon vaihtorahatyyppi '%s'</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>P\u00e4ivitet\u00e4\u00e4n txindex -tietokantaa</translation>\n@@ -3406,6 +3586,10 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n         <translation>Virhe: Saapuvien yhteyksien kuuntelu ep\u00e4onnistui (kuuntelu palautti virheen %s)</translation>\n     </message>\n+    <message>\n+        <source>Invalid amount for -maxtxfee=&lt;amount&gt;: '%s' (must be at least the minrelay fee of %s to prevent stuck transactions)</source>\n+        <translation>Virheellinen summa -maxtxfee =: '%s' (t\u00e4ytyy olla v\u00e4hint\u00e4\u00e4n %s minrelay-kulu, jotta estet\u00e4\u00e4n jumiutuneet siirtotapahtumat)</translation>\n+    </message>\n     <message>\n         <source>The transaction amount is too small to send after the fee has been deducted</source>\n         <translation>Siirtom\u00e4\u00e4r\u00e4 on liian pieni l\u00e4hetett\u00e4v\u00e4ksi kulun v\u00e4hent\u00e4misen j\u00e4lkeen.</translation>\n@@ -3500,6 +3684,14 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Unable to create the PID file '%s': %s</source>\n         <translation>PID-tiedostoa '%s' ei voitu luoda: %s</translation>\n     </message>\n+    <message>\n+        <source>Unable to generate initial keys</source>\n+        <translation>Alkuavaimia ei voi luoda</translation>\n+    </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>Tuntematon -lohkosuodatusindeksiarvo %s.</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>Varmistetaan lompakko(ja)...</translation>\n@@ -3550,7 +3742,7 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n     </message>\n     <message>\n         <source>This is the transaction fee you will pay if you send a transaction.</source>\n-        <translation>T\u00e4m\u00e4 on l\u00e4hetyksest\u00e4 maksettava maksu jonka maksat</translation>\n+        <translation>T\u00e4m\u00e4 on se siirtomaksu, jonka maksat, mik\u00e4li l\u00e4het\u00e4t siirron.</translation>\n     </message>\n     <message>\n         <source>Transaction amounts must not be negative</source>\n@@ -3572,10 +3764,18 @@ Huom: Koska siirtomaksu lasketaan tavujen mukaan, niin m\u00e4\u00e4rittelem\u00e4ll\u00e4 500 t\n         <source>Insufficient funds</source>\n         <translation>Lompakon saldo ei riit\u00e4</translation>\n     </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.</source>\n+        <translation>Muuta kuin HD-jaettua lompakkoa ei voi p\u00e4ivitt\u00e4\u00e4 ilman p\u00e4ivityst\u00e4 tukemaan esijaettua avainvarastoa. K\u00e4yt\u00e4 -upgradewallet = 169900 tai -upgradewallet ilman m\u00e4\u00e4ritetty\u00e4 versiota.</translation>\n+    </message>\n     <message>\n         <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n         <translation>Siirtomaksun arviointi ep\u00e4onnistui. Odota muutama lohko tai k\u00e4yt\u00e4 -fallbackfee -valintaa..</translation>\n     </message>\n+    <message>\n+        <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n+        <translation>Varoitus: lompakosta {%s} tunnistetut yksityiset avaimet, on poistettu k\u00e4yt\u00f6st\u00e4</translation>\n+    </message>\n     <message>\n         <source>Cannot write to data directory '%s'; check permissions.</source>\n         <translation>Hakemistoon '%s' ei voida kirjoittaa. Tarkista k\u00e4ytt\u00f6oikeudet.</translation>"
      },
      {
        "sha": "e7066131b6e5ea8a272aea5c66a913a3422293b7",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Blocs synchronis\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Le syst\u00e8me autonome mapp\u00e9 utilis\u00e9 pour diversifier la s\u00e9lection des pairs.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>SA mapp\u00e9</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Agent utilisateur</translation>"
      },
      {
        "sha": "20b9fb1bbd4d073dd4ddbe612360238bcac8889a",
        "filename": "src/qt/locale/bitcoin_gl_ES.ts",
        "status": "renamed",
        "additions": 831,
        "deletions": 820,
        "changes": 1651,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_gl_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_gl_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_gl_ES.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "previous_filename": "src/qt/locale/bitcoin_tr.ts"
      },
      {
        "sha": "56c37a74dd38b84d665a8ab4a2fd512d50cdaed5",
        "filename": "src/qt/locale/bitcoin_he.ts",
        "status": "modified",
        "additions": 202,
        "deletions": 9,
        "changes": 211,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_he.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_he.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_he.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -141,7 +141,7 @@\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n-        <translation>\u05d4\u05e6\u05e4\u05e0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7</translation>\n+        <translation>\u05d4\u05e6\u05e4\u05df \u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n     <message>\n         <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n@@ -179,6 +179,31 @@\n         <source>Wallet encrypted</source>\n         <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 \u05de\u05d5\u05e6\u05e4\u05df</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u05d4\u05e7\u05e9 \u05e1\u05d9\u05e1\u05de\u05d4 \u05d7\u05d3\u05e9\u05d4 \u05dc\u05d0\u05e8\u05e0\u05e7.\n+\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05e1\u05d9\u05e1\u05de\u05d4 \u05d4\u05db\u05d5\u05dc\u05dc\u05ea \u05e2\u05e9\u05e8\u05d4 \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8 \u05ea\u05d5\u05d5\u05d9\u05dd \u05d0\u05e7\u05e8\u05d0\u05d9\u05dd, \u05d0\u05d5 \u05e9\u05de\u05d5\u05e0\u05d4 \u05d0\u05d5 \u05d9\u05d5\u05ea\u05e8 \u05de\u05d9\u05dc\u05d9\u05dd.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u05d4\u05e7\u05e9 \u05d0\u05ea \u05d4\u05e1\u05d9\u05e1\u05de\u05d0 \u05d4\u05d9\u05e9\u05e0\u05d4 \u05d5\u05d4\u05d7\u05d3\u05e9\u05d4 \u05dc\u05d0\u05e8\u05e0\u05e7.</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u05d6\u05db\u05d5\u05e8 \u05e9\u05d4\u05e6\u05e4\u05e0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05dc\u05d0 \u05d9\u05db\u05d5\u05dc\u05d4 \u05dc\u05d4\u05d2\u05df \u05e2\u05dc\u05d9\u05da \u05dc\u05d2\u05de\u05e8\u05d9 \u05de\u05d2\u05e0\u05d9\u05d1\u05ea \u05d4\u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05e9\u05dc\u05da \u05e2\u05dc \u05d9\u05d3\u05d9 \u05ea\u05d5\u05db\u05e0\u05d4 \u05d6\u05d3\u05d5\u05e0\u05d9\u05ea \u05e9\u05e0\u05de\u05e6\u05d0\u05ea \u05e2\u05dc \u05d4\u05de\u05d7\u05e9\u05d1 \u05e9\u05dc\u05da.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 \u05d4\u05de\u05d9\u05d5\u05e2\u05d3 \u05dc\u05d4\u05e6\u05e4\u05e0\u05d4</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 \u05e9\u05dc\u05da \u05e2\u05d5\u05de\u05d3 \u05dc\u05d4\u05d9\u05d5\u05ea \u05de\u05d5\u05e6\u05e4\u05df/</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u05d4\u05d0\u05e8\u05e0\u05e7 \u05e9\u05dc\u05da \u05de\u05d5\u05e6\u05e4\u05df \u05db\u05e2\u05ea/</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\u05d7\u05e9\u05d5\u05d1! \u05db\u05dc \u05d2\u05d9\u05d1\u05d5\u05d9 \u05e7\u05d5\u05d3\u05dd \u05e9\u05e2\u05e9\u05d9\u05ea \u05dc\u05d0\u05e8\u05e0\u05e7 \u05e9\u05dc\u05da \u05d9\u05e9 \u05dc\u05d4\u05d7\u05dc\u05d9\u05e3 \u05e2\u05dd \u05e7\u05d5\u05d1\u05e5 \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d4\u05de\u05d5\u05e6\u05e4\u05df \u05e9\u05d6\u05d4 \u05e2\u05ea\u05d4 \u05e0\u05d5\u05e6\u05e8. \u05de\u05e1\u05d9\u05d1\u05d5\u05ea \u05d0\u05d1\u05d8\u05d7\u05d4, \u05d2\u05d9\u05d1\u05d5\u05d9\u05d9\u05dd \u05e7\u05d5\u05d3\u05de\u05d9\u05dd \u05e9\u05dc \u05e7\u05d5\u05d1\u05e5 \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d4\u05dc\u05d0-\u05de\u05d5\u05e6\u05e4\u05df \u05d9\u05d4\u05e4\u05db\u05d5 \u05dc\u05d7\u05e1\u05e8\u05d9 \u05e9\u05d9\u05de\u05d5\u05e9 \u05d1\u05e8\u05d2\u05e2 \u05e9\u05ea\u05ea\u05d7\u05d9\u05dc \u05dc\u05d4\u05e9\u05ea\u05de\u05e9 \u05d1\u05d0\u05e8\u05e0\u05e7 \u05d4\u05d7\u05d3\u05e9 \u05d4\u05de\u05d5\u05e6\u05e4\u05df.</translation>\n@@ -301,6 +326,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u05e4\u05ea\u05d9\u05d7\u05ea &amp;\u05db\u05ea\u05d5\u05d1\u05ea \u05de\u05e9\u05d0\u05d1\u2026</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\u05e6\u05d5\u05e8 \u05d0\u05e8\u05e0\u05e7...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u05e6\u05d5\u05e8 \u05d0\u05e8\u05e0\u05e7 \u05d7\u05d3\u05e9</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>\u05d0\u05e8\u05e0\u05e7:</translation>\n@@ -431,7 +464,7 @@\n     </message>\n     <message>\n         <source>Transactions after this will not yet be visible.</source>\n-        <translation>\u05d4\u05d4\u05e2\u05d1\u05e8\u05d5\u05ea \u05e9\u05d1\u05d5\u05e6\u05e2\u05d5 \u05dc\u05d0\u05d7\u05e8 \u05d4\u05e2\u05d1\u05e8\u05d4 \u05d6\u05d5 \u05dc\u05d0 \u05d9\u05d5\u05e4\u05d9\u05e2\u05d5.</translation>\n+        <translation>\u05e2\u05e1\u05e7\u05d0\u05d5\u05ea \u05e9\u05d1\u05d5\u05e6\u05e2\u05d5 \u05dc\u05d0\u05d7\u05e8 \u05d4\u05e2\u05d1\u05e8\u05d4 \u05d6\u05d5 \u05dc\u05d0 \u05d9\u05d5\u05e4\u05d9\u05e2\u05d5.</translation>\n     </message>\n     <message>\n         <source>Error</source>\n@@ -449,6 +482,14 @@\n         <source>Up to date</source>\n         <translation>\u05e2\u05d3\u05db\u05e0\u05d9</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u05d7\u05dc\u05d5\u05df \u05e6\u05d5\u05de\u05ea</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05e0\u05d9\u05e4\u05d5\u05d9 \u05d1\u05d0\u05d2\u05d9\u05dd \u05d1\u05e6\u05d5\u05de\u05ea \u05d5\u05d2\u05dd \u05de\u05e1\u05d5\u05e3 \u05d1\u05e7\u05e8\u05d4 \u05dc\u05d0\u05d1\u05d7\u05d5\u05df</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;\u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05dc\u05de\u05e9\u05dc\u05d5\u05d7</translation>\n@@ -457,6 +498,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;\u05db\u05ea\u05d5\u05d1\u05d5\u05ea \u05dc\u05e7\u05d1\u05dc\u05d4</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df: \u05db\u05ea\u05d5\u05d1\u05ea \u05de\u05e9\u05d0\u05d1</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05d0\u05e8\u05e0\u05e7</translation>\n@@ -670,7 +715,7 @@\n     </message>\n     <message>\n         <source>Copy transaction ID</source>\n-        <translation>\u05d4\u05e2\u05ea\u05e7\u05ea \u05de\u05d6\u05d4\u05d4 \u05d4\u05d4\u05e2\u05d1\u05e8\u05d4</translation>\n+        <translation>\u05d4\u05e2\u05ea\u05e7\u05ea \u05de\u05d6\u05d4\u05d4 \u05d4\u05e2\u05e1\u05e7\u05d4</translation>\n     </message>\n     <message>\n         <source>Lock unspent</source>\n@@ -739,10 +784,46 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>\u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05e0\u05db\u05e9\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>\u05d0\u05d6\u05d4\u05e8\u05d4 \u05dc\u05d2\u05d1\u05d9 \u05d9\u05e6\u05d9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\u05e6\u05d5\u05e8 \u05d0\u05e8\u05e0\u05e7.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>\u05e9\u05dd \u05d4\u05d0\u05e8\u05e0\u05e7</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>\u05d4\u05e6\u05e4\u05df \u05d0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7. \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d9\u05d4\u05d9\u05d4 \u05de\u05d5\u05e6\u05e4\u05df \u05d1\u05d0\u05de\u05e6\u05e2\u05d5\u05ea \u05e1\u05d9\u05e1\u05de\u05d0 \u05dc\u05d1\u05d7\u05d9\u05e8\u05ea\u05da.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>\u05d4\u05e6\u05e4\u05e0\u05ea \u05d0\u05e8\u05e0\u05e7</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>\u05d4\u05e9\u05d1\u05ea\u05ea \u05de\u05e4\u05ea\u05d7\u05d5\u05ea \u05e4\u05e8\u05d8\u05d9\u05d9\u05dd</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>\u05e6\u05d5\u05e8 \u05d0\u05e8\u05e0\u05e7 \u05e8\u05d9\u05e7</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>\u05e6\u05d5\u05e8</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -953,20 +1034,36 @@\n         <source>Hide</source>\n         <translation>\u05d4\u05e1\u05ea\u05e8</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>\u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2. \u05e1\u05d9\u05e0\u05db\u05e8\u05d5\u05df \u05db\u05d5\u05ea\u05e8\u05d5\u05ea (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05db\u05ea\u05d5\u05d1\u05ea \u05de\u05e9\u05d0\u05d1 \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05de\u05e9\u05d0\u05d1:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>\u05e4\u05ea\u05d9\u05d7\u05ea \u05d0\u05e8\u05e0\u05e7 \u05e0\u05db\u05e9\u05dc\u05d4</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>\u05d0\u05d6\u05d4\u05e8\u05ea \u05e4\u05ea\u05d9\u05d7\u05ea \u05d0\u05e8\u05e0\u05e7</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\u05d0\u05e8\u05e0\u05e7 \u05d1\u05e8\u05e8\u05ea \u05de\u05d7\u05d3\u05dc</translation>\n@@ -1004,7 +1101,7 @@\n     </message>\n     <message>\n         <source>IP address of the proxy (e.g. IPv4: 127.0.0.1 / IPv6: ::1)</source>\n-        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05beIP \u05e9\u05dc \u05d4\u05de\u05ea\u05d5\u05d5\u05da (\u05dc\u05d3\u05d5\u05d2\u05de\u05d4 IPv4: 127.0.0.1\u200f / IPv6: ::1)</translation>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05beIP \u05e9\u05dc \u05d4\u05e4\u05e8\u05d5\u05e7\u05e1\u05d9 (\u05dc\u05d3\u05d5\u05d2\u05de\u05d4 IPv4: 127.0.0.1\u200f / IPv6: ::1)</translation>\n     </message>\n     <message>\n         <source>Shows if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n@@ -1505,6 +1602,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>\u05e9\u05d2\u05d9\u05d0\u05d4 \u05d1\u05e7\u05d9\u05d3\u05d5\u05d3 \u05d4 URI \u05dc\u05d1\u05e8\u05e7\u05d5\u05d3.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>\u05ea\u05de\u05d9\u05db\u05d4 \u05d1\u05e7\u05d5\u05d3 QR \u05dc\u05d0 \u05d6\u05de\u05d9\u05e0\u05d4.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>\u05e9\u05de\u05d9\u05e8\u05ea \u05e7\u05d5\u05d3 QR</translation>\n@@ -1644,10 +1745,18 @@\n         <source>Synced Blocks</source>\n         <translation>\u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05de\u05e1\u05d5\u05e0\u05db\u05e8\u05e0\u05d9\u05dd</translation>\n     </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>\u05de\u05d5\u05e4\u05d4 \u05d1\u05ea\u05d5\u05e8</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>\u05e1\u05d5\u05db\u05df \u05de\u05e9\u05ea\u05de\u05e9</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u05d7\u05dc\u05d5\u05df \u05e6\u05d5\u05de\u05ea</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u05e4\u05ea\u05d7\u05d5 \u05d0\u05ea \u05dc\u05d5\u05d2 \u05e0\u05d9\u05e4\u05d5\u05d9 \u05d4\u05e9\u05d2\u05d9\u05d0\u05d5\u05ea \u05d4%1 \u05de\u05ea\u05d9\u05e7\u05d9\u05d9\u05ea \u05d4\u05e0\u05ea\u05d5\u05e0\u05d9\u05dd \u05d4\u05e0\u05d5\u05db\u05d7\u05d9\u05ea. \u05e2\u05d1\u05d5\u05e8 \u05e7\u05d1\u05e6\u05d9 \u05dc\u05d5\u05d2 \u05d2\u05d3\u05d5\u05dc\u05d9\u05dd \u05d9\u05d9\u05ea\u05db\u05df \u05d6\u05de\u05df \u05d4\u05de\u05ea\u05e0\u05d4 \u05e9\u05dc \u05de\u05e1\u05e4\u05e8 \u05e9\u05e0\u05d9\u05d5\u05ea.</translation>\n@@ -1798,7 +1907,7 @@\n     </message>\n     <message>\n         <source>(node id: %1)</source>\n-        <translation>(node id: %1)</translation>\n+        <translation>(\u05de\u05d6\u05d4\u05d4 \u05e6\u05d5\u05de\u05ea: %1)</translation>\n     </message>\n     <message>\n         <source>via %1</source>\n@@ -1859,6 +1968,10 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>\u05e1\u05db\u05d5\u05dd \u05db\u05e8\u05e9\u05d5\u05ea \u05dc\u05d1\u05e7\u05e9\u05d4. \u05e0\u05d9\u05ea\u05df \u05dc\u05d4\u05e9\u05d0\u05d9\u05e8 \u05d6\u05d0\u05ea \u05e8\u05d9\u05e7 \u05db\u05d3\u05d9 \u05dc\u05d0 \u05dc\u05d1\u05e7\u05e9 \u05e1\u05db\u05d5\u05dd \u05de\u05e1\u05d5\u05d9\u05dd.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;\u05d9\u05e6\u05d9\u05e8\u05ea \u05db\u05ea\u05d5\u05d1\u05ea \u05e7\u05d1\u05dc\u05d4 \u05d7\u05d3\u05e9\u05d4</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>\u05e0\u05d9\u05e7\u05d5\u05d9 \u05e9\u05dc \u05db\u05dc \u05d4\u05e9\u05d3\u05d5\u05ea \u05d1\u05d8\u05d5\u05e4\u05e1.</translation>\n@@ -2108,6 +2221,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Dust:</source>\n         <translation>\u05d0\u05d1\u05e7:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>\u05d4\u05e1\u05ea\u05e8\u05ea \u05d4\u05d2\u05d3\u05e8\u05d5\u05ea \u05e2\u05de\u05dc\u05ea \u05e2\u05e1\u05e7\u05d4</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>\u05db\u05d0\u05e9\u05e8 \u05d9\u05e9 \u05e4\u05d7\u05d5\u05ea \u05e0\u05e4\u05d7 \u05e2\u05e1\u05e7\u05d0\u05d5\u05ea \u05de\u05d0\u05e9\u05e8 \u05de\u05e7\u05d5\u05dd \u05d1\u05d1\u05dc\u05d5\u05e7, \u05db\u05d5\u05e8\u05d9\u05dd \u05d5\u05db\u05df \u05e6\u05de\u05ea\u05d5\u05ea \u05de\u05e7\u05e9\u05e8\u05d5\u05ea \u05d9\u05db\u05d5\u05dc\u05d5\u05ea \u05dc\u05d4\u05db\u05ea\u05d9\u05d1 \u05e2\u05de\u05dc\u05d5\u05ea \u05de\u05d9\u05e0\u05d9\u05de\u05d5\u05dd. \u05d4\u05ea\u05e9\u05dc\u05d5\u05dd \u05e9\u05dc \u05e2\u05de\u05dc\u05ea \u05de\u05d9\u05e0\u05d9\u05de\u05d5\u05dd \u05d4\u05e0\u05d5 \u05ea\u05e7\u05d9\u05df, \u05d0\u05da \u05d9\u05e9 \u05dc\u05e7\u05d7\u05ea \u05d1\u05d7\u05e9\u05d1\u05d5\u05df \u05e9\u05d4\u05d3\u05d1\u05e8 \u05d9\u05db\u05d5\u05dc \u05dc\u05d2\u05e8\u05d5\u05dd \u05dc\u05e2\u05e1\u05e7\u05d4 \u05e9\u05dc\u05d0 \u05ea\u05d0\u05d5\u05e9\u05e8 \u05d1\u05e8\u05d2\u05e2 \u05e9\u05d9\u05e9 \u05d9\u05d5\u05ea\u05e8 \u05d1\u05d9\u05e7\u05d5\u05e9 \u05dc\u05e2\u05e1\u05e7\u05d0\u05d5\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05de\u05d0\u05e9\u05e8 \u05d4\u05e8\u05e9\u05ea \u05d9\u05db\u05d5\u05dc\u05d4 \u05dc\u05e2\u05d1\u05d3.</translation>\n@@ -2176,10 +2293,30 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>\u05d9\u05e6&amp;\u05d9\u05e8\u05ea \u05dc\u05d0 \u05d7\u05ea\u05d5\u05dd</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>\u05d9\u05d5\u05e6\u05e8 \u05e2\u05e1\u05e7\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d7\u05ea\u05d5\u05de\u05d4 \u05d7\u05dc\u05e7\u05d9\u05ea (PSBT) \u05dc\u05e9\u05d9\u05de\u05d5\u05e9 \u05e2\u05dd \u05d0\u05e8\u05e0\u05e7 %1 \u05dc\u05d0 \u05de\u05d7\u05d5\u05d1\u05e8 \u05dc\u05de\u05e9\u05dc, \u05d0\u05d5 \u05e2\u05dd PSBT \u05d0\u05e8\u05e0\u05e7 \u05d7\u05d5\u05de\u05e8\u05d4 \u05ea\u05d5\u05d0\u05dd.</translation>\n+    </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation>\u05de\u05ea\u05d5\u05da \u05d0\u05e8\u05e0\u05e7 '%1'</translation>\n+    </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>%1 \u05d0\u05dc '%2'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 \u05dc %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\u05d4\u05d0\u05dd \u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e9\u05de\u05d5\u05e8 \u05e2\u05e1\u05e7\u05d4 \u05d6\u05d5 \u05db\u05d8\u05d9\u05d5\u05d8\u05d4?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u05dc\u05e9\u05dc\u05d5\u05d7?</translation>\n@@ -2212,6 +2349,22 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm send coins</source>\n         <translation>\u05d0\u05d9\u05de\u05d5\u05ea \u05e9\u05dc\u05d9\u05d7\u05ea \u05de\u05d8\u05d1\u05e2\u05d5\u05ea</translation>\n     </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>\u05d4\u05e2\u05ea\u05e7\u05ea PSBT \u05d0\u05dc \u05dc\u05d5\u05d7 \u05d4\u05d2\u05d6\u05d9\u05e8\u05d9\u05dd</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>\u05e9\u05dc\u05d7</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u05d4\u05d5\u05e2\u05ea\u05e7\u05d4</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>\u05d9\u05ea\u05e8\u05ea \u05e6\u05e4\u05d9\u05d9\u05d4-\u05d1\u05dc\u05d1\u05d3</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05e0\u05de\u05e2\u05df \u05e9\u05d2\u05d5\u05d9\u05d4. \u05e0\u05d0 \u05dc\u05d1\u05d3\u05d5\u05e7 \u05e9\u05d5\u05d1.</translation>\n@@ -2433,6 +2586,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05e9\u05d0\u05ea\u05d4 \u05e0\u05d7\u05ea\u05de\u05d4 \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>\u05d4\u05d4\u05d5\u05d3\u05e2\u05d4 \u05d4\u05d7\u05ea\u05d5\u05de\u05d4 \u05dc\u05d0\u05d9\u05de\u05d5\u05ea</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>\u05e0\u05d9\u05ea\u05df \u05dc\u05d0\u05de\u05ea \u05d0\u05ea \u05d4\u05d4\u05d5\u05d3\u05e2\u05d4 \u05db\u05d3\u05d9 \u05dc\u05d4\u05d1\u05d8\u05d9\u05d7 \u05e9\u05d4\u05d9\u05d0 \u05e0\u05d7\u05ea\u05de\u05d4 \u05e2\u05dd \u05db\u05ea\u05d5\u05d1\u05ea \u05d4\u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d4\u05e0\u05ea\u05d5\u05e0\u05d4</translation>\n@@ -2465,6 +2622,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Wallet unlock was cancelled.</source>\n         <translation>\u05e9\u05d7\u05e8\u05d5\u05e8 \u05d4\u05d0\u05e8\u05e0\u05e7 \u05d1\u05d5\u05d8\u05dc.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>\u05d0\u05d9\u05df \u05e9\u05d2\u05d9\u05d0\u05d4</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>\u05d4\u05de\u05e4\u05ea\u05d7 \u05d4\u05e4\u05e8\u05d8\u05d9 \u05dc\u05db\u05ea\u05d5\u05d1\u05ea \u05e9\u05d4\u05d5\u05db\u05e0\u05e1\u05d4 \u05d0\u05d9\u05e0\u05d5 \u05d6\u05de\u05d9\u05df.</translation>\n@@ -2639,13 +2800,17 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Output index</source>\n         <translation>\u05de\u05e4\u05ea\u05d7 \u05e4\u05dc\u05d8</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(\u05d4\u05d0\u05d9\u05e9\u05d5\u05e8 \u05dc\u05d0 \u05d0\u05d5\u05de\u05ea)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>\u05e1\u05d5\u05d7\u05e8</translation>\n     </message>\n     <message>\n         <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n-        <translation>\u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05de\u05d5\u05e4\u05e7\u05d9\u05dd \u05d7\u05d9\u05d9\u05d1\u05d9\u05dd \u05dc\u05d4\u05d1\u05e9\u05d9\u05dc \u05d1\u05de\u05e9\u05da %1 \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05dc\u05e4\u05e0\u05d9 \u05e9\u05e0\u05d9\u05ea\u05df \u05dc\u05d1\u05d6\u05d1\u05d6\u05dd. \u05db\u05e9\u05d4\u05e4\u05e7\u05ea\u05dd \u05d1\u05dc\u05d5\u05e7 \u05d6\u05d4, \u05d4\u05d1\u05dc\u05d5\u05e7 \u05e9\u05d5\u05d3\u05e8 \u05dc\u05e8\u05e9\u05ea \u05dc\u05e6\u05d5\u05e8\u05da \u05d4\u05d5\u05e1\u05e4\u05d4 \u05dc\u05d1\u05dc\u05d5\u05e7\u05e6'\u05d9\u05d9\u05df. \u05d0\u05dd \u05d4\u05d1\u05dc\u05d5\u05e7 \u05dc\u05d0 \u05d9\u05ea\u05d5\u05d5\u05e1\u05e3 \u05dc\u05d1\u05dc\u05d5\u05e7\u05e6'\u05d9\u05d9\u05df, \u05de\u05e6\u05d1 \u05d4\u05d1\u05dc\u05d5\u05e7 \u05d9\u05e9\u05d5\u05e0\u05d4 \u05dc \"\u05dc\u05d0 \u05d4\u05ea\u05e7\u05d1\u05dc\" \u05d5\u05dc\u05d0 \u05d9\u05d4\u05d9\u05d4 \u05e0\u05d9\u05ea\u05df \u05dc\u05d1\u05d6\u05d1\u05d6\u05d5. \u05de\u05e6\u05d1 \u05d6\u05d4 \u05e2\u05dc\u05d5\u05dc \u05dc\u05e7\u05e8\u05d5\u05ea \u05db\u05d0\u05e9\u05e8 \u05e9\u05e8\u05ea \u05d1\u05d9\u05d8\u05e7\u05d5\u05d9\u05df \u05d0\u05d7\u05e8 \u05de\u05e4\u05d9\u05e7 \u05d1\u05dc\u05d5\u05e7 \u05d1\u05d4\u05e4\u05e8\u05e9 \u05e9\u05dc \u05db\u05de\u05d4 \u05e9\u05e0\u05d9\u05d5\u05ea \u05de\u05e9\u05dc\u05db\u05dd.</translation>\n+        <translation>\u05de\u05d8\u05d1\u05e2\u05d5\u05ea \u05de\u05d5\u05e4\u05e7\u05d9\u05dd \u05d7\u05d9\u05d9\u05d1\u05d9\u05dd \u05dc\u05d4\u05d1\u05e9\u05d9\u05dc \u05d1\u05de\u05e9\u05da %1 \u05d1\u05dc\u05d5\u05e7\u05d9\u05dd \u05dc\u05e4\u05e0\u05d9 \u05e9\u05e0\u05d9\u05ea\u05df \u05dc\u05d1\u05d6\u05d1\u05d6\u05dd. \u05db\u05e9\u05d4\u05e4\u05e7\u05ea\u05dd \u05d1\u05dc\u05d5\u05e7 \u05d6\u05d4, \u05d4\u05d1\u05dc\u05d5\u05e7 \u05e9\u05d5\u05d3\u05e8 \u05dc\u05e8\u05e9\u05ea \u05dc\u05e6\u05d5\u05e8\u05da \u05d4\u05d5\u05e1\u05e4\u05d4 \u05dc\u05d1\u05dc\u05d5\u05e7\u05e6'\u05d9\u05d9\u05df. \u05d0\u05dd \u05d4\u05d1\u05dc\u05d5\u05e7 \u05dc\u05d0 \u05d9\u05ea\u05d5\u05d5\u05e1\u05e3 \u05dc\u05d1\u05dc\u05d5\u05e7\u05e6'\u05d9\u05d9\u05df, \u05de\u05e6\u05d1 \u05d4\u05d1\u05dc\u05d5\u05e7 \u05d9\u05e9\u05d5\u05e0\u05d4 \u05dc\"\u05dc\u05d0 \u05d4\u05ea\u05e7\u05d1\u05dc\" \u05d5\u05dc\u05d0 \u05d9\u05d4\u05d9\u05d4 \u05e0\u05d9\u05ea\u05df \u05dc\u05d1\u05d6\u05d1\u05d6\u05d5. \u05de\u05e6\u05d1 \u05d6\u05d4 \u05e2\u05dc\u05d5\u05dc \u05dc\u05e7\u05e8\u05d5\u05ea \u05db\u05d0\u05e9\u05e8 \u05e6\u05d5\u05de\u05ea \u05d0\u05d7\u05e8\u05ea \u05de\u05e4\u05d9\u05e7\u05d4 \u05d1\u05dc\u05d5\u05e7 \u05d1\u05d4\u05e4\u05e8\u05e9 \u05e9\u05dc \u05db\u05de\u05d4 \u05e9\u05e0\u05d9\u05d5\u05ea \u05de\u05e9\u05dc\u05db\u05dd.</translation>\n     </message>\n     <message>\n         <source>Debug information</source>\n@@ -2962,6 +3127,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Close wallet</source>\n         <translation>\u05e1\u05d2\u05d9\u05e8\u05ea \u05d0\u05e8\u05e0\u05e7</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>\u05d4\u05d0\u05dd \u05d0\u05ea/\u05d4 \u05d1\u05d8\u05d5\u05d7/\u05d4 \u05e9\u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05e1\u05d2\u05d5\u05e8 \u05d0\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 &lt;i&gt;%1&lt;/i&gt;?</translation>\n+    </message>\n     <message>\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\u05e1\u05d2\u05d9\u05e8\u05ea \u05d4\u05d0\u05e8\u05e0\u05e7 \u05dc\u05de\u05e9\u05da \u05d6\u05de\u05df \u05e8\u05d1 \u05de\u05d3\u05d9 \u05d9\u05db\u05d5\u05dc \u05dc\u05d2\u05e8\u05d5\u05e8 \u05d0\u05ea \u05d4\u05e6\u05d5\u05e8\u05da \u05dc\u05e1\u05d9\u05e0\u05db\u05e8\u05d5\u05df \u05de\u05d7\u05d3\u05e9 \u05e9\u05dc \u05db\u05dc \u05d4\u05e9\u05e8\u05e9\u05e8\u05ea \u05d0\u05dd \u05d0\u05d5\u05e4\u05e6\u05d9\u05ea \u05d4\u05d2\u05d9\u05d6\u05d5\u05dd \u05d0\u05e7\u05d8\u05d9\u05d1\u05d9\u05ea.</translation>\n@@ -2990,7 +3159,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Do you want to increase the fee?</source>\n-        <translation>\u05dc\u05d4\u05d2\u05d3\u05d9\u05dc \u05d0\u05ea \u05d4\u05e2\u05de\u05dc\u05d4?</translation>\n+        <translation>\u05d4\u05d0\u05dd \u05d1\u05e8\u05e6\u05d5\u05e0\u05da \u05dc\u05d4\u05d2\u05d3\u05d9\u05dc \u05d0\u05ea \u05d4\u05e2\u05de\u05dc\u05d4?</translation>\n     </message>\n     <message>\n         <source>Current fee:</source>\n@@ -3008,6 +3177,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm fee bump</source>\n         <translation>\u05d0\u05d9\u05e9\u05d5\u05e8 \u05d4\u05e7\u05e4\u05e6\u05ea \u05e2\u05de\u05dc\u05d4</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>\u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e9\u05de\u05d5\u05e8 \u05d0\u05ea \u05d4\u05e2\u05e1\u05e7\u05d4 \u05db\u05d8\u05d9\u05d5\u05d8\u05d4.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u05d4\u05d5\u05e2\u05ea\u05e7\u05d4</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>\u05d0\u05d9 \u05d0\u05e4\u05e9\u05e8 \u05dc\u05d7\u05ea\u05d5\u05dd \u05e2\u05dc \u05d4\u05d4\u05e2\u05d1\u05e8\u05d4.</translation>\n@@ -3230,6 +3407,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Initialization sanity check failed. %s is shutting down.</source>\n         <translation>\u05d0\u05d9\u05ea\u05d7\u05d5\u05dc \u05e9\u05dc \u05ea\u05d4\u05dc\u05d9\u05da \u05d1\u05d3\u05d9\u05e7\u05d5\u05ea \u05d4\u05e9\u05e4\u05d9\u05d5\u05ea \u05e0\u05db\u05e9\u05dc. %s  \u05d1\u05ea\u05d4\u05dc\u05d9\u05da \u05e1\u05d2\u05d9\u05e8\u05d4.</translation>\n     </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>\u05d4\u05e8\u05e9\u05d0\u05ea P2P \u05e9\u05d2\u05d5\u05d9\u05d4: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>\u05e1\u05db\u05d5\u05dd \u05e9\u05d2\u05d5\u05d9 \u05e2\u05d1\u05d5\u05e8 \u200e-%s=&lt;amount&gt;:\u200f '%s'</translation>\n@@ -3246,6 +3427,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>\u05d4\u05ea\u05d9\u05e7\u05d9\u05d4 \u05e9\u05d4\u05d5\u05d2\u05d3\u05e8\u05d4 \"%s\" \u05dc\u05d0 \u05e7\u05d9\u05d9\u05de\u05ea.</translation>\n     </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>\u05db\u05ea\u05d5\u05d1\u05ea \u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2\u05d4 \u05de\u05e1\u05d5\u05d2 \"%s\"</translation>\n+    </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>\u05e1\u05d5\u05d2 \u05e9\u05d9\u05e0\u05d5\u05d9 \u05dc\u05d0 \u05d9\u05d3\u05d5\u05e2: \"%s\"</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>\u05e9\u05d3\u05e8\u05d5\u05d2 \u05de\u05d0\u05d2\u05e8 \u05e0\u05ea\u05d5\u05e0\u05d9 txindex\u00a0</translation>\n@@ -3367,6 +3556,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>\u05e2\u05dc\u05d9\u05da \u05dc\u05e6\u05d9\u05d9\u05df \u05e4\u05ea\u05d7\u05d4 \u05e2\u05dd \u200e-whitebind:\u200f '%s'</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>\u05de\u05e6\u05d1 \u05de\u05e6\u05d5\u05de\u05e6\u05dd \u05dc\u05d0 \u05e0\u05d9\u05ea\u05df \u05dc\u05e9\u05d9\u05de\u05d5\u05e9 \u05e2\u05dd blockfilterindex</translation>\n+    </message>\n     <message>\n         <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation>\u05d4\u05d5\u05e8\u05d3\u05ea -maxconnections \u05de %d \u05dc %d, \u05e2\u05e7\u05d1 \u05de\u05d2\u05d1\u05dc\u05d5\u05ea \u05de\u05e2\u05e8\u05db\u05ea.</translation>"
      },
      {
        "sha": "841d2ca4ddb5fbcd9c935e5a9f82b0ceaf9aae54",
        "filename": "src/qt/locale/bitcoin_hi.ts",
        "status": "modified",
        "additions": 136,
        "deletions": 28,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_hi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_hi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hi.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -3,35 +3,35 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u092a\u0924\u0947 \u092f\u093e \u0932\u0947\u092c\u0932 \u0915\u094b \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0926\u093e\u0939\u093f\u0928\u093e-\u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938 \u092f\u093e \u0932\u0947\u092c\u0932 \u0915\u094b \u092c\u0926\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0930\u093e\u0907\u091f-\u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902 </translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u090f\u0915 \u0928\u092f\u093e \u092a\u0924\u093e \u092c\u0928\u093e\u090f\u0902</translation>\n+        <translation>\u0928\u092f\u093e \u090f\u0921\u094d\u0930\u0947\u0938 \u092c\u0928\u093e\u090f\u0902</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n         <translation>\u0928\u092f\u093e</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u091a\u0941\u0928\u093f\u0928\u094d\u0926\u093e \u092a\u0924\u0947 \u0915\u094b \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094d\u0932\u093f\u092a\u092c\u094b\u0930\u094d\u0921 \u092a\u0930 \u0915\u093e\u092a\u0940 \u0915\u0930\u0947 !</translation>\n+        <translation>\u091a\u0941\u0928\u0947 \u0939\u0941\u090f \u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u094b \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u094d\u0932\u093f\u092a\u092c\u094b\u0930\u094d\u0921 \u092a\u0930 \u0915\u0949\u092a\u0940 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n         <translation>&amp;\u0915\u0949\u092a\u0940</translation>\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n-        <translation>\u0938\u0940&amp;\u0932\u0942\u095b</translation>\n+        <translation>&amp;\u092c\u0902\u0926 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n-        <translation>\u0938\u0942\u091a\u0940 \u0938\u0947 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092e\u0947\u0902 \u091a\u092f\u0928\u093f\u0924 \u092a\u0924\u093e \u0939\u091f\u093e\u090f\u0902</translation>\n+        <translation>\u091a\u0941\u0928\u0947 \u0939\u0941\u090f \u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u094b \u0938\u0942\u091a\u0940 \u0938\u0947 \u0939\u091f\u093e\u090f\u0902</translation>\n     </message>\n     <message>\n         <source>Enter address or label to search</source>\n-        <translation>\u0922\u0942\u0901\u0926\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u093e \u0915\u0930\u0915\u0947 \u092a\u0924\u093e \u092f\u093e \u0932\u0947\u092c\u0932 \u091f\u093e\u0907\u092a \u0915\u0930\u0947 !</translation>\n+        <translation>\u0922\u0942\u0902\u0922\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0921\u094d\u0930\u0947\u0938 \u092f\u093e \u0932\u0947\u092c\u0932 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n@@ -43,70 +43,78 @@\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>&amp;\u092e\u093f\u091f\u093e\u090f !!</translation>\n+        <translation>&amp;\u092e\u093f\u091f\u093e\u090f</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>\u0938\u093f\u0915\u094d\u0915\u094b\u0902 \u0915\u094b \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0924\u093e \u091a\u0941\u0928\u0947\u0902</translation>\n+        <translation>\u0915\u0949\u0907\u0928 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0921\u094d\u0930\u0947\u0938 \u091a\u0941\u0928\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>\u0938\u093f\u0915\u094d\u0915\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0924\u093e \u091a\u0941\u0928\u0947\u0902</translation>\n+        <translation>\u0915\u0949\u0907\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0921\u094d\u0930\u0947\u0938 \u091a\u0941\u0928\u0947\u0902 </translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;\u091a\u0941\u0928\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Sending addresses</source>\n-        <translation>\u0938\u092d\u0940 \u092a\u0924\u0947 \u092d\u0947\u091c \u0930\u0939\u093e \u0939\u0948</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938 \u092d\u0947\u091c\u0947 \u091c\u093e \u0930\u0939\u0947\u0902 \u0939\u0948\u0902</translation>\n     </message>\n     <message>\n         <source>Receiving addresses</source>\n-        <translation>\u092a\u0924\u094b\u0902 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930 \u0930\u0939\u093e \u0939\u0948</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u093f\u090f \u091c\u093e \u0930\u0939\u0947\u0902 \u0939\u0948\u0902</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u092f\u0947 \u092d\u0941\u0917\u0924\u093e\u0928 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092f\u0947 \u0906\u092a\u0915\u0947 \u092c\u093f\u091f\u0915\u0949\u0907\u0928 \u092a\u0924\u0947 \u0939\u0948\u0902\u0964 \u0939\u092e\u0947\u0936\u093e \u0938\u093f\u0915\u094d\u0915\u0947 \u092d\u0947\u091c\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0930\u093e\u0936\u093f \u0914\u0930 \u092a\u094d\u0930\u093e\u092a\u094d\u0924\u0915\u0930\u094d\u0924\u093e \u092a\u0924\u0947 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902\u0964</translation>\n+        <translation>\u092d\u0941\u0917\u0924\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092f\u0947 \u0906\u092a\u0915\u0947 \u092c\u093f\u091f\u0915\u0949\u0907\u0928 \u090f\u0921\u094d\u0930\u0947\u0938 \u0939\u0948\u0902\u0964 \u0915\u0949\u0907\u0928 \u092d\u0947\u091c\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0930\u093e\u0936\u093f \u0914\u0930 \u0917\u0902\u0924\u0935\u094d\u092f \u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u0940 \u0939\u092e\u0947\u0936\u093e \u091c\u093e\u0901\u091a \u0915\u0930\u0947\u0902 </translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>\u092d\u0941\u0917\u0924\u093e\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092f\u0947 \u0906\u092a\u0915\u0947 \u092c\u093f\u091f\u0915\u0949\u0907\u0928 \u090f\u0921\u094d\u0930\u0947\u0938 \u0939\u0948\u0902\u0964 \u0928\u092f\u093e \u090f\u0921\u094d\u0930\u0947\u0938 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0930\u093f\u0938\u0940\u0935 \u091f\u0948\u092c \u092e\u0947\u0902 '\u0928\u092f\u093e \u090f\u0921\u094d\u0930\u0947\u0938 \u092c\u0928\u093e\u090f\u0902' \u092c\u091f\u0928 \u0915\u093e \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>&amp;\u092a\u0924\u093e \u0915\u0949\u092a\u0940 \u0915\u0930\u0947\u0902\u00a0</translation>\n+        <translation>&amp;\u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u0949\u092a\u0940 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation>\u092a\u094d\u0930\u0924\u093f\u0932\u093f\u092a \u0915\u0930\u0947 \u0914\u0930 \u091a\u093f\u0928\u094d\u0939\u093f\u0924 \u0915\u0930\u0947\u0902</translation>\n+        <translation>\u0915\u0949\u092a\u0940 &amp;\u0932\u0947\u092c\u0932 </translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n-        <translation>&amp;\u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0947\u0902\u00a0</translation>\n+        <translation>&amp;\u092c\u0926\u0932\u093e\u0935 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Export Address List</source>\n-        <translation>\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u092a\u0924\u093e \u0938\u0942\u091a\u0940</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation>\u0915\u094b\u092e\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0905\u0932\u0917 \u0915\u0940 \u0917\u0908 \u092b\u093c\u093e\u0907\u0932 (* .csv)</translation>\n+        <translation>\u0915\u094c\u092e\u093e \u0938\u0947\u092a\u0930\u0947\u091f\u0947\u0921 \u092b\u093e\u0907\u0932 (* .csv)</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0935\u093f\u092b\u0932 \u0930\u0939\u093e</translation>\n     </message>\n     <message>\n         <source>There was an error trying to save the address list to %1. Please try again.</source>\n-        <translation>\u092a\u0924\u093e \u0938\u0942\u091a\u0940 \u0915\u094b %1 \u092e\u0947\u0902 \u0938\u0939\u0947\u091c\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0939\u0941\u0908\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902\u0964</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b %1 \u092e\u0947\u0902 \u0938\u0939\u0947\u091c\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0928\u0947 \u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0939\u0941\u0908\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902\u0964</translation>\n     </message>\n </context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n         <source>Label</source>\n-        <translation>\u092a\u0930\u091a\u093e</translation>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n     </message>\n     <message>\n         <source>Address</source>\n-        <translation>\u092a\u0924\u093e</translation>\n+        <translation>\u090f\u0921\u094d\u0930\u0947\u0938</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(\u0915\u094b\u0908 \u092a\u0930\u091a\u093e \u0928\u0939\u0940\u0902 )</translation>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u0939\u0940\u0902 \u0939\u0948)</translation>\n     </message>\n </context>\n <context>\n@@ -117,15 +125,19 @@\n     </message>\n     <message>\n         <source>Enter passphrase</source>\n-        <translation>\u092a\u0939\u091a\u093e\u0928 \u0936\u092c\u094d\u0926/\u0905\u0915\u094d\u0937\u0930 \u0921\u093e\u0932\u093f\u090f !</translation>\n+        <translation>\u092a\u093e\u0938\u092b\u094d\u0930\u0947\u095b \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902</translation>\n     </message>\n     <message>\n         <source>New passphrase</source>\n-        <translation>\u0928\u092f\u093e \u092a\u0939\u091a\u093e\u0928 \u0936\u092c\u094d\u0926/\u0905\u0915\u094d\u0937\u0930 \u0921\u093e\u0932\u093f\u090f !</translation>\n+        <translation>\u0928\u092f\u093e \u092a\u093e\u0938\u092b\u094d\u0930\u0947\u095b</translation>\n     </message>\n     <message>\n         <source>Repeat new passphrase</source>\n-        <translation>\u0926\u094b\u092c\u093e\u0930\u093e \u0928\u092f\u093e \u092a\u0939\u091a\u093e\u0928 \u0936\u092c\u094d\u0926/\u0905\u0915\u094d\u0937\u0930 \u0921\u093e\u0932\u093f\u090f !</translation>\n+        <translation>\u0928\u092f\u093e \u092a\u093e\u0938\u092b\u094d\u0930\u0947\u095b \u0926\u094b\u092c\u093e\u0930\u093e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 </translation>\n+    </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>\u092a\u093e\u0938\u092b\u094d\u0930\u0947\u095b \u0909\u091c\u093e\u0917\u0930 \u0915\u0930\u0947</translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n@@ -167,27 +179,87 @@\n         <source>Wallet encrypted</source>\n         <translation>\u0935\u0949\u0932\u0947\u091f \u0915\u094b \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u092e\u0947\u0902 \u0928\u092f\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0938\u0902\u0935\u093e\u0926 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 | \u0915\u0943\u092a\u092f\u093e \u0926\u0938 \u092f\u093e \u0909\u0938\u0938\u0947 \u0905\u0927\u093f\u0915, \u092f\u093e \u092b\u093f\u0930 \u0906\u0920 \u092f\u093e \u0909\u0938\u0938\u0947 \u0905\u0927\u093f\u0915 \u0905\u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0905\u0902\u0915\u094b \u0938\u0947 \u0939\u0940 \u0905\u092a\u0928\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0938\u0902\u0935\u093e\u0926 \u092c\u0928\u093e\u090f\u0902 \u0964</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u092e\u0947\u0902 \u092a\u0941\u0930\u093e\u0928\u093e \u090f\u0935\u0902 \u0928\u092f\u093e \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0938\u0902\u0935\u093e\u0926 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 \u0964</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u092f\u093e\u0926 \u0930\u0916\u0947\u0902 \u0915\u093f \u0905\u092a\u0928\u0947 \u092c\u091f\u0941\u090f (\u0935\u0949\u0932\u0947\u091f) \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0915\u0930\u0928\u093e \u0906\u092a\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0915\u094b \u0938\u0902\u0915\u094d\u0930\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0935\u093e\u0932\u0947 \u092e\u0948\u0932\u0935\u0947\u092f\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0906\u092a\u0915\u0947 \u092c\u093f\u091f\u0915\u0949\u0907\u0928 \u0915\u094b \u091a\u094b\u0930\u0940 \u0939\u094b\u0928\u0947 \u0938\u0947 \u092a\u0942\u0930\u0940 \u0924\u0930\u0939 \u0938\u0947 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0948\u0964</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u092c\u091f\u0941\u090f \"\u0935\u0949\u0932\u0947\u091f\" \u0915\u094b \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u0939\u0948</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u0906\u092a\u0915\u093e \u092c\u091f\u0941\u0906 \"\u0935\u0949\u0932\u0947\u091f\" \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f\u0947\u0921 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u093e \u0939\u0948\u0964</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u0906\u092a\u0915\u093e \u092c\u091f\u0941\u0906 \"\u0935\u0949\u0932\u0947\u091f\" \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0939\u094b \u0917\u092f\u093e \u0939\u0948\u0964</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u092e\u0939\u0924\u094d\u0935\u092a\u0942\u0930\u094d\u0923: \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u093f\u091b\u0932\u0947 \u092c\u0948\u0915\u0905\u092a \u0915\u094b \u0906\u092a\u0928\u0947 \u0905\u092a\u0928\u0940 \u0935\u0949\u0932\u0947\u091f \u092b\u093c\u093e\u0907\u0932 \u0938\u0947 \u092c\u0928\u093e\u092f\u093e \u0925\u093e, \u0909\u0938\u0947 \u0928\u090f \u091c\u0928\u0930\u0947\u091f \u0915\u093f\u090f \u0917\u090f \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f\u0947\u0921 \u0935\u0949\u0932\u0947\u091f \u092b\u093c\u093e\u0907\u0932 \u0938\u0947 \u092c\u0926\u0932 \u0926\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964 \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u0915\u093e\u0930\u0923\u094b\u0902 \u0938\u0947, \u0905\u0928\u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f\u0947\u0921 \u0935\u0949\u0932\u0947\u091f \u092b\u093c\u093e\u0907\u0932 \u0915\u0947 \u092a\u093f\u091b\u0932\u0947 \u092c\u0948\u0915\u0905\u092a \u092c\u0947\u0915\u093e\u0930 \u0939\u094b \u091c\u093e\u090f\u0902\u0917\u0947 \u091c\u0948\u0938\u0947 \u0939\u0940 \u0906\u092a \u0928\u090f, \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f\u0947\u0921 \u0935\u0949\u0932\u0947\u091f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u0936\u0941\u0930\u0942 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>\u0935\u0949\u0932\u0947\u091f \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u0936\u0928 \u0935\u093f\u092b\u0932 \u0930\u0939\u093e</translation>\n     </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0906\u0902\u0924\u0930\u093f\u0915 \u0924\u094d\u0930\u0941\u091f\u093f \u0915\u0947 \u0915\u093e\u0930\u0923 \u0935\u0949\u0932\u0947\u091f \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u0936\u0928 \u0935\u093f\u092b\u0932 \u0930\u0939\u093e\u0964 \u0906\u092a\u0915\u093e \u0935\u0949\u0932\u0947\u091f \"\u092c\u091f\u0941\u0906\" \u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u0906\u092a\u0942\u0930\u094d\u0924\u093f \u0915\u093f\u090f \u0917\u090f \u092a\u093e\u0938\u092b\u093c\u094d\u0930\u0947\u091c\u093c \u092e\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093e\u0924\u0947 \u0939\u0948\u0902\u0964</translation>\n+    </message>\n     <message>\n         <source>Wallet unlock failed</source>\n         <translation>\u0935\u0949\u0932\u0947\u091f \u0905\u0928\u0932\u0949\u0915 \u0935\u093f\u092b\u0932 \u0930\u0939\u093e</translation>\n     </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u0921\u093f\u0915\u094d\u0930\u093f\u092a\u094d\u0936\u0928 \u0915\u0947 \u0932\u093f\u090f \u0926\u0930\u094d\u091c \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u092a\u093e\u0938\u092b\u093c\u094d\u0930\u0947\u091c\u093c \u0917\u0932\u0924 \u0925\u093e\u0964</translation>\n+    </message>\n     <message>\n         <source>Wallet decryption failed</source>\n         <translation>\u0935\u0949\u0932\u0947\u091f \u0921\u093f\u0915\u094d\u0930\u093f\u092a\u094d\u0936\u0928 \u0935\u093f\u092b\u0932</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u0935\u0949\u0932\u0947\u091f \u092a\u093e\u0938\u092b\u093c\u094d\u0930\u0947\u091c\u093c \u0915\u094b \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0926\u0932 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u091a\u0947\u0924\u093e\u0935\u0928\u0940: \u0915\u0948\u092a\u094d\u0938 \u0932\u0949\u0915 \u0915\u0941\u0902\u091c\u0940 \u091a\u093e\u0932\u0942 \u0939\u0948!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>\u0906\u0908\u092a\u0940 /\u0928\u0947\u091f\u092e\u093e\u0938\u094d\u0915 \"Netmask\"</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation> \u0924\u0915 \u092c\u0948\u0928 \u0915\u0930 \u0926\u093f\u092f\u093e</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>\u0939\u0938\u094d\u0924\u093e\u0915\u094d\u0937\u0930 \u0914\u0930 \u0938\u0902\u0926\u0947\u0936 ...</translation>\n+    </message>\n     <message>\n         <source>Synchronizing with network...</source>\n-        <translation>\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0938\u0947 \u0938\u092e\u0915\u093e\u0932\u093f\u0915 (\u092e\u093f\u0932) \u0930\u0939\u093e \u0939\u0948 ...</translation>\n+        <translation>\u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u0938\u0947 \u0938\u092e\u0915\u093e\u0932\u093f\u0915\u0930\u0923 \u091c\u093e\u0930\u0940 \u0939\u0948 ...</translation>\n     </message>\n     <message>\n         <source>&amp;Overview</source>\n@@ -214,14 +286,38 @@\n         <source>Quit application</source>\n         <translation>\u0905\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u093e !</translation>\n     </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>\u0914\u0930 %1 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>%1 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u093f\u0916\u093e\u090f\u0902</translation>\n+    </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>\u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0914\u0930 \u0915\u094d\u092f\u0942\u091f\u0940 \"Qt\"</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Qt</source>\n+        <translation>\u0915\u094d\u092f\u0942\u091f\u0940 \"Qt\" \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0926\u093f\u0916\u093e\u090f\u0901</translation>\n+    </message>\n     <message>\n         <source>&amp;Options...</source>\n         <translation>&amp;\u0935\u093f\u0915\u0932\u094d\u092a</translation>\n     </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>\u0914\u0930 \u0935\u0949\u0932\u0947\u091f \u0915\u094b \u0917\u094b\u092a\u093f\u0924 \"\u090f\u0928\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f\" \u0915\u0930\u0947\u0902</translation>\n+    </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n         <translation>&amp;\u092c\u0948\u0915\u092a \u0935\u0949\u0932\u0947\u091f</translation>\n     </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>\u0914\u0930 \u092a\u093e\u0938\u092b\u093c\u094d\u0930\u0947\u091c\u093c \u092c\u0926\u0932\u0947\u0902</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>\u0924\u093f\u091c\u094b\u0930\u0940</translation>\n@@ -564,7 +660,15 @@\n     <name>TransactionDesc</name>\n     <message>\n         <source>Date</source>\n-        <translation>taareek</translation>\n+        <translation>\u0926\u093f\u0928\u093e\u0902\u0915</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>\u0938\u094d\u0930\u094b\u0924</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>\u0909\u0924\u094d\u092a\u0928\u094d\u0928</translation>\n     </message>\n     <message>\n         <source>unknown</source>\n@@ -653,6 +757,10 @@\n     </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>\u092f\u0939 \u090f\u0915 \u092a\u0942\u0930\u094d\u0935-\u0930\u093f\u0932\u0940\u091c\u093c \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092c\u093f\u0932\u094d\u0921 \u0939\u0948 - \u0905\u092a\u0928\u0947 \u091c\u094b\u0916\u093f\u092e \u092a\u0930 \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902 - \u0916\u0928\u0928 \u092f\u093e \u0935\u094d\u092f\u093e\u092a\u093e\u0930\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917 \u0928 \u0915\u0930\u0947\u0902</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>\u092c\u094d\u0932\u0949\u0915\u094d\u0938 \u091c\u093e\u0901\u091a\u0947 \u091c\u093e \u0930\u0939\u093e \u0939\u0948...</translation>"
      },
      {
        "sha": "e8c13c3c27df92acb88ea54c15abc98e1fbbcbe3",
        "filename": "src/qt/locale/bitcoin_hu.ts",
        "status": "modified",
        "additions": 103,
        "deletions": 3,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_hu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_hu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_hu.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>A c\u00edm vagy c\u00edmke szerkesztes\u00e9hez kattintson a jobb gombbal</translation>\n+        <translation>A c\u00edm vagy c\u00edmke szerkeszt\u00e9s\u00e9hez kattints a jobb gombbal</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Naprak\u00e9sz</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Csom\u00f3pont ablak</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Nyisd meg a hibaellen\u0151rz\u0151 \u00e9s diagnosztiz\u00e1l\u00f3 konzolt.</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;K\u00fcld\u0151 c\u00edmek</translation>\n@@ -549,6 +557,10 @@\n         <source>Error: %1</source>\n         <translation>Hiba: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Vigy\u00e1zz: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -805,6 +817,10 @@\n         <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n         <translation>A t\u00e1rc\u00e1hoz tartoz\u00f3 priv\u00e1t kulcsok letilt\u00e1sa. Azok a t\u00e1rc\u00e1k, melyekn\u00e9l a priv\u00e1t kulcsok le vannak tiltva, nem tartalmaznak priv\u00e1t kulcsokat \u00e9s nem tartalmazhatnak HD magot vagy import\u00e1lt priv\u00e1t kulcsokat. Ez azokn\u00e1l a t\u00e1rc\u00e1kn\u00e1l ide\u00e1lis, melyeket csak megfigyel\u00e9sre haszn\u00e1lnak.</translation>\n     </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Kapcsold ki a Priv\u00e1t K\u00f3dot</translation>\n+    </message>\n     <message>\n         <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n         <translation>\u00dcres t\u00e1rca k\u00e9sz\u00edt\u00e9se. Az \u00fcres t\u00e1rc\u00e1k kezdetben nem tartalmaznak priv\u00e1t kulcsokat vagy szkripteket. K\u00e9s\u0151bb lehets\u00e9ges a priv\u00e1t kulcsok vagy c\u00edmek import\u00e1l\u00e1sa avagy egy HD mag be\u00e1ll\u00edt\u00e1sa.</translation>\n@@ -813,7 +829,11 @@\n         <source>Make Blank Wallet</source>\n         <translation>\u00dcres t\u00e1rca k\u00e9sz\u00edt\u00e9se</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Create</source>\n+        <translation>L\u00e9trehoz\u00e1s</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1020,9 +1040,17 @@\n         <source>Hide</source>\n         <translation>Elrejt\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Kil\u00e9p\u00e9s</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Nyisd meg a bitcoin c\u00edmedet</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1407,6 +1435,10 @@\n         <source>URI handling</source>\n         <translation>URI kezel\u00e9s</translation>\n     </message>\n+    <message>\n+        <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n+        <translation>'bitcoin://' nem \u00e9rv\u00e9nyes egys\u00e9ges er\u0151forr\u00e1s azonos\u00edt\u00f3 (URI). Haszn\u00e1ld helyette a 'bitcoin'-t.</translation>\n+    </message>\n     <message>\n         <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n         <translation>A BIP70 sz\u00e9lesk\u00f6r\u0171 biztons\u00e1gi hi\u00e1nyoss\u00e1gai k\u00f6vetkezt\u00e9ben hat\u00e1rozottan aj\u00e1nljuk, hogy hagyjon figyelmen k\u00edv\u00fcl b\u00e1rmif\u00e9le kereskedelmi utas\u00edt\u00e1st, amely a t\u00e1rca v\u00e1lt\u00e1s\u00e1ra k\u00e9szteti.</translation>\n@@ -1572,6 +1604,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>Hiba l\u00e9pett fel az URI QR k\u00f3dd\u00e1 alak\u00edt\u00e1sakor.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>QR k\u00f3d t\u00e1mogat\u00e1s nem el\u00e9rhet\u0151.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>QR K\u00f3d Ment\u00e9se</translation>\n@@ -1607,6 +1643,10 @@\n         <source>Datadir</source>\n         <translation>Adatk\u00f6nyvt\u00e1r</translation>\n     </message>\n+    <message>\n+        <source>Blocksdir</source>\n+        <translation>Blokk k\u00f6nyvt\u00e1r</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>Bekapcsol\u00e1s ideje</translation>\n@@ -1647,6 +1687,10 @@\n         <source>Wallet: </source>\n         <translation>T\u00e1rca:</translation>\n     </message>\n+    <message>\n+        <source>(none)</source>\n+        <translation>(nincs)</translation>\n+    </message>\n     <message>\n         <source>&amp;Reset</source>\n         <translation>&amp;Vissza\u00e1ll\u00edt\u00e1s</translation>\n@@ -1699,6 +1743,10 @@\n         <source>User Agent</source>\n         <translation>User Agent</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Csom\u00f3pont ablak</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>A %1 debug log f\u00e1jl megnyit\u00e1sa a jelenlegi k\u00f6nyvt\u00e1rb\u00f3l. Ez n\u00e9h\u00e1ny m\u00e1sodpercig eltarthat nagyobb log f\u00e1jlok eset\u00e9n.</translation>\n@@ -2155,6 +2203,14 @@\n         <source>Dust:</source>\n         <translation>Por-hat\u00e1r:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Rejtsd el a tranzakci\u00f3s k\u00f6lts\u00e9gek be\u00e1ll\u00edt\u00e1sait</translation>\n+    </message>\n+    <message>\n+        <source>A too low fee might result in a never confirming transaction (read the tooltip)</source>\n+        <translation>A t\u00fal alacsony illet\u00e9k a tranzakci\u00f3 soha be nem teljes\u00fcl\u00e9s\u00e9t eredm\u00e9nyezheti (olvassa el az elemle\u00edr\u00e1st)</translation>\n+    </message>\n     <message>\n         <source>Confirmation time target:</source>\n         <translation>V\u00e1rhat\u00f3 meger\u0151s\u00edt\u00e9si id\u0151:</translation>\n@@ -2231,14 +2287,30 @@\n         <source>You can increase the fee later (signals Replace-By-Fee, BIP-125).</source>\n         <translation>K\u00e9s\u0151bb n\u00f6velheti a tranzakci\u00f3 d\u00edj\u00e1t (l\u00e1sd Replace-By-Fee, BIP-125).</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction.</source>\n+        <translation>K\u00e9rj\u00fck, hogy ellen\u0151rizze le a tranzakci\u00f3j\u00e1t.</translation>\n+    </message>\n     <message>\n         <source>Transaction fee</source>\n         <translation>Tranzakci\u00f3s d\u00edj</translation>\n     </message>\n+    <message>\n+        <source>Total Amount</source>\n+        <translation>Teljes \u00f6sszeg</translation>\n+    </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>A c\u00edmzett lista ellen\u0151rz\u00e9s\u00e9hez kattintson a \"Tov\u00e1bbi r\u00e9szletek\" gombra.</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>\u00d6sszeg k\u00fcld\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9se</translation>\n     </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>K\u00fcld\u00e9s</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>A fogad\u00f3 c\u00edme \u00e9rv\u00e9nytelen. K\u00e9rem ellen\u0151rizze.</translation>\n@@ -2488,6 +2560,10 @@\n         <source>Wallet unlock was cancelled.</source>\n         <translation>T\u00e1rca megnyit\u00e1sa megszak\u00edtva</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Nincs hiba</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>A megadott c\u00edm priv\u00e1t kulcsa nem tal\u00e1lhat\u00f3.</translation>\n@@ -2646,10 +2722,18 @@\n         <source>Transaction total size</source>\n         <translation>Tranzakci\u00f3 teljes m\u00e9rete</translation>\n     </message>\n+    <message>\n+        <source>Transaction virtual size</source>\n+        <translation>A tranzakci\u00f3 virtu\u00e1lis m\u00e9rete</translation>\n+    </message>\n     <message>\n         <source>Output index</source>\n         <translation>Indeks izhoda</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(A tan\u00fas\u00edtv\u00e1ny nem ellen\u0151rz\u00f6tt)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Keresked\u0151</translation>\n@@ -3058,7 +3142,11 @@\n         <source>The wallet data was successfully saved to %1.</source>\n         <translation>A t\u00e1rca adatai sikeresen elmentve %1.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Cancel</source>\n+        <translation>Bez\u00e1r\u00e1s</translation>\n+    </message>\n+</context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n@@ -3193,6 +3281,10 @@\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>Helytelen vagy neml\u00e9tez\u0151 gen\u00e9zis blokk. Helytelen h\u00e1l\u00f3zati adatk\u00f6nyvt\u00e1r?</translation>\n     </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>\u00c9rv\u00e9nytelen P2P jog: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>Neveljavna koli\u010dina za -%s=&lt;amount&gt;: '%s'</translation>\n@@ -3205,10 +3297,18 @@\n         <source>Invalid amount for -fallbackfee=&lt;amount&gt;: '%s'</source>\n         <translation>Neveljavna koli\u010dina za -fallbackfee=&lt;amount&gt;: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Ismeretlen c\u00edm t\u00edpus '%s'</translation>\n+    </message>\n     <message>\n         <source>Loading P2P addresses...</source>\n         <translation>P2P c\u00edmek bet\u00f6lt\u00e9se...</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>Hiba: A lemezen kev\u00e9s hely el\u00e9rhet\u0151!</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>Tilt\u00f3lista bet\u00f6lt\u00e9se...</translation>"
      },
      {
        "sha": "09d3b87bcac4ac877d60377b3658641f5852e174",
        "filename": "src/qt/locale/bitcoin_id.ts",
        "status": "modified",
        "additions": 491,
        "deletions": 5,
        "changes": 496,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_id.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_id.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_id.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Terbaru</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Jendela Node</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Buka konsol debug dan diagnosa node</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>Address &amp;Pengirim</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>Address &amp;Penerima</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Buka URI bitcoin:</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Buka Wallet</translation>\n@@ -1049,13 +1061,25 @@\n         <source>Hide</source>\n         <translation>Sembunyikan</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Keluar</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 menyinkronkan. Program ini akan mengunduh header dan blok dari rekan dan memvalidasi sampai blok terbaru.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Tidak diketahui. Sinkronisasi Header (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Buka URI bitcoin:</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1448,6 +1472,10 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' bukanlah alamat URI yang valid. Silakan gunakan 'bitcoin:'.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Tidak dapat memproses pembayaran karena dukungan BIP70 tidak disertakan.</translation>\n+    </message>\n     <message>\n         <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n         <translation>Berhubung kelemahan keamanan yang meluas di BIP70, sangat disarankan agar instruksi pedagang untuk mengganti dompet diabaikan.</translation>\n@@ -1766,6 +1794,10 @@\n \n </translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Jendela Node</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Buka file log debug %1 dari direktori data saat ini. Dapat memakan waktu beberapa detik untuk file log besar.</translation>\n@@ -1973,6 +2005,10 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Nilai permintaan opsional. Biarkan ini kosong atau nol bila tidak meminta nilai tertentu.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Label fakultatif untuk menghubungkan dengan alamat penerima baru (anda menggunakannya untuk mengindetifikasi faktur). Itu juga dilampirkan pada permintaan pembayaran.</translation>\n+    </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n         <translation>&amp;Create alamat penerima baru</translation>\n@@ -2226,6 +2262,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Dust:</source>\n         <translation>Dust:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Sembunyikan pengaturan biaya transaksi</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Ketika volume transaksi lebih sedikit daripada ruang di blok, penambang serta simpul yang menyiarkanikan dapat memberlakukan biaya minimum. Anda boleh hanya membayar biaya minimum, tetapi perlu diketahui bahwa ini dapat menghasilkan transaksi yang tidak pernah dikonfirmasi setelah ada lebih banyak permintaan untuk transaksi bitcoin daripada yang dapat diproses jaringan.</translation>\n@@ -2306,6 +2346,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>%1 to %2</source>\n         <translation>%1 ke %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Apakah anda ingin menjadikan transaksi ini sebagai konsep?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Apakah anda yakin ingin mengirimkan?</translation>\n@@ -2342,6 +2386,26 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Confirm send coins</source>\n         <translation>Konfirmasi pengiriman koin</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Konfirmasi proposal transaksi</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Salin PSBT ke papan klip</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Kirim</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT disalin</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Saldo (hanya lihat):</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Alamat penerima tidak sesuai. Mohon periksa kembali.</translation>\n@@ -2433,6 +2497,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Remove this entry</source>\n         <translation>Hapus masukan ini</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>Jumlah yang ingin dikirim dalam unit yang dipilih</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Biaya akan diambil dari jumlah yang dikirim. Penerima akan menerima bitcoin lebih sedikit daripada yang di masukkan di bidang jumlah. Jika ada beberapa penerima, biaya dibagi rata.</translation>\n@@ -2555,6 +2623,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Alamat Bitcoin yang menandatangani pesan</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Pesan yang ditandatangani untuk diverifikasi</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Verifikasi pesan untuk memastikannya ditandatangani dengan alamat Bitcoin tersebut</translation>\n@@ -2587,6 +2659,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Pembukaan kunci dompet dibatalkan.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Tidak ada kesalahan</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>Private key untuk alamat yang dimasukkan tidak tersedia.</translation>\n@@ -2637,10 +2713,22 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Open until %1</source>\n         <translation>Buka sampai %1</translation>\n     </message>\n+    <message>\n+        <source>conflicted with a transaction with %1 confirmations</source>\n+        <translation>Konflik dengan sebuah transaksi dengan %1 konfirmasi</translation>\n+    </message>\n     <message>\n         <source>0/unconfirmed, %1</source>\n         <translation>0/belum dikonfirmasi, %1</translation>\n     </message>\n+    <message>\n+        <source>in memory pool</source>\n+        <translation>Dalam pool memory</translation>\n+    </message>\n+    <message>\n+        <source>not in memory pool</source>\n+        <translation>Tidak dalam pool memory</translation>\n+    </message>\n     <message>\n         <source>%1/unconfirmed</source>\n         <translation>%1/belum dikonfirmasi</translation>\n@@ -2661,10 +2749,30 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Source</source>\n         <translation>Sumber</translation>\n     </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>Dihasilkan</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>Dari</translation>\n+    </message>\n     <message>\n         <source>unknown</source>\n         <translation>tidak diketahui</translation>\n     </message>\n+    <message>\n+        <source>To</source>\n+        <translation>Untuk</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>alamat milik sendiri</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>hanya-melihat</translation>\n+    </message>\n     <message>\n         <source>label</source>\n         <translation>label</translation>\n@@ -2693,6 +2801,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Transaction fee</source>\n         <translation>Biaya Transaksi</translation>\n     </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Jumlah bersih</translation>\n+    </message>\n     <message>\n         <source>Message</source>\n         <translation>Pesan</translation>\n@@ -2705,6 +2817,26 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Transaction ID</source>\n         <translation>ID Transaksi</translation>\n     </message>\n+    <message>\n+        <source>Transaction total size</source>\n+        <translation>Ukuran transaksi total</translation>\n+    </message>\n+    <message>\n+        <source>Transaction virtual size</source>\n+        <translation>Ukuran transaksi virtual</translation>\n+    </message>\n+    <message>\n+        <source>Output index</source>\n+        <translation>Indeks outpu</translation>\n+    </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(Sertifikat tidak diverifikasi)</translation>\n+    </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>Penjual</translation>\n+    </message>\n     <message>\n         <source>Debug information</source>\n         <translation>Informasi debug</translation>\n@@ -2713,6 +2845,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Transaction</source>\n         <translation>Transaksi</translation>\n     </message>\n+    <message>\n+        <source>Inputs</source>\n+        <translation>Input</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>Jumlah</translation>\n@@ -2751,6 +2887,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Label</source>\n         <translation>Label</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Buka %n untuk blok lebih</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Buka sampai %1</translation>\n@@ -2759,6 +2899,22 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Unconfirmed</source>\n         <translation>Belum dikonfirmasi</translation>\n     </message>\n+    <message>\n+        <source>Abandoned</source>\n+        <translation>yang ditelantarkan</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Dikonfirmasi (%1 konfirmasi)</translation>\n+    </message>\n+    <message>\n+        <source>Conflicted</source>\n+        <translation>Bertentangan</translation>\n+    </message>\n+    <message>\n+        <source>Generated but not accepted</source>\n+        <translation>Dihasilkan tapi tidak diterima</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>Diterima dengan</translation>\n@@ -2771,10 +2927,26 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Sent to</source>\n         <translation>Dikirim ke</translation>\n     </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Pembayaran untuk diri sendiri</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ditambang</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>hanya-melihat</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(tidak ada label)</translation>\n     </message>\n+    <message>\n+        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n+        <translation>Status transaksi. Arahkan kursor ke bidang ini untuk menampilkan jumlah konfirmasi.</translation>\n+    </message>\n     <message>\n         <source>Date and time that the transaction was received.</source>\n         <translation>Tanggal dan waktu transaksi telah diterima.</translation>\n@@ -2783,7 +2955,19 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Type of transaction.</source>\n         <translation>Tipe transaksi.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Apakah alamat hanya-melihat terlibat dalam transaksi ini atau tidak.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>maksud/tujuan transaksi yang ditentukan pengguna.</translation>\n+    </message>\n+    <message>\n+        <source>Amount removed from or added to balance.</source>\n+        <translation>Jumlah dihapus dari atau ditambahkan ke saldo.</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionView</name>\n     <message>\n@@ -2810,6 +2994,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>This year</source>\n         <translation>Tahun ini</translation>\n     </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Jarak...</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>Diterima dengan</translation>\n@@ -2818,6 +3006,14 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Sent to</source>\n         <translation>Dikirim ke</translation>\n     </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>Untuk diri sendiri</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ditambang</translation>\n+    </message>\n     <message>\n         <source>Other</source>\n         <translation>Lainnya</translation>\n@@ -2854,6 +3050,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Copy transaction ID</source>\n         <translation>Salain ID Transaksi</translation>\n     </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Salin transaksi yang belum diproses</translation>\n+    </message>\n     <message>\n         <source>Copy full transaction details</source>\n         <translation>Salin detail transaksi</translation>\n@@ -2878,6 +3078,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Confirmed</source>\n         <translation>Terkonfirmasi</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Hanya-melihat</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Tanggal</translation>\n@@ -2902,30 +3106,66 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Exporting Failed</source>\n         <translation>Mengekspor Gagal</translation>\n     </message>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Terjadi kesalahan saat mencoba menyimpan riwayat transaksi ke %1.</translation>\n+    </message>\n     <message>\n         <source>Exporting Successful</source>\n         <translation>Ekspor Berhasil</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>Riwayat transaksi berhasil disimpan ke %1.</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Jarak:</translation>\n+    </message>\n+    <message>\n+        <source>to</source>\n+        <translation>untuk</translation>\n+    </message>\n+</context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n-    </context>\n+    <message>\n+        <source>Unit to show amounts in. Click to select another unit.</source>\n+        <translation>Unit untuk menunjukkan jumlah. Klik untuk memilih unit lain.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletController</name>\n     <message>\n         <source>Close wallet</source>\n         <translation>Tutup wallet</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>Apakah anda yakin ingin menutup dompet &lt;i&gt;%1&lt;/i&gt;?</translation>\n+    </message>\n+    <message>\n+        <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n+        <translation>Menutup dompet terlalu lama dapat menyebabkan harus menyinkron ulang seluruh rantai jika pemangkasan diaktifkan.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>Tidak ada dompent yang dimuat.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n     <message>\n         <source>Send Coins</source>\n         <translation>Kirim Koin</translation>\n     </message>\n+    <message>\n+        <source>Fee bump error</source>\n+        <translation>Kesalahan biaya tagihan</translation>\n+    </message>\n     <message>\n         <source>Increasing transaction fee failed</source>\n         <translation>Gagal meningkatkan biaya transaksi</translation>\n@@ -2934,6 +3174,10 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Do you want to increase the fee?</source>\n         <translation>Apa Anda ingin meningkatkan biayanya?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Apakah anda ingin membuat draf transaksi dengan kenaikan biaya?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>Biaya saat ini:</translation>\n@@ -2946,6 +3190,26 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>New fee:</source>\n         <translation>Biaya baru:</translation>\n     </message>\n+    <message>\n+        <source>Confirm fee bump</source>\n+        <translation>Konfirmasi biaya tambahan</translation>\n+    </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Tidak dapat membuat konsep transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT disalin</translation>\n+    </message>\n+    <message>\n+        <source>Can't sign transaction.</source>\n+        <translation>Tidak dapat menandatangani transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>Could not commit transaction</source>\n+        <translation>Tidak dapat melakukan transaksi</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>wallet default</translation>\n@@ -2961,21 +3225,97 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Export the data in the current tab to a file</source>\n         <translation>Ekspor data dalam tab sekarang ke sebuah berkas</translation>\n     </message>\n+    <message>\n+        <source>Backup Wallet</source>\n+        <translation>Cadangkan Dompet</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Data (*.dat)</source>\n+        <translation>Data Dompet (*.dat)</translation>\n+    </message>\n     <message>\n         <source>Backup Failed</source>\n         <translation>Pencadangan Gagal</translation>\n     </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Terjadi kesalahan saat mencoba menyimpan data dompet ke %1.</translation>\n+    </message>\n     <message>\n         <source>Backup Successful</source>\n         <translation>Pencadangan Berhasil</translation>\n     </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>Data dompet berhasil disimpan ke %1.</translation>\n+    </message>\n     <message>\n         <source>Cancel</source>\n         <translation>Batal</translation>\n     </message>\n </context>\n <context>\n     <name>bitcoin-core</name>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n+        <translation>Didistribusikan di bawah lisensi perangkat lunak MIT, lihat berkas terlampir %s atau %s</translation>\n+    </message>\n+    <message>\n+        <source>Prune configured below the minimum of %d MiB.  Please use a higher number.</source>\n+        <translation>Pemangkasan dikonfigurasikan di bawah minimum dari %d MiB. Harap gunakan angka yang lebih tinggi.</translation>\n+    </message>\n+    <message>\n+        <source>Prune: last wallet synchronisation goes beyond pruned data. You need to -reindex (download the whole blockchain again in case of pruned node)</source>\n+        <translation>Pemangkasan: sinkronisasi dompet terakhir melampaui data yang sudah dipangkas. Anda perlu -reindex (unduh seluruh blockchain lagi jika terjadi node pemangkasan)</translation>\n+    </message>\n+    <message>\n+        <source>Error: A fatal internal error occurred, see debug.log for details</source>\n+        <translation>Error: Kesalahan internal fatal terjadi, lihat debug.log untuk detailnya</translation>\n+    </message>\n+    <message>\n+        <source>Pruning blockstore...</source>\n+        <translation>Memangkas blockstore...</translation>\n+    </message>\n+    <message>\n+        <source>Unable to start HTTP server. See debug log for details.</source>\n+        <translation>Tidak dapat memulai server HTTP. Lihat log debug untuk detailnya.</translation>\n+    </message>\n+    <message>\n+        <source>The %s developers</source>\n+        <translation>Pengembang %s</translation>\n+    </message>\n+    <message>\n+        <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n+        <translation>Tidak dapat memperoleh kunci pada direktori data %s. %s mungkin sudah berjalan.</translation>\n+    </message>\n+    <message>\n+        <source>Error reading %s! All keys read correctly, but transaction data or address book entries might be missing or incorrect.</source>\n+        <translation>Kesalahan membaca %s! Semua kunci dibaca dengan benar, tetapi data transaksi atau entri buku alamat mungkin hilang atau salah.</translation>\n+    </message>\n+    <message>\n+        <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n+        <translation>Periksa apakah tanggal dan waktu komputer anda benar! Jika jam anda salah, %s tidak akan berfungsi dengan baik.</translation>\n+    </message>\n+    <message>\n+        <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n+        <translation>Silakan berkontribusi jika %s berguna. Kunjungi %s untuk informasi lebih lanjut tentang perangkat lunak.</translation>\n+    </message>\n+    <message>\n+        <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n+        <translation>Blok basis data berisi blok yang tampaknya berasal dari masa depan. Ini mungkin karena tanggal dan waktu komputer anda diatur secara tidak benar. Bangun kembali blok basis data jika anda yakin tanggal dan waktu komputer anda benar</translation>\n+    </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Ini adalah uji coba pra-rilis - gunakan dengan risiko anda sendiri - jangan digunakan untuk aplikasi penambangan atau penjual</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Peringatan: Jaringan tampaknya tidak sepenuhnya setuju! Beberapa penambang tampaknya mengalami masalah.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Peringatan: Kami tampaknya tidak sepenuhnya setuju dengan peers kami! Anda mungkin perlu memutakhirkan, atau nodes lain mungkin perlu dimutakhirkan.</translation>\n+    </message>\n     <message>\n         <source>Corrupted block database detected</source>\n         <translation>Menemukan database blok yang rusak</translation>\n@@ -3008,26 +3348,128 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Incorrect or no genesis block found. Wrong datadir for network?</source>\n         <translation>Tidak bisa cari blok pertama, atau blok pertama salah. Salah direktori untuk jaringan?</translation>\n     </message>\n+    <message>\n+        <source>Loading P2P addresses...</source>\n+        <translation>Memuat alamat P2P....</translation>\n+    </message>\n     <message>\n         <source>Error: Disk space is too low!</source>\n         <translation>Eror: Kapasitas penyimpanan penuh!</translation>\n     </message>\n+    <message>\n+        <source>Loading banlist...</source>\n+        <translation>Memuat banlist...</translation>\n+    </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n         <translation>Deskripsi berkas tidak tersedia dengan cukup.</translation>\n     </message>\n+    <message>\n+        <source>Prune cannot be configured with a negative value.</source>\n+        <translation>Pemangkasan tidak dapat dikonfigurasi dengan nilai negatif.</translation>\n+    </message>\n+    <message>\n+        <source>The source code is available from %s.</source>\n+        <translation>Kode sumber tersedia dari %s.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee and change calculation failed</source>\n+        <translation>Biaya transaksi dan kalkulasi perubahan gagal</translation>\n+    </message>\n+    <message>\n+        <source>Unable to bind to %s on this computer. %s is probably already running.</source>\n+        <translation>Tidak dapat mengikat ke %s di komputer ini. %s mungkin sudah berjalan.</translation>\n+    </message>\n+    <message>\n+        <source>Unable to generate keys</source>\n+        <translation>Tidak dapat menghasilkan kunci</translation>\n+    </message>\n+    <message>\n+        <source>Unsupported logging category %s=%s.</source>\n+        <translation>Kategori logging yang tidak didukung %s=%s.</translation>\n+    </message>\n+    <message>\n+        <source>Upgrading UTXO database</source>\n+        <translation>Memutakhirkan basis data UTXO</translation>\n+    </message>\n+    <message>\n+        <source>User Agent comment (%s) contains unsafe characters.</source>\n+        <translation>Komentar Agen Pengguna (%s) berisi karakter yang tidak aman.</translation>\n+    </message>\n     <message>\n         <source>Verifying blocks...</source>\n         <translation>Blok-blok sedang diverifikasi...</translation>\n     </message>\n+    <message>\n+        <source>Wallet needed to be rewritten: restart %s to complete</source>\n+        <translation>Dompet harus ditulis ulang: mulai ulang %s untuk menyelesaikan</translation>\n+    </message>\n+    <message>\n+        <source>Error: Listening for incoming connections failed (listen returned error %s)</source>\n+        <translation>Error: Mendengarkan koneksi yang masuk gagal (dengarkan kesalahan yang dikembalikan %s)</translation>\n+    </message>\n+    <message>\n+        <source>The transaction amount is too small to send after the fee has been deducted</source>\n+        <translation>Jumlah transaksi terlalu kecil untuk dikirim setelah biaya dikurangi</translation>\n+    </message>\n+    <message>\n+        <source>You need to rebuild the database using -reindex to go back to unpruned mode.  This will redownload the entire blockchain</source>\n+        <translation>Anda perlu membangun kembali basis data menggunakan -reindex untuk kembali ke mode tidak dipangkas. Ini akan mengunduh ulang seluruh blockchain</translation>\n+    </message>\n+    <message>\n+        <source>Error reading from database, shutting down.</source>\n+        <translation>Kesalahan membaca dari basis data, mematikan.</translation>\n+    </message>\n+    <message>\n+        <source>Error upgrading chainstate database</source>\n+        <translation>Kesalahan memutakhirkan basis data chainstate</translation>\n+    </message>\n     <message>\n         <source>Error: Disk space is low for %s</source>\n         <translation>Eror: Kapasitas penyimpanan penuh untuk %s</translation>\n     </message>\n+    <message>\n+        <source>Invalid -onion address or hostname: '%s'</source>\n+        <translation>Alamat -onion atau hostname tidak valid: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Invalid -proxy address or hostname: '%s'</source>\n+        <translation>Alamat proxy atau hostname tidak valid: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Invalid netmask specified in -whitelist: '%s'</source>\n+        <translation>Netmask tidak valid yang ditentukan di -whitelist: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Need to specify a port with -whitebind: '%s'</source>\n+        <translation>Perlu menentukan port dengan -whitebind: '%s'</translation>\n+    </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>Mode pemangkasan tidak kompatibel dengan -blockfilterindex.</translation>\n+    </message>\n+    <message>\n+        <source>Section [%s] is not recognized.</source>\n+        <translation>Bagian [%s] tidak dikenali.</translation>\n+    </message>\n     <message>\n         <source>Signing transaction failed</source>\n         <translation>Tandatangani transaksi tergagal</translation>\n     </message>\n+    <message>\n+        <source>The specified config file %s does not exist\n+</source>\n+        <translation>Berkas konfigurasi %s yang ditentukan tidak ada\n+</translation>\n+    </message>\n+    <message>\n+        <source>The transaction amount is too small to pay the fee</source>\n+        <translation>Jumlah transaksi terlalu kecil untuk membayar biaya ongkos</translation>\n+    </message>\n+    <message>\n+        <source>This is experimental software.</source>\n+        <translation>Ini adalah perangkat lunak eksperimental.</translation>\n+    </message>\n     <message>\n         <source>Transaction amount too small</source>\n         <translation>Nilai transaksi terlalu kecil</translation>\n@@ -3036,10 +3478,46 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Transaction too large</source>\n         <translation>Transaksi terlalu besar</translation>\n     </message>\n+    <message>\n+        <source>Verifying wallet(s)...</source>\n+        <translation>Memverifikasi dompet...</translation>\n+    </message>\n     <message>\n         <source>Zapping all transactions from wallet...</source>\n         <translation>Setiap transaksi dalam dompet sedang di-'Zap'...</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>%s diset sangat tinggi!</translation>\n+    </message>\n+    <message>\n+        <source>Error loading wallet %s. Duplicate -wallet filename specified.</source>\n+        <translation>Terjadi kesalahan saat memuat dompet %s duplikat -wallet  nama file yang diterapkan</translation>\n+    </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>Dompet akan menghindari pembayaran kurang dari biaya minimum ongkos relay.</translation>\n+    </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Ini adalah ongkos transaksi minimum yang anda bayarkan untuk setiap transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>Ini adalah ongkos transaksi yang akan anda bayarkan jika anda mengirim transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Jumlah transaksi tidak boleh negatif</translation>\n+    </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>Transaksi mempunyai rantai mempool yang terlalu panjang</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>Transaksi harus mempunyai paling tidak satu penerima</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Jaringan tidak diketahui yang ditentukan dalam -onlynet: '%s'</translation>\n@@ -3048,6 +3526,14 @@ Catatan: Karena biaya dihitung berdasarkan per byte, biaya \"100 satoshi per kB\"\n         <source>Insufficient funds</source>\n         <translation>Saldo tidak mencukupi</translation>\n     </message>\n+    <message>\n+        <source>Warning: Private keys detected in wallet {%s} with disabled private keys</source>\n+        <translation>Peringatan: Kunci pribadi terdeteksi di dompet {%s} dengan kunci pribadi yang dinonaktifkan</translation>\n+    </message>\n+    <message>\n+        <source>Cannot write to data directory '%s'; check permissions.</source>\n+        <translation>Tidak dapat menulis ke direktori data '%s'; periksa izinnya.</translation>\n+    </message>\n     <message>\n         <source>Loading block index...</source>\n         <translation>Memuat indeks blok...</translation>"
      },
      {
        "sha": "25fe30bbdd5ab9ac8b97facdab2cd1851f3a99b4",
        "filename": "src/qt/locale/bitcoin_is.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_is.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_is.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_is.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -167,6 +167,10 @@\n         <source>Wallet encrypted</source>\n         <translation>Veski dulk\u00f3\u00f0a\u00f0</translation>\n     </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Veski sem \u00e1 a\u00f0 dulk\u00f3\u00f0a</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>MIKILV\u00c6GT: N\u00fdja dulk\u00f3\u00f0a\u00f0a veskisskr\u00e1in \u00fearf a\u00f0 koma \u00ed sta\u00f0inn fyrir \u00f6ll fyrri afrit sem \u00fe\u00fa hefur gert af upprunalegu veskisskr\u00e1nni. Af \u00f6ryggis\u00e1st\u00e6\u00f0um munu \u00f6ll fyrri afrit af \u00f3dulk\u00f3\u00f0a\u00f0a veskinu ver\u00f0a \u00f3virk um lei\u00f0 og \u00fe\u00fa byrjar a\u00f0 nota n\u00fdja, dulk\u00f3\u00f0a\u00f0a veski\u00f0.</translation>"
      },
      {
        "sha": "a8137d30317b7b1a5321ba5b43b31909244dd378",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1789,6 +1789,14 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Synced Blocks</source>\n         <translation>Blocchi sincronizzati</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Il Sistema Autonomo mappato utilizzato per diversificare la selezione dei peer.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>AS mappato</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User Agent</translation>"
      },
      {
        "sha": "e40e5ec4fb541f7dae400c27848121e26472b496",
        "filename": "src/qt/locale/bitcoin_ja.ts",
        "status": "modified",
        "additions": 86,
        "deletions": 26,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ja.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ja.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ja.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -67,7 +67,7 @@\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n-        <translation>\u3053\u308c\u3089\u306f\u3001\u3042\u306a\u305f\u304c\u77e5\u3063\u3066\u3044\u308b\u652f\u6255\u3044\u9001\u308a\u5148\u306e Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u30b3\u30a4\u30f3\u3092\u9001\u308b\u524d\u306b\u3001\u5fc5\u305a\u91d1\u984d\u3068\u9001\u91d1\u5148\u30a2\u30c9\u30ec\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n+        <translation>\u3053\u308c\u3089\u306f\u3001\u3042\u306a\u305f\u304c\u77e5\u3063\u3066\u3044\u308b\u9001\u4fe1\u5148\u306e Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\u30b3\u30a4\u30f3\u3092\u9001\u308b\u524d\u306b\u5fc5\u305a\u3001\u91d1\u984d\u3068\u53d7\u53d6\u7528\u30a2\u30c9\u30ec\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n     </message>\n     <message>\n         <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n@@ -91,7 +91,7 @@\n     </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n-        <translation>\u30c6\u30ad\u30b9\u30c8 CSV (*.csv)</translation>\n+        <translation>CSV\u30d5\u30a1\u30a4\u30eb (*.csv)</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n@@ -114,7 +114,7 @@\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(\u30e9\u30d9\u30eb\u7121\u3057)</translation>\n+        <translation>\uff08\u30e9\u30d9\u30eb\u7121\u3057\uff09</translation>\n     </message>\n </context>\n <context>\n@@ -133,7 +133,7 @@\n     </message>\n     <message>\n         <source>Repeat new passphrase</source>\n-        <translation>\u65b0\u3057\u3044\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u3082\u3046\u4e00\u5ea6</translation>\n+        <translation>\u65b0\u3057\u3044\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u3082\u3046\u4e00\u5ea6\u5165\u529b</translation>\n     </message>\n     <message>\n         <source>Show passphrase</source>\n@@ -169,7 +169,7 @@\n     </message>\n     <message>\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n-        <translation>\u8b66\u544a: \u3082\u3057\u3082\u3042\u306a\u305f\u306e\u30a6\u30a9\u30ec\u30c3\u30c8\u3092\u6697\u53f7\u5316\u3057\u3066\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u3089\u3001&lt;b&gt;\u3042\u306a\u305f\u306e Bitcoin \u306f\u3059\u3079\u3066\u5931\u308f\u308c\u307e\u3059&lt;/b&gt;\uff01</translation>\n+        <translation>\u8b66\u544a: \u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u6697\u53f7\u5316\u5f8c\u306b\u30d1\u30b9\u30d5\u30ec\u30fc\u30ba\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u3001&lt;b&gt;\u3042\u306a\u305f\u306e Bitcoin \u306f\u3059\u3079\u3066\u5931\u308f\u308c\u307e\u3059&lt;/b&gt;\uff01</translation>\n     </message>\n     <message>\n         <source>Are you sure you wish to encrypt your wallet?</source>\n@@ -206,7 +206,7 @@\n     </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n-        <translation>\u91cd\u8981: \u4eca\u307e\u3067\u306b\u4f5c\u6210\u3055\u308c\u305f\u30a6\u30a9\u30ec\u30c3\u30c8 \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u3001\u6697\u53f7\u5316\u3055\u308c\u305f\u65b0\u3057\u3044\u30a6\u30a9\u30ec\u30c3\u30c8 \u30d5\u30a1\u30a4\u30eb\u306b\u7f6e\u304d\u63db\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u306b\u3088\u308a\u3001\u6697\u53f7\u5316\u3055\u308c\u305f\u65b0\u3057\u3044\u30a6\u30a9\u30ec\u30c3\u30c8\u3092\u4f7f\u3044\u59cb\u3081\u308b\u3068\u3001\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30a6\u30a9\u30ec\u30c3\u30c8 \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u3059\u3050\u306b\u4f7f\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002</translation>\n+        <translation>\u91cd\u8981: \u4eca\u307e\u3067\u306b\u4f5c\u6210\u3055\u308c\u305f\u30a6\u30a9\u30ec\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u3001\u6697\u53f7\u5316\u3055\u308c\u305f\u65b0\u3057\u3044\u30a6\u30a9\u30ec\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u7f6e\u304d\u63db\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u4e0a\u306e\u7406\u7531\u306b\u3088\u308a\u3001\u6697\u53f7\u5316\u3055\u308c\u305f\u65b0\u3057\u3044\u30a6\u30a9\u30ec\u30c3\u30c8\u3092\u4f7f\u3044\u59cb\u3081\u308b\u3068\u3001\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u306a\u3044\u30a6\u30a9\u30ec\u30c3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306f\u3059\u3050\u306b\u4f7f\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed</source>\n@@ -392,15 +392,15 @@\n     </message>\n     <message>\n         <source>Show or hide the main Window</source>\n-        <translation>\u30e1\u30a4\u30f3 \u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u8868\u793a\u307e\u305f\u306f\u975e\u8868\u793a\u3059\u308b</translation>\n+        <translation>\u30e1\u30a4\u30f3\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u307e\u305f\u306f\u975e\u8868\u793a\u306b\u3059\u308b</translation>\n     </message>\n     <message>\n         <source>Encrypt the private keys that belong to your wallet</source>\n         <translation>\u30a6\u30a9\u30ec\u30c3\u30c8\u306e\u79d8\u5bc6\u9375\u3092\u6697\u53f7\u5316\u3059\u308b</translation>\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7f72\u540d\u3057\u3066\u3001\u30a2\u30c9\u30ec\u30b9\u3092\u6240\u6709\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u8a3c\u660e\u3059\u308b</translation>\n+        <translation>Bitcoin \u30a2\u30c9\u30ec\u30b9\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7f72\u540d\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u306e\u6240\u6709\u6a29\u3092\u8a3c\u660e\u3059\u308b</translation>\n     </message>\n     <message>\n         <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n@@ -424,7 +424,7 @@\n     </message>\n     <message>\n         <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n-        <translation>\u652f\u6255\u3044\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b (QR\u30b3\u30fc\u30c9\u3068 bitcoin: URI\u3092\u751f\u6210\u3059\u308b)&lt;</translation>\n+        <translation>\u652f\u6255\u3044\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\uff08QR\u30b3\u30fc\u30c9\u3068 bitcoin:\u3067\u59cb\u307e\u308bURI\u3092\u751f\u6210\u3059\u308b\uff09</translation>\n     </message>\n     <message>\n         <source>Show the list of used sending addresses and labels</source>\n@@ -482,6 +482,10 @@\n         <source>Up to date</source>\n         <translation>\u30d6\u30ed\u30c3\u30af\u306f\u6700\u65b0</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u30ce\u30fc\u30c9\u30a6\u30a3\u30f3\u30c9\u30a6</translation>\n+    </message>\n     <message>\n         <source>Open node debugging and diagnostic console</source>\n         <translation>\u30ce\u30fc\u30c9\u306e\u30c7\u30d0\u30c3\u30b0\u30fb\u8a3a\u65ad\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304f</translation>\n@@ -516,7 +520,7 @@\n     </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n-        <translation>%1 \u306e\u30d8\u30eb\u30d7 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3066\u3001\u4f7f\u7528\u53ef\u80fd\u306a XPChain \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 \u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u898b\u308b\u3002</translation>\n+        <translation>%1 \u306e\u30d8\u30eb\u30d7 \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u3001\u4f7f\u7528\u53ef\u80fd\u306a Bitcoin \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u898b\u308b\u3002</translation>\n     </message>\n     <message>\n         <source>default wallet</source>\n@@ -528,7 +532,7 @@\n     </message>\n     <message>\n         <source>&amp;Window</source>\n-        <translation>\u30a6\u30a4\u30f3\u30c9\u30a6 (&amp;W)</translation>\n+        <translation>\u30a6\u30a3\u30f3\u30c9\u30a6 (&amp;W)</translation>\n     </message>\n     <message>\n         <source>Minimize</source>\n@@ -731,7 +735,7 @@\n     </message>\n     <message>\n         <source>Copy fee</source>\n-        <translation>\u624b\u6570\u6599\u3092\u30b3\u30d4\u30fc\u3059</translation>\n+        <translation>\u624b\u6570\u6599\u3092\u30b3\u30d4\u30fc</translation>\n     </message>\n     <message>\n         <source>Copy after fee</source>\n@@ -767,19 +771,19 @@\n     </message>\n     <message>\n         <source>Can vary +/- %1 satoshi(s) per input.</source>\n-        <translation>\u3072\u3068\u3064\u306e\u5165\u529b\u306b\u3064\u304d %1 satoshi \u524d\u5f8c\u305a\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n+        <translation>\u30a4\u30f3\u30d7\u30c3\u30c8\u6bce\u306b %1 satoshi \u524d\u5f8c\u5909\u52d5\u3059\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(\u30e9\u30d9\u30eb\u7121\u3057)</translation>\n+        <translation>\uff08\u30e9\u30d9\u30eb\u7121\u3057\uff09</translation>\n     </message>\n     <message>\n         <source>change from %1 (%2)</source>\n         <translation>%1 (%2) \u304b\u3089\u306e\u304a\u3064\u308a</translation>\n     </message>\n     <message>\n         <source>(change)</source>\n-        <translation>(\u304a\u3064\u308a)</translation>\n+        <translation>\uff08\u304a\u3064\u308a\uff09</translation>\n     </message>\n </context>\n <context>\n@@ -895,7 +899,7 @@\n     <name>FreespaceChecker</name>\n     <message>\n         <source>A new data directory will be created.</source>\n-        <translation>\u65b0\u3057\u3044\u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</translation>\n+        <translation>\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>name</source>\n@@ -926,7 +930,7 @@\n     </message>\n     <message>\n         <source>Command-line options</source>\n-        <translation>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 \u30aa\u30d7\u30b7\u30e7\u30f3</translation>\n+        <translation>\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3</translation>\n     </message>\n </context>\n <context>\n@@ -945,7 +949,7 @@\n     </message>\n     <message>\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n-        <translation>OK\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001%1 \u306f %4 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f%3\u5e74\u6700\u521d\u306e\u53d6\u5f15\u304b\u3089\u306e\u5b8c\u5168\u306a %4 \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\uff08%2GB\uff09\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304a\u3088\u3073\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002</translation>\n+        <translation>OK\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001%1 \u306f %4 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f%3\u5e74\u306b\u304a\u3051\u308b\u6700\u521d\u306e\u53d6\u5f15\u304b\u3089\u306e\u5b8c\u5168\u306a %4 \u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\uff08%2GB\uff09\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304a\u3088\u3073\u51e6\u7406\u3092\u958b\u59cb\u3057\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n@@ -961,19 +965,19 @@\n     </message>\n     <message>\n         <source>Use the default data directory</source>\n-        <translation>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f7f\u7528</translation>\n+        <translation>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f7f\u7528</translation>\n     </message>\n     <message>\n         <source>Use a custom data directory:</source>\n-        <translation>\u30ab\u30b9\u30bf\u30e0 \u30c7\u30fc\u30bf \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f7f\u7528:</translation>\n+        <translation>\u30ab\u30b9\u30bf\u30e0\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f7f\u7528:</translation>\n     </message>\n     <message>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n         <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n-        <translation>\u6700\u65b0\u306e%1 GB\u3092\u9664\u3044\u3066\u3001\u691c\u8a3c\u5f8c\u306b\u30d6\u30ed\u30c3\u30af\u3092\u7834\u68c4 (\u526a\u5b9a\u3059\u308b)</translation>\n+        <translation>\u6700\u65b0\u306e%1 GB\u3092\u9664\u304d\u3001\u691c\u8a3c\u5f8c\u306b\u30d6\u30ed\u30c3\u30af\u3092\u7834\u68c4\u3059\u308b\uff08\u526a\u5b9a\u3059\u308b\uff09</translation>\n     </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n@@ -1024,7 +1028,7 @@\n     </message>\n     <message>\n         <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n-        <translation>\u307e\u3060\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u53d6\u5f15\u304c\u95a2\u4fc2\u3059\u308b Bitcoin \u3092\u4f7f\u7528\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u8a8d\u8a3c\u3092\u53d7\u3051\u3089\u308c\u307e\u305b\u3093\u3002</translation>\n+        <translation>\u307e\u3060\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u53d6\u5f15\u304c\u95a2\u4fc2\u3059\u308b Bitcoin \u306e\u4f7f\u7528\u3092\u8a66\u307f\u305f\u5834\u5408\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304b\u3089\u8a8d\u8a3c\u3092\u53d7\u3051\u3089\u308c\u307e\u305b\u3093\u3002</translation>\n     </message>\n     <message>\n         <source>Number of blocks left</source>\n@@ -1044,23 +1048,27 @@\n     </message>\n     <message>\n         <source>Progress increase per hour</source>\n-        <translation>\u4e00\u6642\u9593\u3042\u305f\u308a\u306e\u9032\u6357\u5897\u52a0</translation>\n+        <translation>\u4e00\u6642\u9593\u6bce\u306e\u9032\u6357\u5897\u52a0</translation>\n     </message>\n     <message>\n         <source>calculating...</source>\n         <translation>\u8a08\u7b97\u4e2d...</translation>\n     </message>\n     <message>\n         <source>Estimated time left until synced</source>\n-        <translation>\u540c\u671f\u5b8c\u4e86\u307e\u3067\u306e\u63a8\u5b9a\u6b8b\u308a\u6642\u9593</translation>\n+        <translation>\u540c\u671f\u5b8c\u4e86\u307e\u3067\u306e\u63a8\u5b9a\u6642\u9593</translation>\n     </message>\n     <message>\n         <source>Hide</source>\n         <translation>\u96a0\u3059</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n     <message>\n         <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n-        <translation>%1\u306f\u73fe\u5728\u540c\u671f\u4e2d\u3067\u3059\u3002\u30d6\u30ed\u30c3\u30af \u30c1\u30a7\u30fc\u30f3\u306e\u5148\u7aef\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u3001\u30d4\u30a2\u304b\u3089\u30d8\u30c3\u30c0\u30fc\u3068\u30d6\u30ed\u30c3\u30af\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u691c\u8a3c\u3057\u307e\u3059\u3002</translation>\n+        <translation>%1\u306f\u73fe\u5728\u540c\u671f\u4e2d\u3067\u3059\u3002\u30d6\u30ed\u30c3\u30af\u30c1\u30a7\u30fc\u30f3\u306e\u5148\u7aef\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u3001\u30d4\u30a2\u304b\u3089\u30d8\u30c3\u30c0\u30fc\u3068\u30d6\u30ed\u30c3\u30af\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u691c\u8a3c\u3057\u307e\u3059\u3002</translation>\n     </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n@@ -1213,7 +1221,7 @@\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n-        <translation>\u672a\u691c\u8a3c\u306e\u304a\u91e3\u308a\u3092\u4f7f\u7528\u3059\u308b(&amp;S)</translation>\n+        <translation>\u672a\u627f\u8a8d\u306e\u304a\u91e3\u308a\u3092\u4f7f\u7528\u3059\u308b(&amp;S)</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n@@ -1781,10 +1789,22 @@\n         <source>Synced Blocks</source>\n         <translation>\u540c\u671f\u6e08\u307f\u30d6\u30ed\u30c3\u30af</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>\u30d4\u30a2\u9078\u629e\u306e\u591a\u69d8\u5316\u306b\u4f7f\u7528\u3067\u304d\u308b\u30de\u30c3\u30d7\u5316\u3055\u308c\u305f\u81ea\u5f8b\u30b7\u30b9\u30c6\u30e0\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>\u30de\u30c3\u30d7\u5316\u3055\u308c\u305f\u81ea\u5f8b\u30b7\u30b9\u30c6\u30e0</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>\u30e6\u30fc\u30b6\u30fc\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u30ce\u30fc\u30c9\u30a6\u30a3\u30f3\u30c9\u30a6</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u73fe\u5728\u306e\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089 %1 \u306e\u30c7\u30d0\u30c3\u30b0\u7528\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304d\u307e\u3059\u3002\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u5de8\u5927\u306a\u5834\u5408\u3001\u6570\u79d2\u304b\u304b\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</translation>\n@@ -2257,6 +2277,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Dust:</source>\n         <translation>\u30c0\u30b9\u30c8:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u624b\u6570\u6599\u306e\u8a2d\u5b9a\u3092\u96a0\u3059</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>\u30d6\u30ed\u30c3\u30af\u5185\u306e\u7a7a\u304d\u3088\u308a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6d41\u91cf\u304c\u5c11\u306a\u3044\u5834\u5408\u3001\u30de\u30a4\u30ca\u30fc\u3084\u4e2d\u7d99\u30ce\u30fc\u30c9\u306f\u6700\u4f4e\u9650\u306e\u624b\u6570\u6599\u3067\u3082\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u6700\u4f4e\u9650\u306e\u624b\u6570\u6599\u3060\u3051\u3092\u652f\u6255\u3063\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u4e00\u5ea6\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u9700\u8981\u304c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u51e6\u7406\u80fd\u529b\u3092\u8d85\u3048\u3066\u3057\u307e\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u6c38\u4e45\u306b\u627f\u8a8d\u3055\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002</translation>\n@@ -2325,6 +2349,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 \u30d6\u30ed\u30c3\u30af)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>\u672a\u7f72\u540d\u3067\u4f5c\u6210</translation>\n+    </message>\n     <message>\n         <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n         <translation>\u30aa\u30d5\u30e9\u30a4\u30f3%1\u30a6\u30a9\u30ec\u30c3\u30c8\u307e\u305f\u306fPSBT\u306b\u5bfe\u5fdc\u3057\u305f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30a6\u30a9\u30ec\u30c3\u30c8\u3068\u5408\u308f\u305b\u3066\u4f7f\u7528\u3059\u308b\u305f\u3081\u306ePSBT(\u90e8\u5206\u7684\u306b\u7f72\u540d\u3055\u308c\u305f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3)\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</translation>\n@@ -2341,10 +2369,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 to %2</source>\n         <translation>%1 \u9001\u91d1\u5148: %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\u3053\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3072\u306a\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u304b\uff1f</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u9001\u91d1\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b\uff1f</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u63d0\u6848\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u90e8\u5206\u7684\u306b\u7f72\u540d\u3055\u308c\u305f\u30d3\u30c3\u30c8\u30b3\u30a4\u30f3\u30fb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\uff08PSBT\uff09\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4f8b\u3048\u3070\u30aa\u30d5\u30e9\u30a4\u30f3\u306e %1 \u30a6\u30a9\u30ec\u30c3\u30c8\u3084PSBT\u3092\u6271\u3048\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30a6\u30a9\u30ec\u30c3\u30c8\u3067\u6b8b\u308a\u306e\u7f72\u540d\u304c\u51fa\u6765\u307e\u3059\u3002</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u307e\u305f\u306f</translation>\n@@ -2377,14 +2413,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm send coins</source>\n         <translation>\u9001\u91d1\u306e\u78ba\u8a8d</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u63d0\u6848\u3092\u627f\u8a8d\u3059\u308b</translation>\n+    </message>\n     <message>\n         <source>Copy PSBT to clipboard</source>\n         <translation>PSBT\u3092\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u306b\u30b3\u30d4\u30fc</translation>\n     </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>\u9001\u91d1</translation>\n+    </message>\n     <message>\n         <source>PSBT copied</source>\n         <translation>PSBT\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3057\u305f</translation>\n     </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>\u76e3\u8996\u9650\u5b9a\u6b8b\u9ad8</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u9001\u91d1\u5148\u30a2\u30c9\u30ec\u30b9\u304c\u4e0d\u6b63\u3067\u3059\u3002\u518d\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</translation>\n@@ -2480,6 +2528,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Remove this entry</source>\n         <translation>\u3053\u306e\u9805\u76ee\u3092\u524a\u9664</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>\u9001\u91d1\u3059\u308b\u91d1\u984d\u306e\u5358\u4f4d\u3092\u9078\u629e</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>\u624b\u6570\u6599\u306f\u9001\u91d1\u3059\u308b\u91d1\u984d\u304b\u3089\u5dee\u3057\u5f15\u304b\u308c\u307e\u3059\u3002\u9001\u91d1\u5148\u306b\u306f\u91d1\u984d\u6b04\u3067\u6307\u5b9a\u3057\u305f\u984d\u3088\u308a\u3082\u5c11\u306a\u3044 Bitcoin \u304c\u9001\u3089\u308c\u307e\u3059\u3002\u9001\u91d1\u5148\u304c\u8907\u6570\u3042\u308b\u5834\u5408\u306f\u3001\u624b\u6570\u6599\u306f\u5747\u7b49\u306b\u5206\u3051\u3089\u308c\u307e\u3059\u3002</translation>\n@@ -3185,6 +3237,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Do you want to increase the fee?</source>\n         <translation>\u624b\u6570\u6599\u3092\u4e0a\u4e57\u305b\u3057\u3066\u3082\u3088\u308d\u3057\u3044\u3067\u3059\u304b\uff1f</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>\u3053\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u624b\u6570\u6599\u3092\u4e0a\u4e57\u305b\u3057\u305f\u3072\u306a\u5f62\u3092\u4f5c\u6210\u3057\u307e\u3059\u304b\uff1f</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>\u73fe\u5728\u306e\u624b\u6570\u6599:</translation>\n@@ -3201,6 +3257,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm fee bump</source>\n         <translation>\u624b\u6570\u6599\u4e0a\u4e57\u305b\u306e\u78ba\u8a8d</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3072\u306a\u578b\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002</translation>\n+    </message>\n     <message>\n         <source>PSBT copied</source>\n         <translation>PSBT\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3057\u305f</translation>"
      },
      {
        "sha": "4ef5205777891c31d3c063a6890e3fba5b1871b6",
        "filename": "src/qt/locale/bitcoin_km.ts",
        "status": "modified",
        "additions": 310,
        "deletions": 35,
        "changes": 345,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_km.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_km.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_km.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -3,153 +3,400 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>\u1785\u17bb\u1785\u1781\u17b6\u1784\u179f\u17d2\u178f\u17b6\u17c6\u178a\u17be\u1798\u17d2\u1794\u17b8\u1780\u17c2\u17a2\u17b6\u179f\u17d2\u179a\u1799\u178a\u17d2\u178b\u17b6\u1793\u200b \u17ac \u179f\u17d2\u179b\u17b6\u1780</translation>\n+        <translation>\u1785\u17bb\u1785\u1798\u17c9\u17c5\u179f\u17d2\u178a\u17b6\u17c6 \u178a\u17be\u1798\u17d2\u1794\u17b8\u1780\u17c2\u179f\u1798\u17d2\u179a\u17bd\u179b\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793 \u179a\u17ba\u179f\u17d2\u179b\u17b6\u1780</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n-        <translation>\u1794\u1784\u17d2\u1780\u17be\u178f\u17a2\u17b6\u179f\u17d2\u179a\u1799\u178a\u17d2\u178b\u17b6\u1793\u1790\u17d2\u1798\u17b8\u1798\u17bd\u1799</translation>\n+        <translation>\u1794\u1784\u17d2\u1780\u17be\u178f\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1790\u17d2\u1798\u17b8\u1798\u17bd\u1799</translation>\n     </message>\n     <message>\n         <source>&amp;New</source>\n-        <translation>&amp;\u1790\u17d2\u1798\u17b8</translation>\n+        <translation>\u1790\u17d2\u1798\u17b8</translation>\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>\u1785\u1798\u17d2\u179b\u1784\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u1794\u17b6\u1793\u179a\u17be\u179f</translation>\n+        <translation>\u1785\u1798\u17d2\u179b\u1784\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1794\u1785\u17d2\u1785\u17bb\u1794\u17d2\u1794\u1793\u17d2\u1793\u178a\u17c2\u179b\u1794\u17b6\u1793\u1787\u17d2\u179a\u17be\u179f\u1791\u17c5\u1780\u17d2\u178a\u17b6\u179a\u178f\u1798\u17d2\u179a\u17c0\u1794\u179a\u1794\u179f\u17cb\u1794\u17d2\u179a\u1796\u17d0\u1793\u17d2\u1792</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n-        <translation>&amp;\u1785\u1798\u17d2\u179b\u1784</translation>\n+        <translation>\u1785\u1798\u17d2\u179b\u1784</translation>\n     </message>\n     <message>\n         <source>C&amp;lose</source>\n-        <translation>&amp;\u1794\u17b7\u1791</translation>\n+        <translation>\u1794\u17b7\u1791</translation>\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n-        <translation>\u179b\u17bb\u1794\u200b\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u200b\u1794\u17b6\u1793\u200b\u179a\u17be\u179f\u200b\u1796\u17b8\u200b\u1794\u1789\u17d2\u1787\u17b8</translation>\n+        <translation>\u179b\u17bb\u1794\u200b\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u200b\u1794\u17b6\u1793\u1787\u17d2\u179a\u17be\u179f\u200b\u1796\u17b8\u200b\u1794\u1789\u17d2\u1787\u17b8</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u179c\u17b6\u1799\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793 \u179a\u17ba\u179f\u17d2\u179b\u17b6\u1780\u178a\u17be\u1798\u17d2\u1794\u17b8\u179f\u17d2\u179c\u17c2\u1784\u179a\u1780</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n-        <translation>\u1793\u17b6\u17c6\u1785\u17c1\u1789\u1791\u17b7\u1793\u17d2\u1793\u1793\u17d0\u1799\u1793\u17c3\u1790\u17c1\u1794\u1794\u1785\u17d2\u1785\u17bb\u1794\u17d2\u1794\u1793\u17d2\u1793\u1791\u17c5\u1787\u17b6\u17af\u1780\u179f\u17b6\u179a</translation>\n+        <translation>\u1793\u17b6\u17c6\u1785\u17c1\u1789\u1791\u17b7\u1793\u17d2\u1793\u1793\u17d0\u1799\u1793\u17c3\u1795\u17d2\u1791\u17b6\u17c6\u1784\u1794\u1785\u17d2\u1785\u17bb\u1794\u17d2\u1794\u1793\u17d2\u1793\u1791\u17c5\u1787\u17b6\u17af\u1780\u179f\u17b6\u179a</translation>\n     </message>\n     <message>\n         <source>&amp;Export</source>\n-        <translation>&amp;\u1793\u17b6\u17c6\u1785\u17c1\u1789</translation>\n+        <translation>\u1793\u17b6\u17c6\u1785\u17c1\u1789</translation>\n     </message>\n     <message>\n         <source>&amp;Delete</source>\n-        <translation>&amp;\u179b\u17bb\u1794</translation>\n+        <translation>\u179b\u17bb\u1794</translation>\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f\u17a2\u17b6\u179f\u17d2\u179a\u1799\u178a\u17be\u1798\u17d2\u1794\u17b8\u1795\u17d2\u1789\u17be\u179a\u1780\u17b6\u1780\u1787\u17b6\u1798\u17bd\u1799</translation>\n+        <translation>\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17be\u1798\u17d2\u1794\u17b8\u1795\u17d2\u1789\u17be\u1780\u17b6\u1780\u17cb\u1791\u17c5</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n-        <translation>\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f\u17a2\u17b6\u179f\u17d2\u179a\u1799\u178a\u17be\u1798\u17d2\u1794\u17b8\u1791\u1791\u17bd\u179b\u1780\u17b6\u1780\u17cb\u1787\u17b6\u1798\u17bd\u1799\n-</translation>\n+        <translation>\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17be\u1798\u17d2\u1794\u17b8\u1791\u1791\u17bd\u179b\u1799\u1780\u1780\u17b6\u1780\u17cb\u1787\u17b6\u1798\u17bd\u1799</translation>\n     </message>\n     <message>\n         <source>C&amp;hoose</source>\n-        <translation>&amp;\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f</translation>\n+        <translation>\u1787\u17d2\u179a\u17be\u179f\u179a\u17be\u179f</translation>\n     </message>\n     <message>\n         <source>Sending addresses</source>\n-        <translation>\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1795\u17d2\u1789\u17be</translation>\n+        <translation>\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u1795\u17d2\u1789\u17be</translation>\n     </message>\n     <message>\n         <source>Receiving addresses</source>\n-        <translation>\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1791\u1791\u17bd\u17bd\u179b</translation>\n+        <translation>\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u1791\u1791\u17bd\u179b</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u1791\u17b6\u17c6\u1784\u1793\u17c1\u17c7\u200b\u1782\u17ba\u1787\u17b6\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793 Bitcoin \u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb\u1792\u17d2\u179c\u17be\u1780\u17b6\u179a\u1795\u17d2\u1789\u17be\u1780\u17b6\u179a\u1794\u1784\u17cb\u1794\u17d2\u179a\u17b6\u1780\u17cb\u17d4 \u178f\u17c2\u1784\u178f\u17c2\u1796\u17b7\u1793\u17b7\u178f\u17d2\u1799\u1798\u17be\u179b\u1785\u17c6\u1793\u17bd\u1793\u1794\u17d2\u179a\u17b6\u1780\u17cb \u1793\u17b7\u1784\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u178a\u17c2\u179b\u1791\u1791\u17bd\u179b \u1798\u17bb\u1793\u1796\u17c1\u179b\u1795\u17d2\u1789\u17be\u1794\u17d2\u179a\u17b6\u1780\u17cb\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>\u1791\u17b6\u17c6\u1784\u1793\u17c1\u17c7\u200b\u1782\u17ba\u1787\u17b6\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793 Bitcoin \u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb\u1792\u17d2\u179c\u17be\u1780\u17b6\u179a\u1791\u1791\u17bd\u179b\u1794\u1784\u17cb\u1794\u17d2\u179a\u17b6\u1780\u17cb\u17d4 \u1794\u17d2\u179a\u17be\u1794\u17ca\u17bc\u178f\u17bb\u1784 \"\u1794\u1784\u17d2\u1780\u17be\u178f\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1791\u1791\u17bd\u179b\u1790\u17d2\u1798\u17b8\" \u179f\u17d2\u1790\u17b7\u178f\u1780\u17d2\u1793\u17bb\u1784\u1795\u17d2\u1791\u17b6\u17c6\u1784\u1791\u1791\u17bd\u179b \u178a\u17be\u1798\u17d2\u1794\u17b8\u1794\u1784\u17d2\u1780\u17be\u178f\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1790\u17d2\u1798\u17b8\u1798\u17bd\u1799\u17d4</translation>\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>&amp;\u1785\u1798\u17d2\u179b\u1784\u200b\u17a2\u17b6\u179f\u17d2\u179a\u1799\u178a\u17d2\u178b\u17b6\u1793</translation>\n+        <translation>\u1785\u1798\u17d2\u179b\u1784\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793</translation>\n     </message>\n     <message>\n         <source>Copy &amp;Label</source>\n-        <translation>\u1785\u1798\u17d2\u179b\u1784&amp;\u17a1\u17b6\u1794\u17c2\u179b</translation>\n+        <translation>\u1785\u1798\u17d2\u179b\u1784 \u179f\u17d2\u179b\u17b6\u1780</translation>\n     </message>\n     <message>\n         <source>&amp;Edit</source>\n-        <translation>&amp;\u1780\u17c2</translation>\n+        <translation>\u1780\u17c2\u179f\u1798\u17d2\u179a\u17bd\u179b</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u1793\u17b6\u17c6\u1785\u17c1\u1789\u1793\u17bc\u179c\u1794\u1789\u17d2\u1787\u17b8\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u17af\u1780\u179f\u17b6\u179a\u1794\u17c6\u1794\u17c2\u1780\u178a\u17c4\u1799\u1780\u17d2\u1794\u17c0\u179f (*.csv)</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n-        <translation>\u1794\u179a\u17b6\u1787\u17d0\u1799\u200b\u1780\u17b6\u179a\u1794\u1789\u17d2\u1787\u17bc\u1793\u1785\u17c1\u1789</translation>\n+        <translation>\u1780\u17b6\u179a\u1793\u17b6\u17c6\u1785\u17c1\u1789\u1794\u17b6\u1793\u1794\u179a\u17b6\u1787\u17d0\u1799</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u1791\u17b6\u17c6\u1784\u1793\u17c1\u17c7\u1787\u17b6\u1780\u17c6\u17a0\u17bb\u179f\u1796\u17d2\u1799\u17b6\u1799\u17b6\u1798 \u178a\u17be\u1798\u17d2\u1794\u17b8\u179a\u1780\u17d2\u179f\u17b6\u1791\u17bb\u1780\u1794\u1789\u17d2\u1787\u17b8\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793\u1791\u17c5 %1 \u17d4 \u179f\u17bc\u1798\u1796\u17d2\u1799\u17b6\u1799\u17b6\u1798\u1798\u17d2\u178a\u1784\u1791\u17c0\u178f\u17d4</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n         <source>Label</source>\n-        <translation>\u17a1\u17b6\u1794\u17c2\u179b</translation>\n+        <translation>\u179f\u17d2\u179b\u17b6\u1780</translation>\n     </message>\n     <message>\n         <source>Address</source>\n         <translation>\u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793</translation>\n     </message>\n     <message>\n         <source>(no label)</source>\n-        <translation>(\u1782\u17d2\u1798\u17b6\u1793\u200b\u17a1\u17b6\u1794\u17c2\u179b)</translation>\n+        <translation>(\u1782\u17d2\u1798\u17b6\u1793\u200b\u179f\u17d2\u179b\u17b6\u1780)</translation>\n     </message>\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>\u1780\u17b6\u179a\u17a0\u17c5\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n+    </message>\n     <message>\n         <source>Enter passphrase</source>\n-        <translation>\u1794\u1789\u17d2\u1785\u17bc\u179b\u1796\u17b6\u1780\u17d2\u1799\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n+        <translation>\u1794\u1789\u17d2\u1785\u17bc\u179b\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n     </message>\n     <message>\n         <source>New passphrase</source>\n-        <translation>\u1796\u17b6\u1780\u17d2\u1799\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1790\u17d2\u1798\u17b8</translation>\n+        <translation>\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1790\u17d2\u1798\u17b8</translation>\n     </message>\n     <message>\n         <source>Repeat new passphrase</source>\n-        <translation>\u179c\u17b6\u1799\u1796\u17b6\u1780\u17d2\u1799\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1798\u17d2\u178a\u1784\u1791\u17c0\u178f</translation>\n+        <translation>\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1790\u17d2\u1793\u17b8\u1798\u17d2\u178a\u1784\u1791\u17c0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n     </message>\n     <message>\n         <source>Encrypt wallet</source>\n-        <translation>\u1780\u17b6\u1794\u17bc\u1794\u200b\u17a2\u17c2\u1793\u1780\u17d2\u179a\u17b8\u1796</translation>\n+        <translation>\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u200b\u1785\u179b\u17d0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>\u1794\u17d2\u179a\u178f\u17b7\u1794\u178f\u17d2\u178f\u17b7\u1780\u17b6\u179a\u1793\u17c1\u17c7 \u178f\u17d2\u179a\u17bc\u179c\u1780\u17b6\u179a\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780 \u178a\u17be\u1798\u17d2\u1794\u17b8\u178a\u17c4\u17c7\u179f\u17c4\u179a\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u17d4</translation>\n     </message>\n     <message>\n         <source>Unlock wallet</source>\n-        <translation>\u178a\u17c4\u17c7\u179f\u17c4\u179a\u1780\u17b6\u1794\u17bc\u1794\u179b\u17bb\u1799</translation>\n+        <translation>\u178a\u17c4\u17c7\u179f\u17c4\u179a\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>\u1794\u17d2\u179a\u178f\u17b7\u1794\u178f\u17d2\u178f\u17b7\u1780\u17b6\u179a\u1793\u17c1\u17c7 \u178f\u17d2\u179a\u17bc\u179c\u1780\u17b6\u179a\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780 \u178a\u17be\u1798\u17d2\u1794\u17b8\u178c\u17b7\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u17d4</translation>\n     </message>\n     <message>\n         <source>Decrypt wallet</source>\n-        <translation>\u1780\u17b6\u1794\u17bc\u1794\u200b\u200b \u178c\u17b8\u1780\u17d2\u179a\u17b8\u1796</translation>\n+        <translation>\u178c\u17b7\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n     </message>\n     <message>\n         <source>Change passphrase</source>\n-        <translation>\u1794\u17d2\u178a\u17bc\u179a\u1796\u17b6\u1780\u17d2\u1799\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n+        <translation>\u1795\u17d2\u179b\u17b6\u179f\u17cb\u1794\u17d2\u178a\u17bc\u179a\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb</translation>\n     </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n-        <translation>\u1794\u1789\u17d2\u1787\u17b6\u1780\u17cb\u1780\u17b6\u179a\u179f\u17c6\u179a\u17c1\u1785\u1785\u17b7\u178f\u17d2\u178f\u200b\u200b\u1780\u17b6\u1794\u17bc\u1794\u200b\u200b\u1780\u17b6\u179a\u200b\u17a2\u17c2\u1793\u1780\u17d2\u179a\u17b8\u1796</translation>\n+        <translation>\u1794\u1789\u17d2\u1787\u17b6\u1780\u17cb\u1780\u17b6\u179a\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>\u1780\u17b6\u179a\u1796\u17d2\u179a\u1798\u17b6\u1793\u17d6 \u1794\u17d2\u179a\u179f\u17b7\u1793\u1794\u17be\u17a2\u17d2\u1793\u1780\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780 \u17a0\u17be\u1799\u17a2\u17d2\u1793\u1780\u1797\u17d2\u179b\u17c1\u1785\u1794\u17b6\u178f\u17cb\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb \u1793\u17c4\u17c7\u17a2\u17d2\u1793\u1780\u1793\u17b7\u1784 &lt;b&gt;\u1794\u17b6\u178f\u17cb\u1794\u1784\u17cb BITCOINS \u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u1791\u17b6\u17c6\u1784\u17a2\u179f\u17cb&lt;/b&gt;!</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>\u178f\u17be\u17a2\u17d2\u1793\u1780\u1796\u17b7\u178f\u1787\u17b6\u1785\u1784\u17cb\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u17ac?</translation>\n     </message>\n     <message>\n         <source>Wallet encrypted</source>\n-        <translation>\u1780\u17b6\u1794\u17bc\u1794 \u178a\u17c2\u179b\u17a2\u17c2\u1793\u1780\u17d2\u179a\u17b8\u1796</translation>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u178a\u17c2\u179b\u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794</translation>\n+    </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u1794\u1789\u17d2\u1785\u17bc\u179b\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u179f\u17c6\u179a\u17b6\u1794\u17cb\u1780\u17b6\u1794\u17bc\u1794\u17d4 \u179f\u17bc\u1798\u1794\u17d2\u179a\u17be\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1796\u17b8\u17e1\u17e0 \u178f\u17bd\u179a\u17ac\u1785\u17d2\u179a\u17be\u1793\u1787\u17b6\u1784\u1793\u17c1\u17c7, \u17ac \u17e8\u1796\u17b6\u1780\u17d2\u1799\u17ac\u1785\u17d2\u179a\u17be\u1793\u1787\u17b6\u1784\u1793\u17c1\u17c7</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u179c\u17b6\u1799\u1794\u1789\u17d2\u1785\u17bc\u179b\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1785\u17b6\u179f\u17cb \u1793\u17b7\u1784\u1783\u17d2\u179b\u17b6\u179f\u179f\u1798\u17d2\u179b\u17b6\u178f\u17cb\u1790\u17d2\u1798\u17b8 \u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u178a\u17c2\u179b\u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780 \u1787\u17b7\u178f\u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u17a0\u17be\u1799\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780 \u17a5\u17a1\u17bc\u179c\u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1794\u179a\u17b6\u1787\u17d0\u1799</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u1780\u17b6\u179a\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u1794\u17b6\u1793\u1794\u179a\u17b6\u1787\u17d0\u1799\u178a\u17c4\u1799\u179f\u17b6\u179a\u1780\u17c6\u17a0\u17bb\u179f\u1781\u17b6\u1784\u1780\u17d2\u1793\u17bb\u1784\u17d4 \u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u179a\u1794\u179f\u17cb\u17a2\u17d2\u1793\u1780\u1798\u17b7\u1793\u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1791\u17c1\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb \u178a\u17c2\u179b\u1794\u17b6\u1793\u1795\u17d2\u1782\u178f\u17cb\u1795\u17d2\u1782\u1784\u17cb\u1798\u17b7\u1793\u178f\u17d2\u179a\u17bc\u179c\u1782\u17d2\u1793\u17b6\u1791\u17c1\u17d4</translation>\n     </message>\n     <message>\n         <source>Wallet unlock failed</source>\n-        <translation>\u1794\u179a\u17b6\u1787\u17d0\u1799\u178a\u17c4\u17c7\u179f\u17c4\u179a\u1780\u17b6\u1794\u17bc\u1794</translation>\n+        <translation>\u1794\u179a\u17b6\u1787\u17d0\u1799\u178a\u17c4\u17c7\u179f\u17c4\u179a\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb \u178a\u17c2\u179b\u1794\u17b6\u1793\u1794\u1789\u17d2\u1785\u17bc\u179b\u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb\u1780\u17b6\u179a\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u1782\u17ba\u1798\u17b7\u1793\u178f\u17d2\u179a\u17b9\u1798\u178f\u17d2\u179a\u17bc\u179c\u1791\u17c1\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u1794\u17b6\u1793\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1794\u179a\u17b6\u1787\u17d0\u1799</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb\u1793\u17c3\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u1795\u17d2\u179b\u17b6\u179f\u17cb\u1794\u17d2\u178f\u17bc\u179a\u178a\u17c4\u1799\u1787\u17c4\u1782\u1787\u17d0\u1799\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u1780\u17b6\u179a\u1796\u17d2\u179a\u1798\u17b6\u1793\u17d6 \u1783\u17b8 Caps Lock \u1782\u17ba\u1794\u17be\u1780!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmask</translation>\n+    </message>\n     <message>\n         <source>Banned Until</source>\n-        <translation>\u1795\u17d2\u17a2\u17b6\u1780\u178a\u179b\u17cb</translation>\n+        <translation>\u1794\u17b6\u1793\u17a0\u17b6\u1798\u1783\u17b6\u178f\u17cb\u179a\u17a0\u17bc\u178f\u178a\u179b\u17cb</translation>\n     </message>\n </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>\u179f\u17ca\u17b8\u1789\u17c9\u17c1\u179f\u17b6\u179a...</translation>\n+    </message>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>\u1780\u17c6\u1796\u17bb\u1784\u1792\u17d2\u179c\u17be\u179f\u1798\u1780\u17b6\u179b\u1780\u1798\u17d2\u1798 \u1787\u17b6\u1798\u17bd\u1799\u1794\u178e\u17d2\u178a\u17b6\u1789...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Overview</source>\n+        <translation>\u1791\u17b7\u178a\u17d2\u178b\u1797\u17b6\u1796\u1791\u17bc\u1791\u17c5</translation>\n+    </message>\n+    <message>\n+        <source>Show general overview of wallet</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789\u1791\u17b7\u178a\u17d2\u178b\u1797\u17b6\u1796\u1791\u17bc\u1791\u17c5\u1793\u17c3\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Transactions</source>\n+        <translation>\u1794\u17d2\u179a\u178f\u17b7\u1794\u178f\u17d2\u178f\u17b7\u1780\u17b6\u179a</translation>\n+    </message>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>\u179a\u1780\u1798\u17be\u179b\u1794\u17d2\u179a\u179c\u178f\u17d2\u178f\u17b7\u1794\u17d2\u179a\u178f\u17b7\u1794\u178f\u17d2\u178f\u17b7\u1780\u17b6\u179a</translation>\n+    </message>\n+    <message>\n+        <source>E&amp;xit</source>\n+        <translation>\u1785\u17b6\u1780\u1785\u17c1\u1789</translation>\n+    </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>\u1794\u17c4\u17c7\u1794\u1784\u17cb\u1780\u1798\u17d2\u1798\u179c\u17b7\u1792\u17b8</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>\u17a2\u17c6\u1796\u17b8 %1</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789\u1796\u178f\u17cc\u1798\u17b6\u1793\u17a2\u17c6\u1796\u17b8 %1</translation>\n+    </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>\u17a2\u17c6\u1796\u17b8 Qt</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Qt</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789\u1796\u178f\u17cc\u1798\u17b6\u1793\u17a2\u17c6\u1796\u17b8 Qt</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>\u1787\u1798\u17d2\u179a\u17be\u179f...</translation>\n+    </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>\u1780\u17c2\u1794\u17d2\u179a\u17c2\u1787\u1798\u17d2\u179a\u17be\u179f\u1780\u17c6\u178e\u178f\u17cb\u179a\u1785\u1793\u17b6\u179f\u1798\u17d2\u1796\u17d0\u1793\u17d2\u1792\u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb %1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u200b\u1785\u179b\u17d0\u178f...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Backup Wallet...</source>\n+        <translation>\u1794\u1798\u17d2\u179a\u17bb\u1784\u1791\u17bb\u1780\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>\u1795\u17d2\u179b\u17b6\u179f\u17cb\u1794\u17d2\u178a\u17bc\u179a\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb...</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>\u1794\u17be\u1780 URL...</translation>\n+    </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\u1794\u1784\u17d2\u1780\u17be\u178f\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\u1794\u1784\u17d2\u1780\u17be\u178f\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u1790\u17d2\u1798\u17b8</translation>\n+    </message>\n+    <message>\n+        <source>Wallet:</source>\n+        <translation>\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f\u17d6</translation>\n+    </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>\u1785\u17bb\u1785\u178a\u17be\u1798\u17d2\u1794\u17b8\u1795\u17d2\u178a\u17b6\u1785\u17cb\u179f\u1780\u1798\u17d2\u1798\u1797\u17b6\u1796\u1794\u178e\u17d2\u178a\u17b6\u1789\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>\u179f\u1780\u1798\u17d2\u1798\u1797\u17b6\u1796\u1794\u178e\u17d2\u178a\u17b6\u1789\u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793\u1795\u17d2\u178a\u17b6\u1785\u17cb\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>\u1785\u17bb\u1785\u178a\u17be\u1798\u17d2\u1794\u17b8\u1797\u17d2\u1787\u17b6\u1794\u17cb\u179f\u1780\u1798\u17d2\u1798\u1797\u17b6\u1796\u1793\u17c3\u1794\u178e\u17d2\u178a\u17b6\u1789\u17a1\u17be\u1784\u179c\u17b7\u1789\u17d4</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>\u1780\u17c6\u1796\u17bb\u1784\u179f\u1798\u1780\u17b6\u179b \u1794\u178b\u1798\u1780\u1790\u17b6 (%1%)...</translation>\n+    </message>\n+    <message>\n+        <source>Reindexing blocks on disk...</source>\n+        <translation>\u1780\u17c6\u1796\u17bb\u1784\u1792\u17d2\u1785\u17be\u179f\u1793\u17d2\u1791\u179f\u17d2\u179f\u1793\u17cd\u1794\u17d2\u179b\u17bb\u1780\u17a1\u17be\u1784\u179c\u17b7\u1789\u179b\u17be\u1790\u17b6\u179f...</translation>\n+    </message>\n+    <message>\n+        <source>Proxy is &lt;b&gt;enabled&lt;/b&gt;: %1</source>\n+        <translation>\u1794\u17d2\u179a\u17bc\u1780\u179f\u17ca\u17b8 \u178f\u17d2\u179a\u17bc\u179c\u1794\u17b6\u1793 &lt;b&gt;\u17a2\u1793\u17bb\u1789\u17d2\u1789\u17b6\u178f&lt;/b&gt;\u17d6 %1</translation>\n+    </message>\n     <message>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>\u1795\u17d2\u1789\u17be\u1780\u17b6\u1780\u17cb\u1791\u17c5\u1780\u17b6\u1793\u17cb \u17a2\u17b6\u179f\u1799\u178a\u17d2\u178b\u17b6\u1793 Bitcoin \u1798\u17bd\u1799</translation>\n     </message>\n+    <message>\n+        <source>Backup wallet to another location</source>\n+        <translation>\u1794\u1798\u17d2\u179a\u17bb\u1780\u1791\u17bb\u1780\u1793\u17bc\u179c\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f \u1791\u17c5\u1791\u17b8\u178f\u17b6\u17c6\u1784\u1798\u17bd\u1799\u1795\u17d2\u179f\u17c1\u1784\u1791\u17c0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>Change the passphrase used for wallet encryption</source>\n+        <translation>\u1795\u17d2\u179b\u17b6\u179f\u17cb\u1794\u17d2\u178a\u17bc\u179a\u1783\u17d2\u179b\u17b6\u179f\u1798\u17d2\u1784\u17b6\u178f\u17cb \u178a\u17c2\u179b\u1794\u17b6\u1793\u1794\u17d2\u179a\u17be\u179f\u1798\u17d2\u179a\u17b6\u1794\u17cb\u1780\u17b6\u179a\u17a2\u17ca\u17b7\u1793\u1782\u17d2\u179a\u17b8\u1794\u1780\u17b6\u1794\u17bc\u1794\u1785\u179b\u17d0\u178f</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Verify message...</source>\n+        <translation>\u1795\u17d2\u1791\u17c0\u1784\u1795\u17d2\u1791\u17b6\u178f\u17cb\u179f\u17b6\u179a...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>\u1795\u17d2\u1784\u17be</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receive</source>\n+        <translation>\u1791\u1791\u17bd\u179b</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789/\u179b\u17b6\u1780\u17cb\u1794\u17b6\u17c6\u1784</translation>\n+    </message>\n+    <message>\n+        <source>Show or hide the main Window</source>\n+        <translation>\u1794\u1784\u17d2\u17a0\u17b6\u1789 \u179a\u17ba\u179b\u17b6\u1780\u17cb\u1795\u17d2\u1791\u17b6\u17c6\u1784\u179c\u17b8\u1793\u178a\u17bc\u178a\u17be\u1798</translation>\n+    </message>\n+    <message>\n+        <source>&amp;File</source>\n+        <translation>\u17af\u1780\u179f\u17b6\u179a</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>\u1780\u17b6\u179a\u1780\u17c6\u178e\u178f\u17cb</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1794\u1789\u17d2\u17a0\u17b6</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n@@ -163,6 +410,14 @@\n     </context>\n <context>\n     <name>CreateWalletDialog</name>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\u1794\u1784\u17d2\u1780\u17be\u178f\u1780\u17b6\u1794\u17bc\u1794</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>\u1788\u17d2\u1798\u17c4\u17c7\u1780\u17b6\u1794\u17bc\u1794</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -175,6 +430,18 @@\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Welcome</source>\n+        <translation>\u179f\u17bc\u1798\u179f\u17d2\u179c\u17b6\u1782\u1798\u1793\u17cd</translation>\n+    </message>\n+    <message>\n+        <source>Bitcoin</source>\n+        <translation>Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1794\u1789\u17d2\u17a0\u17b6</translation>\n+    </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n@@ -187,6 +454,10 @@\n     </context>\n <context>\n     <name>OptionsDialog</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1794\u1789\u17d2\u17a0\u17b6</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n@@ -273,6 +544,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u17af\u1780\u179f\u17b6\u179a\u1794\u17c6\u1794\u17c2\u1780\u178a\u17c4\u1799\u1780\u17d2\u1794\u17c0\u179f (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u17a1\u17b6\u1794\u17c2\u179b</translation>"
      },
      {
        "sha": "b79d53a74af8b9c06ae72ef44d464434c57788f0",
        "filename": "src/qt/locale/bitcoin_ko.ts",
        "status": "modified",
        "additions": 203,
        "deletions": 3,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ko.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ko.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ko.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -187,6 +187,22 @@\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n         <translation>\uc9c0\uac11\uc758 \uc774\uc804 \ube44\ubc00\ubc88\ud638\uc640 \uc0c8\ub85c\uc6b4 \ube44\ubc00\ubc88\ud638\ub97c \uc785\ub825\ud558\uc138\uc694.</translation>\n     </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\uc9c0\uac11\uc744 \uc554\ud638\ud654 \ud574\ub3c4 \ucef4\ud4e8\ud130\uc5d0 \ubc14\uc774\ub7ec\uc2a4\uac00 \uc788\uc744\uc2dc \uc548\uc804\ud558\uae30 \uc54a\ub2e4\ub294 \uac83\uc744 \ucc38\uace0\ud558\uc138\uc694.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\uc554\ud638\ud654\ud560 \uc9c0\uac11</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\uc9c0\uac11\uc774 \ubc14\ub85c \uc554\ud638\ud654 \ub429\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\uc9c0\uac11\uc774 \uc554\ud638\ud654 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>\uc911\uc694: \ubcf8\uc778 \uc9c0\uac11 \ud30c\uc77c\uc5d0\uc11c \ub9cc\ub4e0 \uc608\uc804 \ubc31\uc5c5\ub4e4\uc740 \uc0c8\ub85c \uc0dd\uc131\ud55c \uc554\ud638\ud654\ub41c \uc9c0\uac11 \ud30c\uc77c\ub85c \uad50\uccb4\ud574\uc57c \ud569\ub2c8\ub2e4. \ubcf4\uc548\uc0c1 \uc774\uc720\ub85c, \uc0c8 \uc554\ud638\ud654\ub41c \uc9c0\uac11\uc744 \uc0ac\uc6a9\ud558\uac8c \ub418\uba74 \uc774\uc804\uc5d0 \uc554\ud638\ud654\ud558\uc9c0 \uc54a\uc740 \uc9c0\uac11 \ud30c\uc77c\uc758 \ubc31\uc5c5\uc740 \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uac8c \ub429\ub2c8\ub2e4.</translation>\n@@ -309,6 +325,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>&amp;URI \uc5f4\uae30...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>\uc9c0\uac11 \uc0dd\uc131\ud558\uae30...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>\uc0c8\ub85c\uc6b4 \uc9c0\uac11 \uc0dd\uc131\ud558\uae30</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>\uc9c0\uac11:</translation>\n@@ -457,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>\ucd5c\uc2e0\uc758</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\ub178\ub4dc \ucc3d</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\ub178\ub4dc \ub514\ubc84\uae45 \ubc0f \uc9c4\ub2e8 \ucf58\uc194 \uc5f4\uae30 </translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>\ubcf4\ub0b4\ub294 \uc8fc\uc18c(&amp;S)</translation>\n@@ -465,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>\ubc1b\ub294 \uc8fc\uc18c(&amp;R)</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>bitcoin: URI \uc5f4\uae30</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\uc9c0\uac11 \uc5f4\uae30</translation>\n@@ -525,6 +561,10 @@\n         <source>Error: %1</source>\n         <translation>\uc624\ub958: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>\uacbd\uace0: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -747,10 +787,50 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>\uc9c0\uac11 &lt;b&gt;%1&lt;/b&gt; \uc0dd\uc131\uc911...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>\uc9c0\uac11 \uc0dd\uc131\ud558\uae30 \uc2e4\ud328</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>\uc9c0\uac11 \uc0dd\uc131 \uacbd\uace0</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\uc9c0\uac11 \uc0dd\uc131\ud558\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>\uc9c0\uac11 \uc774\ub984</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>\uc9c0\uac11 \uc554\ud638\ud654\ud558\uae30. \ud574\ub2f9 \uc9c0\uac11\uc740 \ub2f9\uc2e0\uc774 \uc124\uc815\ud55c \ubb38\uc790\uc5f4 \ube44\ubc00\ubc88\ud638\ub85c \uc554\ud638\ud654\ub420 \uac81\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>\uc9c0\uac11 \uc554\ud638\ud654</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>\uac1c\uc778\ud0a4 \ube44\ud65c\uc131\ud654 \ud558\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>\ube48 \uc9c0\uac11 \ub9cc\ub4e4\uae30</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>\uc0dd\uc131\ud558\uae30</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -914,7 +994,11 @@\n         <source>(of %n GB needed)</source>\n         <translation><numerusform>(%n GB\uac00 \ud544\uc694)</numerusform></translation>\n     </message>\n-    </context>\n+    <message numerus=\"yes\">\n+        <source>(%n GB needed for full chain)</source>\n+        <translation><numerusform>(Full \uccb4\uc778\uc774 \ub418\ub824\uba74 %n GB \uac00 \ud544\uc694\ud569\ub2c8\ub2e4)</numerusform></translation>\n+    </message>\n+</context>\n <context>\n     <name>ModalOverlay</name>\n     <message>\n@@ -961,20 +1045,36 @@\n         <source>Hide</source>\n         <translation>\uc228\uae30\uae30</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>\uc54c \uc218 \uc5c6\uc74c. \ud5e4\ub354 \ub3d9\uae30\ud654 \uc911(%1,%2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>\ube44\ud2b8\ucf54\uc778 URI \uc5f4\uae30</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>\uc9c0\uac11 \uc5f4\uae30 \uc2e4\ud328</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>\uc9c0\uac11 \uc5f4\uae30 \uacbd\uace0</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>\uae30\ubcf8 \uc9c0\uac11</translation>\n@@ -1352,6 +1452,18 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://\"\uc740 \uc798\ubabb\ub41c URI\uc785\ub2c8\ub2e4. 'bitcoin:'\uc744 \uc0ac\uc6a9\ud558\uc2ed\uc2dc\uc624.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>BIP70\uc744 \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc544\uc11c \uc9c0\ubd88 \uc694\uccad\uc744 \ucc98\ub9ac\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>BIP70\uc758 \ubcf4\uc548\uc801 \uacb0\ud568 \ub54c\ubb38\uc5d0 \uc0c1\uc810\uc5d0 \ubd88\ubb38\ud558\uace0 \"\uc9c0\uac11\uc744 \ubc14\uafb8\ub77c\"\ub77c\ub294 \uad8c\uace0 \ub610\ub294 \uc9c0\uc2dc\ub294 \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0 \ubb34\uc2dc\ud558\ub294 \ubc29\ubc95\uc744 \uac15\ub825\ud558\uac8c \uad8c\uc7a5\ud569\ub2c8\ub2e4.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>\ub9cc\uc57d \uc774 \uc624\ub958 \uba54\uc2dc\uc9c0\uac00 \ubcf4\uc778\ub2e4\uba74, \uc0c1\uc810\uc5d0 BIP21\uc774 \ud638\ud658\ub418\ub294 URI\ub97c \uc81c\uacf5\ud574\ub2ec\ub77c\uace0 \uc694\uccad\ud574\uc8fc\uc138\uc694.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>\uc798\ubabb\ub41c \uc9c0\ubd88 \uc8fc\uc18c %1</translation>\n@@ -1513,6 +1625,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>URI\ub97c QR \ucf54\ub4dc\ub85c \uc778\ucf54\ub529\ud558\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>QR \ucf54\ub4dc\ub97c \uc9c0\uc6d0\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>QR\ucf54\ub4dc \uc800\uc7a5</translation>\n@@ -1656,6 +1772,10 @@\n         <source>User Agent</source>\n         <translation>\uc720\uc800 \uc5d0\uc774\uc804\ud2b8</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\ub178\ub4dc \ucc3d</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>%1 \ub514\ubc84\uadf8 \ub85c\uadf8\ud30c\uc77c\uc744 \ud604\uc7ac \ub370\uc774\ud130 \ud3f4\ub354\uc5d0\uc11c \uc5fd\ub2c8\ub2e4. \uc6a9\ub7c9\uc774 \ud070 \ub85c\uadf8 \ud30c\uc77c\ub4e4\uc740 \uba87 \ucd08\uac00 \uac78\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n@@ -1867,6 +1987,10 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>\uc694\uccad\ud560 \uae08\uc561 \uc785\ub825\uce78\uc73c\ub85c \uc120\ud0dd \uc0ac\ud56d\uc785\ub2c8\ub2e4. \ube48 \uce78\uc73c\ub85c \ub450\uac70\ub098 \ud2b9\uc815 \uae08\uc561\uc774 \ud544\uc694\ud558\uc9c0 \uc54a\ub294 \uacbd\uc6b0 0\uc744 \uc785\ub825\ud558\uc138\uc694.</translation>\n     </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;\uc0c8 \ubc1b\uc744 \uc8fc\uc18c \uc0dd\uc131\ud558\uae30</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>\uc591\uc2dd\uc758 \ubaa8\ub4e0 \ud544\ub4dc\ub97c \uc9c0\uc6c1\ub2c8\ub2e4.</translation>\n@@ -2116,6 +2240,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Dust:</source>\n         <translation>\ub354\uc2a4\ud2b8:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>\uac70\ub798 \uc218\uc218\ub8cc \uc124\uc815 \uc228\uae30\uae30</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>\uac70\ub798\ub7c9\uc774 \ube14\ub85d\uc5d0 \ub0a8\uc740 \uacf5\uac04\ubcf4\ub2e4 \uc801\uc740 \uacbd\uc6b0\uc5d0\ub294 \ucc44\uad74\uc790\ub098 \uc911\uacc4 \ub178\ub4dc\ub4e4\uc774 \ucd5c\uc18c \uc218\uc218\ub8cc\ub97c \ud5c8\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd5c\uc18c \uc218\uc218\ub8cc\ub9cc \uc9c0\ubd88\ud558\ub294\uac74 \uad1c\ucc2e\uc9c0\ub9cc, \ub124\ud2b8\uc6cc\ud06c\uac00 \ucc98\ub9ac\ud560 \uc218 \uc788\ub294 \uc6a9\ub7c9\uc744 \ub118\ub294 \ube44\ud2b8\ucf54\uc778 \uac70\ub798\uac00 \uc788\uc744 \uacbd\uc6b0\uc5d0\ub294 \uc774 \uac70\ub798\uac00 \uc2b9\uc778\uc774 \uc548\ub420 \uc218 \uc788\ub2e4\ub294 \uc810\uc744 \uc720\uc758\ud558\uc138\uc694.</translation>\n@@ -2184,6 +2312,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1(%2 \ube14\ub85d)</translation>\n     </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation>%1 \uc9c0\uac11\uc5d0\uc11c</translation>\n+    </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>%1\uc744(\ub97c) %2(\uc73c)\ub85c</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1\uc744(\ub97c) %2(\uc73c)\ub85c</translation>\n@@ -2216,10 +2352,30 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Total Amount</source>\n         <translation>\ucd1d\uc561</translation>\n     </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>\uc218\ub839\uc778 \ubaa9\ub85d\uc744 \uac80\ud1a0\ud558\ub824\uba74 \"\uac70\ub798 \uc138\ubd80 \ub0b4\uc5ed \ubcf4\uae30\" \ub97c \ud074\ub9ad\ud558\uc2ed\uc2dc\uc624</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>\ucf54\uc778 \uc804\uc1a1\uc744 \ud655\uc778</translation>\n     </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>PSBT\ub97c \ud074\ub9bd\ubcf4\ub4dc\uc5d0 \ubcf5\uc0ac</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>\ubcf4\ub0b4\uae30</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \ubcf5\uc0ac\ub428</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>\uc870\ud68c\uc804\uc6a9 \uc794\uc561:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\uc218\ub839\uc778 \uc8fc\uc18c\uac00 \uc815\ud655\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc7ac\ud655\uc778 \ubc14\ub78d\ub2c8\ub2e4</translation>\n@@ -2473,6 +2629,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Wallet unlock was cancelled.</source>\n         <translation>\uc9c0\uac11 \uc7a0\uae08 \ud574\uc81c\ub97c \ucde8\uc18c\ud588\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>\uc624\ub958 \uc5c6\uc74c</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>\uc785\ub825\ud55c \uc8fc\uc18c\uc5d0 \ub300\ud55c \uac1c\uc778\ud0a4\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n@@ -2647,6 +2807,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Output index</source>\n         <translation>\ucd9c\ub825 \uc778\ub371\uc2a4</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(\uc778\uc99d\uc11c\uac00 \ud655\uc778\ub418\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>\uc0c1\uc810</translation>\n@@ -2970,6 +3134,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Close wallet</source>\n         <translation>\uc9c0\uac11 \ub2eb\uae30</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>\uc815\ub9d0\ub85c \uc9c0\uac11 &lt;i&gt;%1&lt;/i&gt; \uc744 \ub2eb\uaca0\uc2b5\ub2c8\uae4c?</translation>\n+    </message>\n     <message>\n         <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n         <translation>\ube14\ub85d\ucd95\uc18c\ub97c \ud558\uace0 \uc9c0\uac11\uc744 \ub108\ubb34 \uc624\ub7ab\ub3d9\uc548 \ub2eb\uc73c\uba74 \uccb4\uc778 \uc804\uccb4\ub97c \ub2e4\uc2dc \ub3d9\uae30\ud654\ud574\uc57c \ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</translation>\n@@ -3016,6 +3184,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm fee bump</source>\n         <translation>\uc218\uc218\ub8cc \uc0c1\ud5a5 \uc2b9\uc778</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \ubcf5\uc0ac\ub428</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>\uac70\ub798\uc5d0 \uc11c\uba85 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.</translation>\n@@ -3182,6 +3354,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Corrupted block database detected</source>\n         <translation>\uc190\uc0c1\ub41c \ube14\ub85d \ub370\uc774\ud130\ubca0\uc774\uc2a4\uac00 \uac10\uc9c0\ub418\uc5c8\uc2b5\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>asmap file %s \uc744/\ub97c \ucc3e\uc744 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>asmap file %s \uc744/\ub97c \ud30c\uc2f1\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\ube14\ub85d \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub97c \ub2e4\uc2dc \uc0dd\uc131\ud558\uc2dc\uaca0\uc2b5\ub2c8\uae4c?</translation>\n@@ -3238,6 +3418,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Initialization sanity check failed. %s is shutting down.</source>\n         <translation>\ubb34\uacb0\uc131 \ud655\uc778 \ucd08\uae30\ud654\uac00 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. %s\uac00 \uc885\ub8cc\ub429\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>Invalid P2P permission: '%s'</source>\n+        <translation>\uc798\ubabb\ub41c P2P \uad8c\ud55c: '%s'</translation>\n+    </message>\n     <message>\n         <source>Invalid amount for -%s=&lt;amount&gt;: '%s'</source>\n         <translation>\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uae08\uc561 -%s=&lt;amount&gt;: '%s'</translation>\n@@ -3254,6 +3438,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Specified blocks directory \"%s\" does not exist.</source>\n         <translation>\uc9c0\uc815\ud55c \ube14\ub85d \ub514\ub809\ud1a0\ub9ac \"%s\" \uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>\n     </message>\n+    <message>\n+        <source>Unknown change type '%s'</source>\n+        <translation>\uc54c \uc218 \uc5c6\ub294 \ubcc0\uacbd \ud615\uc2dd '%s'</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>txindex \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5c5\ud14c\uc774\ud2b8\uc911</translation>\n@@ -3262,6 +3450,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Loading P2P addresses...</source>\n         <translation>P2P \uc8fc\uc18c \ubd88\ub7ec\uc624\ub294 \uc911...</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>\uc624\ub958: \ub514\uc2a4\ud06c \uacf5\uac04\uc774 \ubd80\uc871\ud569\ub2c8\ub2e4!</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>\ucd94\ubc29\ub9ac\uc2a4\ud2b8\ub97c \ubd88\ub7ec\uc624\ub294 \uc911...</translation>\n@@ -3370,6 +3562,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>-whitebind: '%s' \ub97c \uc774\uc6a9\ud558\uc5ec \ud3ec\ud2b8\ub97c \uc9c0\uc815\ud574\uc57c \ud569\ub2c8\ub2e4</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>\ube14\ub85d \ucd95\uc18c \ubaa8\ub4dc\ub294 -blockfileterindex\uc640 \ud638\ud658\ub418\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.</translation>\n+    </message>\n     <message>\n         <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation>\uc2dc\uc2a4\ud15c \ud55c\uacc4\ub85c \uc778\ud558\uc5ec -maxconnections\ub97c %d \uc5d0\uc11c %d\ub85c \uc904\uc600\uc2b5\ub2c8\ub2e4.</translation>\n@@ -3428,6 +3624,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Unable to generate initial keys</source>\n         <translation>\ucd08\uae30 \ud0a4\uac12 \uc0dd\uc131 \ubd88\uac00</translation>\n     </message>\n+    <message>\n+        <source>Unknown -blockfilterindex value %s.</source>\n+        <translation>\uc54c \uc218 \uc5c6\ub294 -blockfileterindex \uac12 %s.</translation>\n+    </message>\n     <message>\n         <source>Verifying wallet(s)...</source>\n         <translation>\uc9c0\uac11 \uac80\uc99d\uc911...</translation>"
      },
      {
        "sha": "7024bff0a2b19313cb9e7b0c68693cbc256fee54",
        "filename": "src/qt/locale/bitcoin_lt.ts",
        "status": "modified",
        "additions": 102,
        "deletions": 2,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_lt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_lt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lt.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -69,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Tai yra j\u016bs\u0173 Bitcoin adresai i\u0161einantiems mok\u0117jimams. Visada pasitikrinkite sum\u0105 ir gav\u0117jo adres\u0105 prie\u0161 siun\u010diant l\u0117\u0161as.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>Tai j\u016bs\u0173 Bitcoin mok\u0117jim\u0173 gavimo adresai. Naudokite 'Sukurti nauj\u0105 gavimo adres\u0105' migtuk\u0105 gavim\u0173 skirtuke kad sukurtum\u0117t nauja adres\u0105.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopijuoti adres\u0105</translation>\n@@ -175,6 +179,10 @@\n         <source>Wallet encrypted</source>\n         <translation>Pinigin\u0117 u\u017e\u0161ifruota</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u012eveskite sen\u0105 ir nauj\u0105 slapta\u017eod\u012f.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>SVARBU: Betkokios ankstesn\u0117s j\u016bs\u0173 pinigin\u0117s atsargin\u0117s kopijos tur\u0117t\u0173 b\u016bti pakeistos naujai sugeneruotu, u\u017e\u0161ifruotu pinigin\u0117s failu. D\u0117l saugumo sumetim\u0173, anstesn\u0117s neu\u017e\u0161ifruotos pinigin\u0117s kopijos failas taps nenaudingu nuo momento, kai nauja ir u\u017e\u0161ifruota pinigin\u0117 bus prad\u0117ta naudoti.</translation>\n@@ -297,6 +305,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>Atidaryti &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Sukurti pinigin\u0119...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Sukurti nauj\u0105 pinigin\u0119</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>Pinigin\u0117</translation>\n@@ -477,6 +493,10 @@\n         <source>default wallet</source>\n         <translation>numatyta pinigin\u0117</translation>\n     </message>\n+    <message>\n+        <source>No wallets available</source>\n+        <translation>Pinigini\u0173 n\u0117ra</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Langas</translation>\n@@ -509,6 +529,10 @@\n         <source>Error: %1</source>\n         <translation>Klaida: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>\u012esp\u0117jimas: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -731,10 +755,50 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Sukuriama Pinigin\u0117 &lt;b&gt;%1&lt;/b&gt;...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>Pinigin\u0117s sukurimas nepavyko</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Pinigin\u0117s sukurimo \u012fsp\u0117jimas</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Sukurti Pinigin\u0119</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Pinigin\u0117s Pavadinimas</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>U\u017ekoduoti pinigin\u0119. Pinigin\u0117 bus u\u017ekoduota j\u016bs\u0173 pasirinkta slapta fraze.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>U\u017ekoduoti Pinigin\u0119</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Atjungti Priva\u010dius Raktus</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>Sukurti Tu\u0161\u010dia Pinigin\u0119</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Sukurti</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -866,6 +930,10 @@\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n+        <translation>I\u0161trinti blokus po patikrinimo, i\u0161skyrus paskutinius %1 GB (nukarpimas)</translation>\n+    </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n         <translation>\u0160iame kataloge bus saugomi bent %1 GB duomen\u0173, kurie laikui b\u0117gant did\u0117s.</translation>\n@@ -959,6 +1027,14 @@\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>Pinigin\u0117s atidarymas nepavyko</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Pinigin\u0117s atidarymo \u012fsp\u0117jimas</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>numatyta pinigin\u0117</translation>\n@@ -1497,6 +1573,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>Klaida koduojant URI \u012f QR kod\u0105.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>QR kodas nepalaikomas</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>\u012era\u0161yti QR kod\u0105</translation>\n@@ -2168,6 +2248,14 @@ Pastaba: Kadangi mokestis apskai\u010diuojamas pagal bait\u0105, mokestis u\u017e \u201e100 sat\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blokai)</translation>\n     </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation>i\u0161 pinigin\u0117s '%1'</translation>\n+    </message>\n+    <message>\n+        <source>%1 to '%2'</source>\n+        <translation>'%1' \u012f '%2'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 iki %2</translation>\n@@ -2918,6 +3006,10 @@ Pastaba: Kadangi mokestis apskai\u010diuojamas pagal bait\u0105, mokestis u\u017e \u201e100 sat\n         <source>Close wallet</source>\n         <translation>U\u017edaryti Pinigin\u0119</translation>\n     </message>\n+    <message>\n+        <source>Are you sure you wish to close the wallet &lt;i&gt;%1&lt;/i&gt;?</source>\n+        <translation>Ar tikrai norite u\u017edaryti pinigin\u0119 &lt;i&gt;%1&lt;/i&gt;?</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n@@ -3090,6 +3182,10 @@ Pastaba: Kadangi mokestis apskai\u010diuojamas pagal bait\u0105, mokestis u\u017e \u201e100 sat\n         <source>Importing...</source>\n         <translation>Importuojama...</translation>\n     </message>\n+    <message>\n+        <source>Unknown address type '%s'</source>\n+        <translation>Ne\u017einomas adreso tipas '%s'</translation>\n+    </message>\n     <message>\n         <source>Upgrading txindex database</source>\n         <translation>Txindex duomen\u0173 baz\u0117s atnaujinimas</translation>\n@@ -3098,6 +3194,10 @@ Pastaba: Kadangi mokestis apskai\u010diuojamas pagal bait\u0105, mokestis u\u017e \u201e100 sat\n         <source>Loading P2P addresses...</source>\n         <translation>U\u017ekraunami P2P adresai...</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>Klaida: Diske ma\u017eai vietos!</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>\u012ekeliamas draud\u017eiamas s\u0105ra\u0161as...</translation>"
      },
      {
        "sha": "360b2735c047f5996d69bcf126d0c7bc93e96ad8",
        "filename": "src/qt/locale/bitcoin_lv.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_lv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_lv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_lv.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -49,6 +49,18 @@\n         <source>Choose the address to receive coins with</source>\n         <translation>Izv\u0113lies adresi ar kuru sa\u0146emt bitcoins</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>Izv\u0113l\u0113ties</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Adre\u0161u nos\u016bt\u012b\u0161ana</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Adre\u0161u sa\u0146em\u0161ana</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kop\u0113t adresi</translation>"
      },
      {
        "sha": "2bb3380659984e1b14a721a22bf33be17dc3b490",
        "filename": "src/qt/locale/bitcoin_ml.ts",
        "status": "modified",
        "additions": 275,
        "deletions": 1,
        "changes": 276,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ml.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ml.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ml.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -66,6 +66,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u0d2a\u0d47\u0d2f\u0d4d\u0d2e\u0d46\u0d28\u0d4d\u0d31\u0d41\u0d15\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d41\u0d33\u0d4d\u0d33 \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d33\u0d3e\u0d23\u0d4d \u0d07\u0d35. \u0d28\u0d3e\u0d23\u0d2f\u0d19\u0d4d\u0d19\u0d7e \u0d05\u0d2f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d41\u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d \u0d0e\u0d32\u0d4d\u0d32\u0d3e\u0d2f\u0d4d\u0d2a\u0d4d\u0d2a\u0d4b\u0d34\u0d41\u0d02 \u0d24\u0d41\u0d15\u0d2f\u0d41\u0d02 \u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d35\u0d41\u0d02 \u0d2a\u0d30\u0d3f\u0d36\u0d4b\u0d27\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>\u0d07\u0d35\u0d2f\u0d3e\u0d23\u0d4d \u0d2a\u0d23\u0d02  \u0d38\u0d4d\u0d35\u0d40\u0d15\u0d30\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d3e\u0d2f\u0d41\u0d33\u0d4d\u0d33 \u0d24\u0d3e\u0d19\u0d4d\u0d15\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e. \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d19\u0d4d\u0d19\u0d7e \u0d15\u0d42\u0d1f\u0d4d\u0d1f\u0d3f\u0d1a\u0d4d\u0d1a\u0d47\u0d7c\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d3f\u0d28\u0d3e\u0d2f\u0d3f ' \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15 ' \u0d0e\u0d28\u0d4d\u0d28 \u0d2c\u0d1f\u0d4d\u0d1f\u0d7a \u0d05\u0d2e\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 \u0d2a\u0d15\u0d7c\u0d24\u0d4d\u0d24\u0d41\u0d15</translation>\n@@ -128,6 +132,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d2a\u0d4d\u0d30\u0d2f\u0d4b\u0d17\u0d02 \u0d06\u0d35\u0d7c\u0d24\u0d4d\u0d24\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>\u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d02  \u0d15\u0d3e\u0d23\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d15</translation>\n@@ -160,15 +168,173 @@\n         <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n         <translation>\u0d2e\u0d41\u0d28\u0d4d\u0d28\u0d31\u0d3f\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d: \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d7b\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d4d \u0d2a\u0d3e\u0d38\u0d4d\u0d2b\u0d4d\u0d30\u0d46\u0d2f\u0d4d\u0d38\u0d4d \u0d28\u0d37\u0d4d\u0d1f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d41\u0d15\u0d2f\u0d3e\u0d23\u0d46\u0d19\u0d4d\u0d15\u0d3f\u0d7d, \u0d28\u0d3f\u0d19\u0d4d\u0d19\u0d33\u0d41\u0d1f\u0d46 \u0d0e\u0d32\u0d4d\u0d32\u0d3e \u0d2c\u0d3f\u0d31\u0d4d\u0d31\u0d4d\u0d15\u0d4a\u0d2f\u0d3f\u0d28\u0d41\u0d15\u0d33\u0d41\u0d02 \u0d28\u0d37\u0d4d\u0d1f\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d41\u0d02!</translation>\n     </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d0e\u0d28\u0d4d\u0d15\u0d4d\u0d30\u0d3f\u0d2a\u0d4d\u0d31\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d24\u0d41 \u0d15\u0d34\u0d3f\u0d1e\u0d4d\u0d1e\u0d41 .</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d46\u0d31\u0d4d\u0d31\u0d3f\u0d28\u0d4d\u0d31\u0d46 \u0d2a\u0d34\u0d2f \u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d35\u0d41\u0d02 \u0d2a\u0d41\u0d24\u0d3f\u0d2f \u0d30\u0d39\u0d38\u0d4d\u0d2f\u0d2a\u0d26\u0d35\u0d41\u0d02 \u0d28\u0d7d\u0d15\u0d41\u0d15.</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>\u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d33\u0d41\u0d1f\u0d46 \u0d1a\u0d30\u0d3f\u0d24\u0d4d\u0d30\u0d02 \u0d2a\u0d30\u0d3f\u0d36\u0d4b\u0d27\u0d3f\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d41\u0d15</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u0d2a\u0d3f\u0d36\u0d15\u0d4d </translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u0d2e\u0d41\u0d28\u0d4d\u0d28\u0d31\u0d3f\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d </translation>\n+    </message>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u0d35\u0d3f\u0d35\u0d30\u0d02 </translation>\n+    </message>\n+    <message>\n+        <source>Open Wallet</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Open a wallet</source>\n+        <translation>\u0d12\u0d30\u0d41 \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d24\u0d41\u0d31\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Close Wallet...</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d  \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15  </translation>\n+    </message>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d30\u0d02 \u0d06\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d</translation>\n+    </message>\n+    <message>\n+        <source>No wallets available</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d12\u0d28\u0d4d\u0d28\u0d41\u0d02 \u0d32\u0d2d\u0d4d\u0d2f\u0d02 \u0d05\u0d32\u0d4d\u0d32 </translation>\n+    </message>\n+    <message>\n+        <source>Minimize</source>\n+        <translation>\u0d1a\u0d46\u0d31\u0d41\u0d24\u0d3e\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Zoom</source>\n+        <translation>\u0d35\u0d32\u0d41\u0d24\u0d3e\u0d15\u0d4d\u0d15\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Main Window</source>\n+        <translation>\u0d2e\u0d41\u0d16\u0d4d\u0d2f \u0d1c\u0d3e\u0d32\u0d15\u0d02 </translation>\n+    </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>\u0d38\u0d41\u0d39\u0d43\u0d24\u0d4d\u0d24\u0d41\u0d15\u0d4d\u0d15\u0d33\u0d41\u0d02 \u0d06\u0d2f\u0d3f \u0d15\u0d23\u0d15\u0d4d\u0d1f\u0d4d \u0d1a\u0d46\u0d2f\u0d4d\u0d2f\u0d41\u0d28\u0d4d\u0d28\u0d41 ...</translation>\n+    </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>\u0d24\u0d46\u0d31\u0d4d\u0d31\u0d4d : %1 </translation>\n+    </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>\u0d2e\u0d41\u0d28\u0d4d\u0d28\u0d31\u0d3f\u0d2f\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d : %1 </translation>\n+    </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f: %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Amount: %1\n+</source>\n+        <translation>\u0d24\u0d41\u0d15 : %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Wallet: %1\n+</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d: %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Label: %1\n+</source>\n+        <translation>\u0d15\u0d41\u0d31\u0d3f\u0d2a\u0d4d\u0d2a\u0d4d : %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Address: %1\n+</source>\n+        <translation>\u0d2e\u0d47\u0d7d\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02 : %1 \n+</translation>\n+    </message>\n+    <message>\n+        <source>Sent transaction</source>\n+        <translation>\u0d05\u0d2f\u0d1a\u0d4d\u0d1a \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e </translation>\n+    </message>\n+    <message>\n+        <source>Incoming transaction</source>\n+        <translation>\u0d35\u0d30\u0d35\u0d4d\u0d35\u0d4d \u0d35\u0d46\u0d1a\u0d4d\u0d1a \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e </translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>Coin Selection</source>\n+        <translation>\u0d15\u0d4b\u0d2f\u0d3f\u0d7b \u0d24\u0d3f\u0d30\u0d1e\u0d4d\u0d1e\u0d46\u0d1f\u0d41\u0d15\u0d4d\u0d15\u0d7d </translation>\n+    </message>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>\u0d28\u0d3f\u0d30\u0d4d\u200d\u0d26\u0d4d\u0d27\u0d3f\u0d37\u0d4d\u200c\u0d1f\u0d38\u0d02\u0d16\u0d4d\u0d2f / \u0d05\u0d33\u0d35\u0d4d :</translation>\n+    </message>\n+    <message>\n+        <source>Bytes:</source>\n+        <translation>\u0d2c\u0d48\u0d31\u0d4d\u0d31\u0d4d\u0d38\u0d4d:</translation>\n+    </message>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>\u0d24\u0d41\u0d15:</translation>\n+    </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>\u0d2b\u0d40\u0d38\u0d4d\u200c / \u0d2a\u0d4d\u0d30\u0d24\u0d3f\u0d2b\u0d32\u0d02 :</translation>\n+    </message>\n+    <message>\n+        <source>List mode</source>\n+        <translation>\u0d2a\u0d1f\u0d4d\u0d1f\u0d3f\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>\u0d24\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Received with label</source>\n+        <translation>\u0d05\u0d1f\u0d2f\u0d3e\u0d33\u0d24\u0d4d\u0d24\u0d4b\u0d1f\u0d41\u0d15\u0d42\u0d1f\u0d3f \u0d32\u0d2d\u0d3f\u0d1a\u0d4d\u0d1a\u0d41 </translation>\n+    </message>\n+    <message>\n+        <source>Received with address</source>\n+        <translation>\u0d2e\u0d47\u0d7d\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d24\u0d4d\u0d24\u0d4b\u0d1f\u0d41\u0d15\u0d42\u0d1f\u0d3f \u0d32\u0d2d\u0d3f\u0d1a\u0d4d\u0d1a\u0d41 </translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f </translation>\n+    </message>\n+    <message>\n+        <source>Confirmations</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d24\u0d40\u0d15\u0d30\u0d23\u0d19\u0d4d\u0d19\u0d7e </translation>\n+    </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d24\u0d40\u0d15\u0d30\u0d3f\u0d1a\u0d4d\u0d1a\u0d41</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0d32\u0d47\u0d2c\u0d7d \u0d07\u0d32\u0d4d\u0d32)</translation>\n@@ -179,33 +345,77 @@\n     </context>\n <context>\n     <name>CreateWalletDialog</name>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d / \u0d2a\u0d23\u0d38\u0d1e\u0d4d\u0d1a\u0d3f \u0d38\u0d43\u0d37\u0d4d\u0d1f\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d15 :</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n+    <message>\n+        <source>name</source>\n+        <translation>\u0d28\u0d3e\u0d2e\u0d27\u0d47\u0d2f\u0d02 / \u0d2a\u0d47\u0d30\u0d4d </translation>\n+    </message>\n     </context>\n <context>\n     <name>HelpMessageDialog</name>\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u0d2a\u0d3f\u0d36\u0d15\u0d4d </translation>\n+    </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u0d05\u0d1c\u0d4d\u0d1e\u0d3e\u0d24\u0d2e\u0d3e\u0d2f </translation>\n+    </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>\u0d2a\u0d41\u0d30\u0d4b\u0d17\u0d24\u0d3f</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>\u0d15\u0d23\u0d15\u0d4d\u0d15\u0d3e\u0d2f\u0d4d\u0d15\u0d4d\u0d15\u0d3f\u0d15\u0d4d\u0d15\u0d4a\u0d23\u0d4d\u0d1f\u0d3f\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41</translation>\n+    </message>\n     </context>\n <context>\n     <name>OpenURIDialog</name>\n     </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d30\u0d02 \u0d06\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d</translation>\n+    </message>\n     </context>\n <context>\n     <name>OptionsDialog</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u0d2a\u0d3f\u0d36\u0d15\u0d4d </translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>\n+    <message>\n+        <source>Available:</source>\n+        <translation>\u0d32\u0d2d\u0d4d\u0d2f\u0d2e\u0d3e\u0d2f</translation>\n+    </message>\n+    <message>\n+        <source>Spendable:</source>\n+        <translation>\u0d35\u0d3f\u0d28\u0d3f\u0d2f\u0d47\u0d3e\u0d17\u0d3f\u0d15\u0d4d\u0d15\u0d3e\u0d35\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d4d / \u0d1a\u0d46\u0d32\u0d35\u0d3e\u0d15\u0d4d\u0d15\u0d3e\u0d35\u0d41\u0d28\u0d4d\u0d28\u0d24\u0d4d </translation>\n+    </message>\n+    <message>\n+        <source>Recent transactions</source>\n+        <translation>\u0d38\u0d2e\u0d40\u0d2a \u0d15\u0d3e\u0d32 \u0d07\u0d1f\u0d2a\u0d3e\u0d1f\u0d41\u0d15\u0d7e</translation>\n+    </message>\n     </context>\n <context>\n     <name>PaymentServer</name>\n@@ -215,6 +425,14 @@\n     </context>\n <context>\n     <name>QObject</name>\n+    <message>\n+        <source>Amount</source>\n+        <translation>\u0d24\u0d41\u0d15 </translation>\n+    </message>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>\u0d24\u0d46\u0d31\u0d4d\u0d31\u0d4d : %1 </translation>\n+    </message>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n@@ -231,13 +449,21 @@\n         <source>Address</source>\n         <translation>\u0d35\u0d3f\u0d32\u0d3e\u0d38\u0d02</translation>\n     </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>\u0d24\u0d41\u0d15 </translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u0d32\u0d47\u0d2c\u0d7d</translation>\n     </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f </translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u0d32\u0d47\u0d2c\u0d7d</translation>\n@@ -249,6 +475,26 @@\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n+    <message>\n+        <source>Quantity:</source>\n+        <translation>\u0d28\u0d3f\u0d30\u0d4d\u200d\u0d26\u0d4d\u0d27\u0d3f\u0d37\u0d4d\u200c\u0d1f\u0d38\u0d02\u0d16\u0d4d\u0d2f / \u0d05\u0d33\u0d35\u0d4d :</translation>\n+    </message>\n+    <message>\n+        <source>Bytes:</source>\n+        <translation>\u0d2c\u0d48\u0d31\u0d4d\u0d31\u0d4d\u0d38\u0d4d:</translation>\n+    </message>\n+    <message>\n+        <source>Amount:</source>\n+        <translation>\u0d24\u0d41\u0d15:</translation>\n+    </message>\n+    <message>\n+        <source>Fee:</source>\n+        <translation>\u0d2b\u0d40\u0d38\u0d4d\u200c / \u0d2a\u0d4d\u0d30\u0d24\u0d3f\u0d2b\u0d32\u0d02 :</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>\u0d2a\u0d46\u0d2f\u0d4d\u0d2e\u0d46\u0d28\u0d4d\u0d31\u0d3f\u0d28\u0d41\u0d33\u0d4d\u0d33 \u0d05\u0d2d\u0d4d\u0d2f\u0d7c\u0d24\u0d4d\u0d25\u0d28  \u0d15\u0d3e\u0d32\u0d39\u0d30\u0d23\u0d2a\u0d4d\u0d2a\u0d46\u0d1f\u0d4d\u0d1f\u0d41 \u0d2a\u0d4b\u0d2f\u0d3f\u0d30\u0d3f\u0d15\u0d4d\u0d15\u0d41\u0d28\u0d4d\u0d28\u0d41. </translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0d32\u0d47\u0d2c\u0d7d \u0d07\u0d32\u0d4d\u0d32)</translation>\n@@ -268,12 +514,24 @@\n     </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f </translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>\u0d24\u0d41\u0d15 </translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f </translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u0d32\u0d47\u0d2c\u0d7d</translation>\n@@ -289,6 +547,14 @@\n         <source>Comma separated file (*.csv)</source>\n         <translation>\u0d15\u0d4b\u0d2e\u0d2f\u0d3e\u0d7d \u0d35\u0d47\u0d7c\u0d24\u0d3f\u0d30\u0d3f\u0d1a\u0d4d\u0d1a \u0d2b\u0d2f\u0d7d (* .csv)</translation>\n     </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d24\u0d40\u0d15\u0d30\u0d3f\u0d1a\u0d4d\u0d1a\u0d41</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>\u0d24\u0d40\u0d2f\u0d24\u0d3f </translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>\u0d32\u0d47\u0d2c\u0d7d</translation>\n@@ -307,13 +573,21 @@\n     </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>\u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d \u0d2a\u0d42\u0d1f\u0d4d\u0d1f\u0d41\u0d15 </translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>\n     </context>\n <context>\n     <name>WalletModel</name>\n-    </context>\n+    <message>\n+        <source>default wallet</source>\n+        <translation>\u0d38\u0d4d\u0d25\u0d3f\u0d30\u0d02 \u0d06\u0d2f \u0d35\u0d3e\u0d32\u0d31\u0d4d\u0d31\u0d4d</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n     <message>"
      },
      {
        "sha": "05e85ec96c4b9bf0917249119864a0426cef115c",
        "filename": "src/qt/locale/bitcoin_mr_IN.ts",
        "status": "modified",
        "additions": 74,
        "deletions": 2,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_mr_IN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_mr_IN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_mr_IN.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -29,6 +29,10 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>\u0938\u0927\u094d\u092f\u093e\u091a\u093e \u0928\u093f\u0935\u0921\u0932\u0947\u0932\u093e \u092a\u0924\u094d\u0924\u093e \u092f\u093e\u0926\u0940\u092e\u0927\u0942\u0928 \u0915\u093e\u0922\u0942\u0928 \u091f\u093e\u0915\u093e</translation>\n     </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u0936\u094b\u0927\u0923\u094d\u092f\u093e\u0938\u093e\u0920\u0940 \u092a\u0924\u094d\u0924\u093e \u0915\u093f\u0902\u0935\u093e \u0932\u0947\u092c\u0932 \u0926\u093e\u0916\u0932 \u0915\u0930\u093e</translation>\n+    </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>\n         <translation>\u0938\u0927\u094d\u092f\u093e\u091a\u094d\u092f\u093e \u091f\u0945\u092c\u092e\u0927\u0940\u0932 \u0921\u0947\u091f\u093e \u090f\u0915\u093e \u092b\u093e\u0908\u0932\u092e\u0927\u094d\u092f\u0947 \u090f\u0915\u094d\u0938\u094d\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u093e</translation>\n@@ -65,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>\u092a\u0948\u0938\u0947 \u092a\u093e\u0920\u0935\u093f\u0923\u094d\u092f\u093e\u0938\u093e\u0920\u0940\u091a\u0947 \u0939\u0947 \u0924\u0941\u092e\u091a\u0947 \u092c\u093f\u091f\u0915\u0949\u0908\u0928 \u092a\u0924\u094d\u0924\u094d\u0924\u0947 \u0906\u0939\u0947\u0924. \u0928\u093e\u0923\u0940 \u092a\u093e\u0920\u0935\u093f\u0923\u094d\u092f\u093e\u092a\u0942\u0930\u094d\u0935\u0940 \u0928\u0947\u0939\u092e\u0940 \u0930\u0915\u094d\u0915\u092e \u0906\u0923\u093f \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0923\u093e\u0930\u093e \u092a\u0924\u094d\u0924\u093e \u0924\u092a\u093e\u0938\u0942\u0928 \u092a\u0939\u093e.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>\u092a\u0948\u0938\u0947 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0923\u094d\u092f\u093e\u0938\u093e\u0920\u0940\u091a\u0947 \u0939\u0947 \u0906\u092a\u0932\u0947 \u092c\u093f\u091f\u0915\u0949\u0907\u0928 \u092a\u0924\u094d\u0924\u0947 \u0906\u0939\u0947\u0924. \u0928\u0935\u0940\u0928 \u092a\u0924\u094d\u0924\u0947 \u0924\u092f\u093e\u0930 \u0915\u0930\u0923\u094d\u092f\u093e\u0938\u093e\u0920\u0940 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u091f\u0945\u092c\u092e\u0927\u0940\u0932 '\u0928\u0935\u0940\u0928 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0923\u094d\u092f\u093e\u091a\u093e \u092a\u0924\u094d\u0924\u093e \u0924\u092f\u093e\u0930 \u0915\u0930\u093e' \u092c\u091f\u0923 \u0935\u093e\u092a\u0930\u093e.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;\u092a\u0924\u094d\u0924\u093e \u0915\u0949\u092a\u0940 \u0915\u0930\u093e</translation>\n@@ -77,10 +85,30 @@\n         <source>&amp;Edit</source>\n         <translation>&amp;\u0938\u0902\u092a\u093e\u0926\u093f\u0924</translation>\n     </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u092a\u0924\u094d\u0924\u094d\u092f\u093e\u091a\u0940 \u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0915\u0930\u093e</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0905\u092f\u0936\u0938\u094d\u0935\u0940</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u092a\u0924\u094d\u0924\u093e</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u093e\u0939\u0940)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     </context>\n@@ -92,6 +120,10 @@\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u093e\u0939\u0940)</translation>\n+    </message>\n     </context>\n <context>\n     <name>CreateWalletActivity</name>\n@@ -146,13 +178,33 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u092a\u0924\u094d\u0924\u093e</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u093e\u0939\u0940)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u093e\u0939\u0940)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     </context>\n@@ -173,9 +225,29 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u0932\u0947\u092c\u0932 \u0928\u093e\u0939\u0940)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u0932\u0947\u092c\u0932</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u092a\u0924\u094d\u0924\u093e</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0905\u092f\u0936\u0938\u094d\u0935\u0940</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "ec03afa3b72ce26b91b1ca4bbf54c4dc550dd1b8",
        "filename": "src/qt/locale/bitcoin_my.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_my.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_my.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_my.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -49,6 +49,18 @@\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1021\u1019\u103e\u102c\u1038</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u101e\u1010\u102d\u1015\u1031\u1038\u1001\u103b\u1000\u103a</translation>\n+    </message>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u1021\u1001\u103b\u1000\u103a\u1021\u101c\u1000\u103a</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n@@ -70,6 +82,10 @@\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1021\u1019\u103e\u102c\u1038</translation>\n+    </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n@@ -82,6 +98,10 @@\n     </context>\n <context>\n     <name>OptionsDialog</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u1021\u1019\u103e\u102c\u1038</translation>\n+    </message>\n     </context>\n <context>\n     <name>OverviewPage</name>"
      },
      {
        "sha": "f24c1aa3b6db87840839818dcc8719a3b6225801",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 336,
        "deletions": 4,
        "changes": 340,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -69,6 +69,10 @@\n         <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n         <translation>Dette er dine Bitcoin adresser for \u00e5 sende  \u00e5 sende betalinger. Husk \u00e5 sjekke bel\u00f8p og mottager adresser f\u00f8r du sender mynter.</translation>\n     </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation>Dette er dine Bitcoin adresse for \u00e5 betalinger. Det er anbefalt \u00e5 bruke en my mottager adresse for hver transakjon.</translation>\n+    </message>\n     <message>\n         <source>&amp;Copy Address</source>\n         <translation>&amp;Kopier adresse</translation>\n@@ -131,6 +135,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>Repeter passorsetningen</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>Vis adgangsfrase</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Krypter lommeboken</translation>\n@@ -171,10 +179,30 @@\n         <source>Wallet encrypted</source>\n         <translation>Lommeboken er kryptert</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Angi den nye passordfrasen for lommeboken.&lt;br/&gt; Vennglist du bruker en passordfrase &lt;b&gt; ti eller tilfeldige tegn &lt;/b&gt;, eller &lt;b&gt; \u00e5tte eller flere ord.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>Svriv inn den gamle passfrasen og den nye passordfrasen for lommeboken.</translation>\n+    </message>\n     <message>\n         <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n         <translation>Husk at \u00e5 kryptere lommeboken ikke vil beskytte dine bitcoins fullstendig fra \u00e5 bli stj\u00e5let av skadevare som infiserer datamaskinen din.</translation>\n     </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Lommebok som skal bli kryptert</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>Din lommebok er i ferd med \u00e5 bli kryptert.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>Din lommebok er n\u00e5 kryptert.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>VIKTIG: Alle tidligere sikkerhetskopier du har tatt av lommebokfilen b\u00f8r erstattes med den nye krypterte lommebokfilen. Av sikkerhetsgrunner vil tidligere sikkerhetskopier av lommebokfilen bli ubrukelige n\u00e5r du begynner \u00e5 bruke den ny kypterte lommeboken.</translation>\n@@ -297,6 +325,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>\u00c5pne &amp;URI</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Lag lommebok...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Lag en ny lommebok</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>Lommebok:</translation>\n@@ -445,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Oppdatert</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Nodevindu</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\u00c5pne nodens konsoll for feils\u00f8k og diagnostikk</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;Avsender adresser</translation>\n@@ -453,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;Mottaker adresser</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>\u00c5pne en bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\u00c5pne Lommebok</translation>\n@@ -513,6 +561,10 @@\n         <source>Error: %1</source>\n         <translation>Feil: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation>Advarsel: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -735,10 +787,58 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Creating Wallet &lt;b&gt;%1&lt;/b&gt;...</source>\n+        <translation>Lager lommebok &lt;b&gt;%1&lt;b&gt;...</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>Lage lommebok feilet</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Lag lommebokvarsel</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Lag lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Lommeboknavn</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>Krypter lommeboken. Lommeboken blir kryptert med en passordfrase du velger.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>Krypter Lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Deaktiver private n\u00f8kler for denne lommeboken. Lommeb\u00f8ker med private n\u00f8kler er deaktivert vil ikke ha noen private n\u00f8kler og kan ikke ha en HD seed eller importerte private n\u00f8kler. Dette er ideelt for loomeb\u00f8ker som kun er klokker.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Deaktiver Private N\u00f8kler</translation>\n+    </message>\n+    <message>\n+        <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n+        <translation>Lag en tom lommebok. Tomme lommeb\u00f8ker har i utgangspunktet ikke private n\u00f8kler eller skript. Private n\u00f8kler og adresser kan importeres, eller et HD- fr\u00f8 kan angis p\u00e5 et senere tidspunkt.</translation>\n+    </message>\n+    <message>\n+        <source>Make Blank Wallet</source>\n+        <translation>Lag Tom Lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Opprett</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -781,6 +881,10 @@\n         <source>Address \"%1\" already exists as a receiving address with label \"%2\" and so cannot be added as a sending address.</source>\n         <translation>Adresse \"%1\" eksisterer allerede som en mottaksadresse merket \"%2\" og kan derfor ikke bli lagt til som en sendingsadresse.</translation>\n     </message>\n+    <message>\n+        <source>The entered address \"%1\" is already in the address book with label \"%2\".</source>\n+        <translation>Den oppgitte adressen ''%1'' er allerede i adresseboken med etiketten ''%2''.</translation>\n+    </message>\n     <message>\n         <source>Could not unlock wallet.</source>\n         <translation>Kunne ikke l\u00e5se opp lommebok.</translation>\n@@ -846,6 +950,10 @@\n         <source>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</source>\n         <translation>N\u00e5r du klikker OK, vil %1 starte nedlasting og behandle hele den %4 blokkjeden (%2GB) fra de eldste transaksjonene i %3 n\u00e5r %4 f\u00f8rst startet.</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain. It is faster to download the full chain first and prune it later. Disables some advanced features.</source>\n+        <translation>Gjenoppretting av denne innstillingen krever at du laster ned hele blockchain p\u00e5 nytt. Det er raskere \u00e5 laste ned hele kjeden f\u00f8rst og beskj\u00e6re den senere Deaktiver noen avanserte funksjoner.</translation>\n+    </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n         <translation>Den initielle synkroniseringen er sv\u00e6rt krevende, og kan for\u00e5rsake problemer med maskinvaren i datamaskinen din som du tidligere ikke merket. Hver gang du kj\u00f8rer %1 vil den fortsette nedlastingen der den sluttet.</translation>\n@@ -866,6 +974,10 @@\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n+    <message>\n+        <source>Discard blocks after verification, except most recent %1 GB (prune)</source>\n+        <translation>Kast blokker etter bekreftelse, bortsett fra de siste %1 GB (sviske)</translation>\n+    </message>\n     <message>\n         <source>At least %1 GB of data will be stored in this directory, and it will grow over time.</source>\n         <translation>Minst %1 GB data vil bli lagret i denne mappen og den vil vokse over tid.</translation>\n@@ -945,16 +1057,40 @@\n         <source>Hide</source>\n         <translation>Skjul</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 synkroniseres for \u00f8yeblikket. Den vil laste ned overskrifter og blokker fra jevnaldrende og validere dem til de n\u00e5r spissen av blokkjeden.</translation>\n+    </message>\n+    <message>\n+        <source>Unknown. Syncing Headers (%1, %2%)...</source>\n+        <translation>Ukjent.Synkroniser overskrifter (%1,%2%)...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>\u00c5pne bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n     </message>\n </context>\n <context>\n     <name>OpenWalletActivity</name>\n+    <message>\n+        <source>Open wallet failed</source>\n+        <translation>\u00c5pne lommebok feilet</translation>\n+    </message>\n+    <message>\n+        <source>Open wallet warning</source>\n+        <translation>Advasel om \u00e5pen lommebok.</translation>\n+    </message>\n     <message>\n         <source>default wallet</source>\n         <translation>standard lommebok</translation>\n@@ -1038,10 +1174,22 @@\n         <source>&amp;Network</source>\n         <translation>&amp;Nettverk</translation>\n     </message>\n+    <message>\n+        <source>Disables some advanced features but all blocks will still be fully validated. Reverting this setting requires re-downloading the entire blockchain. Actual disk usage may be somewhat higher.</source>\n+        <translation>Deaktiver noen avanserte funksjoner, men alle blokker vil fortsatt v\u00e6re fullglyldig. Gjenoppretting av denne innstillingen krever at du laster ned hele blockchain p\u00e5 nytt. Faktisk diskbruk kan v\u00e6re noe h\u00f8vere.</translation>\n+    </message>\n+    <message>\n+        <source>Prune &amp;block storage to</source>\n+        <translation>Beskj\u00e6r og blokker lagring til</translation>\n+    </message>\n     <message>\n         <source>GB</source>\n         <translation>GB</translation>\n     </message>\n+    <message>\n+        <source>Reverting this setting requires re-downloading the entire blockchain.</source>\n+        <translation>Gjenoppretting av denne innstillingen krever at du laster ned hele blockchain p\u00e5 nytt</translation>\n+    </message>\n     <message>\n         <source>MiB</source>\n         <translation>MiB</translation>\n@@ -1170,6 +1318,10 @@\n         <source>&amp;Third party transaction URLs</source>\n         <translation>Tredjepart transaksjon URLer</translation>\n     </message>\n+    <message>\n+        <source>Options set in this dialog are overridden by the command line or in the configuration file:</source>\n+        <translation>Alternativer som er satt i denne dialogboksen overstyres av kommandolinjen eller i konfigurasjonsfilen:</translation>\n+    </message>\n     <message>\n         <source>&amp;OK</source>\n         <translation>&amp;OK</translation>\n@@ -1312,6 +1464,22 @@\n         <source>URI handling</source>\n         <translation>URI-h\u00e5ndtering</translation>\n     </message>\n+    <message>\n+        <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n+        <translation>'bitcoin: //' er ikke en gyldig URI. Bruk 'bitcoin:' i stedet.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Kan ikke behandle betalingsforesp\u00f8rsel fordi BIP70 ikke st\u00f8ttes.</translation>\n+    </message>\n+    <message>\n+        <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n+        <translation>P\u00e5 grunn av utbredte sikkerhetsfeil i BIP70 anbefales det p\u00e5 det sterkeste at alle selgerinstruksjoner for \u00e5 bytte lommebok ignoreres.</translation>\n+    </message>\n+    <message>\n+        <source>If you are receiving this error you should request the merchant provide a BIP21 compatible URI.</source>\n+        <translation>Hvis du mottar denne feilen, b\u00f8r du be selgeren gi en BIP21-kompatibel URI.</translation>\n+    </message>\n     <message>\n         <source>Invalid payment address %1</source>\n         <translation>Ugyldig betalingsadresse %1</translation>\n@@ -1469,6 +1637,10 @@\n         <source>Error encoding URI into QR Code.</source>\n         <translation>Feil ved koding av URI til QR-kode.</translation>\n     </message>\n+    <message>\n+        <source>QR code support not available.</source>\n+        <translation>St\u00f8tte for QR kode ikke tilgjengelig.</translation>\n+    </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>Lagre QR-kode</translation>\n@@ -1504,6 +1676,10 @@\n         <source>Datadir</source>\n         <translation>Datamappe</translation>\n     </message>\n+    <message>\n+        <source>Blocksdir</source>\n+        <translation>Blocksdir</translation>\n+    </message>\n     <message>\n         <source>Startup time</source>\n         <translation>Oppstartstidspunkt</translation>\n@@ -1596,10 +1772,22 @@\n         <source>Synced Blocks</source>\n         <translation>Synkroniserte Blokker</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Det kartlagte autonome systemet som brukes til \u00e5 diversifisere valg av fagfeller.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Kartlagt AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Brukeragent</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Nodevindu</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u00c5pne %1-feilrettingsloggfila fra gjeldende datamappe. Dette kan ta et par sekunder for store loggfiler.</translation>\n@@ -1740,6 +1928,14 @@\n         <source>Network activity disabled</source>\n         <translation>Nettverksaktivitet avskrudd</translation>\n     </message>\n+    <message>\n+        <source>Executing command without any wallet</source>\n+        <translation>Utf\u00f8r kommando uten noen lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Executing command using \"%1\" wallet</source>\n+        <translation>Utf\u00f8r kommando med lommebok \"%1\"</translation>\n+    </message>\n     <message>\n         <source>(node id: %1)</source>\n         <translation>(node id: %1)</translation>\n@@ -1803,6 +1999,18 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Et valgfritt bel\u00f8p \u00e5 ettersp\u00f8rre. La st\u00e5 tomt eller null for ikke \u00e5 ettersp\u00f8rre et spesifikt bel\u00f8p.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>En valgfri etikett for \u00e5 knytte til den nye mottaksadressen (brukt av deg for \u00e5 identifisere en faktura). Det er ogs\u00e5 knyttet til betalingsforesp\u00f8rselen.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>En valgfri melding som er knyttet til betalingsforesp\u00f8rselen og kan vises til avsenderen.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Create new receiving address</source>\n+        <translation>&amp;Lag ny mottakeradresse</translation>\n+    </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n         <translation>Fjern alle felter fra skjemaet.</translation>\n@@ -1811,6 +2019,14 @@\n         <source>Clear</source>\n         <translation>Fjern</translation>\n     </message>\n+    <message>\n+        <source>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</source>\n+        <translation>Innf\u00f8dte segwit-adresser (ogs\u00e5 kalt Bech32 eller BIP-173) reduserer transaksjonsgebyrene senere og gir bedre beskyttelse mot skrivefeil, men gamle lommeb\u00f8ker st\u00f8tter dem ikke. N\u00e5r du ikke har merket av, opprettes en adresse som er kompatibel med eldre lommeb\u00f8ker.</translation>\n+    </message>\n+    <message>\n+        <source>Generate native segwit (Bech32) address</source>\n+        <translation>Generer nativ segwit (Bech32) adresse</translation>\n+    </message>\n     <message>\n         <source>Requested payments history</source>\n         <translation>Etterspurt betalingshistorikk</translation>\n@@ -2000,6 +2216,14 @@\n         <source>Warning: Fee estimation is currently not possible.</source>\n         <translation>Advarsel: Gebyroverslag er ikke tilgjengelig for tiden.</translation>\n     </message>\n+    <message>\n+        <source>Specify a custom fee per kB (1,000 bytes) of the transaction's virtual size.\n+\n+Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis per kB\" for a transaction size of 500 bytes (half of 1 kB) would ultimately yield a fee of only 50 satoshis.</source>\n+        <translation>Spesifiser en tilpasset avgift per kB (1000 byte) av transaksjonens virtuelle st\u00f8rrelse.\n+\n+Merk: Siden avgiften er beregnet per byte-basis, vil et gebyr p\u00e5 \"100 satoshis per kB\" for en transaksjonsst\u00f8rrelse p\u00e5 500 byte (halvparten av 1 kB) til slutt gi et gebyr p\u00e5 bare 50 satoshis.</translation>\n+    </message>\n     <message>\n         <source>per kilobyte</source>\n         <translation>per kilobyte</translation>\n@@ -2036,6 +2260,18 @@\n         <source>Dust:</source>\n         <translation>St\u00f8v:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Skjul innstillinger for transaksjonsgebyr</translation>\n+    </message>\n+    <message>\n+        <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n+        <translation>N\u00e5r det er mindre transaksjonsvolum enn plass i blokkene, kan gruvearbeidere s\u00e5 vel som videresende noder h\u00e5ndheve et minimumsgebyr. \u00c5 betale bare denne minsteavgiften er helt greit, men v\u00e6r klar over at dette kan resultere i en aldri bekreftende transaksjon n\u00e5r det er st\u00f8rre ettersp\u00f8rsel etter bitcoin-transaksjoner enn nettverket kan behandle.</translation>\n+    </message>\n+    <message>\n+        <source>A too low fee might result in a never confirming transaction (read the tooltip)</source>\n+        <translation>For lavt gebyr kan f\u00f8re til en transaksjon som aldri bekreftes (les verkt\u00f8ytips)</translation>\n+    </message>\n     <message>\n         <source>Confirmation time target:</source>\n         <translation>Bekreftelsestidsm\u00e5l:</translation>\n@@ -2096,10 +2332,18 @@\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blokker)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>Cr &amp; eate Usignert</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 til %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Vil du utarbeide denne transaksjonen?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Er du sikker p\u00e5 at du vil sende?</translation>\n@@ -2128,10 +2372,34 @@\n         <source>Total Amount</source>\n         <translation>Totalbel\u00f8p</translation>\n     </message>\n+    <message>\n+        <source>To review recipient list click \"Show Details...\"</source>\n+        <translation>For \u00e5 se gjennom mottakerlisten, klikk \"Vis detaljer ...\"</translation>\n+    </message>\n     <message>\n         <source>Confirm send coins</source>\n         <translation>Bekreft forsendelse av mynter</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Bekreft transaksjonsforslaget</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Kopier PSBT til utklippstavlen</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Send</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT kopiert</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Kun-observer balanse:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Mottakeradressen er ikke gyldig. Sjekk den igjen.</translation>\n@@ -2227,6 +2495,10 @@\n         <source>Remove this entry</source>\n         <translation>Fjern denne oppf\u00f8ringen</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>bel\u00f8pet som skal sendes inn den valgte enheten.</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Gebyret vil bli trukket fra bel\u00f8pet som blir sendt. Mottakeren vil motta mindre bitcoins enn det du skriver inn i bel\u00f8psfeltet. Hvis det er valgt flere mottakere, deles gebyret likt.</translation>\n@@ -2353,6 +2625,14 @@\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Bitcoin-adressen meldingen ble signert med</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Den signerte meldingen for \u00e5 bekfrefte</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>signaturen som ble gitt da meldingen ble signert</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Verifiser meldingen for \u00e5 v\u00e6re sikker p\u00e5 at den ble signert av den angitte Bitcoin-adressen</translation>\n@@ -2385,6 +2665,10 @@\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Oppl\u00e5sning av lommebok ble avbrutt.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Ingen feil</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>Privat n\u00f8kkel for den angitte adressen er ikke tilgjengelig.</translation>\n@@ -2559,6 +2843,10 @@\n         <source>Output index</source>\n         <translation>Utdatainndeks</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(sertifikatet ble ikke bekreftet)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Forretningsdrivende</translation>\n@@ -2882,7 +3170,11 @@\n         <source>Close wallet</source>\n         <translation>Lukk lommebok</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Closing the wallet for too long can result in having to resync the entire chain if pruning is enabled.</source>\n+        <translation>\u00c5 lukke lommeboken for lenge kan f\u00f8re til at du m\u00e5 synkronisere hele kjeden hvis beskj\u00e6ring er aktivert.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletFrame</name>\n     <message>\n@@ -2908,6 +3200,10 @@\n         <source>Do you want to increase the fee?</source>\n         <translation>\u00d8nsker du \u00e5 \u00f8ke gebyret?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Vil du utarbeide en transaksjon med gebyr\u00f8kning?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>N\u00e5v\u00e6rede gebyr:</translation>\n@@ -2924,6 +3220,14 @@\n         <source>Confirm fee bump</source>\n         <translation>Bekreft gebyr\u00f8kning</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Kan ikke utarbeide transaksjon.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT kopiert</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>Kan ikke signere transaksjon</translation>\n@@ -3006,6 +3310,10 @@\n         <source>The %s developers</source>\n         <translation>%s-utviklerne</translation>\n     </message>\n+    <message>\n+        <source>Can't generate a change-address key. No keys in the internal keypool and can't generate any keys.</source>\n+        <translation>Kan ikke generere en ledelse-n\u00f8kkel. Ingen taster i den interne tasten og kan ikke generere noen n\u00f8kler.</translation>\n+    </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n         <translation>Kan ikke l\u00e5se datamappen %s. %s kj\u00f8rer antagelig allerede.</translation>\n@@ -3082,6 +3390,14 @@\n         <source>Corrupted block database detected</source>\n         <translation>Oppdaget korrupt blokkdatabase</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Kunne ikke finne asmap filen %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Kunne ikke analysere asmap filen %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>\u00d8nsker du \u00e5 gjenopprette blokkdatabasen n\u00e5?</translation>\n@@ -3154,6 +3470,10 @@\n         <source>Loading P2P addresses...</source>\n         <translation>Laster maskin-til-maskin -adresser\u2026</translation>\n     </message>\n+    <message>\n+        <source>Error: Disk space is too low!</source>\n+        <translation>Feil: For lite diskplass!</translation>\n+    </message>\n     <message>\n         <source>Loading banlist...</source>\n         <translation>Laster inn bannlysningsliste\u2026</translation>\n@@ -3262,6 +3582,10 @@\n         <source>Need to specify a port with -whitebind: '%s'</source>\n         <translation>M\u00e5 oppgi en port med -whitebind: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Prune mode is incompatible with -blockfilterindex.</source>\n+        <translation>Beskj\u00e6ringsmodus er inkompatibel med -blokkfilterindex.</translation>\n+    </message>\n     <message>\n         <source>Reducing -maxconnections from %d to %d, because of system limitations.</source>\n         <translation>Reduserer -maxconnections fra %d til %d, pga. systembegrensninger.</translation>\n@@ -3384,6 +3708,14 @@\n         <source>Insufficient funds</source>\n         <translation>Utilstrekkelige midler</translation>\n     </message>\n+    <message>\n+        <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.</source>\n+        <translation>Kan ikke oppgradere en delt lommebok uten HD uten \u00e5 oppgradere til st\u00f8tte for forh\u00e5ndsdelt tastatur. Bruk -upgradewallet = 169900 eller -upgradewallet uten versjon spesifisert.</translation>\n+    </message>\n+    <message>\n+        <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>\n+        <translation>Avgiftsberegning mislyktes. Fallbackfee er deaktivert. Vent et par blokker eller aktiver -fallbackfee.</translation>\n+    </message>\n     <message>\n         <source>Loading block index...</source>\n         <translation>Laster blokkindeks...</translation>"
      },
      {
        "sha": "7f74cb5d50e0cd29adc055e96df9f39462d04b70",
        "filename": "src/qt/locale/bitcoin_ne.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 8,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ne.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ne.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ne.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -55,8 +55,7 @@\n     </message>\n     <message>\n         <source>&amp;Copy Address</source>\n-        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d\n-</translation>\n+        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d</translation>\n     </message>\n     </context>\n <context>\n@@ -191,8 +190,7 @@\n     </message>\n     <message>\n         <source>Copy address</source>\n-        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d\n-</translation>\n+        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d</translation>\n     </message>\n     </context>\n <context>\n@@ -396,8 +394,7 @@\n     <name>TransactionView</name>\n     <message>\n         <source>Copy address</source>\n-        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d\n-</translation>\n+        <translation>\u0920\u0947\u0917\u093e\u0928\u093e \u0915\u092a\u0940 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d</translation>\n     </message>\n     </context>\n <context>\n@@ -416,8 +413,7 @@\n     <name>WalletView</name>\n     <message>\n         <source>&amp;Export</source>\n-        <translation>&amp;amp;\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d\n-</translation>\n+        <translation>&amp;amp;\u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0917\u0930\u094d\u0928\u0941\u0939\u094b\u0938\u094d</translation>\n     </message>\n     <message>\n         <source>Export the data in the current tab to a file</source>"
      },
      {
        "sha": "ad713a8cc82bcceef7049b0dedc5309e33733057",
        "filename": "src/qt/locale/bitcoin_nl.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_nl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_nl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nl.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1789,6 +1789,14 @@ Dit is ideaal voor alleen-lezen portommonees.</translation>\n         <source>Synced Blocks</source>\n         <translation>Gesynchroniseerde blokken</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Het in kaart gebrachte autonome systeem dat wordt gebruikt voor het diversifi\u00ebren van peer-selectie.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>AS in kaart gebracht.</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User Agent</translation>"
      },
      {
        "sha": "552d3e1ca7e8d92777a4b608964f65473b458a7c",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 125,
        "deletions": 1,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Aktualny</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Okno w\u0119z\u0142a</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Otw\u00f3rz konsol\u0119 diagnostyczn\u0105 i debugowanie w\u0119z\u0142\u00f3w</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;Adresy wysy\u0142ania</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;Adresy odbioru</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Otw\u00f3rz URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Otw\u00f3rz Portfel</translation>\n@@ -1023,7 +1035,7 @@\n     </message>\n     <message>\n         <source>Unknown...</source>\n-        <translation>Nienznane...</translation>\n+        <translation>Nieznany...</translation>\n     </message>\n     <message>\n         <source>Last block time</source>\n@@ -1049,13 +1061,25 @@\n         <source>Hide</source>\n         <translation>Ukryj</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Wyjd\u017a</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 jest w trakcie synchronizacji. Trwa pobieranie i weryfikacja nag\u0142\u00f3wk\u00f3w oraz blok\u00f3w z sieci w celu uzyskania aktualnego stanu \u0142a\u0144cucha.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Nieznane. Synchronizowanie nag\u0142\u00f3wk\u00f3w (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Otw\u00f3rz URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1448,6 +1472,10 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' nie jest poprawnym URI. U\u017cyj 'bitcoin:'.</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Nie mo\u017cna przetworzy\u0107 \u017c\u0105dania zap\u0142aty z powodu braku wsparcia BIP70.</translation>\n+    </message>\n     <message>\n         <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n         <translation>Z powodu znanych b\u0142\u0119d\u00f3w bezpiecze\u0144stwa w BIP70 zaleca si\u0119 ignorowa\u0107 wszelkie polecenie od sprzedawcy dotycz\u0105ce zmiany portfela.</translation>\n@@ -1760,10 +1788,22 @@\n         <source>Synced Blocks</source>\n         <translation>Zsynchronizowane bloki</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Zmapowany autonomiczny system (ang. asmap) u\u017cywany do dywersyfikacji wyboru w\u0119z\u0142\u00f3w.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Zmapowany autonomiczny system (ang. asmap)</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Aplikacja kliencka</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Okno w\u0119z\u0142a</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Otw\u00f3rz plik dziennika debugowania %1 z obecnego katalogu z danymi. Mo\u017ce to potrwa\u0107 kilka sekund przy wi\u0119kszych plikach.</translation>\n@@ -1975,6 +2015,14 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Opcjonalna kwota by za\u017c\u0105da\u0107. Zostaw puste lub zero by nie za\u017c\u0105da\u0107 konkretnej kwoty.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Dodatkowa etykieta powi\u0105zana z nowym adresem do odbierania p\u0142atno\u015bci (u\u017cywanym w celu odnalezienia faktury). Jest r\u00f3wnie\u017c powi\u0105zana z \u017c\u0105daniem p\u0142atno\u015bci.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Dodatkowa wiadomo\u015b\u0107 do\u0142\u0105czana do \u017c\u0105dania zap\u0142aty, kt\u00f3ra mo\u017ce by\u0107 odczytana przez p\u0142ac\u0105cego.</translation>\n+    </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n         <translation>&amp;Stw\u00f3rz nowy adres odbiorczy</translation>\n@@ -2229,6 +2277,10 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>Dust:</source>\n         <translation>Py\u0142:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Ukryj ustawienia op\u0142at transakcyjnych</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Gdy ilo\u015b\u0107 transakcji jest mniejsza ni\u017c ilo\u015b\u0107 miejsca w bloku, g\u00f3rnicy i w\u0119z\u0142y przekazuj\u0105ce wymagaj\u0105 minimalnej op\u0142aty. Zap\u0142ata tylko tej warto\u015bci jest dopuszczalna, lecz mo\u017ce skutkowa\u0107 transakcj\u0105 kt\u00f3ra nigdy nie zostanie potwierdzona w sytuacji, gdy ilo\u015b\u0107 transakcji przekroczy przepustowo\u015b\u0107 sieci.</translation>\n@@ -2297,6 +2349,14 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blok\u00f3w)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>&amp;Utw\u00f3rz niepodpisan\u0105 transakcj\u0119</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Tworzy cz\u0119\u015bciowo podpisan\u0105 transakcj\u0119 (ang. PSBT) u\u017cywan\u0105 np. offline z portfelem %1 lub z innym portfelem zgodnym z PSBT.</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation>z portfela '%1'</translation>\n@@ -2309,10 +2369,18 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>%1 to %2</source>\n         <translation>%1 do %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Czy chcesz zapisa\u0107 szkic tej transakcji?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Czy na pewno chcesz wys\u0142a\u0107?</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Prosz\u0119 przejrze\u0107 propozycj\u0119 transakcji. Zostanie utworzona cz\u0119\u015bciowo podpisana transakcja (ang. PSBT), kt\u00f3r\u0105 mo\u017cna skopiowa\u0107, a nast\u0119pnie podpisa\u0107 np. offline z portfelem %1 lub z innym portfelem zgodnym z PSBT.</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>lub</translation>\n@@ -2345,6 +2413,26 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>Confirm send coins</source>\n         <translation>Potwierd\u017a wysy\u0142anie monet</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Potwierd\u017a propozycj\u0119 transakcji</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Skopiuj PSBT do schowka</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Wy\u015blij</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>Skopiowano PSBT</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Kwota na obserwowanych kontach:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Adres odbiorcy jest nieprawid\u0142owy, prosz\u0119 sprawi\u0107 ponownie.</translation>\n@@ -2440,6 +2528,10 @@ Uwaga: Poniewa\u017c op\u0142ata jest naliczana za ka\u017cdy bajt, op\u0142ata \"100 satoshi za\n         <source>Remove this entry</source>\n         <translation>Usu\u0144 ten wpis</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>Kwota do wys\u0142ania w wybranej jednostce</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Op\u0142ata zostanie odj\u0119ta od kwoty wysy\u0142ane.Odbiorca otrzyma mniej ni\u017c bitcoins wpisz w polu kwoty. Je\u015bli wybrano kilku odbiorc\u00f3w, op\u0142ata jest podzielona r\u00f3wno.</translation>\n@@ -2567,6 +2659,14 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Adres Bitcoin, kt\u00f3rym zosta\u0142a podpisana wiadomo\u015b\u0107</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Podpisana wiadomo\u015b\u0107 do weryfikacji</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>Sygnatura podawana przy podpisywaniu wiadomo\u015bci</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Zweryfikuj wiadomo\u015b\u0107,  aby upewni\u0107 si\u0119, \u017ce zosta\u0142a podpisana odpowiednim adresem Bitcoin.</translation>\n@@ -2599,6 +2699,10 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Odblokowanie portfela zosta\u0142o anulowane.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Brak b\u0142\u0119d\u00f3w</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>Klucz prywatny dla podanego adresu nie jest dost\u0119pny.</translation>\n@@ -3134,6 +3238,10 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>Do you want to increase the fee?</source>\n         <translation>Czy chcesz zwi\u0119kszy\u0107 prowizj\u0119?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Czy chcesz zapisa\u0107 szkic transakcji ze zwi\u0119kszon\u0105 op\u0142at\u0105 transakcyjn\u0105?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>Aktualna op\u0142ata:</translation>\n@@ -3150,6 +3258,14 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>Confirm fee bump</source>\n         <translation>Potwierd\u017a zwi\u0119kszenie op\u0142aty</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Nie mo\u017cna zapisa\u0107 szkicu transakcji.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>Skopiowano PSBT</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>Nie mo\u017cna podpisa\u0107 transakcji.</translation>\n@@ -3316,6 +3432,14 @@ Zwr\u00f3\u0107 uwag\u0119, \u017ce poprawnie zweryfikowana wiadomo\u015b\u0107 potwierdza to, \u017ce nadaw\n         <source>Corrupted block database detected</source>\n         <translation>Wykryto uszkodzon\u0105 baz\u0119 blok\u00f3w</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Nie mo\u017cna odnale\u017a\u0107 pliku asmap %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Nie mo\u017cna przetworzy\u0107 pliku asmap %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Czy chcesz teraz przebudowa\u0107 baz\u0119 blok\u00f3w?</translation>"
      },
      {
        "sha": "4df412cfad5678f78d1e51a156cfc699d36f15e2",
        "filename": "src/qt/locale/bitcoin_pt.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pt.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pt.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1789,6 +1789,14 @@\n         <source>Synced Blocks</source>\n         <translation>Blocos Sincronizados</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>O sistema auton\u00f4mo mapeado usado para diversificar a sele\u00e7\u00e3o de pares.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapeado como</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User Agent</translation>"
      },
      {
        "sha": "efd437fb1df52f09eaf1e995d165fc9cfa28e59d",
        "filename": "src/qt/locale/bitcoin_pt_BR.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pt_BR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_pt_BR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pt_BR.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Blocos Sincronizados</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>O sistema aut\u00f4nomo delineado usado para a diversifica\u00e7\u00e3o da sele\u00e7\u00e3o de pares.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapeado como</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>User Agent</translation>\n@@ -1862,7 +1870,7 @@\n     </message>\n     <message>\n         <source>&amp;Network Traffic</source>\n-        <translation>&amp;Tr\u00e1fico de Rede</translation>\n+        <translation>&amp;Tr\u00e1fego da Rede</translation>\n     </message>\n     <message>\n         <source>Totals</source>\n@@ -1930,7 +1938,7 @@\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</source>\n-        <translation>ATEN\u00c7\u00c3O: Fraudadores solicitam a usu\u00e1rios que digitem comandos aqui, e assim roub\u00e3o o conte\u00fado de suas carteiras. N\u00e3o utilize este console sem antes conhecer os comandos e seus efeitos.</translation>\n+        <translation>ATEN\u00c7\u00c3O: Fraudadores solicitam a usu\u00e1rios que digitem comandos aqui, e assim roubam o conte\u00fado de suas carteiras. N\u00e3o utilize este console sem antes conhecer os comandos e seus efeitos.</translation>\n     </message>\n     <message>\n         <source>Network activity disabled</source>"
      },
      {
        "sha": "310aa000e0327f0edfd6f0c1c499a3e172d1e24d",
        "filename": "src/qt/locale/bitcoin_ro.ts",
        "status": "modified",
        "additions": 132,
        "deletions": 4,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ro.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ro.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ro.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -15,7 +15,7 @@\n     </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n-        <translation>Copiaz\u0103 adresa selectat\u0103 \u00een clipboard</translation>\n+        <translation>Copiaz\u0103 adresa selectat\u0103 curent \u00een clipboard</translation>\n     </message>\n     <message>\n         <source>&amp;Copy</source>\n@@ -27,7 +27,7 @@\n     </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n-        <translation>\u015eterge adresa selectat\u0103 din list\u0103</translation>\n+        <translation>\u015eterge adresa selectat\u0103 curent din list\u0103</translation>\n     </message>\n     <message>\n         <source>Enter address or label to search</source>\n@@ -131,6 +131,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>Repeta\u0163i noua fraz\u0103 de acces</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>Arat\u0103 fraza de acces</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Criptare portofel</translation>\n@@ -171,6 +175,18 @@\n         <source>Wallet encrypted</source>\n         <translation>Portofel criptat</translation>\n     </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>Portofel de criptat</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>Portofelul t\u0103u urmeaz\u0103 s\u0103 fie criptat.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>Protofelul t\u0103u este criptat.</translation>\n+    </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n         <translation>IMPORTANT: Orice copie de siguran\u0163\u0103 f\u0103cut\u0103 anterior portofelului dumneavoastr\u0103 ar trebui \u00eenlocuit\u0103 cu cea generat\u0103 cel mai recent, fi\u015fier criptat al portofelului. Pentru siguran\u0163\u0103, copiile de siguran\u0163\u0103 vechi ale portofelului ne-criptat vor deveni inutile imediat ce ve\u0163i \u00eencepe folosirea noului fi\u015fier criptat al portofelului.</translation>\n@@ -293,6 +309,14 @@\n         <source>Open &amp;URI...</source>\n         <translation>Deschide &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Create Wallet...</source>\n+        <translation>Creaz\u0103 portofel...</translation>\n+    </message>\n+    <message>\n+        <source>Create a new wallet</source>\n+        <translation>Creaz\u0103 un portofel nou</translation>\n+    </message>\n     <message>\n         <source>Wallet:</source>\n         <translation>Portofel:</translation>\n@@ -441,6 +465,38 @@\n         <source>Up to date</source>\n         <translation>Actualizat</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Fereastra nodului</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Deschide consola pentru depanare \u015fi diagnosticare a nodului</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Sending addresses</source>\n+        <translation>&amp;Adresele de destinatie</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses</source>\n+        <translation>&amp;Adresele de primire</translation>\n+    </message>\n+    <message>\n+        <source>Open Wallet</source>\n+        <translation>Deschide portofel</translation>\n+    </message>\n+    <message>\n+        <source>Open a wallet</source>\n+        <translation>Deschide un portofel</translation>\n+    </message>\n+    <message>\n+        <source>Close Wallet...</source>\n+        <translation>Inchide portofel...</translation>\n+    </message>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Inchide portofel</translation>\n+    </message>\n     <message>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation>Arat\u0103 mesajul de ajutor %1 pentru a ob\u0163ine o list\u0103 cu op\u0163iunile posibile de linii de comand\u0103 Bitcoin</translation>\n@@ -449,6 +505,10 @@\n         <source>default wallet</source>\n         <translation>portofel implicit</translation>\n     </message>\n+    <message>\n+        <source>No wallets available</source>\n+        <translation>Niciun portofel disponibil</translation>\n+    </message>\n     <message>\n         <source>&amp;Window</source>\n         <translation>&amp;Fereastr\u0103</translation>\n@@ -457,6 +517,14 @@\n         <source>Minimize</source>\n         <translation>Minimizare</translation>\n     </message>\n+    <message>\n+        <source>Zoom</source>\n+        <translation>Zoom</translation>\n+    </message>\n+    <message>\n+        <source>Main Window</source>\n+        <translation>Fereastra principal\u0103</translation>\n+    </message>\n     <message>\n         <source>%1 client</source>\n         <translation>Client %1</translation>\n@@ -473,6 +541,10 @@\n         <source>Error: %1</source>\n         <translation>Eroare: %1</translation>\n     </message>\n+    <message>\n+        <source>Warning: %1</source>\n+        <translation> Aten\u021bionare: %1</translation>\n+    </message>\n     <message>\n         <source>Date: %1\n </source>\n@@ -525,6 +597,10 @@\n         <source>HD key generation is &lt;b&gt;disabled&lt;/b&gt;</source>\n         <translation>Generarea de chei HD este &lt;b&gt;dezactivata&lt;/b&gt;</translation>\n     </message>\n+    <message>\n+        <source>Private key &lt;b&gt;disabled&lt;/b&gt;</source>\n+        <translation>Cheia privat\u0103 &lt;b&gt;dezactivat\u0103&lt;/b&gt;</translation>\n+    </message>\n     <message>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;unlocked&lt;/b&gt;</source>\n         <translation>Portofelul este &lt;b&gt;criptat&lt;/b&gt; iar \u00een momentul de fa\u0163\u0103 este &lt;b&gt;deblocat&lt;/b&gt;</translation>\n@@ -691,10 +767,46 @@\n </context>\n <context>\n     <name>CreateWalletActivity</name>\n-    </context>\n+    <message>\n+        <source>Create wallet failed</source>\n+        <translation>Crearea portofelului a e\u015fuat</translation>\n+    </message>\n+    <message>\n+        <source>Create wallet warning</source>\n+        <translation>Atentionare la crearea portofelului</translation>\n+    </message>\n+</context>\n <context>\n     <name>CreateWalletDialog</name>\n-    </context>\n+    <message>\n+        <source>Create Wallet</source>\n+        <translation>Creaz\u0103 portofel</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Name</source>\n+        <translation>Numele portofelului</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt the wallet. The wallet will be encrypted with a passphrase of your choice.</source>\n+        <translation>Cripteaz\u0103 portofelul. Portofelul va fi criptat cu fraza de acces aleas\u0103.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt Wallet</source>\n+        <translation>Cripteaz\u0103 portofelul.</translation>\n+    </message>\n+    <message>\n+        <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n+        <translation>Dezactiveaz\u0103 cheile private pentru acest portofel. Portofelele cu cheile private dezactivate nu vor avea chei private \u015fi nu vor putea avea saman\u0163\u0103 HD sau chei private importate. Ideal pentru portofele marcate doar pentru citire.</translation>\n+    </message>\n+    <message>\n+        <source>Disable Private Keys</source>\n+        <translation>Dezactiveaz\u0103 cheile private</translation>\n+    </message>\n+    <message>\n+        <source>Create</source>\n+        <translation>Creeaz\u0103</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -1572,6 +1684,10 @@\n         <source>User Agent</source>\n         <translation>Agent utilizator</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Fereastra nodului</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Deschide fi\u015fierul jurnal depanare %1 din directorul curent. Aceasta poate dura cateva secunde pentru fi\u015fierele mai mari.</translation>\n@@ -2092,6 +2208,10 @@ Nota: Cum taxa este calculata per byte, o taxa de \"100 satoshi per kB\" pentru o\n         <source>%1 (%2 blocks)</source>\n         <translation>%1(%2 blocuri)</translation>\n     </message>\n+    <message>\n+        <source> from wallet '%1'</source>\n+        <translation>din portofelul '%1'</translation>\n+    </message>\n     <message>\n         <source>%1 to %2</source>\n         <translation>%1 la %2</translation>\n@@ -2555,6 +2675,10 @@ Nota: Cum taxa este calculata per byte, o taxa de \"100 satoshi per kB\" pentru o\n         <source>Output index</source>\n         <translation>Index debit</translation>\n     </message>\n+    <message>\n+        <source> (Certificate was not verified)</source>\n+        <translation>(Certificatul nu a fost verificat)</translation>\n+    </message>\n     <message>\n         <source>Merchant</source>\n         <translation>Comerciant</translation>\n@@ -2874,6 +2998,10 @@ Nota: Cum taxa este calculata per byte, o taxa de \"100 satoshi per kB\" pentru o\n </context>\n <context>\n     <name>WalletController</name>\n+    <message>\n+        <source>Close wallet</source>\n+        <translation>Inchide portofel</translation>\n+    </message>\n     </context>\n <context>\n     <name>WalletFrame</name>"
      },
      {
        "sha": "4b063eb201352cfd491be4174497578ff7291e5f",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 146,
        "deletions": 42,
        "changes": 188,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -181,7 +181,7 @@\n     </message>\n     <message>\n         <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430.&lt;br/&gt;\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 &lt;b&gt;\u0434\u0435\u0441\u044f\u0442\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432&lt;/b&gt;, \u0438\u043b\u0438 &lt;b&gt;\u0432\u043e\u0441\u044c\u043c\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0432&lt;/b&gt;.</translation>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430.&lt;br/&gt;\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 &lt;b&gt;\u0434\u0435\u0441\u044f\u0442\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0445 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432&lt;/b&gt; \u0438\u043b\u0438 &lt;b&gt;\u0432\u043e\u0441\u044c\u043c\u0438 \u0438\u043b\u0438 \u0431\u043e\u043b\u0435\u0435 \u0441\u043b\u043e\u0432&lt;/b&gt;.</translation>\n     </message>\n     <message>\n         <source>Enter the old passphrase and new passphrase for the wallet.</source>\n@@ -205,7 +205,7 @@\n     </message>\n     <message>\n         <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n-        <translation>\u0412\u0410\u0416\u041d\u041e: \u043b\u044e\u0431\u044b\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u0432\u0430\u043c\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u043c \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430. \u0412 \u0446\u0435\u043b\u044f\u0445 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438, \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u0438 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 \u0443\u0442\u0440\u0430\u0442\u044f\u0442 \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430.</translation>\n+        <translation>\u0412\u0410\u0416\u041d\u041e: \u043b\u044e\u0431\u044b\u0435 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u0432\u0430\u043c\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u043e\u0432\u044b\u043c \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c, \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0444\u0430\u0439\u043b\u043e\u043c \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430. \u0412 \u0446\u0435\u043b\u044f\u0445 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0435 \u0440\u0435\u0437\u0435\u0440\u0432\u043d\u044b\u0435 \u043a\u043e\u043f\u0438\u0438 \u043d\u0435\u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 \u0443\u0442\u0440\u0430\u0442\u044f\u0442 \u043f\u0440\u0438\u0433\u043e\u0434\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u043b\u0435 \u043d\u0430\u0447\u0430\u043b\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u0437\u0430\u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430.</translation>\n     </message>\n     <message>\n         <source>Wallet encryption failed</source>\n@@ -399,11 +399,11 @@\n     </message>\n     <message>\n         <source>Sign messages with your Bitcoin addresses to prove you own them</source>\n-        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438 \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0438\u043c\u0435\u043d\u043d\u043e \u0412\u044b</translation>\n+        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c, \u0447\u0442\u043e \u044d\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0438\u043c\u0435\u043d\u043d\u043e \u0432\u044b</translation>\n     </message>\n     <message>\n         <source>Verify messages to ensure they were signed with specified Bitcoin addresses</source>\n-        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438</translation>\n+        <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u044b \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441\u0430\u043c\u0438</translation>\n     </message>\n     <message>\n         <source>&amp;File</source>\n@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>\u0413\u043e\u0442\u043e\u0432</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u041e\u043a\u043d\u043e \u0443\u0437\u043b\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u0438 \u0434\u0438\u0430\u0433\u043d\u043e\u0441\u0442\u0438\u043a\u0438 \u0443\u0437\u043b\u0430</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;\u0410\u0434\u0440\u0435\u0441\u0430 \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;\u0410\u0434\u0440\u0435\u0441\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0439</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u0431\u0438\u0442\u043a\u043e\u0439\u043d: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u041a\u043e\u0448\u0435\u043b\u0451\u043a</translation>\n@@ -808,15 +820,15 @@\n     </message>\n     <message>\n         <source>Disable private keys for this wallet. Wallets with private keys disabled will have no private keys and cannot have an HD seed or imported private keys. This is ideal for watch-only wallets.</source>\n-        <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430. \u041a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u0441 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u043c\u0438 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 HD \u043c\u0430\u0441\u0442\u0435\u0440-\u043a\u043b\u044e\u0447 \u0438\u043b\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438. \u042d\u0442\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430\u043c \u0434\u043b\u044f \u0447\u0430\u0441\u043e\u0432.</translation>\n+        <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430. \u041a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u0441 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u043c\u0438 \u043a\u043b\u044e\u0447\u0430\u043c\u0438 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438 HD \u043c\u0430\u0441\u0442\u0435\u0440-\u043a\u043b\u044e\u0447\u0430 \u0438\u043b\u0438 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439. \u042d\u0442\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430\u043c \u0434\u043b\u044f \u0447\u0430\u0441\u043e\u0432.</translation>\n     </message>\n     <message>\n         <source>Disable Private Keys</source>\n         <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438</translation>\n     </message>\n     <message>\n         <source>Make a blank wallet. Blank wallets do not initially have private keys or scripts. Private keys and addresses can be imported, or an HD seed can be set, at a later time.</source>\n-        <translation>\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u043a\u043e\u0448\u0435\u043b\u0451\u043a. \u0427\u0438\u0441\u0442\u044b\u0435 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438\u043b\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432. \u041f\u043e\u0437\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u0430\u0434\u0440\u0435\u0441\u0430, \u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c HD \u043c\u0430\u0441\u0442\u0435\u0440-\u043a\u043b\u044e\u0447.</translation>\n+        <translation>\u0421\u0434\u0435\u043b\u0430\u0442\u044c \u043f\u0443\u0441\u0442\u043e\u0439 \u043a\u043e\u0448\u0435\u043b\u0451\u043a. \u0427\u0438\u0441\u0442\u044b\u0435 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0445 \u043a\u043b\u044e\u0447\u0435\u0439 \u0438\u043b\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432. \u041f\u043e\u0437\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0440\u0438\u0432\u0430\u0442\u043d\u044b\u0435 \u043a\u043b\u044e\u0447\u0438 \u0438 \u0430\u0434\u0440\u0435\u0441\u0430 \u0438\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c HD \u043c\u0430\u0441\u0442\u0435\u0440-\u043a\u043b\u044e\u0447.</translation>\n     </message>\n     <message>\n         <source>Make Blank Wallet</source>\n@@ -944,7 +956,7 @@\n     </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n-        <translation>\u041f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0447\u0435\u043d\u044c \u0441\u043b\u043e\u0436\u043d\u0430 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u044f\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0441 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u043d\u0435\u0437\u0430\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u043c\u0438. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0435 %1, \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0441 \u0442\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u0430, \u0433\u0434\u0435 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0441\u044f.</translation>\n+        <translation>\u041f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043e\u0447\u0435\u043d\u044c \u0441\u043b\u043e\u0436\u043d\u0430 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u044f\u0432\u0438\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0441 \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432\u0430\u0448\u0435\u0433\u043e \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0440\u0430\u043d\u0435\u0435 \u043e\u0441\u0442\u0430\u0432\u0430\u043b\u0438\u0441\u044c \u043d\u0435\u0437\u0430\u043c\u0435\u0447\u0435\u043d\u043d\u044b\u043c\u0438. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437, \u043a\u043e\u0433\u0434\u0430 \u0432\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0435 %1, \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0435\u043d\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0441 \u043c\u0435\u0441\u0442\u0430 \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438.</translation>\n     </message>\n     <message>\n         <source>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</source>\n@@ -1049,13 +1061,25 @@\n         <source>Hide</source>\n         <translation>\u0421\u043f\u0440\u044f\u0442\u0430\u0442\u044c</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>\u0412\u044b\u0439\u0442\u0438</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043e. \u0417\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438 \u0431\u043b\u043e\u043a\u0438 \u0431\u0443\u0434\u0443\u0442 \u0441\u043a\u0430\u0447\u0438\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0443\u0437\u043b\u043e\u0432 \u0441\u0435\u0442\u0438 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c\u0441\u044f \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440 \u043f\u043e\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u043a\u043e\u043d\u0435\u0446 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c URI \u0431\u0438\u0442\u043a\u043e\u0439\u043d\u0430</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1112,7 +1136,7 @@\n     </message>\n     <message>\n         <source>Shows if the supplied default SOCKS5 proxy is used to reach peers via this network type.</source>\n-        <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e, \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0443\u0437\u043b\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u043e\u0442 \u0442\u0438\u043f \u0441\u0435\u0442\u0438.</translation>\n+        <translation>\u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043b\u0438 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0443\u0437\u043b\u0430\u043c \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u043e\u0442 \u0442\u0438\u043f \u0441\u0435\u0442\u0438.</translation>\n     </message>\n     <message>\n         <source>Use separate SOCKS&amp;5 proxy to reach peers via Tor hidden services:</source>\n@@ -1132,7 +1156,7 @@\n     </message>\n     <message>\n         <source>Third party URLs (e.g. a block explorer) that appear in the transactions tab as context menu items. %s in the URL is replaced by transaction hash. Multiple URLs are separated by vertical bar |.</source>\n-        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL-\u0430\u0434\u0440\u0435\u0441\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u043e\u0437\u0440\u0435\u0432\u0430\u0442\u0435\u043b\u044c \u0431\u043b\u043e\u043a\u043e\u0432) , \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043a\u0430\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u044d\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e URL-\u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n+        <translation>\u0421\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u0435 URL-\u0430\u0434\u0440\u0435\u0441\u0430 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043e\u0431\u043e\u0437\u0440\u0435\u0432\u0430\u0442\u0435\u043b\u044c \u0431\u043b\u043e\u043a\u043e\u0432), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043a\u0430\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u044e. %s \u0432 URL \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0445\u044d\u0448\u0435\u043c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438. \u041d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e URL-\u0430\u0434\u0440\u0435\u0441\u043e\u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0447\u0435\u0440\u0442\u043e\u0439 |.</translation>\n     </message>\n     <message>\n         <source>Open the %1 configuration file from the working directory.</source>\n@@ -1156,7 +1180,7 @@\n     </message>\n     <message>\n         <source>Disables some advanced features but all blocks will still be fully validated. Reverting this setting requires re-downloading the entire blockchain. Actual disk usage may be somewhat higher.</source>\n-        <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043d\u043e \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u044b. \u0414\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043a \u044d\u0442\u043e\u043c\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0432\u0435\u0441\u044c \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d. \u0424\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0438\u0441\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0448\u0435.</translation>\n+        <translation>\u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043d\u043e \u0432\u0441\u0435 \u0431\u043b\u043e\u043a\u0438 \u043f\u043e-\u043f\u0440\u0435\u0436\u043d\u0435\u043c\u0443 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u044b. \u0414\u043b\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u043a \u044d\u0442\u043e\u043c\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0432\u0435\u0441\u044c \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d. \u0424\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0438\u0441\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0431\u043e\u043b\u044c\u0448\u0435.</translation>\n     </message>\n     <message>\n         <source>Prune &amp;block storage to</source>\n@@ -1192,15 +1216,15 @@\n     </message>\n     <message>\n         <source>If you disable the spending of unconfirmed change, the change from a transaction cannot be used until that transaction has at least one confirmation. This also affects how your balance is computed.</source>\n-        <translation>\u041f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0442\u0440\u0430\u0442\u044b \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u043e\u0439 \u0441\u0434\u0430\u0447\u0438, \u0441\u0434\u0430\u0447\u0430 \u043e\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440 \u043f\u043e\u043a\u0430 \u0443 \u044d\u0442\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \u043a\u0430\u043a \u0432\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f.</translation>\n+        <translation>\u041f\u0440\u0438 \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438 \u0442\u0440\u0430\u0442\u044b \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0451\u043d\u043d\u043e\u0439 \u0441\u0434\u0430\u0447\u0438 \u0441\u0434\u0430\u0447\u0430 \u043e\u0442 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440 \u043f\u043e\u043a\u0430 \u0443 \u044d\u0442\u043e\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435. \u042d\u0442\u043e \u0442\u0430\u043a\u0436\u0435 \u0432\u043b\u0438\u044f\u0435\u0442 \u043a\u0430\u043a \u0432\u0430\u0448 \u0431\u0430\u043b\u0430\u043d\u0441 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f.</translation>\n     </message>\n     <message>\n         <source>&amp;Spend unconfirmed change</source>\n         <translation>&amp;\u0422\u0440\u0430\u0442\u0438\u0442\u044c \u043d\u0435\u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u043d\u0443\u044e \u0441\u0434\u0430\u0447\u0443</translation>\n     </message>\n     <message>\n         <source>Automatically open the Bitcoin client port on the router. This only works when your router supports UPnP and it is enabled.</source>\n-        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0435. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0412\u0430\u0448 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 UPnP, \u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430.</translation>\n+        <translation>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u043f\u043e\u0440\u0442 \u0434\u043b\u044f \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0430 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440\u0435. \u0420\u0430\u0431\u043e\u0442\u0430\u0435\u0442, \u0435\u0441\u043b\u0438 \u0432\u0430\u0448 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0442\u043e\u0440 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 UPnP, \u0438 \u0434\u0430\u043d\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0430.</translation>\n     </message>\n     <message>\n         <source>Map port using &amp;UPnP</source>\n@@ -1216,7 +1240,7 @@\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a SOCKS5 proxy.</source>\n-        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0441\u044f \u043a \u0441\u0435\u0442\u0438 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5.</translation>\n+        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0442\u0438 \u0411\u0438\u0442\u043a\u043e\u0439\u043d \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5.</translation>\n     </message>\n     <message>\n         <source>&amp;Connect through SOCKS5 proxy (default proxy):</source>\n@@ -1252,7 +1276,7 @@\n     </message>\n     <message>\n         <source>Connect to the Bitcoin network through a separate SOCKS5 proxy for Tor hidden services.</source>\n-        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u0441\u044f \u043a \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0441\u0435\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5 \u0434\u043b\u044f \u0441\u043a\u0440\u044b\u0442\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 Tor.</translation>\n+        <translation>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0442\u044c\u0441\u044f \u043a \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0441\u0435\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u043a\u0441\u0438 SOCKS5 \u0434\u043b\u044f \u0441\u043a\u0440\u044b\u0442\u044b\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432 Tor.</translation>\n     </message>\n     <message>\n         <source>&amp;Window</source>\n@@ -1383,7 +1407,7 @@\n     </message>\n     <message>\n         <source>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</source>\n-        <translation>\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0432\u0441\u0435\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b, \u0438 \u0434\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0441\u0445\u043e\u0434\u043d\u043e\u043c \u0431\u0430\u043b\u0430\u043d\u0441\u0435</translation>\n+        <translation>\u041e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0432\u0441\u0435\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e \u0441\u0438\u0445 \u043f\u043e\u0440 \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u044b \u0438 \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u0440\u0430\u0441\u0445\u043e\u0434\u043d\u043e\u043c \u0431\u0430\u043b\u0430\u043d\u0441\u0435</translation>\n     </message>\n     <message>\n         <source>Immature:</source>\n@@ -1446,7 +1470,11 @@\n     </message>\n     <message>\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n-        <translation>'bitcoin://' \u043d\u0435 \u0432\u0435\u0440\u043d\u044b\u0439 URI. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'bitcoin:' \u0432\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e.</translation>\n+        <translation>'bitcoin://' \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 URI. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 'bitcoin:' \u0432\u043c\u0435\u0441\u0442\u043e \u044d\u0442\u043e\u0433\u043e.</translation>\n+    </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441 \u043f\u043b\u0430\u0442\u0435\u0436\u0430, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e BIP70 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f.</translation>\n     </message>\n     <message>\n         <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n@@ -1552,15 +1580,15 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n week(s)</source>\n-        <translation><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u0438</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform></translation>\n+        <translation><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044f</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform><numerusform>%n \u043d\u0435\u0434\u0435\u043b\u044c</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 \u0438 %2</translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n year(s)</source>\n-        <translation><numerusform>%n \u0433\u043e\u0434</numerusform><numerusform>%n \u043b\u0435\u0442</numerusform><numerusform>%n \u043b\u0435\u0442</numerusform><numerusform>%n \u043b\u0435\u0442</numerusform></translation>\n+        <translation><numerusform>%n \u0433\u043e\u0434</numerusform><numerusform>%n \u0433\u043e\u0434\u0430</numerusform><numerusform>%n \u043b\u0435\u0442</numerusform><numerusform>%n \u043b\u0435\u0442</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 B</source>\n@@ -1584,7 +1612,7 @@\n     </message>\n     <message>\n         <source>Error: Cannot parse configuration file: %1.</source>\n-        <translation>\u041e\u0448\u0438\u0431\u043a\u0430 : \u041d\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: %1.</translation>\n+        <translation>\u041e\u0448\u0438\u0431\u043a\u0430 : \u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u0442\u044c \u0444\u0430\u0439\u043b \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: %1.</translation>\n     </message>\n     <message>\n         <source>Error: %1</source>\n@@ -1619,15 +1647,15 @@\n     </message>\n     <message>\n         <source>QR code support not available.</source>\n-        <translation>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 QR \u043a\u043e\u0434\u043e\u0432 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430.</translation>\n+        <translation>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 QR \u043a\u043e\u0434\u043e\u0432 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430.</translation>\n     </message>\n     <message>\n         <source>Save QR Code</source>\n         <translation>\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c QR-\u043a\u043e\u0434</translation>\n     </message>\n     <message>\n         <source>PNG Image (*.png)</source>\n-        <translation>PNG\u00a0\u041a\u0430\u0440\u0442\u0438\u043d\u043a\u0430 (*.png)</translation>\n+        <translation>PNG Image (*.png)</translation>\n     </message>\n </context>\n <context>\n@@ -1760,10 +1788,22 @@\n         <source>Synced Blocks</source>\n         <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043e \u0431\u043b\u043e\u043a\u043e\u0432</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>The mapped Autonomous System used for diversifying peer selection.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapped AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0430\u0433\u0435\u043d\u0442</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>\u041e\u043a\u043d\u043e \u0443\u0437\u043b\u0430</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>\u041e\u0442\u043a\u0440\u044b\u0442\u044c \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u044b\u0439 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b %1 \u0441 \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u043a\u0430\u0442\u0430\u043b\u043e\u0433\u0430 \u0434\u0430\u043d\u043d\u044b\u0445. \u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043b\u043e\u0433-\u0444\u0430\u0439\u043b\u043e\u0432 \u044d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043d\u044f\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434.</translation>\n@@ -1870,7 +1910,7 @@\n     </message>\n     <message>\n         <source>&amp;Disconnect</source>\n-        <translation>&amp;\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u0441\u044f</translation>\n+        <translation>&amp;\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f</translation>\n     </message>\n     <message>\n         <source>Ban for</source>\n@@ -1882,7 +1922,7 @@\n     </message>\n     <message>\n         <source>Welcome to the %1 RPC console.</source>\n-        <translation>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 %1 RPC \u043a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n+        <translation>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 %1 RPC-\u043a\u043e\u043d\u0441\u043e\u043b\u044c</translation>\n     </message>\n     <message>\n         <source>Use up and down arrows to navigate history, and %1 to clear screen.</source>\n@@ -1894,7 +1934,7 @@\n     </message>\n     <message>\n         <source>For more information on using this console type %1.</source>\n-        <translation>\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0439 \u043a\u043e\u043d\u0441\u043e\u043b\u0438, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 %1.</translation>\n+        <translation>\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438 \u044d\u0442\u043e\u0439 \u043a\u043e\u043d\u0441\u043e\u043b\u0438 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 %1.</translation>\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramifications of a command.</source>\n@@ -1973,7 +2013,15 @@\n     </message>\n     <message>\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n-        <translation>\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043f\u0443\u0441\u0442\u044b\u043c \u0438\u043b\u0438 \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u043d\u043e\u043b\u044c, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u0438\u0442\u044c \u043d\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443.</translation>\n+        <translation>\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041e\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043f\u0443\u0441\u0442\u044b\u043c \u0438\u043b\u0438 \u0443\u043a\u0430\u0436\u0438\u0442\u0435 \u043d\u043e\u043b\u044c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443.</translation>\n+    </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043c\u0435\u0442\u043a\u0430, \u0430\u0441\u0441\u043e\u0446\u0438\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441 \u043d\u043e\u0432\u044b\u043c \u0430\u0434\u0440\u0435\u0441\u043e\u043c \u043f\u0440\u0438\u0451\u043c\u0430 (\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432\u0430\u043c\u0438, \u0447\u0442\u043e\u0431\u044b \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u0441\u0447\u0451\u0442). \u0422\u0430\u043a\u0436\u0435 \u043e\u043d\u0430 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442\u0441\u044f \u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u043f\u043b\u0430\u0442\u0435\u0436\u0430.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>\u041d\u0435\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u044f\u0435\u0442\u0441\u044f \u043a \u0437\u0430\u043f\u0440\u043e\u0441\u0443 \u043f\u043b\u0430\u0442\u0435\u0436\u0430 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u043e\u043a\u0430\u0437\u0430\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044e.</translation>\n     </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n@@ -1989,7 +2037,7 @@\n     </message>\n     <message>\n         <source>Native segwit addresses (aka Bech32 or BIP-173) reduce your transaction fees later on and offer better protection against typos, but old wallets don't support them. When unchecked, an address compatible with older wallets will be created instead.</source>\n-        <translation>\"\u0420\u043e\u0434\u043d\u044b\u0435\" segwit \u0430\u0434\u0440\u0435\u0441\u0430 (Bech32 \u0438\u043b\u0438 BIP-173) \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0442 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u0432\u0430\u0448\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u044f\u0442 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u043f\u0435\u0447\u0430\u0442\u043e\u043a, \u043e\u0434\u043d\u0430\u043a\u043e \u0441\u0442\u0430\u0440\u044b\u0435 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u044d\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0430. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u043e \u0441\u0442\u0430\u0440\u044b\u043c\u0438 \u043a\u043e\u0448\u0435\u043b\u0451\u043a.</translation>\n+        <translation>\"\u0420\u043e\u0434\u043d\u044b\u0435\" segwit-\u0430\u0434\u0440\u0435\u0441\u0430 (Bech32 \u0438\u043b\u0438 BIP-173) \u0432 \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u043c \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0442 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u0432\u0430\u0448\u0438\u0445 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439 \u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u044f\u0442 \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u043d\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u043f\u0435\u0447\u0430\u0442\u043e\u043a, \u043e\u0434\u043d\u0430\u043a\u043e \u0441\u0442\u0430\u0440\u044b\u0435 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0438 \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u044d\u0442\u0438 \u0430\u0434\u0440\u0435\u0441\u0430. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d\u043e, \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u043d \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u0439 \u0441\u043e \u0441\u0442\u0430\u0440\u044b\u043c\u0438 \u043a\u043e\u0448\u0435\u043b\u0451\u043a.</translation>\n     </message>\n     <message>\n         <source>Generate native segwit (Bech32) address</source>\n@@ -2190,15 +2238,15 @@\n Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis per kB\" for a transaction size of 500 bytes (half of 1 kB) would ultimately yield a fee of only 50 satoshis.</source>\n         <translation>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0443\u044e \u043f\u043b\u0430\u0442\u0443 \u0437\u0430 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442 (1000 \u0431\u0430\u0439\u0442) \u0432\u0438\u0440\u0442\u0443\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.\n \n-\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0422\u0430\u043a \u043a\u0430\u043a \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0430\u0439\u0442\u0430, \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f  \"100 \u0441\u0430\u0442\u043e\u0448\u0435\u0439 \u0437\u0430 \u041a\u0411 \" \u0434\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c 500 \u0431\u0430\u0439\u0442 (\u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 1 \u041a\u0411) \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0441\u0447\u0435\u0442\u0435, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0441\u0431\u043e\u0440\u0443 \u0442\u043e\u043b\u044c\u043a\u043e 50 \u0441\u0430\u0442\u043e\u0448\u0435\u0439.</translation>\n+\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0422\u0430\u043a \u043a\u0430\u043a \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0431\u0430\u0439\u0442\u0430, \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f  \"100 \u0441\u0430\u0442\u043e\u0448\u0435\u0439 \u0437\u0430 \u041a\u0411 \" \u0434\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c 500 \u0431\u0430\u0439\u0442 (\u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 1 \u041a\u0411) \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0441\u0447\u0435\u0442\u0435 \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0441\u0431\u043e\u0440\u0443 \u0442\u043e\u043b\u044c\u043a\u043e 50 \u0441\u0430\u0442\u043e\u0448\u0435\u0439.</translation>\n     </message>\n     <message>\n         <source>per kilobyte</source>\n         <translation>\u0437\u0430 \u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442</translation>\n     </message>\n     <message>\n         <source>Hide</source>\n-        <translation>\u0421\u043f\u0440\u044f\u0442\u0430\u0442\u044c</translation>\n+        <translation>\u0421\u043a\u0440\u044b\u0442\u044c</translation>\n     </message>\n     <message>\n         <source>Recommended:</source>\n@@ -2300,6 +2348,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 \u0431\u043b\u043e\u043a\u043e\u0432)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u0411\u0435\u0437 \u041f\u043e\u0434\u043f\u0438\u0441\u0438</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation>\u0441 \u043a\u043e\u0448\u0435\u043b\u044c\u043a\u0430 '%1'</translation>\n@@ -2312,10 +2368,18 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>%1 to %2</source>\n         <translation>\u0421 %1 \u043d\u0430 %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443?</translation>\n     </message>\n+    <message>\n+        <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>\u0438\u043b\u0438</translation>\n@@ -2348,10 +2412,26 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm send coins</source>\n         <translation>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443 \u043c\u043e\u043d\u0435\u0442</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u043d\u0443\u044e \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>\u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c PSBT \u0432 \u0431\u0443\u0444\u0435\u0440 \u043e\u0431\u043c\u0435\u043d\u0430</translation>\n+    </message>\n     <message>\n         <source>Send</source>\n         <translation>\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c</translation>\n     </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0430</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>\u0411\u0430\u043b\u0430\u043d\u0441 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0430:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>\u0410\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435.</translation>\n@@ -2447,6 +2527,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Remove this entry</source>\n         <translation>\u0423\u0434\u0430\u043b\u0438\u0442\u044c \u044d\u0442\u0443 \u0437\u0430\u043f\u0438\u0441\u044c</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>The amount to send in the selected unit</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>\u0421 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c\u043e\u0439 \u0441\u0443\u043c\u043c\u044b \u0431\u0443\u0434\u0435\u0442 \u0443\u0434\u0435\u0440\u0436\u0430\u043d\u0430 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f. \u041f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044e \u043f\u0440\u0438\u0434\u0451\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 \u0431\u0438\u0442\u043a\u043e\u0439\u043d\u043e\u0432, \u0447\u0435\u043c \u0432\u044b \u0432\u0432\u043e\u0434\u0438\u0442\u0435 \u0432 \u043f\u043e\u043b\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b\u0431\u0440\u0430\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0440\u043e\u0432\u043d\u0443.</translation>\n@@ -2465,7 +2549,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>This is an unauthenticated payment request.</source>\n-        <translation>\u042d\u0442\u043e \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443.</translation>\n+        <translation>\u042d\u0442\u043e \u043d\u0435\u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043d\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u043e\u043f\u043b\u0430\u0442\u0443.</translation>\n     </message>\n     <message>\n         <source>This is an authenticated payment request.</source>\n@@ -2477,7 +2561,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>A message that was attached to the bitcoin: URI which will be stored with the transaction for your reference. Note: This message will not be sent over the Bitcoin network.</source>\n-        <translation>\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u043e\u0435 \u043a \u0431\u0438\u0442\u043a\u043e\u0439\u043d \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0435\u0439 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f. \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435: \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u0442\u044c \u0411\u0438\u0442\u043a\u043e\u0439\u043d.</translation>\n+        <translation>\u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u0440\u0438\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u043e\u0435 \u043a \u0431\u0438\u0442\u043a\u043e\u0439\u043d-\u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443, \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043e \u0432\u043c\u0435\u0441\u0442\u0435 \u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0435\u0439 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f. \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435: \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u0442\u044c \u0411\u0438\u0442\u043a\u043e\u0439\u043d.</translation>\n     </message>\n     <message>\n         <source>Pay To:</source>\n@@ -2567,12 +2651,20 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n-        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0438\u0436\u0435 \u0430\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0442\u0430\u0431\u044b \u0438 \u0442.\u043f. \u0432 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b) \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043b\u0438\u0448\u043d\u0435\u0433\u043e \u0432 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u043f\u043e \u0441\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044e \u0441 \u0441\u0430\u043c\u0438\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c\u044b\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0441\u0442\u0430\u0442\u044c \u0436\u0435\u0440\u0442\u0432\u043e\u0439 \u0430\u0442\u0430\u043a\u0438 \"man-in-the-middle\". \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u0447\u0442\u043e \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u0438\u0448\u044c \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0432\u0448\u0435\u0433\u043e, \u043d\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n+        <translation>\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0438\u0436\u0435 \u0430\u0434\u0440\u0435\u0441 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u0435\u043b\u044f, \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (\u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u044b \u0441\u0442\u0440\u043e\u043a, \u043f\u0440\u043e\u0431\u0435\u043b\u044b, \u0442\u0430\u0431\u044b \u0438 \u0442.\u043f. \u0432 \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b) \u0438 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0435 \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043b\u0438 \u043b\u0438\u0448\u043d\u0435\u0433\u043e \u0432 \u043f\u043e\u0434\u043f\u0438\u0441\u044c, \u0441\u0440\u0430\u0432\u043d\u0438\u0432 \u0441 \u0441\u0430\u043c\u0438\u043c \u043f\u043e\u0434\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c\u044b\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0441\u0442\u0430\u0442\u044c \u0436\u0435\u0440\u0442\u0432\u043e\u0439 \u0430\u0442\u0430\u043a\u0438 \"man-in-the-middle\". \u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u0447\u0442\u043e \u044d\u0442\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u0438\u0448\u044c \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0432\u0448\u0435\u0433\u043e, \u043d\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n     </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>\u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>\u041f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>The signature given when the message was signed</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e\u0431\u044b \u0443\u0431\u0435\u0434\u0438\u0442\u044c\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c \u0411\u0438\u0442\u043a\u043e\u0439\u043d-\u0430\u0434\u0440\u0435\u0441\u043e\u043c</translation>\n@@ -2646,7 +2738,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     <name>TrafficGraphWidget</name>\n     <message>\n         <source>KB/s</source>\n-        <translation>\u041a\u0411/\u0441\u0435\u043a</translation>\n+        <translation>\u041a\u0411/\u0441</translation>\n     </message>\n </context>\n <context>\n@@ -2661,7 +2753,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>conflicted with a transaction with %1 confirmations</source>\n-        <translation>\u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0435\u0439 \u0441 %1 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0439</translation>\n+        <translation>\u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442 \u0441 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0435\u0439 \u0441 %1 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u044f\u043c\u0438</translation>\n     </message>\n     <message>\n         <source>0/unconfirmed, %1</source>\n@@ -3070,7 +3162,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>ID</source>\n-        <translation>\u0418\u041d</translation>\n+        <translation>ID</translation>\n     </message>\n     <message>\n         <source>Exporting Failed</source>\n@@ -3144,6 +3236,10 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Do you want to increase the fee?</source>\n         <translation>\u0416\u0435\u043b\u0430\u0435\u0442\u0435 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044e?</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Do you want to draft a transaction with fee increase?</translation>\n+    </message>\n     <message>\n         <source>Current fee:</source>\n         <translation>\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f:</translation>\n@@ -3160,6 +3256,14 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <source>Confirm fee bump</source>\n         <translation>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043e\u043f\u043b\u0430\u0442\u0443</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u043d\u043e\u0432\u0438\u043a \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0430</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e</translation>\n@@ -3248,7 +3352,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Cannot obtain a lock on data directory %s. %s is probably already running.</source>\n-        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u043d\u044b\u0445 %s. %s \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.</translation>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u0434\u0430\u043d\u043d\u044b\u0445 %s. %s, \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442.</translation>\n     </message>\n     <message>\n         <source>Cannot provide specific connections and have addrman find outgoing connections at the same.</source>\n@@ -3260,23 +3364,23 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.</source>\n-        <translation>\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430 \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 \u0434\u0430\u0442\u044b \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435! \u0415\u0441\u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043d\u0435\u0432\u0435\u0440\u043d\u043e, %s \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e.</translation>\n+        <translation>\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0443\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0438 \u0434\u0430\u0442\u044b \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435! \u0415\u0441\u043b\u0438 \u0432\u0440\u0435\u043c\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043e \u043d\u0435\u0432\u0435\u0440\u043d\u043e, %s \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e.</translation>\n     </message>\n     <message>\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u043d\u0435\u0441\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 \u0432\u043a\u043b\u0430\u0434, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0439\u0434\u0435\u0442\u0435 %s \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438. \u041f\u043e\u0441\u0435\u0442\u0438\u0442\u0435 %s \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u043c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0438.</translation>\n     </message>\n     <message>\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n-        <translation>\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u043b\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0431\u0443\u0434\u0443\u0449\u0435\u0433\u043e. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0438\u0437-\u0437\u0430 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435. \u041e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0431\u0430\u0437\u0443 \u0431\u043b\u043e\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0432\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b.</translation>\n+        <translation>\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u043b\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0431\u0443\u0434\u0443\u0449\u0435\u0433\u043e. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0442\u0438 \u0438\u0437-\u0437\u0430 \u043d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u0442\u044b \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0435. \u041e\u0441\u0442\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0435\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0431\u0430\u0437\u0443 \u0431\u043b\u043e\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0432\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e \u0434\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b.</translation>\n     </message>\n     <message>\n         <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n         <translation>\u042d\u0442\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0431\u043e\u0440\u043a\u0430 - \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043d\u0430 \u0441\u0432\u043e\u0439 \u0441\u0442\u0440\u0430\u0445 \u0438 \u0440\u0438\u0441\u043a - \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u043b\u044f \u0434\u043e\u0431\u044b\u0447\u0438 \u0438\u043b\u0438 \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0445 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0439</translation>\n     </message>\n     <message>\n         <source>This is the transaction fee you may discard if change is smaller than dust at this level</source>\n-        <translation>\u042d\u0442\u043e \u043f\u043b\u0430\u0442\u0430 \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c, \u0435\u0441\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u043d\u044c\u0448\u0435 \u0447\u0435\u043c \u043f\u044b\u043b\u044c</translation>\n+        <translation>\u042d\u0442\u043e \u043f\u043b\u0430\u0442\u0430 \u0437\u0430 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044e, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u044c, \u0435\u0441\u043b\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u043f\u044b\u043b\u044c</translation>\n     </message>\n     <message>\n         <source>Unable to replay blocks. You will need to rebuild the database using -reindex-chainstate.</source>\n@@ -3372,7 +3476,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Failed to listen on any port. Use -listen=0 if you want this.</source>\n-        <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -listen=0 \u0435\u0441\u043b\u0438 \u0432\u0430\u0441 \u044d\u0442\u043e \u0443\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442.</translation>\n+        <translation>\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043d\u0430\u0447\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -listen=0, \u0435\u0441\u043b\u0438 \u0432\u0430\u0441 \u044d\u0442\u043e \u0443\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442.</translation>\n     </message>\n     <message>\n         <source>Failed to rescan the wallet during initialization</source>\n@@ -3436,7 +3540,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n-        <translation>\u041d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432 \u0444\u0430\u0439\u043b\u0430.</translation>\n+        <translation>\u041d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0434\u0435\u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0440\u043e\u0432 \u0444\u0430\u0439\u043b\u0430.</translation>\n     </message>\n     <message>\n         <source>Prune cannot be configured with a negative value.</source>\n@@ -3646,7 +3750,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>The wallet will avoid paying less than the minimum relay fee.</source>\n-        <translation>\u041a\u043e\u0448\u0435\u043b\u0451\u043a \u0431\u0443\u0434\u0435\u0442 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044c \u043e\u043f\u043b\u0430\u0442 \u043c\u0435\u043d\u044c\u0448\u0438\u0445, \u043d\u0435\u0436\u0435\u043b\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438.</translation>\n+        <translation>\u041a\u043e\u0448\u0435\u043b\u0451\u043a \u0431\u0443\u0434\u0435\u0442 \u0438\u0437\u0431\u0435\u0433\u0430\u0442\u044c \u043e\u043f\u043b\u0430\u0442 \u043c\u0435\u043d\u044c\u0448\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438.</translation>\n     </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n@@ -3678,7 +3782,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n     </message>\n     <message>\n         <source>Cannot upgrade a non HD split wallet without upgrading to support pre split keypool. Please use -upgradewallet=169900 or -upgradewallet with no version specified.</source>\n-        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 HD \u043a\u043e\u0448\u0435\u043b\u0451\u043a  \u0431\u0435\u0437 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u043b\u0430 \u043a\u043b\u044e\u0447\u0435\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -upgradewallet=169900 \u0438\u043b\u0438 -upgradeallet \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0435\u0440\u0441\u0438\u0438.</translation>\n+        <translation>\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043d\u0435\u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 HD \u043a\u043e\u0448\u0435\u043b\u0451\u043a \u0431\u0435\u0437 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u043f\u0443\u043b\u0430 \u043a\u043b\u044e\u0447\u0435\u0439. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 -upgradewallet=169900 \u0438\u043b\u0438 -upgradeallet \u0431\u0435\u0437 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0435\u0440\u0441\u0438\u0438.</translation>\n     </message>\n     <message>\n         <source>Fee estimation failed. Fallbackfee is disabled. Wait a few blocks or enable -fallbackfee.</source>"
      },
      {
        "sha": "bf3f976e1ebe3575cf690ea251e8d1f5e7de8d1e",
        "filename": "src/qt/locale/bitcoin_si.ts",
        "status": "modified",
        "additions": 178,
        "deletions": 2,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_si.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_si.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_si.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -1,10 +1,38 @@\n <TS language=\"si\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>\u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0dc4\u0ddd \u0dbd\u0dda\u0db6\u0dbd\u0dba \u0dc3\u0d82\u0dc3\u0dca\u0d9a\u0dbb\u0dab\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0daf\u0d9a\u0dd4\u0dab\u0dd4 \u0db8\u0dd6\u0dc3\u0dd2\u0d9a \u0db6\u0ddc\u0dad\u0dca\u0dad\u0db8  \u0d9a\u0dca\u0dbd\u0dd2\u0d9a\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>\u0db1\u0dc0 \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>\u0db1\u0dc0</translation>\n+    </message>\n+    <message>\n+        <source>Copy the currently selected address to the system clipboard</source>\n+        <translation>\u0daf\u0dd0\u0db1\u0da7 \u0dad\u0ddd\u0dbb\u0dcf\u0d9c\u0dd9\u0db1 \u0d87\u0dad\u0dd2 \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0db4\u0daf\u0dca\u0db0\u0dad\u0dd2 \u0db4\u0dc3\u0dd4\u0dbb\u0dd4 \u0db4\u0dd4\u0dc0\u0dbb\u0dd4\u0dc0\u0da7 (clipboard) \u0db4\u0dd2\u0da7\u0db4\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy</source>\n+        <translation>\u0db4\u0dd2\u0da7\u0db4\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>\u0dc0\u0dc3\u0dcf \u0daf\u0db8\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Delete the currently selected address from the list</source>\n+        <translation>\u0daf\u0dd0\u0db1\u0da7 \u0dad\u0ddd\u0dbb\u0dcf\u0d9c\u0dad\u0dca \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0\u0dd9\u0db1\u0dca \u0d89\u0dc0\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>\u0dc3\u0dd9\u0dc0\u0dd3\u0db8\u0da7 \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0dc4\u0ddd \u0dbd\u0dda\u0db6\u0dbd\u0dba \u0d87\u0dad\u0dd4\u0dc5\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n         <translation>\u0d9a\u0dcf\u0dc3\u0dd2 \u0dba\u0dd0\u0dc0\u0dd2\u0dba \u0dba\u0dd4\u0dad\u0dd4 \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0dad\u0ddd\u0dbb\u0db1\u0dca\u0db1</translation>\n@@ -21,7 +49,23 @@\n         <source>Receiving addresses</source>\n         <translation>\u0dbd\u0db6\u0db1 \u0dbd\u0dd2\u0db4\u0dd2\u0db1</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>\u0db8\u0dda\u0dc0\u0dcf \u0d94\u0db6\u0d9c\u0dda \u0d9c\u0dd9\u0dc0\u0dd3\u0db8\u0dca \u0dba\u0dd0\u0dc0\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0db1 \u0db6\u0dd2\u0da7\u0dca\u0d9a\u0ddc\u0dba\u0dd2\u0db1\u0dca \u0dbd\u0dd2\u0db4\u0dd2\u0db1 \u0dc0\u0dda. \u0d9a\u0dcf\u0dc3\u0dd2 \u0dba\u0dd0\u0dc0\u0dd3\u0db8\u0da7 \u0db4\u0dd9\u0dbb \u0dc3\u0dd1\u0db8 \u0dc0\u0dd2\u0da7\u0db8 \u0db8\u0dd4\u0daf\u0dbd \u0dc3\u0dc4 \u0dbd\u0dd0\u0db6\u0dd3\u0db8\u0dda \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba \u0db4\u0dbb\u0dd3\u0d9a\u0dca\u0dc2\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. Use the 'Create new receiving address' button in the receive tab to create new addresses.</source>\n+        <translation> \u0db8\u0dda\u0dc0\u0dcf \u0d94\u0db6\u0d9c\u0dda \u0d9c\u0dd9\u0dc0\u0dd3\u0db8\u0dca \u0dbd\u0dd0\u0db6\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dc0\u0db1 \u0db6\u0dd2\u0da7\u0dca\u0d9a\u0ddc\u0dba\u0dd2\u0db1\u0dca \u0dbd\u0dd2\u0db4\u0dd2\u0db1 \u0dc0\u0dda. \u0db1\u0dc0 \u0dbd\u0dd2\u0db4\u0dd2\u0db1 \u0dc3\u0dd1\u0daf\u0dd3\u0db8 \u0dc3\u0db3\u0dc4\u0dcf \u0dbd\u0dd0\u0db6\u0dd3\u0db8\u0dca \u0da7\u0dd0\u0db6\u0dca \u0d91\u0d9a\u0dd9\u0dc4\u0dd2 \u0d87\u0dad\u0dd2 '\u0db1\u0dc0 \u0dbd\u0dd0\u0db6\u0dd3\u0db8\u0dda \u0dbd\u0dd2\u0db4\u0dd2\u0db1\u0dba\u0d9a\u0dca \u0dc3\u0dcf\u0daf\u0db1\u0dca\u0db1' \u0db6\u0ddc\u0dad\u0dca\u0dad\u0db8 \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u0d9a\u0ddc\u0db8\u0dcf \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc0\u0dd9\u0db1\u0dca \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0d9c\u0ddc\u0db1\u0dd4\u0dc0 (* .csv)</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u0dbd\u0dd2\u0db4\u0dd2\u0db1 \u0dbd\u0dd0\u0dba\u0dd2\u0dc3\u0dca\u0dad\u0dd4\u0dc0 %1 \u0da7 \u0dc3\u0dd4\u0dbb\u0dd0\u0d9a\u0dd3\u0db8\u0da7 \u0d8b\u0dad\u0dca\u0dc3\u0dcf\u0dc4 \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda\u0daf\u0dd3 \u0daf\u0ddd\u0dc2\u0dba\u0d9a\u0dca \u0d87\u0dad\u0dd2\u0dc0\u0dd2\u0dba. \u0d9a\u0dbb\u0dd4\u0dab\u0dcf\u0d9a\u0dbb \u0db1\u0dd0\u0dc0\u0dad \u0d8b\u0dad\u0dca\u0dc3\u0dcf\u0dc4 \u0d9a\u0dbb\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n     <message>\n@@ -39,12 +83,140 @@\n </context>\n <context>\n     <name>AskPassphraseDialog</name>\n-    </context>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>\u0db8\u0dd4\u0dbb\u0db4\u0daf \u0d9a\u0dc0\u0dd4\u0dc5\u0dd4\u0dc0</translation>\n+    </message>\n+    <message>\n+        <source>Enter passphrase</source>\n+        <translation>\u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0d87\u0dad\u0dd4\u0dbd\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>New passphrase</source>\n+        <translation>\u0db1\u0dc0 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba</translation>\n+    </message>\n+    <message>\n+        <source>Repeat new passphrase</source>\n+        <translation>\u0db1\u0dc0 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0db1\u0dd0\u0dc0\u0dad \u0d87\u0dad\u0dd4\u0dbd\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>\u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0db4\u0dd9\u0db1\u0dca\u0dc0\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0d85\u0d9c\u0dd4\u0dc5\u0dd4 \u0d87\u0dbb\u0dd3\u0db8\u0dda \u0db8\u0dd9\u0db8 \u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dba\u0dcf\u0dc0\u0dbd\u0dd2\u0dba\u0da7 \u0d94\u0db6\u0dda \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba\u0dda \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0d85\u0dc0\u0dc1\u0dca\u200d\u0dba \u0dc0\u0dda.</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0d85\u0d9c\u0dd4\u0dc5\u0dd4 \u0d85\u0dbb\u0dd2\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0db8\u0dd9\u0db8 \u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dba\u0dcf\u0dc0\u0dbd\u0dd2\u0dba\u0da7 \u0d94\u0db6\u0dda \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba\u0dda \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0d85\u0dc0\u0dc1\u0dca\u200d\u0dba \u0dc0\u0dda.</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0dad\u0dc4\u0dc0\u0dd4\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>\u0d85\u0dc0\u0dc0\u0dcf\u0daf\u0dba\u0dba\u0dd2: \u0d94\u0db6 \u0d94\u0db6\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbd \u0db4\u0dc3\u0dd4 \u0d94\u0db6\u0d9c\u0dda \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0db1\u0dd0\u0dad\u0dd2 \u0dc0\u0dd4\u0dc0\u0dc4\u0ddc\u0dad\u0dca, \u0d94\u0db6\u0dda  &lt;b&gt;\u0db6\u0dd2\u0da7\u0dca\u0d9a\u0ddc\u0dba\u0dd2\u0db1\u0dca \u0dc3\u0dd2\u0dba\u0dbd\u0dca\u0dbd\u0db8 \u0d94\u0db6\u0da7 \u0d85\u0dc4\u0dd2\u0db8\u0dd2 \u0dc0\u0db1\u0dd4 \u0d87\u0dad&lt;/b&gt;!</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>\u0d94\u0db6\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dda \u0d85\u0dc0\u0dc1\u0dca\u200d\u0dba\u0dad\u0dcf\u0dc0 \u0dad\u0dc4\u0dc0\u0dd4\u0dbb\u0dd4 \u0d9a\u0dbb\u0db1\u0dca\u0db1?</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb \u0d87\u0dad</translation>\n+    </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db1\u0dc0 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0d87\u0dad\u0dd4\u0dc5\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1.&lt;br/&gt;\u0d9a\u0dbb\u0dd4\u0dab\u0dcf\u0d9a\u0dbb  \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0dc3\u0db3\u0dc4\u0dcf &lt;b&gt;\u0d85\u0dc4\u0db9\u0dd4 \u0d85\u0d9a\u0dca\u0dc2\u0dbb \u0daf\u0dc4\u0dba\u0d9a\u0dca \u0dc4\u0ddd \u0dc0\u0dd0\u0da9\u0dd2 \u0d9c\u0dab\u0db1\u0d9a\u0dca&lt;/b&gt;, \u0dc4\u0ddd &lt;b&gt;\u0dc0\u0da0\u0db1 \u0d85\u0da7\u0d9a\u0dca \u0dc4\u0ddd \u0dc0\u0dd0\u0da9\u0dd2 \u0d9c\u0dab\u0db1\u0d9a\u0dca&lt;/b&gt;\u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dbb\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0db4\u0dd0\u0dbb\u0dab\u0dd2 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0dc3\u0dc4 \u0db1\u0dc0 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0d87\u0dad\u0dd4\u0dc5\u0dad\u0dca \u0d9a\u0dbb\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+    <message>\n+        <source>Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>\u0d94\u0db6\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0d94\u0db6\u0dda \u0db4\u0dbb\u0dd2\u0d9c\u0dab\u0d9a\u0dba\u0da7 \u0d85\u0db1\u0dd2\u0dc2\u0dca\u0da7 \u0db8\u0dd8\u0daf\u0dd4\u0d9a\u0dcf\u0d82\u0d9c (malware) \u0d87\u0dad\u0dd4\u0dbd\u0dd4 \u0dc0\u0dd3\u0db8\u0dd9\u0db1\u0dca \u0d9a\u0dd9\u0dbb\u0dd9\u0db1 \u0db6\u0dd2\u0da7\u0dca\u0d9a\u0ddc\u0dba\u0dd2\u0db1\u0dca \u0dc3\u0ddc\u0dbb\u0d9a\u0db8\u0dca \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0dca \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc3\u0db8\u0dca\u0db4\u0dd6\u0dbb\u0dca\u0dab\u0dba\u0dd9\u0db1\u0dca\u0db8 \u0dc0\u0dd0\u0dc5\u0dd0\u0d9a\u0dca\u0dc0\u0dd3\u0db8 \u0d9a\u0dc5 \u0db1\u0ddc\u0dc4\u0dd0\u0d9a\u0dd2 \u0db6\u0dc0 \u0db8\u0dad\u0d9a \u0dad\u0db6\u0dcf \u0d9c\u0db1\u0dca\u0db1.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet to be encrypted</source>\n+        <translation>\u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4 \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is about to be encrypted. </source>\n+        <translation>\u0d94\u0db6\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0d86\u0dc3\u0db1\u0dca\u0db1\u0dba\u0dd2.</translation>\n+    </message>\n+    <message>\n+        <source>Your wallet is now encrypted. </source>\n+        <translation>\u0d94\u0db6\u0d9c\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0daf\u0dd0\u0db1\u0dca \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dbb \u0d87\u0dad.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u0dc0\u0dd0\u0daf\u0d9c\u0dad\u0dca: \u0d94\u0db6\u0d9c\u0dda \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0d9c\u0ddc\u0db1\u0dd4\u0dc0\u0dd9\u0db1\u0dca \u0d94\u0db6 \u0dc0\u0dd2\u0dc3\u0dd2\u0db1\u0dca \u0dc3\u0dcf\u0daf\u0db1 \u0dbd\u0daf \u0db4\u0dd9\u0dbb \u0d8b\u0db4\u0dc3\u0dca\u0dae\u0dba\u0db1\u0dca(backups) \u0d85\u0dbd\u0dd4\u0dad\u0dd2\u0db1\u0dca \u0da2\u0db1\u0db1\u0dba \u0d9a\u0dbb\u0db1 \u0dbd\u0daf, \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dc5 \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0d9c\u0ddc\u0db1\u0dd4\u0dc0 \u0dc3\u0db8\u0d9f \u0db4\u0dca\u200d\u0dbb\u0dad\u0dd2\u0dc3\u0dca\u0dae\u0dcf\u0db4\u0db1\u0dba(replace) \u0d9a\u0dc5 \u0dba\u0dd4\u0dad\u0dd4\u0dba. \u0d86\u0dbb\u0d9a\u0dca\u0dc2\u0d9a \u0dc4\u0dda\u0dad\u0dd6\u0db1\u0dca \u0db8\u0dad, \u0d94\u0db6 \u0db1\u0dc0, \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d9a\u0dc5 \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0db7\u0dcf\u0dc0\u0dd2\u0dad\u0dcf \u0d9a\u0dd2\u0dbb\u0dd3\u0db8\u0da7 \u0db4\u0da7\u0db1\u0dca \u0d9c\u0dad\u0dca \u0dc0\u0dc4\u0dcf\u0db8 \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0db1\u0ddc\u0d9a\u0dc5 \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0d9c\u0ddc\u0db1\u0dd4\u0dc0\u0dda \u0db4\u0dd9\u0dbb \u0d8b\u0db4\u0dc3\u0dca\u0dae \u0d85\u0d9a\u0dca\u200d\u0dbb\u0dd3\u0dba \u0dc0\u0db1\u0dd4 \u0d87\u0dad.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d85\u0dc3\u0dcf\u0dbb\u0dca\u0dae\u0d9a \u0dc0\u0dd2\u0dba</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0d85\u0db7\u0dca\u200d\u0dba\u0db1\u0dca\u0dad\u0dbb \u0daf\u0ddd\u0dc2\u0dba\u0d9a\u0dca \u0dc4\u0dda\u0dad\u0dd4\u0dc0\u0dd9\u0db1\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d85\u0dc3\u0dcf\u0dbb\u0dca\u0dae\u0d9a \u0dc0\u0dd2\u0dba. \u0d94\u0db6\u0d9c\u0dda \u0db8\u0dd4\u0daf\u0dbd\u0dca \u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc3\u0d82\u0d9a\u0dda\u0dad\u0db1\u0dba \u0dc0\u0dd3 \u0db1\u0ddc\u0db8\u0dd0\u0dad.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u0dc3\u0db4\u0dba\u0db1 \u0dbd\u0daf \u0db8\u0dd4\u0dbb\u0db4\u0daf \u0db1\u0ddc\u0d9c\u0dd0\u0dbd\u0db4\u0dda.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0d85\u0d9c\u0dd4\u0dc5\u0dd4 \u0d87\u0dbb\u0dd3\u0db8 \u0d85\u0dc3\u0dcf\u0dbb\u0dca\u0dae\u0d9a \u0dc0\u0dd2\u0dba</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2\u0dba \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0dc3\u0db3\u0dc4\u0dcf \u0d87\u0dad\u0dd4\u0dc5\u0dad\u0dca \u0d9a\u0dc5 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0dc0\u0dd0\u0dbb\u0daf\u0dd2\u0dba.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0dc0\u0dd2\u0d9a\u0dda\u0dad\u0db1\u0dba \u0d85\u0dc3\u0dcf\u0dbb\u0dca\u0dae\u0d9a\u0dba\u0dd2.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u0db4\u0dc3\u0dd4\u0db8\u0dca\u0db6\u0dd2 \u0db8\u0dd4\u0dbb\u0db4\u0daf\u0dba \u0dc3\u0dcf\u0dbb\u0dca\u0dae\u0d9a\u0dc0 \u0dc0\u0dd9\u0db1\u0dc3\u0dca \u0d9a\u0dbb\u0db1 \u0dbd\u0daf\u0dd2.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u0d85\u0dc0\u0dc0\u0dcf\u0daf\u0dba\u0dba\u0dd2: \u0d9a\u0dd0\u0db4\u0dca\u0dc3\u0dca \u0dbd\u0ddc\u0d9a\u0dca \u0dba\u0dad\u0dd4\u0dbb \u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dba\u0dcf\u0dad\u0dca\u0db8\u0d9a\u0dba\u0dd2!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmask</translation>\n+    </message>\n     </context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>\u0d9c\u0db1\u0dd4\u0daf\u0dd9\u0db1\u0dd4 \u0d89\u0dad\u0dd2\u0dc4\u0dcf\u0dc3\u0dba \u0db4\u0dd2\u0dbb\u0dd2\u0d9a\u0dca\u0dc3\u0db1\u0dca\u0db1</translation>\n+    </message>\n     <message>\n         <source>Warning</source>\n         <translation>\u0d85\u0dc0\u0dc0\u0dcf\u0daf\u0dba</translation>\n@@ -276,6 +448,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u0d9a\u0ddc\u0db8\u0dcf \u0dc0\u0dbd\u0dd2\u0db1\u0dca \u0dc0\u0dd9\u0db1\u0dca \u0d9a\u0dbb\u0db1 \u0dbd\u0daf \u0d9c\u0ddc\u0db1\u0dd4\u0dc0 (* .csv)</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>\u0daf\u0dd2\u0db1\u0dba</translation>"
      },
      {
        "sha": "0b2b26c0c7bd88c039a09be4a431a5caea8544d5",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 123,
        "deletions": 3,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -481,6 +481,14 @@\n         <source>Up to date</source>\n         <translation>Aktualizovan\u00fd</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Uzlov\u00e9 okno</translation>\n+    </message>\n+    <message>\n+        <source>Open node debugging and diagnostic console</source>\n+        <translation>Otvor konzolu pre ladenie a diagnostiku uzlu</translation>\n+    </message>\n     <message>\n         <source>&amp;Sending addresses</source>\n         <translation>&amp;Odosielaj\u00face adresy</translation>\n@@ -489,6 +497,10 @@\n         <source>&amp;Receiving addresses</source>\n         <translation>&amp;Prij\u00edmaj\u00face adresy</translation>\n     </message>\n+    <message>\n+        <source>Open a bitcoin: URI</source>\n+        <translation>Otvori\u0165 bitcoin: URI</translation>\n+    </message>\n     <message>\n         <source>Open Wallet</source>\n         <translation>Otvori\u0165 pe\u0148a\u017eenku</translation>\n@@ -944,7 +956,7 @@\n     </message>\n     <message>\n         <source>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</source>\n-        <translation>Prv\u00e1 synchroniz\u00e1cia je ve\u013emi n\u00e1ro\u010dn\u00e1 a m\u00f4\u017eu sa tak v\u010faka nej za\u010dat na Va\u0161om po\u010d\u00edta\u010di projavova\u0165 doteraz skryt\u00e9 h\u00e1rdwarov\u00e9 probl\u00e9my. V\u017edy, ke\u010f spust\u00edte %1, bude s\u0165ahovanie pokra\u010dova\u0165 tam, kde skon\u010dilo.</translation>\n+        <translation>Prv\u00e1 synchroniz\u00e1cia je ve\u013emi n\u00e1ro\u010dn\u00e1 a m\u00f4\u017eu sa tak v\u010faka nej za\u010dat na Va\u0161om po\u010d\u00edta\u010di prejavova\u0165 doteraz skryt\u00e9 hardwarov\u00e9 probl\u00e9my. V\u017edy, ke\u010f spust\u00edte %1, bude s\u0165ahovanie pokra\u010dova\u0165 tam, kde naposledy skon\u010dilo.</translation>\n     </message>\n     <message>\n         <source>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</source>\n@@ -1049,13 +1061,25 @@\n         <source>Hide</source>\n         <translation>Skry\u0165</translation>\n     </message>\n+    <message>\n+        <source>Esc</source>\n+        <translation>Esc - \u00fanikov\u00e1 kl\u00e1vesa</translation>\n+    </message>\n+    <message>\n+        <source>%1 is currently syncing.  It will download headers and blocks from peers and validate them until reaching the tip of the block chain.</source>\n+        <translation>%1 sa pr\u00e1ve synchronizuje. S\u0165ahuj\u00fa sa hlavi\u010dky a bloky od partnerov. Tie sa bud\u00fa sa overova\u0165 a\u017e sa kompletne over\u00ed cel\u00fd re\u0165azec blokov - blockchain.</translation>\n+    </message>\n     <message>\n         <source>Unknown. Syncing Headers (%1, %2%)...</source>\n         <translation>Nezn\u00e1my. Synchronizuj\u00fa sa hlavi\u010dky (%1, %2%)...</translation>\n     </message>\n </context>\n <context>\n     <name>OpenURIDialog</name>\n+    <message>\n+        <source>Open bitcoin URI</source>\n+        <translation>Otvori\u0165 bitcoin URI</translation>\n+    </message>\n     <message>\n         <source>URI:</source>\n         <translation>URI:</translation>\n@@ -1448,6 +1472,10 @@\n         <source>'bitcoin://' is not a valid URI. Use 'bitcoin:' instead.</source>\n         <translation>'bitcoin://' je neplatn\u00e1 URI. Pou\u017eite 'bitcoin:'</translation>\n     </message>\n+    <message>\n+        <source>Cannot process payment request because BIP70 is not supported.</source>\n+        <translation>Nemo\u017eno spracova\u0165 \u017eiados\u0165 o platbu, preto\u017ee podpora pre BIP70 nieje podporovan\u00e1.</translation>\n+    </message>\n     <message>\n         <source>Due to widespread security flaws in BIP70 it's strongly recommended that any merchant instructions to switch wallets be ignored.</source>\n         <translation>Kv\u00f4li mnoh\u00fdm bezpe\u010dnostn\u00fdm chyb\u00e1m v BIP70 sa d\u00f4razne odpor\u00fa\u010da ignorova\u0165 in\u0161trukcie na prep\u00ednanie pe\u0148a\u017eeniek od ak\u00fdchko\u013evek obchodn\u00edkov.</translation>\n@@ -1761,10 +1789,22 @@\n         <source>Synced Blocks</source>\n         <translation>Synchronizovan\u00e9 bloky</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Mapovan\u00fd nez\u00e1visl\u00fd - Auton\u00f3mny Syst\u00e9m pou\u017e\u00edvan\u00fd na roz\u0161\u00edrenie vz\u00e1jomn\u00e9ho v\u00fdberu partnerov.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapovan\u00fd AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Aplik\u00e1cia</translation>\n     </message>\n+    <message>\n+        <source>Node window</source>\n+        <translation>Uzlov\u00e9 okno</translation>\n+    </message>\n     <message>\n         <source>Open the %1 debug log file from the current data directory. This can take a few seconds for large log files.</source>\n         <translation>Otvori\u0165 %1 ladiaci v\u00fdpis z aktu\u00e1lnej zlo\u017eky. Pre ve\u013ek\u00e9 s\u00fabory to m\u00f4\u017ee chv\u00ed\u013eu trva\u0165.</translation>\n@@ -1976,9 +2016,17 @@\n         <source>An optional amount to request. Leave this empty or zero to not request a specific amount.</source>\n         <translation>Volite\u013en\u00e1 po\u017eadovan\u00e1 suma. Nechajte pr\u00e1zdne alebo nulu ak nepo\u017eadujete ur\u010dit\u00fa sumu.</translation>\n     </message>\n+    <message>\n+        <source>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</source>\n+        <translation>Volite\u013en\u00fd popis ktor\u00fd sa prid\u00e1 k tejto novej prij\u00edmaj\u00facej adrese (pre jednoduch\u0161iu identifik\u00e1ciu). Tento popis je taktie\u017e pridan\u00fd do v\u00fdzvy k platbe.</translation>\n+    </message>\n+    <message>\n+        <source>An optional message that is attached to the payment request and may be displayed to the sender.</source>\n+        <translation>Volite\u013en\u00e1 spr\u00e1va ktor\u00e1 bude pridan\u00e1 k tejto platobnej v\u00fdzve a m\u00f4\u017ee by\u0165 zobrazen\u00e1 odosielate\u013eovi.</translation>\n+    </message>\n     <message>\n         <source>&amp;Create new receiving address</source>\n-        <translation>Vytvori\u0165 nov\u00fa adresu pre prij\u00edmanie</translation>\n+        <translation>&amp;Vytvori\u0165 nov\u00fa pr\u00edjmaciu adresu</translation>\n     </message>\n     <message>\n         <source>Clear all fields of the form.</source>\n@@ -2229,6 +2277,10 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Dust:</source>\n         <translation>Prach:</translation>\n     </message>\n+    <message>\n+        <source>Hide transaction fee settings</source>\n+        <translation>Skry\u0165 nastavenie poplatkov transakcie</translation>\n+    </message>\n     <message>\n         <source>When there is less transaction volume than space in the blocks, miners as well as relaying nodes may enforce a minimum fee. Paying only this minimum fee is just fine, but be aware that this can result in a never confirming transaction once there is more demand for bitcoin transactions than the network can process.</source>\n         <translation>Ak je v blokoch menej objemu transakci\u00ed ako priestoru, \u0165a\u017eiari ako aj vysielacie uzly, m\u00f4\u017eu uplatni\u0165 minim\u00e1lny poplatok. Plati\u0165 iba minim\u00e1lny poplatok je v poriadku, ale uvedomte si, \u017ee to m\u00f4\u017ee ma\u0165 za n\u00e1sledok transakciu, ktor\u00e1 sa nikdy nepotvrd\u00ed, akon\u00e1hle je v\u00e4\u010d\u0161\u00ed dopyt po bitcoinov\u00fdch transakci\u00e1ch, ne\u017e dok\u00e1\u017ee sie\u0165 spracova\u0165.</translation>\n@@ -2297,6 +2349,14 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>%1 (%2 blocks)</source>\n         <translation>%1 (%2 blokov)</translation>\n     </message>\n+    <message>\n+        <source>Cr&amp;eate Unsigned</source>\n+        <translation>Vytvori\u0165 bez podpisu</translation>\n+    </message>\n+    <message>\n+        <source>Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n+        <translation>Vytvor\u00ed \u010diasto\u010dne podp\u00edsan\u00fa Bitcoin transakciu (Partially Signed Bitcoin Transaction - PSBT) na pou\u017eitie napr\u00edklad s offline %1 pe\u0148a\u017eenkou alebo v hardv\u00e9rovej pe\u0148a\u017eenke kompatibilnej s PSBT.</translation>\n+    </message>\n     <message>\n         <source> from wallet '%1'</source>\n         <translation> z pe\u0148a\u017eenky '%1'</translation>\n@@ -2309,6 +2369,10 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>%1 to %2</source>\n         <translation>%1 do %2</translation>\n     </message>\n+    <message>\n+        <source>Do you want to draft this transaction?</source>\n+        <translation>Chcete napl\u00e1nova\u0165 t\u00fato transakciu?</translation>\n+    </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n         <translation>Ur\u010dite chcete odosla\u0165 transakciu?</translation>\n@@ -2345,6 +2409,26 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Confirm send coins</source>\n         <translation>Potvr\u010fte odoslanie minc\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Confirm transaction proposal</source>\n+        <translation>Potvrdi\u0165 n\u00e1vrh transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Copy PSBT to clipboard</source>\n+        <translation>Skop\u00edrova\u0165 PSBT do schr\u00e1nky</translation>\n+    </message>\n+    <message>\n+        <source>Send</source>\n+        <translation>Odosla\u0165</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT skop\u00edrovan\u00fd</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only balance:</source>\n+        <translation>Iba sledovan\u00fd zostatok:</translation>\n+    </message>\n     <message>\n         <source>The recipient address is not valid. Please recheck.</source>\n         <translation>Adresa pr\u00edjemcu je neplatn\u00e1. Pros\u00edm, overte ju.</translation>\n@@ -2440,6 +2524,10 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Remove this entry</source>\n         <translation>Odstr\u00e1ni\u0165 t\u00fato polo\u017eku</translation>\n     </message>\n+    <message>\n+        <source>The amount to send in the selected unit</source>\n+        <translation>Suma na odoslanie vo vybranej mene</translation>\n+    </message>\n     <message>\n         <source>The fee will be deducted from the amount being sent. The recipient will receive less bitcoins than you enter in the amount field. If multiple recipients are selected, the fee is split equally.</source>\n         <translation>Poplatok sa odpo\u010d\u00edta od \u010diastky, ktor\u00fa odosielate. Pr\u00edjemca dostane menej bitcoinov ako zad\u00e1te. Ak je vybran\u00fdch viacero pr\u00edjemcov, poplatok je rozdelen\u00fd rovn\u00fdm dielom.</translation>\n@@ -2566,6 +2654,14 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Adresa Bitcoin, ktorou bola podp\u00edsan\u00e1 spr\u00e1va</translation>\n     </message>\n+    <message>\n+        <source>The signed message to verify</source>\n+        <translation>Podp\u00edsan\u00e1 spr\u00e1va na overenie</translation>\n+    </message>\n+    <message>\n+        <source>The signature given when the message was signed</source>\n+        <translation>Poskytnut\u00fd podpis pri podp\u00edsan\u00ed spr\u00e1vy</translation>\n+    </message>\n     <message>\n         <source>Verify the message to ensure it was signed with the specified Bitcoin address</source>\n         <translation>Over\u00edm spr\u00e1vy sa uisti\u0165 \u017ee bola podp\u00edsan\u00e1 ozna\u010denou Bitcoin adresou</translation>\n@@ -2598,6 +2694,10 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Wallet unlock was cancelled.</source>\n         <translation>Odomknutie pe\u0148a\u017eenky bolo zru\u0161en\u00e9.</translation>\n     </message>\n+    <message>\n+        <source>No error</source>\n+        <translation>Bez chyby</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>S\u00fakromn\u00fd k\u013e\u00fa\u010d pre zadan\u00fa adresu nieje k dispoz\u00edcii.</translation>\n@@ -3131,7 +3231,11 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n     </message>\n     <message>\n         <source>Do you want to increase the fee?</source>\n-        <translation>Chce\u0161 poplatok nav\u00fd\u0161i\u0165?</translation>\n+        <translation>Chcete nav\u00fd\u0161i\u0165 poplatok?</translation>\n+    </message>\n+    <message>\n+        <source>Do you want to draft a transaction with fee increase?</source>\n+        <translation>Chcete napl\u00e1nova\u0165 t\u00fato transakciu s nav\u00fd\u0161en\u00edm poplatkov.</translation>\n     </message>\n     <message>\n         <source>Current fee:</source>\n@@ -3149,6 +3253,14 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Confirm fee bump</source>\n         <translation>Potvr\u010f nav\u00fd\u0161enie poplatku</translation>\n     </message>\n+    <message>\n+        <source>Can't draft transaction.</source>\n+        <translation>Nemo\u017eno napl\u00e1nova\u0165 t\u00fato transakciu.</translation>\n+    </message>\n+    <message>\n+        <source>PSBT copied</source>\n+        <translation>PSBT skop\u00edrovan\u00fd</translation>\n+    </message>\n     <message>\n         <source>Can't sign transaction.</source>\n         <translation>Nem\u00f4zeme podp\u00edaa\u0165 transakciu.</translation>\n@@ -3315,6 +3427,14 @@ Pozn\u00e1mka: Ke\u010f\u017ee poplatok je po\u010d\u00edtan\u00fd za bajt, poplatok o hodnote \"100 sato\n         <source>Corrupted block database detected</source>\n         <translation>Zisten\u00e1 po\u0161koden\u00e1 datab\u00e1za blokov</translation>\n     </message>\n+    <message>\n+        <source>Could not find asmap file %s</source>\n+        <translation>Nepodarilo sa n\u00e1js\u0165 asmap s\u00fabor %s</translation>\n+    </message>\n+    <message>\n+        <source>Could not parse asmap file %s</source>\n+        <translation>Nepodarilo sa analyzova\u0165 asmap s\u00fabor %s</translation>\n+    </message>\n     <message>\n         <source>Do you want to rebuild the block database now?</source>\n         <translation>Chcete znovu zostavi\u0165 datab\u00e1zu blokov?</translation>"
      },
      {
        "sha": "fffb181e760da1695c5a724a22625787ea835417",
        "filename": "src/qt/locale/bitcoin_sl.ts",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sl.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -267,7 +267,7 @@\n     </message>\n     <message>\n         <source>Show general overview of wallet</source>\n-        <translation>Oglejte si splo\u0161ne informacije o va\u0161i denarnici</translation>\n+        <translation>Oglejte si splo\u0161ne informacije o svoji denarnici</translation>\n     </message>\n     <message>\n         <source>&amp;Transactions</source>\n@@ -1435,7 +1435,7 @@\n     </message>\n     <message>\n         <source>Spendable:</source>\n-        <translation>Na voljo:</translation>\n+        <translation>Na voljo za po\u0161iljanje:</translation>\n     </message>\n     <message>\n         <source>Recent transactions</source>\n@@ -1788,6 +1788,14 @@\n         <source>Synced Blocks</source>\n         <translation>Sinhronizirani bloki</translation>\n     </message>\n+    <message>\n+        <source>The mapped Autonomous System used for diversifying peer selection.</source>\n+        <translation>Mapirani Avtonomski Sistem, uporabljan za diverzificiranje izbire sole\u017enikov.</translation>\n+    </message>\n+    <message>\n+        <source>Mapped AS</source>\n+        <translation>Mapirani AS</translation>\n+    </message>\n     <message>\n         <source>User Agent</source>\n         <translation>Ime agenta</translation>\n@@ -2350,23 +2358,23 @@ Opomba: Ker se provizija izra\u010duna na bajt, bi provizija \"100 satoshijev na kB\"\n     </message>\n     <message>\n         <source> from wallet '%1'</source>\n-        <translation>iz denarnice '%1'</translation>\n+        <translation> iz denarnice '%1'</translation>\n     </message>\n     <message>\n         <source>%1 to '%2'</source>\n-        <translation>%1 do '%2'</translation>\n+        <translation>%1 v '%2'</translation>\n     </message>\n     <message>\n         <source>%1 to %2</source>\n-        <translation>%1 do %2</translation>\n+        <translation>%1 v %2</translation>\n     </message>\n     <message>\n         <source>Do you want to draft this transaction?</source>\n         <translation>\u017delite shraniti to transakcijo kot osnutek?</translation>\n     </message>\n     <message>\n         <source>Are you sure you want to send?</source>\n-        <translation>Ali ste prepri\u010dani, da \u017eelite poslati?</translation>\n+        <translation>Ali ste prepri\u010dani, da \u017eelite poslati sredstva?</translation>\n     </message>\n     <message>\n         <source>Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.</source>\n@@ -2382,7 +2390,7 @@ Opomba: Ker se provizija izra\u010duna na bajt, bi provizija \"100 satoshijev na kB\"\n     </message>\n     <message>\n         <source>Please, review your transaction.</source>\n-        <translation>Prosimo, preglejte va\u0161e transakcije.</translation>\n+        <translation>Prosimo, preglejte svojo transakcijo.</translation>\n     </message>\n     <message>\n         <source>Transaction fee</source>"
      },
      {
        "sha": "3a9949488f73095f1a0589b72d7eef490969ab5c",
        "filename": "src/qt/locale/bitcoin_sq.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sq.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sq.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sq.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "patch": "@@ -115,6 +115,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>P\u00ebrs\u00ebrisni fjal\u00ebkalimin e ri</translation>\n     </message>\n+    <message>\n+        <source>Show passphrase</source>\n+        <translation>Shfaqe fjal\u00ebkalimin</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Kripto portofolin</translation>\n@@ -151,6 +155,14 @@\n         <source>Wallet encrypted</source>\n         <translation>Portofoli u enkriptua</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase for the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Jepe fjal\u00ebkalimin e ri p\u00ebr portofolin. Ju lutemi t\u00eb p\u00ebrdorni nj\u00eb fjalkalim prej dhjet\u00eb ose m\u00eb shum\u00eb shkronjave t\u00eb r\u00ebndomta, ose tet\u00eb e m\u00eb shum\u00eb fjal\u00eb.</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase for the wallet.</source>\n+        <translation>Jepe fjal\u00ebkalimin e vjet\u00ebr dhe fjalkalimin e ri p\u00ebr portofolin.</translation>\n+    </message>\n     <message>\n         <source>Wallet encryption failed</source>\n         <translation>Enkriptimi i portofolit d\u00ebshtoi</translation>"
      },
      {
        "sha": "8e511ba027983d4c296a88eac5ff9e9c6b50d793",
        "filename": "src/qt/locale/bitcoin_sr.ts",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "02f0fb72b5f55d269745fb87a023a56eb7354183",
        "filename": "src/qt/locale/bitcoin_sr@latin.ts",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sr@latin.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sr@latin.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sr@latin.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "28bb524ef0ff3f7d32534139b35cfcf0f7929945",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 164,
        "deletions": 8,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1e057d15bc3658769209a25c67b37868ecdf17a4",
        "filename": "src/qt/locale/bitcoin_te.ts",
        "status": "modified",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_te.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_te.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_te.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4d82f7949b6e61d104fd07903eaa947a2882783a",
        "filename": "src/qt/locale/bitcoin_th.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_th.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_th.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_th.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "722daadafe168a168f08b60a881befe0824359ba",
        "filename": "src/qt/locale/bitcoin_uk.ts",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_uk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_uk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_uk.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d16c65ede4072eb57241d79ce5b4a7a2b613ced5",
        "filename": "src/qt/locale/bitcoin_ur.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ur.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_ur.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ur.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "33a4da9561914487f3b34d550c9075164fcf9f73",
        "filename": "src/qt/locale/bitcoin_vi.ts",
        "status": "modified",
        "additions": 256,
        "deletions": 4,
        "changes": 260,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_vi.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_vi.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_vi.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "52b2f24927d98ef80cdd1d8fbdc9538b0c03027f",
        "filename": "src/qt/locale/bitcoin_zh.ts",
        "status": "modified",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "8540c05b8d8e2aabef2713b80dff09d5378af629",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 2,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "da1f92a461d86501d39dc58fa630784d9f60f0b3",
        "filename": "src/qt/locale/bitcoin_zh_TW.ts",
        "status": "modified",
        "additions": 51,
        "deletions": 3,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh_TW.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zh_TW.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_TW.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "30e7bec4b96de97fc5543fff070bff66d3458ac0",
        "filename": "src/qt/locale/bitcoin_zu.ts",
        "status": "added",
        "additions": 291,
        "deletions": 0,
        "changes": 291,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zu.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/locale/bitcoin_zu.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zu.ts?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b1081f6aee8c8c7100635b852e2cdbbe5bb25db8",
        "filename": "src/qt/networkstyle.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/networkstyle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/networkstyle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/networkstyle.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "6c2db52f63e633d0928c1e772d63450081554dd4",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4c5601242e986df69dd59231188c7fa4bd8dd07e",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "8dffd2f59f1c88544b65deb6a48254169ff72289",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d9e0274d01b54cdfe5058ac66e71eb4286342b1d",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f16761d6b2ecf1b994a1a83dcb74f66566fc8355",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "949cc9d84ad6bde340e786a2fccc649fe03b723f",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "ef8d59266d115328fe3039a6cad0f8086bcc0c1e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 217,
        "deletions": 125,
        "changes": 342,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "5b362bf211f73241556189b6b7e58af323c0d22f",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "88c8ebe1f62d58a017b5f5316e0b3348ea684b88",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "def21b119ef0e56a4bf2c1339feacd3d0ae70f14",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 99,
        "deletions": 59,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "e60e0a2d90bd2b3e9edd6042dbe3c359ed55e41e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 127,
        "deletions": 74,
        "changes": 201,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "8dfbead0e4334ce06195b21450ebc36102fef62b",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "9d25ec156a614a801afd82f2355e2c7cac27e6b4",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "a78714516bd1842150e40660299366e8848668f2",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "e68f031aa476e3a3c371127bd7dbf9b30e3ebc90",
        "filename": "src/signet.cpp",
        "status": "added",
        "additions": 149,
        "deletions": 0,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/signet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/signet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/signet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "23563a83c42877410ee49c1e586c81834ccfcb3b",
        "filename": "src/signet.h",
        "status": "added",
        "additions": 37,
        "deletions": 0,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/signet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/signet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/signet.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "41f4e43bdd58a67c5f567bdaa9fe1f3280290ade",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d519eca859932d8116014ba253c1a180c87785c2",
        "filename": "src/test/base32_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/base32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/base32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/base32_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "712567ac0d897f445e4ad5d45233140f18e3e914",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "664e65accc2b475dbe8ed4149a9a383c8a5049c6",
        "filename": "src/test/fuzz/crypto.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/crypto.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/crypto.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b799d3b43b866d4d0781eb00240d89ecfb34b7e3",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "a85c35324391505f39c0f04c945261ddf8583264",
        "filename": "src/test/fuzz/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 15,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/net.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "7e216e16feb4e9fff02a34033dd21fb268c186e2",
        "filename": "src/test/fuzz/p2p_transport_deserializer.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/p2p_transport_deserializer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/p2p_transport_deserializer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/p2p_transport_deserializer.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3ef03137ecfdd20357c21b66d297bd479ced0f30",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f722eeac3a68e425c95f12c4490ecfc0f7634f7f",
        "filename": "src/test/fuzz/process_messages.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/process_messages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/process_messages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_messages.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "786f1a83fe33dfa6bcc121c4ea9dcefa7cc8eb38",
        "filename": "src/test/fuzz/signet.cpp",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/signet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/fuzz/signet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "611e9f262335a3a05c66c8fe0b2e4788a0379d67",
        "filename": "src/test/key_io_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/key_io_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/key_io_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_io_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3de79a9f45f66d561256ccba2ab0670ccd644ed4",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 12,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "261396cd0c9a3c8b8eec8fedd34265c4a11120c2",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 296,
        "deletions": 2,
        "changes": 298,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1d7f4861fba9796ab10e16a46598369562a2ef9a",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 57,
        "deletions": 10,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "bc862de78a373a129639270c254730b42cf79d8e",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "ae626d4613f7fc69bab28be624ae829d1b790f0b",
        "filename": "src/test/uint256_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/uint256_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/uint256_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/uint256_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "2d3137e1e2a089651a5cde276bde27527f5cf899",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "a09c8c122d63f45a680da817ebe5014fb916ea9d",
        "filename": "src/test/util/setup_common.h",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "241c56934e502d503a2e1512ccba2f19ed3646e7",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "7fea31938a7f7fb5697f8bce2b06f2bc7ec8b58a",
        "filename": "src/test/validation_tests.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 2,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/validation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/validation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "50444f7bbe3de31ee509dc46d5d8a0995c6e3da0",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "0c2b7319677b55ed202e0887a7e9e08f611158f1",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f513f14af637fa2cf3b64e469c29fbf1d8331a95",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 24,
        "deletions": 10,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d074df2f20659b9602dbcca0c5f687b669a7014e",
        "filename": "src/uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "c55cb314568bd68b9641f780e362365163565ba5",
        "filename": "src/uint256.h",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3236184b0ba345f2f1cddbce246fd3f98ee12f1b",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1a217dd12d540ecc36ecff8fd2a2324d110e541a",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "a0c87bd00cdfa5408b167831aaa37c380ab48612",
        "filename": "src/util/string.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/string.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/string.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/string.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "41715aac1ab43a3444c449e3eacfb45741191256",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "be9dc4a884534ef37e82c53c3ed6e26d3003bb3d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 66,
        "deletions": 98,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d88bd077652a39db392d9e0ce0e22934af3eab8d",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 36,
        "deletions": 12,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1e07ff23ae8f6d162b41221c01f5eb290e1f89e2",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "7c3ce00fbcc2ac83bd6ba77391df0e2ede287055",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "019c3a3ae71fbbcb1861aed57ada199a490b0150",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "6cbad14de85fe0a380d805e469dfe6552b802fc8",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "5d8c4fba292054fa64c695b305cf8ca4d83ce9ce",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1b057000d268235ff70455e276d8c5d79bd9972f",
        "filename": "src/wallet/load.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 4,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/load.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/load.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "e12343de2745a687ab869a8a48699034c41367c6",
        "filename": "src/wallet/load.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/load.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/load.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/load.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "10af5c36c8ffc09a498292b32c71b00e33ac67c6",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 568,
        "deletions": 251,
        "changes": 819,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "184a16e91ddbf4a68ee98a4ab7ea6711b9674250",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b7c70dac3a7be1fc922e339af4c662f9cadb7523",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "c80310045ad8f882d6773d62c57bc5eeb68691ec",
        "filename": "src/wallet/test/init_test_fixture.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/init_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/init_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_test_fixture.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "ba8a5ff1f3a8a7849a352b552a10f944898ef811",
        "filename": "src/wallet/test/wallet_test_fixture.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/wallet_test_fixture.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/wallet_test_fixture.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "c42114c3947df8bd51404c79e4ac1180bf43ae2a",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4d8c0b175b0b07fc7d097099e0c93775be1ec346",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "fb08cb40851dfa936a951074c9da8aa60af71b69",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3938f6fd2c334939c8f82ab8e0d992510b4b9a16",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "dddba8d6b6ed53fbb701f37c5b3b729ae74c8ea7",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "5f0036206d64ae0a068f531d029fa731ef938d3e",
        "filename": "src/zmq/zmqconfig.h",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/src/zmq/zmqconfig.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/src/zmq/zmqconfig.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqconfig.h?ref=99c50a691afd4d55c249d0a66bfa5f24bd3ca173"
      },
      {
        "sha": "a2f994d7df8be162d9d28bca344508bb08c0aea2",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 74,
        "deletions": 79,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "788a383517c40d5496050ab70e54a87544b90ee4",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "c0207f9dd655d9f3907518a646a0fc77deea8139",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 71,
        "deletions": 12,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f13ed6f53763121855a07beafceee8b5d576e300",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f07a4ae9fd3c5d7160b34f36155dd681f5272582",
        "filename": "src/zmq/zmqutil.cpp",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqutil.cpp?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4c1df5d6db678d0d1e4c9685e24f294300efb886",
        "filename": "src/zmq/zmqutil.h",
        "status": "added",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/src/zmq/zmqutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqutil.h?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "82b30fed513a0081fc75bee1020489e24327b96d",
        "filename": "test/functional/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 4,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/README.md?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3b9bd3048f671eaac752dd471865c4532534e8be",
        "filename": "test/functional/example_test.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/example_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/example_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/example_test.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "daefb161ac794d2aec887c492c5592d977a29a66",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "19753d73ef34e14454286a814be2a628447f05a6",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "aad255c4a9e6a1ca52629c190873dd68673d4afc",
        "filename": "test/functional/feature_cltv.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_cltv.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b4355a65875b2c17a2ee024fcd50e4b09bc3ef08",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "39e8bca751dc2ed906c702d5794c8072ae7b2226",
        "filename": "test/functional/feature_csv_activation.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_csv_activation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_csv_activation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_csv_activation.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4bc47141a12e5e89d3c3aef15687fe9672753ecb",
        "filename": "test/functional/feature_dbcrash.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_dbcrash.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_dbcrash.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dbcrash.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "3f7efdbded754ea530c778d5760af99bc59c635e",
        "filename": "test/functional/feature_dersig.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_dersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_dersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_dersig.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d89eeec400d8d7574923b3c666335892ff729f5f",
        "filename": "test/functional/feature_fee_estimation.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_fee_estimation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_fee_estimation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_fee_estimation.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "e4ceb62c94cc1d0f26d342edfd09e86bb3ebcd87",
        "filename": "test/functional/feature_filelock.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_filelock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_filelock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_filelock.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d0a94658ff2a7503f4f71cfe257b57c719f39adb",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "df54ae777bf684cb1fbbd279939f27e7359569b0",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "96c581dedeb48447dff300fef8a13b05bf2d18e8",
        "filename": "test/functional/feature_signet.py",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_signet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_signet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_signet.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "2e4f4796b001b2511efecce82359b7e2cabb8273",
        "filename": "test/functional/feature_versionbits_warning.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_versionbits_warning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/feature_versionbits_warning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_versionbits_warning.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "9c877aaeae79ddc72bb505983949b13cfc1b6da7",
        "filename": "test/functional/interface_rpc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/interface_rpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/interface_rpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rpc.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "a0bc937f75b0275a7b3b9499fad08de4ad38745b",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 335,
        "deletions": 9,
        "changes": 344,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "57a059b7f7524436c0cfadf9372ff317d8b41681",
        "filename": "test/functional/mempool_accept.py",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_accept.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_accept.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_accept.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "fd3dd47e2d001f7db1010a0a9eb152a6f4ddb08e",
        "filename": "test/functional/mempool_compatibility.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_compatibility.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d7cb7db9f856f3c55d2b2ddf8720f7c7038e982c",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "1b2c7644bd4b8a4038502ac279712a4f80c6a73b",
        "filename": "test/functional/mining_basic.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mining_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/mining_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mining_basic.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "646baa155075e1f72b9e356a6d2bace513d4487c",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 19,
        "deletions": 15,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "506b48003902c7896b97ed785672eb83525b8b31",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 7,
        "deletions": 24,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "2349afa1eefa61f912fea3252500f555e4e3cbc6",
        "filename": "test/functional/p2p_dos_header_tree.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_dos_header_tree.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_dos_header_tree.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_dos_header_tree.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "642a21704796c524d31b98b7d90774a3222f611f",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "2b75ad517547d67d620d90ce1c26ebea6b7e3599",
        "filename": "test/functional/p2p_getaddr_caching.py",
        "status": "modified",
        "additions": 14,
        "deletions": 33,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_getaddr_caching.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_getaddr_caching.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_getaddr_caching.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "89d68d5ba07d30d42c6c66eea79bc32e14b62aa6",
        "filename": "test/functional/p2p_getdata.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_getdata.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_getdata.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_getdata.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "483f25f48c4fcfb86b2ea345777e105c5dd837c4",
        "filename": "test/functional/p2p_invalid_block.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_block.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "e4fc9fd17883bde0065ea12fe05854af8c513d5e",
        "filename": "test/functional/p2p_invalid_locator.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_locator.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_locator.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_locator.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "fbe58c5e2f96a1e963cc25bbc3289a8605832ae3",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "489d903c21c66eadff7b6f05fc474f210968a0f2",
        "filename": "test/functional/p2p_invalid_tx.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_tx.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_invalid_tx.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_tx.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "29735b0fb3e6f2461aca5ca8d4cdff904dc21c85",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f96567740837463303cf319ee8117c223c5944d0",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "6dcbec27144d3921c9a6f5a252938cf0731ab4e4",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b830248e1e23f05e96696426e4e7c54be42e175a",
        "filename": "test/functional/rpc_getpeerinfo_banscore_deprecation.py",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/test/functional/rpc_getpeerinfo_banscore_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99c50a691afd4d55c249d0a66bfa5f24bd3ca173/test/functional/rpc_getpeerinfo_banscore_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_banscore_deprecation.py?ref=99c50a691afd4d55c249d0a66bfa5f24bd3ca173"
      },
      {
        "sha": "287c40ae3e19fbb41107f0171aa4adbf111cc8cd",
        "filename": "test/functional/rpc_getpeerinfo_deprecation.py",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_getpeerinfo_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_getpeerinfo_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_getpeerinfo_deprecation.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "b8a04f494d494ca45280bbbbc9b4398c872a848f",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "781a49dfaca10f77d935bbc984d4b80e2fedd467",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "360962b8da6134ba0c25ac4743fcab928cf9c74d",
        "filename": "test/functional/test_framework/address.py",
        "status": "modified",
        "additions": 38,
        "deletions": 34,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/address.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/address.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/address.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "00cf1ef66d38ddf64294a97629f3fe09aa1d1e01",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "5f9b316b18aec11802e5dd3e67951f8f617852f5",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "00c0d8a919326b807d1f43a44319c6342132c32d",
        "filename": "test/functional/test_framework/segwit_addr.py",
        "status": "modified",
        "additions": 18,
        "deletions": 4,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/segwit_addr.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/segwit_addr.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/segwit_addr.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "046efe730e22656684e14fbc512e19484465bb65",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "ed6e830bb97910367eaef5f09cd34f8c3406f4f1",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "bba0b8974d4a742f1a4bb4a2f57590d3b3d8aa82",
        "filename": "test/functional/wallet_address_types.py",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_address_types.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_address_types.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_address_types.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "bcbac18d5787763979e5f77354b3639d56a8e44f",
        "filename": "test/functional/wallet_backup.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_backup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_backup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_backup.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "689a0fa4df232dc267d4c2288a3f2735f4642992",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "09581d864b9a3c64726b402cfdefce091be64048",
        "filename": "test/functional/wallet_dump.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_dump.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_dump.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_dump.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "87deaded095832c4ee61c36692dca36a62674445",
        "filename": "test/functional/wallet_import_rescan.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_import_rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_import_rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_rescan.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "f0be271c6603db1091b9a2beeff0552c4da52c58",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d3c03c4764440f526cd0fbde9a21ac9cc25ab098",
        "filename": "test/functional/wallet_resendwallettransactions.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_resendwallettransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_resendwallettransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_resendwallettransactions.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "4fdfad01c3cf48996a00afdd31789494f424269b",
        "filename": "test/functional/wallet_send.py",
        "status": "added",
        "additions": 344,
        "deletions": 0,
        "changes": 344,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "d3119925f752b36a98010ad1d5ffff26c16368e0",
        "filename": "test/functional/wallet_startup.py",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_startup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_startup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_startup.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "33a2a9411ea6487f7a4457773b8b7007fca7168b",
        "filename": "test/functional/wallet_txn_clone.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_txn_clone.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_txn_clone.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_txn_clone.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "031da8da8182ca02eda4025ee421d93767d16335",
        "filename": "test/functional/wallet_upgradewallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_upgradewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/functional/wallet_upgradewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_upgradewallet.py?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      },
      {
        "sha": "75257d886b3c163800d0da08ac95d2eb07ae252d",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31031361c319aaabb87cc3d5f552d1e1534c25cb/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=31031361c319aaabb87cc3d5f552d1e1534c25cb"
      }
    ]
  },
  {
    "sha": "6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Y2YwNzdkYTUwZTlhMmEzZmRlYWFjOWU5NmJlNTMxMmQzY2I4ZDc2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:14:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-02T08:40:32Z"
      },
      "message": "Fix expected error message in feature_taproot.py",
      "tree": {
        "sha": "20e95d319a11c5d8b3dcda97617e028b85273d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20e95d319a11c5d8b3dcda97617e028b85273d07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31031361c319aaabb87cc3d5f552d1e1534c25cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31031361c319aaabb87cc3d5f552d1e1534c25cb"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "753cc9556c10212b329ca7a9797017ae12214e41",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
        "patch": "@@ -558,7 +558,7 @@ def byte_popper(expr):\n ERR_MINIMALIF = {\"err_msg\": \"OP_IF/NOTIF argument must be minimal in tapscript\"}\n ERR_UNKNOWN_PUBKEY = {\"err_msg\": \"Public key is neither compressed or uncompressed\"}\n ERR_STACK_SIZE = {\"err_msg\": \"Stack size limit exceeded\"}\n-ERR_CLEANSTACK = {\"err_msg\": \"Extra items left on stack after execution\"}\n+ERR_CLEANSTACK = {\"err_msg\": \"Stack size must be exactly one after execution\"}\n ERR_STACK_EMPTY = {\"err_msg\": \"Operation not valid with the current stack size\"}\n ERR_SIGOPS_RATIO = {\"err_msg\": \"Too much signature validation relative to witness weight\"}\n ERR_UNDECODABLE = {\"err_msg\": \"Opcode missing or not understood\"}"
      }
    ]
  },
  {
    "sha": "490b9743641574746963b132fc2a3c34a0aaf409",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTBiOTc0MzY0MTU3NDc0Njk2M2IxMzJmYzJhM2MzNGEwYWFmNDA5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T21:17:49Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T21:17:49Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/06 ---",
      "tree": {
        "sha": "20e95d319a11c5d8b3dcda97617e028b85273d07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20e95d319a11c5d8b3dcda97617e028b85273d07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/490b9743641574746963b132fc2a3c34a0aaf409",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/490b9743641574746963b132fc2a3c34a0aaf409",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/490b9743641574746963b132fc2a3c34a0aaf409",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/490b9743641574746963b132fc2a3c34a0aaf409/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6cf077da50e9a2a3fdeaac9e96be5312d3cb8d76"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "4ade5781b4052341677b671ea5d76402867e1969",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YWRlNTc4MWI0MDUyMzQxNjc3YjY3MWVhNWQ3NjQwMjg2N2UxOTY5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T20:51:37Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T21:18:03Z"
      },
      "message": "Avoid a ScriptExecutionData copy in EvalScript",
      "tree": {
        "sha": "e4c5aad16e85a7d79dfc2f2610ad80ebaa4940b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4c5aad16e85a7d79dfc2f2610ad80ebaa4940b3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ade5781b4052341677b671ea5d76402867e1969",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ade5781b4052341677b671ea5d76402867e1969",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ade5781b4052341677b671ea5d76402867e1969",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ade5781b4052341677b671ea5d76402867e1969/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "490b9743641574746963b132fc2a3c34a0aaf409",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/490b9743641574746963b132fc2a3c34a0aaf409",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/490b9743641574746963b132fc2a3c34a0aaf409"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f4cf24fee5c78ffc74ff8461413c25cc9f5ca454",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 4,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ade5781b4052341677b671ea5d76402867e1969/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ade5781b4052341677b671ea5d76402867e1969/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=4ade5781b4052341677b671ea5d76402867e1969",
        "patch": "@@ -428,8 +428,7 @@ static bool EvalChecksig(const valtype& sig, const valtype& pubkey, CScript::con\n     assert(false);\n }\n \n-\n-bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, ScriptExecutionData execdata)\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptExecutionData& execdata, ScriptError* serror)\n {\n     static const CScriptNum bnZero(0);\n     static const CScriptNum bnOne(1);\n@@ -1257,6 +1256,12 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n     return set_success(serror);\n }\n \n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n+{\n+    ScriptExecutionData execdata;\n+    return EvalScript(stack, script, flags, checker, sigversion, execdata, serror);\n+}\n+\n namespace {\n \n /**\n@@ -1776,7 +1781,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSequence(const CScriptNum& nSeq\n template class GenericTransactionSignatureChecker<CTransaction>;\n template class GenericTransactionSignatureChecker<CMutableTransaction>;\n \n-static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, const ScriptExecutionData& execdata, ScriptError* serror)\n+static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptExecutionData& execdata, ScriptError* serror)\n {\n     std::vector<valtype> stack{stack_span.begin(), stack_span.end()};\n \n@@ -1810,7 +1815,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     }\n \n     // Run the script interpreter.\n-    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, serror, execdata)) return false;\n+    if (!EvalScript(stack, scriptPubKey, flags, checker, sigversion, execdata, serror)) return false;\n \n     // Scripts inside witness implicitly require cleanstack behaviour\n     if (stack.size() != 1) return set_error(serror, SCRIPT_ERR_CLEANSTACK);"
      },
      {
        "sha": "1050ed15502b3c70c80a2368aae898ca8c657ec5",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ade5781b4052341677b671ea5d76402867e1969/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ade5781b4052341677b671ea5d76402867e1969/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=4ade5781b4052341677b671ea5d76402867e1969",
        "patch": "@@ -272,7 +272,8 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n using TransactionSignatureChecker = GenericTransactionSignatureChecker<CTransaction>;\n using MutableTransactionSignatureChecker = GenericTransactionSignatureChecker<CMutableTransaction>;\n \n-bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* error = nullptr, ScriptExecutionData execdata = {});\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptExecutionData& execdata, ScriptError* error = nullptr);\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* error = nullptr);\n bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror = nullptr);\n \n size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey, const CScriptWitness* witness, unsigned int flags);"
      }
    ]
  },
  {
    "sha": "10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMGI5YTQ4MzZhM2JmNTdjZTU5ZDc0MWFlNWRmYWI1Y2RmMDE4NmU2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T21:20:14Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-06T21:20:14Z"
      },
      "message": "Remove inadvertantly added newlines",
      "tree": {
        "sha": "ac0ed722d79126a206e8373aa385b9cb5a1bb9d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac0ed722d79126a206e8373aa385b9cb5a1bb9d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ade5781b4052341677b671ea5d76402867e1969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ade5781b4052341677b671ea5d76402867e1969",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ade5781b4052341677b671ea5d76402867e1969"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a2efd8ac073000524b59183befac118d70437d3a",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
        "patch": "@@ -1500,7 +1500,6 @@ BOOST_AUTO_TEST_CASE(script_HasValidOps)\n     BOOST_CHECK(!script.HasValidOps());\n }\n \n-\n #if defined(HAVE_CONSENSUS_LIB)\n \n /* Test simple (successful) usage of bitcoinconsensus_verify_script */"
      },
      {
        "sha": "17b869e542696b376b39c70f9a9abf7378becc62",
        "filename": "test/functional/test_framework/key.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6/test/functional/test_framework/key.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6/test/functional/test_framework/key.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/key.py?ref=10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
        "patch": "@@ -1,5 +1,4 @@\n # Copyright (c) 2019-2020 Pieter Wuille\n-\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test-only secp256k1 elliptic curve implementation"
      }
    ]
  },
  {
    "sha": "68ebf4a2de96bad60946d1e9e25ea4eadf809728",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OGViZjRhMmRlOTZiYWQ2MDk0NmQxZTllMjVlYTRlYWRmODA5NzI4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:33:14Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:33:14Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/07 ---",
      "tree": {
        "sha": "ac0ed722d79126a206e8373aa385b9cb5a1bb9d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac0ed722d79126a206e8373aa385b9cb5a1bb9d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/68ebf4a2de96bad60946d1e9e25ea4eadf809728",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ebf4a2de96bad60946d1e9e25ea4eadf809728",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/68ebf4a2de96bad60946d1e9e25ea4eadf809728",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ebf4a2de96bad60946d1e9e25ea4eadf809728/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10b9a4836a3bf57ce59d741ae5dfab5cdf0186e6"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "3265f14e39e3ad1476479b9b1e8304231d2e5647",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjY1ZjE0ZTM5ZTNhZDE0NzY0NzliOWIxZTgzMDQyMzFkMmU1NjQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:55:08Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:55:08Z"
      },
      "message": "Variable naming/typing/calling improvements",
      "tree": {
        "sha": "503be2dd8b48752a6ba66f351a66dbdb19ceea3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/503be2dd8b48752a6ba66f351a66dbdb19ceea3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3265f14e39e3ad1476479b9b1e8304231d2e5647",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3265f14e39e3ad1476479b9b1e8304231d2e5647",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3265f14e39e3ad1476479b9b1e8304231d2e5647",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3265f14e39e3ad1476479b9b1e8304231d2e5647/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "68ebf4a2de96bad60946d1e9e25ea4eadf809728",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/68ebf4a2de96bad60946d1e9e25ea4eadf809728",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/68ebf4a2de96bad60946d1e9e25ea4eadf809728"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "689328765c95a4f93d18d8c6459b5fb511e7acf9",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "patch": "@@ -167,10 +167,10 @@ int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_\n     return 1;\n }\n \n-XOnlyPubKey::XOnlyPubKey(Span<const unsigned char> in)\n+XOnlyPubKey::XOnlyPubKey(Span<const unsigned char> bytes)\n {\n-    assert(in.size() == 32);\n-    std::copy(in.begin(), in.end(), m_keydata.begin());\n+    assert(bytes.size() == 32);\n+    std::copy(bytes.begin(), bytes.end(), m_keydata.begin());\n }\n \n bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const {\n@@ -180,7 +180,7 @@ bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> si\n     return secp256k1_schnorrsig_verify(secp256k1_context_verify, sigbytes.data(), msg.begin(), &pubkey);\n }\n \n-bool XOnlyPubKey::CheckPayToContract(const XOnlyPubKey& base, const uint256& hash, const bool parity) const\n+bool XOnlyPubKey::CheckPayToContract(const XOnlyPubKey& base, const uint256& hash, bool parity) const\n {\n     secp256k1_xonly_pubkey base_point;\n     if (!secp256k1_xonly_pubkey_parse(secp256k1_context_verify, &base_point, base.data())) return false;"
      },
      {
        "sha": "65f3fdf38724fa085557853a9a981cad79bd5172",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "patch": "@@ -213,7 +213,7 @@ class XOnlyPubKey {\n \n public:\n     /** Construct an x-only pubkey from exactly 32 bytes. */\n-    XOnlyPubKey(Span<const unsigned char> input);\n+    XOnlyPubKey(Span<const unsigned char> bytes);\n \n     /** Verify a Schnorr signature against this public key.\n      *"
      },
      {
        "sha": "085eafcd0ec5a2e5c5d6013ff7675d5dfe43fd69",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "patch": "@@ -1418,7 +1418,7 @@ uint256 GetSpentScriptsSHA256(const std::vector<CTxOut>& outputs_spent)\n } // namespace\n \n template <class T>\n-void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut> spent_outputs)\n+void PrecomputedTransactionData::Init(const T& txTo, std::vector<CTxOut>&& spent_outputs)\n {\n     assert(!m_spent_outputs_ready);\n \n@@ -1476,8 +1476,8 @@ PrecomputedTransactionData::PrecomputedTransactionData(const T& txTo)\n }\n \n // explicit instantiation\n-template void PrecomputedTransactionData::Init(const CTransaction& txTo, std::vector<CTxOut> spent_outputs);\n-template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo, std::vector<CTxOut> spent_outputs);\n+template void PrecomputedTransactionData::Init(const CTransaction& txTo, std::vector<CTxOut>&& spent_outputs);\n+template void PrecomputedTransactionData::Init(const CMutableTransaction& txTo, std::vector<CTxOut>&& spent_outputs);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CTransaction& txTo);\n template PrecomputedTransactionData::PrecomputedTransactionData(const CMutableTransaction& txTo);\n \n@@ -1487,7 +1487,7 @@ static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n-bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, const uint32_t in_pos, const uint8_t hash_type, const SigVersion sigversion, const uint8_t key_version, const PrecomputedTransactionData& cache)\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, uint32_t in_pos, uint8_t hash_type, SigVersion sigversion, uint8_t key_version, const PrecomputedTransactionData& cache)\n {\n     uint8_t ext_flag;\n     switch (sigversion) {"
      },
      {
        "sha": "c576f15f2401fa0c6b3a4178edded01134a58076",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "patch": "@@ -167,7 +167,7 @@ struct PrecomputedTransactionData\n     PrecomputedTransactionData() = default;\n \n     template <class T>\n-    void Init(const T& tx, std::vector<CTxOut> spent_outputs);\n+    void Init(const T& tx, std::vector<CTxOut>&& spent_outputs);\n \n     template <class T>\n     explicit PrecomputedTransactionData(const T& tx);"
      },
      {
        "sha": "fdabff9bb668e339ea8f808d3f04bcb0f1ee2d00",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3265f14e39e3ad1476479b9b1e8304231d2e5647/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "patch": "@@ -1543,7 +1543,7 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n         spent_outputs.reserve(tx.vin.size());\n \n         for (const auto& txin : tx.vin) {\n-            const COutPoint &prevout = txin.prevout;\n+            const COutPoint& prevout = txin.prevout;\n             const Coin& coin = inputs.AccessCoin(prevout);\n             assert(!coin.IsSpent());\n             spent_outputs.emplace_back(coin.out);"
      }
    ]
  },
  {
    "sha": "c1710042e5ead88b6363485f092442cca933e32a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMTcxMDA0MmU1ZWFkODhiNjM2MzQ4NWYwOTI0NDJjY2E5MzNlMzJh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:56:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:56:44Z"
      },
      "message": "Use more constexpr",
      "tree": {
        "sha": "3ee7d5a35153b95c908e5aeab96ca2aa9f510703",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ee7d5a35153b95c908e5aeab96ca2aa9f510703"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1710042e5ead88b6363485f092442cca933e32a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1710042e5ead88b6363485f092442cca933e32a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1710042e5ead88b6363485f092442cca933e32a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1710042e5ead88b6363485f092442cca933e32a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3265f14e39e3ad1476479b9b1e8304231d2e5647",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3265f14e39e3ad1476479b9b1e8304231d2e5647"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "974cde49840d95773d9bce9486cbabc5071bdee7",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1710042e5ead88b6363485f092442cca933e32a/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1710042e5ead88b6363485f092442cca933e32a/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=c1710042e5ead88b6363485f092442cca933e32a",
        "patch": "@@ -47,7 +47,7 @@ static const uint32_t LOCKTIME_MAX = 0xFFFFFFFFU;\n // Tag for input annex. If there are at least two witness elements for a transaction input,\n // and the first byte of the last element is 0x50, this last element is called annex, and\n // has meanings independent of the script\n-static const unsigned int ANNEX_TAG = 0x50;\n+static constexpr unsigned int ANNEX_TAG = 0x50;\n \n // Validation weight per passing signature (Tapscript only, see BIP 342).\n static constexpr uint64_t VALIDATION_WEIGHT_PER_SIGOP_PASSED = 50;"
      },
      {
        "sha": "4a6e04f2eb3898aff4c7842d826f6494dbf82816",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1710042e5ead88b6363485f092442cca933e32a/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1710042e5ead88b6363485f092442cca933e32a/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=c1710042e5ead88b6363485f092442cca933e32a",
        "patch": "@@ -37,8 +37,8 @@ class CSignatureCache\n         // this chunk, which makes later hash computations more efficient. We\n         // just write our 32-byte entropy, and then pad with 'E' for ECDSA and\n         // 'S' for Schnorr (followed by 0 bytes).\n-        static const unsigned char PADDING_ECDSA[32] = {'E'};\n-        static const unsigned char PADDING_SCHNORR[32] = {'S'};\n+        static constexpr unsigned char PADDING_ECDSA[32] = {'E'};\n+        static constexpr unsigned char PADDING_SCHNORR[32] = {'S'};\n         m_salted_hasher_ecdsa.Write(nonce.begin(), 32);\n         m_salted_hasher_ecdsa.Write(PADDING_ECDSA, 32);\n         m_salted_hasher_schnorr.Write(nonce.begin(), 32);"
      }
    ]
  },
  {
    "sha": "2ea6a0a3c289a4b05a496ffc683712d695c03130",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWE2YTBhM2MyODlhNGIwNWE0OTZmZmM2ODM3MTJkNjk1YzAzMTMw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:58:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T18:58:39Z"
      },
      "message": "Consistent comment style",
      "tree": {
        "sha": "72eac1afddb2f2e440a8aad39593766940632f2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/72eac1afddb2f2e440a8aad39593766940632f2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ea6a0a3c289a4b05a496ffc683712d695c03130",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea6a0a3c289a4b05a496ffc683712d695c03130",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea6a0a3c289a4b05a496ffc683712d695c03130",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea6a0a3c289a4b05a496ffc683712d695c03130/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1710042e5ead88b6363485f092442cca933e32a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1710042e5ead88b6363485f092442cca933e32a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1710042e5ead88b6363485f092442cca933e32a"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d000eaed982daa9cdb886bf179789d3eaff6e8e9",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ea6a0a3c289a4b05a496ffc683712d695c03130/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ea6a0a3c289a4b05a496ffc683712d695c03130/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=2ea6a0a3c289a4b05a496ffc683712d695c03130",
        "patch": "@@ -200,9 +200,9 @@ struct ScriptExecutionData\n     //! Hash of the annex data.\n     uint256 m_annex_hash;\n \n-    /** Whether m_validation_weight_left is initialized. */\n+    //! Whether m_validation_weight_left is initialized.\n     bool m_validation_weight_left_init = false;\n-    /** How much validation weight is left (decremented for every successful non-empty signature check). */\n+    //! How much validation weight is left (decremented for every successful non-empty signature check).\n     int64_t m_validation_weight_left;\n };\n "
      }
    ]
  },
  {
    "sha": "836232441c41788c720a7858c0521c9ea405c5b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MzYyMzI0NDFjNDE3ODhjNzIwYTc4NThjMDUyMWM5ZWE0MDVjNWI3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T19:06:45Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-07T19:06:45Z"
      },
      "message": "Add comments referencing the BIPs",
      "tree": {
        "sha": "7636dd7926b6039aab4fb0c2553a67d2f9be2f3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7636dd7926b6039aab4fb0c2553a67d2f9be2f3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/836232441c41788c720a7858c0521c9ea405c5b7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/836232441c41788c720a7858c0521c9ea405c5b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/836232441c41788c720a7858c0521c9ea405c5b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/836232441c41788c720a7858c0521c9ea405c5b7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ea6a0a3c289a4b05a496ffc683712d695c03130",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ea6a0a3c289a4b05a496ffc683712d695c03130",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ea6a0a3c289a4b05a496ffc683712d695c03130"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3d819675604d2ab961c94f37c4ec4ace82f10030",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/836232441c41788c720a7858c0521c9ea405c5b7/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/836232441c41788c720a7858c0521c9ea405c5b7/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=836232441c41788c720a7858c0521c9ea405c5b7",
        "patch": "@@ -636,6 +636,8 @@ bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript&\n                         valtype& vch = stacktop(-1);\n                         // Tapscript requires minimal IF/NOTIF inputs as a consensus rule.\n                         if (sigversion == SigVersion::TAPSCRIPT) {\n+                            // The input argument to the OP_IF and OP_NOTIF opcodes must be either\n+                            // exactly 0 (the empty vector) or exactly 1 (the one-byte vector with value 1).\n                             if (vch.size() > 1 || (vch.size() == 1 && vch[0] != 1)) {\n                                 return set_error(serror, SCRIPT_ERR_TAPSCRIPT_MINIMALIF);\n                             }\n@@ -1556,7 +1558,9 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n     if (sigversion == SigVersion::TAPSCRIPT) {\n         assert(execdata.m_tapleaf_hash_init);\n         ss << execdata.m_tapleaf_hash;\n-        assert(key_version == 0); // key_version must be 0 for now\n+        // Key_version must be 0 for now, representing the current version of\n+        // public keys in the tapscript signature opcode execution.\n+        assert(key_version == 0);\n         ss << key_version;\n         assert(execdata.m_codeseparator_pos_init);\n         ss << execdata.m_codeseparator_pos;"
      }
    ]
  },
  {
    "sha": "5a7897645a599b050514a6765237f9a20b81865b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTc4OTc2NDVhNTk5YjA1MDUxNGE2NzY1MjM3ZjlhMjBiODE4NjVi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-08T23:16:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-08T23:16:02Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/08 ---",
      "tree": {
        "sha": "7636dd7926b6039aab4fb0c2553a67d2f9be2f3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7636dd7926b6039aab4fb0c2553a67d2f9be2f3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a7897645a599b050514a6765237f9a20b81865b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a7897645a599b050514a6765237f9a20b81865b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a7897645a599b050514a6765237f9a20b81865b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a7897645a599b050514a6765237f9a20b81865b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "836232441c41788c720a7858c0521c9ea405c5b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/836232441c41788c720a7858c0521c9ea405c5b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/836232441c41788c720a7858c0521c9ea405c5b7"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "fb6bc8a0993a9feca8e3aad21f0305be106ce507",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjZiYzhhMDk5M2E5ZmVjYThlM2FhZDIxZjAzMDViZTEwNmNlNTA3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-08T23:24:44Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-08T23:24:44Z"
      },
      "message": "Decide key_version based on sigversion instead of passing through",
      "tree": {
        "sha": "47c161c7320acb5204e05520888166198f7d3af4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47c161c7320acb5204e05520888166198f7d3af4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb6bc8a0993a9feca8e3aad21f0305be106ce507",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6bc8a0993a9feca8e3aad21f0305be106ce507",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6bc8a0993a9feca8e3aad21f0305be106ce507",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6bc8a0993a9feca8e3aad21f0305be106ce507/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a7897645a599b050514a6765237f9a20b81865b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a7897645a599b050514a6765237f9a20b81865b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a7897645a599b050514a6765237f9a20b81865b"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d9ba8c1bfd7c66956a56ee55d335e6762c3e82a9",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb6bc8a0993a9feca8e3aad21f0305be106ce507/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb6bc8a0993a9feca8e3aad21f0305be106ce507/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=fb6bc8a0993a9feca8e3aad21f0305be106ce507",
        "patch": "@@ -1489,15 +1489,21 @@ static const CHashWriter HASHER_TAPBRANCH = TaggedHash(\"TapBranch\");\n static const CHashWriter HASHER_TAPTWEAK = TaggedHash(\"TapTweak\");\n \n template<typename T>\n-bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, uint32_t in_pos, uint8_t hash_type, SigVersion sigversion, uint8_t key_version, const PrecomputedTransactionData& cache)\n+bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata, const T& tx_to, uint32_t in_pos, uint8_t hash_type, SigVersion sigversion, const PrecomputedTransactionData& cache)\n {\n-    uint8_t ext_flag;\n+    uint8_t ext_flag, key_version;\n     switch (sigversion) {\n     case SigVersion::TAPROOT:\n         ext_flag = 0;\n+        // key_version is not used and left uninitialized.\n         break;\n     case SigVersion::TAPSCRIPT:\n         ext_flag = 1;\n+        // key_version must be 0 for now, representing the current version of\n+        // 32-byte public keys in the tapscript signature opcode execution.\n+        // An upgradable public key version (with a size not 32-byte) may\n+        // request a different key_version with a new sigversion.\n+        key_version = 0;\n         break;\n     default:\n         assert(false);\n@@ -1558,9 +1564,6 @@ bool SignatureHashSchnorr(uint256& hash_out, const ScriptExecutionData& execdata\n     if (sigversion == SigVersion::TAPSCRIPT) {\n         assert(execdata.m_tapleaf_hash_init);\n         ss << execdata.m_tapleaf_hash;\n-        // Key_version must be 0 for now, representing the current version of\n-        // public keys in the tapscript signature opcode execution.\n-        assert(key_version == 0);\n         ss << key_version;\n         assert(execdata.m_codeseparator_pos_init);\n         ss << execdata.m_codeseparator_pos;\n@@ -1693,7 +1696,7 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n     }\n     uint256 sighash;\n     assert(this->txdata);\n-    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, /* key_version */ 0x00, *this->txdata)) return false;\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, *this->txdata)) return false;\n     return VerifySchnorrSignature(sig, pubkey, sighash);\n }\n "
      }
    ]
  },
  {
    "sha": "67750a3e1ed1696c09a998d7f5758394d896f99d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2Nzc1MGEzZTFlZDE2OTZjMDlhOTk4ZDdmNTc1ODM5NGQ4OTZmOTlk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-09T00:39:04Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-09T00:39:04Z"
      },
      "message": "Report more detailed signature validation errors",
      "tree": {
        "sha": "c0bb8e6155c009fbb227d744c7422d491ac90d8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0bb8e6155c009fbb227d744c7422d491ac90d8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/67750a3e1ed1696c09a998d7f5758394d896f99d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67750a3e1ed1696c09a998d7f5758394d896f99d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/67750a3e1ed1696c09a998d7f5758394d896f99d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67750a3e1ed1696c09a998d7f5758394d896f99d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb6bc8a0993a9feca8e3aad21f0305be106ce507",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6bc8a0993a9feca8e3aad21f0305be106ce507",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6bc8a0993a9feca8e3aad21f0305be106ce507"
      }
    ],
    "stats": {
      "total": 144,
      "additions": 77,
      "deletions": 67
    },
    "files": [
      {
        "sha": "92994a56e32737f704d05815798bc9c63865bb0a",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 9,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -391,8 +391,8 @@ static bool EvalChecksigTapscript(const valtype& sig, const valtype& pubkey, Scr\n     if (pubkey.size() == 0) {\n         return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     } else if (pubkey.size() == 32) {\n-        if (success && !checker.CheckSchnorrSignature(sig, pubkey, sigversion, execdata)) {\n-            return set_error(serror, SCRIPT_ERR_SIG_NULLFAIL);\n+        if (success && !checker.CheckSchnorrSignature(sig, pubkey, sigversion, execdata, serror)) {\n+            return false;\n         }\n     } else {\n         /*\n@@ -1676,7 +1676,7 @@ bool GenericTransactionSignatureChecker<T>::CheckECDSASignature(const std::vecto\n }\n \n template <class T>\n-bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion, const ScriptExecutionData& execdata) const\n+bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey_in, SigVersion sigversion, const ScriptExecutionData& execdata, ScriptError* serror) const\n {\n     assert(sigversion == SigVersion::TAPROOT || sigversion == SigVersion::TAPSCRIPT);\n     // Schnorr signatures have 32-byte public keys. The caller is responsible for enforcing this.\n@@ -1685,19 +1685,22 @@ bool GenericTransactionSignatureChecker<T>::CheckSchnorrSignature(Span<const uns\n     // abort script execution). This is implemented in EvalChecksigTapscript, which won't invoke\n     // CheckSchnorrSignature in that case. In other contexts, they are invalid like every other signature with\n     // size different from 64 or 65.\n-    if (sig.size() != 64 && sig.size() != 65) return false;\n+    if (sig.size() != 64 && sig.size() != 65) return set_error(serror, SCRIPT_ERR_SCHNORR_SIG_SIZE);\n \n     XOnlyPubKey pubkey{pubkey_in};\n \n     uint8_t hashtype = SIGHASH_DEFAULT;\n     if (sig.size() == 65) {\n         hashtype = SpanPopBack(sig);\n-        if (hashtype == SIGHASH_DEFAULT) return false;\n+        if (hashtype == SIGHASH_DEFAULT) return set_error(serror, SCRIPT_ERR_SCHNORR_SIG_HASHTYPE);\n     }\n     uint256 sighash;\n     assert(this->txdata);\n-    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, *this->txdata)) return false;\n-    return VerifySchnorrSignature(sig, pubkey, sighash);\n+    if (!SignatureHashSchnorr(sighash, execdata, *txTo, nIn, hashtype, sigversion, *this->txdata)) {\n+        return set_error(serror, SCRIPT_ERR_SCHNORR_SIG_HASHTYPE);\n+    }\n+    if (!VerifySchnorrSignature(sig, pubkey, sighash)) return set_error(serror, SCRIPT_ERR_SCHNORR_SIG);\n+    return true;\n }\n \n template <class T>\n@@ -1896,8 +1899,8 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n         execdata.m_annex_init = true;\n         if (stack.size() == 1) {\n             // Key path spending (stack size is 1 after removing optional annex)\n-            if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT, execdata)) {\n-                return set_error(serror, SCRIPT_ERR_TAPROOT_INVALID_SIG);\n+            if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT, execdata, serror)) {\n+                return false;\n             }\n             return set_success(serror);\n         } else {"
      },
      {
        "sha": "c0c2b012c68563d34182a37194f16d29ab27f871",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -229,7 +229,7 @@ class BaseSignatureChecker\n         return false;\n     }\n \n-    virtual bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const\n+    virtual bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata, ScriptError* serror = nullptr) const\n     {\n         return false;\n     }\n@@ -264,7 +264,7 @@ class GenericTransactionSignatureChecker : public BaseSignatureChecker\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(nullptr) {}\n     GenericTransactionSignatureChecker(const T* txToIn, unsigned int nInIn, const CAmount& amountIn, const PrecomputedTransactionData& txdataIn) : txTo(txToIn), nIn(nInIn), amount(amountIn), txdata(&txdataIn) {}\n     bool CheckECDSASignature(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const override;\n-    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const override;\n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata, ScriptError* serror = nullptr) const override;\n     bool CheckLockTime(const CScriptNum& nLockTime) const override;\n     bool CheckSequence(const CScriptNum& nSequence) const override;\n };"
      },
      {
        "sha": "fadc04262c3146e45a06eae2d7c6053bdbe2c49d",
        "filename": "src/script/script_error.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/script_error.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/script_error.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.cpp?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -97,8 +97,12 @@ std::string ScriptErrorString(const ScriptError serror)\n             return \"Witness provided for non-witness script\";\n         case SCRIPT_ERR_WITNESS_PUBKEYTYPE:\n             return \"Using non-compressed keys in segwit\";\n-        case SCRIPT_ERR_TAPROOT_INVALID_SIG:\n-            return \"Invalid signature for Taproot key path spending\";\n+        case SCRIPT_ERR_SCHNORR_SIG_SIZE:\n+            return \"Invalid Schnorr signature size\";\n+        case SCRIPT_ERR_SCHNORR_SIG_HASHTYPE:\n+            return \"Invalid Schnorr signature hash type\";\n+        case SCRIPT_ERR_SCHNORR_SIG:\n+            return \"Invalid Schnorr signature\";\n         case SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE:\n             return \"Invalid Taproot control block size\";\n         case SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT:"
      },
      {
        "sha": "b0716816138226ecd1d104e920ae3ac1c40b0ec7",
        "filename": "src/script/script_error.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/script_error.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/src/script/script_error.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script_error.h?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -70,7 +70,9 @@ typedef enum ScriptError_t\n     SCRIPT_ERR_WITNESS_PUBKEYTYPE,\n \n     /* Taproot */\n-    SCRIPT_ERR_TAPROOT_INVALID_SIG,\n+    SCRIPT_ERR_SCHNORR_SIG_SIZE,\n+    SCRIPT_ERR_SCHNORR_SIG_HASHTYPE,\n+    SCRIPT_ERR_SCHNORR_SIG,\n     SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE,\n     SCRIPT_ERR_TAPSCRIPT_VALIDATION_WEIGHT,\n     SCRIPT_ERR_TAPSCRIPT_CHECKMULTISIG,"
      },
      {
        "sha": "e121c89665b4f579b9119ff66fcc409899b5961a",
        "filename": "src/test/fuzz/signature_checker.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/src/test/fuzz/signature_checker.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/src/test/fuzz/signature_checker.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/signature_checker.cpp?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -33,7 +33,7 @@ class FuzzedSignatureChecker : public BaseSignatureChecker\n         return m_fuzzed_data_provider.ConsumeBool();\n     }\n \n-    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata) const override\n+    bool CheckSchnorrSignature(Span<const unsigned char> sig, Span<const unsigned char> pubkey, SigVersion sigversion, const ScriptExecutionData& execdata, ScriptError* serror = nullptr) const override\n     {\n         return m_fuzzed_data_provider.ConsumeBool();\n     }"
      },
      {
        "sha": "82ccdae061505413d2ccafa317480673fca8cea6",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 53,
        "deletions": 52,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/67750a3e1ed1696c09a998d7f5758394d896f99d/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/67750a3e1ed1696c09a998d7f5758394d896f99d/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=67750a3e1ed1696c09a998d7f5758394d896f99d",
        "patch": "@@ -547,8 +547,9 @@ def byte_popper(expr):\n \n # Expected error strings\n \n-ERR_KEYPATH_INVALID_SIG = {\"err_msg\": \"Invalid signature for Taproot key path spending\"}\n-ERR_SCRIPTPATH_INVALID_SIG = {\"err_msg\": \"Signature must be zero for failed CHECK(MULTI)SIG operation\"}\n+ERR_SIG_SIZE = {\"err_msg\": \"Invalid Schnorr signature size\"}\n+ERR_SIG_HASHTYPE = {\"err_msg\": \"Invalid Schnorr signature hash type\"}\n+ERR_SIG_SCHNORR = {\"err_msg\": \"Invalid Schnorr signature\"}\n ERR_OP_RETURN = {\"err_msg\": \"OP_RETURN was encountered\"}\n ERR_CONTROLBLOCK_SIZE = {\"err_msg\": \"Invalid Taproot control block size\"}\n ERR_WITNESS_PROGRAM_MISMATCH = {\"err_msg\": \"Witness program hash mismatch\"}\n@@ -609,15 +610,15 @@ def spenders_taproot_active():\n \n     tap = taproot_construct(pubs[0])\n     # Test with key with bit flipped.\n-    add_spender(spenders, \"sig/key\", tap=tap, key=secs[0], failure={\"key_tweaked\": bitflipper(default_key_tweaked)}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sig/key\", tap=tap, key=secs[0], failure={\"key_tweaked\": bitflipper(default_key_tweaked)}, **ERR_SIG_SCHNORR)\n     # Test with sighash with bit flipped.\n-    add_spender(spenders, \"sig/sighash\", tap=tap, key=secs[0], failure={\"sighash\": bitflipper(default_sighash)}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sig/sighash\", tap=tap, key=secs[0], failure={\"sighash\": bitflipper(default_sighash)}, **ERR_SIG_SCHNORR)\n     # Test with invalid R sign.\n-    add_spender(spenders, \"sig/flip_r\", tap=tap, key=secs[0], failure={\"flag_flip_r\": True}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sig/flip_r\", tap=tap, key=secs[0], failure={\"flag_flip_r\": True}, **ERR_SIG_SCHNORR)\n     # Test with invalid P sign.\n-    add_spender(spenders, \"sig/flip_p\", tap=tap, key=secs[0], failure={\"flag_flip_p\": True}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sig/flip_p\", tap=tap, key=secs[0], failure={\"flag_flip_p\": True}, **ERR_SIG_SCHNORR)\n     # Test with signature with bit flipped.\n-    add_spender(spenders, \"sig/bitflip\", tap=tap, key=secs[0], failure={\"signature\": bitflipper(default_signature)}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sig/bitflip\", tap=tap, key=secs[0], failure={\"signature\": bitflipper(default_signature)}, **ERR_SIG_SCHNORR)\n \n     # == Tests for signature hashing ==\n \n@@ -632,18 +633,18 @@ def spenders_taproot_active():\n \n             # Pure pubkey\n             tap = taproot_construct(pubs[0])\n-            add_spender(spenders, \"sighash/purepk\", tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n+            add_spender(spenders, \"sighash/purepk\", tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n \n             # Pubkey/P2PK script combination\n             scripts = [(\"s0\", CScript(random_checksig_style(pubs[1])))]\n             tap = taproot_construct(pubs[0], scripts)\n-            add_spender(spenders, \"sighash/keypath_hashtype_%x\" % hashtype, tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n-            add_spender(spenders, \"sighash/scriptpath_hashtype_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+            add_spender(spenders, \"sighash/keypath_hashtype_%x\" % hashtype, tap=tap, key=secs[0], **common, **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n+            add_spender(spenders, \"sighash/scriptpath_hashtype_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n \n             # Test SIGHASH_SINGLE behavior in combination with mismatching outputs\n             if hashtype in VALID_SIGHASHES_TAPROOT_SINGLE:\n-                add_spender(spenders, \"sighash/keypath_hashtype_mis_%x\" % hashtype, tap=tap, key=secs[0], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), failure={\"hashtype_actual\": hashtype}, **ERR_KEYPATH_INVALID_SIG, need_vin_vout_mismatch=True)\n-                add_spender(spenders, \"sighash/scriptpath_hashtype_mis_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), **SINGLE_SIG, failure={\"hashtype_actual\": hashtype}, **ERR_SCRIPTPATH_INVALID_SIG, need_vin_vout_mismatch=True)\n+                add_spender(spenders, \"sighash/keypath_hashtype_mis_%x\" % hashtype, tap=tap, key=secs[0], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), failure={\"hashtype_actual\": hashtype}, **ERR_SIG_HASHTYPE, need_vin_vout_mismatch=True)\n+                add_spender(spenders, \"sighash/scriptpath_hashtype_mis_%x\" % hashtype, tap=tap, leaf=\"s0\", key=secs[1], annex=annex, standard=no_annex, hashtype_actual=random.choice(VALID_SIGHASHES_TAPROOT_NO_SINGLE), **SINGLE_SIG, failure={\"hashtype_actual\": hashtype}, **ERR_SIG_HASHTYPE, need_vin_vout_mismatch=True)\n \n         # Test OP_CODESEPARATOR impact on sighashing.\n         hashtype = lambda _: random.choice(VALID_SIGHASHES_TAPROOT)\n@@ -655,34 +656,34 @@ def spenders_taproot_active():\n         ]\n         random.shuffle(scripts)\n         tap = taproot_construct(pubs[0], scripts)\n-        add_spender(spenders, \"sighash/pk_codesep\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"sighash/codesep_pk\", tap=tap, leaf=\"codesep_pk\", key=secs[1], codeseppos=0, **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"sighash/branched_codesep/left\", tap=tap, leaf=\"branched_codesep\", key=secs[0], codeseppos=3, **common, inputs=[getter(\"sign\"), b'\\x01'], **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"sighash/branched_codesep/right\", tap=tap, leaf=\"branched_codesep\", key=secs[1], codeseppos=6, **common, inputs=[getter(\"sign\"), b''], **SIGHASH_BITFLIP, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/pk_codesep\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n+        add_spender(spenders, \"sighash/codesep_pk\", tap=tap, leaf=\"codesep_pk\", key=secs[1], codeseppos=0, **common, **SINGLE_SIG, **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n+        add_spender(spenders, \"sighash/branched_codesep/left\", tap=tap, leaf=\"branched_codesep\", key=secs[0], codeseppos=3, **common, inputs=[getter(\"sign\"), b'\\x01'], **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n+        add_spender(spenders, \"sighash/branched_codesep/right\", tap=tap, leaf=\"branched_codesep\", key=secs[1], codeseppos=6, **common, inputs=[getter(\"sign\"), b''], **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n \n     # Reusing the scripts above, test that various features affect the sighash.\n-    add_spender(spenders, \"sighash/annex\", tap=tap, leaf=\"pk_codesep\", key=secs[1], hashtype=hashtype, standard=False, **SINGLE_SIG, annex=bytes([ANNEX_TAG]), failure={\"sighash\": override(default_sighash, annex=None)}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/script\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, script_taproot=tap.leaves[\"codesep_pk\"].script)}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/leafver\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leafversion=random.choice([x & 0xFE for x in range(0x100) if x & 0xFE != 0xC0]))}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leaf=None)}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/keypath\", tap=tap, key=secs[0], **common, failure={\"sighash\": override(default_sighash, leaf=\"pk_codesep\")}, **ERR_KEYPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/annex\", tap=tap, leaf=\"pk_codesep\", key=secs[1], hashtype=hashtype, standard=False, **SINGLE_SIG, annex=bytes([ANNEX_TAG]), failure={\"sighash\": override(default_sighash, annex=None)}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/script\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, script_taproot=tap.leaves[\"codesep_pk\"].script)}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/leafver\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leafversion=random.choice([x & 0xFE for x in range(0x100) if x & 0xFE != 0xC0]))}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **common, **SINGLE_SIG, failure={\"sighash\": override(default_sighash, leaf=None)}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/keypath\", tap=tap, key=secs[0], **common, failure={\"sighash\": override(default_sighash, leaf=\"pk_codesep\")}, **ERR_SIG_SCHNORR)\n \n     # Test that invalid hashtypes don't work, both in key path and script path spends\n     hashtype = lambda _: random.choice(VALID_SIGHASHES_TAPROOT)\n     for invalid_hashtype in [x for x in range(0x100) if x not in VALID_SIGHASHES_TAPROOT]:\n-        add_spender(spenders, \"sighash/keypath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, key=secs[0], hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_KEYPATH_INVALID_SIG)\n-        add_spender(spenders, \"sighash/scriptpath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"sighash/keypath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, key=secs[0], hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_SIG_HASHTYPE)\n+        add_spender(spenders, \"sighash/scriptpath_unk_hashtype_%x\" % invalid_hashtype, tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=hashtype, failure={\"hashtype\": invalid_hashtype}, **ERR_SIG_HASHTYPE)\n \n     # Test that hashtype 0 cannot have a hashtype byte, and 1 must have one.\n-    add_spender(spenders, \"sighash/hashtype0_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_KEYPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype0_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype1_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_KEYPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype1_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype0_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_SIG_HASHTYPE)\n+    add_spender(spenders, \"sighash/hashtype0_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_DEFAULT])}, **ERR_SIG_HASHTYPE)\n+    add_spender(spenders, \"sighash/hashtype1_byte_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/hashtype1_byte_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SIG_SCHNORR)\n     # Test that hashtype 0 and hashtype 1 cannot be transmuted into each other.\n-    add_spender(spenders, \"sighash/hashtype0to1_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_KEYPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype0to1_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype1to0_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_KEYPATH_INVALID_SIG)\n-    add_spender(spenders, \"sighash/hashtype1to0_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"sighash/hashtype0to1_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/hashtype0to1_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_DEFAULT, failure={\"bytes_hashtype\": bytes([SIGHASH_ALL])}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/hashtype1to0_keypath\", tap=tap, key=secs[0], hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"sighash/hashtype1to0_scriptpath\", tap=tap, leaf=\"pk_codesep\", key=secs[1], **SINGLE_SIG, hashtype=SIGHASH_ALL, failure={\"bytes_hashtype\": b''}, **ERR_SIG_SCHNORR)\n \n     # Test aspects of signatures with unusual lengths\n     for hashtype in [SIGHASH_DEFAULT, random.choice(VALID_SIGHASHES_TAPROOT)]:\n@@ -696,29 +697,29 @@ def spenders_taproot_active():\n         random.shuffle(scripts)\n         tap = taproot_construct(pubs[3], scripts)\n         # Empty signatures\n-        add_spender(spenders, \"siglen/empty_keypath\", tap=tap, key=secs[3], hashtype=hashtype, failure={\"sign\": b\"\"}, **ERR_KEYPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/empty_keypath\", tap=tap, key=secs[3], hashtype=hashtype, failure={\"sign\": b\"\"}, **ERR_SIG_SIZE)\n         add_spender(spenders, \"siglen/empty_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_CHECKSIGVERIFY)\n         add_spender(spenders, \"siglen/empty_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_NO_SUCCESS)\n         add_spender(spenders, \"siglen/empty_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, failure={\"sign\": b\"\"}, **ERR_NO_SUCCESS)\n-        add_spender(spenders, \"siglen/empty_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(1, 100))}, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/empty_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(1, 100))}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/empty_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(1, 63))}, **ERR_SIG_SIZE)\n+        add_spender(spenders, \"siglen/empty_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": lambda _: random_bytes(random.randrange(66, 100))}, **ERR_SIG_SIZE)\n         # Appending a zero byte to signatures invalidates them\n-        add_spender(spenders, \"siglen/padzero_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_ADD_ZERO, **ERR_KEYPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/padzero_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/padzero_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/padzero_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/padzero_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/padzero_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/padzero_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n+        add_spender(spenders, \"siglen/padzero_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n+        add_spender(spenders, \"siglen/padzero_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n+        add_spender(spenders, \"siglen/padzero_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n+        add_spender(spenders, \"siglen/padzero_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n+        add_spender(spenders, \"siglen/padzero_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_ADD_ZERO, **(ERR_SIG_HASHTYPE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SIZE))\n         # Removing the last byte from signatures invalidates them\n-        add_spender(spenders, \"siglen/popbyte_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_POP_BYTE, **ERR_KEYPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/popbyte_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/popbyte_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/popbyte_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/popbyte_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/popbyte_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/popbyte_keypath\", tap=tap, key=secs[3], hashtype=hashtype, **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n+        add_spender(spenders, \"siglen/popbyte_csv\", tap=tap, key=secs[2], leaf=\"csv\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n+        add_spender(spenders, \"siglen/popbyte_cs\", tap=tap, key=secs[2], leaf=\"cs_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n+        add_spender(spenders, \"siglen/popbyte_csa\", tap=tap, key=secs[2], leaf=\"csa_pos\", hashtype=hashtype, **SINGLE_SIG, **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n+        add_spender(spenders, \"siglen/popbyte_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n+        add_spender(spenders, \"siglen/popbyte_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", **SIG_POP_BYTE, **(ERR_SIG_SIZE if hashtype == SIGHASH_DEFAULT else ERR_SIG_SCHNORR))\n         # Verify that an invalid signature is not allowed, not even when the CHECKSIG* is expected to fail.\n-        add_spender(spenders, \"siglen/invalid_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SCRIPTPATH_INVALID_SIG)\n-        add_spender(spenders, \"siglen/invalid_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SCRIPTPATH_INVALID_SIG)\n+        add_spender(spenders, \"siglen/invalid_cs_neg\", tap=tap, key=secs[2], leaf=\"cs_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SIG_SCHNORR)\n+        add_spender(spenders, \"siglen/invalid_csa_neg\", tap=tap, key=secs[2], leaf=\"csa_neg\", hashtype=hashtype, **SINGLE_SIG, sign=b\"\", failure={\"sign\": default_sign, \"sighash\": bitflipper(default_sighash)}, **ERR_SIG_SCHNORR)\n \n     # == Test that BIP341 spending only applies to witness version 1, program length 32, no P2SH ==\n \n@@ -736,7 +737,7 @@ def mutate(spk):\n                 scripts = [(\"s0\", CScript([pubs[0], OP_CHECKSIG])), (\"dummy\", CScript([OP_RETURN]))]\n                 tap = taproot_construct(pubs[1], scripts)\n                 if not p2sh and witver == 1 and witlen == 32:\n-                    add_spender(spenders, \"applic/keypath\", p2sh=p2sh, spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[1], **SIGHASH_BITFLIP, **ERR_KEYPATH_INVALID_SIG)\n+                    add_spender(spenders, \"applic/keypath\", p2sh=p2sh, spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[1], **SIGHASH_BITFLIP, **ERR_SIG_SCHNORR)\n                     add_spender(spenders, \"applic/scriptpath\", p2sh=p2sh, leaf=\"s0\", spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[0], **SINGLE_SIG, failure={\"leaf\": \"dummy\"}, **ERR_OP_RETURN)\n                 else:\n                     add_spender(spenders, \"applic/keypath\", p2sh=p2sh, spk_mutate_pre_p2sh=mutate, tap=tap, key=secs[1], standard=False)\n@@ -929,9 +930,9 @@ def big_spend_inputs(ctx):\n     add_spender(spenders, \"tapscript/unkpk/checksigadd\", leaf=\"t17\", standard=False, **common, **SINGLE_SIG, failure={\"leaf\": \"t10\"}, **ERR_UNKNOWN_PUBKEY)\n     add_spender(spenders, \"tapscript/unkpk/checksigverify\", leaf=\"t18\", standard=False, **common, **SINGLE_SIG, failure={\"leaf\": \"t8\"}, **ERR_UNKNOWN_PUBKEY)\n     # Test that 33-byte public keys (which are unknown) are acceptable but nonstandard with valid signatures, but normal pubkeys are not valid in that case.\n-    add_spender(spenders, \"tapscript/oldpk/checksig\", leaf=\"t30\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t1\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"tapscript/oldpk/checksigadd\", leaf=\"t31\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t2\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n-    add_spender(spenders, \"tapscript/oldpk/checksigverify\", leaf=\"t32\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t28\"}, **ERR_SCRIPTPATH_INVALID_SIG)\n+    add_spender(spenders, \"tapscript/oldpk/checksig\", leaf=\"t30\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t1\"}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"tapscript/oldpk/checksigadd\", leaf=\"t31\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t2\"}, **ERR_SIG_SCHNORR)\n+    add_spender(spenders, \"tapscript/oldpk/checksigverify\", leaf=\"t32\", standard=False, **common, **SINGLE_SIG, sighash=bitflipper(default_sighash), failure={\"leaf\": \"t28\"}, **ERR_SIG_SCHNORR)\n     # Test that 0-byte public keys are not acceptable.\n     add_spender(spenders, \"tapscript/emptypk/checksig\", leaf=\"t1\", **SINGLE_SIG, **common, failure={\"leaf\": \"t7\"}, **ERR_UNKNOWN_PUBKEY)\n     add_spender(spenders, \"tapscript/emptypk/checksigverify\", leaf=\"t2\", **SINGLE_SIG, **common, failure={\"leaf\": \"t8\"}, **ERR_UNKNOWN_PUBKEY)"
      }
    ]
  },
  {
    "sha": "ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZTI0YmJiYTRiMGNlNjg2Y2M3YzcyMjk1ZTJiYTQyMGQxYjcyNWVj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:20:26Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:20:26Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/11 ---",
      "tree": {
        "sha": "c0bb8e6155c009fbb227d744c7422d491ac90d8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0bb8e6155c009fbb227d744c7422d491ac90d8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "67750a3e1ed1696c09a998d7f5758394d896f99d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/67750a3e1ed1696c09a998d7f5758394d896f99d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/67750a3e1ed1696c09a998d7f5758394d896f99d"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "2127387e30b39d0310059a0773075cc5a19f5f31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMTI3Mzg3ZTMwYjM5ZDAzMTAwNTlhMDc3MzA3NWNjNWExOWY1ZjMx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:22:50Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:22:50Z"
      },
      "message": "Add extra assertion on spent_outputs size",
      "tree": {
        "sha": "d81cd1ff8cfc8362c27e59c488bd5268d3682de1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d81cd1ff8cfc8362c27e59c488bd5268d3682de1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2127387e30b39d0310059a0773075cc5a19f5f31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2127387e30b39d0310059a0773075cc5a19f5f31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2127387e30b39d0310059a0773075cc5a19f5f31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2127387e30b39d0310059a0773075cc5a19f5f31/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce24bbba4b0ce686cc7c72295e2ba420d1b725ec"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0b78ba677edb360f583e81d7dccb982582ad5154",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2127387e30b39d0310059a0773075cc5a19f5f31/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2127387e30b39d0310059a0773075cc5a19f5f31/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2127387e30b39d0310059a0773075cc5a19f5f31",
        "patch": "@@ -1550,6 +1550,7 @@ bool CheckInputScripts(const CTransaction& tx, TxValidationState &state, const C\n         }\n         txdata.Init(tx, std::move(spent_outputs));\n     }\n+    assert(txdata.m_spent_outputs.size() == tx.vin.size());\n \n     for (unsigned int i = 0; i < tx.vin.size(); i++) {\n "
      }
    ]
  },
  {
    "sha": "11c05b47d7407d800a9a553f1b7db0247585370b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMWMwNWI0N2Q3NDA3ZDgwMGE5YTU1M2YxYjdkYjAyNDc1ODUzNzBi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:25:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:25:52Z"
      },
      "message": "Rename fSuccess -> success in comments",
      "tree": {
        "sha": "daf5ef0fb6f456c64c019baa41a6e5623f912b7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/daf5ef0fb6f456c64c019baa41a6e5623f912b7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11c05b47d7407d800a9a553f1b7db0247585370b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11c05b47d7407d800a9a553f1b7db0247585370b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11c05b47d7407d800a9a553f1b7db0247585370b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11c05b47d7407d800a9a553f1b7db0247585370b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2127387e30b39d0310059a0773075cc5a19f5f31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2127387e30b39d0310059a0773075cc5a19f5f31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2127387e30b39d0310059a0773075cc5a19f5f31"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5debc5b7bb3d6ddea23106f90267ae3460440a28",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11c05b47d7407d800a9a553f1b7db0247585370b/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11c05b47d7407d800a9a553f1b7db0247585370b/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=11c05b47d7407d800a9a553f1b7db0247585370b",
        "patch": "@@ -411,7 +411,7 @@ static bool EvalChecksigTapscript(const valtype& sig, const valtype& pubkey, Scr\n /** Helper for OP_CHECKSIG, OP_CHECKSIGVERIFY, and (in Tapscript) OP_CHECKSIGADD.\n  *\n  * A return value of false means the script fails entirely. When true is returned, the\n- * fSuccess variable indicates whether the signature check itself succeeded.\n+ * fuccess variable indicates whether the signature check itself succeeded.\n  */\n static bool EvalChecksig(const valtype& sig, const valtype& pubkey, CScript::const_iterator pbegincodehash, CScript::const_iterator pend, ScriptExecutionData& execdata, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& success)\n {"
      }
    ]
  },
  {
    "sha": "1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTQ2NGM2YzRjOTZkNzlkNTNhMDc4NWY1Y2EzOTM1ZjdjNWEzNzU3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:27:28Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:46:18Z"
      },
      "message": "Small fixes to feature_taproot.py",
      "tree": {
        "sha": "ba6e3b84ab30a15f1ebcb3e6c140dda29d0edf7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba6e3b84ab30a15f1ebcb3e6c140dda29d0edf7e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11c05b47d7407d800a9a553f1b7db0247585370b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11c05b47d7407d800a9a553f1b7db0247585370b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11c05b47d7407d800a9a553f1b7db0247585370b"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 3,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7b534c1c2f90ee6e86bf311ca43bc580c7af9cd4",
        "filename": "test/functional/feature_taproot.py",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757/test/functional/feature_taproot.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757/test/functional/feature_taproot.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_taproot.py?ref=1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
        "patch": "@@ -100,7 +100,7 @@\n # - lists of values\n # - callables which, when fed the context object as argument, produce any of these\n #\n-# # The DEFAULT_CONTEXT object specifies a standard signing process, with many overridable knobs.\n+# The DEFAULT_CONTEXT object specifies a standard signing process, with many overridable knobs.\n #\n # The get(ctx, name) function can evaluate a name, and cache its result in the context.\n # getter(name) can be used to construct a callable that evaluates name. For example:\n@@ -1070,7 +1070,7 @@ def predict_sigops_ratio(n, dummy_size):\n         random.shuffle(scripts)\n         tap = taproot_construct(pubs[0], scripts)\n         add_spender(spenders, \"opsuccess/bare\", standard=False, tap=tap, leaf=\"bare_success\", failure={\"leaf\": \"bare_nop\"}, **ERR_CLEANSTACK)\n-        add_spender(spenders, \"opsuccess/exexecif\", standard=False, tap=tap, leaf=\"unexecif_success\", failure={\"leaf\": \"unexecif_nop\"}, **ERR_CLEANSTACK)\n+        add_spender(spenders, \"opsuccess/unexecif\", standard=False, tap=tap, leaf=\"unexecif_success\", failure={\"leaf\": \"unexecif_nop\"}, **ERR_CLEANSTACK)\n         add_spender(spenders, \"opsuccess/return\", standard=False, tap=tap, leaf=\"return_success\", failure={\"leaf\": \"return_nop\"}, **ERR_OP_RETURN)\n         add_spender(spenders, \"opsuccess/undecodable\", standard=False, tap=tap, leaf=\"undecodable_success\", failure={\"leaf\": \"undecodable_nop\"}, **ERR_UNDECODABLE)\n         add_spender(spenders, \"opsuccess/undecodable_bypass\", standard=False, tap=tap, leaf=\"undecodable_success\", failure={\"leaf\": \"undecodable_bypassed_success\"}, **ERR_UNDECODABLE)\n@@ -1245,9 +1245,6 @@ def test_spenders(self, node, spenders, input_counts):\n         of all valid inputs, except one invalid one.\n         \"\"\"\n \n-        # Generate some coins to fund the wallet.\n-        node.generate(10)\n-\n         # Construct a bunch of sPKs that send coins back to the host wallet\n         self.log.info(\"- Constructing addresses for returning coins\")\n         host_spks = []\n@@ -1284,7 +1281,7 @@ def test_spenders(self, node, spenders, input_counts):\n             # Add the 50 highest-value inputs\n             unspents = node.listunspent()\n             random.shuffle(unspents)\n-            unspents.sort(key=lambda x: -int(x[\"amount\"] * 100000000))\n+            unspents.sort(key=lambda x: int(x[\"amount\"] * 100000000), reverse=True)\n             if len(unspents) > 50:\n                 unspents = unspents[:50]\n             random.shuffle(unspents)"
      }
    ]
  },
  {
    "sha": "7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MDI5ZmY1NzAyNWE1ZTNmY2M3NTViNWRhMjg4ZmY3MGUyZjJkMmQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:50:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T08:50:39Z"
      },
      "message": "Some style fixes",
      "tree": {
        "sha": "0a542259f93073ce6f87aba89e786d1d66611a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a542259f93073ce6f87aba89e786d1d66611a5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a464c6c4c96d79d53a0785f5ca3935f7c5a3757"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4d734fc8914693af0c541e9ae5f550905e38ceff",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
        "patch": "@@ -173,7 +173,8 @@ XOnlyPubKey::XOnlyPubKey(Span<const unsigned char> bytes)\n     std::copy(bytes.begin(), bytes.end(), m_keydata.begin());\n }\n \n-bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const {\n+bool XOnlyPubKey::VerifySchnorr(const uint256& msg, Span<const unsigned char> sigbytes) const\n+{\n     assert(sigbytes.size() == 64);\n     secp256k1_xonly_pubkey pubkey;\n     if (!secp256k1_xonly_pubkey_parse(secp256k1_context_verify, &pubkey, m_keydata.data())) return false;"
      },
      {
        "sha": "0f784b86e4733315627d21cbe4f93515244d467a",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
        "patch": "@@ -207,7 +207,8 @@ class CPubKey\n     bool Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const;\n };\n \n-class XOnlyPubKey {\n+class XOnlyPubKey\n+{\n private:\n     uint256 m_keydata;\n "
      },
      {
        "sha": "1067a5293dcf5fe4b69d02e3c1ff850343aa2b0b",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
        "patch": "@@ -392,13 +392,13 @@ static bool EvalChecksigTapscript(const valtype& sig, const valtype& pubkey, Scr\n         return set_error(serror, SCRIPT_ERR_PUBKEYTYPE);\n     } else if (pubkey.size() == 32) {\n         if (success && !checker.CheckSchnorrSignature(sig, pubkey, sigversion, execdata, serror)) {\n-            return false;\n+            return false; // serror is set\n         }\n     } else {\n         /*\n          *  New public key version softforks should be defined before this `else` block.\n          *  Generally, the new code should not do anything but failing the script execution. To avoid\n-         *  consensus bugs, it should not modify any existing values (including success).\n+         *  consensus bugs, it should not modify any existing values (including `success`).\n          */\n         if ((flags & SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_PUBKEYTYPE) != 0) {\n             return set_error(serror, SCRIPT_ERR_DISCOURAGE_UPGRADABLE_PUBKEYTYPE);\n@@ -1814,9 +1814,7 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n         }\n \n         // Tapscript enforces initial stack size limits (altstack is empty here)\n-        if (stack.size() > MAX_STACK_SIZE) {\n-            return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n-        }\n+        if (stack.size() > MAX_STACK_SIZE) return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n     }\n \n     // Disallow stack item size > MAX_SCRIPT_ELEMENT_SIZE in witness stack\n@@ -1900,7 +1898,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n         if (stack.size() == 1) {\n             // Key path spending (stack size is 1 after removing optional annex)\n             if (!checker.CheckSchnorrSignature(stack.front(), program, SigVersion::TAPROOT, execdata, serror)) {\n-                return false;\n+                return false; // serror is set\n             }\n             return set_success(serror);\n         } else {"
      }
    ]
  },
  {
    "sha": "36f4fa5ef9ba0177000f791230ded6da03beae74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNmY0ZmE1ZWY5YmEwMTc3MDAwZjc5MTIzMGRlZDZkYTAzYmVhZTc0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:38:39Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:38:39Z"
      },
      "message": "--- [TAPROOT] Updates 2020/10/12 ---",
      "tree": {
        "sha": "0a542259f93073ce6f87aba89e786d1d66611a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a542259f93073ce6f87aba89e786d1d66611a5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36f4fa5ef9ba0177000f791230ded6da03beae74",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f4fa5ef9ba0177000f791230ded6da03beae74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36f4fa5ef9ba0177000f791230ded6da03beae74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f4fa5ef9ba0177000f791230ded6da03beae74/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7029ff57025a5e3fcc755b5da288ff70e2f2d2d7"
      }
    ],
    "stats": {
      "total": 0,
      "additions": 0,
      "deletions": 0
    },
    "files": []
  },
  {
    "sha": "34a93d775a9ddbe195e935d772f32012bd08fa0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGE5M2Q3NzVhOWRkYmUxOTVlOTM1ZDc3MmYzMjAxMmJkMDhmYTBk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:39:27Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:39:27Z"
      },
      "message": "Really rename fuccess -> success in comments",
      "tree": {
        "sha": "eed29045cd1a8bbd6385f31329d46fb37a870890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eed29045cd1a8bbd6385f31329d46fb37a870890"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34a93d775a9ddbe195e935d772f32012bd08fa0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a93d775a9ddbe195e935d772f32012bd08fa0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34a93d775a9ddbe195e935d772f32012bd08fa0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a93d775a9ddbe195e935d772f32012bd08fa0d/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36f4fa5ef9ba0177000f791230ded6da03beae74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36f4fa5ef9ba0177000f791230ded6da03beae74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36f4fa5ef9ba0177000f791230ded6da03beae74"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b15eccb9a22747ad404f31290e78c3ad43eecc24",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34a93d775a9ddbe195e935d772f32012bd08fa0d/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34a93d775a9ddbe195e935d772f32012bd08fa0d/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=34a93d775a9ddbe195e935d772f32012bd08fa0d",
        "patch": "@@ -411,7 +411,7 @@ static bool EvalChecksigTapscript(const valtype& sig, const valtype& pubkey, Scr\n /** Helper for OP_CHECKSIG, OP_CHECKSIGVERIFY, and (in Tapscript) OP_CHECKSIGADD.\n  *\n  * A return value of false means the script fails entirely. When true is returned, the\n- * fuccess variable indicates whether the signature check itself succeeded.\n+ * success variable indicates whether the signature check itself succeeded.\n  */\n static bool EvalChecksig(const valtype& sig, const valtype& pubkey, CScript::const_iterator pbegincodehash, CScript::const_iterator pend, ScriptExecutionData& execdata, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror, bool& success)\n {"
      }
    ]
  },
  {
    "sha": "4e2ac63b16a0764f903c639712cee86d8eacc96c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTJhYzYzYjE2YTA3NjRmOTAzYzYzOTcxMmNlZTg2ZDhlYWNjOTZj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:44:26Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2020-10-12T23:44:26Z"
      },
      "message": "Pass tapleaf_hash by reference to VerifyTaprootCommitment",
      "tree": {
        "sha": "b277fd73cf801b7066d1dee33b2b8858b98cb7b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b277fd73cf801b7066d1dee33b2b8858b98cb7b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2ac63b16a0764f903c639712cee86d8eacc96c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2ac63b16a0764f903c639712cee86d8eacc96c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2ac63b16a0764f903c639712cee86d8eacc96c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2ac63b16a0764f903c639712cee86d8eacc96c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34a93d775a9ddbe195e935d772f32012bd08fa0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34a93d775a9ddbe195e935d772f32012bd08fa0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34a93d775a9ddbe195e935d772f32012bd08fa0d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5735e7df6669eb89e5af9d26633cd6ac5d93ec59",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e2ac63b16a0764f903c639712cee86d8eacc96c/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e2ac63b16a0764f903c639712cee86d8eacc96c/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=4e2ac63b16a0764f903c639712cee86d8eacc96c",
        "patch": "@@ -1831,13 +1831,13 @@ static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CS\n     return true;\n }\n \n-static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, const std::vector<unsigned char>& program, const CScript& script, uint256* tapleaf_hash)\n+static bool VerifyTaprootCommitment(const std::vector<unsigned char>& control, const std::vector<unsigned char>& program, const CScript& script, uint256& tapleaf_hash)\n {\n     const int path_len = (control.size() - TAPROOT_CONTROL_BASE_SIZE) / TAPROOT_CONTROL_NODE_SIZE;\n     const XOnlyPubKey p{uint256(std::vector<unsigned char>(control.begin() + 1, control.begin() + TAPROOT_CONTROL_BASE_SIZE))};\n     const XOnlyPubKey q{uint256(program)};\n-    uint256 k = (CHashWriter(HASHER_TAPLEAF) << uint8_t(control[0] & TAPROOT_LEAF_MASK) << script).GetSHA256();\n-    if (tapleaf_hash) *tapleaf_hash = k;\n+    tapleaf_hash = (CHashWriter(HASHER_TAPLEAF) << uint8_t(control[0] & TAPROOT_LEAF_MASK) << script).GetSHA256();\n+    uint256 k = tapleaf_hash;\n     for (int i = 0; i < path_len; ++i) {\n         CHashWriter ss_branch{HASHER_TAPBRANCH};\n         Span<const unsigned char> node(control.data() + TAPROOT_CONTROL_BASE_SIZE + TAPROOT_CONTROL_NODE_SIZE * i, TAPROOT_CONTROL_NODE_SIZE);\n@@ -1909,7 +1909,7 @@ static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion,\n             if (control.size() < TAPROOT_CONTROL_BASE_SIZE || control.size() > TAPROOT_CONTROL_MAX_SIZE || ((control.size() - TAPROOT_CONTROL_BASE_SIZE) % TAPROOT_CONTROL_NODE_SIZE) != 0) {\n                 return set_error(serror, SCRIPT_ERR_TAPROOT_WRONG_CONTROL_SIZE);\n             }\n-            if (!VerifyTaprootCommitment(control, program, exec_script, &execdata.m_tapleaf_hash)) {\n+            if (!VerifyTaprootCommitment(control, program, exec_script, execdata.m_tapleaf_hash)) {\n                 return set_error(serror, SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH);\n             }\n             execdata.m_tapleaf_hash_init = true;"
      }
    ]
  }
]