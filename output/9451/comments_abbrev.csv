cdecker,2017-01-02T10:48:39Z,ACK 17d837b6bacf58462e4a6351731a87d8362fef6b,https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-269956865,269956865,
laanwj,2017-01-05T10:28:07Z,"Is there any (quantifiable) performance reason to remove this? \n\nIf not, I wouldn't personally mind keeping the extraneous check as belt-and-suspender, and not change the consensus code unnecessarily.",https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-270612488,270612488,
cdecker,2017-01-05T13:00:18Z,Is there an argument to be made for merging the two checks into a single `if`? That'd at least make it somewhat obvious that it's checking the same thing.,https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-270638592,270638592,
pstratem,2017-01-05T13:13:29Z,@laanwj i believe this actually did something in the very distant past when multi byte opcodes were supported (like 2009 distant past),https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-270641043,270641043,
fanquake,2017-01-05T13:54:27Z,"This is as far back as I'm looking https://github.com/bitcoin/bitcoin/commit/e071a3f6c06f41068ad17134189a4ac3073ef76b:\n```\n    bool GetOp(const_iterator& pc, opcodetype& opcodeRet, vector<unsigned char>& vchRet) const\n    {\n        opcodeRet = OP_INVALIDOPCODE;\n        vchRet.clear();\n        if (pc >= end())\n            return false;\n\n        // Read instruction\n        unsign",https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-270648916,270648916,
laanwj,2017-01-05T14:10:14Z,"> Is there an argument to be made for merging the two checks into a single if? That'd at least make it somewhat obvious that it's checking the same thing.\n\nSure - though the same could be achieved with a comment, documenting that there is a duplicate bounds check here. This could then be removed later, or not, but doesn't require a consensus code change now.\n\n@pstratem @fanquake seems inde",https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-270652069,270652069,
fanquake,2017-01-21T00:27:25Z,"Closing. Feel free to re-open with a change documenting the duplicate, but I don't think a consensus code change will be merged right now.",https://github.com/bitcoin/bitcoin/pull/9451#issuecomment-274215111,274215111,
dcousens,2017-01-03T00:08:51Z,"Provided `pc` is a _valid_ iterator,  of `this`,  then yes,  this is redundant.\nI'm not 100% across this code to know if that assumption is true.",https://github.com/bitcoin/bitcoin/pull/9451#discussion_r94351764,94351764,src/script/script.h
sipa,2017-01-03T22:23:52Z,"If it's not a valid iterator, just subtracting it from end() is probably undefined behaviour.",https://github.com/bitcoin/bitcoin/pull/9451#discussion_r94497117,94497117,src/script/script.h
