[
  {
    "sha": "d50d7cdd52d04e22d26cb720db09552691ef8898",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNTBkN2NkZDUyZDA0ZTIyZDI2Y2I3MjBkYjA5NTUyNjkxZWY4ODk4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:05:04Z"
      },
      "message": "[test] Move MIN_VERSION_SUPPORTED to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MIN_VERSION_SUPPORTED to p2p.py.\n\nAlso rename to MIN_P2P_VERSION_SUPPORTED to distinguish it from\nother versioning used in Bitcoin/Bitcoin Core.",
      "tree": {
        "sha": "a24a402b06889423d6eaef46b1f570b9e2fc3113",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a24a402b06889423d6eaef46b1f570b9e2fc3113"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d50d7cdd52d04e22d26cb720db09552691ef8898",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d50d7cdd52d04e22d26cb720db09552691ef8898",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d50d7cdd52d04e22d26cb720db09552691ef8898",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d50d7cdd52d04e22d26cb720db09552691ef8898/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ae86b3c6845873ca96650fc69beb4ae5285c801",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ae86b3c6845873ca96650fc69beb4ae5285c801",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ae86b3c6845873ca96650fc69beb4ae5285c801"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "286c1a4ec7f305a4408f246eefb1f3ddba3f7ba8",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d50d7cdd52d04e22d26cb720db09552691ef8898/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d50d7cdd52d04e22d26cb720db09552691ef8898/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=d50d7cdd52d04e22d26cb720db09552691ef8898",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MIN_VERSION_SUPPORTED = 60001\n MY_VERSION = 70016  # past wtxid relay\n MY_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)"
      },
      {
        "sha": "1b1fd5e754dd3ef12240340def6394ffac58c23c",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d50d7cdd52d04e22d26cb720db09552691ef8898/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d50d7cdd52d04e22d26cb720db09552691ef8898/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=d50d7cdd52d04e22d26cb720db09552691ef8898",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.messages import (\n     CBlockHeader,\n     MAX_HEADERS_RESULTS,\n-    MIN_VERSION_SUPPORTED,\n     msg_addr,\n     msg_addrv2,\n     msg_block,\n@@ -75,6 +74,9 @@\n \n logger = logging.getLogger(\"TestFramework.p2p\")\n \n+# The minimum P2P version that this test framework supports\n+MIN_P2P_VERSION_SUPPORTED = 60001\n+\n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n     b\"addrv2\": msg_addrv2,\n@@ -393,7 +395,7 @@ def on_verack(self, message):\n         pass\n \n     def on_version(self, message):\n-        assert message.nVersion >= MIN_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_VERSION_SUPPORTED)\n+        assert message.nVersion >= MIN_P2P_VERSION_SUPPORTED, \"Version {} received. Test framework only supports versions greater than {}\".format(message.nVersion, MIN_P2P_VERSION_SUPPORTED)\n         if message.nVersion >= 70016:\n             self.send_message(msg_wtxidrelay())\n         self.send_message(msg_verack())"
      }
    ]
  },
  {
    "sha": "e616c7cb2628d2a5fb701da0d67213a107f01289",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjE2YzdjYjI2MjhkMmE1ZmI3MDFkYTBkNjcyMTNhMTA3ZjAxMjg5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:13:58Z"
      },
      "message": "[test] Move MY_VERSION to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MY_VERSION to p2p.py.\n\nAlso rename to P2P_VERSION to distinguish it from\nother versioning used in Bitcoin/Bitcoin Core.\n\nAlso always set the nVersion field in CBlockLocator to 0 and ignore the\nfield in deserialized messages. The field is not currently used for\nanything in Bitcoin Core.",
      "tree": {
        "sha": "294e5c69b551465c4da3050110a8fc54a959fd56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/294e5c69b551465c4da3050110a8fc54a959fd56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e616c7cb2628d2a5fb701da0d67213a107f01289",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e616c7cb2628d2a5fb701da0d67213a107f01289",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e616c7cb2628d2a5fb701da0d67213a107f01289",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e616c7cb2628d2a5fb701da0d67213a107f01289/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d50d7cdd52d04e22d26cb720db09552691ef8898",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d50d7cdd52d04e22d26cb720db09552691ef8898",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d50d7cdd52d04e22d26cb720db09552691ef8898"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 14,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0decf0158a492288a5bdc859d74e2beb5d0a5dfb",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=e616c7cb2628d2a5fb701da0d67213a107f01289",
        "patch": "@@ -19,7 +19,11 @@\n     msg_mempool,\n     msg_version,\n )\n-from test_framework.p2p import P2PInterface, p2p_lock\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_VERSION,\n+    p2p_lock,\n+)\n from test_framework.script import MAX_SCRIPT_ELEMENT_SIZE\n from test_framework.test_framework import BitcoinTestFramework\n \n@@ -219,6 +223,7 @@ def run_test(self):\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\n         # Send version with fRelay=False\n         version_without_fRelay = msg_version()\n+        version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.nRelay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "a22cf4f2961f4b51a1951609b716b0e422d69172",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=e616c7cb2628d2a5fb701da0d67213a107f01289",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_VERSION = 70016  # past wtxid relay\n MY_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n@@ -326,22 +325,20 @@ class CBlockLocator:\n     __slots__ = (\"nVersion\", \"vHave\")\n \n     def __init__(self):\n-        self.nVersion = MY_VERSION\n         self.vHave = []\n \n     def deserialize(self, f):\n-        self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n+        struct.unpack(\"<i\", f.read(4))[0]  # Ignore version field.\n         self.vHave = deser_uint256_vector(f)\n \n     def serialize(self):\n         r = b\"\"\n-        r += struct.pack(\"<i\", self.nVersion)\n+        r += struct.pack(\"<i\", 0)  # Bitcoin Core ignores version field. Set it to 0.\n         r += ser_uint256_vector(self.vHave)\n         return r\n \n     def __repr__(self):\n-        return \"CBlockLocator(nVersion=%i vHave=%s)\" \\\n-            % (self.nVersion, repr(self.vHave))\n+        return \"CBlockLocator(vHave=%s)\" % (repr(self.vHave))\n \n \n class COutPoint:\n@@ -1025,7 +1022,7 @@ class msg_version:\n     msgtype = b\"version\"\n \n     def __init__(self):\n-        self.nVersion = MY_VERSION\n+        self.nVersion = 0\n         self.nServices = NODE_NETWORK | NODE_WITNESS\n         self.nTime = int(time.time())\n         self.addrTo = CAddress()"
      },
      {
        "sha": "4729c045d6bac637a7061c701c906cd4dc5d79a9",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e616c7cb2628d2a5fb701da0d67213a107f01289/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=e616c7cb2628d2a5fb701da0d67213a107f01289",
        "patch": "@@ -76,6 +76,9 @@\n \n # The minimum P2P version that this test framework supports\n MIN_P2P_VERSION_SUPPORTED = 60001\n+# The P2P version that this test framework implements and sends in its `version` message\n+# Version 70016 supports wtxid relay\n+P2P_VERSION = 70016\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -317,6 +320,7 @@ def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=T\n         if send_version:\n             # Send a version msg\n             vt = msg_version()\n+            vt.nVersion = P2P_VERSION\n             vt.nServices = services\n             vt.addrTo.ip = self.dstaddr\n             vt.addrTo.port = self.dstport"
      }
    ]
  },
  {
    "sha": "e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2NlN2YxZDEzZDEwZjA1MTFhNGY2NTNjNzBlOGU3ZmY5ZTIxY2Q2",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:15:14Z"
      },
      "message": "[test] Move MY_SUBVERSION to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore move MY_SUBVERSION to p2p.py.\n\nAlso rename to P2P_SUBVERSION.",
      "tree": {
        "sha": "630d5e03cb8a75d9e3f95283c390886bb6d287ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/630d5e03cb8a75d9e3f95283c390886bb6d287ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e616c7cb2628d2a5fb701da0d67213a107f01289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e616c7cb2628d2a5fb701da0d67213a107f01289",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e616c7cb2628d2a5fb701da0d67213a107f01289"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 13,
      "deletions": 5
    },
    "files": [
      {
        "sha": "077a399766789eb53f930cb3f4a83ee0793e7ec3",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "patch": "@@ -21,6 +21,7 @@\n )\n from test_framework.p2p import (\n     P2PInterface,\n+    P2P_SUBVERSION,\n     P2P_VERSION,\n     p2p_lock,\n )\n@@ -224,6 +225,7 @@ def run_test(self):\n         # Send version with fRelay=False\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n+        version_without_fRelay.strSubVer = P2P_SUBVERSION\n         version_without_fRelay.nRelay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "80895fe22fbada3526bdf5ae83d8638e99f62ef5",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "patch": "@@ -17,7 +17,10 @@\n     msg_ping,\n     msg_version,\n )\n-from test_framework.p2p import P2PInterface\n+from test_framework.p2p import (\n+    P2PInterface,\n+    P2P_SUBVERSION,\n+)\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -148,6 +151,7 @@ def run_test(self):\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n+        old_version_msg.strSubVer = P2P_SUBVERSION\n         with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)\n             p2p_old_peer.wait_for_disconnect()"
      },
      {
        "sha": "d08703c6e498f72fec10f08b7f6796ea788b0055",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "patch": "@@ -31,7 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n MAX_LOCATOR_SZ = 101\n@@ -1028,7 +1027,7 @@ def __init__(self):\n         self.addrTo = CAddress()\n         self.addrFrom = CAddress()\n         self.nNonce = random.getrandbits(64)\n-        self.strSubVer = MY_SUBVERSION\n+        self.strSubVer = b''\n         self.nStartingHeight = -1\n         self.nRelay = MY_RELAY\n "
      },
      {
        "sha": "f30841d6e0ec78f389e21fa6432206061ecb363f",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "patch": "@@ -79,6 +79,8 @@\n # The P2P version that this test framework implements and sends in its `version` message\n # Version 70016 supports wtxid relay\n P2P_VERSION = 70016\n+# The P2P user agent string that this test framework sends in its `version` message\n+P2P_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -321,6 +323,7 @@ def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=T\n             # Send a version msg\n             vt = msg_version()\n             vt.nVersion = P2P_VERSION\n+            vt.strSubVer = P2P_SUBVERSION\n             vt.nServices = services\n             vt.addrTo.ip = self.dstaddr\n             vt.addrTo.port = self.dstport"
      },
      {
        "sha": "6ad3667c1c6a5e7bf6f269de5cc48484278d2b7c",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "patch": "@@ -23,7 +23,7 @@\n \n from .authproxy import JSONRPCException\n from .descriptors import descsum_create\n-from .messages import MY_SUBVERSION\n+from .p2p import P2P_SUBVERSION\n from .util import (\n     MAX_NODES,\n     append_config,\n@@ -544,7 +544,7 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n     def num_test_p2p_connections(self):\n         \"\"\"Return number of test framework p2p connections to the node.\"\"\"\n-        return len([peer for peer in self.getpeerinfo() if peer['subver'] == MY_SUBVERSION.decode(\"utf-8\")])\n+        return len([peer for peer in self.getpeerinfo() if peer['subver'] == P2P_SUBVERSION.decode(\"utf-8\")])\n \n     def disconnect_p2ps(self):\n         \"\"\"Close all p2p connections to the node.\"\"\""
      }
    ]
  },
  {
    "sha": "301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDFlYThiYzBkMTcxNTBkNTY4MjM0NWIyZDg2NTcxYWE1ZmQ1YWUz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:15:16Z"
      },
      "message": "[test] Move MY_RELAY to p2p.py\n\nmessages.py is for message and primitive data structures. Specifics\nabout the test framework's p2p implementation should be in p2p.py.\n\nAlso rename to P2P_VERSION_RELAY. Also rename msg_version.nRelay to\nrelay. In Bitcoin Core, this is referred to as fRelay, since it's a\nbool, so this field has always been misnamed.",
      "tree": {
        "sha": "99c3a006c2f95db5771def46078e0ef248d39878",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99c3a006c2f95db5771def46078e0ef248d39878"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ce7f1d13d10f0511a4f653c70e8e7ff9e21cd6"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 17,
      "deletions": 13
    },
    "files": [
      {
        "sha": "0816f0c7dfef8aab4bb956a098bde076e604aaaa",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "patch": "@@ -222,11 +222,11 @@ def run_test(self):\n         self.log.info('Test BIP 37 for a node with fRelay = False')\n         # Add peer but do not send version yet\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\n-        # Send version with fRelay=False\n+        # Send version with relay=False\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.strSubVer = P2P_SUBVERSION\n-        version_without_fRelay.nRelay = 0\n+        version_without_fRelay.relay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()\n         assert not self.nodes[0].getpeerinfo()[0]['relaytxes']"
      },
      {
        "sha": "ae00ae7d02470076c60f92adb0d42ea73433890f",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "patch": "@@ -20,6 +20,7 @@\n from test_framework.p2p import (\n     P2PInterface,\n     P2P_SUBVERSION,\n+    P2P_VERSION_RELAY,\n )\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n@@ -145,13 +146,14 @@ def run_test(self):\n         assert_equal(ver.addrFrom.port, 0)\n         assert_equal(ver.addrFrom.ip, '0.0.0.0')\n         assert_equal(ver.nStartingHeight, 201)\n-        assert_equal(ver.nRelay, 1)\n+        assert_equal(ver.relay, 1)\n \n         self.log.info('Check that old peers are disconnected')\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n         old_version_msg.strSubVer = P2P_SUBVERSION\n+        old_version_msg.relay = P2P_VERSION_RELAY\n         with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)\n             p2p_old_peer.wait_for_disconnect()"
      },
      {
        "sha": "df7696214f75cbd0d914f6b5025621b980617040",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "patch": "@@ -31,8 +31,6 @@\n from test_framework.siphash import siphash256\n from test_framework.util import hex_str_to_bytes, assert_equal\n \n-MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n-\n MAX_LOCATOR_SZ = 101\n MAX_BLOCK_BASE_SIZE = 1000000\n MAX_BLOOM_FILTER_SIZE = 36000\n@@ -1016,7 +1014,7 @@ def __repr__(self):\n \n # Objects that correspond to messages on the wire\n class msg_version:\n-    __slots__ = (\"addrFrom\", \"addrTo\", \"nNonce\", \"nRelay\", \"nServices\",\n+    __slots__ = (\"addrFrom\", \"addrTo\", \"nNonce\", \"relay\", \"nServices\",\n                  \"nStartingHeight\", \"nTime\", \"nVersion\", \"strSubVer\")\n     msgtype = b\"version\"\n \n@@ -1029,7 +1027,7 @@ def __init__(self):\n         self.nNonce = random.getrandbits(64)\n         self.strSubVer = b''\n         self.nStartingHeight = -1\n-        self.nRelay = MY_RELAY\n+        self.relay = 0\n \n     def deserialize(self, f):\n         self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n@@ -1048,11 +1046,11 @@ def deserialize(self, f):\n         if self.nVersion >= 70001:\n             # Relay field is optional for version 70001 onwards\n             try:\n-                self.nRelay = struct.unpack(\"<b\", f.read(1))[0]\n+                self.relay = struct.unpack(\"<b\", f.read(1))[0]\n             except:\n-                self.nRelay = 0\n+                self.relay = 0\n         else:\n-            self.nRelay = 0\n+            self.relay = 0\n \n     def serialize(self):\n         r = b\"\"\n@@ -1064,14 +1062,14 @@ def serialize(self):\n         r += struct.pack(\"<Q\", self.nNonce)\n         r += ser_string(self.strSubVer)\n         r += struct.pack(\"<i\", self.nStartingHeight)\n-        r += struct.pack(\"<b\", self.nRelay)\n+        r += struct.pack(\"<b\", self.relay)\n         return r\n \n     def __repr__(self):\n-        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i nRelay=%i)' \\\n+        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i relay=%i)' \\\n             % (self.nVersion, self.nServices, time.ctime(self.nTime),\n                repr(self.addrTo), repr(self.addrFrom), self.nNonce,\n-               self.strSubVer, self.nStartingHeight, self.nRelay)\n+               self.strSubVer, self.nStartingHeight, self.relay)\n \n \n class msg_verack:"
      },
      {
        "sha": "64677cdd23c0c2994680580086b067f7103c1d27",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/301ea8bc0d17150d5682345b2d86571aa5fd5ae3/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "patch": "@@ -81,6 +81,9 @@\n P2P_VERSION = 70016\n # The P2P user agent string that this test framework sends in its `version` message\n P2P_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n+# Value for relay that this test framework sends in its `version` message\n+P2P_VERSION_RELAY = 1\n+\n \n MESSAGEMAP = {\n     b\"addr\": msg_addr,\n@@ -324,6 +327,7 @@ def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=T\n             vt = msg_version()\n             vt.nVersion = P2P_VERSION\n             vt.strSubVer = P2P_SUBVERSION\n+            vt.relay = P2P_VERSION_RELAY\n             vt.nServices = services\n             vt.addrTo.ip = self.dstaddr\n             vt.addrTo.port = self.dstport"
      }
    ]
  },
  {
    "sha": "e808800ca19e5c397fc87069a9d9d3912e823fdf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplODA4ODAwY2ExOWU1YzM5N2ZjODcwNjlhOWQ5ZDM5MTJlODIzZmRm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T11:41:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:15:16Z"
      },
      "message": "[test] Add P2P_SERVICES to p2p.py\n\nThe messages.py module should contain code and helpers for\n[de]serializing p2p messages. Specific usage of those messages should\nbe in p2p.py. Therefore specify the nServices value in the calling code,\nnot in the messages.py module.",
      "tree": {
        "sha": "15af4ef85daa524ab5fed770003f21572dcfacce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15af4ef85daa524ab5fed770003f21572dcfacce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e808800ca19e5c397fc87069a9d9d3912e823fdf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e808800ca19e5c397fc87069a9d9d3912e823fdf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e808800ca19e5c397fc87069a9d9d3912e823fdf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e808800ca19e5c397fc87069a9d9d3912e823fdf/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/301ea8bc0d17150d5682345b2d86571aa5fd5ae3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/301ea8bc0d17150d5682345b2d86571aa5fd5ae3"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2ebec7d57f0e938b3cdbebb5a69797e583db7e9c",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "patch": "@@ -21,6 +21,7 @@\n )\n from test_framework.p2p import (\n     P2PInterface,\n+    P2P_SERVICES,\n     P2P_SUBVERSION,\n     P2P_VERSION,\n     p2p_lock,\n@@ -225,6 +226,7 @@ def run_test(self):\n         # Send version with relay=False\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n+        version_without_fRelay.nServices = P2P_SERVICES\n         version_without_fRelay.strSubVer = P2P_SUBVERSION\n         version_without_fRelay.relay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)"
      },
      {
        "sha": "63963e98295fde4b5477ab8aba750a2d5973d270",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "patch": "@@ -20,6 +20,7 @@\n from test_framework.p2p import (\n     P2PInterface,\n     P2P_SUBVERSION,\n+    P2P_SERVICES,\n     P2P_VERSION_RELAY,\n )\n from test_framework.test_framework import BitcoinTestFramework\n@@ -152,6 +153,7 @@ def run_test(self):\n         p2p_old_peer = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n+        old_version_msg.nServices = P2P_SERVICES\n         old_version_msg.strSubVer = P2P_SUBVERSION\n         old_version_msg.relay = P2P_VERSION_RELAY\n         with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):"
      },
      {
        "sha": "0384530f25c9738bc6d14bb66b845689edc1b6af",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "patch": "@@ -1020,7 +1020,7 @@ class msg_version:\n \n     def __init__(self):\n         self.nVersion = 0\n-        self.nServices = NODE_NETWORK | NODE_WITNESS\n+        self.nServices = 0\n         self.nTime = int(time.time())\n         self.addrTo = CAddress()\n         self.addrFrom = CAddress()"
      },
      {
        "sha": "4747c3dea4fca84a6cce818024371401e908da46",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e808800ca19e5c397fc87069a9d9d3912e823fdf/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "patch": "@@ -79,6 +79,8 @@\n # The P2P version that this test framework implements and sends in its `version` message\n # Version 70016 supports wtxid relay\n P2P_VERSION = 70016\n+# The services that this test framework offers in its `version` message\n+P2P_SERVICES = NODE_NETWORK | NODE_WITNESS\n # The P2P user agent string that this test framework sends in its `version` message\n P2P_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n # Value for relay that this test framework sends in its `version` message\n@@ -319,7 +321,7 @@ def __init__(self, support_addrv2=False):\n \n         self.support_addrv2 = support_addrv2\n \n-    def peer_connect(self, *args, services=NODE_NETWORK|NODE_WITNESS, send_version=True, **kwargs):\n+    def peer_connect(self, *args, services=P2P_SERVICES, send_version=True, **kwargs):\n         create_conn = super().peer_connect(*args, **kwargs)\n \n         if send_version:"
      }
    ]
  },
  {
    "sha": "c2f5a3b386fa6e81fe453232915fef60f8cc607f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmY1YTNiMzg2ZmE2ZTgxZmU0NTMyMzI5MTVmZWY2MGY4Y2M2MDdm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T12:41:15Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-28T20:15:16Z"
      },
      "message": "[test] Change P2P_SUBVERSION to be a string\n\nThis forces the user to convert to bytes to encode it in a version\nmessage, which would result in an easy-to-detect type error if omitted.\n\nAlso add a check that new connections from the test framework to the\nnode have the correct user agent string. Again, this makes bugs easier\nto detect if the user agent string ever changes.",
      "tree": {
        "sha": "116812392a278d7e6d56144255bcac6b3c8bb458",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/116812392a278d7e6d56144255bcac6b3c8bb458"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2f5a3b386fa6e81fe453232915fef60f8cc607f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2f5a3b386fa6e81fe453232915fef60f8cc607f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2f5a3b386fa6e81fe453232915fef60f8cc607f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2f5a3b386fa6e81fe453232915fef60f8cc607f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e808800ca19e5c397fc87069a9d9d3912e823fdf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e808800ca19e5c397fc87069a9d9d3912e823fdf"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 11,
      "deletions": 5
    },
    "files": [
      {
        "sha": "52a4dd618b25e953490a43f21839f6722bbeaf58",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "patch": "@@ -227,7 +227,7 @@ def run_test(self):\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nVersion = P2P_VERSION\n         version_without_fRelay.nServices = P2P_SERVICES\n-        version_without_fRelay.strSubVer = P2P_SUBVERSION\n+        version_without_fRelay.strSubVer = P2P_SUBVERSION.encode('utf-8')\n         version_without_fRelay.relay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)\n         filter_peer_without_nrelay.wait_for_verack()"
      },
      {
        "sha": "eef23689defee09d75c93eb89276e209f05516dc",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "patch": "@@ -154,7 +154,7 @@ def run_test(self):\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n         old_version_msg.nServices = P2P_SERVICES\n-        old_version_msg.strSubVer = P2P_SUBVERSION\n+        old_version_msg.strSubVer = P2P_SUBVERSION.encode('utf-8')\n         old_version_msg.relay = P2P_VERSION_RELAY\n         with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n             p2p_old_peer.send_message(old_version_msg)"
      },
      {
        "sha": "8b9b21090ca7259f35e72268f82eb751212832cf",
        "filename": "test/functional/test_framework/p2p.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/test_framework/p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/test_framework/p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/p2p.py?ref=c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "patch": "@@ -82,7 +82,7 @@\n # The services that this test framework offers in its `version` message\n P2P_SERVICES = NODE_NETWORK | NODE_WITNESS\n # The P2P user agent string that this test framework sends in its `version` message\n-P2P_SUBVERSION = b\"/python-p2p-tester:0.0.3/\"\n+P2P_SUBVERSION = \"/python-p2p-tester:0.0.3/\"\n # Value for relay that this test framework sends in its `version` message\n P2P_VERSION_RELAY = 1\n \n@@ -328,7 +328,7 @@ def peer_connect(self, *args, services=P2P_SERVICES, send_version=True, **kwargs\n             # Send a version msg\n             vt = msg_version()\n             vt.nVersion = P2P_VERSION\n-            vt.strSubVer = P2P_SUBVERSION\n+            vt.strSubVer = P2P_SUBVERSION.encode('utf-8')\n             vt.relay = P2P_VERSION_RELAY\n             vt.nServices = services\n             vt.addrTo.ip = self.dstaddr"
      },
      {
        "sha": "8bc8a339cca9509a2bffc844c401d92161e55105",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2f5a3b386fa6e81fe453232915fef60f8cc607f/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "patch": "@@ -26,6 +26,7 @@\n from .p2p import P2P_SUBVERSION\n from .util import (\n     MAX_NODES,\n+    assert_equal,\n     append_config,\n     delete_cookie_file,\n     get_auth_cookie,\n@@ -540,11 +541,16 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n             # in comparison to the upside of making tests less fragile and unexpected intermittent errors less likely.\n             p2p_conn.sync_with_ping()\n \n+            # Consistency check that the Bitcoin Core has received our user agent string. This checks the\n+            # node's newest peer. It could be racy if another Bitcoin Core node has connected since we opened\n+            # our connection, but we don't expect that to happen.\n+            assert_equal(self.getpeerinfo()[-1]['subver'], P2P_SUBVERSION)\n+\n         return p2p_conn\n \n     def num_test_p2p_connections(self):\n         \"\"\"Return number of test framework p2p connections to the node.\"\"\"\n-        return len([peer for peer in self.getpeerinfo() if peer['subver'] == P2P_SUBVERSION.decode(\"utf-8\")])\n+        return len([peer for peer in self.getpeerinfo() if peer['subver'] == P2P_SUBVERSION])\n \n     def disconnect_p2ps(self):\n         \"\"\"Close all p2p connections to the node.\"\"\""
      }
    ]
  },
  {
    "sha": "95d8a3275f2800682f39773ed6169f6cf2726070",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWQ4YTMyNzVmMjgwMDY4MmYzOTc3M2VkNjE2OWY2Y2YyNzI2MDcw",
    "commit": {
      "author": {
        "name": "Troy Giorshev",
        "email": "troygiorshev@gmail.com",
        "date": "2020-11-18T00:50:12Z"
      },
      "committer": {
        "name": "Troy Giorshev",
        "email": "troygiorshev@gmail.com",
        "date": "2020-11-30T23:28:40Z"
      },
      "message": "Unconditionally check for fRelay field in test framework\n\nThere is a discrepancy in the implementation of our p2p protocol between\nbitcoind and the testing framework.  The fRelay field is an optional\nfield at the end of a version message as of protocol version 70001.\nHowever, when deserializing a message in bitcoind, we don't check the\nversion to see if it should have an fRelay field or not.  Instead we\nunconditionally attempt to deserialize into the field.\n\nThis commit brings the testing framework in line with the implementation\nin core.\n\nThis matters for a version message with the following fields:\n\nVersion = 60000\nfRelay = 1\n\nBitcoind would deserialize this into a version message with\nVersion=60000 and fRelay=1, whereas (before this commit) our testing\nframework would deserialize this into a version message with\nVersion=60000 and fRelay=0.",
      "tree": {
        "sha": "b5fb14f3c50bd630a52c9c06b582d9f4d93eb8b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b5fb14f3c50bd630a52c9c06b582d9f4d93eb8b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95d8a3275f2800682f39773ed6169f6cf2726070",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95d8a3275f2800682f39773ed6169f6cf2726070",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95d8a3275f2800682f39773ed6169f6cf2726070",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95d8a3275f2800682f39773ed6169f6cf2726070/comments",
    "author": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2f5a3b386fa6e81fe453232915fef60f8cc607f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c2f5a3b386fa6e81fe453232915fef60f8cc607f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "88c501002ad5b988c30a6201f560f57faac770df",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95d8a3275f2800682f39773ed6169f6cf2726070/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95d8a3275f2800682f39773ed6169f6cf2726070/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=95d8a3275f2800682f39773ed6169f6cf2726070",
        "patch": "@@ -1043,13 +1043,13 @@ def deserialize(self, f):\n \n         self.nStartingHeight = struct.unpack(\"<i\", f.read(4))[0]\n \n-        if self.nVersion >= 70001:\n-            # Relay field is optional for version 70001 onwards\n-            try:\n-                self.relay = struct.unpack(\"<b\", f.read(1))[0]\n-            except:\n-                self.relay = 0\n-        else:\n+        # Relay field is optional for version 70001 onwards\n+        # But, unconditionally check it to match behaviour in bitcoind\n+        try:\n+            self.relay = struct.unpack(\"<b\", f.read(1))[0]\n+        except KeyboardInterrupt:\n+            raise KeyboardInterrupt\n+        except:\n             self.relay = 0\n \n     def serialize(self):"
      }
    ]
  }
]