gastonmorixe,2013-12-10T14:15:18Z,:+1: \n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30229912,30229912,
jgarzik,2013-12-12T23:50:43Z,"re-ACK\n\nThe previous pull request went around and around in an ultimately circular discussion.  I disagree that the multi-balance situation is a blocker for this PR.  Multi-balance has existed since the beginning of bitcoin, in the form of confirmed/unconfirmed balance.  Add on top of that multi-sig.  On top of that, locked outputs.  Adding public-key-only to the wallet is elegant and does not o",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30474213,30474213,
gavinandresen,2013-12-13T00:01:25Z,"OK from me, but I don't have time to test.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30474857,30474857,
laanwj,2013-12-13T04:47:39Z,"@jgarzik But all the current balances can be seen by the user, it's easy to see what part of the balance is confirmed, unconfirmed, etc. This patch as it is now provides no way to see what part of the balance is 'watch-only'.\n\nThis could be dangerous: there is no way to distinguish a wallet that only contains addresses from one that contains actual private keys for the same without trying to spe",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30486909,30486909,
luke-jr,2013-12-13T13:43:19Z,"I think we are pretty close to multi-wallet actually... just some relatively small glue needed to expose it to the GUI or daemon, right?\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30509779,30509779,
sipa,2013-12-13T14:19:04Z,"I think having non-spendable balances visible is a good thing. Adding a boolean for that to getbalance/getunconfirmedbalance sounds fine to me (it should also deal with locked outputs).\n\nFor the GUI, something like:\n- Balance: X (+ Y unspendable)\n- Unconfirmed balance: Z (+ W unspendable)\n  (where the bracketed part is only shown when Y/W are nonzero)\n  would be fine to me.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30512027,30512027,
jgarzik,2013-12-13T15:33:21Z,"@sipa agree\n@laanwj agree -- and this is easy to fix, by simply exposing the information.\n\nFor RPC, showing multiple balances and providing information about locked/multisig/readonly should be visible.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-30517656,30517656,
kyledrake,2014-01-11T05:52:59Z,"Hi guys,\n\nI'm investigating a problem where importaddress fails to find unspents sent to the imported address, even when rescan is set to true. I'm currently using https://github.com/sipa/bitcoin/tree/watchonly, so I haven't tested with this latest rebase yet, but I wanted to bring this up ASAP incase this is an issue that has not yet been discovered.\n\nReproducing is pretty simple with a priva",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32088431,32088431,
wtogami,2014-01-11T06:58:09Z,Could that issue be related to https://github.com/bitcoin/bitcoin/pull/3502 ?\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32089561,32089561,
kyledrake,2014-01-11T20:00:42Z,"@wtogami I'm not sure, but it's similar for sure.\n\n`importaddress <address> [label] [rescan=true]`\n\nIt does seem to rescan when rescan=true because the CPU spikes, but it doesn't find the unspent transactions for the address.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32105430,32105430,
wtogami,2014-01-13T09:45:52Z,@kyledrake mhou3jmi6Snxw4Y7nszn7gFTbUzHdiBt9y doesn't seem to import any transactions into the wallet with master + #3383 while other addresses do.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32155612,32155612,
kyledrake,2014-01-13T20:47:57Z,That's crazy. Is it possible there's something wrong with that address?\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32209676,32209676,
wtogami,2014-01-14T05:05:02Z,"I noticed there's a bunch of instances of bool ""isMine"" in several parts of the code after this commit.\n\n```\n<sipa> warren: the return value of IsMine(CTransaction) is supposed to be a bool - it should be called ""IsRelevantToMe"", as it could just as easily be a mix\n<sipa> for NotifyAddressBookChanged it could be made into isminetype, if the GUI uses/needs that information\n```\n\n@sipa clarifi",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32239100,32239100,
sipa,2014-01-14T22:35:07Z,"So, there are two instances where something ""IsMine""-like occurs in non-GUI code that returns a bool, and not an isminetype:\n- In CWallet::IsMine(CTransaction), we return a bool because it's not about a particular output being spendable or not, just about whether the transaction is relevant to our wallet. So, this is correct. It would be more clear if the method were renamed to CWallet::IsRelevan",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-32315224,32315224,
BitcoinPullTester,2014-01-23T13:22:33Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/c1e048fbe4b59ffc539eb2e7b11d3dd5ae4abff6 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-33122899,33122899,
ryancdotorg,2014-01-31T00:19:38Z,I just patched bitcoin/bitcoin:master with this (which now has #3502 applied) and the rescan now picks up the transactions that were previously missed.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-33750261,33750261,
kyledrake,2014-02-12T09:58:09Z,@ryancdotorg where can I find your patch for latest?\n\nYour patch is possibly my last hope for getting the transaction malleability fixes into this.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-34853991,34853991,
ryancdotorg,2014-02-12T15:56:21Z,@kyledrake not sure what you're asking about. This patch applied cleanly against bitcoin/bitcoin:master at 19007cf5529bc35a3baf53b14c6559bda3b2b206\n\neasiest way to apply it is wget -O - https://github.com/bitcoin/bitcoin/pull/3383.diff | patch -p1\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-34882393,34882393,
erth64net,2014-02-15T01:31:38Z,"Yesterday, I decided to fork bitcoin/bitcoin and applied #3383 using:\n curl https://github.com/bitcoin/bitcoin/pull/3383.diff | patch -p1\n\nPatch applied without issue, and we're now running a watch-only wallet. Over 10,000 addresses have been imported, and a mere ~15 minutes after starting rescan we were ready to rock. Wallet balance is accurate - so it looks like rescan picked up everything wi",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35143805,35143805,
tuttleorbuttle,2014-02-18T22:52:11Z,awesome! if this patch makes it into 0.9.0 it would be a great help for Open Transactions.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35445369,35445369,
luke-jr,2014-02-20T00:16:09Z,@drak It remains inappropriate to merge due to lack of a reasonable use case.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35568478,35568478,
sipa,2014-02-20T00:23:59Z,"@luke-jr Um, what?\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35568984,35568984,
luke-jr,2014-02-20T00:26:54Z,"@sipa It does not make sense to monitor individual addresses,in a wallet. Addresses only receive, so the balance would just grow unbounded. The only apparent ""use case"" for this AFAIK is trying to emulate watch-only wallets.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35569213,35569213,
sipa,2014-02-20T00:30:13Z,"It will require some manual synchronization with a live wallet, to feed it new addresses, but apart from that, there is not difference. You can monitor incoming payment, and remaining wallet balance.\n\nYes, it would be nicer if we had BIP32 watch-only wallets that could generate these addresses automatically, but one does not prevent the other.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35569435,35569435,
luke-jr,2014-02-20T00:31:41Z,"@sipa You can't see a remaining wallet balance, since sends are not related to mere addresses. If this tracks when outputs received by the address are spent, I'd consider that a bug since those are unrelated to the address.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35569534,35569534,
sipa,2014-02-20T00:32:23Z,@luke-jr Please... how is that different from any other wallet?\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35569585,35569585,
luke-jr,2014-02-20T00:45:53Z,@sipa Addresses are not wallets.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35570400,35570400,
sipa,2014-02-20T00:47:05Z,@luke-jr Collections of them are.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35570487,35570487,
sipa,2014-02-20T00:48:21Z,@luke-jr The reason for not wanting to consider an address a wallet is because it encourages micromanagement and address reuse. What this does is just allowing you to build a wallet with addresses you control - you just don't want to import their private keys.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35570564,35570564,
luke-jr,2014-02-20T00:51:39Z,@sipa That's already possible since 0.4.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35570875,35570875,
sipa,2014-02-20T00:54:57Z,"Do you seriously consider ""encrypt your wallet file and throw away the key, then import it elsewhere"" a user-friendly suggestion? Also, what do you do when new keys were generated in the mean time and you need to sync? Shut down and do the copying all over? Please...\n\nThis just gives a way to import addresses instead of their private keys. Yes, it requires key-level management and with BIP32 it ",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35571441,35571441,
luke-jr,2014-02-20T01:03:15Z,"@sipa MUCH more user-friendly than ""iterate over all the ECDSA private keys in your wallet, including ones intentionally hidden from you, find their addresses, and run ""importaddress"" with them one by one understanding you're not really importing addresses, but a read-only copy of the original wallet"". Compared to what is suggested by this PR, copying a one-way-encrypted wallet file is much easier",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35572146,35572146,
luke-jr,2014-02-20T01:14:36Z,"@drak The only paper wallets are HD wallets. Saving an ECDSA private key on paper is not a wallet, and that is precisely the bad use cases we should be discouraging enough to _avoid_ merging this.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35572952,35572952,
ghost,2014-02-20T01:25:58Z,"Well it's good to know it works on HD paper wallets, but I still think this should be merged. Once BIP32 becomes widespread and is well integrated in wallets, address reuse go away by itself. But until then, really do need a way to watch addresses. Sorry, but this feature is not going to encourage address re-use and it is useful. There of course also needs to be a way to watch addresses from HD pa",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35575200,35575200,
laanwj,2014-02-20T07:05:11Z,"@drak If you want this merged please solve the outstanding issues mentioned in the OP (as it was already ACKed once apart from those nits). Further discussion will not aid here:\n- Rebase\n- Show non-spendable/watch-only balance seperately from available balance in UI and RPC\n- Fix @kyledrake's scanning issue above (if still a problem, I remember vaguely that it was solved with master)\n- Check @",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-35594327,35594327,
wangbus,2014-03-02T12:49:35Z,"Interested in closing this issue out and it's not clear how the UI will show the non-spendable/watch only balance. I believe we also need to show the confirmed/unconfirmed separately somehow. Moreover, the RPC's representation of these values should maybe be in another RPC method?\n\nSuggestions?\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-36453324,36453324,
bitcoinder,2014-03-04T01:30:18Z,@laanwj @erth64net @ryancdotorg \ni am in $ cd /bitcoin-0.8.2-linux/src/src now\nyum install patch done\n\nhow do i use https://github.com/bitcoin/bitcoin/pull/3383.diff to get a watchonly bitcoind?\nthank you\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-36582631,36582631,
wtogami,2014-03-04T11:28:31Z,"@wtogami said:\nwatch-only entirely separate from real balances in both RPC and qt right?  separate unconfirmed and confirmed watchonly?\n\n@laanwj said:\nyes, basically all the balances would be duplicated\navailable watchonly, pending watchonly, immature watchonly, total watchonly\nas to how to display this, could be done in two ways, most straightforward would be adding another table if the use",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-36615196,36615196,
laanwj,2014-03-04T11:33:27Z,"""as to how to display this, could be done in two ways"" -> the other way would be having two columns in the ""Wallet"" table, one for the ""readwrite"" balance and one for the ""watchonly"" balance, hiding the watchonly column when the user doesn't use watchonly.\n\n""and hide it from the other balances"" -> to be clear, this means that the two (set of) balances are disjunct, ""hide"" sounds sneakier than in",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-36615508,36615508,
nanotube,2014-03-16T04:11:55Z,"FWIW, i think it would be very useful to have a 'watch-only' address capability.\n\nSidestepping all the UI issues herein discussed, (I think having separate balances, if any, is a fine idea), I will also note that it should be possible to author a transaction using the inaccessible inputs, for export and subsequent signing offline. That would be one of the major use cases, IMO - the ability to ea",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-37748325,37748325,
laanwj,2014-03-23T11:04:58Z,"@wangbus Any luck finishing this? If you're no longer working on this please let us know too, so someone else could pick this up.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-38379428,38379428,
wangbus,2014-03-23T11:06:56Z,Will pick this up early next week. Posting again if that doesn't come through.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-38379465,38379465,
wangbus,2014-03-27T10:20:27Z,"Apologies, swamped this week. Will be picking it up after Friday.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-38786766,38786766,
tuttleorbuttle,2014-03-28T22:14:58Z,"I am playing around with it a bit, added some simple changes to make it more clear which is watch-only and which is your own. maybe you can use this, I'll upload my fork soon.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-38973971,38973971,
tuttleorbuttle,2014-03-29T06:49:03Z,here it is: 6824f5a44a776ee6124dcccf6f92c27b2fdb850d \nit adds another row below Immature balance and some details to transaction description.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-38988528,38988528,
laanwj,2014-03-31T07:15:34Z,"@tuttleorbuttle it's on the right track! however, see @wtogami's post above and my reply to it; all the balances (available, immature, pending, total) would be replicated for watch-only.\n\nPutting 'watch only' in the same category as those balances is confusing because it raises questions like 'is this only the confirmed part, or everything?'.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39059443,39059443,
rebroad,2014-03-31T12:13:40Z,I'd like to better understand @luke-jr's argument that this shouldn't be merged. \n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39081224,39081224,
sipa,2014-03-31T12:31:38Z,"My interpretation of @luke-jr's argument is that this allows building a wallet from arbitrary addresses, allowing tracking of transaction to individual address, and their spendability, essentially providing ""balance of an address"" - management at the address level rather than at the wallet level.\n\nI agree that is unfortunate, and shouldn't be encouraged, but it is no different than allowing impo",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39082582,39082582,
kyledrake,2014-03-31T18:50:24Z,"I get that the watchonly patch is not popular with the core team. I would like to propose an alternative idea here and get your thoughts on it.\n\nMy alternative idea is to have bitcoind compile an index of all the existing utxos in the blockchain, with the address as the key.\n\nThis is not related to the wallet. Instead, it's exactly the same idea as the `txindex`. You could have a flag to bitco",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39126281,39126281,
kyledrake,2014-03-31T18:56:25Z,"The current way to do this outside of bitcoind is to manually scan the entire blockchain from bitcoind using the RPC and write code to track all of this elsewhere, which is 1) difficult to do safely (and correctly the first time), 2) requires a lot of code duplication that bitcoind already does, and 3) takes a very long time. It's also lead to stability issues when for example blockchain.info had ",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39127005,39127005,
gmaxwell,2014-03-31T18:59:19Z,"@kyledrake What you're suggesting is inherently unscalable. The watch-only patch isn't liked by Luke, but other than some concerns about how the UI works for unspendable coins I think it's fine with everyone else.\n\nI don't think we'll consider including an addr index until we have pruning deployed so that the full marginal cost (right now about 20Gbytes) of turning on such an index is visible to",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39127356,39127356,
sipa,2014-03-31T19:02:25Z,"@gmaxwell I think @kyledrake is only suggesting indexing the UTXOs, not the full blockchain, which is far more scalable (and likely to happen with committed UTXOs anyway, if the address-indexed version of that gets deployed).\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39127705,39127705,
kyledrake,2014-03-31T19:06:13Z,"@sipa Yeah exactly! Just an index of the utxos. Same idea as the txindex. And you need to explicitly enable it in the config, so that it doesn't build for people that don't want it.\n\nI actually would prefer that approach vs watchonly, simply because it increases reliability: Instead of telling bitcoind which addresses I need to listen to, I can run a pool of them and just query addresses anytime",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39128142,39128142,
gmaxwell,2014-03-31T19:10:36Z,@sipa hm. indeed. utxo address indexing is an interesting thought. I don't think it replaces watching wallets but I can certantly see uses for that.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39128609,39128609,
sipa,2014-03-31T19:18:04Z,"@kyledrake But you can't implement a full wallet using it (no history, only currently available).\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39129417,39129417,
kyledrake,2014-03-31T19:30:59Z,"@sipa I believe I can. The wallets I'm designing don't have the notion of sending from other wallets, so payments can only be sent out from the wallet itself, which can record incoming utxos as transactions. And then when I send them out, I record that as a sent transaction. Coinpunk actually works this way as-is - I keep a transaction ledger with the wallet.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39130795,39130795,
laanwj,2014-04-01T06:50:59Z,"The watchonly patch is fine (see the amount of ACKs). As I've said about 10 times (browse back please) there are just a nit left that need to be fixed:\n- The watch-only balances must be separate from the main balance (both in RPC and UI)\n\nIf someone picked this up and fixed the outstanding issues it could have been merged 10 times by now.\n\nCreate a new issue for the UTXO index, this is not th",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39175670,39175670,
anton000,2014-04-03T01:33:13Z,"Agree with @laanwj . On the other hand, although it's not directly related to this PR  kyle's idea actually render's watch-only wallets issue ""moot"". I'm quite sure most, if not all, use case of watching addresses.\n\n@kyledrake would love to know if you're pursuing this.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39403939,39403939,
kyledrake,2014-04-03T01:49:02Z,"@anton000 I will file an issue for this shortly, and reference it here.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39404705,39404705,
tuttleorbuttle,2014-04-05T21:16:41Z,"here's a commit that entirely separates watchonly and regular balance in the GUI: [deprecated]\n\nhere's one that marks watchonly transactions in transaction history with a ""w"": [deprecated]\n\nI'll also add a commit to fix the RPC commands if no one else is working on that right now.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39651110,39651110,
tuttleorbuttle,2014-04-08T16:51:46Z,I added a true/false flag to the affected RPC commands so you can select if you want watchonly transactions shown too.\nThe GUI layout needs a little bit of work but everything works.\nhttps://github.com/tuttleorbuttle/bitcoin/commits/watchonly\n\nNot sure yet how to mark watchonly transactions in listtransactions but I'll add something for that too.\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39872891,39872891,
tuttleorbuttle,2014-04-09T16:03:12Z,Here's a patch to mark watchonly transactions in listtransactions: 9497d4f493310bb645911031fb1e8a6c799baea2 (does not require 9ad838c3b65ab5d4aa92db6e47813530a6c66f33)\nI rebased my watchonly branch on bitcoin master. Can someone have a look at it?\n,https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39982162,39982162,
laanwj,2014-04-09T17:59:31Z,"@tuttleorbuttle thanks a lot for your work on this!\nAs for getting people to look at it, I suggest filing it as a new pull request (I'll close this one), that's easier for review and discussion and such.\n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-39996011,39996011,
tuttleorbuttle,2014-04-10T18:25:56Z,"Alright, i created a new pull request: #4045 \n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-40120642,40120642,
laanwj,2014-04-11T06:02:12Z,"Closing this one, thanks for picking this up @tuttleorbuttle \n",https://github.com/bitcoin/bitcoin/pull/3383#issuecomment-40173227,40173227,
