[
  {
    "sha": "7119c9cefdca06bbaf79b574a095c168b8f6633c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTE5YzljZWZkY2EwNmJiYWY3OWI1NzRhMDk1YzE2OGI4ZjY2MzNj",
    "commit": {
      "author": {
        "name": "Toby Padilla",
        "email": "tobypadilla@gmail.com",
        "date": "2015-12-16T18:07:26Z"
      },
      "committer": {
        "name": "Toby Padilla",
        "email": "tobypadilla@gmail.com",
        "date": "2016-01-18T21:27:39Z"
      },
      "message": "Allow zero value OP_RETURN in PaymentRequests\n\nPaymentRequests currently support any valid script\nserialized in the PaymentDetails protocol buffer.\nNon-zero outputs are ignored and not included in the\ntransaction. This means that OP_RETURN scripts are\ncurrently supported but they must have a > zero value,\neffectively destroying the value assigned to that output.\n\nThis patch allows zero value PaymentRequest outputs ONLY\nif the script is an OP_RETURN. It also requires that all\nOP_RETURN outputs be zero value to address the value\ndestruction issue.",
      "tree": {
        "sha": "126f83221a8fc17849c97b1075a0ef73edb4e25f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/126f83221a8fc17849c97b1075a0ef73edb4e25f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7119c9cefdca06bbaf79b574a095c168b8f6633c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7119c9cefdca06bbaf79b574a095c168b8f6633c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7119c9cefdca06bbaf79b574a095c168b8f6633c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7119c9cefdca06bbaf79b574a095c168b8f6633c/comments",
    "author": {
      "login": "toby",
      "id": 83556,
      "node_id": "MDQ6VXNlcjgzNTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/83556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toby",
      "html_url": "https://github.com/toby",
      "followers_url": "https://api.github.com/users/toby/followers",
      "following_url": "https://api.github.com/users/toby/following{/other_user}",
      "gists_url": "https://api.github.com/users/toby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toby/subscriptions",
      "organizations_url": "https://api.github.com/users/toby/orgs",
      "repos_url": "https://api.github.com/users/toby/repos",
      "events_url": "https://api.github.com/users/toby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toby/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "toby",
      "id": 83556,
      "node_id": "MDQ6VXNlcjgzNTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/83556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toby",
      "html_url": "https://github.com/toby",
      "followers_url": "https://api.github.com/users/toby/followers",
      "following_url": "https://api.github.com/users/toby/following{/other_user}",
      "gists_url": "https://api.github.com/users/toby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toby/subscriptions",
      "organizations_url": "https://api.github.com/users/toby/orgs",
      "repos_url": "https://api.github.com/users/toby/repos",
      "events_url": "https://api.github.com/users/toby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toby/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "21376af183ffd1a9b4a16610ec53e3d4d258dbc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21376af183ffd1a9b4a16610ec53e3d4d258dbc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21376af183ffd1a9b4a16610ec53e3d4d258dbc2"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 29,
      "deletions": 6
    },
    "files": [
      {
        "sha": "05cade164d2d8f9f8ee9b64ec6d03f96c78765bc",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7119c9cefdca06bbaf79b574a095c168b8f6633c/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7119c9cefdca06bbaf79b574a095c168b8f6633c/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=7119c9cefdca06bbaf79b574a095c168b8f6633c",
        "patch": "@@ -556,6 +556,23 @@ bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, Sen\n     QStringList addresses;\n \n     Q_FOREACH(const PAIRTYPE(CScript, CAmount)& sendingTo, sendingTos) {\n+        opcodetype scriptOp;\n+        CScript::const_iterator pc = sendingTo.first.begin();\n+        sendingTo.first.GetOp(pc, scriptOp);\n+\n+        // Only allow zero value OP_RETURNs\n+        if (scriptOp == OP_RETURN) {\n+            std::vector<unsigned char> data;\n+            opcodetype opcode;\n+            sendingTo.first.GetOp(pc, opcode, data);\n+            if (sendingTo.second != 0) {\n+                Q_EMIT message(tr(\"Payment request rejected\"),\n+                    tr(\"OP_RETURN scripts must be zero value.\"),\n+                    CClientUIInterface::MSG_ERROR);\n+                return false;\n+            }\n+        }\n+\n         // Extract and check destination addresses\n         CTxDestination dest;\n         if (ExtractDestination(sendingTo.first, dest)) {"
      },
      {
        "sha": "5cd2bd701a7950df91bbbef35e8586ddb84c867e",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 6,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7119c9cefdca06bbaf79b574a095c168b8f6633c/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7119c9cefdca06bbaf79b574a095c168b8f6633c/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=7119c9cefdca06bbaf79b574a095c168b8f6633c",
        "patch": "@@ -217,13 +217,19 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n             for (int i = 0; i < details.outputs_size(); i++)\n             {\n                 const payments::Output& out = details.outputs(i);\n-                if (out.amount() <= 0) continue;\n-                subtotal += out.amount();\n                 const unsigned char* scriptStr = (const unsigned char*)out.script().data();\n-                CScript scriptPubKey(scriptStr, scriptStr+out.script().size());\n-                CAmount nAmount = out.amount();\n-                CRecipient recipient = {scriptPubKey, nAmount, rcp.fSubtractFeeFromAmount};\n-                vecSend.push_back(recipient);\n+                CScript script(scriptStr, scriptStr+out.script().size());\n+                opcodetype scriptOp;\n+                CScript::const_iterator pc = script.begin();\n+                script.GetOp(pc, scriptOp);\n+\n+                if ((out.amount() > 0 && scriptOp != OP_RETURN) || (scriptOp == OP_RETURN && out.amount() == 0))\n+                {\n+                  subtotal += out.amount();\n+                  CAmount nAmount = out.amount();\n+                  CRecipient recipient = {script, nAmount, rcp.fSubtractFeeFromAmount};\n+                  vecSend.push_back(recipient);\n+                }\n             }\n             if (subtotal <= 0)\n             {"
      }
    ]
  },
  {
    "sha": "f1c945087adc23071bca3ff00c117613726cc217",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMWM5NDUwODdhZGMyMzA3MWJjYTNmZjAwYzExNzYxMzcyNmNjMjE3",
    "commit": {
      "author": {
        "name": "Toby Padilla",
        "email": "tobypadilla@gmail.com",
        "date": "2016-01-29T01:03:37Z"
      },
      "committer": {
        "name": "Toby Padilla",
        "email": "tobypadilla@gmail.com",
        "date": "2016-01-29T01:03:37Z"
      },
      "message": "allow greater than zero value on OP_RETURNs",
      "tree": {
        "sha": "87469d5580cef7d161b1d63e05b2caacaaeda673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87469d5580cef7d161b1d63e05b2caacaaeda673"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f1c945087adc23071bca3ff00c117613726cc217",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1c945087adc23071bca3ff00c117613726cc217",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f1c945087adc23071bca3ff00c117613726cc217",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1c945087adc23071bca3ff00c117613726cc217/comments",
    "author": {
      "login": "toby",
      "id": 83556,
      "node_id": "MDQ6VXNlcjgzNTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/83556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toby",
      "html_url": "https://github.com/toby",
      "followers_url": "https://api.github.com/users/toby/followers",
      "following_url": "https://api.github.com/users/toby/following{/other_user}",
      "gists_url": "https://api.github.com/users/toby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toby/subscriptions",
      "organizations_url": "https://api.github.com/users/toby/orgs",
      "repos_url": "https://api.github.com/users/toby/repos",
      "events_url": "https://api.github.com/users/toby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toby/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "toby",
      "id": 83556,
      "node_id": "MDQ6VXNlcjgzNTU2",
      "avatar_url": "https://avatars.githubusercontent.com/u/83556?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/toby",
      "html_url": "https://github.com/toby",
      "followers_url": "https://api.github.com/users/toby/followers",
      "following_url": "https://api.github.com/users/toby/following{/other_user}",
      "gists_url": "https://api.github.com/users/toby/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/toby/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/toby/subscriptions",
      "organizations_url": "https://api.github.com/users/toby/orgs",
      "repos_url": "https://api.github.com/users/toby/repos",
      "events_url": "https://api.github.com/users/toby/events{/privacy}",
      "received_events_url": "https://api.github.com/users/toby/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7119c9cefdca06bbaf79b574a095c168b8f6633c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7119c9cefdca06bbaf79b574a095c168b8f6633c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7119c9cefdca06bbaf79b574a095c168b8f6633c"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 1,
      "deletions": 18
    },
    "files": [
      {
        "sha": "c80aebb0098d8160b592cdbfbd14b15531943274",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1c945087adc23071bca3ff00c117613726cc217/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1c945087adc23071bca3ff00c117613726cc217/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=f1c945087adc23071bca3ff00c117613726cc217",
        "patch": "@@ -556,23 +556,6 @@ bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, Sen\n     QStringList addresses;\n \n     Q_FOREACH(const PAIRTYPE(CScript, CAmount)& sendingTo, sendingTos) {\n-        opcodetype scriptOp;\n-        CScript::const_iterator pc = sendingTo.first.begin();\n-        sendingTo.first.GetOp(pc, scriptOp);\n-\n-        // Only allow zero value OP_RETURNs\n-        if (scriptOp == OP_RETURN) {\n-            std::vector<unsigned char> data;\n-            opcodetype opcode;\n-            sendingTo.first.GetOp(pc, opcode, data);\n-            if (sendingTo.second != 0) {\n-                Q_EMIT message(tr(\"Payment request rejected\"),\n-                    tr(\"OP_RETURN scripts must be zero value.\"),\n-                    CClientUIInterface::MSG_ERROR);\n-                return false;\n-            }\n-        }\n-\n         // Extract and check destination addresses\n         CTxDestination dest;\n         if (ExtractDestination(sendingTo.first, dest)) {"
      },
      {
        "sha": "e2a9e2409bbb8e36c304c4c78605a45bd12fad86",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f1c945087adc23071bca3ff00c117613726cc217/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f1c945087adc23071bca3ff00c117613726cc217/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=f1c945087adc23071bca3ff00c117613726cc217",
        "patch": "@@ -223,7 +223,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n                 CScript::const_iterator pc = script.begin();\n                 script.GetOp(pc, scriptOp);\n \n-                if ((out.amount() > 0 && scriptOp != OP_RETURN) || (scriptOp == OP_RETURN && out.amount() == 0))\n+                if (out.amount() > 0 || scriptOp == OP_RETURN)\n                 {\n                   subtotal += out.amount();\n                   CAmount nAmount = out.amount();"
      }
    ]
  }
]