DrahtBot,2019-04-06T23:07:19Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15986](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15986.html) (Add unmodified-descriptor-with-checksum to ",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480544524,480544524,
jnewbery,2019-04-08T15:40:45Z,"Concept ACK\n\n> Unfortunately importmulti is pretty much incompatible with importdescriptors, so tests that use importmulti are either removed (e.g. wallet_importmulti.py) or changed to use importdescriptors.\n\nWe'll need to support non-descriptor based wallets for some time to come. I don't think these tests should be removed.",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480885644,480885644,
achow101,2019-04-08T16:56:38Z,"> We'll need to support non-descriptor based wallets for some time to come. I don't think these tests should be removed.\n\nThere's currently no way to create a wallet with older wallet versions. Since descriptor wallets are used by default, the tests won't work with `importmulti`. However if we do add test functionality for testing old wallet files, the commit that removes `wallet_importmulti.p",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480914087,480914087,
jnewbery,2019-04-08T17:01:21Z,"> if we do add test functionality for testing old wallet files, the commit that removes wallet_importmulti.py can be reverted.\n\nI think that's a hard requirement. Native descriptor wallet is such a large change that we need to maintain full test coverage of the old wallet version.",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-480915843,480915843,
ryanofsky,2019-04-09T13:59:44Z,"I had a look over the PR and it's surprisingly clean and simple. But while I understand the impulse to want to replace old code with new code and drop support for things like creating wallets in the current format, I think the PR could be actually simpler, and users would be better off if this took a more conservative approach and just added descriptor functionality as a new optional feature along",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481263962,481263962,
achow101,2019-04-09T14:33:07Z,Really the only reason 2 and 3 were needed is because descriptor wallets bumped the wallet version number. I could instead make it a wallet flag and make descriptors something that users can choose to enable or disable in createwallet. However I felt it would be more sensible to make this a new wallet version since it does fundamentally change the definitions of ismine and watchonly.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481277608,481277608,
jnewbery,2019-04-09T14:48:28Z,@practicalswift - it's too early to be adding nit code style comments when the concept and approach is still being discussed. Please hold back until concept discussion is over.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481284150,481284150,
practicalswift,2019-04-09T15:07:29Z,@jnewbery OK! @achow101 Let me know if/when you want me to review this PR :-),https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481292231,481292231,
laanwj,2019-04-10T08:56:41Z,Impressive work. Concept ACK.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-481603591,481603591,
Sjors,2019-04-12T19:37:49Z,Obvious concept ACK. See also my (partial) attempt at #15487. We discussed some differences in todays wallet meeting on IRC. Will study this PR in more detail later.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-482697665,482697665,
jnewbery,2019-04-12T20:17:22Z,"Lots of discussion on this in today's IRC meeting: http://www.erisian.com.au/meetbot/bitcoin-core-dev/2019/bitcoin-core-dev.2019-04-12-19.00.log.html#l-46\n\nConclusion is that @achow101 will rework this PR to use feature flags, restore the tests and remove the upgrade code.",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-482708609,482708609,
jonasschnelli,2019-04-16T07:50:15Z,Obvious concept ACK,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483550852,483550852,
Sjors,2019-04-16T13:31:36Z,"Concept ACK on:\n* adding a descriptor id (sha256 of the string); alternatively we could also the ID wallet based, in which case a simple auto-increment int could suffice\n* the WalletDescriptor class, but:\n  * I would drop `range_start` and `range_end` unless there's a good reason for them\n  * serialization needs versioning (`CURRENT_VERSION=VERSION_BASIC`)\n* a new `importdescriptors` RPC",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483660440,483660440,
achow101,2019-04-16T14:48:33Z,"I've made the changes that were discussed last Friday. I've also split up some of the commits so that they are smaller and easier to review.\n\nI'll be working on adding tests for all of this.",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-483693896,483693896,
achow101,2019-04-22T03:32:19Z,"Rebased, fixed a couple of bugs, and added some tests. I'll be adding more tests soon, particularly for `importdescriptors`.\n\n***\n\n> don't add private key support (I do think we should have a WIP PR that adds private key support, to get a rough feel for what needs to happen)\n\nNo. That wouldn't make this any smaller, and I think that having private key support is an important part of de",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-485314343,485314343,
Sjors,2019-04-24T10:35:34Z,If each descriptor has its own `CKeystore` then `CKeystore` also doesn't have to know about descriptors.  Descriptor wallets give us an opportunity to rethink IsMine and watch-only behavior. I suspect that using a global wallet keys and scripts makes changing that more difficult because it requires more backwards compatibly. But I could be wrong.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-486168726,486168726,
DrahtBot,2019-04-27T13:35:54Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-487286727,487286727,
achow101,2019-06-05T10:34:25Z,rebased,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499030431,499030431,
achow101,2019-06-05T14:56:07Z,"A lot of this will be restructured and changed in the near future. However a lot of the new descriptor specific functions will probably stay the same. So for now, ignore the following commits:\n\n* 7453e3e5f312b1b32d677451ae8064745a848b41\n* 60a93ae61913e5ca9f04a0f16e75dca6b1f96975\n* 95fe8337b270e2457b13b8a9b72e08b30417e2d5\n* 8e61da11161751f30abc757e6a14af714ebc6a29\n* 4fe18b9b7c6502fbafc8",https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499119109,499119109,
DrahtBot,2019-06-07T14:39:28Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-499910987,499910987,
achow101,2019-06-18T21:41:54Z,Closing this for now while the wallet restructure takes place.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-503323151,503323151,
ysangkok,2020-02-21T16:13:59Z,I think this was superseded by #16528 in case anybody is wondering why it wasn't reopened.,https://github.com/bitcoin/bitcoin/pull/15764#issuecomment-589721987,589721987,
