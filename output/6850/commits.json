[
  {
    "sha": "cf9c739e630fcb19f84f93445c3614ab09406a23",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjljNzM5ZTYzMGZjYjE5Zjg0ZjkzNDQ1YzM2MTRhYjA5NDA2YTIz",
    "commit": {
      "author": {
        "name": "Bitcoin Daemon",
        "email": "bitcoin@bitcoind.gigatux.com",
        "date": "2015-10-18T12:15:28Z"
      },
      "committer": {
        "name": "Bitcoin Daemon",
        "email": "bitcoin@core1.bittylicious.com",
        "date": "2015-11-17T15:27:56Z"
      },
      "message": "Improve AddToWallet performance when rescanning\n\nLarge performance improvement when adding tranasctions if the client is not currently at the tip of the blockchain. This particularly improves wallet rescan times, including following from a zapwallettxes.\n\nIn AddToWallet, two large indicies are created over the wallet in order to make an estimate of the time a wallet transaction was created. This is slow anyway (possibly subject to a further fix) but also unnecssary if we are not at the tip because we just default to the block time. This patch skips the rescan code if we were going to fall back to the block time anyway, so shouldn't change the logic.\n\nOn a wallet with around 180,000 keys (500 MB, so pretty large) this sped up the resync time 20x from about 10 hours to 30 minutes.",
      "tree": {
        "sha": "0a77f945cfca3a4b505f9cf396cc5b75ba81f9d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a77f945cfca3a4b505f9cf396cc5b75ba81f9d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf9c739e630fcb19f84f93445c3614ab09406a23",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9c739e630fcb19f84f93445c3614ab09406a23",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf9c739e630fcb19f84f93445c3614ab09406a23",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9c739e630fcb19f84f93445c3614ab09406a23/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "eac53ec992018a14db6f8a65a7ce333a4c8284cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eac53ec992018a14db6f8a65a7ce333a4c8284cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eac53ec992018a14db6f8a65a7ce333a4c8284cc"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "73f90f0cf0c08462be5888c8c43ecc15b508a9d9",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf9c739e630fcb19f84f93445c3614ab09406a23/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf9c739e630fcb19f84f93445c3614ab09406a23/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cf9c739e630fcb19f84f93445c3614ab09406a23",
        "patch": "@@ -652,8 +652,12 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                 {\n                     int64_t latestNow = wtx.nTimeReceived;\n                     int64_t latestEntry = 0;\n+                    int64_t blocktime = mapBlockIndex[wtxIn.hashBlock]->GetBlockTime();\n+                    // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n+                    // This doesn't apply unless if we're still scanning older blocks\n+                    if (latestNow < blocktime)\n+\n                     {\n-                        // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n                         int64_t latestTolerated = latestNow + 300;\n                         std::list<CAccountingEntry> acentries;\n                         TxItems txOrdered = OrderedTxItems(acentries);\n@@ -682,7 +686,6 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                         }\n                     }\n \n-                    int64_t blocktime = mapBlockIndex[wtxIn.hashBlock]->GetBlockTime();\n                     wtx.nTimeSmart = std::max(latestEntry, std::min(blocktime, latestNow));\n                 }\n                 else"
      }
    ]
  },
  {
    "sha": "93c58852659ed22c79ff72a3aba664adf1c7e68d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5M2M1ODg1MjY1OWVkMjJjNzlmZjcyYTNhYmE2NjRhZGYxYzdlNjhk",
    "commit": {
      "author": {
        "name": "Bitcoin Daemon",
        "email": "bitcoin@core1.bittylicious.com",
        "date": "2015-11-17T15:45:57Z"
      },
      "committer": {
        "name": "Bitcoin Daemon",
        "email": "bitcoin@core1.bittylicious.com",
        "date": "2015-11-17T15:45:57Z"
      },
      "message": "Increased tolerance for nSmartTime calculation in AddToWallet",
      "tree": {
        "sha": "7dae16c80dfcfadcf1fd8bd8f7cf6d29281a81a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7dae16c80dfcfadcf1fd8bd8f7cf6d29281a81a2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93c58852659ed22c79ff72a3aba664adf1c7e68d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93c58852659ed22c79ff72a3aba664adf1c7e68d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93c58852659ed22c79ff72a3aba664adf1c7e68d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93c58852659ed22c79ff72a3aba664adf1c7e68d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "cf9c739e630fcb19f84f93445c3614ab09406a23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf9c739e630fcb19f84f93445c3614ab09406a23",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf9c739e630fcb19f84f93445c3614ab09406a23"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2604e888bc1924cba9d8ea0cb4e473d7fcc0cffb",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93c58852659ed22c79ff72a3aba664adf1c7e68d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93c58852659ed22c79ff72a3aba664adf1c7e68d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=93c58852659ed22c79ff72a3aba664adf1c7e68d",
        "patch": "@@ -653,12 +653,13 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFromLoadWallet, CWalletD\n                     int64_t latestNow = wtx.nTimeReceived;\n                     int64_t latestEntry = 0;\n                     int64_t blocktime = mapBlockIndex[wtxIn.hashBlock]->GetBlockTime();\n+\n                     // Tolerate times up to the last timestamp in the wallet not more than 5 minutes into the future\n                     // This doesn't apply unless if we're still scanning older blocks\n-                    if (latestNow < blocktime)\n-\n+                    int tolerance = 5 * 60;\n+                    if (latestNow < blocktime + tolerance)\n                     {\n-                        int64_t latestTolerated = latestNow + 300;\n+                        int64_t latestTolerated = latestNow + tolerance;\n                         std::list<CAccountingEntry> acentries;\n                         TxItems txOrdered = OrderedTxItems(acentries);\n                         for (TxItems::reverse_iterator it = txOrdered.rbegin(); it != txOrdered.rend(); ++it)"
      }
    ]
  }
]