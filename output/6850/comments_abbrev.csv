gmaxwell,2015-10-18T19:34:44Z,Hurrah. Will test and review. thanks for this work. \n,https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149041017,149041017,
luke-jr,2015-10-18T19:39:14Z,"No doubt there is probably room to optimise this, but I'm pretty sure your change modifies the behaviour. Even when rescanning (or otherwise lacking receive-time information), the block time is not used unconditionally, and is prevented from moving less than 5 minutes backward in time as the wallet progresses forward.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149041253,149041253,
bittylicious,2015-10-18T19:39:46Z,"Just to add some more rationale - at Bittylicious, we have a situation where we sent a transaction involving some unconfirmed change. This will never confirm because the original transaction that generated the change became mutated. Thus, we needed to zapwallettxes in order to remove this transaction and restore balances.\n\nThe restore process was going to take about 10 hours (wallet and blocks o",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149041274,149041274,
bittylicious,2015-10-18T19:42:01Z,"luke-jr: The time can only move a maximum of five minutes forwards. I think the if statement here stops the iteration block from being entered if this is basically impossible. Hence, I don't _think_ it changes the behaviour in any way. Naturally, with this being my first commit especially, I may be wrong.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149041386,149041386,
luke-jr,2015-10-19T09:24:27Z,"@bittylicious Can you confirm #6851 performs better than this, for you?\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149156142,149156142,
bittylicious,2015-10-19T11:01:04Z,"luke-jr: I don't see how #6851 can logically perform better than this commit. This commit has a simple if block that means the code won't get executed at all, whereas your code fix is more comprehensive but still means it will enter the iterator loop when we know it won't do anything already.\n\nThese two pull requests are not mutually exclusive. Yours is a more comprehensive fix that will make Ad",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149185106,149185106,
luke-jr,2015-10-20T04:51:39Z,"@bittylicious This one actually _breaks_ smart times, though. If you want to fix that, I agree these aren't mutually exclusive.\n\nI said #6851 is faster, because I actually compared it to the same base with smart times removed entirely (effectively what this would do). I was mainly just asking you to confirm my results on your own wallet. (_Why_ it's faster, I'm not really sure - I would guess th",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149432882,149432882,
bittylicious,2015-10-20T08:13:49Z,"@luke-jr You keep no saying that, but I need to know why you think this breaks smart times. The if block basically just skips the iteration loop if it's impossible to come to a better smart time. I don't think this changes the behaviour _at all_.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149473078,149473078,
luke-jr,2015-10-20T17:05:56Z,"It's not impossible to come to a better smart time during rescan. In fact, your conditional here is almost _never_ true.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149634797,149634797,
bittylicious,2015-10-20T17:29:54Z,"@luke-jr GIve me a specific example please.\n\nI believe that my if statement stops the iteration loop from being entered if we're not going to be able to get a more accurate nTimeSmart anyway. If you can give me a specific example with specific wtx.nTimeReceived and blockTime values, I'll investigate.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149640589,149640589,
luke-jr,2015-10-20T17:40:15Z,"1. Put both 16EW6Rv9P9AxFDBrZV816dD4sj1EAYUX3f and 1Ebb8NfVmKMoGuMJCAEbVMv2dX8GnzgxSa in the same wallet.\n2. You will receive 2d8c9330529acd61ba96719785613d8c577ba731a58b456642ff363702a802ca first, with a smart-time of 2015-10-20 16:41:15.\n3. You will receive 22de2409c7740dcdff4b234a1e02e40109e18fc5774d7da53916b259ef3e7843 second. Its smart-time should also be 2015-10-20 16:41:15, but with this ",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149643360,149643360,
bittylicious,2015-10-21T00:03:25Z,"@luke-jr Thanks for that - that's very helpful.\n\nMy brain hurts right now, but I think that I didn't consider the max(...) in the wtx.nTimeSmart = ... statement. I still think we can do this with an if statement though which should cover the possibilities here.\n\nAlthough I haven't worked entirely through the logic, just changing the if to something like _if (latestNow < blocktime + 300)_ shoul",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-149739716,149739716,
bittylicious,2015-11-17T15:49:08Z,"I've now changed the commit to make it enter the nSmartTime calculation loop if we're within 5 minutes of blocktime. I now think the logic is the same, and this will still add some good efficiency, especially when rescanning for wallet transactions.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-157410126,157410126,
gmaxwell,2015-11-23T00:19:11Z,@bittylicious Hows your feelings about the importance of this with the sorting brain-damage now fixed?  (I'm asking in order to figure out if I should go review and test this one).\n,https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-158821750,158821750,
bittylicious,2015-11-23T07:59:55Z,"@gmaxwell It's not nearly as important as before, but I imagine it would still yield a noticeable improvement especially with scanwallet where the nSmartTime scan would still be unnecessarily performed for every single transaction.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-158872788,158872788,
MarcoFalke,2016-01-06T00:12:07Z,"@bittylicious Needs rebase, if still relevant.\n",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-169175131,169175131,
bittylicious,2016-01-07T10:01:31Z,Let me wait until the first RC release of 0.12 that has #6851 in and then I can do a comparison of zapwallettx times between that and this fix on my huge wallet. Then I'll rebase if appropriate.\n,https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-169614904,169614904,
jonasschnelli,2016-01-20T12:55:33Z,@bittylicious: interested in rebasing and showing out some statistics (compare against 0.12rc1)?\n,https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-173195908,173195908,
bittylicious,2016-03-16T19:28:50Z,"Hi again,\n\nI've done a test with my ~600 MB live wallet against both v0.12 and v0.12 with my patch ported. In a nutshell, the timings are practically identical for a rescan so I think this issue can be closed and not merged. The patch by @luke-jr seems to speed up things sufficiently and this patch seems to many an immeasurable speedup.\n\nHere's the debug output. It's a powerful system, entire ",https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-197503352,197503352,
jonasschnelli,2016-03-17T07:55:29Z,Closing. Superseded by #6851.\n,https://github.com/bitcoin/bitcoin/pull/6850#issuecomment-197745188,197745188,
dcousens,2015-10-18T23:29:03Z,nit: `blockTime`?\n,https://github.com/bitcoin/bitcoin/pull/6850#discussion_r42328438,42328438,src/wallet/wallet.cpp
bittylicious,2015-10-19T08:20:47Z,"dcousens: It's just a line moved from below so I didn't want to change anything. Arguably it could indeed be cased properly, but I think in this case, the fewer changes the better.\n",https://github.com/bitcoin/bitcoin/pull/6850#discussion_r42345438,42345438,src/wallet/wallet.cpp
dcousens,2015-10-20T09:10:25Z,Sure\n,https://github.com/bitcoin/bitcoin/pull/6850#discussion_r42471631,42471631,src/wallet/wallet.cpp
