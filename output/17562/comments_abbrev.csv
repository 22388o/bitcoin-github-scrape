DrahtBot,2019-11-22 23:42:10,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-557734700,557734700,
jnewbery,2019-11-26 14:21:04,Thanks @ariard . I agree with you about the commit message. I've reworded along the lines you suggested.,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-558650608,558650608,
fjahr,2020-01-22 16:57:16,Concept ACK. Change seems fine but will wait with code review until #17477 is finalized and merged.,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-577282655,577282655,
jnewbery,2020-03-13 20:57:19,Closing for now. No need for this to be open while #17477 is not yet merged. Will reopen when #17477 is merged.,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-598908259,598908259,
MarcoFalke,2020-03-19 21:30:01,Run ci,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-601426149,601426149,
MarcoFalke,2020-03-19 21:32:10,"There is a GitHub corruption: ` GitHub payload is missing a merge commit (mergeable_state: ""blocked"", merged: false) `",https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-601426905,601426905,
MarcoFalke,2020-03-19 21:33:15,"Ok, this was stupid. Ci is running now\n\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-601427314,601427314,
jnewbery,2020-03-22 00:58:48,#17477 is now merged. Re-opened this PR and rebased it on master.,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-602129575,602129575,
MarcoFalke,2020-03-31 03:17:36,"@ariard If `m_last_block_processed` is the chain tip, it will *not* empty the scheduler queue, but return early, so it is going to miss tx updates in case of a reorg. Note that `m_last_block_processed` is set on blockConnected/Disconnected.\n\nSee also my second bullet point here: https://github.com/bitcoin/bitcoin/pull/17562#pullrequestreview-379685371",https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-606374138,606374138,
ariard,2020-04-01 01:52:45,"> https://doxygen.bitcoincore.org/class_c_validation_interface.html#a6de358ebc946cbd33ce73eef61993fe5 implies that mempool removal signals are ordered before block connection signals. After the changes in this pull request, this is no longer true. So an operation in a BlockConnected callback, that depends on an operation run in the TransactionRemovedFromMempool, might now fail.\n\nThis PR doesn'",https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-606979540,606979540,
MarcoFalke,2020-04-13 22:02:55,What about the ones in `UpdateMempoolForReorg`?,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-613119632,613119632,
jnewbery,2020-04-17 13:42:30,"Thanks for pointing this out Marco. You're right that in a re-org, this changes the order of notification. If there's a one block diconnect/two block connect reorg, then before this PR:\n\n- Block A1 disconnected (txs added to disconnect pool)\n    * BlockDisconnected notification for A1\n- Block A2 connected (block added to ConnectTrace)\n    * TransactionRemovedFromMempool notifications for",https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-615251297,615251297,
jnewbery,2020-04-17 14:40:38,Opened a PR to simplify ConnectTrace here: #18685,https://github.com/bitcoin/bitcoin/pull/17562#issuecomment-615282952,615282952,
jonatack,2020-01-22 14:10:00,"If you need to retouch this PR: perhaps add code documentation here like that for GetMainSignals().BlockDisconnected (or GetMainSignals().ChainStateFlushed or GetMainSignals().UpdatedBlockTip)\n```\ngit grep -C1 ""0-confirmed or conflicted""\n```",https://github.com/bitcoin/bitcoin/pull/17562#discussion_r369579730,369579730,src/validation.cpp
MarcoFalke,2020-03-23 18:00:54,Note to other reviewers: This comment obviously no longer applies after 312d27b11ceaacd3be75a14907f856352b7dcf48,https://github.com/bitcoin/bitcoin/pull/17562#discussion_r396649060,396649060,src/validation.cpp
MarcoFalke,2020-03-23 19:25:50,"style-nit:\n\n```suggestion\nbool CChainState::ConnectTip(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindexNew, const std::shared_ptr<const CBlock>& pblock, DisconnectedBlockTransactions& disconnectpool)\n```",https://github.com/bitcoin/bitcoin/pull/17562#discussion_r396701146,396701146,src/validation.cpp
MarcoFalke,2020-03-23 19:26:19,The docs are here: https://doxygen.bitcoincore.org/class_c_validation_interface.html#ac63500b25a37b34ad2ec234fde239405 ,https://github.com/bitcoin/bitcoin/pull/17562#discussion_r396701440,396701440,src/validation.cpp
ariard,2020-03-31 01:22:17,nit: define forward progress (chain tip is the valid most-work chain or most-work chain has been found invalid),https://github.com/bitcoin/bitcoin/pull/17562#discussion_r400588010,400588010,src/validation.cpp
ariard,2020-03-31 01:32:01,"Does it change anything for BlockConnected subscribers ? In case of block connections burst or reorgs, instead of receiving the diff at once after full validation, subscribers will now receive block connection after each individual validation in ConnectTip (assuming scheduler catch up). I think it's _slightly_ better because discrepancy is shorter but likely a really marginal case.",https://github.com/bitcoin/bitcoin/pull/17562#discussion_r400590879,400590879,src/validation.cpp
