[
  {
    "sha": "38afff30d730eb4b3f6b0b8838bc27faef5579f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGFmZmYzMGQ3MzBlYjRiM2Y2YjBiODgzOGJjMjdmYWVmNTU3OWY2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-05-03T11:54:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2018-05-03T12:01:52Z"
      },
      "message": "test: Handle timestamps without microseconds in combine_logs\n\nThe log messages before command line arguments have been parsed will\nnot have microseconds. Make parsing robust to lack of microseconds so\nthat sorting is done correctly, and make their timestamps show as\n'.000000' to line up the log.",
      "tree": {
        "sha": "0ed514088699d2d235063e5a6daa88c39bfa696b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ed514088699d2d235063e5a6daa88c39bfa696b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38afff30d730eb4b3f6b0b8838bc27faef5579f6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38afff30d730eb4b3f6b0b8838bc27faef5579f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38afff30d730eb4b3f6b0b8838bc27faef5579f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38afff30d730eb4b3f6b0b8838bc27faef5579f6/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b62b437acd4429ffe016187d2c817fbf73264beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b62b437acd4429ffe016187d2c817fbf73264beb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b62b437acd4429ffe016187d2c817fbf73264beb"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 8,
      "deletions": 6
    },
    "files": [
      {
        "sha": "2c4580b2da15f3f88cdf1f33131d1b17aa2cb255",
        "filename": "test/functional/combine_logs.py",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38afff30d730eb4b3f6b0b8838bc27faef5579f6/test/functional/combine_logs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38afff30d730eb4b3f6b0b8838bc27faef5579f6/test/functional/combine_logs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/combine_logs.py?ref=38afff30d730eb4b3f6b0b8838bc27faef5579f6",
        "patch": "@@ -13,7 +13,7 @@\n import sys\n \n # Matches on the date format at the start of the log event\n-TIMESTAMP_PATTERN = re.compile(r\"^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{6}Z\")\n+TIMESTAMP_PATTERN = re.compile(r\"(^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d{6})?Z) (.*)\")\n \n LogEvent = namedtuple('LogEvent', ['timestamp', 'source', 'event'])\n \n@@ -73,10 +73,12 @@ def get_log_events(source, logfile):\n                 # if this line has a timestamp, it's the start of a new log event.\n                 time_match = TIMESTAMP_PATTERN.match(line)\n                 if time_match:\n-                    if event:\n-                        yield LogEvent(timestamp=timestamp, source=source, event=event.rstrip())\n-                    event = line\n-                    timestamp = time_match.group()\n+                    if event or timestamp:\n+                        yield LogEvent(timestamp=timestamp, source=source, event=event)\n+                    event = time_match.group(3)\n+                    timestamp = time_match.group(1)\n+                    if not time_match.group(2): # add microseconds to timestamps that are missing it\n+                        timestamp = timestamp[0:-1] + '.000000Z'\n                 # if it doesn't have a timestamp, it's a continuation line of the previous log.\n                 else:\n                     event += \"\\n\" + line\n@@ -98,7 +100,7 @@ def print_logs(log_events, color=False, html=False):\n             colors[\"reset\"] = \"\\033[0m\"     # Reset font color\n \n         for event in log_events:\n-            print(\"{0} {1: <5} {2} {3}\".format(colors[event.source.rstrip()], event.source, event.event, colors[\"reset\"]))\n+            print(\"{0} {1: <5} {2} {3} {4}\".format(colors[event.source.rstrip()], event.source, event.timestamp, event.event, colors[\"reset\"]))\n \n     else:\n         try:"
      }
    ]
  }
]