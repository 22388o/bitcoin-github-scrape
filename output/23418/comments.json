[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958112130",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23418#issuecomment-958112130",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23418",
    "id": 958112130,
    "node_id": "IC_kwDOABII5845G6GC",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-02T19:43:43Z",
    "updated_at": "2021-11-02T19:43:43Z",
    "author_association": "MEMBER",
    "body": "Currently a draft, so please only review the concept and approach. I'll rebase this after #23411 (which shares the first commit) and take it out of draft.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958112130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958478249",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23418#issuecomment-958478249",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23418",
    "id": 958478249,
    "node_id": "IC_kwDOABII5845ITep",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T00:06:25Z",
    "updated_at": "2021-11-03T00:06:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23211](https://github.com/bitcoin/bitcoin/pull/23211) (refactor: move `update_*` structs from txmempool.h to .cpp file by theStack)\n* [#22891](https://github.com/bitcoin/bitcoin/pull/22891) (Add fee rate distribution in -getinfo by prayank23)\n* [#21422](https://github.com/bitcoin/bitcoin/pull/21422) (Add feerate histogram to getmempoolinfo by kiminuo)\n* [#21206](https://github.com/bitcoin/bitcoin/pull/21206) (refactor: Make CWalletTx sync state type-safe by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958478249/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958748521",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23418#issuecomment-958748521",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/23418",
    "id": 958748521,
    "node_id": "IC_kwDOABII5845JVdp",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-03T08:44:47Z",
    "updated_at": "2021-11-03T08:44:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--cf906140f33d8803c4a75a2196329ecb-->\n\ud83d\udc19 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/958748521/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742736167",
    "pull_request_review_id": 797606445,
    "id": 742736167,
    "node_id": "PRRC_kwDOABII584sRUEn",
    "diff_hunk": "@@ -22,6 +23,22 @@\n #include <cmath>\n #include <optional>\n \n+template <typename T>\n+static void MaybeAdd(T& mut, const T& apply)",
    "path": "src/txmempool.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "original_commit_id": "e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In this interface the function may or may not add the second argument to the first and it does not signal to the caller which one of the two it did. I find this puzzling. Surely the caller needs to take a different action depending on whether the two numbers can be summed or not? If the caller does not care and takes the same action either way, and the code is still correct, then why bother and not just skip calling `MaybeAdd()` altogether? (if not adding is also ok)\r\n\r\nOr, if this is used in some kind of blurred logic where everything is ok, is it not better for the sum to produce `numeric_limits<T>::max()` in case of an overflow? E.g. if summing `char` `100 + 30` to produce `127` instead of `100`?\r\n\r\nTo me it would be more logical to check for an overflow and take the appropriate action if one would occur, even if that is to `abort()` the program. We have types that are wide enough to ensure that overflow \"never\" occurs, or if it occurs then `abort()`ing is justified. Something like:\r\n\r\n```cpp\r\ntemplate <typename T>\r\nT SumOrDie(T x, T y)\r\n{\r\n    assert(!AddOverflows(x, y));\r\n    assert(!AddUnderflows(x, y));\r\n    return x + y;\r\n}",
    "created_at": "2021-11-04T11:07:58Z",
    "updated_at": "2021-11-04T11:13:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23418#discussion_r742736167",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23418",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742736167"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23418#discussion_r742736167"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23418"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/742736167/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": 26,
    "original_start_line": 26,
    "start_side": "RIGHT",
    "line": 27,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744953272",
    "pull_request_review_id": 800425231,
    "id": 744953272,
    "node_id": "PRRC_kwDOABII584sZxW4",
    "diff_hunk": "@@ -22,6 +23,22 @@\n #include <cmath>\n #include <optional>\n \n+template <typename T>\n+static void MaybeAdd(T& mut, const T& apply)\n+{\n+    if (AdditionOverflow(mut, apply)) {\n+        // Signed integer overflow is UB in theory.\n+        // It is impossible to predict when and if an overflow occurs, since\n+        // the overflow caused by a prioritisetransaction RPC might only be\n+        // later hit when descendant txs are added to the mempool.\n+        // Since it is impossible to predict reliably, leave it up to the user\n+        // to use the RPC endpoint responsibly, considering their mempool\n+        // limits and usage patterns.\n+        return;",
    "path": "src/txmempool.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "original_commit_id": "e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "user": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This ignores the fee delta when it would otherwise overflow, which seems like incorrect behaviour. Shouldn't we just set `mut` to the max value?",
    "created_at": "2021-11-08T17:41:04Z",
    "updated_at": "2021-11-08T17:41:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/23418#discussion_r744953272",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23418",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744953272"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/23418#discussion_r744953272"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/23418"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/744953272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 37,
    "original_line": 37,
    "side": "RIGHT"
  }
]