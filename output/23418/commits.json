[
  {
    "sha": "8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
    "node_id": "C_kwDOABII59oAKDhjNWE2NDllNGQ4YmRkNjkxOTMwOTllZmM4MjM4ZDhlM2JkM2YyMWE",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T08:34:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T14:55:07Z"
      },
      "message": "Move AdditionOverflow to util, Add unit tests",
      "tree": {
        "sha": "22f94d6c24736b6fa295e660f3b27aa45d65939c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22f94d6c24736b6fa295e660f3b27aa45d65939c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e3f7dcaa2f89efff48d299132f4998bf701c264",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e3f7dcaa2f89efff48d299132f4998bf701c264",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e3f7dcaa2f89efff48d299132f4998bf701c264"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 73,
      "deletions": 11
    },
    "files": [
      {
        "sha": "d22ad8d00e59d1ee518b3b64e2bb29381a0fea0c",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -245,6 +245,7 @@ BITCOIN_CORE_H = \\\n   util/macros.h \\\n   util/message.h \\\n   util/moneystr.h \\\n+  util/overflow.h \\\n   util/rbf.h \\\n   util/readwritefile.h \\\n   util/serfloat.h \\"
      },
      {
        "sha": "cfad41659e1b8236c928eaef12c7a2c9a20ee2b5",
        "filename": "src/test/fuzz/addition_overflow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/addition_overflow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/addition_overflow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/addition_overflow.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -5,6 +5,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <util/overflow.h>\n \n #include <cstdint>\n #include <string>"
      },
      {
        "sha": "7f5303b15ebc43bac7117dfd95da09c5eb61b957",
        "filename": "src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/crypto_chacha20_poly1305_aead.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -7,6 +7,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <util/overflow.h>\n \n #include <cassert>\n #include <cstdint>"
      },
      {
        "sha": "6161c090f81f69cef5ff047d7129080344f43a17",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -26,6 +26,7 @@\n #include <univalue.h>\n #include <util/check.h>\n #include <util/moneystr.h>\n+#include <util/overflow.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n #include <util/system.h>"
      },
      {
        "sha": "7ef42b9c2debf64bda14b20571fff3cc40b79fe4",
        "filename": "src/test/fuzz/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/pow.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -9,6 +9,7 @@\n #include <test/fuzz/FuzzedDataProvider.h>\n #include <test/fuzz/fuzz.h>\n #include <test/fuzz/util.h>\n+#include <util/overflow.h>\n \n #include <cstdint>\n #include <optional>"
      },
      {
        "sha": "4467a64487bebb16a7ebc561e45fbe12d8519408",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -6,6 +6,7 @@\n #include <pubkey.h>\n #include <test/fuzz/util.h>\n #include <test/util/script.h>\n+#include <util/overflow.h>\n #include <util/rbf.h>\n #include <util/time.h>\n #include <version.h>"
      },
      {
        "sha": "95e3c9a9ff25596dff7c0957e0a902f4d73c97a6",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -191,17 +191,6 @@ template <typename T>\n     }\n }\n \n-template <class T>\n-[[nodiscard]] bool AdditionOverflow(const T i, const T j) noexcept\n-{\n-    static_assert(std::is_integral<T>::value, \"Integral required.\");\n-    if (std::numeric_limits<T>::is_signed) {\n-        return (i > 0 && j > std::numeric_limits<T>::max() - i) ||\n-               (i < 0 && j < std::numeric_limits<T>::min() - i);\n-    }\n-    return std::numeric_limits<T>::max() - i < j;\n-}\n-\n [[nodiscard]] bool ContainsSpentInput(const CTransaction& tx, const CCoinsViewCache& inputs) noexcept;\n \n /**"
      },
      {
        "sha": "95fade5f63a9bf1c41484c59f3a52ca2bb3a6b26",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 0,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -15,6 +15,7 @@\n #include <util/getuniquepath.h>\n #include <util/message.h> // For MessageSign(), MessageVerify(), MESSAGE_MAGIC\n #include <util/moneystr.h>\n+#include <util/overflow.h>\n #include <util/spanparsing.h>\n #include <util/strencodings.h>\n #include <util/string.h>\n@@ -1452,6 +1453,49 @@ BOOST_AUTO_TEST_CASE(test_IsDigit)\n     BOOST_CHECK_EQUAL(IsDigit(9), false);\n }\n \n+template <class T>\n+static bool TestAdd(T a, T b)\n+{\n+    const bool res_1{AdditionOverflow(a, b)};\n+    const bool res_2{AdditionOverflow(b, a)};\n+    assert(res_1 == res_2);\n+    return res_1;\n+}\n+\n+/* Check for overflow */\n+template <typename T>\n+static bool TestAddMatrixOverflow()\n+{\n+    constexpr T MAXI{std::numeric_limits<T>::max()};\n+    assert(TestAdd(T{1}, MAXI));\n+    assert(TestAdd(MAXI, MAXI));\n+    assert(!TestAdd(T{0}, T{0}));\n+    assert(!TestAdd(T{0}, MAXI));\n+    assert(!TestAdd(T{1}, MAXI - 1));\n+    return true;\n+}\n+\n+/* Check for overflow or underflow */\n+template <typename T>\n+static bool TestAddMatrix()\n+{\n+    TestAddMatrixOverflow<T>();\n+    constexpr T MINI{std::numeric_limits<T>::min()};\n+    constexpr T MAXI{std::numeric_limits<T>::max()};\n+    assert(TestAdd(T{-1}, MINI));\n+    assert(TestAdd(MINI, MINI));\n+    assert(!TestAdd(T{0}, MINI));\n+    assert(!TestAdd(T{-1}, MINI + 1));\n+    assert(!TestAdd(MINI, MAXI));\n+    return true;\n+}\n+\n+BOOST_AUTO_TEST_CASE(util_overflow)\n+{\n+    BOOST_CHECK(TestAddMatrixOverflow<unsigned>());\n+    BOOST_CHECK(TestAddMatrix<signed>());\n+}\n+\n BOOST_AUTO_TEST_CASE(test_ParseInt32)\n {\n     int32_t n;"
      },
      {
        "sha": "df5f91c03cd26b8a2894cd95a4ba8fc4e5bce795",
        "filename": "src/util/overflow.h",
        "status": "added",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/util/overflow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a/src/util/overflow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/overflow.h?ref=8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "patch": "@@ -0,0 +1,23 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_UTIL_OVERFLOW_H\n+#define BITCOIN_UTIL_OVERFLOW_H\n+\n+#include <limits>\n+#include <type_traits>\n+\n+template <class T>\n+[[nodiscard]] bool AdditionOverflow(const T i, const T j) noexcept\n+{\n+    static_assert(std::is_integral<T>::value, \"Integral required.\");\n+    if (std::numeric_limits<T>::is_signed) {\n+        return (i > 0 && j > std::numeric_limits<T>::max() - i) ||\n+               (i < 0 && j < std::numeric_limits<T>::min() - i);\n+    }\n+    return std::numeric_limits<T>::max() - i < j;\n+}\n+\n+\n+#endif // BITCOIN_UTIL_OVERFLOW_H"
      }
    ]
  },
  {
    "sha": "cd6bd2fb89c6f573ad8739526814147b0eb77471",
    "node_id": "C_kwDOABII59oAKGNkNmJkMmZiODljNmY1NzNhZDg3Mzk1MjY4MTQxNDdiMGViNzc0NzE",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T16:31:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T19:08:13Z"
      },
      "message": "doc: Fix typo in getmempoolinfo",
      "tree": {
        "sha": "1a407bba0296ec56d651dacd40aeacc0676b79fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a407bba0296ec56d651dacd40aeacc0676b79fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd6bd2fb89c6f573ad8739526814147b0eb77471",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6bd2fb89c6f573ad8739526814147b0eb77471",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6bd2fb89c6f573ad8739526814147b0eb77471",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6bd2fb89c6f573ad8739526814147b0eb77471/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c5a649e4d8bdd69193099efc8238d8e3bd3f21a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b3648d8f863e99f027ae399592d89b5f67ce24a0",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6bd2fb89c6f573ad8739526814147b0eb77471/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6bd2fb89c6f573ad8739526814147b0eb77471/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=cd6bd2fb89c6f573ad8739526814147b0eb77471",
        "patch": "@@ -1684,7 +1684,7 @@ static RPCHelpMan getmempoolinfo()\n                         {RPCResult::Type::NUM, \"size\", \"Current tx count\"},\n                         {RPCResult::Type::NUM, \"bytes\", \"Sum of all virtual transaction sizes as defined in BIP 141. Differs from actual serialized size because witness data is discounted\"},\n                         {RPCResult::Type::NUM, \"usage\", \"Total memory usage for the mempool\"},\n-                        {RPCResult::Type::STR_AMOUNT, \"total_fee\", \"Total fees for the mempool in \" + CURRENCY_UNIT + \", ignoring modified fees through prioritizetransaction\"},\n+                        {RPCResult::Type::STR_AMOUNT, \"total_fee\", \"Total fees for the mempool in \" + CURRENCY_UNIT + \", ignoring modified fees through prioritisetransaction\"},\n                         {RPCResult::Type::NUM, \"maxmempool\", \"Maximum memory usage for the mempool\"},\n                         {RPCResult::Type::STR_AMOUNT, \"mempoolminfee\", \"Minimum fee rate in \" + CURRENCY_UNIT + \"/kvB for tx to be accepted. Is the maximum of minrelaytxfee and minimum mempool fee\"},\n                         {RPCResult::Type::STR_AMOUNT, \"minrelaytxfee\", \"Current minimum relay fee for transactions\"},"
      }
    ]
  },
  {
    "sha": "f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
    "node_id": "C_kwDOABII59oAKGY0N2E5NWZmMGUzZGY1YTZlY2M4YWI5OWFjYzYzODcyZmY0YzBmOWY",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T14:59:33Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T19:17:28Z"
      },
      "message": "refactor: Replace UpdateFeeDelta by UpdateModifyFee\n\nInstead of passing in the new total delta to the Updater, pass in by how\nmuch the total delta should be modified.\n\nThis is needed for the next commit, but makes sense on its own because\nthe same is done by update_descendant_state and update_ancestor_state.\n\nAlso, Change type of feeDelta from int64_t to CAmount.",
      "tree": {
        "sha": "4ffbcc9f8c2c73bd48d082462cccad7fd4c0b8ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4ffbcc9f8c2c73bd48d082462cccad7fd4c0b8ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd6bd2fb89c6f573ad8739526814147b0eb77471",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6bd2fb89c6f573ad8739526814147b0eb77471",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6bd2fb89c6f573ad8739526814147b0eb77471"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 14,
      "deletions": 14
    },
    "files": [
      {
        "sha": "71e0c6dfe2b2ea12f6631e0f491cd951f37ca121",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
        "patch": "@@ -40,11 +40,11 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n       nModFeesWithAncestors{nFee},\n       nSigOpCostWithAncestors{sigOpCost} {}\n \n-void CTxMemPoolEntry::UpdateFeeDelta(int64_t newFeeDelta)\n+void CTxMemPoolEntry::UpdateModifyFee(CAmount modify_fee)\n {\n-    nModFeesWithDescendants += newFeeDelta - feeDelta;\n-    nModFeesWithAncestors += newFeeDelta - feeDelta;\n-    feeDelta = newFeeDelta;\n+    nModFeesWithDescendants += modify_fee;\n+    nModFeesWithAncestors += modify_fee;\n+    modified_fee += modify_fee;\n }\n \n void CTxMemPoolEntry::UpdateLockPoints(const LockPoints& lp)\n@@ -427,7 +427,7 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n     CAmount delta{0};\n     ApplyDelta(entry.GetTx().GetHash(), delta);\n     if (delta) {\n-            mapTx.modify(newit, update_fee_delta(delta));\n+        mapTx.modify(newit, update_modify_fee(delta));\n     }\n \n     // Update cachedInnerUsage to include contained transaction's usage.\n@@ -882,7 +882,7 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n         delta += nFeeDelta;\n         txiter it = mapTx.find(hash);\n         if (it != mapTx.end()) {\n-            mapTx.modify(it, update_fee_delta(delta));\n+            mapTx.modify(it, update_modify_fee(nFeeDelta));\n             // Now update all ancestors' modified fees with descendants\n             setEntries setAncestors;\n             uint64_t nNoLimit = std::numeric_limits<uint64_t>::max();"
      },
      {
        "sha": "fc4ef8b0af0e6c8395804af0ba00ac4ac985b1fc",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
        "patch": "@@ -95,7 +95,7 @@ class CTxMemPoolEntry\n     const unsigned int entryHeight; //!< Chain height when entering the mempool\n     const bool spendsCoinbase;      //!< keep track of transactions that spend a coinbase\n     const int64_t sigOpCost;        //!< Total sigop cost\n-    int64_t feeDelta{0};            //!< Used for determining the priority of the transaction for mining in a block\n+    CAmount modified_fee{nFee};     //!< Used for determining the priority of the transaction for mining in a block\n     LockPoints lockPoints;     //!< Track the height and time at which tx was final\n \n     // Information about descendants of this transaction that are in the\n@@ -125,7 +125,7 @@ class CTxMemPoolEntry\n     std::chrono::seconds GetTime() const { return std::chrono::seconds{nTime}; }\n     unsigned int GetHeight() const { return entryHeight; }\n     int64_t GetSigOpCost() const { return sigOpCost; }\n-    int64_t GetModifiedFee() const { return nFee + feeDelta; }\n+    CAmount GetModifiedFee() const { return modified_fee; }\n     size_t DynamicMemoryUsage() const { return nUsageSize; }\n     const LockPoints& GetLockPoints() const { return lockPoints; }\n \n@@ -134,8 +134,8 @@ class CTxMemPoolEntry\n     // Adjusts the ancestor state\n     void UpdateAncestorState(int64_t modifySize, CAmount modifyFee, int64_t modifyCount, int64_t modifySigOps);\n     // Updates the fee delta used for mining priority score, and the\n-    // modified fees with descendants.\n-    void UpdateFeeDelta(int64_t feeDelta);\n+    // modified fees with descendants/ancestors.\n+    void UpdateModifyFee(CAmount modify_fee);\n     // Update the LockPoints after a reorg\n     void UpdateLockPoints(const LockPoints& lp);\n \n@@ -191,14 +191,14 @@ struct update_ancestor_state\n         int64_t modifySigOpsCost;\n };\n \n-struct update_fee_delta\n+struct update_modify_fee\n {\n-    explicit update_fee_delta(int64_t _feeDelta) : feeDelta(_feeDelta) { }\n+    explicit update_modify_fee(CAmount modify_fee) : modify_fee{modify_fee} {}\n \n-    void operator() (CTxMemPoolEntry &e) { e.UpdateFeeDelta(feeDelta); }\n+    void operator()(CTxMemPoolEntry& e) { e.UpdateModifyFee(modify_fee); }\n \n private:\n-    int64_t feeDelta;\n+    CAmount modify_fee;\n };\n \n struct update_lock_points"
      }
    ]
  },
  {
    "sha": "e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "node_id": "C_kwDOABII59oAKGU4NTIyZDA4MmU1YjdhYjQyMWU2MmM4ZTc2ZmFiYmVhMjQ1MzFhOGQ",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T19:34:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-11-02T19:34:27Z"
      },
      "message": "Fix signed integer overflow in prioritisetransaction RPC",
      "tree": {
        "sha": "5c654f8b50d3b1e687842ecd19b59a98065a1070",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c654f8b50d3b1e687842ecd19b59a98065a1070"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e8522d082e5b7ab421e62c8e76fabbea24531a8d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e8522d082e5b7ab421e62c8e76fabbea24531a8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e8522d082e5b7ab421e62c8e76fabbea24531a8d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f47a95ff0e3df5a6ecc8ab99acc63872ff4c0f9f"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 25,
      "deletions": 8
    },
    "files": [
      {
        "sha": "e2f912d2beeb4f4340ed231956f9466593ee88e7",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 6,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8522d082e5b7ab421e62c8e76fabbea24531a8d/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8522d082e5b7ab421e62c8e76fabbea24531a8d/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e8522d082e5b7ab421e62c8e76fabbea24531a8d",
        "patch": "@@ -14,6 +14,7 @@\n #include <policy/settings.h>\n #include <reverse_iterator.h>\n #include <util/moneystr.h>\n+#include <util/overflow.h>\n #include <util/system.h>\n #include <util/time.h>\n #include <validation.h>\n@@ -22,6 +23,22 @@\n #include <cmath>\n #include <optional>\n \n+template <typename T>\n+static void MaybeAdd(T& mut, const T& apply)\n+{\n+    if (AdditionOverflow(mut, apply)) {\n+        // Signed integer overflow is UB in theory.\n+        // It is impossible to predict when and if an overflow occurs, since\n+        // the overflow caused by a prioritisetransaction RPC might only be\n+        // later hit when descendant txs are added to the mempool.\n+        // Since it is impossible to predict reliably, leave it up to the user\n+        // to use the RPC endpoint responsibly, considering their mempool\n+        // limits and usage patterns.\n+        return;\n+    }\n+    mut += apply;\n+}\n+\n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n                                  int64_t time, unsigned int entry_height,\n                                  bool spends_coinbase, int64_t sigops_cost, LockPoints lp)\n@@ -42,9 +59,9 @@ CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& tx, CAmount fee,\n \n void CTxMemPoolEntry::UpdateModifyFee(CAmount modify_fee)\n {\n-    nModFeesWithDescendants += modify_fee;\n-    nModFeesWithAncestors += modify_fee;\n-    modified_fee += modify_fee;\n+    MaybeAdd(/*mut=*/nModFeesWithDescendants, /*apply=*/modify_fee);\n+    MaybeAdd(/*mut=*/nModFeesWithAncestors, /*apply=*/modify_fee);\n+    MaybeAdd(/*mut=*/modified_fee, /*apply=*/modify_fee);\n }\n \n void CTxMemPoolEntry::UpdateLockPoints(const LockPoints& lp)\n@@ -376,7 +393,7 @@ void CTxMemPoolEntry::UpdateDescendantState(int64_t modifySize, CAmount modifyFe\n {\n     nSizeWithDescendants += modifySize;\n     assert(int64_t(nSizeWithDescendants) > 0);\n-    nModFeesWithDescendants += modifyFee;\n+    MaybeAdd(/*mut=*/nModFeesWithDescendants, /*apply=*/modifyFee);\n     nCountWithDescendants += modifyCount;\n     assert(int64_t(nCountWithDescendants) > 0);\n }\n@@ -385,7 +402,7 @@ void CTxMemPoolEntry::UpdateAncestorState(int64_t modifySize, CAmount modifyFee,\n {\n     nSizeWithAncestors += modifySize;\n     assert(int64_t(nSizeWithAncestors) > 0);\n-    nModFeesWithAncestors += modifyFee;\n+    MaybeAdd(/*mut=*/nModFeesWithAncestors, /*apply=*/modifyFee);\n     nCountWithAncestors += modifyCount;\n     assert(int64_t(nCountWithAncestors) > 0);\n     nSigOpCostWithAncestors += modifySigOps;\n@@ -879,7 +896,7 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n     {\n         LOCK(cs);\n         CAmount &delta = mapDeltas[hash];\n-        delta += nFeeDelta;\n+        MaybeAdd(/*mut=*/delta, /*apply=*/nFeeDelta);\n         txiter it = mapTx.find(hash);\n         if (it != mapTx.end()) {\n             mapTx.modify(it, update_modify_fee(nFeeDelta));"
      },
      {
        "sha": "3df2aa7843ad9314ff697c29421cdfadb482551f",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e8522d082e5b7ab421e62c8e76fabbea24531a8d/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e8522d082e5b7ab421e62c8e76fabbea24531a8d/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=e8522d082e5b7ab421e62c8e76fabbea24531a8d",
        "patch": "@@ -1,10 +1,10 @@\n # -fsanitize=undefined suppressions\n # =================================\n-# This would be `signed-integer-overflow:CTxMemPool::PrioritiseTransaction`,\n+# The suppressions would be `sanitize-type:ClassName::MethodName`,\n # however due to a bug in clang the symbolizer is disabled and thus no symbol\n # names can be used.\n # See https://github.com/google/sanitizers/issues/1364\n-signed-integer-overflow:txmempool.cpp\n+\n # https://github.com/bitcoin/bitcoin/pull/21798#issuecomment-829180719\n signed-integer-overflow:policy/feerate.cpp\n "
      }
    ]
  }
]