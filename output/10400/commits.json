[
  {
    "sha": "c07475294ae2c60f1dcc394922838b1f1f57b476",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDc0NzUyOTRhZTJjNjBmMWRjYzM5NDkyMjgzOGIxZjFmNTdiNDc2",
    "commit": {
      "author": {
        "name": "Ricardo Velhote",
        "email": "rvelhote@gmail.com",
        "date": "2017-05-14T18:18:26Z"
      },
      "committer": {
        "name": "Ricardo Velhote",
        "email": "rvelhote@gmail.com",
        "date": "2017-06-25T19:25:45Z"
      },
      "message": "[RPC] Add an uptime command that displays the amount of time that bitcoind has been running",
      "tree": {
        "sha": "c319c0083959385a694e7b30ea7f00422c5c82b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c319c0083959385a694e7b30ea7f00422c5c82b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c07475294ae2c60f1dcc394922838b1f1f57b476",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEcBAABCAAGBQJZUA5OAAoJEA0kzbIiRyV2SXAIALg4W1MWw5A7D7erdxbznkRb\ntsx7wGKgcdu6JdwScB1+E2+Q3BDnTVqUGOj9qOda4iyHmX2tMJ0nj7DHyX9uLw2/\noyblW+O3IIYxxAXGVOAw50Y9GQSG4rsN5tyeox3sZq7d7TCD6bOhGzks2uPXTMEA\n0CkDrgfxs0ReiRWoKwdTm8lMHQed3CPJLRjB3rohaHXwCqr0s5PuFJ3BJ3evWWnT\nOFhlXOVEC9isoOzHrzuJ0x+TYC0BNU7GdsyBACUzAKIJGP2RohrDkqf+5i71BWZu\nUKlmWAZF466zLR7dqgKmdbTRstTY7sezfqDqHw966cBTeLU6AHKt6F6tWgvAY2Y=\n=rnn8\n-----END PGP SIGNATURE-----",
        "payload": "tree c319c0083959385a694e7b30ea7f00422c5c82b1\nparent d609fd85ca41c003233d74fbd6c680970ad4a48b\nauthor Ricardo Velhote <rvelhote@gmail.com> 1494785906 +0100\ncommitter Ricardo Velhote <rvelhote@gmail.com> 1498418745 +0100\n\n[RPC] Add an uptime command that displays the amount of time that bitcoind has been running\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07475294ae2c60f1dcc394922838b1f1f57b476",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c07475294ae2c60f1dcc394922838b1f1f57b476",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c07475294ae2c60f1dcc394922838b1f1f57b476/comments",
    "author": {
      "login": "rvelhote",
      "id": 59101,
      "node_id": "MDQ6VXNlcjU5MTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/59101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvelhote",
      "html_url": "https://github.com/rvelhote",
      "followers_url": "https://api.github.com/users/rvelhote/followers",
      "following_url": "https://api.github.com/users/rvelhote/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvelhote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvelhote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvelhote/subscriptions",
      "organizations_url": "https://api.github.com/users/rvelhote/orgs",
      "repos_url": "https://api.github.com/users/rvelhote/repos",
      "events_url": "https://api.github.com/users/rvelhote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvelhote/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rvelhote",
      "id": 59101,
      "node_id": "MDQ6VXNlcjU5MTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/59101?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rvelhote",
      "html_url": "https://github.com/rvelhote",
      "followers_url": "https://api.github.com/users/rvelhote/followers",
      "following_url": "https://api.github.com/users/rvelhote/following{/other_user}",
      "gists_url": "https://api.github.com/users/rvelhote/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rvelhote/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rvelhote/subscriptions",
      "organizations_url": "https://api.github.com/users/rvelhote/orgs",
      "repos_url": "https://api.github.com/users/rvelhote/repos",
      "events_url": "https://api.github.com/users/rvelhote/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rvelhote/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d609fd85ca41c003233d74fbd6c680970ad4a48b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d609fd85ca41c003233d74fbd6c680970ad4a48b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d609fd85ca41c003233d74fbd6c680970ad4a48b"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 63,
      "deletions": 3
    },
    "files": [
      {
        "sha": "33f4535ee22a56e13d063c005eb63ebe7f7cfb3e",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -26,7 +26,6 @@\n \n class CBlockIndex;\n \n-static const int64_t nClientStartupTime = GetTime();\n static int64_t nLastHeaderTipUpdateNotification = 0;\n static int64_t nLastBlockTipUpdateNotification = 0;\n \n@@ -238,7 +237,7 @@ bool ClientModel::isReleaseVersion() const\n \n QString ClientModel::formatClientStartupTime() const\n {\n-    return QDateTime::fromTime_t(nClientStartupTime).toString();\n+    return QDateTime::fromTime_t(GetStartupTime()).toString();\n }\n \n QString ClientModel::dataDir() const"
      },
      {
        "sha": "c320d20453f24adcf4790789cca3af84a2208d6b",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -258,6 +258,22 @@ UniValue stop(const JSONRPCRequest& jsonRequest)\n     return \"Bitcoin server stopping\";\n }\n \n+UniValue uptime(const JSONRPCRequest& jsonRequest)\n+{\n+    if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n+        throw std::runtime_error(\n+                \"uptime\\n\"\n+                        \"\\nReturns the total uptime of the server.\\n\"\n+                        \"\\nResult:\\n\"\n+                        \"ttt        (numeric) The number of seconds that the server has been running\\n\"\n+                        \"\\nExamples:\\n\"\n+                + HelpExampleCli(\"uptime\", \"\")\n+                + HelpExampleRpc(\"uptime\", \"\")\n+        );\n+\n+    return GetTime() - GetStartupTime();\n+}\n+\n /**\n  * Call Table\n  */\n@@ -267,6 +283,7 @@ static const CRPCCommand vRPCCommands[] =\n     /* Overall control/query calls */\n     { \"control\",            \"help\",                   &help,                   true,  {\"command\"}  },\n     { \"control\",            \"stop\",                   &stop,                   true,  {}  },\n+    { \"control\",            \"uptime\",                 &uptime,                 true,  {}  },\n };\n \n CRPCTable::CRPCTable()"
      },
      {
        "sha": "0e1464e590c1b79c8374b3f47f3cbe57b0c4c286",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -84,6 +84,8 @@\n #include <openssl/rand.h>\n #include <openssl/conf.h>\n \n+// Application startup time (used for uptime calculation)\n+const int64_t nStartupTime = GetTime();\n \n const char * const BITCOIN_CONF_FILENAME = \"bitcoin.conf\";\n const char * const BITCOIN_PID_FILENAME = \"bitcoind.pid\";\n@@ -889,3 +891,9 @@ std::string CopyrightHolders(const std::string& strPrefix)\n     }\n     return strCopyrightHolders;\n }\n+\n+// Obtain the application startup time (used for uptime calculation)\n+int64_t GetStartupTime()\n+{\n+    return nStartupTime;\n+}"
      },
      {
        "sha": "824ad51ac48a08d780db2402d0a037a5bf20f0c7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -5,7 +5,7 @@\n \n /**\n  * Server/client environment: argument handling, config file parsing,\n- * logging, thread wrappers\n+ * logging, thread wrappers, startup time\n  */\n #ifndef BITCOIN_UTIL_H\n #define BITCOIN_UTIL_H\n@@ -29,6 +29,9 @@\n \n #include <boost/signals2/signal.hpp>\n \n+// Application startup time (used for uptime calculation)\n+int64_t GetStartupTime();\n+\n static const bool DEFAULT_LOGTIMEMICROS = false;\n static const bool DEFAULT_LOGIPS        = false;\n static const bool DEFAULT_LOGTIMESTAMPS = true;"
      },
      {
        "sha": "4c7eea67d52540a2ca333831c3cf9ceacfc9ec31",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -113,6 +113,7 @@\n     'listsinceblock.py',\n     'p2p-leaktests.py',\n     'wallet-encryption.py',\n+    'uptime.py',\n ]\n \n EXTENDED_SCRIPTS = ["
      },
      {
        "sha": "b20d6f5cb62bfe755905bf89d06720fd67390881",
        "filename": "test/functional/uptime.py",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c07475294ae2c60f1dcc394922838b1f1f57b476/test/functional/uptime.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c07475294ae2c60f1dcc394922838b1f1f57b476/test/functional/uptime.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/uptime.py?ref=c07475294ae2c60f1dcc394922838b1f1f57b476",
        "patch": "@@ -0,0 +1,32 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test the RPC call related to the uptime command.\n+\n+Test corresponds to code in rpc/server.cpp.\n+\"\"\"\n+\n+import time\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+\n+\n+class UptimeTest(BitcoinTestFramework):\n+    def __init__(self):\n+        super().__init__()\n+\n+        self.num_nodes = 1\n+        self.setup_clean_chain = True\n+\n+    def run_test(self):\n+        self._test_uptime()\n+\n+    def _test_uptime(self):\n+        wait_time = 10\n+        self.nodes[0].setmocktime(int(time.time() + wait_time))\n+        assert(self.nodes[0].uptime() >= wait_time)\n+\n+\n+if __name__ == '__main__':\n+    UptimeTest().main()"
      }
    ]
  }
]