[
  {
    "sha": "fa464e8211850eed1b31bf1723c9e02845dacba1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQ2NGU4MjExODUwZWVkMWIzMWJmMTcyM2M5ZTAyODQ1ZGFjYmEx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-05T18:22:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T19:11:50Z"
      },
      "message": "test: Add wallet_balance test for watchonly",
      "tree": {
        "sha": "b310a81b77fab3398f5ea5cbe61b966d1637382f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b310a81b77fab3398f5ea5cbe61b966d1637382f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa464e8211850eed1b31bf1723c9e02845dacba1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj+9Qv/Y/+dValc/4yeWvL1N/gln4fd07qDfmOp2a8U782IcEBNIL32O+av/FhV\nOW0q9qbplDKbzxDPHoQPjy/8wpXajyi+bc2BHOndF9bkMQQ30lATH8x4pnAPR3HJ\nKVIkGoKAry6evm0mFzWai5dZn/cvagwOkdR3Zv+5f0oEmPFDXt0Io/69/zUTDIi4\nyPKX7blg/Ttq6Vb0PIzaiNGvL/SkXb3fnZYw61PLTgEs6OwpL4Yt6Cxe3j9ps7bT\nKRoEcCT5lpiSl3hq3y1mWEE8IO0JH6IUlrKgAQ+Ox1k+gnkCLQUGwMk86vWUaQ7J\nu8Uh1jogjue3iZLy/75RAuEXZYDwuGtWNV92XBHwiw2QiFznd6vaNoStcoIfRH7+\nkgYJelByDnnkvuIEd+Dxqg1Zm2u0m3yWhJVLlFBhi4veKG0rqv2sFTHF30PKW13X\nIJ0pVsN9FuhHqbtX/LKiqUfL2zFpisgcQ9/GPZ5Nnc1oPIFuOyJ6tv2EiyPG7bTR\niJpEMXyB\n=Fj5b\n-----END PGP SIGNATURE-----",
        "payload": "tree b310a81b77fab3398f5ea5cbe61b966d1637382f\nparent c83442e17412b96f00bc29d30763b28184c95f1e\nauthor MarcoFalke <falke.marco@gmail.com> 1554488523 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1556651510 -0400\n\ntest: Add wallet_balance test for watchonly\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa464e8211850eed1b31bf1723c9e02845dacba1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa464e8211850eed1b31bf1723c9e02845dacba1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa464e8211850eed1b31bf1723c9e02845dacba1/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c83442e17412b96f00bc29d30763b28184c95f1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c83442e17412b96f00bc29d30763b28184c95f1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c83442e17412b96f00bc29d30763b28184c95f1e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a0c7aed988a4b2c973ffba32c740fda6b4e43d0f",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa464e8211850eed1b31bf1723c9e02845dacba1/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa464e8211850eed1b31bf1723c9e02845dacba1/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fa464e8211850eed1b31bf1723c9e02845dacba1",
        "patch": "@@ -1,17 +1,17 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet balance RPC methods.\"\"\"\n from decimal import Decimal\n \n+from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE as ADDRESS_WATCHONLY\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n )\n \n-RANDOM_COINBASE_ADDRESS = 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ'\n \n def create_transactions(node, address, amt, fees):\n     # Create and sign raw transactions from node to address for amt.\n@@ -46,16 +46,17 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n+        self.nodes[0].importaddress(ADDRESS_WATCHONLY)\n         # Check that nodes don't own any UTXOs\n         assert_equal(len(self.nodes[0].listunspent()), 0)\n         assert_equal(len(self.nodes[1].listunspent()), 0)\n \n-        self.log.info(\"Mining one block for each node\")\n+        self.log.info(\"Mining blocks ...\")\n \n         self.nodes[0].generate(1)\n         self.sync_all()\n         self.nodes[1].generate(1)\n-        self.nodes[1].generatetoaddress(100, RANDOM_COINBASE_ADDRESS)\n+        self.nodes[1].generatetoaddress(101, ADDRESS_WATCHONLY)\n         self.sync_all()\n \n         assert_equal(self.nodes[0].getbalance(), 50)\n@@ -64,8 +65,10 @@ def run_test(self):\n         self.log.info(\"Test getbalance with different arguments\")\n         assert_equal(self.nodes[0].getbalance(\"*\"), 50)\n         assert_equal(self.nodes[0].getbalance(\"*\", 1), 50)\n-        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 50)\n+        assert_equal(self.nodes[0].getbalance(\"*\", 1, True), 100)\n         assert_equal(self.nodes[0].getbalance(minconf=1), 50)\n+        assert_equal(self.nodes[0].getbalance(minconf=0, include_watchonly=True), 100)\n+        assert_equal(self.nodes[1].getbalance(minconf=0, include_watchonly=True), 50)\n \n         # Send 40 BTC from 0 to 1 and 60 BTC from 1 to 0.\n         txs = create_transactions(self.nodes[0], self.nodes[1].getnewaddress(), 40, [Decimal('0.01')])\n@@ -108,7 +111,7 @@ def run_test(self):\n         assert_equal(self.nodes[1].getwalletinfo()[\"unconfirmed_balance\"], Decimal('0'))  # Doesn't include output of node 0's send since it was spent\n         assert_equal(self.nodes[1].getunconfirmedbalance(), Decimal('0'))\n \n-        self.nodes[1].generatetoaddress(1, RANDOM_COINBASE_ADDRESS)\n+        self.nodes[1].generatetoaddress(1, ADDRESS_WATCHONLY)\n         self.sync_all()\n \n         # balances are correct after the transactions are confirmed\n@@ -118,7 +121,7 @@ def run_test(self):\n         # Send total balance away from node 1\n         txs = create_transactions(self.nodes[1], self.nodes[0].getnewaddress(), Decimal('29.97'), [Decimal('0.01')])\n         self.nodes[1].sendrawtransaction(txs[0]['hex'])\n-        self.nodes[1].generatetoaddress(2, RANDOM_COINBASE_ADDRESS)\n+        self.nodes[1].generatetoaddress(2, ADDRESS_WATCHONLY)\n         self.sync_all()\n \n         # getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago"
      }
    ]
  },
  {
    "sha": "fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE5NTMxNWU2ODZmN2Q3N2U3ZmQ1YzFmZDU0NDg1Y2NjODExNmYw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-05T18:32:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T19:11:51Z"
      },
      "message": "test: Add getunconfirmedbalance test with conflicts",
      "tree": {
        "sha": "798e6ea752b97fa0596edcd56069a683267c4230",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/798e6ea752b97fa0596edcd56069a683267c4230"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUg3swv+JpAmoyMBocl5M1mThjRpJyLoM6QZIGlWcMPSL5gWwMbwEqYFXnrxJEn3\nVeSxhJWtO1O07MrWteCO3ORN09D6qMZf042aj/k+PQhZ3bKcCEK+7LOMgUmSL5/K\ndaAxH5uk5I9zCn7T2W/3E0asX5ZFwnhEOuofLXmO43duS3u/8R+jEF4rLh4fN/gl\nEa+TlqcWU3PO8fmUkBmc6Mvp1ZXHeywPBxqD1ScJgpPcXESBj8LGHamtBgyaH0TP\nc/yH4ojxhtKSlT7vH55arr4cnMP+iYFRRO06NNKSPyiTTwy3nNlYoi279W5P5QEG\ngE9T/wLvKPHFnfp5l/KymZ33HiyAON3Rn1TIZjQM77vY5ukAiHuU5PEKveHTU/MK\nHDEngr3+e0wbzlqbqbmpr0J1c3h6Tkpn5L/h7ziQhtxjgLIC+0iIXFEJkh7O4j2E\nLGulIo0dTrhFZxzYc+WTxb+p/OCG3tIJfPSB3c+VbIMFbVGAJAyPuB7YMeZG4Llm\nYcrabPzP\n=sHUm\n-----END PGP SIGNATURE-----",
        "payload": "tree 798e6ea752b97fa0596edcd56069a683267c4230\nparent fa464e8211850eed1b31bf1723c9e02845dacba1\nauthor MarcoFalke <falke.marco@gmail.com> 1554489171 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1556651511 -0400\n\ntest: Add getunconfirmedbalance test with conflicts\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa195315e686f7d77e7fd5c1fd54485ccc8116f0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa464e8211850eed1b31bf1723c9e02845dacba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa464e8211850eed1b31bf1723c9e02845dacba1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa464e8211850eed1b31bf1723c9e02845dacba1"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 20,
      "deletions": 18
    },
    "files": [
      {
        "sha": "3b2aa132b33a0ec3b39097fa11f36d0104feed43",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 20,
        "deletions": 18,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa195315e686f7d77e7fd5c1fd54485ccc8116f0/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa195315e686f7d77e7fd5c1fd54485ccc8116f0/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
        "patch": "@@ -86,30 +86,32 @@ def run_test(self):\n \n         self.log.info(\"Test getbalance and getunconfirmedbalance with unconfirmed inputs\")\n \n-        # getbalance without any arguments includes unconfirmed transactions, but not untrusted transactions\n-        assert_equal(self.nodes[0].getbalance(), Decimal('9.99'))  # change from node 0's send\n-        assert_equal(self.nodes[1].getbalance(), Decimal('29.99'))  # change from node 1's send\n-        # Same with minconf=0\n-        assert_equal(self.nodes[0].getbalance(minconf=0), Decimal('9.99'))\n-        assert_equal(self.nodes[1].getbalance(minconf=0), Decimal('29.99'))\n-        # getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago\n-        # TODO: fix getbalance tracking of coin spentness depth\n-        assert_equal(self.nodes[0].getbalance(minconf=1), Decimal('0'))\n-        assert_equal(self.nodes[1].getbalance(minconf=1), Decimal('0'))\n-        # getunconfirmedbalance\n-        assert_equal(self.nodes[0].getunconfirmedbalance(), Decimal('60'))  # output of node 1's spend\n-        assert_equal(self.nodes[1].getunconfirmedbalance(), Decimal('0'))  # Doesn't include output of node 0's send since it was spent\n+        def test_balances(*, fee_node_1=0):\n+            # getbalance without any arguments includes unconfirmed transactions, but not untrusted transactions\n+            assert_equal(self.nodes[0].getbalance(), Decimal('9.99'))  # change from node 0's send\n+            assert_equal(self.nodes[1].getbalance(), Decimal('30') - fee_node_1)  # change from node 1's send\n+            # Same with minconf=0\n+            assert_equal(self.nodes[0].getbalance(minconf=0), Decimal('9.99'))\n+            assert_equal(self.nodes[1].getbalance(minconf=0), Decimal('30') - fee_node_1)\n+            # getbalance with a minconf incorrectly excludes coins that have been spent more recently than the minconf blocks ago\n+            # TODO: fix getbalance tracking of coin spentness depth\n+            assert_equal(self.nodes[0].getbalance(minconf=1), Decimal('0'))\n+            assert_equal(self.nodes[1].getbalance(minconf=1), Decimal('0'))\n+            # getunconfirmedbalance\n+            assert_equal(self.nodes[0].getunconfirmedbalance(), Decimal('60'))  # output of node 1's spend\n+            assert_equal(self.nodes[0].getwalletinfo()[\"unconfirmed_balance\"], Decimal('60'))\n+            assert_equal(self.nodes[1].getunconfirmedbalance(), Decimal('0'))  # Doesn't include output of node 0's send since it was spent\n+            assert_equal(self.nodes[1].getwalletinfo()[\"unconfirmed_balance\"], Decimal('0'))\n+\n+        test_balances(fee_node_1=Decimal('0.01'))\n \n         # Node 1 bumps the transaction fee and resends\n         self.nodes[1].sendrawtransaction(txs[1]['hex'])\n+        self.nodes[0].sendrawtransaction(txs[1]['hex'])  # sending on both nodes is faster than waiting for propagation\n         self.sync_all()\n \n         self.log.info(\"Test getbalance and getunconfirmedbalance with conflicted unconfirmed inputs\")\n-\n-        assert_equal(self.nodes[0].getwalletinfo()[\"unconfirmed_balance\"], Decimal('60'))  # output of node 1's send\n-        assert_equal(self.nodes[0].getunconfirmedbalance(), Decimal('60'))\n-        assert_equal(self.nodes[1].getwalletinfo()[\"unconfirmed_balance\"], Decimal('0'))  # Doesn't include output of node 0's send since it was spent\n-        assert_equal(self.nodes[1].getunconfirmedbalance(), Decimal('0'))\n+        test_balances(fee_node_1=Decimal('0.02'))\n \n         self.nodes[1].generatetoaddress(1, ADDRESS_WATCHONLY)\n         self.sync_all()"
      }
    ]
  },
  {
    "sha": "fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQwM2NkMDQ2OWMzNTllMTRhODViYzk4ZWVhOGExZTEzNzliZDNl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-05T19:26:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T19:11:52Z"
      },
      "message": "test: Check that wallet txs not in the mempool are untrusted",
      "tree": {
        "sha": "8b73c8d8333bfedd8c389ff7360b8891316beaf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b73c8d8333bfedd8c389ff7360b8891316beaf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYEACgkQzit1aX5p\npUgn+wwAiwiGax9NpkpfnuP2CMFYIcFxf/73J8KWmBLj18ytFKo5f20s7rj4oTpV\npMaDkqkpVHNf2cXP8HR5QfRwZqrsVTHFjfdawkgLkn1yfg1d9khQk4seytMUcl3C\nELMAS+cWMtvGLVQf0fJw58CPnVSQ2dsd+Wnm/2BjJntPl+MiokZEeY6L5Bl/vRhQ\na/YfRbgucd7VGLPg0bSgNV8CsGlo0N4/FYZR3pIVlNyKv7YuTGy2ErcacaL/uKbk\nrmLLPCywPgix/uWZLsgp9018s00i2roWfyWUqc8LZyGFpEZ5Nfs9QIxWLrkhYxRl\nw9vaiN3J4bkHfQS7pB5+fu7ktM1amHVkf+VS0VxsIqx2gkTXbxwPKMXYRdraGFDM\nA01atrWYwdkqraCGfRhd9VGCKF6gleakp5QaJIR3BQY4z/7dEtd4Tdm/3+4BdeZh\nvTEXH6PIgON98AnYtsXYzPBdek8z0+BhgzkJ2kr10bx9tc6W026uDl7zuBCDkvws\nrwp1Q37s\n=MsNO\n-----END PGP SIGNATURE-----",
        "payload": "tree 8b73c8d8333bfedd8c389ff7360b8891316beaf3\nparent fa195315e686f7d77e7fd5c1fd54485ccc8116f0\nauthor MarcoFalke <falke.marco@gmail.com> 1554492360 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1556651512 -0400\n\ntest: Check that wallet txs not in the mempool are untrusted\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad03cd0469c359e14a85bc98eea8a1e1379bd3e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa195315e686f7d77e7fd5c1fd54485ccc8116f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa195315e686f7d77e7fd5c1fd54485ccc8116f0"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "65a6eda1cb2e7892965504fefdbf2e154a66d9b3",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad03cd0469c359e14a85bc98eea8a1e1379bd3e/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad03cd0469c359e14a85bc98eea8a1e1379bd3e/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
        "patch": "@@ -41,6 +41,10 @@ class WalletTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.setup_clean_chain = True\n+        self.extra_args = [\n+            ['-limitdescendantcount=3'],  # Limit mempool descendants as a hack to have wallet txs rejected from the mempool\n+            [],\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -145,6 +149,13 @@ def test_balances(*, fee_node_1=0):\n         after = self.nodes[1].getunconfirmedbalance()\n         assert_equal(before + Decimal('0.1'), after)\n \n+        # Create 3 more wallet txs, where the last is not accepted to the\n+        # mempool because it is the third descendant of the tx above\n+        for _ in range(3):\n+            txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 99)\n+        assert txid not in self.nodes[0].getrawmempool()\n+        assert_equal(self.nodes[0].getbalance(minconf=0), 0)  # wallet txs not in the mempool are untrusted\n+\n \n if __name__ == '__main__':\n     WalletTest().main()"
      }
    ]
  },
  {
    "sha": "fa79a783d63060dc6a8521c1de58b158979a59e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc5YTc4M2Q2MzA2MGRjNmE4NTIxYzFkZTU4YjE1ODk3OWE1OWU5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-05T22:09:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-30T19:14:41Z"
      },
      "message": "test: Add reorg test to wallet_balance",
      "tree": {
        "sha": "075f9ec76de7d533699d00ee87fdd97a14843ae3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/075f9ec76de7d533699d00ee87fdd97a14843ae3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa79a783d63060dc6a8521c1de58b158979a59e9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjpGgv/RCbplREQGtLzhnFU/lC1NydeuikX4h6bXFgYEQH1VFQkVdMYjKGxXLVN\nkv0+vNrtVJWFu+b2m3xfeR1AkU3Ao0tf2VZrETjpKJEusRsjkyRMJepb6kgUoFie\nMU3igK/RW51JcPdux0ZHpoOnmI9s4wop6h35X2TaiqT1VQEebt3dIgJo4N9YHMfg\n7wY/J3thcoCfgd1ZGoZxng/O1nnPOYxOrUV7720X2dJ2qKfRE/D2r3i8sNZzzQog\nD1kPOSQ1TS+sTCFH9gPVQ7xkhbfYiuyUlc0JFaycjf4sJhKr1/zP60oSsJekgMux\n2VUtcCfXeBX2tLg9HY2MVO5yh46Qi1jV8J71hioOTk7ebQcI8ySUENLk9uOFF4s6\nnq2SxMBYexubnbMWrmod4RXzSH7PoIQ60nSozS8x/l18BgYK5e1AKHH7tiqMslsS\nZXZjYTst/Gvpu3moCVP1k2vjkFLTxTH0lPANZLs7JvCSQMyMBufhgCe/S2Md2rhI\nxJPaaX4d\n=+h02\n-----END PGP SIGNATURE-----",
        "payload": "tree 075f9ec76de7d533699d00ee87fdd97a14843ae3\nparent fad03cd0469c359e14a85bc98eea8a1e1379bd3e\nauthor MarcoFalke <falke.marco@gmail.com> 1554502142 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1556651681 -0400\n\ntest: Add reorg test to wallet_balance\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa79a783d63060dc6a8521c1de58b158979a59e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa79a783d63060dc6a8521c1de58b158979a59e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa79a783d63060dc6a8521c1de58b158979a59e9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad03cd0469c359e14a85bc98eea8a1e1379bd3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad03cd0469c359e14a85bc98eea8a1e1379bd3e"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 44,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c02d7422b9421b5b90a51660012d496652b237c1",
        "filename": "test/functional/wallet_balance.py",
        "status": "modified",
        "additions": 44,
        "deletions": 2,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa79a783d63060dc6a8521c1de58b158979a59e9/test/functional/wallet_balance.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa79a783d63060dc6a8521c1de58b158979a59e9/test/functional/wallet_balance.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_balance.py?ref=fa79a783d63060dc6a8521c1de58b158979a59e9",
        "patch": "@@ -4,35 +4,39 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the wallet balance RPC methods.\"\"\"\n from decimal import Decimal\n+import struct\n \n from test_framework.address import ADDRESS_BCRT1_UNSPENDABLE as ADDRESS_WATCHONLY\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n     assert_raises_rpc_error,\n+    connect_nodes_bi,\n+    sync_blocks,\n )\n \n \n def create_transactions(node, address, amt, fees):\n     # Create and sign raw transactions from node to address for amt.\n     # Creates a transaction for each fee and returns an array\n     # of the raw transactions.\n-    utxos = node.listunspent(0)\n+    utxos = [u for u in node.listunspent(0) if u['spendable']]\n \n     # Create transactions\n     inputs = []\n     ins_total = 0\n     for utxo in utxos:\n         inputs.append({\"txid\": utxo[\"txid\"], \"vout\": utxo[\"vout\"]})\n         ins_total += utxo['amount']\n-        if ins_total > amt:\n+        if ins_total + max(fees) > amt:\n             break\n \n     txs = []\n     for fee in fees:\n         outputs = {address: amt, node.getrawchangeaddress(): ins_total - amt - fee}\n         raw_tx = node.createrawtransaction(inputs, outputs, 0, True)\n         raw_tx = node.signrawtransactionwithwallet(raw_tx)\n+        assert_equal(raw_tx['complete'], True)\n         txs.append(raw_tx)\n \n     return txs\n@@ -152,9 +156,47 @@ def test_balances(*, fee_node_1=0):\n         # Create 3 more wallet txs, where the last is not accepted to the\n         # mempool because it is the third descendant of the tx above\n         for _ in range(3):\n+            # Set amount high enough such that all coins are spent by each tx\n             txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 99)\n+\n+        self.log.info('Check that wallet txs not in the mempool are untrusted')\n         assert txid not in self.nodes[0].getrawmempool()\n+        assert_equal(self.nodes[0].gettransaction(txid)['trusted'], False)\n+        assert_equal(self.nodes[0].getbalance(minconf=0), 0)\n+\n+        self.log.info(\"Test replacement and reorg of non-mempool tx\")\n+        tx_orig = self.nodes[0].gettransaction(txid)['hex']\n+        # Increase fee by 1 coin\n+        tx_replace = tx_orig.replace(\n+            struct.pack(\"<q\", 99 * 10**8).hex(),\n+            struct.pack(\"<q\", 98 * 10**8).hex(),\n+        )\n+        tx_replace = self.nodes[0].signrawtransactionwithwallet(tx_replace)['hex']\n+        # Total balance is given by the sum of outputs of the tx\n+        total_amount = sum([o['value'] for o in self.nodes[0].decoderawtransaction(tx_replace)['vout']])\n+        self.sync_all()\n+        self.nodes[1].sendrawtransaction(hexstring=tx_replace, maxfeerate=0)\n+\n+        # Now confirm tx_replace\n+        block_reorg = self.nodes[1].generatetoaddress(1, ADDRESS_WATCHONLY)[0]\n+        self.sync_all()\n+        assert_equal(self.nodes[0].getbalance(minconf=0), total_amount)\n+\n+        self.log.info('Put txs back into mempool of node 1 (not node 0)')\n+        self.nodes[0].invalidateblock(block_reorg)\n+        self.nodes[1].invalidateblock(block_reorg)\n         assert_equal(self.nodes[0].getbalance(minconf=0), 0)  # wallet txs not in the mempool are untrusted\n+        self.nodes[0].generatetoaddress(1, ADDRESS_WATCHONLY)\n+        assert_equal(self.nodes[0].getbalance(minconf=0), 0)  # wallet txs not in the mempool are untrusted\n+\n+        # Now confirm tx_orig\n+        self.restart_node(1, ['-persistmempool=0'])\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        sync_blocks(self.nodes)\n+        self.nodes[1].sendrawtransaction(tx_orig)\n+        self.nodes[1].generatetoaddress(1, ADDRESS_WATCHONLY)\n+        self.sync_all()\n+        assert_equal(self.nodes[0].getbalance(minconf=0), total_amount + 1)  # The reorg recovered our fee of 1 coin\n \n \n if __name__ == '__main__':"
      }
    ]
  }
]