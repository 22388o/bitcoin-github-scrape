[
  {
    "sha": "663d11964f1d42600da9f792b98b704c2e38b46e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NjNkMTE5NjRmMWQ0MjYwMGRhOWY3OTJiOThiNzA0YzJlMzhiNDZl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-30T19:22:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2015-10-30T19:23:07Z"
      },
      "message": "Remove BIP30 enforcement, as it is impossible to trigger since BIP34\n\nBIP34 guarantees that every coinbase transaction (and thus every transaction\nderived from it) has a unique txid, assuming no double-SHA256 collisions.\n\nAlex Morcos discovered that BIP30 verification always requires access to the\ndatabase underlying the chainstate cache, as we don't do negative caching.\nAs BIP30 is the only thing that would need such a negative cache in consensus\nlogic, better to just remove it.",
      "tree": {
        "sha": "7a74d9da0b29fd0d91c66411a0d2194dd9c49f3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7a74d9da0b29fd0d91c66411a0d2194dd9c49f3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/663d11964f1d42600da9f792b98b704c2e38b46e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663d11964f1d42600da9f792b98b704c2e38b46e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/663d11964f1d42600da9f792b98b704c2e38b46e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/663d11964f1d42600da9f792b98b704c2e38b46e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/725539ea03769416d3502feeb4dfcbec3fbb7ae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/725539ea03769416d3502feeb4dfcbec3fbb7ae0"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 0,
      "deletions": 24
    },
    "files": [
      {
        "sha": "6f0b57289f3af089323957c4c47aebe2500f2225",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/663d11964f1d42600da9f792b98b704c2e38b46e/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/663d11964f1d42600da9f792b98b704c2e38b46e/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=663d11964f1d42600da9f792b98b704c2e38b46e",
        "patch": "@@ -1746,30 +1746,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         }\n     }\n \n-    // Do not allow blocks that contain transactions which 'overwrite' older transactions,\n-    // unless those are already completely spent.\n-    // If such overwrites are allowed, coinbases and transactions depending upon those\n-    // can be duplicated to remove the ability to spend the first instance -- even after\n-    // being sent to another address.\n-    // See BIP30 and http://r6.ca/blog/20120206T005236Z.html for more information.\n-    // This logic is not necessary for memory pool transactions, as AcceptToMemoryPool\n-    // already refuses previously-known transaction ids entirely.\n-    // This rule was originally applied to all blocks with a timestamp after March 15, 2012, 0:00 UTC.\n-    // Now that the whole chain is irreversibly beyond that time it is applied to all blocks except the\n-    // two in the chain that violate it. This prevents exploiting the issue against nodes during their\n-    // initial block download.\n-    bool fEnforceBIP30 = (!pindex->phashBlock) || // Enforce on CreateNewBlock invocations which don't have a hash.\n-                          !((pindex->nHeight==91842 && pindex->GetBlockHash() == uint256S(\"0x00000000000a4d0a398161ffc163c503763b1f4360639393e0e4c8e300e0caec\")) ||\n-                           (pindex->nHeight==91880 && pindex->GetBlockHash() == uint256S(\"0x00000000000743f190a18c5577a3c2d2a1f610ae9601ac046a38084ccb7cd721\")));\n-    if (fEnforceBIP30) {\n-        BOOST_FOREACH(const CTransaction& tx, block.vtx) {\n-            const CCoins* coins = view.AccessCoins(tx.GetHash());\n-            if (coins && !coins->IsPruned())\n-                return state.DoS(100, error(\"ConnectBlock(): tried to overwrite transaction\"),\n-                                 REJECT_INVALID, \"bad-txns-BIP30\");\n-        }\n-    }\n-\n     // BIP16 didn't become active until Apr 1 2012\n     int64_t nBIP16SwitchTime = 1333238400;\n     bool fStrictPayToScriptHash = (pindex->GetBlockTime() >= nBIP16SwitchTime);"
      }
    ]
  }
]