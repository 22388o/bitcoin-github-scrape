practicalswift,2020-02-18 07:09:43,"Nice find and welcome as a contributor!\n\nConcept ACK\n\nIn addition to `HTTP_INTERNAL` it seems like we have the same issue also for `HTTP_BADMETHOD` and `HTTP_NOTFOUND`?\n\n```sh\n$ for S in $(git grep '>WriteReply(' | tr ""(),"" ""\n"" | egrep ^HTTP_ | sort -u); do\n      echo ""=== $S""\n      grep ""$S"" src/rpc/protocol.h\n      echo\n  done\n=== HTTP_BADMETHOD\n\n=== HTTP_BAD_METHOD",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587313899,587313899,
toxeus,2020-02-18 07:13:52,Thanks! I've stumbled upon this while debugging a client that exceeds the HTTP worker queue. I'll cleanup the remaining status codes.,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587315046,587315046,
practicalswift,2020-02-18 11:27:55,"@toxeus To get some structure in the handling of status code we might want to consider changing from `enum HTTPStatusCode` to `enum class HTTPStatusCode`?\n\nSomething along the lines of ...\n\n<details><summary>Click for patch</summary>\n\n```diff\ndiff --git a/src/bitcoin-cli.cpp b/src/bitcoin-cli.cpp\nindex c085095a2..b9eeff819 100644\n--- a/src/bitcoin-cli.cpp\n+++ b/src/bitcoin-cli.",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587415682,587415682,
toxeus,2020-02-18 11:36:10,@practicalswift your suggestion increases type safety therefore I like it. But the suggested change is logically independent from this change therefore I'd prefer to make a follow up PR for that.,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587418648,587418648,
practicalswift,2020-02-18 12:48:51,ACK aff2748f8aee72f03b5fb6f6f97f0d0f66391755 -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-587443828,587443828,
luke-jr,2020-02-19 03:47:42,"I'd rather we go the opposite direction, and adopt libevent's macros (eliminating our own).\n\nIs there a reason to have our own duplicated macros? Or are they just holdovers from the pre-libevent implementation?",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588021176,588021176,
toxeus,2020-02-19 05:03:03,@laanwj added the enum in 2012 (285746d3dbed46d0e444d7a907c08453d36d99cd) which is before the introduction of evhttpd (40b556d3742a1f65d67e2d4c760d0b13fe8be5b7). I'm fine with eliminating the enums and using the libevent macros. Maybe @laanwj has an opinion on this?,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588037155,588037155,
jgarzik,2020-02-19 06:08:26,"In general, enums confer more type information, passing more information further down into the compile pipeline, vs macros.   All other things being equal, that lends weight to a enums>macros preference, for greater -O0 debug-ability -- symbol names in gdb, vs numbers -- as well as greater type clarity & safety.",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588052836,588052836,
practicalswift,2020-02-19 13:15:52,"Agree with @jgarzik.\n\nThis is what the C++ Core Guidelines has to say:\n\n* [`enum class` is strictly better than plain `enum`](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#enum3-prefer-class-enums-over-plain-enums)\n* [Plain `enum` is strictly better than macro (`#define`)](https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#enum1-pr",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-588223444,588223444,
kristapsk,2020-02-21 00:34:42,"If we go with `enum` over libevent macros, why not also change type to `HTTPStatusCode` everywhere (for example, line `int nStatus = HTTP_INTERNAL_SERVER_ERROR;` in `src/httprpc.cpp`)?",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589441233,589441233,
toxeus,2020-02-21 07:50:57,@promag your statement is self-contradictory. The enum in discussion is in `#include <rpc/protocol.h>`.,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589539354,589539354,
promag,2020-02-21 08:00:31,"@toxeus yes I know, I think it should be in `src/httpserver.h`, where it's needed by `WriteReply()`. Also sounds weird including a rpc header in httpserver code, should be the other way around.",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589542197,589542197,
toxeus,2020-02-21 08:01:51,Makes sense. Thanks for clarifying :+1: ,https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589542597,589542597,
luke-jr,2020-02-21 13:01:58,"HTTP status codes aren't really an enum, though...",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-589643810,589643810,
toxeus,2020-02-27 08:38:31,"> HTTP status codes aren't really an enum, though...\n\nenums are used often beyond the strict semantics you're referring to. They group constants together that belong together. enum classes even add type safety. The fact that the HTTP status codes are defined in an enum since years and nobody seemed to care supports my argument I think.\n\nStill, I'm also not happy about duplicating here some",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-591849227,591849227,
jgarzik,2020-02-27 16:16:48,"> HTTP status codes aren't really an enum, though...\n\nYou're right.   They are a protocol & specification from RFC 2616 and others, which can be implemented as a macro, enum, JSON database, or some other method which best suits the situation.",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-592044555,592044555,
laanwj,2020-03-02 16:07:27,"ACK aff2748f8aee72f03b5fb6f6f97f0d0f66391755\nThis slightly improves consistency. I do not think converting status codes to an `enum class` is necessary. As said by others they're well-standardized numbers, not arbitrary enum items.",https://github.com/bitcoin/bitcoin/pull/18168#issuecomment-593478837,593478837,
