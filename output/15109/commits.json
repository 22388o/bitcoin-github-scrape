[
  {
    "sha": "fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI1MTBkNWMxY2RmOWMyY2Q1Y2M5ODg3MzAyY2VkNDM3OGM3MjAy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-05T11:02:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-01-05T15:16:37Z"
      },
      "message": "Use C++11 default member initializers",
      "tree": {
        "sha": "616492efb0b268d8e37ba57bda813aaacc66c975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/616492efb0b268d8e37ba57bda813aaacc66c975"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcMMpVAAoJEM4rdWl+aaVIOoAMAJJVtfm2N4N1kpJO27TtY9KB\nT+LzZGkH1JEWWGnMKCduh8GMCpeCz4Ny6aC3tDP00FJw23elGvddMsFpqIlB7159\nCucsqB1+XMK3KMDm7naCMUd5dUXwx8wwDP08JqBbWwGQ9qjoAeS7aW/pHnjQQyJ4\njLjSB7XjeZqnTbsCkRTAvPNObtqTgUDsSx9vxi+BNp5wrjq30AIzCpDriOcPy0wi\nGhj4RCtZh1SfKB+FWgOd2Xf65uiZysY+dxgq6PZNm7Zp6dUVrBVLrXB3GveCteR/\nV4Bv6r2cN6jA9C40rvtvEz/5pAyYLk0Xs3X7QJfKeubp9UiZeuKSQ3J1l2aszJrv\nL7N3gaONeQS2sxRddYevFkzunJ4NPj5qWbljtry5faVuPpAsCuL6X/07WNvufxXK\nVCx55BiLVr79i9Eh0R2Oiy0NADodT10KB+s/IYXU5cM6fnSHBRoN1HcROkLwqzFz\nBAEjtjdNNEWLpLFZt2SnK0KhA8t07GHNJxFDW9LSUw==\n=KlCU\n-----END PGP SIGNATURE-----",
        "payload": "tree 616492efb0b268d8e37ba57bda813aaacc66c975\nparent f7e182a973ed66b4c11dc6239e57016655503b4c\nauthor MarcoFalke <falke.marco@gmail.com> 1546686132 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1546701397 +0100\n\nUse C++11 default member initializers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f7e182a973ed66b4c11dc6239e57016655503b4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f7e182a973ed66b4c11dc6239e57016655503b4c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f7e182a973ed66b4c11dc6239e57016655503b4c"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 35,
      "deletions": 82
    },
    "files": [
      {
        "sha": "003bd059f8a635eb2726e4cbf8ff52acf1ce914f",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 7,
        "deletions": 23,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -23,33 +23,31 @@\n  */\n class CAddrInfo : public CAddress\n {\n-\n-\n public:\n     //! last try whatsoever by us (memory only)\n-    int64_t nLastTry;\n+    int64_t nLastTry{0};\n \n     //! last counted attempt (memory only)\n-    int64_t nLastCountAttempt;\n+    int64_t nLastCountAttempt{0};\n \n private:\n     //! where knowledge about this address first came from\n     CNetAddr source;\n \n     //! last successful connection by us\n-    int64_t nLastSuccess;\n+    int64_t nLastSuccess{0};\n \n     //! connection attempts since last successful attempt\n-    int nAttempts;\n+    int nAttempts{0};\n \n     //! reference count in new sets (memory only)\n-    int nRefCount;\n+    int nRefCount{0};\n \n     //! in tried set? (memory only)\n-    bool fInTried;\n+    bool fInTried{false};\n \n     //! position in vRandom\n-    int nRandomPos;\n+    int nRandomPos{-1};\n \n     friend class CAddrMan;\n \n@@ -65,25 +63,12 @@ class CAddrInfo : public CAddress\n         READWRITE(nAttempts);\n     }\n \n-    void Init()\n-    {\n-        nLastSuccess = 0;\n-        nLastTry = 0;\n-        nLastCountAttempt = 0;\n-        nAttempts = 0;\n-        nRefCount = 0;\n-        fInTried = false;\n-        nRandomPos = -1;\n-    }\n-\n     CAddrInfo(const CAddress &addrIn, const CNetAddr &addrSource) : CAddress(addrIn), source(addrSource)\n     {\n-        Init();\n     }\n \n     CAddrInfo() : CAddress(), source()\n     {\n-        Init();\n     }\n \n     //! Calculate in which \"tried\" bucket this entry belongs\n@@ -106,7 +91,6 @@ class CAddrInfo : public CAddress\n \n     //! Calculate the relative chance this entry should be given when selecting nodes to connect to\n     double GetChance(int64_t nNow = GetAdjustedTime()) const;\n-\n };\n \n /** Stochastic address manager"
      },
      {
        "sha": "ca60ea43a779a49727026f319caa4b18ec5b7938",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -124,7 +124,6 @@ class WorkQueue\n \n struct HTTPPathHandler\n {\n-    HTTPPathHandler() {}\n     HTTPPathHandler(std::string _prefix, bool _exactMatch, HTTPRequestHandler _handler):\n         prefix(_prefix), exactMatch(_exactMatch), handler(_handler)\n     {"
      },
      {
        "sha": "65c681c317e0034016327384ece59d40bb8f60cf",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -2317,14 +2317,6 @@ void CConnman::SetNetworkActive(bool active)\n \n CConnman::CConnman(uint64_t nSeed0In, uint64_t nSeed1In) : nSeed0(nSeed0In), nSeed1(nSeed1In)\n {\n-    fNetworkActive = true;\n-    setBannedIsDirty = false;\n-    fAddressesInitialized = false;\n-    nLastNodeId = 0;\n-    nPrevNodeCount = 0;\n-    nSendBufferMaxSize = 0;\n-    nReceiveFloodSize = 0;\n-    flagInterruptMsgProc = false;\n     SetTryNewOutboundPeer(false);\n \n     Options connOptions;"
      },
      {
        "sha": "b8d46017feba59dca3c21472f60311cf62c57dcf",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -404,15 +404,15 @@ class CConnman\n     // whitelisted (as well as those connecting to whitelisted binds).\n     std::vector<CSubNet> vWhitelistedRange;\n \n-    unsigned int nSendBufferMaxSize;\n-    unsigned int nReceiveFloodSize;\n+    unsigned int nSendBufferMaxSize{0};\n+    unsigned int nReceiveFloodSize{0};\n \n     std::vector<ListenSocket> vhListenSocket;\n-    std::atomic<bool> fNetworkActive;\n+    std::atomic<bool> fNetworkActive{true};\n     banmap_t setBanned GUARDED_BY(cs_setBanned);\n     CCriticalSection cs_setBanned;\n-    bool setBannedIsDirty GUARDED_BY(cs_setBanned);\n-    bool fAddressesInitialized;\n+    bool setBannedIsDirty GUARDED_BY(cs_setBanned){false};\n+    bool fAddressesInitialized{false};\n     CAddrMan addrman;\n     std::deque<std::string> vOneShots GUARDED_BY(cs_vOneShots);\n     CCriticalSection cs_vOneShots;\n@@ -421,8 +421,8 @@ class CConnman\n     std::vector<CNode*> vNodes;\n     std::list<CNode*> vNodesDisconnected;\n     mutable CCriticalSection cs_vNodes;\n-    std::atomic<NodeId> nLastNodeId;\n-    unsigned int nPrevNodeCount;\n+    std::atomic<NodeId> nLastNodeId{0};\n+    unsigned int nPrevNodeCount{0};\n \n     /** Services this instance offers */\n     ServiceFlags nLocalServices;\n@@ -446,7 +446,7 @@ class CConnman\n \n     std::condition_variable condMsgProc;\n     Mutex mutexMsgProc;\n-    std::atomic<bool> flagInterruptMsgProc;\n+    std::atomic<bool> flagInterruptMsgProc{false};\n \n     CThreadInterrupt interruptNet;\n "
      },
      {
        "sha": "a790a0690699778523238c15788bbed6c6fd6f0b",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -402,7 +402,6 @@ class CInv\n     std::string GetCommand() const;\n     std::string ToString() const;\n \n-    // TODO: make private (improves encapsulation)\n public:\n     int type;\n     uint256 hash;"
      },
      {
        "sha": "713db595d5269d43a3eb2b5306534a52ef7b4fb4",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -40,8 +40,8 @@ class BanTablePriv\n public:\n     /** Local cache of peer information */\n     QList<CCombinedBan> cachedBanlist;\n-    /** Column to sort nodes by */\n-    int sortColumn;\n+    /** Column to sort nodes by (default to unsorted) */\n+    int sortColumn{-1};\n     /** Order (ascending or descending) to sort nodes by */\n     Qt::SortOrder sortOrder;\n \n@@ -87,8 +87,6 @@ BanTableModel::BanTableModel(interfaces::Node& node, ClientModel *parent) :\n {\n     columns << tr(\"IP/Netmask\") << tr(\"Banned Until\");\n     priv.reset(new BanTablePriv());\n-    // default to unsorted\n-    priv->sortColumn = -1;\n \n     // load initial data\n     refresh();"
      },
      {
        "sha": "e2e78fe81bed1d4bd0ce71a80b0f2226b7728639",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -49,8 +49,8 @@ class PeerTablePriv\n public:\n     /** Local cache of peer information */\n     QList<CNodeCombinedStats> cachedNodeStats;\n-    /** Column to sort nodes by */\n-    int sortColumn;\n+    /** Column to sort nodes by (default to unsorted) */\n+    int sortColumn{-1};\n     /** Order (ascending or descending) to sort nodes by */\n     Qt::SortOrder sortOrder;\n     /** Index of rows by node ID */\n@@ -108,8 +108,6 @@ PeerTableModel::PeerTableModel(interfaces::Node& node, ClientModel *parent) :\n {\n     columns << tr(\"NodeId\") << tr(\"Node/Service\") << tr(\"Ping\") << tr(\"Sent\") << tr(\"Received\") << tr(\"User Agent\");\n     priv.reset(new PeerTablePriv());\n-    // default to unsorted\n-    priv->sortColumn = -1;\n \n     // set up timer for auto refresh\n     timer = new QTimer(this);"
      },
      {
        "sha": "aa746017f3fd3401916094c855d37c4a379dda98",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -15,8 +15,6 @@\n RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     QAbstractTableModel(parent), walletModel(parent)\n {\n-    nReceiveRequestsMaxId = 0;\n-\n     // Load entries from wallet\n     std::vector<std::string> vReceiveRequests;\n     parent->loadReceiveRequests(vReceiveRequests);"
      },
      {
        "sha": "8a1140e952106939e4e2413940a668fe75eeec13",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -94,7 +94,7 @@ public Q_SLOTS:\n     WalletModel *walletModel;\n     QStringList columns;\n     QList<RecentRequestEntry> list;\n-    int64_t nReceiveRequestsMaxId;\n+    int64_t nReceiveRequestsMaxId{0};\n \n     /** Updates the column title to \"Amount (DisplayUnit)\" and emits headerDataChanged() signal for table headers to react. */\n     void updateAmountColumnTitle();"
      },
      {
        "sha": "9cd0fed7db91160dc87b529ee2fdc382f1de14c7",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -40,8 +40,6 @@ WalletModel::WalletModel(std::unique_ptr<interfaces::Wallet> wallet, interfaces:\n     cachedNumBlocks(0)\n {\n     fHaveWatchOnly = m_wallet->haveWatchOnly();\n-    fForceCheckBalanceChanged = false;\n-\n     addressTableModel = new AddressTableModel(this);\n     transactionTableModel = new TransactionTableModel(platformStyle, this);\n     recentRequestsTableModel = new RecentRequestsTableModel(this);"
      },
      {
        "sha": "844d9afc3bc8010db22e429c35bae74a4d030817",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -234,7 +234,7 @@ class WalletModel : public QObject\n     interfaces::Node& m_node;\n \n     bool fHaveWatchOnly;\n-    bool fForceCheckBalanceChanged;\n+    bool fForceCheckBalanceChanged{false};\n \n     // Wallet has an options model for wallet-specific options\n     // (transaction fee, for example)"
      },
      {
        "sha": "22347fbc578481ae676637ec4359b94f44f701bb",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -12,13 +12,9 @@\n \n class CAddrManTest : public CAddrMan\n {\n-    uint64_t state;\n-\n public:\n     explicit CAddrManTest(bool makeDeterministic = true)\n     {\n-        state = 1;\n-\n         if (makeDeterministic) {\n             //  Set addrman addr placement to be deterministic.\n             MakeDeterministic();"
      },
      {
        "sha": "38397a3940e5c6dbf41262e3bb6d7ba5bb553e6b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -1020,15 +1020,12 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n \n struct tallyitem\n {\n-    CAmount nAmount;\n-    int nConf;\n+    CAmount nAmount{0};\n+    int nConf{std::numeric_limits<int>::max()};\n     std::vector<uint256> txids;\n-    bool fIsWatchonly;\n+    bool fIsWatchonly{false};\n     tallyitem()\n     {\n-        nAmount = 0;\n-        nConf = std::numeric_limits<int>::max();\n-        fIsWatchonly = false;\n     }\n };\n "
      },
      {
        "sha": "3a3ec43c9b45d183fb654552325850066f2b432b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -1178,18 +1178,16 @@ class CReserveKey final : public CReserveScript\n {\n protected:\n     CWallet* pwallet;\n-    int64_t nIndex;\n+    int64_t nIndex{-1};\n     CPubKey vchPubKey;\n-    bool fInternal;\n+    bool fInternal{false};\n+\n public:\n     explicit CReserveKey(CWallet* pwalletIn)\n     {\n-        nIndex = -1;\n         pwallet = pwalletIn;\n-        fInternal = false;\n     }\n \n-    CReserveKey() = default;\n     CReserveKey(const CReserveKey&) = delete;\n     CReserveKey& operator=(const CReserveKey&) = delete;\n "
      },
      {
        "sha": "6e037808e313734b410e74a6ba0b73650b17ff49",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 12,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2510d5c1cdf9c2cd5cc9887302ced4378c7202/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=fa2510d5c1cdf9c2cd5cc9887302ced4378c7202",
        "patch": "@@ -153,21 +153,17 @@ bool WalletBatch::WriteMinVersion(int nVersion)\n \n class CWalletScanState {\n public:\n-    unsigned int nKeys;\n-    unsigned int nCKeys;\n-    unsigned int nWatchKeys;\n-    unsigned int nKeyMeta;\n-    unsigned int m_unknown_records;\n-    bool fIsEncrypted;\n-    bool fAnyUnordered;\n-    int nFileVersion;\n+    unsigned int nKeys{0};\n+    unsigned int nCKeys{0};\n+    unsigned int nWatchKeys{0};\n+    unsigned int nKeyMeta{0};\n+    unsigned int m_unknown_records{0};\n+    bool fIsEncrypted{false};\n+    bool fAnyUnordered{false};\n+    int nFileVersion{0};\n     std::vector<uint256> vWalletUpgrade;\n \n     CWalletScanState() {\n-        nKeys = nCKeys = nWatchKeys = nKeyMeta = m_unknown_records = 0;\n-        fIsEncrypted = false;\n-        fAnyUnordered = false;\n-        nFileVersion = 0;\n     }\n };\n "
      }
    ]
  }
]