[
  {
    "sha": "1472308d679fe7ed165c203070335fd58024d4da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDcyMzA4ZDY3OWZlN2VkMTY1YzIwMzA3MDMzNWZkNTgwMjRkNGRh",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-19T15:35:04Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-19T15:35:04Z"
      },
      "message": "Some unit tests for CAlert",
      "tree": {
        "sha": "67de064870192ae16a7f24a1a1611b3c9fc3b529",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67de064870192ae16a7f24a1a1611b3c9fc3b529"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1472308d679fe7ed165c203070335fd58024d4da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1472308d679fe7ed165c203070335fd58024d4da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1472308d679fe7ed165c203070335fd58024d4da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1472308d679fe7ed165c203070335fd58024d4da/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "74e4d80068f9c29d4891439332b4027328c8584b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74e4d80068f9c29d4891439332b4027328c8584b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/74e4d80068f9c29d4891439332b4027328c8584b"
      }
    ],
    "stats": {
      "total": 132,
      "additions": 132,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c8d409db9eee8b87d763c02e0e1528eb1ea534f7",
        "filename": "src/test/alert_tests.cpp",
        "status": "added",
        "additions": 132,
        "deletions": 0,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1472308d679fe7ed165c203070335fd58024d4da/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1472308d679fe7ed165c203070335fd58024d4da/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=1472308d679fe7ed165c203070335fd58024d4da",
        "patch": "@@ -0,0 +1,132 @@\n+//\n+// Unit tests for alert system\n+//\n+\n+#include <boost/foreach.hpp>\n+#include <boost/test/unit_test.hpp>\n+\n+#include \"alert.h\"\n+#include \"serialize.h\"\n+#include \"util.h\"\n+\n+BOOST_AUTO_TEST_SUITE(Alert_tests)\n+\n+#if 0\n+//\n+// alertTests contains 7 alerts, generated with this code:\n+// (SignAndSave code not shown, alert signing key is secret)\n+//\n+{\n+    CAlert alert;\n+    alert.nRelayUntil   = 60;\n+    alert.nExpiration   = 24 * 60 * 60;\n+    alert.nID           = 1;\n+    alert.nCancel       = 0;   // cancels previous messages up to this ID number\n+    alert.nMinVer       = 0;  // These versions are protocol versions\n+    alert.nMaxVer       = 70001;\n+    alert.nPriority     = 1;\n+    alert.strComment    = \"Alert comment\";\n+    alert.strStatusBar  = \"Alert 1\";\n+\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n+    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0\";\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.setSubVer.insert(std::string(\"/Satoshi:0.2.0/\"));\n+    alert.strStatusBar  = \"Alert 1 for Satoshi 0.1.0, 0.2.0\";\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.setSubVer.clear();\n+    alert.nID = 2;\n+    alert.nCancel = 1;\n+    alert.strStatusBar  = \"Alert 2, cancels 1\";\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.nExpiration += 60;\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.nMinVer = 11;\n+    alert.nMaxVer = 22;\n+    SignAndSave(alert, \"test/alertTests\");\n+\n+    alert.strStatusBar  = \"Alert 2 for Satoshi 0.1.0\";\n+    alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n+    SignAndSave(alert, \"test/alertTests\");\n+}\n+#endif\n+\n+\n+std::vector<CAlert>\n+read_alerts(const std::string& filename)\n+{\n+    std::vector<CAlert> result;\n+\n+    namespace fs = boost::filesystem;\n+    fs::path testFile = fs::current_path() / \"test\" / \"data\" / filename;\n+#ifdef TEST_DATA_DIR\n+    if (!fs::exists(testFile))\n+    {\n+        testFile = fs::path(BOOST_PP_STRINGIZE(TEST_DATA_DIR)) / filename;\n+    }\n+#endif\n+    FILE* fp = fopen(testFile.string().c_str(), \"rb\");\n+    if (!fp) return result;\n+\n+\n+    CAutoFile filein = CAutoFile(fp, SER_DISK, CLIENT_VERSION);\n+    if (!filein) return result;\n+\n+    try {\n+        while (!feof(filein))\n+        {\n+            CAlert alert;\n+            filein >> alert;\n+            result.push_back(alert);\n+        }\n+    }\n+    catch (std::exception) { }\n+\n+    return result;\n+}\n+\n+BOOST_AUTO_TEST_CASE(AlertApplies)\n+{\n+    SetMockTime(11);\n+\n+    std::vector<CAlert> alerts = read_alerts(\"alertTests\");\n+\n+    BOOST_FOREACH(const CAlert& alert, alerts)\n+    {\n+        BOOST_CHECK(alert.CheckSignature());\n+    }\n+    // Matches:\n+    BOOST_CHECK(alerts[0].AppliesTo(1, \"\"));\n+    BOOST_CHECK(alerts[0].AppliesTo(70001, \"\"));\n+    BOOST_CHECK(alerts[0].AppliesTo(1, \"/Satoshi:11.11.11/\"));\n+\n+    BOOST_CHECK(alerts[1].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n+    BOOST_CHECK(alerts[1].AppliesTo(70001, \"/Satoshi:0.1.0/\"));\n+\n+    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.1.0/\"));\n+    BOOST_CHECK(alerts[2].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n+\n+    // Don't match:\n+    BOOST_CHECK(!alerts[0].AppliesTo(-1, \"\"));\n+    BOOST_CHECK(!alerts[0].AppliesTo(70002, \"\"));\n+\n+    BOOST_CHECK(!alerts[1].AppliesTo(1, \"\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.1.0\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(1, \"Satoshi:0.1.0/\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(-1, \"/Satoshi:0.1.0/\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(70002, \"/Satoshi:0.1.0/\"));\n+    BOOST_CHECK(!alerts[1].AppliesTo(1, \"/Satoshi:0.2.0/\"));\n+\n+    BOOST_CHECK(!alerts[2].AppliesTo(1, \"/Satoshi:0.3.0/\"));\n+\n+    SetMockTime(0);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "126954e024e168e20f5b5929cbe3437fe8960577",
        "filename": "src/test/data/alertTests",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1472308d679fe7ed165c203070335fd58024d4da/src/test/data/alertTests",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1472308d679fe7ed165c203070335fd58024d4da/src/test/data/alertTests",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/alertTests?ref=1472308d679fe7ed165c203070335fd58024d4da"
      }
    ]
  },
  {
    "sha": "e5f163a041d5a45ea72448e11cfc30abb16f10b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWYxNjNhMDQxZDVhNDVlYTcyNDQ4ZTExY2ZjMzBhYmIxNmYxMGI2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-19T18:08:21Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-19T19:16:30Z"
      },
      "message": "-alertnotify=<cmd>\n\nRuns a shell command when an AppliesToMe() alert is received.\n%s in the <cmd> string is replaced with the alert.strStatusBar\nmessage.",
      "tree": {
        "sha": "9cf3a9a396bac00f28466421393deb19db8ab372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9cf3a9a396bac00f28466421393deb19db8ab372"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5f163a041d5a45ea72448e11cfc30abb16f10b6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5f163a041d5a45ea72448e11cfc30abb16f10b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5f163a041d5a45ea72448e11cfc30abb16f10b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5f163a041d5a45ea72448e11cfc30abb16f10b6/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1472308d679fe7ed165c203070335fd58024d4da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1472308d679fe7ed165c203070335fd58024d4da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1472308d679fe7ed165c203070335fd58024d4da"
      }
    ],
    "stats": {
      "total": 147,
      "additions": 115,
      "deletions": 32
    },
    "files": [
      {
        "sha": "4b029840dd65c76c830b963c57ad021d17726191",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 2,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "patch": "@@ -2,6 +2,9 @@\n // Alert system\n //\n \n+#include <algorithm>\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/replace.hpp>\n #include <boost/foreach.hpp>\n #include <map>\n \n@@ -165,7 +168,7 @@ CAlert CAlert::getAlertByHash(const uint256 &hash)\n     return retval;\n }\n \n-bool CAlert::ProcessAlert()\n+bool CAlert::ProcessAlert(bool fThread)\n {\n     if (!CheckSignature())\n         return false;\n@@ -229,9 +232,35 @@ bool CAlert::ProcessAlert()\n \n         // Add to mapAlerts\n         mapAlerts.insert(make_pair(GetHash(), *this));\n-        // Notify UI if it applies to me\n+        // Notify UI and -alertnotify if it applies to me\n         if(AppliesToMe())\n+        {\n             uiInterface.NotifyAlertChanged(GetHash(), CT_NEW);\n+            std::string strCmd = GetArg(\"-alertnotify\", \"\");\n+            if (!strCmd.empty())\n+            {\n+                // Alert text should be plain ascii coming from a trusted source, but to\n+                // be safe we first strip anything not in safeChars, then add single quotes around\n+                // the whole string before passing it to the shell:\n+                std::string singleQuote(\"'\");\n+                // safeChars chosen to allow simple messages/URLs/email addresses, but avoid anything\n+                // even possibly remotely dangerous like & or >\n+                std::string safeChars(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890 .,;_/:?@\");\n+                std::string safeStatus;\n+                for (std::string::size_type i = 0; i < strStatusBar.size(); i++)\n+                {\n+                    if (safeChars.find(strStatusBar[i]) != std::string::npos)\n+                        safeStatus.push_back(strStatusBar[i]);\n+                }\n+                safeStatus = singleQuote+safeStatus+singleQuote;\n+                boost::replace_all(strCmd, \"%s\", safeStatus);\n+\n+                if (fThread)\n+                    boost::thread t(runCommand, strCmd); // thread runs free\n+                else\n+                    runCommand(strCmd);\n+            }\n+        }\n     }\n \n     printf(\"accepted alert %d, AppliesToMe()=%d\\n\", nID, AppliesToMe());"
      },
      {
        "sha": "25e140f5738a6a9e49cdfd48eb454298305ac5ef",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "patch": "@@ -91,7 +91,7 @@ class CAlert : public CUnsignedAlert\n     bool AppliesToMe() const;\n     bool RelayTo(CNode* pnode) const;\n     bool CheckSignature() const;\n-    bool ProcessAlert();\n+    bool ProcessAlert(bool fThread = true);\n \n     /*\n      * Get copy of (active) alert object by hash. Returns a null alert if it is not found."
      },
      {
        "sha": "b61d1b9358a820c7afcf6709c97a9f0827696948",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "patch": "@@ -301,6 +301,7 @@ std::string HelpMessage()\n         \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\" +\n         \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\" +\n         \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\" +\n+        \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received (%s in cmd is replaced by message)\") + \"\\n\" +\n         \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\" +\n         \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\" +\n         \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\" +"
      },
      {
        "sha": "f7a11376d34e68c9702c2ffc873a80e65eaa0fd1",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 82,
        "deletions": 29,
        "changes": 111,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "patch": "@@ -4,13 +4,12 @@\n \n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n+#include <fstream>\n \n #include \"alert.h\"\n #include \"serialize.h\"\n #include \"util.h\"\n \n-BOOST_AUTO_TEST_SUITE(Alert_tests)\n-\n #if 0\n //\n // alertTests contains 7 alerts, generated with this code:\n@@ -39,64 +38,89 @@ BOOST_AUTO_TEST_SUITE(Alert_tests)\n     SignAndSave(alert, \"test/alertTests\");\n \n     alert.setSubVer.clear();\n-    alert.nID = 2;\n+    ++alert.nID;\n     alert.nCancel = 1;\n+    alert.nPriority = 100;\n     alert.strStatusBar  = \"Alert 2, cancels 1\";\n     SignAndSave(alert, \"test/alertTests\");\n \n     alert.nExpiration += 60;\n+    ++alert.nID;\n     SignAndSave(alert, \"test/alertTests\");\n \n+    ++alert.nID;\n     alert.nMinVer = 11;\n     alert.nMaxVer = 22;\n     SignAndSave(alert, \"test/alertTests\");\n \n+    ++alert.nID;\n     alert.strStatusBar  = \"Alert 2 for Satoshi 0.1.0\";\n     alert.setSubVer.insert(std::string(\"/Satoshi:0.1.0/\"));\n     SignAndSave(alert, \"test/alertTests\");\n+\n+    ++alert.nID;\n+    alert.nMinVer = 0;\n+    alert.nMaxVer = 999999;\n+    alert.strStatusBar  = \"Evil Alert'; /bin/ls; echo '\";\n+    alert.setSubVer.clear();\n+    SignAndSave(alert, \"test/alertTests\");\n }\n #endif\n \n-\n-std::vector<CAlert>\n-read_alerts(const std::string& filename)\n+struct ReadAlerts\n {\n-    std::vector<CAlert> result;\n-\n-    namespace fs = boost::filesystem;\n-    fs::path testFile = fs::current_path() / \"test\" / \"data\" / filename;\n-#ifdef TEST_DATA_DIR\n-    if (!fs::exists(testFile))\n+    ReadAlerts()\n     {\n-        testFile = fs::path(BOOST_PP_STRINGIZE(TEST_DATA_DIR)) / filename;\n-    }\n+        std::string filename(\"alertTests\");\n+        namespace fs = boost::filesystem;\n+        fs::path testFile = fs::current_path() / \"test\" / \"data\" / filename;\n+#ifdef TEST_DATA_DIR\n+        if (!fs::exists(testFile))\n+        {\n+            testFile = fs::path(BOOST_PP_STRINGIZE(TEST_DATA_DIR)) / filename;\n+        }\n #endif\n-    FILE* fp = fopen(testFile.string().c_str(), \"rb\");\n-    if (!fp) return result;\n+        FILE* fp = fopen(testFile.string().c_str(), \"rb\");\n+        if (!fp) return;\n \n \n-    CAutoFile filein = CAutoFile(fp, SER_DISK, CLIENT_VERSION);\n-    if (!filein) return result;\n+        CAutoFile filein = CAutoFile(fp, SER_DISK, CLIENT_VERSION);\n+        if (!filein) return;\n \n-    try {\n-        while (!feof(filein))\n-        {\n-            CAlert alert;\n-            filein >> alert;\n-            result.push_back(alert);\n+        try {\n+            while (!feof(filein))\n+            {\n+                CAlert alert;\n+                filein >> alert;\n+                alerts.push_back(alert);\n+            }\n         }\n+        catch (std::exception) { }\n     }\n-    catch (std::exception) { }\n+    ~ReadAlerts() { }\n+\n+    static std::vector<std::string> read_lines(boost::filesystem::path filepath)\n+    {\n+        std::vector<std::string> result;\n+\n+        std::ifstream f(filepath.string().c_str());\n+        std::string line;\n+        while (std::getline(f,line))\n+            result.push_back(line);\n+\n+        return result;\n+    }\n+\n+    std::vector<CAlert> alerts;\n+};\n+\n+BOOST_FIXTURE_TEST_SUITE(Alert_tests, ReadAlerts)\n \n-    return result;\n-}\n \n BOOST_AUTO_TEST_CASE(AlertApplies)\n {\n     SetMockTime(11);\n \n-    std::vector<CAlert> alerts = read_alerts(\"alertTests\");\n-\n     BOOST_FOREACH(const CAlert& alert, alerts)\n     {\n         BOOST_CHECK(alert.CheckSignature());\n@@ -129,4 +153,33 @@ BOOST_AUTO_TEST_CASE(AlertApplies)\n     SetMockTime(0);\n }\n \n+\n+// This uses sh 'echo' to test the -alertnotify function, writing to a\n+// /tmp file. So skip it on Windows:\n+#ifndef WIN32\n+BOOST_AUTO_TEST_CASE(AlertNotify)\n+{\n+    SetMockTime(11);\n+\n+    boost::filesystem::path temp = GetTempPath() / \"alertnotify.txt\";\n+    boost::filesystem::remove(temp);\n+\n+    mapArgs[\"-alertnotify\"] = std::string(\"echo %s >> \") + temp.string();\n+\n+    BOOST_FOREACH(CAlert alert, alerts)\n+        alert.ProcessAlert(false);\n+\n+    std::vector<std::string> r = read_lines(temp);\n+    BOOST_CHECK_EQUAL(r.size(), 4u);\n+    BOOST_CHECK_EQUAL(r[0], \"Alert 1\");\n+    BOOST_CHECK_EQUAL(r[1], \"Alert 2, cancels 1\");\n+    BOOST_CHECK_EQUAL(r[2], \"Alert 2, cancels 1\");\n+    BOOST_CHECK_EQUAL(r[3], \"Evil Alert; /bin/ls; echo \"); // single-quotes should be removed\n+\n+    boost::filesystem::remove(temp);\n+\n+    SetMockTime(0);\n+}\n+#endif\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "7fc45289617e1c4b0e40f2244ffa3fab0f9849ce",
        "filename": "src/test/data/alertTests",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/test/data/alertTests",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5f163a041d5a45ea72448e11cfc30abb16f10b6/src/test/data/alertTests",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/alertTests?ref=e5f163a041d5a45ea72448e11cfc30abb16f10b6"
      }
    ]
  },
  {
    "sha": "3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDlkMmQ0MjNiYmRmOTdlZjcyOWI4YzRhMmRkZGMzMGEwMWUxNDE1",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-21T14:08:21Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2013-03-21T14:08:21Z"
      },
      "message": "Recommend alertnotify",
      "tree": {
        "sha": "227083923a38a606d33baeb31805955efee9f099",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/227083923a38a606d33baeb31805955efee9f099"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5f163a041d5a45ea72448e11cfc30abb16f10b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5f163a041d5a45ea72448e11cfc30abb16f10b6"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b6d8de4a18fc15a6af3de5a415b8a01157ffc9f1",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=3d9d2d423bbdf97ef729b8c4a2dddc30a01e1415",
        "patch": "@@ -769,7 +769,9 @@ void ThreadRPCServer2(void* parg)\n               \"rpcpassword=%s\\n\"\n               \"(you do not need to remember this password)\\n\"\n               \"The username and password MUST NOT be the same.\\n\"\n-              \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"),\n+              \"If the file does not exist, create it with owner-readable-only file permissions.\\n\"\n+              \"It is also recommended to set alertnotify so you are notified of problems;\\n\"\n+              \"for example: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\" admin@foo.com\\n\"),\n                 strWhatAmI.c_str(),\n                 GetConfigFile().string().c_str(),\n                 EncodeBase58(&rand_pwd[0],&rand_pwd[0]+32).c_str()),"
      }
    ]
  }
]