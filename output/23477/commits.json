[
  {
    "sha": "a749fa539ae4330dd5d610286f418156e080e9dd",
    "node_id": "C_kwDOABII59oAKGE3NDlmYTUzOWFlNDMzMGRkNWQ2MTAyODZmNDE4MTU2ZTA4MGU5ZGQ",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-01T15:32:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-09T17:09:50Z"
      },
      "message": "[addrman] Remove AddrMan friends\n\nAddrMan's friends both inherit from AddrMan, so just make the private\nmember protected and remove the friends.",
      "tree": {
        "sha": "5f21aea08f27af7bd9a2a5a036b4ed3b7ae7376f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f21aea08f27af7bd9a2a5a036b4ed3b7ae7376f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a749fa539ae4330dd5d610286f418156e080e9dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a749fa539ae4330dd5d610286f418156e080e9dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a749fa539ae4330dd5d610286f418156e080e9dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a749fa539ae4330dd5d610286f418156e080e9dd/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e70fb87a4f8c3b9afab634be64ba7142edd49ddc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e70fb87a4f8c3b9afab634be64ba7142edd49ddc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e70fb87a4f8c3b9afab634be64ba7142edd49ddc"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "455d84ca71bbd445c1d8865744f99cdf94bfa1fe",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a749fa539ae4330dd5d610286f418156e080e9dd/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a749fa539ae4330dd5d610286f418156e080e9dd/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=a749fa539ae4330dd5d610286f418156e080e9dd",
        "patch": "@@ -53,6 +53,7 @@ static constexpr int32_t DEFAULT_ADDRMAN_CONSISTENCY_CHECKS{0};\n  */\n class AddrMan\n {\n+protected:\n     const std::unique_ptr<AddrManImpl> m_impl;\n \n public:\n@@ -135,9 +136,6 @@ class AddrMan\n     void SetServices(const CService& addr, ServiceFlags nServices);\n \n     const std::vector<bool>& GetAsmap() const;\n-\n-    friend class AddrManTest;\n-    friend class AddrManDeterministic;\n };\n \n #endif // BITCOIN_ADDRMAN_H"
      }
    ]
  },
  {
    "sha": "7784a9a374ac34acb4656f740fecf4ae1743f73f",
    "node_id": "C_kwDOABII59oAKDc3ODRhOWEzNzRhYzM0YWNiNDY1NmY3NDBmZWNmNGFlMTc0M2Y3M2Y",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-01T15:33:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-09T17:09:50Z"
      },
      "message": "[addrman] [tests] Remove deterministic argument and member from AddrManTest\n\nIt's always set to true.",
      "tree": {
        "sha": "7c25b61871df8513fa0610cf38ba5195d0e8a90f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c25b61871df8513fa0610cf38ba5195d0e8a90f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7784a9a374ac34acb4656f740fecf4ae1743f73f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784a9a374ac34acb4656f740fecf4ae1743f73f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7784a9a374ac34acb4656f740fecf4ae1743f73f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784a9a374ac34acb4656f740fecf4ae1743f73f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a749fa539ae4330dd5d610286f418156e080e9dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a749fa539ae4330dd5d610286f418156e080e9dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a749fa539ae4330dd5d610286f418156e080e9dd"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 7,
      "deletions": 12
    },
    "files": [
      {
        "sha": "f74906580f209fc41a657639de7c62a64ca2c060",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7784a9a374ac34acb4656f740fecf4ae1743f73f/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7784a9a374ac34acb4656f740fecf4ae1743f73f/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=7784a9a374ac34acb4656f740fecf4ae1743f73f",
        "patch": "@@ -79,15 +79,10 @@ static CDataStream AddrmanToStream(const AddrManSerializationMock& _addrman)\n \n class AddrManTest : public AddrMan\n {\n-private:\n-    bool deterministic;\n public:\n-    explicit AddrManTest(bool makeDeterministic = true,\n-                         std::vector<bool> asmap = std::vector<bool>())\n-        : AddrMan(asmap, makeDeterministic, /* consistency_check_ratio */ 100)\n-    {\n-        deterministic = makeDeterministic;\n-    }\n+    explicit AddrManTest(std::vector<bool> asmap = std::vector<bool>())\n+        : AddrMan(asmap, /*deterministic=*/true, /* consistency_check_ratio */ 100)\n+    {}\n \n     AddrInfo* Find(const CService& addr, int* pnId = nullptr)\n     {\n@@ -760,8 +755,8 @@ BOOST_AUTO_TEST_CASE(addrman_serialization)\n {\n     std::vector<bool> asmap1 = FromBytes(asmap_raw, sizeof(asmap_raw) * 8);\n \n-    auto addrman_asmap1 = std::make_unique<AddrManTest>(true, asmap1);\n-    auto addrman_asmap1_dup = std::make_unique<AddrManTest>(true, asmap1);\n+    auto addrman_asmap1 = std::make_unique<AddrManTest>(asmap1);\n+    auto addrman_asmap1_dup = std::make_unique<AddrManTest>(asmap1);\n     auto addrman_noasmap = std::make_unique<AddrManTest>();\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n \n@@ -792,7 +787,7 @@ BOOST_AUTO_TEST_CASE(addrman_serialization)\n     BOOST_CHECK(bucketAndEntry_asmap1.second != bucketAndEntry_noasmap.second);\n \n     // deserializing non-asmaped peers.dat to asmaped addrman\n-    addrman_asmap1 = std::make_unique<AddrManTest>(true, asmap1);\n+    addrman_asmap1 = std::make_unique<AddrManTest>(asmap1);\n     addrman_noasmap = std::make_unique<AddrManTest>();\n     addrman_noasmap->Add({addr}, default_source);\n     stream << *addrman_noasmap;\n@@ -804,7 +799,7 @@ BOOST_AUTO_TEST_CASE(addrman_serialization)\n     BOOST_CHECK(bucketAndEntry_asmap1_deser.second == bucketAndEntry_asmap1_dup.second);\n \n     // used to map to different buckets, now maps to the same bucket.\n-    addrman_asmap1 = std::make_unique<AddrManTest>(true, asmap1);\n+    addrman_asmap1 = std::make_unique<AddrManTest>(asmap1);\n     addrman_noasmap = std::make_unique<AddrManTest>();\n     CAddress addr1 = CAddress(ResolveService(\"250.1.1.1\"), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.2.1.1\"), NODE_NONE);"
      }
    ]
  },
  {
    "sha": "d02098d1f042ff91c2206c27c48b385418ece0cc",
    "node_id": "C_kwDOABII59oAKGQwMjA5OGQxZjA0MmZmOTFjMjIwNmMyN2M0OGIzODU0MThlY2UwY2M",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-01T15:37:19Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-09T17:09:50Z"
      },
      "message": "[addrman] [tests] Tidy up unused arguments in addrman test functions",
      "tree": {
        "sha": "b49e815c0a7f0db70ce15ee927204196579a8ffb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b49e815c0a7f0db70ce15ee927204196579a8ffb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d02098d1f042ff91c2206c27c48b385418ece0cc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02098d1f042ff91c2206c27c48b385418ece0cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d02098d1f042ff91c2206c27c48b385418ece0cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02098d1f042ff91c2206c27c48b385418ece0cc/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7784a9a374ac34acb4656f740fecf4ae1743f73f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7784a9a374ac34acb4656f740fecf4ae1743f73f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7784a9a374ac34acb4656f740fecf4ae1743f73f"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8c6c9415bd42197c46d0c3ffacaa06939e50050a",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d02098d1f042ff91c2206c27c48b385418ece0cc/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d02098d1f042ff91c2206c27c48b385418ece0cc/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=d02098d1f042ff91c2206c27c48b385418ece0cc",
        "patch": "@@ -84,13 +84,13 @@ class AddrManTest : public AddrMan\n         : AddrMan(asmap, /*deterministic=*/true, /* consistency_check_ratio */ 100)\n     {}\n \n-    AddrInfo* Find(const CService& addr, int* pnId = nullptr)\n+    AddrInfo* Find(const CService& addr)\n     {\n         LOCK(m_impl->cs);\n-        return m_impl->Find(addr, pnId);\n+        return m_impl->Find(addr);\n     }\n \n-    AddrInfo* Create(const CAddress& addr, const CNetAddr& addrSource, int* pnId = nullptr)\n+    AddrInfo* Create(const CAddress& addr, const CNetAddr& addrSource, int* pnId)\n     {\n         LOCK(m_impl->cs);\n         return m_impl->Create(addr, addrSource, pnId);"
      }
    ]
  },
  {
    "sha": "dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
    "node_id": "C_kwDOABII59oAKGRmYmQzYTZkNzFmMTdiZjNmYmNmODhlNDZlM2ZlZGQxOGE3MDY4ZjE",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-04T11:30:29Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-09T17:09:50Z"
      },
      "message": "[addrman] [tests] Remove AddrManCorrupted subclass\n\nIt's only used to create a corrupted peers.dat file. We can do that directly\nin a pure function.",
      "tree": {
        "sha": "4a02ffe389bd643b7c65d014807bf9793e707617",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a02ffe389bd643b7c65d014807bf9793e707617"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d02098d1f042ff91c2206c27c48b385418ece0cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d02098d1f042ff91c2206c27c48b385418ece0cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d02098d1f042ff91c2206c27c48b385418ece0cc"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 31,
      "deletions": 31
    },
    "files": [
      {
        "sha": "dab68b497ff95ee2575a3701c39ba700266f388f",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 31,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
        "patch": "@@ -41,32 +41,6 @@ class AddrManUncorrupted : public AddrManSerializationMock\n     }\n };\n \n-class AddrManCorrupted : public AddrManSerializationMock\n-{\n-public:\n-    void Serialize(CDataStream& s) const override\n-    {\n-        // Produces corrupt output that claims addrman has 20 addrs when it only has one addr.\n-        unsigned char nVersion = 1;\n-        s << nVersion;\n-        s << ((unsigned char)32);\n-        s << uint256::ONE;\n-        s << 10; // nNew\n-        s << 10; // nTried\n-\n-        int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n-        s << nUBuckets;\n-\n-        CService serv;\n-        BOOST_CHECK(Lookup(\"252.1.1.1\", serv, 7777, false));\n-        CAddress addr = CAddress(serv, NODE_NONE);\n-        CNetAddr resolved;\n-        BOOST_CHECK(LookupHost(\"252.2.2.2\", resolved, false));\n-        AddrInfo info = AddrInfo(addr, resolved);\n-        s << info;\n-    }\n-};\n-\n static CDataStream AddrmanToStream(const AddrManSerializationMock& _addrman)\n {\n     CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n@@ -1043,13 +1017,39 @@ BOOST_AUTO_TEST_CASE(load_addrman)\n     BOOST_CHECK(addrman2.size() == 3);\n }\n \n+// Produce a corrupt peers.dat that claims 20 addrs when it only has one addr.\n+static CDataStream MakeCorruptPeersDat()\n+{\n+    CDataStream s(SER_DISK, CLIENT_VERSION);\n+    s << ::Params().MessageStart();\n+\n+    unsigned char nVersion = 1;\n+    s << nVersion;\n+    s << ((unsigned char)32);\n+    s << uint256::ONE;\n+    s << 10; // nNew\n+    s << 10; // nTried\n+\n+    int nUBuckets = ADDRMAN_NEW_BUCKET_COUNT ^ (1 << 30);\n+    s << nUBuckets;\n+\n+    CService serv;\n+    BOOST_CHECK(Lookup(\"252.1.1.1\", serv, 7777, false));\n+    CAddress addr = CAddress(serv, NODE_NONE);\n+    CNetAddr resolved;\n+    BOOST_CHECK(LookupHost(\"252.2.2.2\", resolved, false));\n+    AddrInfo info = AddrInfo(addr, resolved);\n+    s << info;\n+\n+    std::string str = s.str();\n+    std::vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n \n BOOST_AUTO_TEST_CASE(load_addrman_corrupted)\n {\n-    AddrManCorrupted addrmanCorrupted;\n-\n-    // Test that the de-serialization of corrupted addrman throws an exception.\n-    CDataStream ssPeers1 = AddrmanToStream(addrmanCorrupted);\n+    // Test that the de-serialization of corrupted peers.dat throws an exception.\n+    CDataStream ssPeers1 = MakeCorruptPeersDat();\n     bool exceptionThrown = false;\n     AddrMan addrman1(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n     BOOST_CHECK(addrman1.size() == 0);\n@@ -1065,7 +1065,7 @@ BOOST_AUTO_TEST_CASE(load_addrman_corrupted)\n     BOOST_CHECK(exceptionThrown);\n \n     // Test that ReadFromStream fails if peers.dat is corrupt\n-    CDataStream ssPeers2 = AddrmanToStream(addrmanCorrupted);\n+    CDataStream ssPeers2 = MakeCorruptPeersDat();\n \n     AddrMan addrman2(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n     BOOST_CHECK(addrman2.size() == 0);"
      }
    ]
  },
  {
    "sha": "36d3510303875c9f98eb00b28763c7c043d4dcee",
    "node_id": "C_kwDOABII59oAKDM2ZDM1MTAzMDM4NzVjOWY5OGViMDBiMjg3NjNjN2MwNDNkNGRjZWU",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-04T11:31:17Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-11-09T17:09:50Z"
      },
      "message": "[addrman] [tests] Remove AddrManUncorrupted subclass\n\nIt doesn't do anything different from the base AddrMan class.",
      "tree": {
        "sha": "cca24e073ecf302bc8363c90a7cbb9ac0e15d9a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cca24e073ecf302bc8363c90a7cbb9ac0e15d9a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36d3510303875c9f98eb00b28763c7c043d4dcee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36d3510303875c9f98eb00b28763c7c043d4dcee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36d3510303875c9f98eb00b28763c7c043d4dcee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36d3510303875c9f98eb00b28763c7c043d4dcee/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfbd3a6d71f17bf3fbcf88e46e3fedd18a7068f1"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 16,
      "deletions": 34
    },
    "files": [
      {
        "sha": "572b9871dc691d5c00b20525aa85c432194a574a",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 34,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36d3510303875c9f98eb00b28763c7c043d4dcee/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36d3510303875c9f98eb00b28763c7c043d4dcee/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=36d3510303875c9f98eb00b28763c7c043d4dcee",
        "patch": "@@ -22,35 +22,6 @@\n \n using namespace std::literals;\n \n-class AddrManSerializationMock : public AddrMan\n-{\n-public:\n-    virtual void Serialize(CDataStream& s) const = 0;\n-\n-    AddrManSerializationMock()\n-        : AddrMan(/* asmap */ std::vector<bool>(), /* deterministic */ true, /* consistency_check_ratio */ 100)\n-    {}\n-};\n-\n-class AddrManUncorrupted : public AddrManSerializationMock\n-{\n-public:\n-    void Serialize(CDataStream& s) const override\n-    {\n-        AddrMan::Serialize(s);\n-    }\n-};\n-\n-static CDataStream AddrmanToStream(const AddrManSerializationMock& _addrman)\n-{\n-    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n-    ssPeersIn << Params().MessageStart();\n-    ssPeersIn << _addrman;\n-    std::string str = ssPeersIn.str();\n-    std::vector<unsigned char> vchData(str.begin(), str.end());\n-    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n-}\n-\n class AddrManTest : public AddrMan\n {\n public:\n@@ -973,9 +944,20 @@ BOOST_AUTO_TEST_CASE(addrman_evictionworks)\n     BOOST_CHECK(addrman.SelectTriedCollision().first.ToString() == \"[::]:0\");\n }\n \n+static CDataStream AddrmanToStream(const AddrMan& addrman)\n+{\n+    CDataStream ssPeersIn(SER_DISK, CLIENT_VERSION);\n+    ssPeersIn << Params().MessageStart();\n+    ssPeersIn << addrman;\n+    std::string str = ssPeersIn.str();\n+    std::vector<unsigned char> vchData(str.begin(), str.end());\n+    return CDataStream(vchData, SER_DISK, CLIENT_VERSION);\n+}\n+\n BOOST_AUTO_TEST_CASE(load_addrman)\n {\n-    AddrManUncorrupted addrmanUncorrupted;\n+    AddrMan addrman{/*asmap=*/ std::vector<bool>(), /*deterministic=*/ true,\n+                    /*consistency_check_ratio=*/ 100};\n \n     CService addr1, addr2, addr3;\n     BOOST_CHECK(Lookup(\"250.7.1.1\", addr1, 8333, false));\n@@ -988,11 +970,11 @@ BOOST_AUTO_TEST_CASE(load_addrman)\n     CService source;\n     BOOST_CHECK(Lookup(\"252.5.1.1\", source, 8333, false));\n     std::vector<CAddress> addresses{CAddress(addr1, NODE_NONE), CAddress(addr2, NODE_NONE), CAddress(addr3, NODE_NONE)};\n-    BOOST_CHECK(addrmanUncorrupted.Add(addresses, source));\n-    BOOST_CHECK(addrmanUncorrupted.size() == 3);\n+    BOOST_CHECK(addrman.Add(addresses, source));\n+    BOOST_CHECK(addrman.size() == 3);\n \n     // Test that the de-serialization does not throw an exception.\n-    CDataStream ssPeers1 = AddrmanToStream(addrmanUncorrupted);\n+    CDataStream ssPeers1 = AddrmanToStream(addrman);\n     bool exceptionThrown = false;\n     AddrMan addrman1(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n \n@@ -1009,7 +991,7 @@ BOOST_AUTO_TEST_CASE(load_addrman)\n     BOOST_CHECK(exceptionThrown == false);\n \n     // Test that ReadFromStream creates an addrman with the correct number of addrs.\n-    CDataStream ssPeers2 = AddrmanToStream(addrmanUncorrupted);\n+    CDataStream ssPeers2 = AddrmanToStream(addrman);\n \n     AddrMan addrman2(/* asmap */ std::vector<bool>(), /* deterministic */ false, /* consistency_check_ratio */ 100);\n     BOOST_CHECK(addrman2.size() == 0);"
      }
    ]
  }
]