[
  {
    "sha": "faca95effd91117ba1c0578ce4235a6a528f3511",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNhOTVlZmZkOTExMTdiYTFjMDU3OGNlNDIzNWE2YTUyOGYzNTEx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-03-29T17:44:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-04-04T20:51:26Z"
      },
      "message": "qa: Make swap_magic_bytes in p2p_invalid_messages atomic",
      "tree": {
        "sha": "023583131a26bbac5bd6095b0d8365d0e42b5c56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/023583131a26bbac5bd6095b0d8365d0e42b5c56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faca95effd91117ba1c0578ce4235a6a528f3511",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJcKq2AAAoJEM4rdWl+aaVIxIYL/jMTgJuSKpPzHJRRvK9oTPkN\n0JmlA0m5/u4FQulK9hINX6QvSUjXdiPeq++pS4zzRzn8hIwci9D6rkc2m8duUsCt\nOj8tUTLECoO8ubRjkYq4HEd/SjXQYXe4w5UQLp7SScpDp8uRnYbqg0YWFGdH6CYF\ndVW8iX6TwFA6FJeEvYEBWu+9sutXOfU9p0lpRgIuonjBR7wfXeRn5p9n5UpwbX7q\nlgMdNwEiJNtX9srIdemGydZLLA16f4L9mD4i8H63ZipAGkZIFbRrFeLFIfH6H4iB\nepbsu3OO2TF4Hi+UIerl2HHs6N5+2rz7AsD1V9yDmWFPJQh9g15waCy7ub9kGmlX\nBdOTbgsoqIZwxTVxVc36mgtY83U0BdmG0NHOceskk+dp8XFBDcCS/iNYktyFPbBE\n9hoqzZyJWnBV21pI/NWOm4Zr+untGfbZ6nBkaGhZyVEBxNBaKgKvadAQhUluzd18\nNTS78Fl5uASZUqPDAR3HYddIsekQWyBhmH1/s0XcHg==\n=QQEI\n-----END PGP SIGNATURE-----",
        "payload": "tree 023583131a26bbac5bd6095b0d8365d0e42b5c56\nparent daef20fb50c00240ea4a5d653f3a47ee604d25c1\nauthor MarcoFalke <falke.marco@gmail.com> 1553881481 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1554411086 -0400\n\nqa: Make swap_magic_bytes in p2p_invalid_messages atomic\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca95effd91117ba1c0578ce4235a6a528f3511",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faca95effd91117ba1c0578ce4235a6a528f3511",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca95effd91117ba1c0578ce4235a6a528f3511/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "daef20fb50c00240ea4a5d653f3a47ee604d25c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daef20fb50c00240ea4a5d653f3a47ee604d25c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/daef20fb50c00240ea4a5d653f3a47ee604d25c1"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "481d697e638d67adc872b9e5ff3b69c3467cfdd5",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faca95effd91117ba1c0578ce4235a6a528f3511/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faca95effd91117ba1c0578ce4235a6a528f3511/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=faca95effd91117ba1c0578ce4235a6a528f3511",
        "patch": "@@ -3,11 +3,12 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n+import asyncio\n import os\n import struct\n \n from test_framework import messages\n-from test_framework.mininode import P2PDataStore\n+from test_framework.mininode import P2PDataStore, NetworkThread\n from test_framework.test_framework import BitcoinTestFramework\n \n \n@@ -143,8 +144,15 @@ def run_test(self):\n \n     def test_magic_bytes(self):\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        conn._on_data = lambda: None  # Need to ignore all incoming messages from now, since they come with \"invalid\" magic bytes\n-        conn.magic_bytes = b'\\x00\\x11\\x22\\x32'\n+\n+        def swap_magic_bytes():\n+            conn._on_data = lambda: None  # Need to ignore all incoming messages from now, since they come with \"invalid\" magic bytes\n+            conn.magic_bytes = b'\\x00\\x11\\x22\\x32'\n+\n+        # Call .result() to block until the atomic swap is complete, otherwise\n+        # we might run into races later on\n+        asyncio.run_coroutine_threadsafe(asyncio.coroutine(swap_magic_bytes)(), NetworkThread.network_event_loop).result()\n+\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART ping']):\n             conn.send_message(messages.msg_ping(nonce=0xff))\n             conn.wait_for_disconnect(timeout=1)"
      }
    ]
  }
]