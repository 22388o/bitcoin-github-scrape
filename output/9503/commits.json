[
  {
    "sha": "c60de5d3b96ff54fbc9072487824b74f35e9a87f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjBkZTVkM2I5NmZmNTRmYmM5MDcyNDg3ODI0Yjc0ZjM1ZTlhODdm",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-01-09T22:17:48Z"
      },
      "committer": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-02-16T06:54:07Z"
      },
      "message": "Add address filtering to listreceivedbyaddress",
      "tree": {
        "sha": "c83f606abd8afffdfdbdd8c1a7858a87c0ff2131",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c83f606abd8afffdfdbdd8c1a7858a87c0ff2131"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c60de5d3b96ff54fbc9072487824b74f35e9a87f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c60de5d3b96ff54fbc9072487824b74f35e9a87f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c60de5d3b96ff54fbc9072487824b74f35e9a87f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c60de5d3b96ff54fbc9072487824b74f35e9a87f/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "af01cd3a3d0647c071e94d7b0bda7128fb9aeebe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/af01cd3a3d0647c071e94d7b0bda7128fb9aeebe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/af01cd3a3d0647c071e94d7b0bda7128fb9aeebe"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 36,
      "deletions": 7
    },
    "files": [
      {
        "sha": "903b84db46281da26ea1cb35fb6d06cb74931f49",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 7,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c60de5d3b96ff54fbc9072487824b74f35e9a87f/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c60de5d3b96ff54fbc9072487824b74f35e9a87f/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c60de5d3b96ff54fbc9072487824b74f35e9a87f",
        "patch": "@@ -1145,6 +1145,17 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n         if(params[2].get_bool())\n             filter = filter | ISMINE_WATCH_ONLY;\n \n+    bool fFilterAddress = false;\n+    CTxDestination filterAddress =  CNoDestination();\n+    if (!fByAccounts && params.size() > 3) {\n+        filterAddress =  CBitcoinAddress(params[3].get_str()).Get();\n+        CTxDestination nulladdress = CNoDestination();\n+        if (filterAddress == nulladdress) {\n+            throw JSONRPCError(RPC_WALLET_ERROR, \"only_address parameter was invalid\");\n+        }\n+        fFilterAddress = true;\n+    }\n+\n     // Tally\n     map<CBitcoinAddress, tallyitem> mapTally;\n     for (map<uint256, CWalletTx>::iterator it = pwalletMain->mapWallet.begin(); it != pwalletMain->mapWallet.end(); ++it)\n@@ -1164,6 +1175,10 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n             if (!ExtractDestination(txout.scriptPubKey, address))\n                 continue;\n \n+            if (fFilterAddress && !(filterAddress == address)) {\n+                continue;\n+            }\n+\n             isminefilter mine = IsMine(*pwalletMain, address);\n             if(!(mine & filter))\n                 continue;\n@@ -1180,10 +1195,23 @@ UniValue ListReceived(const UniValue& params, bool fByAccounts)\n     // Reply\n     UniValue ret(UniValue::VARR);\n     map<string, tallyitem> mapAccountTally;\n-    BOOST_FOREACH(const PAIRTYPE(CBitcoinAddress, CAddressBookData)& item, pwalletMain->mapAddressBook)\n+\n+    // Create mapAddressBook iterator\n+    // If we aren't filtering, go from begin() to end()\n+    std::map<CTxDestination, CAddressBookData>::const_iterator start = pwalletMain->mapAddressBook.begin();\n+    std::map<CTxDestination, CAddressBookData>::const_iterator end = pwalletMain->mapAddressBook.end();\n+    // If we are filtering, find() the applicable entry\n+    if (fFilterAddress) {\n+        start = pwalletMain->mapAddressBook.find(filterAddress);\n+        if (start != end) {\n+            end = std::next(start);\n+        }\n+    }\n+\n+    for(std::map<CTxDestination, CAddressBookData>::const_iterator item_it = start; item_it != end; ++item_it)\n     {\n-        const CBitcoinAddress& address = item.first;\n-        const string& strAccount = item.second.name;\n+        const CBitcoinAddress& address = item_it->first;\n+        const string& strAccount = item_it->second.name;\n         map<CBitcoinAddress, tallyitem>::iterator it = mapTally.find(address);\n         if (it == mapTally.end() && !fIncludeEmpty)\n             continue;\n@@ -1253,15 +1281,15 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n     if (!EnsureWalletIsAvailable(request.fHelp))\n         return NullUniValue;\n \n-    if (request.fHelp || request.params.size() > 3)\n+    if (request.fHelp || request.params.size() > 4)\n         throw runtime_error(\n-            \"listreceivedbyaddress ( minconf include_empty include_watchonly)\\n\"\n+            \"listreceivedbyaddress (minconf include_empty include_watchonly only_address)\\n\"\n             \"\\nList balances by receiving address.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. minconf           (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n             \"2. include_empty     (bool, optional, default=false) Whether to include addresses that haven't received any payments.\\n\"\n             \"3. include_watchonly (bool, optional, default=false) Whether to include watch-only addresses (see 'importaddress').\\n\"\n-\n+            \"4. only_address   (string, optional) If present, only return information on this address. Otherwise, return all information.\\n\"\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n@@ -1283,6 +1311,7 @@ UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n             + HelpExampleCli(\"listreceivedbyaddress\", \"\")\n             + HelpExampleCli(\"listreceivedbyaddress\", \"6 true\")\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true\")\n+            + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true, \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -2940,7 +2969,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             \"listaddressgroupings\",     &listaddressgroupings,     false,  {} },\n     { \"wallet\",             \"listlockunspent\",          &listlockunspent,          false,  {} },\n     { \"wallet\",             \"listreceivedbyaccount\",    &listreceivedbyaccount,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n-    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\"} },\n+    { \"wallet\",             \"listreceivedbyaddress\",    &listreceivedbyaddress,    false,  {\"minconf\",\"include_empty\",\"include_watchonly\", \"only_address\"} },\n     { \"wallet\",             \"listsinceblock\",           &listsinceblock,           false,  {\"blockhash\",\"target_confirmations\",\"include_watchonly\"} },\n     { \"wallet\",             \"listtransactions\",         &listtransactions,         false,  {\"account\",\"count\",\"skip\",\"include_watchonly\"} },\n     { \"wallet\",             \"listunspent\",              &listunspent,              false,  {\"minconf\",\"maxconf\",\"addresses\",\"include_unsafe\"} },"
      }
    ]
  },
  {
    "sha": "e6f053a66f9196e2d75d15af2f89facd693402ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmYwNTNhNjZmOTE5NmUyZDc1ZDE1YWYyZjg5ZmFjZDY5MzQwMmZm",
    "commit": {
      "author": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-01-09T22:18:17Z"
      },
      "committer": {
        "name": "Jeremy Rubin",
        "email": "jeremy.l.rubin@gmail.com",
        "date": "2017-02-16T06:54:07Z"
      },
      "message": "Add tests of listreceivedbyaddress address filtering",
      "tree": {
        "sha": "8c4eddd39147ff96c03e70c7c9227bfff5af6e66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c4eddd39147ff96c03e70c7c9227bfff5af6e66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6f053a66f9196e2d75d15af2f89facd693402ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f053a66f9196e2d75d15af2f89facd693402ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f053a66f9196e2d75d15af2f89facd693402ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f053a66f9196e2d75d15af2f89facd693402ff/comments",
    "author": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c60de5d3b96ff54fbc9072487824b74f35e9a87f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c60de5d3b96ff54fbc9072487824b74f35e9a87f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c60de5d3b96ff54fbc9072487824b74f35e9a87f"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 17,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ab0fa92673f0d96d376b58220eb09e45faf836ce",
        "filename": "qa/rpc-tests/receivedby.py",
        "status": "modified",
        "additions": 17,
        "deletions": 3,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6f053a66f9196e2d75d15af2f89facd693402ff/qa/rpc-tests/receivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6f053a66f9196e2d75d15af2f89facd693402ff/qa/rpc-tests/receivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/receivedby.py?ref=e6f053a66f9196e2d75d15af2f89facd693402ff",
        "patch": "@@ -65,10 +65,24 @@ def run_test(self):\n         assert_array_result(self.nodes[1].listreceivedbyaddress(11),{\"address\":addr},{ },True)\n \n         #Empty Tx\n-        addr = self.nodes[1].getnewaddress()\n+        empty_addr = self.nodes[1].getnewaddress()\n         assert_array_result(self.nodes[1].listreceivedbyaddress(0,True),\n-                           {\"address\":addr},\n-                           {\"address\":addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+                           {\"address\":empty_addr},\n+                           {\"address\":empty_addr, \"account\":\"\", \"amount\":0, \"confirmations\":0, \"txids\":[]})\n+\n+        #Test Address filtering\n+        #Only on addr\n+        expected = {\"address\":addr, \"account\":\"\", \"amount\":Decimal(\"0.1\"), \"confirmations\":10, \"txids\":[txid,]}\n+        res = self.nodes[1].listreceivedbyaddress(0, True, True, addr)\n+        assert_array_result(res, {\"address\":addr}, expected)\n+        if len(res) != 1:\n+            raise AssertionError(\"listreceivedbyaddress expected only 1 result\")\n+\n+        #Not on addr\n+        other_addr = self.nodes[0].getnewaddress() # note on node[0]! just a random addr\n+        res = self.nodes[1].listreceivedbyaddress(0, True, True, other_addr)\n+        if res != []:\n+            raise AssertionError(\"Should not have listed any transactions, got\\n%s\"%res)\n \n         '''\n             getreceivedbyaddress Test"
      }
    ]
  }
]