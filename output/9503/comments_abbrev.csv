jnewbery,2017-01-10T22:22:35Z,"A couple of general comments:\n\n- How large are the results from the `listreceivedbyaddress` rpc expected to be? If the rpc only ever returns a small number of addresses, it should be easy enough for the client to receive the full list of balances and then filter the list itself?\n- if there's a chance that this functionality needs to be extended further to filter on a list of addresses rather",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-271717096,271717096,
JeremyRubin,2017-01-13T16:38:49Z,"@jnewbery addressed nits.\n\n1. I think it could be quite large? And then you end up sending a bunch of extra crap over the network.\n2. I don't think it would need to be extended as such, but I'll let others chime in.\n",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272483656,272483656,
instagibbs,2017-01-13T18:03:04Z,I think (2) isn't really needed since if you need more than a small number you can just do un-filtered or a few repeated calls. I'm no expert on this use-case though.,https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272504877,272504877,
JeremyRubin,2017-01-13T19:18:18Z,"@EthanHeilman thoughts?\n\n\nAnother optimization would be to allow for caching of this table on construction (maybe keep_cache/clear_cache parameters). This could reduce the O(n*m) complexity for making m repeated calls to O(n + m).",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272523114,272523114,
NicolasDorier,2017-01-13T19:41:10Z,"@JeremyRubin The reason why I am interested into that is that here is the code I am using for querying the transactions of a scriptPubKey: [Using listtransactions](https://github.com/NTumbleBit/NTumbleBit/blob/master/NTumbleBit.TumblerServer/Services/RPCServices/RPCBlockExplorerService.cs#L39) in tumblebit.\n\nAs far as I see this PR would be able to replace my listtransactions nicely. Will revi",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272528766,272528766,
EthanHeilman,2017-01-13T20:09:52Z,"@jnewbery \n>How large are the results from the listreceivedbyaddress rpc expected to be? If the rpc only ever returns a small number of addresses, it should be easy enough for the client to receive the full list of balances and then filter the list itself?\n\nTo perform a 800 user mix with TumbleBit we would need a watch list of 1600 addresses. However we there are times in which we only want ",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272535639,272535639,
jnewbery,2017-01-13T21:23:12Z,"@EthanHeilman - thanks. Sounds like there's widespread demand for this functionality.\n\nconcept ACK",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-272551389,272551389,
JeremyRubin,2017-01-20T23:12:13Z,"Addressed feedback, and squashed.\n\n@luke-jr it now errors if the passed in address was not a valid address.",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-274204695,274204695,
NicolasDorier,2017-02-06T07:03:25Z,"tested and integrated in NTumbleBit (https://github.com/NTumbleBit/NTumbleBit/commit/cd7c2f42eb7ba1ff071519dd0c2798a1f2fc43d7). This replace `listtransaction *` as I needed.\n\nOutside of my nit, ACK a96fbed",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-277600693,277600693,
JeremyRubin,2017-02-16T06:55:21Z,Nits addressed and squashed. Preserved the pre-squash here https://github.com/JeremyRubin/bitcoin/tree/listreceivedbyaddress-filtered-a96fbed73ed24591dd42845088639da0afaa436a,https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-280247434,280247434,
NicolasDorier,2017-02-16T07:30:13Z,ACK e6f053a66f9196e2d75d15af2f89facd693402ff,https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-280253773,280253773,
NicolasDorier,2017-03-13T06:17:28Z,@JeremyRubin you might need to add a line in client.cpp (https://github.com/bitcoin/bitcoin/issues/9982),https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-286023835,286023835,
NicolasDorier,2017-03-14T05:05:37Z,@JeremyRubin Let me know if you are a bit busy and prefer I take care of this PR.,https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-286323297,286323297,
JeremyRubin,2017-03-14T09:03:10Z,"@NicolasDorier Go for it, sorry for the hold up!",https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-286360806,286360806,
MarcoFalke,2017-03-14T14:11:31Z,Discussion continues at #9991,https://github.com/bitcoin/bitcoin/pull/9503#issuecomment-286432880,286432880,
jnewbery,2017-01-10T22:12:07Z,Why set minconf to 5 here? Can you just set it to 0 to match the call to listreceivedbyaddress() above?,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95469601,95469601,qa/rpc-tests/receivedby.py
jnewbery,2017-01-10T22:14:40Z,"nit: I think it's clearer to move these two lines below the `if(params.size() > 2)` block, so the params are being tested in order. I also have a slight preference to change this to a `if(params.size() > 3)` block to match the other tests.\n",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470091,95470091,src/wallet/rpcwallet.cpp
jnewbery,2017-01-10T22:14:42Z,nit: prefer not to have two blank lines in the middle of a function. Perhaps you can move one of them to between the if block and for block below.,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r95470098,95470098,src/wallet/rpcwallet.cpp
JeremyRubin,2017-01-13T15:17:27Z,"üëç \n",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96014158,96014158,qa/rpc-tests/receivedby.py
JeremyRubin,2017-01-13T15:44:39Z,"I agree that it's important for the style to be consistent. I opted to convert the other argument parsing in ListReceived to match this style, at the expense of a larger diff, for the benefit of declaring the input parameters const.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96019576,96019576,src/wallet/rpcwallet.cpp
NicolasDorier,2017-01-13T19:52:05Z,"`CBitcoinAddress{}` ? shouldn't it be `CBitcoinAddress()` ? (I guess not, as it build, but it is the first time I see that)",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96061983,96061983,src/wallet/rpcwallet.cpp
JeremyRubin,2017-01-13T20:26:39Z,should be equivalent; it's c++11 list initializer syntax,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96067862,96067862,src/wallet/rpcwallet.cpp
jnewbery,2017-01-13T21:24:37Z,"My personal preference is to keep the if statements rather than converting them to ternary conditionals, as I think that's clearer (and consistent with all the other RPCs). I'm not that concerned about having the parameters const.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r96076826,96076826,src/wallet/rpcwallet.cpp
luke-jr,2017-01-20T20:32:28Z,"Probably better to leave these alone. If params[0] is null, we really should silently use the default value... The longer version is also more readable/obvious.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r97150447,97150447,src/wallet/rpcwallet.cpp
luke-jr,2017-01-20T20:35:59Z,Should be false if params[3] is null.,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r97151014,97151014,src/wallet/rpcwallet.cpp
luke-jr,2017-01-20T20:37:04Z,Maybe we should be storing `filterAddress.Get()` above rather than a `CBitcoinAddress`?,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r97151164,97151164,src/wallet/rpcwallet.cpp
luke-jr,2017-01-20T20:40:06Z,"Prefer replacing all the params with an options Object, but perhaps that is better done in a separate PR.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r97151618,97151618,src/wallet/rpcwallet.cpp
JeremyRubin,2017-01-20T23:19:56Z,yeah. Separate PR...,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r97175107,97175107,src/wallet/rpcwallet.cpp
kallewoof,2017-01-30T11:11:48Z,Nit: space before end paren at 'only_address )' to match space after start paren at '( minconf',https://github.com/bitcoin/bitcoin/pull/9503#discussion_r98419935,98419935,src/wallet/rpcwallet.cpp
JeremyRubin,2017-01-31T21:07:33Z,Not sure if I should fix that -- that's how it was before my PR.,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r98770464,98770464,src/wallet/rpcwallet.cpp
NicolasDorier,2017-02-03T04:32:16Z,can you use `CNoDestination();` here ? just to be coherent with nulladdress. (and the fact that I never saw this syntax before),https://github.com/bitcoin/bitcoin/pull/9503#discussion_r99275356,99275356,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-02-07T23:11:38Z,"Yea, best to fix, I think.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r99954771,99954771,src/wallet/rpcwallet.cpp
TheBlueMatt,2017-02-07T23:11:46Z,"Yes, please.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r99954795,99954795,src/wallet/rpcwallet.cpp
kallewoof,2017-02-28T22:20:00Z,"Couldn't you do \n```Python\nassert_equal(len(res), 1)\n```\ninstead, here? That way the resulting `len(res)` would be visible in the output.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103565621,103565621,qa/rpc-tests/receivedby.py
kallewoof,2017-02-28T23:12:35Z,I believe you can use `assert_equal` here too.,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103575153,103575153,qa/rpc-tests/receivedby.py
kallewoof,2017-02-28T23:55:28Z,Why not `fFilterAddress && filterAddress != address`?,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103581418,103581418,src/wallet/rpcwallet.cpp
kallewoof,2017-02-28T23:58:56Z,"Nit: standard elsewhere is to show optionals as ""( opt1 opt2 ... )"", not ""(opt1 opt2 ...)"" (i.e. instead of removing starting space, add ending space)",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103581871,103581871,src/wallet/rpcwallet.cpp
kallewoof,2017-02-28T23:59:41Z,Nit: abide by surrounding style of no space after comma,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103581965,103581965,src/wallet/rpcwallet.cpp
JeremyRubin,2017-03-01T00:30:00Z,(a != b)  is not the same as !(a == b). I don't think != is defined here iirc.,https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103586056,103586056,src/wallet/rpcwallet.cpp
kallewoof,2017-03-01T00:45:53Z,"Not the same only in the sense that the `!=` operator may not be defined, right? Semantically they're identical. And yeah, I see now. `CNoDestination` has no `operator!=`. \n\nI wonder if it would be worth adding the one liner\n```C++\nfriend bool operator!=(const CNoDestination &a, const CNoDestination &b) { return false; }\n```\nto make this line look less confusing.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103588073,103588073,src/wallet/rpcwallet.cpp
JeremyRubin,2017-03-01T04:52:04Z,"Except it's not a one liner, it needs to be added for all sorts of classes.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103610480,103610480,src/wallet/rpcwallet.cpp
luke-jr,2017-03-01T06:01:32Z,"It's not a `CNoDestination`, it's a `CTxDestination`, which is a boost variant. Some supported versions of boost do not support `operator!=` for variants.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103615836,103615836,src/wallet/rpcwallet.cpp
kallewoof,2017-03-01T07:05:25Z,"I thought if all variants accepted the operator the variant would accept it, in which case adding it to `CNoDestination` would be enough, but maybe I'm off on that one.\nEdit: re-read your response; okay, didn't know that. Gotcha.",https://github.com/bitcoin/bitcoin/pull/9503#discussion_r103621999,103621999,src/wallet/rpcwallet.cpp
