[
  {
    "sha": "c769c4af11fc58dd4813d328c7f71042bc577676",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzY5YzRhZjExZmM1OGRkNDgxM2QzMjhjN2Y3MTA0MmJjNTc3Njc2",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-04-19T19:34:43Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-05-26T12:56:27Z"
      },
      "message": "Avoid counting failed connect attempts when probably offline.\n\nIf a node is offline failed outbound connection attempts will crank up\n the addrman counter and effectively blow away our state.\n\nThis change reduces the problem by only counting attempts made while\n the node believes it has outbound connections to at least two\n netgroups.\n\nConnect and addnode connections are also not counted, as there is no\n reason to unequally penalize them for their more frequent\n connections -- though there should be no real effect from this\n unless their addnode configureation is later removed.\n\nWasteful repeated connection attempts while only a few connections are\n up are avoided via nLastTry.\n\nThis is still somewhat incomplete protection because our outbound\n peers could be down but not timed out or might all be on 'local'\n networks (although the requirement for multiple netgroups helps).",
      "tree": {
        "sha": "7c86c072c97dd185d723cc1bac363a3c34b000ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c86c072c97dd185d723cc1bac363a3c34b000ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c769c4af11fc58dd4813d328c7f71042bc577676",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c769c4af11fc58dd4813d328c7f71042bc577676",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c769c4af11fc58dd4813d328c7f71042bc577676",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c769c4af11fc58dd4813d328c7f71042bc577676/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 17,
      "deletions": 17
    },
    "files": [
      {
        "sha": "0a1745c10c5394034067e02da4e2e69fff38077e",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c769c4af11fc58dd4813d328c7f71042bc577676/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c769c4af11fc58dd4813d328c7f71042bc577676/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=c769c4af11fc58dd4813d328c7f71042bc577676",
        "patch": "@@ -311,7 +311,7 @@ bool CAddrMan::Add_(const CAddress& addr, const CNetAddr& source, int64_t nTimeP\n     return fNew;\n }\n \n-void CAddrMan::Attempt_(const CService& addr, int64_t nTime)\n+void CAddrMan::Attempt_(const CService& addr, bool fCountFailure, int64_t nTime)\n {\n     CAddrInfo* pinfo = Find(addr);\n \n@@ -327,7 +327,7 @@ void CAddrMan::Attempt_(const CService& addr, int64_t nTime)\n \n     // update info\n     info.nLastTry = nTime;\n-    info.nAttempts++;\n+    if (fCountFailure) info.nAttempts++;\n }\n \n CAddrInfo CAddrMan::Select_(bool newOnly)"
      },
      {
        "sha": "65ca79fa02cfdba5a7162538b18963618e8bfa07",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c769c4af11fc58dd4813d328c7f71042bc577676/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c769c4af11fc58dd4813d328c7f71042bc577676/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=c769c4af11fc58dd4813d328c7f71042bc577676",
        "patch": "@@ -230,7 +230,7 @@ class CAddrMan\n     bool Add_(const CAddress &addr, const CNetAddr& source, int64_t nTimePenalty);\n \n     //! Mark an entry as attempted to connect.\n-    void Attempt_(const CService &addr, int64_t nTime);\n+    void Attempt_(const CService &addr, bool fCountFailure, int64_t nTime);\n \n     //! Select an address to connect to, if newOnly is set to true, only the new table is selected from.\n     CAddrInfo Select_(bool newOnly);\n@@ -532,12 +532,12 @@ class CAddrMan\n     }\n \n     //! Mark an entry as connection attempted to.\n-    void Attempt(const CService &addr, int64_t nTime = GetAdjustedTime())\n+    void Attempt(const CService &addr, bool fCountFailure, int64_t nTime = GetAdjustedTime())\n     {\n         {\n             LOCK(cs);\n             Check();\n-            Attempt_(addr, nTime);\n+            Attempt_(addr, fCountFailure, nTime);\n             Check();\n         }\n     }"
      },
      {
        "sha": "f30321869a81abccacb91f6881fee3ed58809f89",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c769c4af11fc58dd4813d328c7f71042bc577676/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c769c4af11fc58dd4813d328c7f71042bc577676/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c769c4af11fc58dd4813d328c7f71042bc577676",
        "patch": "@@ -367,7 +367,7 @@ CNode* FindNode(const CService& addr)\n     return NULL;\n }\n \n-CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n+CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure)\n {\n     if (pszDest == NULL) {\n         if (IsLocal(addrConnect))\n@@ -399,7 +399,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n             return NULL;\n         }\n \n-        addrman.Attempt(addrConnect);\n+        addrman.Attempt(addrConnect, fCountFailure);\n \n         // Add node\n         CNode* pnode = new CNode(hSocket, addrConnect, pszDest ? pszDest : \"\", false);\n@@ -416,7 +416,7 @@ CNode* ConnectNode(CAddress addrConnect, const char *pszDest)\n     } else if (!proxyConnectionFailed) {\n         // If connecting to the node failed, and failure is not caused by a problem connecting to\n         // the proxy, mark this as an attempt.\n-        addrman.Attempt(addrConnect);\n+        addrman.Attempt(addrConnect, fCountFailure);\n     }\n \n     return NULL;\n@@ -1533,7 +1533,7 @@ void static ProcessOneShot()\n     CAddress addr;\n     CSemaphoreGrant grant(*semOutbound, true);\n     if (grant) {\n-        if (!OpenNetworkConnection(addr, &grant, strDest.c_str(), true))\n+        if (!OpenNetworkConnection(addr, false, &grant, strDest.c_str(), true))\n             AddOneShot(strDest);\n     }\n }\n@@ -1549,7 +1549,7 @@ void ThreadOpenConnections()\n             BOOST_FOREACH(const std::string& strAddr, mapMultiArgs[\"-connect\"])\n             {\n                 CAddress addr;\n-                OpenNetworkConnection(addr, NULL, strAddr.c_str());\n+                OpenNetworkConnection(addr, false, NULL, strAddr.c_str());\n                 for (int i = 0; i < 10 && i < nLoop; i++)\n                 {\n                     MilliSleep(500);\n@@ -1633,7 +1633,7 @@ void ThreadOpenConnections()\n         }\n \n         if (addrConnect.IsValid())\n-            OpenNetworkConnection(addrConnect, &grant);\n+            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= min(nMaxConnections - 1, 2), &grant);\n     }\n }\n \n@@ -1655,7 +1655,7 @@ void ThreadOpenAddedConnections()\n             BOOST_FOREACH(const std::string& strAddNode, lAddresses) {\n                 CAddress addr;\n                 CSemaphoreGrant grant(*semOutbound);\n-                OpenNetworkConnection(addr, &grant, strAddNode.c_str());\n+                OpenNetworkConnection(addr, false, &grant, strAddNode.c_str());\n                 MilliSleep(500);\n             }\n             MilliSleep(120000); // Retry every 2 minutes\n@@ -1694,15 +1694,15 @@ void ThreadOpenAddedConnections()\n         BOOST_FOREACH(std::vector<CService>& vserv, lservAddressesToAdd)\n         {\n             CSemaphoreGrant grant(*semOutbound);\n-            OpenNetworkConnection(CAddress(vserv[i % vserv.size()]), &grant);\n+            OpenNetworkConnection(CAddress(vserv[i % vserv.size()]), false, &grant);\n             MilliSleep(500);\n         }\n         MilliSleep(120000); // Retry every 2 minutes\n     }\n }\n \n // if successful, this moves the passed grant to the constructed node\n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot)\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound, const char *pszDest, bool fOneShot)\n {\n     //\n     // Initiate outbound network connection\n@@ -1716,7 +1716,7 @@ bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOu\n     } else if (FindNode(std::string(pszDest)))\n         return false;\n \n-    CNode* pnode = ConnectNode(addrConnect, pszDest);\n+    CNode* pnode = ConnectNode(addrConnect, pszDest, fCountFailure);\n     boost::this_thread::interruption_point();\n \n     if (!pnode)"
      },
      {
        "sha": "3332496c051844f5ec6bead68bf7357ba9a33437",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c769c4af11fc58dd4813d328c7f71042bc577676/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c769c4af11fc58dd4813d328c7f71042bc577676/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c769c4af11fc58dd4813d328c7f71042bc577676",
        "patch": "@@ -83,7 +83,7 @@ CNode* FindNode(const CNetAddr& ip);\n CNode* FindNode(const CSubNet& subNet);\n CNode* FindNode(const std::string& addrName);\n CNode* FindNode(const CService& ip);\n-bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n+bool OpenNetworkConnection(const CAddress& addrConnect, bool fCountFailure, CSemaphoreGrant *grantOutbound = NULL, const char *strDest = NULL, bool fOneShot = false);\n void MapPort(bool fUseUPnP);\n unsigned short GetListenPort();\n bool BindListenPort(const CService &bindAddr, std::string& strError, bool fWhitelisted = false);"
      },
      {
        "sha": "8f62d636d86fd7a319b9f3006fa860249987b291",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c769c4af11fc58dd4813d328c7f71042bc577676/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c769c4af11fc58dd4813d328c7f71042bc577676/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=c769c4af11fc58dd4813d328c7f71042bc577676",
        "patch": "@@ -219,7 +219,7 @@ UniValue addnode(const UniValue& params, bool fHelp)\n     if (strCommand == \"onetry\")\n     {\n         CAddress addr;\n-        OpenNetworkConnection(addr, NULL, strNode.c_str());\n+        OpenNetworkConnection(addr, false, NULL, strNode.c_str());\n         return NullUniValue;\n     }\n "
      }
    ]
  },
  {
    "sha": "6182d10503ae3af222a7e4575724dce7ef563fec",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTgyZDEwNTAzYWUzYWYyMjJhN2U0NTc1NzI0ZGNlN2VmNTYzZmVj",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-04-19T20:39:38Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2016-05-26T12:56:32Z"
      },
      "message": "Do not increment nAttempts by more than one for every Good connection.\n\nThis slows the increase of the nAttempts in addrman while partitioned,\n even if the node hasn't yet noticed the partitioning.",
      "tree": {
        "sha": "1d3eb65c41fee943ae7c2cfcc8873188a1ffaab7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d3eb65c41fee943ae7c2cfcc8873188a1ffaab7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6182d10503ae3af222a7e4575724dce7ef563fec",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6182d10503ae3af222a7e4575724dce7ef563fec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6182d10503ae3af222a7e4575724dce7ef563fec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6182d10503ae3af222a7e4575724dce7ef563fec/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c769c4af11fc58dd4813d328c7f71042bc577676",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c769c4af11fc58dd4813d328c7f71042bc577676",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c769c4af11fc58dd4813d328c7f71042bc577676"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 16,
      "deletions": 2
    },
    "files": [
      {
        "sha": "00f6fe99e001c146024626bf6c66ab5e5305f5b5",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6182d10503ae3af222a7e4575724dce7ef563fec/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6182d10503ae3af222a7e4575724dce7ef563fec/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=6182d10503ae3af222a7e4575724dce7ef563fec",
        "patch": "@@ -197,6 +197,9 @@ void CAddrMan::MakeTried(CAddrInfo& info, int nId)\n void CAddrMan::Good_(const CService& addr, int64_t nTime)\n {\n     int nId;\n+\n+    nLastGood = nTime;\n+\n     CAddrInfo* pinfo = Find(addr, &nId);\n \n     // if not found, bail out\n@@ -327,7 +330,10 @@ void CAddrMan::Attempt_(const CService& addr, bool fCountFailure, int64_t nTime)\n \n     // update info\n     info.nLastTry = nTime;\n-    if (fCountFailure) info.nAttempts++;\n+    if (fCountFailure && info.nLastCountAttempt < nLastGood) {\n+        info.nLastCountAttempt = nTime;\n+        info.nAttempts++;\n+    }\n }\n \n CAddrInfo CAddrMan::Select_(bool newOnly)"
      },
      {
        "sha": "c5923e94171c6faadd6fcc34b4c845c3c7053615",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6182d10503ae3af222a7e4575724dce7ef563fec/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6182d10503ae3af222a7e4575724dce7ef563fec/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=6182d10503ae3af222a7e4575724dce7ef563fec",
        "patch": "@@ -29,6 +29,9 @@ class CAddrInfo : public CAddress\n     //! last try whatsoever by us (memory only)\n     int64_t nLastTry;\n \n+    //! last counted attempt (memory only)\n+    int64_t nLastCountAttempt;\n+\n private:\n     //! where knowledge about this address first came from\n     CNetAddr source;\n@@ -66,6 +69,7 @@ class CAddrInfo : public CAddress\n     {\n         nLastSuccess = 0;\n         nLastTry = 0;\n+        nLastCountAttempt = 0;\n         nAttempts = 0;\n         nRefCount = 0;\n         fInTried = false;\n@@ -200,6 +204,9 @@ class CAddrMan\n     //! list of \"new\" buckets\n     int vvNew[ADDRMAN_NEW_BUCKET_COUNT][ADDRMAN_BUCKET_SIZE];\n \n+    //! last time Good was called (memory only)\n+    int64_t nLastGood;\n+\n protected:\n     //! secret key to randomize bucket select with\n     uint256 nKey;\n@@ -458,6 +465,7 @@ class CAddrMan\n         nIdCount = 0;\n         nTried = 0;\n         nNew = 0;\n+        nLastGood = 1; //Initially at 1 so that \"never\" is strictly worse.\n     }\n \n     CAddrMan()"
      },
      {
        "sha": "c15a4692e169b0ff29035f3ed2327da10785e7dd",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6182d10503ae3af222a7e4575724dce7ef563fec/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6182d10503ae3af222a7e4575724dce7ef563fec/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=6182d10503ae3af222a7e4575724dce7ef563fec",
        "patch": "@@ -1633,7 +1633,7 @@ void ThreadOpenConnections()\n         }\n \n         if (addrConnect.IsValid())\n-            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= min(nMaxConnections - 1, 2), &grant);\n+            OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant);\n     }\n }\n "
      }
    ]
  }
]