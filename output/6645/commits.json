[
  {
    "sha": "77c60724733a98af5248fb95625046a5a3f82dc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3N2M2MDcyNDczM2E5OGFmNTI0OGZiOTU2MjUwNDZhNWEzZjgyZGMz",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T01:28:32Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-09-07T01:28:32Z"
      },
      "message": "Enable wallet key imports without rescan in pruned mode.\n\nComplete rescan is incompatible with pruning, but rescan is optional on\n our wallet key import RPCs.  Import on use is very useful in some common\n situations in conjunction with pruning, e.g. merchant payment tracking.\n\nThis reenables importprivkey/importaddress/importpubkey when rescan\n is not used.\n\nIn the future we should consider changing the rescan argument to allow depth\n or date to allow limited rescanning when compatible with the retained\n block depth.",
      "tree": {
        "sha": "23f819c8ac6eab24266e72edc4767c2af836630f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23f819c8ac6eab24266e72edc4767c2af836630f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/77c60724733a98af5248fb95625046a5a3f82dc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c60724733a98af5248fb95625046a5a3f82dc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/77c60724733a98af5248fb95625046a5a3f82dc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/77c60724733a98af5248fb95625046a5a3f82dc3/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536207f3167daad1fa3d60a1de7d9cb55db28ac9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536207f3167daad1fa3d60a1de7d9cb55db28ac9"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 9,
      "deletions": 6
    },
    "files": [
      {
        "sha": "7e22faac37df10724b32c5849fd058a94c3e6b19",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/77c60724733a98af5248fb95625046a5a3f82dc3/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/77c60724733a98af5248fb95625046a5a3f82dc3/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=77c60724733a98af5248fb95625046a5a3f82dc3",
        "patch": "@@ -97,8 +97,6 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing keys is disabled in pruned mode\");\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n \n@@ -114,6 +112,9 @@ UniValue importprivkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     CBitcoinSecret vchSecret;\n     bool fGood = vchSecret.SetString(strSecret);\n \n@@ -201,8 +202,6 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importaddress\", \"\\\"myscript\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing addresses is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -213,6 +212,9 @@ UniValue importaddress(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     // Whether to import a p2sh version, too\n     bool fP2SH = false;\n     if (params.size() > 3)\n@@ -264,8 +266,6 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n             + HelpExampleRpc(\"importpubkey\", \"\\\"mypubkey\\\", \\\"testing\\\", false\")\n         );\n \n-    if (fPruneMode)\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Importing public keys is disabled in pruned mode\");\n \n     string strLabel = \"\";\n     if (params.size() > 1)\n@@ -276,6 +276,9 @@ UniValue importpubkey(const UniValue& params, bool fHelp)\n     if (params.size() > 2)\n         fRescan = params[2].get_bool();\n \n+    if (fRescan && fPruneMode)\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Rescan is disabled in pruned mode\");\n+\n     if (!IsHex(params[0].get_str()))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Pubkey must be a hex string\");\n     std::vector<unsigned char> data(ParseHex(params[0].get_str()));"
      }
    ]
  }
]