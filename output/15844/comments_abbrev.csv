laanwj,2019-04-18T18:06:51Z,"I had to do this once for an embedded project, because the `la` files were confusing things (as they were generated in a different environment). But I'm not sure here, do you have evidence of ""massive overlinking"", what is the result of that? Does the build become slower, does the executable become larger? If so, can you show results please?",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484620356,484620356,
dongcarl,2019-04-18T18:40:36Z,"@laanwj \n\nThe result is usually `-lstdc++` and various dynamic linking flags we don't want ending up in the `.la` files, and so when we do the final bitcoin build, we're getting extra symbols that aren't necessary in our ELF table. This makes `make -C src check-symbols` fail.\n\nYou can expand ""Old content no. 1"" [here](https://github.com/bitcoin/bitcoin/pull/15277#issue-248219051) for an ex",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484634248,484634248,
theuni,2019-04-18T19:04:12Z,"This comes at my request, so concept ACK :)\n\nI suspect it may flesh out a few actual bugs, where we had assumed pkg-config was doing its job.",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484644738,484644738,
DrahtBot,2019-04-18T19:33:06Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16041](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16041.html) (depends: Build secondary deps statically. b",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484656662,484656662,
theuni,2019-04-18T22:34:26Z,@dongcarl Could you try this https://github.com/theuni/bitcoin/commit/f643224b4ca147f8c127804d1c03237eee345d03 as a test fix for the new failure?,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484711640,484711640,
dongcarl,2019-04-19T05:32:03Z,"@theuni Looking at the travis failures it's similar to something I've encountered before related to `_XEatDataWords` which is fixed by https://github.com/freedesktop/libXext/commit/bb24f2970f2e425f4df90c9b73d078ad15a73fbb. On my local builds I've just upgraded the package to the earliest version that contained that fix: https://github.com/freedesktop/libXext/releases/tag/libXext-1.3.3\n\nI can j",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-484772271,484772271,
theuni,2019-04-19T20:11:43Z,"@dongcarl Hah, yes, thanks for noticing. I just assumed ours wasn't ancient. Please include the bump with this PR, since it breaks the build without it.",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-485002582,485002582,
dongcarl,2019-04-19T22:03:07Z,"Looking at the [Travis build logs](https://travis-ci.org/bitcoin/bitcoin/builds/522310539) for https://github.com/bitcoin/bitcoin/pull/15844/commits/27ce43dcd512d1158c7400ac03afbdd1af2d7031, it would seem that cross builds are running into another problem that I assumed to be specific to my particular configuration. Namely, that we need to give the config flag `--enable-malloc0returnsnull`.\n\nI",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-485025030,485025030,
fanquake,2019-04-29T14:42:01Z,"Concept ACK\n\nLooks like there is still at least one issue with the `32-bit + dash [GOAL: install] [GUI: no BIP70]` build [here](https://travis-ci.org/bitcoin/bitcoin/jobs/522320123):\n```\nchecking for QTACCESSIBILITY... yes\nchecking for QTFB... yes\nchecking for X11XCB... yes\nchecking for QTXCBQPA... yes\nchecking for static Qt plugins: -lqminimal... no\nconfigure: error: Could not r",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-487607339,487607339,
fanquake,2019-04-30T04:47:36Z,"After depends building inside a `ubuntu:1804` Docker container.\n\n<details><summary><code>diffoscope x86_64-pc-linux-gnu-master/lib x86_64-pc-linux-gnu/lib</code></summary>\n\n```diff\n@@ -15,25 +15,21 @@\nlibQt5Network.a\nlibQt5PrintSupport.a\nlibQt5ServiceSupport.a\nlibQt5Test.a\nlibQt5ThemeSupport.a\nlibQt5Widgets.a\nlibQt5XcbQpa.a\n-libX11-xcb.la\nlibX11-xcb.so\nlibX11-xcb.so.1",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-487820131,487820131,
dongcarl,2019-05-15T20:11:04Z,Ready for re-review. Checks are passing.,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-492805455,492805455,
theuni,2019-05-16T16:41:55Z,"Thanks, having a look at this.",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-493143573,493143573,
dongcarl,2019-05-22T01:31:31Z,Updated with some commentary to help future cross-compilation target architectures/libcs.,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-494617593,494617593,
dongcarl,2019-05-22T19:43:45Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-494941755,494941755,
DrahtBot,2019-05-22T22:24:16Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit 3001cc61cf11e016c403ce83c9cbcfd3efcbcfd9 (master):\n * `15b471a7b08d6bd0c1cae96f073aef4b...` [bitcoin-0.18.99-osx-unsigned.dmg](https://drahtbot.space/gitian/bitcoin/bitcoin/3001cc61cf11e016c403ce83c9cbcfd3efcbcfd9/bitcoin-0.18.99-osx-unsigned.dmg)\n * `45262dff43ecd3eab71c5968210bbd31...` [bitcoin-0.18.99-osx64.tar.gz](https://drah,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-494996649,494996649,
fanquake,2019-05-24T18:22:39Z,"tACK 716afd6\n\n`.la`s all seem to be removed, and we pick up a `libexpat.a` because of 716afd6.\n\nBuilding on macOS 10.14.x:\n<details><summary><code>diffoscope x86_64-apple-darwin18.6.0/lib x86_64-apple-darwin18.6.0-716afd6a3/lib</code></summary>\n\n```diff\nlibboost_unit_test_framework-mt.a\nlibcrypto.a\nlibdb-4.8.a\nlibdb.a\nlibdb_cxx-4.8.a\nlibdb_cxx.a\nlibevent.a\n-libevent.l",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-495742042,495742042,
dongcarl,2019-05-24T18:24:45Z,Updated to also enforce the stricter `--disable-malloc0returnsnull` on `libX11`. Many thanks to @fanquake for his diligent review!,https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-495742933,495742933,
dongcarl,2019-05-28T15:07:18Z,"Update: Rebase on #16041.\n\nSorry for updating this so often, want to make sure that once people with merge access approve, the whole process is smooth.",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-496557743,496557743,
laanwj,2019-06-05T14:38:56Z,"ACK 8541cbea2, code changes look good to me",https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-499111620,499111620,
theuni,2019-05-20T20:16:05Z,"I looked into this a few weeks back, and I believe this is auto-detected, but we manage to get it wrong.\n\nCould you please explain exactly why this is necessary? I'm afraid we're accidentally building against system files.",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r285751699,285751699,depends/packages/libXext.mk
theuni,2019-05-20T20:30:13Z,"I think this is a remnant of the qt4 days. I can't recall why it would've been necessary, but I agree that this is correct now.",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r285756299,285756299,depends/packages/expat.mk
dongcarl,2019-05-20T20:46:33Z,"I mentioned this a little here: https://github.com/bitcoin/bitcoin/pull/15844#issuecomment-485025030\n\nAlso, it's recommended when cross-compiling here: https://www.x.org/wiki/CrossCompilingXorg/\n\nNot 100% sure what you mean by ""accidentally building against system files""?",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r285761700,285761700,depends/packages/libXext.mk
theuni,2019-05-20T20:58:24Z,"You're completely right, thank you.\n\nCould you add that link (or c/p the quote) as a comment? It's very helpful to know that it's for bypassing an AC_RUN_IFELSE.",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r285765679,285765679,depends/packages/libXext.mk
dongcarl,2019-05-20T22:29:16Z,"Actually, after looking at libXext's source I believe the stricter `--disable-malloc0returnsnull` works as well (I also confirmed thru a gitian build). I'll update this.",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r285790691,285790691,depends/packages/libXext.mk
fanquake,2019-05-24T18:09:08Z,"I've only looked into this briefly, but why does `--disable-malloc0returnsnull` only get passed to `libXext`?\n\nWith this change, building depends on Debian I'm seeing:\n```\nConfiguring libX11...\nchecking whether malloc(0) returns NULL... yes\n\nConfiguring libXext...\nchecking whether malloc(0) returns NULL... no\n``` \n\nDoes this matter?",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r287464925,287464925,depends/packages/libXext.mk
dongcarl,2019-05-24T18:16:32Z,"@fanquake Ah, that's the only place where I found problems. Looking at the `libX11` `aclocal.m4`, they haven't updated their `xorg-macros` yet so no problems yet. We should add `--disable-malloc0returnsnull` there as well just to future-proof. You didn't see any other `malloc(0)` checks other than these two?",https://github.com/bitcoin/bitcoin/pull/15844#discussion_r287467210,287467210,depends/packages/libXext.mk
fanquake,2019-05-24T18:21:23Z,I haven't seen any other `malloc(0)` checks üëç.,https://github.com/bitcoin/bitcoin/pull/15844#discussion_r287468769,287468769,depends/packages/libXext.mk
