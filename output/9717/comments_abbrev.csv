luke-jr,2017-02-08T03:25:55Z,"Rather rename it to `CheckBlockPoW` then... but considering that's already covered by `CheckProofOfWork`, perhaps `CheckBlockHeader` should just be removed entirely and inlined where applicable.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-278218882,278218882,
jtimon,2017-02-08T06:00:29Z,"I'm all for unifying CheckBlockHeader with CheckProofOfWork in pow.o, but one step at a time.\nHere are more future suggestions: \nhttps://github.com/jtimon/bitcoin/compare/pre-0.14-dont-call-me...jtimon:pre-0.14-encapsulate-pow\n\nCurrently the only difference between CheckProofOfWork and CheckBlockHeader and thus prevent from unifying the two functions are:\n\n1) Using CValidationState to ",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-278237040,278237040,
JeremyRubin,2017-03-29T20:56:01Z,"utACK.\n\nI'm not strongly in favor of this change though, given that if more functionality gets added to checkblockheader ever you would want to add fCheckPOW again.\n\nI am opposed to the other changes mentioned, ie, making checkproofofwork add the dos scores, seems better to keep checkproofofwork a pure function.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-290223084,290223084,
jtimon,2017-04-06T22:32:55Z,"If there are plans to add more functionality back to this functions (which I wouldn't oppose too), and I can only think that you are referring to this check https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L2967 then we definitely don't want either this PR or @luke-jr 's suggestion of going further and fully remove CheckBlockHeader in one step.\n\nBut if we don't plan to put tha",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-292344265,292344265,
NicolasDorier,2017-04-07T10:26:07Z,"utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3\n\nIf needed later, can add again.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-292501932,292501932,
jnewbery,2017-04-07T16:47:59Z,"Agree with @NicolasDorier - if `CheckBlockHeader()` is needed in future, it can be added.\n\nThis seems to be strictly an improvement, so utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-292589495,292589495,
jtimon,2017-04-11T02:32:40Z,"@NicolasDorier @jnewbery By ""CheckBlockHeader() can be added back if needed"" I understand that you're not only ok with this but also with inlining CheckBlockHeader as suggested by @luke-jr in a future PR and therefore not bringing the MAX_FUTURE_BLOCK_TIME check back from ContextualCheckBlockHeader to CheckBlockHeader in the foreseeable future. \n",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-293132577,293132577,
NicolasDorier,2017-04-11T11:08:46Z,"@jtimon yes, I am fine with both. Indeed no much point to have CheckBlockHeader anymore after this PR.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-293224913,293224913,
jtimon,2017-05-04T02:12:48Z,"We can also pass the blockHash to CheckBlockHeader, that would make it closer to CheckProofOfWork, which I imagine would be more interesting to @luke-jr ?",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-299082722,299082722,
TheBlueMatt,2017-05-05T20:36:50Z,utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3,https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-299569571,299569571,
ryanofsky,2017-05-08T19:11:52Z,"utACK 7b3b201f1ba5db4265363f29e3bea98686b6b5c3, good simplification.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-299962335,299962335,
jtimon,2017-05-09T16:14:58Z,"Sorry, forgot to make the function static while at it.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-300217396,300217396,
ryanofsky,2017-06-01T20:54:29Z,utACK 9855ecaf880840a42f2a9678dc6d9e753c11c531. Only change since last review is making the function static.,https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-305617441,305617441,
ryanofsky,2017-06-01T21:06:02Z,"This seems like it is ready to be merged. It's very minor, 4 people acked it, and #10339 depends on it.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-305620383,305620383,
luke-jr,2017-06-02T02:35:10Z,"NACK, there is no value in doing this, and it only makes the code less readable because it conflates the block header with the PoW.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-305673262,305673262,
TheBlueMatt,2017-06-07T19:36:43Z,@luke-jr so lets just remove CheckBlockHeader instead and call CheckProofOfWork where we need to?,https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-306901995,306901995,
luke-jr,2017-06-07T19:45:49Z,"@TheBlueMatt I don't see how that's an improvement, but at least it sounds non-confusing, and as such I wouldn't object.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-306904241,306904241,
jtimon,2017-06-07T21:58:39Z,"Needed rebase. Rebased on top of #10339 instead of the other way around.\n\n> @TheBlueMatt I don't see how that's an improvement, but at least it sounds non-confusing, and as such I wouldn't object.\n\nI'm confused, I thought removing CheckBlockHeader was your preference https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-278218882\n\n> makes the code less readable because it conflates",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-306937448,306937448,
luke-jr,2017-06-07T22:16:33Z,"> I'm confused, I thought removing CheckBlockHeader was your preference #9717 (comment)\n\nI'd rather that than making the code more confusing, but I don't see how either change is *useful*.\n\n> Right now they are the same thing\n\nThey are *conceptually* different things. If we add an additional check to CheckBlockHeader, we would not expect it to also be skipped when PoW checks are skippe",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-306941055,306941055,
jtimon,2017-06-25T00:06:14Z,"Sorry, removed the commit from #10339 again.\n\n> I'd rather that than making the code more confusing, but I don't see how either change is useful.\n\nIt is useful because it simplifies an interface that is more complex than it needs to be. Currently, if you're calling the function with fCheckPOW=false (could as well be named fActuallyDoSomethingWhenCallingThisFunction), you can just not call ",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-310873335,310873335,
luke-jr,2017-06-25T01:31:00Z,"A specific example we could put there right now, would be to check the nVersion is >0. But either way, they are still conceptually different things, and so long as it says `CheckBlockHeader`, it should be called whenever the block header is to be checked, independently of whether the PoW check ought to be skipped.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-310875954,310875954,
jtimon,2017-06-25T01:52:57Z,"> A specific example we could put there right now, would be to check the nVersion is >0.\n\nThank you. I guess that would currently be an optimization. mhmm, didn't we used to check that block.version > 0 in ContextualCheckBlockHeader ? where are we checking it now? If in the future we want to use the ""hardfork bit"" to signal hardforks, I think  ContextualCheckBlockHeader is the right place (ass",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-310876631,310876631,
jtimon,2017-08-26T02:33:34Z,"ping this, is it really controversial or only for @luke-jr ?",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-325075607,325075607,
jtimon,2017-09-30T23:55:37Z,"Closing for now, but don't discard to reopen if I ever touch or review the header of main::CheckBlockHeader again, my fault or not.",https://github.com/bitcoin/bitcoin/pull/9717#issuecomment-333343937,333343937,
