[
  {
    "sha": "ed0223ec59e5e7941abf17afd17ede393abea31b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDAyMjNlYzU5ZTVlNzk0MWFiZjE3YWZkMTdlZGUzOTNhYmVhMzFi",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-03-05T22:27:07Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-03-06T03:54:35Z"
      },
      "message": "scheduler: Workaround negative nsecs bug in boost's wait_until\n\nSome boost versions have a bug that can cause a time prior to system boot (or wake from sleep) to throw an exception instead of return timeout\nSee https://github.com/boostorg/thread/issues/308",
      "tree": {
        "sha": "0941a4b86930f2523a008adecc6a2373e96986cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0941a4b86930f2523a008adecc6a2373e96986cf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed0223ec59e5e7941abf17afd17ede393abea31b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed0223ec59e5e7941abf17afd17ede393abea31b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed0223ec59e5e7941abf17afd17ede393abea31b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed0223ec59e5e7941abf17afd17ede393abea31b/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9828f9a9962c1bee5c343847030b9cfd87a40a5e"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7fe340e0e964118f4aacb7bb9b3a8e52127b4f04",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed0223ec59e5e7941abf17afd17ede393abea31b/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed0223ec59e5e7941abf17afd17ede393abea31b/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=ed0223ec59e5e7941abf17afd17ede393abea31b",
        "patch": "@@ -56,8 +56,20 @@ void CScheduler::serviceQueue()\n             // Explicitly use a template here to avoid hitting that overload.\n             while (!shouldStop() && !taskQueue.empty()) {\n                 boost::chrono::system_clock::time_point timeToWaitFor = taskQueue.begin()->first;\n-                if (newTaskScheduled.wait_until<>(lock, timeToWaitFor) == boost::cv_status::timeout)\n-                    break; // Exit loop after timeout, it means we reached the time of the event\n+                try {\n+                    if (newTaskScheduled.wait_until<>(lock, timeToWaitFor) == boost::cv_status::timeout) {\n+                        break; // Exit loop after timeout, it means we reached the time of the event\n+                    }\n+                } catch (boost::thread_interrupted) {\n+                    // We need to make sure we don't ignore this, or the thread won't end\n+                    throw;\n+                } catch (...) {\n+                    // Some boost versions have a bug that can cause a time prior to system boot (or wake from sleep) to throw an exception instead of return timeout\n+                    // See https://github.com/boostorg/thread/issues/308\n+                    // Check if the time has passed and, if so, break gracefully\n+                    if (timeToWaitFor <= boost::chrono::system_clock::now()) break;\n+                    throw;\n+                }\n             }\n #endif\n             // If there are multiple threads, the queue can empty while we're waiting (another"
      }
    ]
  }
]