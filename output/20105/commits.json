[
  {
    "sha": "1afcd41a906e6417925e80578c0d850d269dc008",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYWZjZDQxYTkwNmU2NDE3OTI1ZTgwNTc4YzBkODUwZDI2OWRjMDA4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-08T11:18:28Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-10-08T11:28:38Z"
      },
      "message": "[net] Remove CombinerAll\n\nThis was introduced in 9519a9a4 for use with boost signals. Boost signals\nhave not been used in net since 8ad663c1, so this code is unused",
      "tree": {
        "sha": "d08c4cd655a4462a669d83f56879a4d7c2cad076",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d08c4cd655a4462a669d83f56879a4d7c2cad076"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1afcd41a906e6417925e80578c0d850d269dc008",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1afcd41a906e6417925e80578c0d850d269dc008",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1afcd41a906e6417925e80578c0d850d269dc008",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1afcd41a906e6417925e80578c0d850d269dc008/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9dd4de2832e298398436b957375d62de67f0a928",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9dd4de2832e298398436b957375d62de67f0a928",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9dd4de2832e298398436b957375d62de67f0a928"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 0,
      "deletions": 32
    },
    "files": [
      {
        "sha": "2b99d3bd9d5d6c39cdf75ed958996228addc0eb5",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1afcd41a906e6417925e80578c0d850d269dc008/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1afcd41a906e6417925e80578c0d850d269dc008/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=1afcd41a906e6417925e80578c0d850d269dc008",
        "patch": "@@ -595,21 +595,6 @@ void InterruptMapPort();\n void StopMapPort();\n uint16_t GetListenPort();\n \n-struct CombinerAll\n-{\n-    typedef bool result_type;\n-\n-    template<typename I>\n-    bool operator()(I first, I last) const\n-    {\n-        while (first != last) {\n-            if (!(*first)) return false;\n-            ++first;\n-        }\n-        return true;\n-    }\n-};\n-\n /**\n  * Interface for message handling\n  */"
      },
      {
        "sha": "c3816af0cd7acabad00e899f3bfada07d38650fb",
        "filename": "src/test/validation_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1afcd41a906e6417925e80578c0d850d269dc008/src/test/validation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1afcd41a906e6417925e80578c0d850d269dc008/src/test/validation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_tests.cpp?ref=1afcd41a906e6417925e80578c0d850d269dc008",
        "patch": "@@ -9,7 +9,6 @@\n \n #include <test/util/setup_common.h>\n \n-#include <boost/signals2/signal.hpp>\n #include <boost/test/unit_test.hpp>\n \n BOOST_FIXTURE_TEST_SUITE(validation_tests, TestingSetup)\n@@ -120,20 +119,4 @@ BOOST_AUTO_TEST_CASE(signet_parse_tests)\n     BOOST_CHECK(!CheckSignetBlockSolution(block, signet_params->GetConsensus()));\n }\n \n-static bool ReturnFalse() { return false; }\n-static bool ReturnTrue() { return true; }\n-\n-BOOST_AUTO_TEST_CASE(test_combiner_all)\n-{\n-    boost::signals2::signal<bool (), CombinerAll> Test;\n-    BOOST_CHECK(Test());\n-    Test.connect(&ReturnFalse);\n-    BOOST_CHECK(!Test());\n-    Test.connect(&ReturnTrue);\n-    BOOST_CHECK(!Test());\n-    Test.disconnect(&ReturnFalse);\n-    BOOST_CHECK(Test());\n-    Test.disconnect(&ReturnTrue);\n-    BOOST_CHECK(Test());\n-}\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]