[
  {
    "sha": "eefe19471868ef0cdc9d32473d0b57015e7647ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWZlMTk0NzE4NjhlZjBjZGM5ZDMyNDczZDBiNTcwMTVlNzY0N2Vl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-03T09:15:20Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-03T09:15:20Z"
      },
      "message": "[net] Consolidate logic around calling CAddrMan::Connected()\n\nCurrently, the logic around whether we called CAddrMan::Connected() for\na peer is spread between verack processing (where we discard inbound\npeers) and FinalizeNode (where we discard misbehaving and\nblock-relay-only peers). Consolidate that logic to a single place.\n\nAlso remove the CNode.fCurrentlyConnected bool, which is now\nredundant. We can rely on CNode.fSuccessfullyConnected, since the two\nbools were only ever flipped to true in the same place.",
      "tree": {
        "sha": "0a42752ec849c39d08c98355c79542875befb879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a42752ec849c39d08c98355c79542875befb879"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eefe19471868ef0cdc9d32473d0b57015e7647ee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eefe19471868ef0cdc9d32473d0b57015e7647ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eefe19471868ef0cdc9d32473d0b57015e7647ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eefe19471868ef0cdc9d32473d0b57015e7647ee/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5174b534da57066dca2e82a617c62919b6d638fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5174b534da57066dca2e82a617c62919b6d638fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5174b534da57066dca2e82a617c62919b6d638fd"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 3,
      "deletions": 8
    },
    "files": [
      {
        "sha": "3680625ec323f699e275044ccbedebea184f989a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eefe19471868ef0cdc9d32473d0b57015e7647ee/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eefe19471868ef0cdc9d32473d0b57015e7647ee/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=eefe19471868ef0cdc9d32473d0b57015e7647ee",
        "patch": "@@ -290,8 +290,6 @@ namespace {\n struct CNodeState {\n     //! The peer's address\n     const CService address;\n-    //! Whether we have a fully established connection.\n-    bool fCurrentlyConnected;\n     //! The best known block we know this peer has announced.\n     const CBlockIndex *pindexBestKnownBlock;\n     //! The hash of the last unknown block this peer has announced.\n@@ -390,7 +388,6 @@ struct CNodeState {\n     CNodeState(CAddress addrIn, bool is_inbound, bool is_manual)\n         : address(addrIn), m_is_inbound(is_inbound), m_is_manual_connection(is_manual)\n     {\n-        fCurrentlyConnected = false;\n         pindexBestKnownBlock = nullptr;\n         hashLastUnknownBlock.SetNull();\n         pindexLastCommonBlock = nullptr;\n@@ -855,8 +852,9 @@ void PeerManager::FinalizeNode(const CNode& node, bool& fUpdateConnectionTime) {\n     if (state->fSyncStarted)\n         nSyncStarted--;\n \n-    if (misbehavior == 0 && state->fCurrentlyConnected && !node.IsBlockOnlyConn()) {\n-        // Note: we avoid changing visible addrman state for block-relay-only peers\n+    if (node.fSuccessfullyConnected && misbehavior == 0 &&\n+        !node.IsBlockOnlyConn() && !node.IsInboundConn()) {\n+        // Only change visible addrman state for outbound, full-relay peers\n         fUpdateConnectionTime = true;\n     }\n \n@@ -2486,9 +2484,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         if (pfrom.fSuccessfullyConnected) return;\n \n         if (!pfrom.IsInboundConn()) {\n-            // Mark this node as currently connected, so we update its timestamp later.\n-            LOCK(cs_main);\n-            State(pfrom.GetId())->fCurrentlyConnected = true;\n             LogPrintf(\"New outbound peer connected: version: %d, blocks=%d, peer=%d%s (%s)\\n\",\n                       pfrom.nVersion.load(), pfrom.nStartingHeight,\n                       pfrom.GetId(), (fLogIPs ? strprintf(\", peeraddr=%s\", pfrom.addr.ToString()) : \"\"),"
      }
    ]
  },
  {
    "sha": "0bfce9dc46234b196a8b3679c21d6f8455962495",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmZjZTlkYzQ2MjM0YjE5NmE4YjM2NzljMjFkNmY4NDU1OTYyNDk1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-04T11:41:17Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-11-04T11:41:17Z"
      },
      "message": "[addrman] Fix Connected() comment",
      "tree": {
        "sha": "50518982ad7ed2b60d27add1dd92b62db54d4eea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50518982ad7ed2b60d27add1dd92b62db54d4eea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bfce9dc46234b196a8b3679c21d6f8455962495",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bfce9dc46234b196a8b3679c21d6f8455962495",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bfce9dc46234b196a8b3679c21d6f8455962495",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bfce9dc46234b196a8b3679c21d6f8455962495/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eefe19471868ef0cdc9d32473d0b57015e7647ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eefe19471868ef0cdc9d32473d0b57015e7647ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eefe19471868ef0cdc9d32473d0b57015e7647ee"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8b6c05e7ee42942aa2671dd60fb537e8b1998294",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 13,
        "deletions": 3,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bfce9dc46234b196a8b3679c21d6f8455962495/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bfce9dc46234b196a8b3679c21d6f8455962495/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=0bfce9dc46234b196a8b3679c21d6f8455962495",
        "patch": "@@ -258,8 +258,18 @@ friend class CAddrManTest;\n     //! Select several addresses at once.\n     void GetAddr_(std::vector<CAddress> &vAddr, size_t max_addresses, size_t max_pct) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n-    //! Mark an entry as currently-connected-to.\n-    void Connected_(const CService &addr, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n+    /** We have successfully connected to this peer. Calling this function\n+     *  updates the CAddress's nTime, which is used in our IsTerrible()\n+     *  decisions and gossiped to peers. Callers should be careful that updating\n+     *  this information doesn't leak topology information to network spies.\n+     *\n+     *  net_processing calls this function when it *disconnects* from a peer to\n+     *  not leak information about currently connected peers.\n+     *\n+     * @param[in]   addr     The address of the peer we were connected to\n+     * @param[in]   nTime    The time that we were last connected to this peer\n+     */\n+    void Connected_(const CService& addr, int64_t nTime) EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     //! Update an entry's service bits.\n     void SetServices_(const CService &addr, ServiceFlags nServices) EXCLUSIVE_LOCKS_REQUIRED(cs);\n@@ -676,7 +686,7 @@ friend class CAddrManTest;\n         return vAddr;\n     }\n \n-    //! Mark an entry as currently-connected-to.\n+    //! Outer function for Connected_()\n     void Connected(const CService &addr, int64_t nTime = GetAdjustedTime())\n     {\n         LOCK(cs);"
      }
    ]
  }
]