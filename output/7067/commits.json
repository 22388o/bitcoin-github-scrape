[
  {
    "sha": "0ed44a89aed08af0617c49738c12fa2aadb75356",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWQ0NGE4OWFlZDA4YWYwNjE3YzQ5NzM4YzEyZmEyYWFkYjc1MzU2",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T12:17:26Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T12:21:16Z"
      },
      "message": "add function to check if a transaction conflicts with the mempool or utxo set",
      "tree": {
        "sha": "667cb5375652c607d82007d7e8bfb47ae8c0be58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/667cb5375652c607d82007d7e8bfb47ae8c0be58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ed44a89aed08af0617c49738c12fa2aadb75356",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWTxA+AAoJECnUvLZBb1PsrDEP/R2CvtlfsJTi/Uz3lT3g/3F/\ndlgZklSy0fET3CGWaAdAyuuvSvElmtp6xKbhAi3GDCNDQXoaSXLjy0uB5a6ZROU4\nCkpGUMSkb5lRmXP0VTKFkVh8zITwxNgKBcxHe17b6hVQqRaxYCOmR20r3MhXpMf0\nvFaKW/nwW5EpLtaXOGLyQBbT++5Y87Vrqs+CPABXIEhb4trOLauREgtfgRtm/let\nb588oDx3PDT4yEdGDnyMqk10JOzTtRKMZYs9wt123nAICIUBIOEHEJHhUsIpbl7P\n+2TAXf0xF0lCD28r0VVlxoJmPF63/boMxVovDmmU2YZXpizK+JnIlaIxM+bfQP7o\nCIa4pUxYwrFw4mNnhRk44gPfFNxSecjAyFQ9AKDxeQeG0O0gcKDK5tocmxYoAyyB\n3HoH10TldIotUp1lSlWqqdgTYM9CuLlxnu+iEy8+79FwFxFGCVzyVDLBQFsE6TXu\n1u2N021E5zR5vu8BUgSCaDVaGk1p4liuPTHocCdJsVV2g3S6eh/F+EXuItbtZJXs\nd1WRSaMXyczRLOk3HmrvPtFAcBVlIEuyE1yo/1/pBbintcbS7hCgIV9X3E51NYTh\nuR0ECRmZ8xMMmKrNOTc/i6PXnKVV5To0VAs1yesO/yTZ5RpvpXNerogvHVF+kWd0\nGMKErvJPDPDtZ/ws76/2\n=TfEY\n-----END PGP SIGNATURE-----",
        "payload": "tree 667cb5375652c607d82007d7e8bfb47ae8c0be58\nparent 07b770caf3f57efb5f495661b33eda642e21b785\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1448021846 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1448022076 +0100\n\nadd function to check if a transaction conflicts with the mempool or utxo set\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed44a89aed08af0617c49738c12fa2aadb75356",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed44a89aed08af0617c49738c12fa2aadb75356",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed44a89aed08af0617c49738c12fa2aadb75356/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "07b770caf3f57efb5f495661b33eda642e21b785",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/07b770caf3f57efb5f495661b33eda642e21b785",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/07b770caf3f57efb5f495661b33eda642e21b785"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 28,
      "deletions": 1
    },
    "files": [
      {
        "sha": "794aabaf1ab0863b2b64805c663838e14f10ca76",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed44a89aed08af0617c49738c12fa2aadb75356/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed44a89aed08af0617c49738c12fa2aadb75356/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0ed44a89aed08af0617c49738c12fa2aadb75356",
        "patch": "@@ -800,6 +800,32 @@ static std::string FormatStateMessage(const CValidationState &state)\n         state.GetRejectCode());\n }\n \n+bool CheckForConflicts(const CTransaction &tx)\n+{\n+    LOCK(mempool.cs); // protect pool.mapNextTx\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        COutPoint outpoint = tx.vin[i].prevout;\n+        if (mempool.mapNextTx.count(outpoint))\n+        {\n+            // Disable replacement feature for now\n+            return true;\n+        }\n+    }\n+\n+    CCoinsView dummy;\n+    CCoinsViewCache view(&dummy);\n+\n+    CCoinsViewMemPool viewMemPool(pcoinsTip, mempool);\n+    view.SetBackend(viewMemPool);\n+\n+    // are the actual inputs available?\n+    if (!view.HaveInputs(tx))\n+        return true;\n+\n+    return false;\n+}\n+\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fOverrideMempoolLimit, bool fRejectAbsurdFee)\n {"
      },
      {
        "sha": "8376501554697cf06a567169339724de3603403a",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ed44a89aed08af0617c49738c12fa2aadb75356/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ed44a89aed08af0617c49738c12fa2aadb75356/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=0ed44a89aed08af0617c49738c12fa2aadb75356",
        "patch": "@@ -234,7 +234,8 @@ void Misbehaving(NodeId nodeid, int howmuch);\n void FlushStateToDisk();\n /** Prune block files and flush state to disk. */\n void PruneAndFlush();\n-\n+/** check if a transaction conflicts with the mempool or the utxo set **/\n+bool CheckForConflicts(const CTransaction &tx);\n /** (try to) add transaction to memory pool **/\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fOverrideMempoolLimit=false, bool fRejectAbsurdFee=false);"
      }
    ]
  },
  {
    "sha": "9a221ed95e491ad19a9aba475174e154b817594f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YTIyMWVkOTVlNDkxYWQxOWE5YWJhNDc1MTc0ZTE1NGI4MTc1OTRm",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T12:19:27Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T12:21:22Z"
      },
      "message": "[Wallet] improve detection of conflicted transactions",
      "tree": {
        "sha": "1bb953317999aeb6b22a250dea15ed5d93e66fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bb953317999aeb6b22a250dea15ed5d93e66fe3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9a221ed95e491ad19a9aba475174e154b817594f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWTxBCAAoJECnUvLZBb1PsDgMQAKDBNE4oYK+/sZfEqyC/xsBb\nrRkWHjcTcygUmeDgZb8dm8OdDIVPSlzfysoUr65nlM4BGk6gco+9l4nn+youL3bV\nQp/Ep3KpgbRn5yhMa1BafRA/8b2F9Rzo2htTsdk3OGq8wEdjnC7MktMKa0/Hp3Il\nlgjYJRoRL0tLXl7LUL4KstXvK2ZGPeF/N4aIXUPjeJUyIJ6ZRIMczwVdN17mQA29\n+lLNlxhVIOmcoACZ6s+1Dm6ujoqGDB5IWoQdFiG0U6GDDP1Ib/V+dtK5bmzaVqRC\n4PCqLwDnfyCU111IbiwbLc6fH3jCIao8losuzY7Gj3OpUGz32K1E3pFnTm6cBbK+\nGCZQL0Mw2kIhAK8rox3yYWUVGwq1vWpKOyZxq0nTtvJHLwT9EDfx+boAledS72Lr\nYIgduguLGE6t/C6zHKMqs5mBiJYa5XrumTF2V0tXm15d92Kpwkoza1dDT6Em/5oE\nSywxduLaip6XEpWHy0c6XkEVhFfPdOfN7vhlE04H9jFo7lMe06UFdTICYsw02r3o\nKftWLgy4d4uyi/KSka0RJ4MEFcEwDnXBZfUqthxTPH7aHjM+NObDLZr5FDn20DBg\nM4YlPs4HZkYQ049og6yEDPldp0fNCLw4nIrCSNrFJLrRyC4x+gSIw8FbbonjiaEo\nUAR6xsHkxcA2hV1OQs5x\n=qRmC\n-----END PGP SIGNATURE-----",
        "payload": "tree 1bb953317999aeb6b22a250dea15ed5d93e66fe3\nparent 0ed44a89aed08af0617c49738c12fa2aadb75356\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1448021967 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1448022082 +0100\n\n[Wallet] improve detection of conflicted transactions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a221ed95e491ad19a9aba475174e154b817594f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9a221ed95e491ad19a9aba475174e154b817594f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a221ed95e491ad19a9aba475174e154b817594f/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ed44a89aed08af0617c49738c12fa2aadb75356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ed44a89aed08af0617c49738c12fa2aadb75356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ed44a89aed08af0617c49738c12fa2aadb75356"
      }
    ],
    "stats": {
      "total": 147,
      "additions": 146,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d4ac476812889fdd0e848d0a839c62c091d9c529",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a221ed95e491ad19a9aba475174e154b817594f/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a221ed95e491ad19a9aba475174e154b817594f/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=9a221ed95e491ad19a9aba475174e154b817594f",
        "patch": "@@ -78,6 +78,7 @@\n     'rest.py',\n     'mempool_spendcoinbase.py',\n     'mempool_coinbase_spends.py',\n+    'mempool_limit.py',\n     'httpbasics.py',\n     'zapwallettxes.py',\n     'proxy_test.py',"
      },
      {
        "sha": "f676b2604fa12ef9190d63a8c29d39c73a930832",
        "filename": "qa/rpc-tests/mempool_limit.py",
        "status": "added",
        "additions": 119,
        "deletions": 0,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a221ed95e491ad19a9aba475174e154b817594f/qa/rpc-tests/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a221ed95e491ad19a9aba475174e154b817594f/qa/rpc-tests/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_limit.py?ref=9a221ed95e491ad19a9aba475174e154b817594f",
        "patch": "@@ -0,0 +1,119 @@\n+#!/usr/bin/env python2\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# Test mempool limiting together/eviction with the wallet\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import *\n+from pprint import pprint\n+\n+class MempoolLimitTest(BitcoinTestFramework):\n+\n+    def satoshi_round(self, amount):\n+        return  Decimal(amount).quantize(Decimal('0.00000001'), rounding=ROUND_DOWN)\n+\n+    def __init__(self):\n+        # Some pre-processing to create a bunch of OP_RETURN txouts to insert into transactions we create\n+        # So we have big transactions (and therefore can't fit very many into each block)\n+        # create one script_pubkey\n+        script_pubkey = \"6a4d0200\" #OP_RETURN OP_PUSH2 512 bytes\n+        for i in xrange (512):\n+            script_pubkey = script_pubkey + \"01\"\n+        # concatenate 128 txouts of above script_pubkey which we'll insert before the txout for change\n+        self.txouts = \"81\"\n+        for k in xrange(128):\n+            # add txout value\n+            self.txouts = self.txouts + \"0000000000000000\"\n+            # add length of script_pubkey\n+            self.txouts = self.txouts + \"fd0402\"\n+            # add script_pubkey\n+            self.txouts = self.txouts + script_pubkey\n+\n+    def create_confirmed_utxos(self, count):\n+        self.nodes[0].generate(int(0.5*90)+102)\n+        utxos = self.nodes[0].listunspent()\n+        iterations = count - len(utxos)\n+        addr1 = self.nodes[0].getnewaddress()\n+        addr2 = self.nodes[0].getnewaddress()\n+        if iterations <= 0:\n+            return utxos\n+        for i in xrange(iterations):\n+            t = utxos.pop()\n+            fee = self.relayfee\n+            inputs = []\n+            inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+            outputs = {}\n+            send_value = t['amount'] - fee\n+            outputs[addr1] = self.satoshi_round(send_value/2)\n+            outputs[addr2] = self.satoshi_round(send_value/2)\n+            raw_tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+            signed_tx = self.nodes[0].signrawtransaction(raw_tx)[\"hex\"]\n+            txid = self.nodes[0].sendrawtransaction(signed_tx)\n+\n+        while (self.nodes[0].getmempoolinfo()['size'] > 0):\n+            self.nodes[0].generate(1)\n+\n+        utxos = self.nodes[0].listunspent()\n+        assert(len(utxos) >= count)\n+        return utxos\n+\n+    def create_lots_of_big_transactions(self, utxos, fee):\n+        addr = self.nodes[0].getnewaddress()\n+        txids = []\n+        for i in xrange(len(utxos)):\n+            t = utxos.pop()\n+            inputs = []\n+            inputs.append({ \"txid\" : t[\"txid\"], \"vout\" : t[\"vout\"]})\n+            outputs = {}\n+            send_value = t['amount'] - fee\n+            outputs[addr] = self.satoshi_round(send_value)\n+            rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+            newtx = rawtx[0:92]\n+            newtx = newtx + self.txouts\n+            newtx = newtx + rawtx[94:]\n+            signresult = self.nodes[0].signrawtransaction(newtx, None, None, \"NONE\")\n+            txid = self.nodes[0].sendrawtransaction(signresult[\"hex\"], True)\n+            txids.append(txid)\n+        return txids\n+                    \n+    def setup_network(self):\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, [\"-maxmempool=5\", \"-spendzeroconfchange=0\", \"-debug\"]))\n+        self.nodes.append(start_node(1, self.options.tmpdir, []))\n+        connect_nodes(self.nodes[0], 1)\n+        self.is_network_split = False\n+        self.sync_all()\n+        self.relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+\n+    def setup_chain(self):\n+        print(\"Initializing test directory \"+self.options.tmpdir)\n+        initialize_chain_clean(self.options.tmpdir, 2)\n+\n+    def run_test(self):\n+        txids = []\n+        utxos = self.create_confirmed_utxos(90)\n+\n+        #create a mempool tx that will be evicted\n+        us0 = utxos.pop()\n+        inputs = [{ \"txid\" : us0[\"txid\"], \"vout\" : us0[\"vout\"]}]\n+        outputs = {self.nodes[1].getnewaddress() : 0.0001}\n+        tx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        txF = self.nodes[0].fundrawtransaction(tx)\n+        txFS = self.nodes[0].signrawtransaction(txF['hex'])\n+        txid = self.nodes[0].sendrawtransaction(txFS['hex'])\n+        pprint(self.nodes[0].lockunspent(True, [us0]))\n+\n+        relayfee = self.nodes[0].getnetworkinfo()['relayfee']\n+        base_fee = relayfee*100\n+        for i in xrange (4):\n+            txids.append([])\n+            txids[i] = self.create_lots_of_big_transactions(utxos[30*i:30*i+30], (i+1)*base_fee)\n+\n+        # by now, the tx should be evicted, check confirmation state\n+        txdata = self.nodes[0].gettransaction(txid);\n+        assert(txdata['confirmations'] ==  0) #confirmation should still be 0\n+\n+if __name__ == '__main__':\n+    MempoolLimitTest().main()"
      },
      {
        "sha": "1a248d56c3c6800821975a8773a53765d8088a09",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a221ed95e491ad19a9aba475174e154b817594f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a221ed95e491ad19a9aba475174e154b817594f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9a221ed95e491ad19a9aba475174e154b817594f",
        "patch": "@@ -289,6 +289,27 @@ void CWallet::SetBestChain(const CBlockLocator& loc)\n {\n     CWalletDB walletdb(strWalletFile);\n     walletdb.WriteBestBlock(loc);\n+\n+    UpdateConflicted();\n+}\n+\n+void CWallet::UpdatedBlockTip(const CBlockIndex *pindex)\n+{\n+    UpdateConflicted();\n+}\n+\n+void CWallet::UpdateConflicted()\n+{\n+    //check for conflicted transactions\n+    LOCK2(cs_main, cs_wallet);\n+    for (map<uint256, CWalletTx>::iterator it = mapWallet.begin(); it != mapWallet.end(); ++it)\n+    {\n+        CWalletTx* wtx = &((*it).second);\n+\n+        // update the conflicted cache flag\n+        if (wtx->GetDepthInMainChain() <= 0)\n+            wtx->conflicted = CheckForConflicts(*wtx);\n+    }\n }\n \n bool CWallet::SetMinVersion(enum WalletFeature nVersion, CWalletDB* pwalletdbIn, bool fExplicit)\n@@ -2849,7 +2870,7 @@ int CMerkleTx::GetDepthInMainChain(const CBlockIndex* &pindexRet) const\n {\n     AssertLockHeld(cs_main);\n     int nResult = GetDepthInMainChainINTERNAL(pindexRet);\n-    if (nResult == 0 && !mempool.exists(GetHash()))\n+    if (conflicted)\n         return -1; // Not in chain, not in mempool\n \n     return nResult;"
      },
      {
        "sha": "9800fab0a5691413da1007b1e95495a387dcc832",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9a221ed95e491ad19a9aba475174e154b817594f/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9a221ed95e491ad19a9aba475174e154b817594f/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9a221ed95e491ad19a9aba475174e154b817594f",
        "patch": "@@ -156,6 +156,7 @@ class CMerkleTx : public CTransaction\n public:\n     uint256 hashBlock;\n     int nIndex;\n+    bool conflicted; //memory only\n \n     CMerkleTx()\n     {\n@@ -171,6 +172,7 @@ class CMerkleTx : public CTransaction\n     {\n         hashBlock = uint256();\n         nIndex = -1;\n+        conflicted = false;\n     }\n \n     ADD_SERIALIZE_METHODS;\n@@ -695,6 +697,8 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetCredit(const CTransaction& tx, const isminefilter& filter) const;\n     CAmount GetChange(const CTransaction& tx) const;\n     void SetBestChain(const CBlockLocator& loc);\n+    void UpdatedBlockTip(const CBlockIndex *pindex);\n+    void UpdateConflicted();\n \n     DBErrors LoadWallet(bool& fFirstRunRet);\n     DBErrors ZapWalletTx(std::vector<CWalletTx>& vWtx);"
      }
    ]
  },
  {
    "sha": "4006e1e69a932544bae8cb704e10b2f8bf49494c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDA2ZTFlNjlhOTMyNTQ0YmFlOGNiNzA0ZTEwYjJmOGJmNDk0OTRj",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T13:19:48Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T13:19:48Z"
      },
      "message": "Include 0 confirmation wtx in ReacceptWalletTransactions\n\n<0 (-1) stands for conflicted transactions. Broadcast everything that is not in the chain.",
      "tree": {
        "sha": "c573d63fb4ed8b2ecefec292cfd70e76ecad34f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c573d63fb4ed8b2ecefec292cfd70e76ecad34f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4006e1e69a932544bae8cb704e10b2f8bf49494c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWTx5FAAoJECnUvLZBb1PsJ1gP/RZ5jHtBQva5DcFere00Lpv/\nkMPLkEnDeuvodTPn9JK/NVkjsnPgXwQkl/+Kllg7oMBe5u4NwDp+P+2emPRpX4F5\neFlbTbh8Lm5Sy2JM2AGCRB/1YeFYm7eLo8wnxwEB88P29ms0mAQOk+taupKfCx1V\ne8JJax3xwTh9fQXuvo5o6hUs7EmRD8LSN8S+epuF/DyGmGc/ZHZ98Tlvrf0y9C78\n1/2QA5jeAOsKY5R+Ulu1Z0TLrStsS6TgIa9T18MZNDlvOaB+lNOAAGQuUgUgwPTZ\nTgw3e1rF5Bwy2DL/CbXGj5a/LUYdADylqb5/JKPUn8NooTkmIpM6NojQYSHPn8O9\nt1Y4s+wqZejMBI3acwFJH489lOytE++NP1PtRUtySRb8MQEF/SEd4yiVR3Cnm2KL\nsG8lvV3Y4arpemRAXLG9v3oalmr+IIXz+NDesHqCdLGbrPHka6Yylnh8ucvV4Q1I\nxRWu4mNJ0FIZIFl7ABZHYiGN/eII7DrMdbG0mLgqe1GordeavbLZ5Ci+Ji5VWupc\n6WYn11Rt6AbOr+sot20TU96wEQcOp8DDZCiKnWxTdG6gsWGVi/nDD8I5AW5xI+O6\nKAsrXWyg3huhXLK7rkY7m1YsbKMNSOMFKFvw2T2DD5FNim3/PxpNbN1Ra130I1ga\ntlz4T/ZNKBekPiOzQYM9\n=SJP7\n-----END PGP SIGNATURE-----",
        "payload": "tree c573d63fb4ed8b2ecefec292cfd70e76ecad34f1\nparent 9a221ed95e491ad19a9aba475174e154b817594f\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1448025588 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1448025588 +0100\n\nInclude 0 confirmation wtx in ReacceptWalletTransactions\n\n<0 (-1) stands for conflicted transactions. Broadcast everything that is not in the chain.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4006e1e69a932544bae8cb704e10b2f8bf49494c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4006e1e69a932544bae8cb704e10b2f8bf49494c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4006e1e69a932544bae8cb704e10b2f8bf49494c/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9a221ed95e491ad19a9aba475174e154b817594f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9a221ed95e491ad19a9aba475174e154b817594f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9a221ed95e491ad19a9aba475174e154b817594f"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e10d0b96c8d89861080e47f91963a22710bd335f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4006e1e69a932544bae8cb704e10b2f8bf49494c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4006e1e69a932544bae8cb704e10b2f8bf49494c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4006e1e69a932544bae8cb704e10b2f8bf49494c",
        "patch": "@@ -1121,6 +1121,7 @@ void CWallet::ReacceptWalletTransactions()\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n+\n     LOCK2(cs_main, cs_wallet);\n     std::map<int64_t, CWalletTx*> mapSorted;\n \n@@ -1133,7 +1134,7 @@ void CWallet::ReacceptWalletTransactions()\n \n         int nDepth = wtx.GetDepthInMainChain();\n \n-        if (!wtx.IsCoinBase() && nDepth < 0) {\n+        if (!wtx.IsCoinBase() && nDepth <= 0) {\n             mapSorted.insert(std::make_pair(wtx.nOrderPos, &wtx));\n         }\n     }\n@@ -2871,7 +2872,7 @@ int CMerkleTx::GetDepthInMainChain(const CBlockIndex* &pindexRet) const\n     AssertLockHeld(cs_main);\n     int nResult = GetDepthInMainChainINTERNAL(pindexRet);\n     if (conflicted)\n-        return -1; // Not in chain, not in mempool\n+        return -1;\n \n     return nResult;\n }"
      }
    ]
  },
  {
    "sha": "dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYmFmZmU4ZjAyMTJkMGNkZjY1YmI1YTUyMTk4OTVjNGZjNjMxNzk3",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T13:44:32Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-20T18:50:46Z"
      },
      "message": "Don't mark utxo-set-known transactions as conflicted",
      "tree": {
        "sha": "c1c0e46b5d640e2ad65b4c4641f7a16e920203be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c1c0e46b5d640e2ad65b4c4641f7a16e920203be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWT2uIAAoJECnUvLZBb1PsH4EQAKOUuCCRExa6xM4NEDq+2XOu\n1LAEi596w/5NYFtj2spNliksSDqHt5+NQZ3h30pNLj+7dcTKUPxPWOSJKF0kzWJ1\n1WtkS3d5NDqFDWxcLocAfoE3OJC08lqey6DlCuWmeV/13X/IalzkPzT9LqlZH+vK\nWgyM7r8RjZq24dLoUDjHjpz4zHs7UASPLHus54ITBx/UeLl7coepU/nqkoT7gU8e\nMOCO1VPZNVdGm8AyNz5Qme9ca8XEDPIeYn20GkTGxp4iQy9zqhieeWlSQdT3hz/J\nD/Jfhn2ZQyxt91mJbjT1UDkAN/iQZUKZx336fdi7tWiK8kDjJ2DMDu57cI315EuY\nizIufxImWEGz03619+kktRdtqt6in6dxc+rXmMW113o4+eBbRgWPNN1UACQ8AwAw\nlp4gvkpXD2CqGNb97Pejxnvm/s9SZMDXQ5U5/IAo/QpghYG15PjWEZ+XiZl+hAh2\nY+LS7VjvfFPAWSEv/wlF4BfNDMlvuh0DvqpJ0qxRDZZ+gD4fiD2Vn/dggSTU2qws\n4zHnFEhQTmKlp8Xn/WsIGXuJnJxt5wQuE5BVo74MJc/MvU/tLNOEkEyJlr6hQ54/\nEGDDxSAvJTE6Dxswj540c8bShSO7GVlmVSSO9jNUdMftQRdN5plF7q82hX6BNWVO\nYGABzpUezi9jGa5uqZxY\n=BGOH\n-----END PGP SIGNATURE-----",
        "payload": "tree c1c0e46b5d640e2ad65b4c4641f7a16e920203be\nparent 4006e1e69a932544bae8cb704e10b2f8bf49494c\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1448027072 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1448045446 +0100\n\nDon't mark utxo-set-known transactions as conflicted\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbaffe8f0212d0cdf65bb5a5219895c4fc631797/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4006e1e69a932544bae8cb704e10b2f8bf49494c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4006e1e69a932544bae8cb704e10b2f8bf49494c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4006e1e69a932544bae8cb704e10b2f8bf49494c"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "50b22de6bd2defc817adcd6b48e277f49cb4b291",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbaffe8f0212d0cdf65bb5a5219895c4fc631797/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbaffe8f0212d0cdf65bb5a5219895c4fc631797/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
        "patch": "@@ -819,6 +819,10 @@ bool CheckForConflicts(const CTransaction &tx)\n     CCoinsViewMemPool viewMemPool(pcoinsTip, mempool);\n     view.SetBackend(viewMemPool);\n \n+    // no conflict in case of the tx is already known\n+    if (view.HaveCoins(tx.GetHash()))\n+        return false;\n+\n     // are the actual inputs available?\n     if (!view.HaveInputs(tx))\n         return true;"
      },
      {
        "sha": "c63efdc5d6f9b100a3603cfbb6959d60827314b1",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dbaffe8f0212d0cdf65bb5a5219895c4fc631797/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dbaffe8f0212d0cdf65bb5a5219895c4fc631797/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
        "patch": "@@ -1121,7 +1121,6 @@ void CWallet::ReacceptWalletTransactions()\n     // If transactions aren't being broadcasted, don't let them into local mempool either\n     if (!fBroadcastTransactions)\n         return;\n-\n     LOCK2(cs_main, cs_wallet);\n     std::map<int64_t, CWalletTx*> mapSorted;\n "
      }
    ]
  },
  {
    "sha": "76972400c54210ce68a02458b2642de18c3c1f7a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Njk3MjQwMGM1NDIxMGNlNjhhMDI0NThiMjY0MmRlMThjM2MxZjdh",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-24T12:02:12Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2015-11-24T12:02:12Z"
      },
      "message": "CheckForConflicts(): Rearrange test order",
      "tree": {
        "sha": "213280316f556f4665506a84f8cc3075a0e593a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/213280316f556f4665506a84f8cc3075a0e593a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76972400c54210ce68a02458b2642de18c3c1f7a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "expired_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJWVFHwAAoJECnUvLZBb1Ps0EcQAIpUMvT9+myT7aFQto1zIDH1\nkou2nXlfN0lNkzUIbH9Dyahg8yQqIIBJ/PsJ8Fuggk/BI8XrI6CVHpG9nogSme5L\nxGjp3IuJinKM5vTuN6r4QdnoXuhpO7Vpz4zJeCPb5LbJguomg4llE04s10dcRXwV\nNxDh5nYWqETWr30+NJ1g91S5xC9SkTjti8ANc0yYhyMmXmj56QwjFAzj2dHKvL1w\no5/Yqz+CpgHcrazJB6YEjj/MfQE7tRt8AlArwbnrvCkRPt79F2rSD3gYU3ksZv1W\nQYNRPQhTJHnM+dDfI8W76dzK6K97k7p7X2/YnquDgpZMtoOmOJMfR5VBu5f+PGlF\npTwUsWuqyAllydNmxNw200XhwdYFWxNz5VvyTF4mXuW0Kf6K+nJe/knfPbWCPQeK\nbAHn4SkXWv6A8gH98btJ4ybyhCGImyouvtyPDyFWDcYxY1GXk8on8J8R3I3uOQFz\nn9/uwTdXtOGuLpNtqhk/CBg73j/EDzPH+ffQM93O4vFfeAHOXmInHYuemI19+HIs\nAORN1zsXgmfrfNZ5Zt9DR6tZivldaK/k9uVPpdaYaH1AgrthlMD1woyb+RI2EIIR\n80830V13EbISsADXh2l4znm+QpPYOpCoNDSEVErSlp35Ip7yFSgeWM2JYzJ/bFWd\n4oP9ucS+sbZR+0gJfdee\n=Kxuz\n-----END PGP SIGNATURE-----",
        "payload": "tree 213280316f556f4665506a84f8cc3075a0e593a7\nparent dbaffe8f0212d0cdf65bb5a5219895c4fc631797\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1448366532 +0100\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1448366532 +0100\n\nCheckForConflicts(): Rearrange test order\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76972400c54210ce68a02458b2642de18c3c1f7a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76972400c54210ce68a02458b2642de18c3c1f7a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76972400c54210ce68a02458b2642de18c3c1f7a/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbaffe8f0212d0cdf65bb5a5219895c4fc631797",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbaffe8f0212d0cdf65bb5a5219895c4fc631797"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 11,
      "deletions": 10
    },
    "files": [
      {
        "sha": "378fba1350425114ee258e799970c38525c88c9d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76972400c54210ce68a02458b2642de18c3c1f7a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76972400c54210ce68a02458b2642de18c3c1f7a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=76972400c54210ce68a02458b2642de18c3c1f7a",
        "patch": "@@ -802,16 +802,7 @@ static std::string FormatStateMessage(const CValidationState &state)\n \n bool CheckForConflicts(const CTransaction &tx)\n {\n-    LOCK(mempool.cs); // protect pool.mapNextTx\n-    for (unsigned int i = 0; i < tx.vin.size(); i++)\n-    {\n-        COutPoint outpoint = tx.vin[i].prevout;\n-        if (mempool.mapNextTx.count(outpoint))\n-        {\n-            // Disable replacement feature for now\n-            return true;\n-        }\n-    }\n+    LOCK(mempool.cs);\n \n     CCoinsView dummy;\n     CCoinsViewCache view(&dummy);\n@@ -823,6 +814,16 @@ bool CheckForConflicts(const CTransaction &tx)\n     if (view.HaveCoins(tx.GetHash()))\n         return false;\n \n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        COutPoint outpoint = tx.vin[i].prevout;\n+        if (mempool.mapNextTx.count(outpoint))\n+        {\n+            // Disable replacement feature for now\n+            return true;\n+        }\n+    }\n+\n     // are the actual inputs available?\n     if (!view.HaveInputs(tx))\n         return true;"
      }
    ]
  }
]