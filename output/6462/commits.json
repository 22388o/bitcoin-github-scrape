[
  {
    "sha": "557f8eac7aa96059270a36358642fbce93ac0478",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTdmOGVhYzdhYTk2MDU5MjcwYTM2MzU4NjQyZmJjZTkzYWMwNDc4",
    "commit": {
      "author": {
        "name": "Pavol Rusnak",
        "email": "stick@gk2.sk",
        "date": "2015-07-27T23:58:25Z"
      },
      "committer": {
        "name": "Pavol Rusnak",
        "email": "stick@gk2.sk",
        "date": "2015-07-31T14:19:23Z"
      },
      "message": "implement uacomment config parameter\nwhich can add comments to user agent as per BIP-0014",
      "tree": {
        "sha": "963e6f48d33b75d56f735bff136bc8dc03450192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963e6f48d33b75d56f735bff136bc8dc03450192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/557f8eac7aa96059270a36358642fbce93ac0478",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/557f8eac7aa96059270a36358642fbce93ac0478",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/557f8eac7aa96059270a36358642fbce93ac0478",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/557f8eac7aa96059270a36358642fbce93ac0478/comments",
    "author": {
      "login": "prusnak",
      "id": 42201,
      "node_id": "MDQ6VXNlcjQyMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prusnak",
      "html_url": "https://github.com/prusnak",
      "followers_url": "https://api.github.com/users/prusnak/followers",
      "following_url": "https://api.github.com/users/prusnak/following{/other_user}",
      "gists_url": "https://api.github.com/users/prusnak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
      "organizations_url": "https://api.github.com/users/prusnak/orgs",
      "repos_url": "https://api.github.com/users/prusnak/repos",
      "events_url": "https://api.github.com/users/prusnak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prusnak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "prusnak",
      "id": 42201,
      "node_id": "MDQ6VXNlcjQyMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prusnak",
      "html_url": "https://github.com/prusnak",
      "followers_url": "https://api.github.com/users/prusnak/followers",
      "following_url": "https://api.github.com/users/prusnak/following{/other_user}",
      "gists_url": "https://api.github.com/users/prusnak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
      "organizations_url": "https://api.github.com/users/prusnak/orgs",
      "repos_url": "https://api.github.com/users/prusnak/repos",
      "events_url": "https://api.github.com/users/prusnak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prusnak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "86cfd23f68367af072500b1758a4c446cdd36e74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/86cfd23f68367af072500b1758a4c446cdd36e74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/86cfd23f68367af072500b1758a4c446cdd36e74"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "42ca69e096785c51d56834e373936f7359cb13b4",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/557f8eac7aa96059270a36358642fbce93ac0478/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/557f8eac7aa96059270a36358642fbce93ac0478/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=557f8eac7aa96059270a36358642fbce93ac0478",
        "patch": "@@ -445,7 +445,7 @@ void CNode::PushVersion()\n     else\n         LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), id);\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>()), nBestHeight, true);\n+                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>()), nBestHeight, true);\n }\n \n "
      },
      {
        "sha": "f9c7d3ad30e3476ed65aaba40afbfc953242b2ee",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/557f8eac7aa96059270a36358642fbce93ac0478/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/557f8eac7aa96059270a36358642fbce93ac0478/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=557f8eac7aa96059270a36358642fbce93ac0478",
        "patch": "@@ -444,7 +444,7 @@ UniValue getnetworkinfo(const UniValue& params, bool fHelp)\n     UniValue obj(UniValue::VOBJ);\n     obj.push_back(Pair(\"version\",       CLIENT_VERSION));\n     obj.push_back(Pair(\"subversion\",\n-        FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, std::vector<string>())));\n+        FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>())));\n     obj.push_back(Pair(\"protocolversion\",PROTOCOL_VERSION));\n     obj.push_back(Pair(\"localservices\",       strprintf(\"%016x\", nLocalServices)));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));"
      }
    ]
  },
  {
    "sha": "7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Yjc5Y2JkNzIyZDM1YjgxMTNkNTEzNmIwNmQ0YThlNWZkNTY5ZmM2",
    "commit": {
      "author": {
        "name": "Pavol Rusnak",
        "email": "stick@gk2.sk",
        "date": "2015-07-31T16:05:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-08-05T07:38:20Z"
      },
      "message": "limit total length of user agent comments\n\nReworked-By: Wladimir J. van der Laan <laanwj@gmail.com>",
      "tree": {
        "sha": "484ed735e5644daf574fbf4bc2dedfe035a29373",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/484ed735e5644daf574fbf4bc2dedfe035a29373"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/comments",
    "author": {
      "login": "prusnak",
      "id": 42201,
      "node_id": "MDQ6VXNlcjQyMjAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42201?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prusnak",
      "html_url": "https://github.com/prusnak",
      "followers_url": "https://api.github.com/users/prusnak/followers",
      "following_url": "https://api.github.com/users/prusnak/following{/other_user}",
      "gists_url": "https://api.github.com/users/prusnak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prusnak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prusnak/subscriptions",
      "organizations_url": "https://api.github.com/users/prusnak/orgs",
      "repos_url": "https://api.github.com/users/prusnak/repos",
      "events_url": "https://api.github.com/users/prusnak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prusnak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "557f8eac7aa96059270a36358642fbce93ac0478",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/557f8eac7aa96059270a36358642fbce93ac0478",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/557f8eac7aa96059270a36358642fbce93ac0478"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "91519e2935ad9a02eb7f0699e023c3b78577bc48",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
        "patch": "@@ -1018,6 +1018,13 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     RegisterNodeSignals(GetNodeSignals());\n \n+    // format user agent, check total size\n+    strSubVersion = FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>());\n+    if (strSubVersion.size() > MAX_SUBVERSION_LENGTH) {\n+        return InitError(strprintf(\"Total length of network version string %i exceeds maximum of %i characters. Reduce the number and/or size of uacomments.\",\n+            strSubVersion.size(), MAX_SUBVERSION_LENGTH));\n+    }\n+\n     if (mapArgs.count(\"-onlynet\")) {\n         std::set<enum Network> nets;\n         BOOST_FOREACH(const std::string& snet, mapMultiArgs[\"-onlynet\"]) {"
      },
      {
        "sha": "b1f5e3ffd728bfa758ad5d9cee8a02a44437c3e1",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
        "patch": "@@ -3859,7 +3859,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         if (!vRecv.empty())\n             vRecv >> addrFrom >> nNonce;\n         if (!vRecv.empty()) {\n-            vRecv >> LIMITED_STRING(pfrom->strSubVer, 256);\n+            vRecv >> LIMITED_STRING(pfrom->strSubVer, MAX_SUBVERSION_LENGTH);\n             pfrom->cleanSubVer = SanitizeString(pfrom->strSubVer);\n         }\n         if (!vRecv.empty())"
      },
      {
        "sha": "080d9bb347e6812b1df948a111474d2457c064ac",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
        "patch": "@@ -83,6 +83,7 @@ CAddrMan addrman;\n int nMaxConnections = 125;\n int nWhiteConnections = 0;\n bool fAddressesInitialized = false;\n+std::string strSubVersion;\n \n vector<CNode*> vNodes;\n CCriticalSection cs_vNodes;\n@@ -445,7 +446,7 @@ void CNode::PushVersion()\n     else\n         LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nBestHeight, addrMe.ToString(), id);\n     PushMessage(\"version\", PROTOCOL_VERSION, nLocalServices, nTime, addrYou, addrMe,\n-                nLocalHostNonce, FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>()), nBestHeight, true);\n+                nLocalHostNonce, strSubVersion, nBestHeight, true);\n }\n \n "
      },
      {
        "sha": "62f84bbe4560436e268ac21ec82aab53906e9a10",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
        "patch": "@@ -46,6 +46,8 @@ static const unsigned int MAX_INV_SZ = 50000;\n static const unsigned int MAX_ADDR_TO_SEND = 1000;\n /** Maximum length of incoming protocol messages (no message over 2 MiB is currently acceptable). */\n static const unsigned int MAX_PROTOCOL_MESSAGE_LENGTH = 2 * 1024 * 1024;\n+/** Maximum length of strSubVer in `version` message */\n+static const unsigned int MAX_SUBVERSION_LENGTH = 256;\n /** -listen default */\n static const bool DEFAULT_LISTEN = true;\n /** -upnp default */\n@@ -166,6 +168,9 @@ extern CCriticalSection cs_vAddedNodes;\n extern NodeId nLastNodeId;\n extern CCriticalSection cs_nLastNodeId;\n \n+/** Subversion as sent to the P2P network in `version` messages */\n+extern std::string strSubVersion;\n+\n struct LocalServiceInfo {\n     int nScore;\n     int nPort;"
      },
      {
        "sha": "2528e2cbd583a190a47c95f11d1e0833d78a4d68",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b79cbd722d35b8113d5136b06d4a8e5fd569fc6/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=7b79cbd722d35b8113d5136b06d4a8e5fd569fc6",
        "patch": "@@ -443,8 +443,7 @@ UniValue getnetworkinfo(const UniValue& params, bool fHelp)\n \n     UniValue obj(UniValue::VOBJ);\n     obj.push_back(Pair(\"version\",       CLIENT_VERSION));\n-    obj.push_back(Pair(\"subversion\",\n-        FormatSubVersion(CLIENT_NAME, CLIENT_VERSION, mapMultiArgs.count(\"-uacomment\") ? mapMultiArgs[\"-uacomment\"] : std::vector<string>())));\n+    obj.push_back(Pair(\"subversion\",    strSubVersion));\n     obj.push_back(Pair(\"protocolversion\",PROTOCOL_VERSION));\n     obj.push_back(Pair(\"localservices\",       strprintf(\"%016x\", nLocalServices)));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));"
      }
    ]
  }
]