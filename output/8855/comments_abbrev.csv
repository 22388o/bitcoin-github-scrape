jtimon,2016-10-03T15:05:00Z,Pushed with more changes added to the OP.\n,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-251131552,251131552,
jtimon,2016-10-21T00:44:42Z,Added 1 commit.\nSorry for gratuitously rebasing...\n,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-255265822,255265822,
jtimon,2016-11-03T21:58:51Z,Needed rebase\n,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-258286863,258286863,
jtimon,2016-11-10T23:20:37Z,Needed rebase to adapt to a new test using Params(std::string).\n,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-259837304,259837304,
jtimon,2016-11-14T18:23:15Z,Needed rebase for bench/checkblock.cpp again\n,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-260417514,260417514,
jtimon,2016-11-15T23:01:52Z,"Updated, hopefully fixing all nits.\n",https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-260798419,260798419,
jtimon,2016-11-18T03:02:59Z,"Solved auto-nits, also rebased.\n",https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-261437024,261437024,
jtimon,2016-11-18T03:25:39Z,"Updated and hopefully fixed latest small nits. Thanks again for the nits.\n",https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-261439767,261439767,
jtimon,2016-12-02T03:10:35Z,Needed trivial rebase.,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-264362461,264362461,
jtimon,2017-01-08T23:07:19Z,Trivial rebase done.,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-271187212,271187212,
jtimon,2017-01-24T23:23:18Z,Needed rebase again.,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-274971893,274971893,
jtimon,2017-03-07T00:48:21Z,"Didn't need rebase, but the second commit could stop compiling on merge at any time without apparently needing rebase. So I just did it, no changes needed this time.",https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-284584215,284584215,
jtimon,2017-03-23T20:15:43Z,"Rebased again in search of new uses of Params(std::string) (which would make this PR fail on compilation if merged), none found.\n",https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-288846676,288846676,
kallewoof,2017-04-03T04:37:07Z,utACK 33b78e16e0023191663fa209ac08608b2b48cfab,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-291047043,291047043,
jtimon,2017-05-03T16:32:44Z,Needed trivial rebase after #10075,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-298964764,298964764,
instagibbs,2017-05-04T20:03:23Z,utACK https://github.com/bitcoin/bitcoin/pull/8855/commits/c1082a7d359ad984e84195175a01f2f30671b172,https://github.com/bitcoin/bitcoin/pull/8855#issuecomment-299293710,299293710,
sipa,2016-11-15T19:34:58Z,Any reason why this does not return a unique_ptr?\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88095156,88095156,src/chainparamsbase.cpp
sipa,2016-11-15T19:35:46Z,I think this should be a function rather than a static method.\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88095337,88095337,src/chainparamsbase.h
sipa,2016-11-15T19:37:49Z,Lines like this (as there are many) can avoid some redundancy by using `const auto defaultBaseParmams = ...` instead.\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88095762,88095762,src/bitcoin-cli.cpp
sipa,2016-11-15T19:40:04Z,I think this should be a function rather than a static method.\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88096244,88096244,src/chainparams.h
sipa,2016-11-18T02:11:32Z,"Î¼nit: you can just use `assert(globalChainParams)` (std::unique_ptr has an implicit conversion to bool, which checks whether there is an owned object),\n",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88588571,88588571,src/chainparams.cpp
jtimon,2016-11-18T02:20:15Z,auto-nit: why remove this?\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88589310,88589310,src/chainparamsbase.cpp
jtimon,2016-11-18T02:41:57Z,"Also all these could remain const, will push shortly...\n",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88591277,88591277,src/test/pow_tests.cpp
jtimon,2016-11-18T03:06:26Z,"Remains from boost::scoped_ptr, fixing now...\n",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88593140,88593140,src/chainparams.cpp
morcos,2016-11-18T03:07:18Z,Is this comment out of date now?\n,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88593188,88593188,src/chainparamsbase.h
jtimon,2016-11-18T03:08:33Z,"Right, the caller doesn't have to explicitly delete the object anymore, thanks.\n",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r88593268,88593268,src/chainparamsbase.h
ryanofsky,2017-05-08T22:38:27Z,"In commit ""Use a proper factory for creating chainparams""\n\nThis seems not equivalent to the previous code. Previously this would only affect the regtest chain returned by `Params(REGTEST)`, but now it affects the chain params returned by `Params()`",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r115370511,115370511,src/init.cpp
ryanofsky,2017-05-08T22:46:02Z,"In commit ""Chainparams: Use a regular factory for creating chainparams""\n\nThis does not seem safe because every new call to `Params(chain)` will delete the object referenced by the previous call. This could cause crashes and memory corruption if `Params(chain)` is called multiple times or from different threads.\n\nA safer implementation would look more like:\n\n```\nconst CChainParams& Pa",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r115371816,115371816,src/chainparams.cpp
ryanofsky,2017-05-08T23:01:38Z,"In commit ""Chainparams: Use a regular factory for creating chainparams""\n\nTechnically returns a unique_ptr",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r115374011,115374011,src/chainparams.h
ryanofsky,2017-05-08T23:02:48Z,"In commit ""Chainparams: Use a regular factory for creating chainparams""\n\nTechnically returns a unique_ptr",https://github.com/bitcoin/bitcoin/pull/8855#discussion_r115374175,115374175,src/chainparamsbase.h
jtimon,2017-05-09T11:42:37Z,This impedes the function being called by non regtest-like chains: https://github.com/bitcoin/bitcoin/pull/8855/commits/f87f3626e35e7edae37e14f5156809325ad18cb2#diff-c865a8939105e6350a50af02766291b7R1107,https://github.com/bitcoin/bitcoin/pull/8855#discussion_r115467714,115467714,src/init.cpp
