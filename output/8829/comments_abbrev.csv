laanwj,2016-09-29T06:16:00Z,"Awesome, thanks!\nutACK https://github.com/bitcoin/bitcoin/pull/8829/commits/54e5d7c1b81e1b76f5789abfa2cb1f5963cd9d72\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250379838,250379838,
MarcoFalke,2016-09-29T08:43:42Z,utACK 54e5d7c1b81e1b76f5789abfa2cb1f5963cd9d72\n,https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250406552,250406552,
paveljanik,2016-09-29T09:00:37Z,"ups, merged in the middle of my testing :-)\n\npostmerge ACK https://github.com/bitcoin/bitcoin/commit/54e5d7c1b81e1b76f5789abfa2cb1f5963cd9d72\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250410259,250410259,
droark,2016-09-29T11:32:25Z,Question: Was txcreate2.json supposed to be empty? I'm assuming some test data was supposed to be in it. :)\n,https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250441386,250441386,
jnewbery,2016-09-29T12:35:07Z,"Interesting. The txcreate2 test is attempting to create a transaction with a single pay-to-script output for zero satoshi. When outputting as json, bitcoin-tx returns the empty string. When outputting as hex, it returns 01000000000100000000000000000000000000, ie:\n\n```\nversion |number in|number out|out1 amount     |out1 script length|nlocktime\n01000000 00        01         0000000000000000 00  ",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250453335,250453335,
sipa,2016-09-29T12:39:31Z,Zero-value outputs are perfectly valid according to consensus rules.\n,https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250454267,250454267,
jnewbery,2016-09-29T12:45:17Z,"ah, ok. Thanks. Then the fix is in bitcoin-tx to properly output zero-value, empty-script outputs.\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250455451,250455451,
laanwj,2016-09-29T12:48:49Z,Good to see that we're finding bugs in bitcoin-tx by adding tests :)\n,https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250456179,250456179,
jnewbery,2016-09-29T13:02:04Z,"I've mischaracterised the problem here. bitcoin-tx _is_ outputting the transaction correctly in hex and json. However, when I try to pipe that same hex transaction back into bitcoin-tx, it fails with `error: invalid transaction encoding`.\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250459378,250459378,
sipa,2016-09-29T13:09:35Z,"Ah, that seems to be due to the segwit ambiguity for 0-input transactions.\nIIRC, DecodeTransaction in core_io.h has a boolean parameter for attempting\nto decode partial transactions. It should be set to true in calls from\nbitcoin-tx.\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250461109,250461109,
jnewbery,2016-09-29T14:29:18Z,Thanks @sipa . New PR here: https://github.com/bitcoin/bitcoin/pull/8837 to make bitcoin-tx set the flag correctly and parse partial transactions.\n\n@droark - I've added https://github.com/bitcoin/bitcoin/pull/8836 to fix the fact that `bitcoin-util-test.py` would always succeed if the output comparison file was empty. That PR also fixes `txcreate2.json` so it's no longer empty.\n,https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-250482775,250482775,
laanwj,2016-10-13T18:04:26Z,"This was backported in #8832, removing tag\n",https://github.com/bitcoin/bitcoin/pull/8829#issuecomment-253591194,253591194,
