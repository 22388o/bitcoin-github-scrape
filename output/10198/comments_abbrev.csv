jnewbery,2017-04-12T16:08:53Z,closing until #10143 is merged,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-293628029,293628029,
jnewbery,2017-04-20T15:15:52Z,"#10143 is now merged, so rebasing and re-opening this.\n\n@kallewoof - you've been working on listsinceblock recently. Do you mind reviewing this and letting me know what you think?",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-295774364,295774364,
kallewoof,2017-04-21T01:52:05Z,"ACK b9e9ef2415e3df508b0c0663502e60196bc37f0f\n\nNice, -231 lines of code. :) The listsinceblock stuff looks fine to me. I ran tests and only briefly looked at code changes for other tests.",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-296010748,296010748,
jimmysong,2017-04-24T13:53:48Z,@fanquake Can you label this Tests?,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-296675467,296675467,
jnewbery,2017-04-25T17:26:20Z,"Rebased and added a fixup commit to address the nits.\n\nI'm planning to squash these all down to a single commit before merge.",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-297104644,297104644,
jimmysong,2017-04-25T17:30:33Z,"ACK d64f739b3bc78e67212a252a690556bca8098745\n\nedit: Tested.",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-297105885,297105885,
kallewoof,2017-04-26T04:22:22Z,utACK d64f739b3bc78e67212a252a690556bca8098745,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-297234013,297234013,
laanwj,2017-05-01T07:37:55Z,"utACK d64f739, please squash",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298299756,298299756,
MarcoFalke,2017-05-01T14:32:08Z,Strong concept ACK. Going to review after squash.\n,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298343597,298343597,
jnewbery,2017-05-01T14:47:42Z,Commits squashed. There should be no difference between https://github.com/bitcoin/bitcoin/commit/d64f739b3bc78e67212a252a690556bca8098745 and 20f67c90c001123ab5bca7e70382c5fe26362aa3. Compare https://github.com/jnewbery/bitcoin/tree/pr10198.1 and https://github.com/jnewbery/bitcoin/tree/pr10198.2,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298346548,298346548,
MarcoFalke,2017-05-02T17:20:04Z,"Ok, feel free to squash. Planning to merge this.\n",https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298701730,298701730,
jnewbery,2017-05-02T17:32:26Z,squashed and rebased. I'm currently running the extended test locally.,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298705185,298705185,
jnewbery,2017-05-02T17:55:45Z,extended tests all pass locally. This should be good for merge.,https://github.com/bitcoin/bitcoin/pull/10198#issuecomment-298711575,298711575,
jimmysong,2017-04-20T22:10:09Z,"This seems like it would be made better as the for loop condition:\n\n    for _ in range(50): \n        ...\n        time.sleep(0.1)\n    else:\n        assert 0, ""timed out waiting for disconnect""\n\nAt least for me, that's a bit easier to read.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112571700,112571700,test/functional/test_framework/util.py
jimmysong,2017-04-20T22:12:52Z,This happens every time through the loop. Is that your intention? Doesn't this only have to be done once?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112572078,112572078,test/functional/test_framework/util.py
jimmysong,2017-04-20T22:14:54Z,"If you're going to do this, why not just a single for loop?\n\n    for group in node_groups:\n        sync_blocks(group)\n        sync_mempools(group)\n\nFor me, that's a little easier to read.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112572382,112572382,test/functional/test_framework/test_framework.py
jimmysong,2017-04-20T22:19:07Z,Shouldn't this go in `__init__`?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112572993,112572993,test/functional/bip68-sequence.py
jimmysong,2017-04-20T22:19:54Z,Doesn't this or `setup_nodes` need to be called at some point?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112573088,112573088,test/functional/bip68-sequence.py
jimmysong,2017-04-20T22:20:51Z,"Shouldn't this have an empty list first? Node 0 has no opts, Node 1 has blockversion=2, etc?",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112573217,112573217,test/functional/bipdersig.py
jimmysong,2017-04-20T22:23:26Z,shouldn't this be in `__init__`?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112573551,112573551,test/functional/mempool_limit.py
jimmysong,2017-04-20T22:24:08Z,keep comment?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112573652,112573652,test/functional/mempool_spendcoinbase.py
jimmysong,2017-04-20T22:26:59Z,isn't this necessary?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574113,112574113,test/functional/getblocktemplate_proposals.py
jimmysong,2017-04-20T22:28:34Z,do you need the `sync_all` ?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574315,112574315,test/functional/bip65-cltv.py
jimmysong,2017-04-20T22:29:00Z,Necessary?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574387,112574387,test/functional/bipdersig.py
jimmysong,2017-04-20T22:29:47Z,"This is the same as the parent, no? Can be deleted?",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574494,112574494,test/functional/importmulti.py
jimmysong,2017-04-20T22:29:58Z,Deleted?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574518,112574518,test/functional/invalidateblock.py
jimmysong,2017-04-20T22:30:47Z,Also in `__init__`?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574612,112574612,test/functional/mempool_limit.py
jimmysong,2017-04-20T22:31:47Z,delete?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574737,112574737,test/functional/p2p-acceptblock.py
jimmysong,2017-04-20T22:32:10Z,not needed?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574794,112574794,test/functional/p2p-segwit.py
jimmysong,2017-04-20T22:32:19Z,delete?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574813,112574813,test/functional/p2p-mempool.py
jimmysong,2017-04-20T22:33:32Z,why did this move from `__init__`?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112574968,112574968,test/functional/pruning.py
jimmysong,2017-04-20T22:33:52Z,`self.setup_nodes()` or `super().setup_network()`?,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r112575013,112575013,test/functional/rawtransactions.py
jnewbery,2017-04-25T15:04:05Z,"It *should* only need to be called once, but I called this every loop in case either:\n\n- `disconnectnode` fails for one of the nodes and we need to rerun it.\n- a new connection to the node is added while we're in the loop.\n\nI don't think either of those should happen, so we can probably just remove this.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113221114,113221114,test/functional/test_framework/util.py
jnewbery,2017-04-25T15:09:31Z,"yes, makes sense. Changed",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113222663,113222663,test/functional/test_framework/util.py
jnewbery,2017-04-25T15:12:32Z,should be `super().setup_network()`. Fixed,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113223740,113223740,test/functional/rawtransactions.py
jnewbery,2017-04-25T15:14:43Z,Because I'd really prefer `__init__()` to only set up the network topology. (eventually I think we should try to move away from individual test cases overriding the `__init__()` method entirely).,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113224438,113224438,test/functional/pruning.py
jnewbery,2017-04-25T15:15:34Z,"probably not, but I don't see any harm in calling `sync_all()` once all connections have been added.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113224723,113224723,test/functional/p2p-segwit.py
jnewbery,2017-04-25T15:27:56Z,"Yes, and I can also reduce the number of nodes in this test to 1.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113228490,113228490,test/functional/p2p-mempool.py
jnewbery,2017-04-25T15:38:39Z,"No. The base class `setup_network()` would connect the two nodes, which we don't want in this test, so it is correct to override here. However, there is a bug here - I shouldn't assign `self.nodes` to the return value, which is None.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113231595,113231595,test/functional/p2p-acceptblock.py
jnewbery,2017-04-25T15:39:42Z,"meh. Should be clear from the `self.num_nodes` assignment in `__init__()`. I don't think we need this comment (and if we do need it, then there should be a similar comment in every other test case.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113231859,113231859,test/functional/mempool_spendcoinbase.py
jnewbery,2017-04-25T15:41:26Z,"As below. I'd prefer `__init__()` to just be for setting up the test network topology.\n\nHowever, these could be changed to be local variables instead of object variables.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113232339,113232339,test/functional/mempool_limit.py
jnewbery,2017-04-25T15:41:31Z,ditto,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113232371,113232371,test/functional/mempool_limit.py
jnewbery,2017-04-25T15:43:51Z,"`setup_nodes()` starts the nodes, but doesn't add connections between them. That's what we need here.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113233119,113233119,test/functional/invalidateblock.py
jnewbery,2017-04-25T15:52:31Z,This is now done by the base class `setup_network()`,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113235664,113235664,test/functional/getblocktemplate_proposals.py
jnewbery,2017-04-25T15:53:08Z,correct. Fixed,https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113235833,113235833,test/functional/bipdersig.py
jnewbery,2017-04-25T17:22:55Z,"The base class calls `setup_network()`, which calls `setup_nodes()`",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113258078,113258078,test/functional/bip68-sequence.py
jnewbery,2017-04-25T17:23:08Z,"probably not, but harmless",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113258121,113258121,test/functional/bipdersig.py
jnewbery,2017-04-25T17:24:02Z,"`setup_network()` in the base class also connects the nodes, which we don't want to do for this test.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r113258332,113258332,test/functional/importmulti.py
MarcoFalke,2017-05-02T14:53:58Z,"This does not work for the `ComparisionFramework`, as it is later overwritten. I don't understand why this commit does not fail, but I'd still like the bug fixed in this pull.\n\nSee `test/functional/test_framework/test_framework.py:245L`\n\n\nAdditionally, I'd like to see a sanity check in start_nodes:\n\n```diff\ndiff --git a/test/functional/test_framework/util.py b/test/functional/test_",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r114337747,114337747,test/functional/bipdersig-p2p.py
MarcoFalke,2017-05-02T14:56:02Z,"Please add the missing self.extra_args here, and also add an additional test in this file:\n```py\nassert_raises_jsonrpc(-12, ""Keypool ran out"", lambda: self.nodes[0].generate(1))\n```",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r114338269,114338269,test/functional/disablewallet.py
jnewbery,2017-05-02T17:03:47Z,"It turns out the comment was wrong (and had presumably been copy-pasted from another test). blockversion is not required in this test, since the bitcoin node is not generating any blocks. I've removed the extra_args entirely.\n\nI've also added your suggested asserts.",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r114370457,114370457,test/functional/bipdersig-p2p.py
jnewbery,2017-05-02T17:04:42Z,"yes, I've put the extra_args back in. Good spot.\n\nI don't understand why adding the ""Keypool ran out"" assert should be part of this PR?",https://github.com/bitcoin/bitcoin/pull/10198#discussion_r114370688,114370688,test/functional/disablewallet.py
