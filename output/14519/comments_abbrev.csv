jamesob,2018-10-19T18:10:23Z,"An example of running the generated perf data file through [hotspot](https://github.com/KDAB/hotspot):\n\n![selection_109](https://user-images.githubusercontent.com/73197/47235981-b33ebd80-d3a8-11e8-96bd-30f6f91b95f4.png)\n",https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431450614,431450614,
jamesob,2018-10-19T20:38:01Z,"Thanks for the review, @ryanofsky. I really like your suggestions and so I've incorporated them all into a rebase.\n\nYou can now pass `--perf` when running an individual test file and all nodes will be profiled for the duration of the test. Here's an example run:\n```sh\n$ ./test/functional/p2p_unrequested_blocks.py --perf\n\n2018-10-19T20:36:06.542000Z TestFramework (INFO): Initializing te",https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431491862,431491862,
promag,2018-10-20T08:28:52Z,"Concept ACK, very nice!",https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431560630,431560630,
DrahtBot,2018-10-20T09:50:34Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431566213,431566213,
jtimon,2018-10-22T16:40:03Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-431891181,431891181,
jamesob,2018-10-23T15:28:18Z,Addressed feedback from @ryanofsky @conscott.,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-432295224,432295224,
jamesob,2018-10-24T19:12:13Z,Pushed feedback from @MarcoFalke. ,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-432791611,432791611,
fanquake,2018-10-28T09:26:59Z,"utACK 5d8ac69\n\nCan't comment on the usage of `perf`, but if this leads to more profiling, and performance related discussion/results in reviews, sounds great.\n\nAlso pro reviving the flamegraph docs out of #12649, however that shouldn't hold this up.",https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-433689317,433689317,
laanwj,2019-01-02T14:16:57Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-450873953,450873953,
jamesob,2019-01-02T19:09:38Z,"Thanks for the review, @jnewbery. I've pushed a rebased tip that addresses the feedback. \n\n[Here's the diff](https://gist.github.com/jamesob/01ac7b24039621a2863995ef69037a0c) (excluding the rebase).",https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-450954617,450954617,
jamesob,2019-01-22T14:04:22Z,Pushed an update addressing feedback from @jnewbery. ,https://github.com/bitcoin/bitcoin/pull/14519#issuecomment-456410333,456410333,
ryanofsky,2018-10-19T18:15:42Z,Maybe comment `# Frequency in Hz`,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r226737926,226737926,test/functional/test_framework/test_node.py
ryanofsky,2018-10-19T18:22:27Z,Escaping self.binary with [shlex.quote](https://docs.python.org/3/library/shlex.html#shlex.quote) would let it work with any filename.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r226739869,226739869,test/functional/test_framework/test_node.py
ryanofsky,2018-10-22T18:09:20Z,I don't think I see advantage of the test_class_name plumbing. It seems like it makes resulting filenames less predictable I run a test with --perf and the resulting filenames have a python class name in the middle. It also doesn't seem like it helps with disambiguation either if every node has the same test name.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227077441,227077441,test/functional/test_framework/test_node.py
jamesob,2018-10-22T19:26:54Z,"Yeah, that's a good point. I thought we needed to do this in order to maintain compatibility with `test/functional/test_runner.py` (to avoid perf data files from getting clobbered), but I forgot that each test gets its own nested tmp directory. Will do.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227105936,227105936,test/functional/test_framework/test_node.py
conscott,2018-10-23T06:25:28Z,Might want to add a try/except here with `CalledProcessError`,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227240042,227240042,test/functional/test_framework/test_node.py
MarcoFalke,2018-10-24T11:28:19Z,"profile_name is always given, so no need for the else?",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227748224,227748224,test/functional/test_framework/test_node.py
MarcoFalke,2018-10-24T11:31:11Z,We don't support this function yet: https://docs.python.org/3.4/library/subprocess.html#subprocess.run,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227748951,227748951,test/functional/test_framework/test_node.py
MarcoFalke,2018-10-24T11:36:02Z,nit: Could use `.format(...` like two lines above,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227750306,227750306,test/functional/test_framework/test_framework.py
jamesob,2018-10-24T19:07:36Z,It's an empty string when we specify `--perf` to the runner: https://github.com/bitcoin/bitcoin/blob/358e757d566d5f659901acc6f15fa9eb6eb3e741/test/functional/test_framework/test_node.py#L184,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227922373,227922373,test/functional/test_framework/test_node.py
MarcoFalke,2018-10-24T19:13:15Z,needs to use `{}` in the format string ;),https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227924192,227924192,test/functional/test_framework/test_framework.py
jamesob,2018-10-24T19:14:17Z,Oops! Thanks :),https://github.com/bitcoin/bitcoin/pull/14519#discussion_r227924560,227924560,test/functional/test_framework/test_framework.py
MarcoFalke,2018-10-26T12:10:05Z,Wouldn't that overwrite the perf file on restart?,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r228503080,228503080,test/functional/test_framework/test_node.py
MarcoFalke,2018-10-29T21:20:10Z,That will  overwrite previous perf results.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r229102706,229102706,test/functional/test_framework/test_node.py
jamesob,2018-10-30T14:46:24Z,"Ah, good catch. Will verify & fix.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r229337090,229337090,test/functional/test_framework/test_node.py
jamesob,2018-11-09T18:42:38Z,"Fixed and tested by running `./test/functional/p2p_disconnect_ban.py --perf` (which restarts node1):\n```sh\n $ ./test/functional/p2p_disconnect_ban.py --perf\n2018-11-09T18:41:23.959000Z TestFramework (INFO): Initializing test directory /tmp/testk5t2fuyc\n[...]\n2018-11-09T18:41:25.250000Z TestFramework (INFO): setban: test persistence across node restart\n2018-11-09T18:41:25.616000Z TestFr",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r232352979,232352979,test/functional/test_framework/test_node.py
jnewbery,2018-11-21T23:15:17Z,"Since this is now a user activated feature (with `--perf`, I think most of these usage notes should go in `/test/README/md`)",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r235563914,235563914,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:45:48Z,Are you ever expecting to have more than one perf process profiling the node? That seems like it's probably unnecessary.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238011859,238011859,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:47:46Z,"This might just be personal taste, but I'd prefer to have a `return None` in this if block, so that the main body of the function isn't indented in an else block.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238012360,238012360,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:50:16Z,This fails for macOS. Do you want to make this portable or are you just targetting linux? You could make it work on macOS by installing binutils and using `greadelf`.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238013020,238013020,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:53:54Z,Should this have a timeout so the test doesn't hang if the subprocess doesn't terminate?,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014054,238014054,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:54:17Z,This was very helpful!,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014160,238014160,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:55:24Z,"Can you replace all this with a call to `tempfile.NamedTemporaryFile`? See above in the same file for an example:\n\n```\n            stderr = tempfile.NamedTemporaryFile(dir=self.stderr_dir, delete=False)\n```",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014495,238014495,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T21:56:36Z,Why no sorting? :cry: ,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238014809,238014809,test/functional/test_framework/test_node.py
jnewbery,2018-11-30T22:01:15Z,"I think this example code should be in `test/README.md`, which is documentation of how to run tests and contains debugging/troubleshooting tips.\n\nThis is meant as an example of how to write a test. I don't think the expectation is that people leave `profile_with_perf` contexts in test that are checked into the repo.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r238015981,238015981,test/functional/example_test.py
jamesob,2019-01-02T15:28:18Z,"It's conceivable if you want to do nested benchmarking, or have specific regions benchmarked under different perf output files. There's very little overhead here to keeping the subprocess references around, so I can't think of a good reason to rejigger this.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244765123,244765123,test/functional/test_framework/test_node.py
jamesob,2019-01-02T15:31:32Z,Perf isn't available for macOS since it's Linux-specific. I'll add a warning and early-exit for non-Linux systems.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244766036,244766036,test/functional/test_framework/test_node.py
jamesob,2019-01-02T16:12:05Z,"If we want to enforce alphabetical sorting for imports, we should have a linter for it!",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244778271,244778271,test/functional/test_framework/test_node.py
jamesob,2019-01-02T17:38:25Z,"Usage here is required to get around vulture's dead code check, but I'll add documentation to `test/functional/README.md`.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r244800893,244800893,test/functional/example_test.py
ryanofsky,2019-01-04T19:07:54Z,"In commit ""docs: add perf section to developer docs"" (27a895d72a385bcaa861e08b03bb5c817f8e253f)\n\nSlightly strange the link text is ""understand the security tradeoffs"" instead of just ""security tradeoffs.""",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245391408,245391408,doc/developer-notes.md
jnewbery,2019-01-07T22:26:57Z,"This documentation is excellent. I think it should live in `/test/README.md`, which is documentation for *running* the functional tests, and already includes hints on logging, attaching a debugger, etc. `/test/functional/README.md` is documentation for *writing* test cases (we could probably add a note to the top of each file explaining that).",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245819954,245819954,test/functional/README.md
jnewbery,2019-01-07T22:40:15Z,"If this is just to get around vulture, then I'd prefer to just update `lint-python-dead-code.sh` to ignore the `profile_with_perf` name. This file is supposed to be a guide for writing a new testcase. As far as I can tell, `profile_with_perf` shouldn't be included in new testcases to be checked into master.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245823161,245823161,test/functional/example_test.py
jnewbery,2019-01-07T22:43:25Z,"My point is that there should only ever be one `perf_subprocess` at any time (it gets popped in `_stop_perf`). I think it's fine to have a `perf_subrocess` reference in the `TestNode` object, but making it a dictionary when there can only be one reference at a time seems odd.\n\nOr maybe I'm misunderstanding. Is it possible to attach more than one perf instance to the same process? Can you give ",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245823890,245823890,test/functional/test_framework/test_node.py
jnewbery,2019-01-07T22:51:02Z,"I think it'd be better to pass `None` here (or even better have `None` as the default argument). `""""` and `None` will get treated the same in `(profile_name or 'test')`.\n\nEDIT: I see you're using `profile_name` as the key in the `perf_subprocesses` dictionary so this wouldn't work. Is `perf_subprocesses` safe from having entries overwritten if the same `profile_name` is passed in twice?",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245825685,245825685,test/functional/test_framework/test_node.py
jnewbery,2019-01-07T22:55:08Z,"This seems a bit brittle. Probably ok to leave as it is, but if anyone updates the arguments or ordering of arguments, then this will break.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245826619,245826619,test/functional/test_framework/test_node.py
jnewbery,2019-01-07T22:57:11Z,Make this a markdown link: `[hotspot](https://github.com/KDAB/hotspot).`,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r245827078,245827078,test/functional/README.md
jamesob,2019-01-22T13:34:35Z,"> My point is that there should only ever be one perf_subprocess at any time\n\nYeah, this isn't the case: you might have nested context managers, or a context manager used in conjunction with `--perf`.",https://github.com/bitcoin/bitcoin/pull/14519#discussion_r249780132,249780132,test/functional/test_framework/test_node.py
jamesob,2019-01-22T13:36:21Z,I don't think this is as brittle as it seems; you're always going to have the filename following `-o` otherwise the argument doesn't make any sense.,https://github.com/bitcoin/bitcoin/pull/14519#discussion_r249780686,249780686,test/functional/test_framework/test_node.py
