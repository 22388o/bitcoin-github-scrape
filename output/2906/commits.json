[
  {
    "sha": "562a909aa6cd909a67f58a47e3854039aa6a5408",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjJhOTA5YWE2Y2Q5MDlhNjdmNThhNDdlMzg1NDAzOWFhNmE1NDA4",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-08-17T20:17:10Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2013-09-16T23:33:00Z"
      },
      "message": "Added new RPC method for explicitly banning nodes or removing a ban.\n\nAdded listbannednodes.\n\nReturn copy of banned node map instead of reference to avoid race conditions.",
      "tree": {
        "sha": "db9861a9bf59d19af18d1ab05aecf27e982749d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db9861a9bf59d19af18d1ab05aecf27e982749d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/562a909aa6cd909a67f58a47e3854039aa6a5408",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/562a909aa6cd909a67f58a47e3854039aa6a5408",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/562a909aa6cd909a67f58a47e3854039aa6a5408",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/562a909aa6cd909a67f58a47e3854039aa6a5408/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b986663ccdd3dfd8a93aad660839a315ca5c5bdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b986663ccdd3dfd8a93aad660839a315ca5c5bdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b986663ccdd3dfd8a93aad660839a315ca5c5bdd"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 63,
      "deletions": 2
    },
    "files": [
      {
        "sha": "026c3c7558af5e868a5bb2a5b7924bfd52b1f551",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/562a909aa6cd909a67f58a47e3854039aa6a5408/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/562a909aa6cd909a67f58a47e3854039aa6a5408/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=562a909aa6cd909a67f58a47e3854039aa6a5408",
        "patch": "@@ -200,6 +200,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getpeerinfo\",            &getpeerinfo,            true,      false },\n     { \"addnode\",                &addnode,                true,      true },\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true },\n+    { \"bannode\",                &bannode,                true,      true },\n+    { \"listbannednodes\",        &listbannednodes,        true,      true },\n     { \"getdifficulty\",          &getdifficulty,          true,      false },\n     { \"getgenerate\",            &getgenerate,            true,      false },\n     { \"setgenerate\",            &setgenerate,            true,      false },\n@@ -1201,6 +1203,7 @@ Array RPCConvertValues(const std::string &strMethod, const std::vector<std::stri\n     if (strMethod == \"verifychain\"            && n > 0) ConvertTo<boost::int64_t>(params[0]);\n     if (strMethod == \"verifychain\"            && n > 1) ConvertTo<boost::int64_t>(params[1]);\n     if (strMethod == \"keypoolrefill\"          && n > 0) ConvertTo<boost::int64_t>(params[0]);\n+    if (strMethod == \"bannode\"                && n > 1) ConvertTo<boost::int64_t>(params[1]);\n \n     return params;\n }"
      },
      {
        "sha": "81f0338e74d198c9b478e37c08ed309138dc944b",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/562a909aa6cd909a67f58a47e3854039aa6a5408/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/562a909aa6cd909a67f58a47e3854039aa6a5408/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=562a909aa6cd909a67f58a47e3854039aa6a5408",
        "patch": "@@ -145,6 +145,8 @@ extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, b\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value bannode(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value listbannednodes(const json_spirit::Array& params, bool fHelp);\n \n extern json_spirit::Value dumpprivkey(const json_spirit::Array& params, bool fHelp); // in rpcdump.cpp\n extern json_spirit::Value importprivkey(const json_spirit::Array& params, bool fHelp);"
      },
      {
        "sha": "1a2418fe7b1d02fa53a3c7a8033ed7a813463e72",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/562a909aa6cd909a67f58a47e3854039aa6a5408/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/562a909aa6cd909a67f58a47e3854039aa6a5408/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=562a909aa6cd909a67f58a47e3854039aa6a5408",
        "patch": "@@ -544,7 +544,7 @@ void CNode::PushVersion()\n \n \n \n-std::map<CNetAddr, int64> CNode::setBanned;\n+banned_map_t CNode::setBanned;\n CCriticalSection CNode::cs_setBanned;\n \n void CNode::ClearBanned()\n@@ -568,6 +568,23 @@ bool CNode::IsBanned(CNetAddr ip)\n     return fResult;\n }\n \n+void CNode::Ban(CNetAddr ip, int64_t expiration)\n+{\n+    LOCK(cs_setBanned);\n+    if (expiration < 0) {\n+        setBanned.erase(ip);\n+    }\n+    else {\n+        setBanned[ip] = expiration;\n+    }\n+}\n+\n+banned_map_t CNode::GetBannedMap()\n+{\n+    LOCK(cs_setBanned);\n+    return setBanned;\n+}\n+\n bool CNode::Misbehaving(int howmuch)\n {\n     if (addr.IsLocal())"
      },
      {
        "sha": "009192c9dfba60dff93ac0d140718750c0b5246c",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/562a909aa6cd909a67f58a47e3854039aa6a5408/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/562a909aa6cd909a67f58a47e3854039aa6a5408/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=562a909aa6cd909a67f58a47e3854039aa6a5408",
        "patch": "@@ -162,6 +162,7 @@ class CNetMessage {\n \n \n \n+typedef std::map<CNetAddr, int64> banned_map_t;\n \n /** Information about a peer */\n class CNode\n@@ -211,7 +212,7 @@ class CNode\n \n     // Denial-of-service detection/prevention\n     // Key is IP address, value is banned-until-time\n-    static std::map<CNetAddr, int64> setBanned;\n+    static banned_map_t setBanned;\n     static CCriticalSection cs_setBanned;\n     int nMisbehavior;\n \n@@ -637,6 +638,8 @@ class CNode\n     // new code.\n     static void ClearBanned(); // needed for unit testing\n     static bool IsBanned(CNetAddr ip);\n+    static void Ban(CNetAddr ip, int64_t expiration); // negative expiration unbans the node.\n+    static banned_map_t GetBannedMap();\n     bool Misbehaving(int howmuch); // 1 == a little, 100 == a lot\n     void copyStats(CNodeStats &stats);\n };"
      },
      {
        "sha": "39196e9a74dc1683824aed6775049280639cf996",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/562a909aa6cd909a67f58a47e3854039aa6a5408/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/562a909aa6cd909a67f58a47e3854039aa6a5408/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=562a909aa6cd909a67f58a47e3854039aa6a5408",
        "patch": "@@ -202,3 +202,39 @@ Value getaddednodeinfo(const Array& params, bool fHelp)\n     return ret;\n }\n \n+\n+Value bannode(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 2)\n+        throw runtime_error(\n+            \"bannode <node> <expiration>\\n\"\n+            \"Bans <node> until unix timestamp <expiration>. Set <expiration> to -1 to unban a node. Ban list is cleared on restart.\");\n+\n+    std::vector<CNetAddr> addrs;\n+    if (!LookupHost(params[0].get_str().c_str(), addrs, 50, true)) \n+        throw JSONRPCError(-25, \"Error: Node lookup failed.\");\n+\n+    BOOST_FOREACH(const CNetAddr& addr, addrs) {\n+        CNode::Ban(addr, params[1].get_int64());\n+    }\n+\n+    return Value::null;\n+}\n+\n+Value listbannednodes(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"listbannednodes\\n\"\n+            \"Returns a list of currently banned nodes along with the ban expiration timestamps.\");\n+\n+    Array ret;\n+    BOOST_FOREACH(const banned_map_t::value_type& pair, CNode::GetBannedMap()) {\n+        Object node;\n+        node.push_back(Pair(\"addr\", pair.first.ToStringIP()));\n+        node.push_back(Pair(\"until\", (boost::int64_t)pair.second));\n+        ret.push_back(node);\n+    }\n+\n+    return ret;\n+}"
      }
    ]
  }
]