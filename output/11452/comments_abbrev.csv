promag,2017-10-04T22:38:56Z,"Ping @jnewbery, @ryanofsky and @TheBlueMatt.",https://github.com/bitcoin/bitcoin/pull/11452#issuecomment-334309961,334309961,
esotericnonsense,2017-10-05T04:05:29Z,"Tested ACK db3b646bac37a54cb09f121b048fcfbb6d522808, few nits above.",https://github.com/bitcoin/bitcoin/pull/11452#issuecomment-334353048,334353048,
promag,2017-10-05T09:29:37Z,Thanks for the review @esotericnonsense.,https://github.com/bitcoin/bitcoin/pull/11452#issuecomment-334411403,334411403,
promag,2017-10-10T00:04:35Z,Rebased and added a commit to address comments.Will squash after reviews.,https://github.com/bitcoin/bitcoin/pull/11452#issuecomment-335321698,335321698,
promag,2017-10-10T22:50:17Z,"@jnewbery Thanks, renamed to `topic`. Now squashed.",https://github.com/bitcoin/bitcoin/pull/11452#issuecomment-335630899,335630899,
esotericnonsense,2017-10-05T03:48:15Z,"I found 'subscribe' a bit misleading here, though it could be that I'm thinking too much.\nIt's not merely a standard ZeroMQ subscription; the ZMQSubscriber class created tracks sequence. As it's written, my immediate thought was 'why aren't we just doing `self.subscribe("""")`' (pre this commit, the four setsockopt calls could have been replaced with just one).\nPerhaps 'create_subscriber' or flu",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142842750,142842750,test/functional/zmq_test.py
esotericnonsense,2017-10-05T03:51:12Z,"The subscribers don't actually have independent sockets, perhaps just use self.socket?",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142842981,142842981,test/functional/zmq_test.py
esotericnonsense,2017-10-05T03:58:18Z,"nit: assert_receive? My initial thought was that you're selectively receiving a type (which makes sense if different sockets, but if the sockets are all identical, you get what you're given, as this code tests)",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142843513,142843513,test/functional/zmq_test.py
esotericnonsense,2017-10-05T04:03:39Z,"Likely a pre-existing issue, on my box this prevents `python zmq_test.py` running in isolation (works through test_runner because the option already exists). If you wrap it e.g. `os.path.abspath(os.path.dirname(__file__))` (as test_runner.py does) it works.",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142843905,142843905,test/functional/zmq_test.py
promag,2017-10-05T09:22:58Z,It works for me ðŸ™„ ,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142888382,142888382,test/functional/zmq_test.py
promag,2017-10-05T09:23:14Z,I can rename.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142888442,142888442,test/functional/zmq_test.py
promag,2017-10-05T09:24:18Z,I would like to leave it this way so in the future we can have more sockets.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142888665,142888665,test/functional/zmq_test.py
promag,2017-10-05T09:29:07Z,"Below feels better to read `foo = self.receive(...)`, no need for the `assert_` IMO.\n\n> but if the sockets are all identical, you get what you're given\n\nNot really, if below you swap 2 consecutive receives the test will fail. What comes from the socket has a specific order and we must follow it when reading.",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142889692,142889692,test/functional/zmq_test.py
promag,2017-10-05T09:29:24Z,I'll check with your suggestion.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142889747,142889747,test/functional/zmq_test.py
MarcoFalke,2017-10-05T11:07:11Z,Also should use `os.path.join()`,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142908671,142908671,test/functional/zmq_test.py
jnewbery,2017-10-05T14:17:35Z,"I don't like adding these assignments to `set_test_params`.\n\n- `num_blocks` and `subscribers` can be local variables in `run_test()`\n- `address` should be a local variable in `setup_nodes()` and passed into the `ZMQSubscriber` constructor. Conceptually, `address` is the address of the ZMQ subscriber, not the test framework.\n\n`set_test_params()` should be used for overriding the number of",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142950638,142950638,test/functional/zmq_test.py
jnewbery,2017-10-05T14:20:40Z,Nit: remove `At the moment`,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142951570,142951570,test/functional/zmq_test.py
jnewbery,2017-10-05T14:23:26Z,"As in my comment here https://github.com/bitcoin/bitcoin/pull/11439#discussion_r142474301, I think it makes sense for the subscribe and receive logic to be owned by `ZMQSubscriber`",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142952369,142952369,test/functional/zmq_test.py
promag,2017-10-05T17:12:47Z,Ok.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r142999932,142999932,test/functional/zmq_test.py
promag,2017-10-06T22:16:23Z,Ok.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r143305195,143305195,test/functional/zmq_test.py
promag,2017-10-10T00:02:59Z,Ok.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r143604805,143604805,test/functional/zmq_test.py
promag,2017-10-10T00:03:02Z,Ok.,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r143604809,143604809,test/functional/zmq_test.py
jnewbery,2017-10-10T15:59:28Z,[type is a builtin](https://docs.python.org/3/library/functions.html#type). Perhaps `notification _type` is better?,https://github.com/bitcoin/bitcoin/pull/11452#discussion_r143774127,143774127,test/functional/zmq_test.py
ryanofsky,2017-10-11T18:25:21Z,"The ZMQSubscriber class makes it harder for the test to work if topics are sent in a different order.\n\nCan you take a look at and consider squashing 3668dcdd5a7a12dea0ce5fd9a1d7d17ade0f7b75, which builds on your change, but gets rid of ZMQSubscriber, shortens the test, and lets it pass regardless of ordering of messages from different topics?",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144096057,144096057,test/functional/zmq_test.py
promag,2017-10-12T08:16:23Z,"@ryanofsky Thanks for the time spent on this. For the moment we want this test to fail if the order changes, see https://github.com/bitcoin/bitcoin/pull/11439#issuecomment-334181141.",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144220827,144220827,test/functional/zmq_test.py
promag,2017-10-12T08:17:27Z,"BTW, if the order changes it's only a matter of changing the order of the `sub.receive()` calls.",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144221025,144221025,test/functional/zmq_test.py
jnewbery,2017-10-12T12:29:54Z,"Thanks for the input @ryanofsky . I personally think the `ZMQSubscriber` class is clearer, but it was me who pushed @promag in that direction initially, so we should see what other reviewers think.",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144273928,144273928,test/functional/zmq_test.py
ryanofsky,2017-10-12T16:45:11Z,"~~~Comment isn't accurate. Should say ""test hangs"" instead of ""test fails.""~~~\n\nEDIT: Actually, this isn't true. I was thinking of the other unnecessarily fragile version of the test that used multiple sockets :)",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144345952,144345952,test/functional/zmq_test.py
promag,2017-10-13T22:41:47Z,"Ah right, that one hangs :+1:",https://github.com/bitcoin/bitcoin/pull/11452#discussion_r144670938,144670938,test/functional/zmq_test.py
