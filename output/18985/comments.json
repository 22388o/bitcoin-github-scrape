[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629594527",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-629594527",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 629594527,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTU5NDUyNw==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T06:05:50Z",
    "updated_at": "2020-05-16T06:14:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you have a good way to quantify the impact of this change? That would be interesting to see :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629594527/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629609551",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-629609551",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 629609551,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTYwOTU1MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T08:32:36Z",
    "updated_at": "2021-04-29T14:54:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629609551/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629653971",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-629653971",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 629653971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTY1Mzk3MQ==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T14:24:43Z",
    "updated_at": "2020-05-16T16:23:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@practicalswift this is something I want to do once I figure out how to use the benchmarking suite. This one might be nontrivial though since it's networking code. I might just do the benchmarking in #18849 to start.\r\n\r\nOne piece of data that I can show here is the number of allocations before and after which I'll do",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629653971/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629703864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-629703864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 629703864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcwMzg2NA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T20:48:37Z",
    "updated_at": "2020-05-16T20:52:32Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, I think this is the right approach. In general I think that most functions that take either a const vector/prevector as input, or begin/end pointer, or a begin pointer + size, should be replaced with versions that just take in a Span.\r\n\r\nIt would be worthwhile to make `uint256` amendable to the range Span constructor. I think all you'd need is rename the data field to m_data, and then add a data() member function that does the same as begin().\r\n\r\nNit: uint256 is not a vector internally, but an array.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629703864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629712670",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-629712670",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 629712670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTcxMjY3MA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-16T22:13:24Z",
    "updated_at": "2020-05-17T05:22:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "I've noticed that we consistently pass `Span` by const-ref instead of by value in the project (this PR follows that convention): is that an intentional choice? Just curious :)\r\n\r\n```\r\n$ git grep -E '\\([^(]*Span<.*>[^)]*\\)' \":(exclude)src/span.h\"\r\nsrc/script/descriptor.cpp:std::string DescriptorChecksum(const Span<const char>& span)\r\nsrc/script/descriptor.cpp:NODISCARD bool ParseKeyPath(const std::vector<Span<const char>>& split, KeyPath& out, std::string& error)\r\nsrc/script/descriptor.cpp:std::unique_ptr<PubkeyProvider> ParsePubkeyInner(uint32_t key_exp_index, const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\r\nsrc/script/descriptor.cpp:std::unique_ptr<PubkeyProvider> ParsePubkey(uint32_t key_exp_index, const Span<const char>& sp, bool permit_uncompressed, FlatSigningProvider& out, std::string& error)\r\nsrc/script/descriptor.cpp:std::unique_ptr<DescriptorImpl> ParseScript(uint32_t key_exp_index, Span<const char>& sp, ParseScriptContext ctx, FlatSigningProvider& out, std::string& error)\r\nsrc/script/descriptor.cpp:bool CheckChecksum(Span<const char>& sp, bool require_checksum, std::string& error, std::string* out_checksum = nullptr)\r\nsrc/script/interpreter.cpp:static bool ExecuteWitnessScript(const Span<const valtype>& stack_span, const CScript& scriptPubKey, unsigned int flags, SigVersion sigversion, const BaseSignatureChecker& checker, ScriptError* serror)\r\nsrc/serialize.h:template<typename Stream> inline void Serialize(Stream& s, const Span<const unsigned char>& span) { s.write(CharCast(span.data()), span.size()); }\r\nsrc/serialize.h:template<typename Stream> inline void Serialize(Stream& s, const Span<unsigned char>& span) { s.write(CharCast(span.data()), span.size()); }\r\nsrc/serialize.h:template<typename Stream> inline void Unserialize(Stream& s, Span<unsigned char>& span) { s.read(CharCast(span.data()), span.size()); }\r\nsrc/test/util_tests.cpp:static std::string SpanToStr(Span<const char>& span)\r\nsrc/util/spanparsing.cpp:bool Const(const std::string& str, Span<const char>& sp)\r\nsrc/util/spanparsing.cpp:bool Func(const std::string& str, Span<const char>& sp)\r\nsrc/util/spanparsing.cpp:Span<const char> Expr(Span<const char>& sp)\r\nsrc/util/spanparsing.cpp:std::vector<Span<const char>> Split(const Span<const char>& sp, char sep)\r\nsrc/util/spanparsing.h:bool Const(const std::string& str, Span<const char>& sp);\r\nsrc/util/spanparsing.h:bool Func(const std::string& str, Span<const char>& sp);\r\nsrc/util/spanparsing.h:Span<const char> Expr(Span<const char>& sp);\r\nsrc/util/spanparsing.h:std::vector<Span<const char>> Split(const Span<const char>& sp, char sep);\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/629712670/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672294728",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-672294728",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 672294728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjI5NDcyOA==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T21:44:16Z",
    "updated_at": "2020-08-11T21:44:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK. Will review as soon as this is rebased.\r\n\r\n> I've noticed that we consistently pass Span by const-ref instead of by value in the project (this PR follows that convention): is that an intentional choice? Just curious :)\r\n\r\n@practicalswift: Good point. I guess seen from a performance perspective it doesn't really make a difference, considering how lightweight spans are. In any case I agree that we should agree on one passing type and use it consistently in the code-base (my personal preference would be to always pass it by value, though).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672294728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672351980",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-672351980",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 672351980,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3MjM1MTk4MA==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-11T23:22:12Z",
    "updated_at": "2020-08-11T23:22:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sebastian Falbesoner <notifications@github.com> writes:\n> Concept ACK. Will review as soon as this is rebased.\n>\n>> I've noticed that we consistently pass Span by const-ref instead of\n>> by value in the project (this PR follows that convention): is that an\n>> intentional choice? Just curious :)\n>\n> @practicalswift: Good point. I guess seen from a performance\n> perspective it doesn't really make a difference, considering how\n> lightweight spans are. In any case I agree that we should agree on one\n> passing type and use it consistently in the code-base (my personal\n> preference would be to always pass it by value, though).\n\nIt looks like they are being passed by value in other PRs, I don't mind\nswitching to that style here.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672351980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672769541",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-672769541",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 672769541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3Mjc2OTU0MQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-12T09:41:49Z",
    "updated_at": "2020-08-12T09:42:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@theStack @jb55 FWIW, throughout the C++ Core Guidelines `span` is consistently passed by value, and the following is said about it:\r\n\r\n> Note: A `span<T>` object does not own its elements and is so small that it can be passed by value.\r\nPassing a `span` object as an argument is exactly as efficient as passing a pair of pointer arguments or passing a pointer and an integer count. ([F.24](https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#f24-use-a-spant-or-a-span_pt-to-designate-a-half-open-sequence))\r\n\r\nSame goes for `en.cppreference.com` FWIW.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/672769541/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674152101",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-674152101",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 674152101,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDE1MjEwMQ==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-14T16:18:59Z",
    "updated_at": "2020-08-14T16:18:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "rebased and switched from `const Span<const unsigned char>&` style to `Span<const unsigned char>`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674152101/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674601507",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-674601507",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 674601507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDYwMTUwNw==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T00:37:27Z",
    "updated_at": "2020-08-17T00:37:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sebastian Falbesoner <notifications@github.com> writes:\n> Could simply use the recently introduced `MakeUCharSpan()` helper here and on other occurences of the commit.\n\noh nice, I didn't know that was a thing. I'll do that.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674601507/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674945434",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-674945434",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 674945434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDk0NTQzNA==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T15:21:51Z",
    "updated_at": "2020-08-17T15:21:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "pushed 897f5be28c072c700a55a511bf0a88efc3b71602\r\n\r\n`git diff 1466b656625b3896176d3aa6f794d1d8d0f7c3e0 897f5be28c072c700a55a511bf0a88efc3b71602`\r\n\r\nmuch cleaner \ud83e\udd29\r\n\r\n```diff\r\ndiff --git a/src/bloom.cpp b/src/bloom.cpp\r\nindex 436e913aa5..c19d6e7d7d 100644\r\n--- a/src/bloom.cpp\r\n+++ b/src/bloom.cpp\r\n@@ -59,12 +59,12 @@ void CBloomFilter::insert(const COutPoint& outpoint)\r\n {\r\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\r\n     stream << outpoint;\r\n-    insert(Span<const unsigned char>((const unsigned char*)stream.data(), stream.size()));\r\n+    insert(MakeUCharSpan(stream));\r\n }\r\n \r\n void CBloomFilter::insert(const uint256& hash)\r\n {\r\n-    insert(Span<const unsigned char>(hash.begin(), hash.end()));\r\n+    insert(MakeUCharSpan(hash));\r\n }\r\n \r\n bool CBloomFilter::contains(Span<const unsigned char> vKey) const\r\n@@ -85,13 +85,12 @@ bool CBloomFilter::contains(const COutPoint& outpoint) const\r\n {\r\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\r\n     stream << outpoint;\r\n-    return contains(Span<const unsigned char>((const unsigned char*)stream.data(),\r\n-        stream.size()));\r\n+    return contains(MakeUCharSpan(stream));\r\n }\r\n \r\n bool CBloomFilter::contains(const uint256& hash) const\r\n {\r\n-    return contains(Span<const unsigned char>(hash.begin(), hash.end()));\r\n+    return contains(MakeUCharSpan(hash));\r\n }\r\n \r\n bool CBloomFilter::IsWithinSizeConstraints() const\r\n@@ -241,7 +240,7 @@ void CRollingBloomFilter::insert(Span<const unsigned char> vKey)\r\n \r\n void CRollingBloomFilter::insert(const uint256& hash)\r\n {\r\n-    insert(Span<const unsigned char>(hash.begin(), hash.end()));\r\n+    insert(MakeUCharSpan(hash));\r\n }\r\n \r\n bool CRollingBloomFilter::contains(Span<const unsigned char> vKey) const\r\n@@ -260,7 +259,7 @@ bool CRollingBloomFilter::contains(Span<const unsigned char> vKey) const\r\n \r\n bool CRollingBloomFilter::contains(const uint256& hash) const\r\n {\r\n-    return contains(Span<const unsigned char>(hash.begin(), hash.end()));\r\n+    return contains(MakeUCharSpan(hash));\r\n }\r\n \r\n void CRollingBloomFilter::reset()\r\ndiff --git a/src/test/bloom_tests.cpp b/src/test/bloom_tests.cpp\r\nindex 1ad5607429..9cf6e352e4 100644\r\n--- a/src/test/bloom_tests.cpp\r\n+++ b/src/test/bloom_tests.cpp\r\n@@ -91,7 +91,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_key)\r\n     CBloomFilter filter(2, 0.001, 0, BLOOM_UPDATE_ALL);\r\n     filter.insert(vchPubKey);\r\n     uint160 hash = pubkey.GetID();\r\n-    filter.insert(Span<unsigned char>(hash.begin(), hash.end()));\r\n+    filter.insert(MakeUCharSpan(hash));\r\n \r\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\r\n     stream << filter;\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/674945434/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679283465",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-679283465",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 679283465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3OTI4MzQ2NQ==",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-24T18:10:11Z",
    "updated_at": "2020-08-24T18:10:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "LGTM now \ud83d\udc4d \r\nOnly the include change in `net.h` is a bit confusing... there is no direct part in `net.h` that needs a Span as far as I can see. Wouldn't it be more obvious to simply include <span.h> in `bloom.h` as it is used there in this PR?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/679283465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828791503",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-828791503",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 828791503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgyODc5MTUwMw==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-04-28T21:27:40Z",
    "updated_at": "2021-04-28T21:27:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "rebased\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/828791503/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832887494",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-832887494",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 832887494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgzMjg4NzQ5NA==",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-05T17:49:22Z",
    "updated_at": "2021-05-05T17:49:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "On Tue, May 04, 2021 at 03:28:59PM -0700, Vincenzo Palazzo wrote:\n>Theoretically, this could be a good improvement because it removes the smart pointer from the game, but I never use it in practice the span and I'm curious to see how much improvement brings this game.\n\nSee my comment here:\n\n> This code came up as a place where many allocations occur. Mainly due to allocations of CService::GetKey which is passed to these functions, but this PR is needed before we get to that.\n\nThis PR is a stepping stone to:\n\n\t[ZAP4] netaddress: return a prevector from CService::GetKey() [1]\n\nWhich removes a bunch of unnecessary heap allocations during network operations.\n\n[1] https://github.com/bitcoin/bitcoin/pull/18849\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/832887494/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891864160",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-891864160",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 891864160,
    "node_id": "IC_kwDOABII5841KMRg",
    "user": {
      "login": "0xB10C",
      "id": 19157360,
      "node_id": "MDQ6VXNlcjE5MTU3MzYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/19157360?u=a20996a145f1be613c7b0a57e75d36508572e29d&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xB10C",
      "html_url": "https://github.com/0xB10C",
      "followers_url": "https://api.github.com/users/0xB10C/followers",
      "following_url": "https://api.github.com/users/0xB10C/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xB10C/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xB10C/subscriptions",
      "organizations_url": "https://api.github.com/users/0xB10C/orgs",
      "repos_url": "https://api.github.com/users/0xB10C/repos",
      "events_url": "https://api.github.com/users/0xB10C/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xB10C/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-03T13:51:03Z",
    "updated_at": "2021-08-03T13:51:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK. Have you figured out a way to benchmark this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/891864160/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899568609",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-899568609",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 899568609,
    "node_id": "IC_kwDOABII5841nlPh",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-16T14:43:35Z",
    "updated_at": "2021-08-16T14:46:29Z",
    "author_association": "MEMBER",
    "body": "> MarcoFalke added Waiting for author Needs rebase labels 3 hours ago\r\n> DrahtBot removed the Needs rebase label 2 hours ago \r\n\r\nI think DrahtBot screwed up here. No rebase happened in between.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899568609/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923148025",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-923148025",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 923148025,
    "node_id": "IC_kwDOABII5843Bh75",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T17:54:40Z",
    "updated_at": "2021-09-20T17:54:40Z",
    "author_association": "MEMBER",
    "body": ":(",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923148025/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923238431",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-923238431",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 923238431,
    "node_id": "IC_kwDOABII5843B4Af",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T19:40:15Z",
    "updated_at": "2021-09-20T19:40:15Z",
    "author_association": "MEMBER",
    "body": "Any specific reason for closing?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923238431/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923320535",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-923320535",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 923320535,
    "node_id": "IC_kwDOABII5843CMDX",
    "user": {
      "login": "jb55",
      "id": 45598,
      "node_id": "MDQ6VXNlcjQ1NTk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/45598?u=2ba2cccaa0fd357b363507ce5694ce3cf5e56220&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jb55",
      "html_url": "https://github.com/jb55",
      "followers_url": "https://api.github.com/users/jb55/followers",
      "following_url": "https://api.github.com/users/jb55/following{/other_user}",
      "gists_url": "https://api.github.com/users/jb55/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jb55/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jb55/subscriptions",
      "organizations_url": "https://api.github.com/users/jb55/orgs",
      "repos_url": "https://api.github.com/users/jb55/repos",
      "events_url": "https://api.github.com/users/jb55/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jb55/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T21:19:13Z",
    "updated_at": "2021-09-20T21:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "lost interest. It's fine with me if someone else wants to pick it up.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923320535/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923415363",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-923415363",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 923415363,
    "node_id": "IC_kwDOABII5843CjND",
    "user": {
      "login": "vincenzopalazzo",
      "id": 17150045,
      "node_id": "MDQ6VXNlcjE3MTUwMDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17150045?u=ad52a04f992830b4d4bbe50d3fb6f89ee361537a&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vincenzopalazzo",
      "html_url": "https://github.com/vincenzopalazzo",
      "followers_url": "https://api.github.com/users/vincenzopalazzo/followers",
      "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}",
      "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions",
      "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs",
      "repos_url": "https://api.github.com/users/vincenzopalazzo/repos",
      "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T23:00:31Z",
    "updated_at": "2021-09-20T23:00:31Z",
    "author_association": "NONE",
    "body": "@jb55, I can be interested in it. \r\n\r\nI love your optimization, and maybe can be also a good starting point to push some code on bitcoin :-) ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923415363/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928936874",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#issuecomment-928936874",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18985",
    "id": 928936874,
    "node_id": "IC_kwDOABII5843XnOq",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-28T07:39:49Z",
    "updated_at": "2021-09-28T07:39:49Z",
    "author_association": "MEMBER",
    "body": "Rebased, with comments addressed in #23115.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/928936874/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470974869",
    "pull_request_review_id": 467970109,
    "id": 470974869,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDk3NDg2OQ==",
    "diff_hunk": "@@ -59,17 +59,15 @@ void CBloomFilter::insert(const COutPoint& outpoint)\n {\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << outpoint;\n-    std::vector<unsigned char> data(stream.begin(), stream.end());\n-    insert(data);\n+    insert(Span<const unsigned char>((const unsigned char*)stream.data(), stream.size()));",
    "path": "src/bloom.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "original_commit_id": "1466b656625b3896176d3aa6f794d1d8d0f7c3e0",
    "user": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could simply use the recently introduced `MakeUCharSpan()` helper here and on other occurences of the commit.",
    "created_at": "2020-08-15T12:51:58Z",
    "updated_at": "2021-04-28T21:19:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r470974869",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470974869"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r470974869"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/470974869/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582348",
    "pull_request_review_id": 723528226,
    "id": 683582348,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzU4MjM0OA==",
    "diff_hunk": "@@ -112,9 +112,9 @@ class CRollingBloomFilter\n public:\n     CRollingBloomFilter(const unsigned int nElements, const double nFPRate);\n \n-    void insert(const std::vector<unsigned char>& vKey);\n+    void insert(Span<const unsigned char> vKey);\n     void insert(const uint256& hash);\n-    bool contains(const std::vector<unsigned char>& vKey) const;\n+    bool contains(Span<const unsigned char> vKey) const;\n     bool contains(const uint256& hash) const;",
    "path": "src/bloom.h",
    "position": 32,
    "original_position": 32,
    "commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "original_commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "you can remove this method now",
    "created_at": "2021-08-05T15:52:50Z",
    "updated_at": "2021-08-05T15:53:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r683582348",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582348"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r683582348"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582348/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 118,
    "original_line": 118,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582437",
    "pull_request_review_id": 723528226,
    "id": 683582437,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MzU4MjQzNw==",
    "diff_hunk": "@@ -66,11 +66,11 @@ class CBloomFilter\n \n     SERIALIZE_METHODS(CBloomFilter, obj) { READWRITE(obj.vData, obj.nHashFuncs, obj.nTweak, obj.nFlags); }\n \n-    void insert(const std::vector<unsigned char>& vKey);\n+    void insert(Span<const unsigned char> vKey);\n     void insert(const COutPoint& outpoint);\n     void insert(const uint256& hash);\n \n-    bool contains(const std::vector<unsigned char>& vKey) const;\n+    bool contains(Span<const unsigned char> vKey) const;\n     bool contains(const COutPoint& outpoint) const;\n     bool contains(const uint256& hash) const;",
    "path": "src/bloom.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "original_commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "same",
    "created_at": "2021-08-05T15:52:57Z",
    "updated_at": "2021-08-05T15:53:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r683582437",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582437"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r683582437"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/683582437/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 75,
    "original_line": 75,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689371351",
    "pull_request_review_id": 730493251,
    "id": 689371351,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM3MTM1MQ==",
    "diff_hunk": "@@ -83,7 +83,7 @@ BOOST_AUTO_TEST_CASE(bloom_create_insert_key)\n     CBloomFilter filter(2, 0.001, 0, BLOOM_UPDATE_ALL);\n     filter.insert(vchPubKey);\n     uint160 hash = pubkey.GetID();\n-    filter.insert(std::vector<unsigned char>(hash.begin(), hash.end()));\n+    filter.insert(MakeUCharSpan(hash));",
    "path": "src/test/bloom_tests.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "original_commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "user": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for `MakeUCharSpan`, `filter.insert(hash);` works now too",
    "created_at": "2021-08-16T09:17:38Z",
    "updated_at": "2021-08-16T09:23:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r689371351",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689371351"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r689371351"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689371351/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 86,
    "original_line": 86,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689372096",
    "pull_request_review_id": 730493251,
    "id": 689372096,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4OTM3MjA5Ng==",
    "diff_hunk": "@@ -59,17 +59,15 @@ void CBloomFilter::insert(const COutPoint& outpoint)\n {\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << outpoint;\n-    std::vector<unsigned char> data(stream.begin(), stream.end());\n-    insert(data);\n+    insert(MakeUCharSpan(stream));",
    "path": "src/bloom.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "original_commit_id": "be8c3b4d6f86064914fd2151720bd5f80932a442",
    "user": {
      "login": "martinus",
      "id": 14386,
      "node_id": "MDQ6VXNlcjE0Mzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/14386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/martinus",
      "html_url": "https://github.com/martinus",
      "followers_url": "https://api.github.com/users/martinus/followers",
      "following_url": "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url": "https://api.github.com/users/martinus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/martinus/subscriptions",
      "organizations_url": "https://api.github.com/users/martinus/orgs",
      "repos_url": "https://api.github.com/users/martinus/repos",
      "events_url": "https://api.github.com/users/martinus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/martinus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need for `MakeUCharSpan`",
    "created_at": "2021-08-16T09:18:46Z",
    "updated_at": "2021-08-16T09:23:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r689372096",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689372096"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18985#discussion_r689372096"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18985"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/689372096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "RIGHT"
  }
]