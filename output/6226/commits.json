[
  {
    "sha": "4e157fc60dae5ca69933ea4c1585a2a078b4d957",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTE1N2ZjNjBkYWU1Y2E2OTkzM2VhNGMxNTg1YTJhMDc4YjRkOTU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-03T07:42:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-06-03T10:18:40Z"
      },
      "message": "json: fail read_string if string contains trailing garbage\n\nChange `read_string` to fail when not the entire input has been\nconsumed. This avoids unexpected, even dangerous behavior (fixes #6223).\n\nThe new JSON parser adapted in #6121 also solves this problem so in\nmaster this is a temporary fix, but should be backported to older releases.\n\nAlso adds tests for the new behavior.",
      "tree": {
        "sha": "aa97c939b76802d946b9c3f06351f1fdfcca1579",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa97c939b76802d946b9c3f06351f1fdfcca1579"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e157fc60dae5ca69933ea4c1585a2a078b4d957",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e157fc60dae5ca69933ea4c1585a2a078b4d957",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e157fc60dae5ca69933ea4c1585a2a078b4d957",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e157fc60dae5ca69933ea4c1585a2a078b4d957/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f00b62391b9317bf4c83676520fede1fb4027c43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00b62391b9317bf4c83676520fede1fb4027c43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f00b62391b9317bf4c83676520fede1fb4027c43"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 21,
      "deletions": 3
    },
    "files": [
      {
        "sha": "47e3c1ca84389149570af3dcb0b22b6566e02113",
        "filename": "src/json/json_spirit_reader_template.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e157fc60dae5ca69933ea4c1585a2a078b4d957/src/json/json_spirit_reader_template.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e157fc60dae5ca69933ea4c1585a2a078b4d957/src/json/json_spirit_reader_template.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/json/json_spirit_reader_template.h?ref=4e157fc60dae5ca69933ea4c1585a2a078b4d957",
        "patch": "@@ -521,12 +521,11 @@ namespace json_spirit\n      \n         const spirit_namespace::parse_info< Iter_type > info = \n                             spirit_namespace::parse( begin, end, \n-                                                    Json_grammer< Value_type, Iter_type >( semantic_actions ), \n+                                                    Json_grammer< Value_type, Iter_type >( semantic_actions ) >> spirit_namespace::end_p,\n                                                     spirit_namespace::space_p );\n \n         if( !info.hit )\n         {\n-            assert( false ); // in theory exception should already have been thrown\n             throw_error( info.stop, \"error\" );\n         }\n \n@@ -570,7 +569,8 @@ namespace json_spirit\n     {\n         typename String_type::const_iterator begin = s.begin();\n \n-        return read_range( begin, s.end(), value );\n+        bool success = read_range( begin, s.end(), value );\n+        return success && begin == s.end();\n     }\n \n     template< class Istream_type >"
      },
      {
        "sha": "5899671d2f8d3181e5bb322c7b5e4011dc668e5a",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e157fc60dae5ca69933ea4c1585a2a078b4d957/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e157fc60dae5ca69933ea4c1585a2a078b4d957/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=4e157fc60dae5ca69933ea4c1585a2a078b4d957",
        "patch": "@@ -140,6 +140,24 @@ BOOST_AUTO_TEST_CASE(rpc_parse_monetary_values)\n     BOOST_CHECK_EQUAL(AmountFromValue(ValueFromString(\"20999999.99999999\")), 2099999999999999LL);\n }\n \n+BOOST_AUTO_TEST_CASE(json_parse_errors)\n+{\n+    Value value;\n+    // Valid\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"1.0\"), value), true);\n+    // Valid, with trailing whitespace\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"1.0 \"), value), true);\n+    // Invalid, initial garbage\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"[1.0\"), value), false);\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"a1.0\"), value), false);\n+    // Invalid, trailing garbage\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"1.0sds\"), value), false);\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"1.0]\"), value), false);\n+    // BTC addresses should fail parsing\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"175tWpb8K1S7NmH4Zx6rewF9WQrcZv245W\"), value), false);\n+    BOOST_CHECK_EQUAL(read_string(std::string(\"3J98t1WpEZ73CNmQviecrnyiWrnqRhWNL\"), value), false);\n+}\n+\n BOOST_AUTO_TEST_CASE(rpc_boostasiotocnetaddr)\n {\n     // Check IPv4 addresses"
      }
    ]
  }
]