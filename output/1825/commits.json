[
  {
    "sha": "6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZjBjZWNmYzQ3MjY5ODExYjhmMWEyMGEyMWMyYWM2NzM2ZDI0YzJl",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-15T17:08:50Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-15T17:08:50Z"
      },
      "message": "tests for SetCompact and GetCompact of CBigNum",
      "tree": {
        "sha": "7bc9997cda069a3c2221d4a7fd306107c8566fc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bc9997cda069a3c2221d4a7fd306107c8566fc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
      "comment_count": 1,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a4e67afadd738151ae1cd4468b5422a21a0eabf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a4e67afadd738151ae1cd4468b5422a21a0eabf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a4e67afadd738151ae1cd4468b5422a21a0eabf"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 53,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5b898d149907200412a59a1675500c9e19f07055",
        "filename": "src/test/bignum_tests.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e/src/test/bignum_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e/src/test/bignum_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bignum_tests.cpp?ref=6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
        "patch": "@@ -122,4 +122,57 @@ BOOST_AUTO_TEST_CASE(bignum_setint64)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(bignum_SetCompact)\n+{\n+    CBigNum num;\n+    num.SetCompact(0);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x00123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"0\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0);\n+\n+    num.SetCompact(0x01123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x01120000);\n+\n+    // Make sure that we don't generate compacts with the 0x00800000 bit set\n+    num = 0x80;\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02008000);\n+\n+    num.SetCompact(0x01fedcba);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"-7e\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x01fe0000);\n+\n+    num.SetCompact(0x02123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x02123400);\n+\n+    num.SetCompact(0x03123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"123456\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x03123456);\n+\n+    num.SetCompact(0x04123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"12345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x04123456);\n+\n+    num.SetCompact(0x04923456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"-12345600\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x04923456);\n+\n+    num.SetCompact(0x05009234);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"92340000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x05009234);\n+\n+    num.SetCompact(0x20123456);\n+    BOOST_CHECK_EQUAL(num.GetHex(), \"1234560000000000000000000000000000000000000000000000000000000000\");\n+    BOOST_CHECK_EQUAL(num.GetCompact(), 0x20123456);\n+\n+    num.SetCompact(0xff123456);\n+    BOOST_CHECK_EQUAL(num.GetHexn+    BOOST_CHECK_EQUAL(num.GetCompact(), 0xff123456);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "48a10a37804a01b2533aea920567867deedc6b9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGExMGEzNzgwNGEwMWIyNTMzYWVhOTIwNTY3ODY3ZGVlZGM2Yjll",
    "commit": {
      "author": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-15T17:09:17Z"
      },
      "committer": {
        "name": "Christian von Roques",
        "email": "roques@mti.ag",
        "date": "2012-09-17T13:37:19Z"
      },
      "message": "reimplement CBigNum's compact encoding of difficulty targets\n\nUse shifts instead of going through the MPI representation of BIGNUMs.\nBe careful to keep the meaning of 0x00800000 as sign bit.",
      "tree": {
        "sha": "255f235e3522ad5da563bb60c951baea13e3b485",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/255f235e3522ad5da563bb60c951baea13e3b485"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48a10a37804a01b2533aea920567867deedc6b9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a10a37804a01b2533aea920567867deedc6b9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48a10a37804a01b2533aea920567867deedc6b9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48a10a37804a01b2533aea920567867deedc6b9e/comments",
    "author": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6f0cecfc47269811b8f1a20a21c2ac6736d24c2e"
      }
    ],
    "stats": {
      "total": 68,
      "additions": 54,
      "deletions": 14
    },
    "files": [
      {
        "sha": "a0e5f306b37390c0b955316c36560bb0050a8b58",
        "filename": "src/bignum.h",
        "status": "modified",
        "additions": 54,
        "deletions": 14,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48a10a37804a01b2533aea920567867deedc6b9e/src/bignum.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48a10a37804a01b2533aea920567867deedc6b9e/src/bignum.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bignum.h?ref=48a10a37804a01b2533aea920567867deedc6b9e",
        "patch": "@@ -262,28 +262,68 @@ class CBigNum : public BIGNUM\n         return vch;\n     }\n \n+    // The \"compact\" format is a representation of a whole\n+    // number N using an unsigned 32bit number similar to a\n+    // floating point format.\n+    // The most significant 8 bits are the unsigned exponent of base 256.\n+    // This exponent can be thought of as \"number of bytes of N\".\n+    // The lower 23 bits are the mantissa.\n+    // Bit number 24 (0x800000) represents the sign of N.\n+    // N = (-1^sign) * mantissa * 256^(exponent-3)\n+    //\n+    // Satoshi's original implementation used BN_bn2mpi() and BN_mpi2bn().\n+    // MPI uses the most significant bit of the first byte as sign.\n+    // Thus 0x1234560000 is compact (0x05123456)\n+    // and  0xc0de000000 is compact (0x0600c0de)\n+    // (0x05c0de00) would be -0x40de000000\n+    //\n+    // Bitcoin only uses this \"compact\" format for encoding difficulty\n+    // targets, which are unsigned 256bit quantities.  Thus, all the\n+    // complexities of the sign bit and using base 256 are probably an\n+    // implementation accident.\n+    //\n+    // This implementation directly uses shifts instead of going\n+    // through an intermediate MPI representation.\n     CBigNum& SetCompact(unsigned int nCompact)\n     {\n         unsigned int nSize = nCompact >> 24;\n-        std::vector<unsigned char> vch(4 + nSize);\n-        vch[3] = nSize;\n-        if (nSize >= 1) vch[4] = (nCompact >> 16) & 0xff;\n-        if (nSize >= 2) vch[5] = (nCompact >> 8) & 0xff;\n-        if (nSize >= 3) vch[6] = (nCompact >> 0) & 0xff;\n-        BN_mpi2bn(&vch[0], vch.size(), this);\n+        bool fNegative     =(nCompact & 0x00800000) != 0;\n+        unsigned int nWord = nCompact & 0x007fffff;\n+        if (nSize <= 3)\n+        {\n+            nWord >>= 8*(3-nSize);\n+            BN_set_word(this, nWord);\n+        }\n+        else\n+        {\n+            BN_set_word(this, nWord);\n+            BN_lshift(this, this, 8*(nSize-3));\n+        }\n+        BN_set_negative(this, fNegative);\n         return *this;\n     }\n \n     unsigned int GetCompact() const\n     {\n-        unsigned int nSize = BN_bn2mpi(this, NULL);\n-        std::vector<unsigned char> vch(nSize);\n-        nSize -= 4;\n-        BN_bn2mpi(this, &vch[0]);\n-        unsigned int nCompact = nSize << 24;\n-        if (nSize >= 1) nCompact |= (vch[4] << 16);\n-        if (nSize >= 2) nCompact |= (vch[5] << 8);\n-        if (nSize >= 3) nCompact |= (vch[6] << 0);\n+        unsigned int nSize = BN_num_bytes(this);\n+        unsigned int nCompact = 0;\n+        if (nSize <= 3)\n+            nCompact = BN_get_word(this) << 8*(3-nSize);\n+        else\n+        {\n+            CBigNum bn;\n+            BN_rshift(&bn, this, 8*(nSize-3));\n+            nCompact = BN_get_word(&bn);\n+        }\n+        // The 0x00800000 bit denotes the sign.\n+        // Thus, if it is already set, divide the mantissa by 256 and increase the exponent.\n+        if (nCompact & 0x00800000)\n+        {\n+            nCompact >>= 8;\n+            nSize++;\n+        }\n+        nCompact |= nSize << 24;\n+        nCompact |= (BN_is_negative(this) ? 0x00800000 : 0);\n         return nCompact;\n     }\n "
      }
    ]
  }
]