[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8589807",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8589807",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8589807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg1ODk4MDc=",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-15T22:22:59Z",
    "updated_at": "2012-09-15T22:22:59Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/34b6e1c052024a0c80069ef1a7ce63764a496007 for binaries and test log.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8589807/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8607208",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8607208",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8607208,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDcyMDg=",
    "user": {
      "login": "xanatos",
      "id": 821344,
      "node_id": "MDQ6VXNlcjgyMTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/821344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xanatos",
      "html_url": "https://github.com/xanatos",
      "followers_url": "https://api.github.com/users/xanatos/followers",
      "following_url": "https://api.github.com/users/xanatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/xanatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xanatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xanatos/subscriptions",
      "organizations_url": "https://api.github.com/users/xanatos/orgs",
      "repos_url": "https://api.github.com/users/xanatos/repos",
      "events_url": "https://api.github.com/users/xanatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xanatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-17T08:22:47Z",
    "updated_at": "2012-09-17T08:22:47Z",
    "author_association": "NONE",
    "body": "I haven't benchmarked it, but just to be sure, would it be possible to make a one-shot program to compare all the 4 billion possible compact value SetCompactOld() == SetCompactNew() and from the SetCompact() result GetCompactOld() == GetCompactNew()? (with possible I mean that I don't know how much fast are GetCompact and SetCompact. Being one shot I would find acceptable to take 24h, so it would need to do 50k compares/second.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8607208/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8609011",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8609011",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8609011,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MDkwMTE=",
    "user": {
      "login": "xanatos",
      "id": 821344,
      "node_id": "MDQ6VXNlcjgyMTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/821344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xanatos",
      "html_url": "https://github.com/xanatos",
      "followers_url": "https://api.github.com/users/xanatos/followers",
      "following_url": "https://api.github.com/users/xanatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/xanatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xanatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xanatos/subscriptions",
      "organizations_url": "https://api.github.com/users/xanatos/orgs",
      "repos_url": "https://api.github.com/users/xanatos/repos",
      "events_url": "https://api.github.com/users/xanatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xanatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-17T09:44:23Z",
    "updated_at": "2012-09-17T10:41:19Z",
    "author_association": "NONE",
    "body": "And if you want to document the compact format (something very useful I think), please write in the \"big comment\" the endianness of the mantissa and if ABCD are the 4 bytes of the compact number, which one is the exponent (A?) and which one is the mantissa (BCD in ?endian). As it is I think the format seems still \"black magic\".\n\nI'll add that you haven't really removed the internals of bignumber from the implementation: BN_num_bytes is based on the internal representation of BN. To make an example, BN_num_bytes of the 0 number is 0, while the .NET BigInteger serializes the 0 as a single { 0 } byte, and BN_num_bytes gives the length of the \"internal\" buffer of the BN, with the sign that is saved on another field, so BN_num_bytes(0xFF) == BN_num_bytes(-0xFF) == BN_num_bytes(0x7F) == BN_num_bytes(0x-7F) == 1.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8609011/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8616586",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8616586",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8616586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MTY1ODY=",
    "user": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-17T14:30:24Z",
    "updated_at": "2012-09-17T14:30:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "@xanatos: You're raising good questions and I've thus pushed an updated \"big comment\".\n\nOn testing the correctness of the implementation:  I've tested the equivalence of the old and new implementations for a reasonably big subset of all possible compact numbers.  While doing so I've benchmarked the new against the old implementation:  For sizes relevant to bitcoin the new implementation is ~80% faster.  For bigger sizes the speedup approaches ~900% due to the big intermediate value used by the old implementation.  \u2014  Compact numbers are such a small part of bitcoin, their speed is almost irrelevant; I'm hoping the new implementation is easier to understand, the speedup is just a nice side effect.\n\nAbout endianness:  The \"compact\" representation is not a serialization into bytes, but a mapping into and out of an unsigned 32 bit number.  The endianness (= order of bytes when mapping a number to a sequence of bytes) is thus irrelevant.  However, bitcoin serializes `CBlock::nBits` like any other `unsigned long`.\n\nThe semantics of `BN_num_bytes(n)` is well documented and part of the interface of OpenSSL.  It is _not_ the number of bytes used in a serialization of `n`, but the position of the most significant non-zero base256 digit of `n`.  It actually is implemented as `(BN_num_bits(n)+7)/8`.  (`BN_num_bits(10)` = 4 because decimal 10 = binary 1010)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8616586/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8626864",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8626864",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8626864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg2MjY4NjQ=",
    "user": {
      "login": "BitcoinPullTester",
      "id": 2110907,
      "node_id": "MDQ6VXNlcjIxMTA5MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2110907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/BitcoinPullTester",
      "html_url": "https://github.com/BitcoinPullTester",
      "followers_url": "https://api.github.com/users/BitcoinPullTester/followers",
      "following_url": "https://api.github.com/users/BitcoinPullTester/following{/other_user}",
      "gists_url": "https://api.github.com/users/BitcoinPullTester/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/BitcoinPullTester/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/BitcoinPullTester/subscriptions",
      "organizations_url": "https://api.github.com/users/BitcoinPullTester/orgs",
      "repos_url": "https://api.github.com/users/BitcoinPullTester/repos",
      "events_url": "https://api.github.com/users/BitcoinPullTester/events{/privacy}",
      "received_events_url": "https://api.github.com/users/BitcoinPullTester/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-17T19:05:25Z",
    "updated_at": "2012-09-17T19:05:25Z",
    "author_association": "NONE",
    "body": "Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/48a10a37804a01b2533aea920567867deedc6b9e for binaries and test log.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8626864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8768541",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8768541",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8768541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg3Njg1NDE=",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-21T15:35:27Z",
    "updated_at": "2012-09-21T16:14:28Z",
    "author_association": "MEMBER",
    "body": "I really like that this defines the number formats without relying on OpenSSL internals.\n\nI've checked all 32 bit numbers for SetCompact, comparing old and new implementations, with the following mismatches:\n- 0180xxxx  returns -0 (old) versus  0 (new)\n- 80800000 returns -0 (old) versus  0 (new)\n- 028000xx returns -0 (old) versus  0 (new)\n- xx800000 returns -0 (old) versus  0 (new)\n\nI'm not sure whether the distinction between +0/-0 is interesting, but there were no other differences.\n\nIf you want to verify for yourself, the test code is here: https://gist.github.com/3762207 . It takes about 20 minutes to run here.\n\nI've also checked GetCompactNew(SetCompactOld(x)) == GetCompactOld(SetCompactOld(x)) using the same code. There I  only find issues in handling signed/unsigned zero as well, for example:\n- SetCompactOld(01800000) produces GetCompactOld 0x00000000 and GetCompactNew 0x00800000\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8768541/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8856180",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-8856180",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 8856180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg4NTYxODA=",
    "user": {
      "login": "roques",
      "id": 523218,
      "node_id": "MDQ6VXNlcjUyMzIxOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/523218?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/roques",
      "html_url": "https://github.com/roques",
      "followers_url": "https://api.github.com/users/roques/followers",
      "following_url": "https://api.github.com/users/roques/following{/other_user}",
      "gists_url": "https://api.github.com/users/roques/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/roques/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/roques/subscriptions",
      "organizations_url": "https://api.github.com/users/roques/orgs",
      "repos_url": "https://api.github.com/users/roques/repos",
      "events_url": "https://api.github.com/users/roques/events{/privacy}",
      "received_events_url": "https://api.github.com/users/roques/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-09-25T14:30:10Z",
    "updated_at": "2012-09-25T14:30:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "OpenSSL's `BN_set_negative()` can not be used to create a -0:\n`void BN_set_negative(BIGNUM *a, int b)\n        {\n        if (b && !BN_is_zero(a))\n                a->neg = 1;\n        else\n                a->neg = 0;\n        }\n`\nIn fact, all of the OpenSSL basic arithmetic routines are careful not to create a -0.  `BN_mpi2bn()` however can be used to create a -0.\n\nI've looked at the uses of `SetCompact()` in bitcoind: They either are immediately followed by a `getuint256()` which ignores the sign, or a 0 instead of -0 does not make a difference.\n\nIf we want `GetCompact(-0)` to be 0 instead of 0x00800000 I could add a special case for that, but I don't think that's necessary.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/8856180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9635727",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-9635727",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 9635727,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk2MzU3Mjc=",
    "user": {
      "login": "xanatos",
      "id": 821344,
      "node_id": "MDQ6VXNlcjgyMTM0NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/821344?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xanatos",
      "html_url": "https://github.com/xanatos",
      "followers_url": "https://api.github.com/users/xanatos/followers",
      "following_url": "https://api.github.com/users/xanatos/following{/other_user}",
      "gists_url": "https://api.github.com/users/xanatos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xanatos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xanatos/subscriptions",
      "organizations_url": "https://api.github.com/users/xanatos/orgs",
      "repos_url": "https://api.github.com/users/xanatos/repos",
      "events_url": "https://api.github.com/users/xanatos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xanatos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-10-20T20:34:33Z",
    "updated_at": "2012-10-20T20:34:33Z",
    "author_association": "NONE",
    "body": "As another interesting sidenote, contrary to what it's written in the documentation, bn_get_word ignores the sign. So -255 returns 255 (the documentation says \"BN_get_word() returns the value a, and 0xffffffffL if a cannot be represented as an unsigned long.\" http://linux.die.net/man/3/bn_get_word , but clearly -255 can't be represented as an unsigned long)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/9635727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10359490",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/1825#issuecomment-10359490",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/1825",
    "id": 10359490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMzU5NDkw",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2012-11-14T09:10:24Z",
    "updated_at": "2012-11-14T09:10:24Z",
    "author_association": "MEMBER",
    "body": "ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/10359490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]