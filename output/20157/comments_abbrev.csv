MarcoFalke,2020-10-15 18:27:56,How is this bug observable?,https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-709511264,709511264,
luke-jr,2020-10-15 18:42:54,"I didn't try, but in theory the deployment params are going to be uninitialized and could be anything?",https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-709519565,709519565,
decryp2kanon,2020-10-18 18:12:27,taproot is already activated on global(?) signet? how to activate manually on my own custom signet?,https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-711349055,711349055,
decryp2kanon,2020-10-20 18:52:10,utACK 2d5793c0161902730cde384dbdf3e3ba3e55c9e0,https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713069064,713069064,
sipa,2020-10-20 18:53:43,"@kallewoof @ajtowns are you ok with having taproot always active on signet?\n\n@luke-jr Can you update the PR title as it's no longer disabled.",https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713069903,713069903,
kallewoof,2020-10-21 07:58:03,"> @kallewoof @ajtowns are you ok with having taproot always active on signet?\n\nYep!",https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713384559,713384559,
MarcoFalke,2020-10-21 08:05:56,review ACK 2d5793c0161902730cde384dbdf3e3ba3e55c9e0,https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713388883,713388883,
MarcoFalke,2020-10-21 11:44:38,"Master:\n\n```\n==2885080== Thread 23 b-qt-rpcconsole:\n==2885080== Conditional jump or move depends on uninitialised value(s)\n==2885080==    at 0x3F94F4: BIP9SoftForkDescPushBack(UniValue&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, Consensus::Params const&, Consensus::DeploymentPos) (blockchain.cpp:1220)\n==2885080==    by 0x3F8E11: operator() ",https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713510077,713510077,
MarcoFalke,2020-10-21 12:19:27,"Checked that this pull fixes the uninitialized read and also prints:\n\n```\n    ""taproot"": {\n      ""type"": ""bip9"",\n      ""bip9"": {\n        ""status"": ""active"",\n        ""start_time"": -1,\n        ""timeout"": 9223372036854775807,\n        ""since"": 0\n      },\n      ""height"": 0,\n      ""active"": true\n    }\n```",https://github.com/bitcoin/bitcoin/pull/20157#issuecomment-713528428,713528428,
MarcoFalke,2020-10-15 19:54:53,"```suggestion\n        consensus.vDeployments[Consensus::DEPLOYMENT_TAPROOT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n```\n\nShould be always active",https://github.com/bitcoin/bitcoin/pull/20157#discussion_r505801861,505801861,src/chainparams.cpp
ajtowns,2020-10-16 03:54:22,"I think the ideal behaviour might be to have it always active on the default global signet, but optional for custom signets. Without the ability to disable it for custom signets, it's not possible to make a custom signet that behaves the same as mainnet.\n\nSomething like https://github.com/ajtowns/bitcoin/commit/4ceae373743043fac372a27244538a2ee64d0295 perhaps",https://github.com/bitcoin/bitcoin/pull/20157#discussion_r506034834,506034834,src/chainparams.cpp
luke-jr,2020-10-16 16:32:12,"Well, testnet/regtest already have a way to configure these in the config file... maybe just copying/sharing that logic?",https://github.com/bitcoin/bitcoin/pull/20157#discussion_r506589547,506589547,src/chainparams.cpp
ajtowns,2020-10-17 01:53:43,"`-vbparams` is regtest-only, and I think more general than we'd want for something on signet. (I don't think signalling activations on signet is ever actually useful, in particular)",https://github.com/bitcoin/bitcoin/pull/20157#discussion_r506780583,506780583,src/chainparams.cpp
luke-jr,2020-10-20 13:31:09,Made it always active for now. Adding a new option for custom signets goes beyond a bugfix.,https://github.com/bitcoin/bitcoin/pull/20157#discussion_r508503926,508503926,src/chainparams.cpp
