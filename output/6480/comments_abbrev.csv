sipa,2015-07-27T14:34:54Z,"No objection, but I think it would make more sense to have an UpdatedTip signal in ValidationInterface which passed this just once, and let CWallets cache this value.\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125226980,125226980,
jonasschnelli,2015-07-27T14:41:04Z,I think the `SetBestChain()` is already there for a such case (tip was updated).\nHaving the `CBlockIndex` together with the `CBlock` would make sure we get the data together with the transaction to avoid deltas.\nAnd this solution has one **big plus**: the wallet(s) can detect if the transaction is in the mempool or not because the mempool SyncTransaction gives for `CBlock` as well as for `CBlock,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125229516,125229516,
sipa,2015-07-27T14:46:19Z,"SetBestChain is only called occasionally, and only when data is being flushed to disk.\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125231328,125231328,
sipa,2015-07-27T14:47:34Z,"Ah, I see, this passes the block index entry in which a transaction was found - which is not necessarily the current tip (for example during rescan).\n\nUntested ACK.\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125231627,125231627,
jonasschnelli,2015-07-27T14:58:06Z,I see the problem with `SetBestChain()`...\nSo it would make sense to have an UpdateTip() signal next to the conditional variable (https://github.com/bitcoin/bitcoin/blob/master/src/main.cpp#L1995)?\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125236761,125236761,
sipa,2015-07-27T15:07:55Z,"@jonasschnelli IMHO, yes. Note that that code position always has cs_main held, so listeners to such an UpdateTip signal couldn't do much (but updating a cached variable with the lastest best block is fine and useful).\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125239810,125239810,
jonasschnelli,2015-07-27T16:12:24Z,"@sipa: just detected that an additional UpdateTip() signal is unnecessary, because with this PR a wallet could keep track of the chaintip over the `SyncTranscation()` signal (connectTip and disconnectTip sends both a syncTransaction with the current chaintip), which a wallet could therefore compare and store locally.\nI try to reduce the `cs_main` locking to a very minimum and later even to zero (",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125259210,125259210,
sipa,2015-07-27T16:19:04Z,"@jonasschnelli So a wallet that does not have any new transactions coming in won't know what the current tip is? The wallet needs that information to compute confirmations. Right now, those checks require a call to main (CMerkleTx::GetDepthInMainChainINTERNAL) with associated cs_main lock. If we'd keep CBlockIndex pointers for the wallet transactions, and keep a copy of the tip (via an UpdateTip) ",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125261315,125261315,
jonasschnelli,2015-07-27T16:39:12Z,Agreed. Added a commit which would add a `UpdateTip()` signal.\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-125267315,125267315,
laanwj,2015-10-06T09:00:58Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-145791110,145791110,
jonasschnelli,2015-10-06T09:27:35Z,Rebased.\nRemoved the `UpdateTip()` signal because it was already added during the ZMQ integration.\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-145796796,145796796,
MarcoFalke,2015-11-16T16:01:39Z,"@jonasschnelli Needs travis kicked again. (Unrelated error, it seems)\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-157079620,157079620,
sipa,2015-11-28T13:13:34Z,Kicked.\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-160294905,160294905,
sipa,2015-11-28T15:33:44Z,Seems there is an actual bug here.\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-160311435,160311435,
laanwj,2015-12-03T15:17:50Z,Needs rebase\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-161672060,161672060,
jonasschnelli,2015-12-03T15:51:31Z,"Rebased.\nI think this is useful because it allows to remove even more `cs_main` locks (example: it would be possible for the wallet to keep track of the wax's height, etc.).\n",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-161684841,161684841,
jonasschnelli,2015-12-04T12:21:35Z,Also adapted the zmq interface for the slightly changed signal. Travis is now happy.\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-161954257,161954257,
morcos,2016-01-11T15:46:39Z,Concept ACK. \n\nBut unless I missed something this PR doesn't actually do anything yet right?\nWhy not save the commit to be part of a PR that actually takes advantage of this information?\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-170592278,170592278,
jonasschnelli,2016-01-11T16:11:49Z,"> But unless I missed something this PR doesn't actually do anything yet right?\n\nIt allows the wallet to keep track of the wtx heights independent of mempool and main (=step in wallet/core separation).\n\n> Why not save the commit to be part of a PR that actually takes advantage of this information?\n\nI just try to avoid a big ""this is a new wallet"" PR. IMO all PRs that are understandable and h",https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-170599394,170599394,
morcos,2016-01-11T16:35:29Z,ok no objection\n\nutACK\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-170609843,170609843,
laanwj,2016-02-04T16:01:24Z,ACK 7d0bf0b\n,https://github.com/bitcoin/bitcoin/pull/6480#issuecomment-179916709,179916709,
