[
  {
    "sha": "e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWQ2ODJmYWEzZThiZGI3YmUyZWExZDRiOTgzNWVlNTYzYTM1MWY0",
    "commit": {
      "author": {
        "name": "jnewbery",
        "email": "john@johnnewbery.com",
        "date": "2016-10-05T18:24:36Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2016-11-09T02:34:30Z"
      },
      "message": "Fix mininode version message format",
      "tree": {
        "sha": "6b149cbd91b46d5e9e03fe10e543c51d33609e4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b149cbd91b46d5e9e03fe10e543c51d33609e4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed64bcec2dde1f4255f3bd5b0c2f01e4dfe260d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed64bcec2dde1f4255f3bd5b0c2f01e4dfe260d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed64bcec2dde1f4255f3bd5b0c2f01e4dfe260d3"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 20,
      "deletions": 6
    },
    "files": [
      {
        "sha": "495c6bdf350d00a78646ed925fa9b8a1e6462a17",
        "filename": "qa/rpc-tests/test_framework/mininode.py",
        "status": "modified",
        "additions": 20,
        "deletions": 6,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4/qa/rpc-tests/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4/qa/rpc-tests/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/mininode.py?ref=e5d682faa3e8bdb7be2ea1d4b9835ee563a351f4",
        "patch": "@@ -41,6 +41,7 @@\n BIP0031_VERSION = 60000\n MY_VERSION = 70014  # past bip-31 for ping/pong\n MY_SUBVERSION = b\"/python-mininode-tester:0.0.3/\"\n+MY_RELAY = 1 # from version 70001 onwards, fRelay should be appended to version messages (BIP37)\n \n MAX_INV_SZ = 50000\n MAX_BLOCK_SIZE = 1000000\n@@ -951,6 +952,7 @@ def __init__(self):\n         self.nNonce = random.getrandbits(64)\n         self.strSubVer = MY_SUBVERSION\n         self.nStartingHeight = -1\n+        self.nRelay = MY_RELAY\n \n     def deserialize(self, f):\n         self.nVersion = struct.unpack(\"<i\", f.read(4))[0]\n@@ -960,21 +962,32 @@ def deserialize(self, f):\n         self.nTime = struct.unpack(\"<q\", f.read(8))[0]\n         self.addrTo = CAddress()\n         self.addrTo.deserialize(f)\n+\n         if self.nVersion >= 106:\n             self.addrFrom = CAddress()\n             self.addrFrom.deserialize(f)\n             self.nNonce = struct.unpack(\"<Q\", f.read(8))[0]\n             self.strSubVer = deser_string(f)\n-            if self.nVersion >= 209:\n-                self.nStartingHeight = struct.unpack(\"<i\", f.read(4))[0]\n-            else:\n-                self.nStartingHeight = None\n         else:\n             self.addrFrom = None\n             self.nNonce = None\n             self.strSubVer = None\n             self.nStartingHeight = None\n \n+        if self.nVersion >= 209:\n+            self.nStartingHeight = struct.unpack(\"<i\", f.read(4))[0]\n+        else:\n+            self.nStartingHeight = None\n+\n+        if self.nVersion >= 70001:\n+            # Relay field is optional for version 70001 onwards\n+            try:\n+                self.nRelay = struct.unpack(\"<b\", f.read(1))[0]\n+            except:\n+                self.nRelay = 0\n+        else:\n+            self.nRelay = 0\n+\n     def serialize(self):\n         r = b\"\"\n         r += struct.pack(\"<i\", self.nVersion)\n@@ -985,13 +998,14 @@ def serialize(self):\n         r += struct.pack(\"<Q\", self.nNonce)\n         r += ser_string(self.strSubVer)\n         r += struct.pack(\"<i\", self.nStartingHeight)\n+        r += struct.pack(\"<b\", self.nRelay)\n         return r\n \n     def __repr__(self):\n-        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i)' \\\n+        return 'msg_version(nVersion=%i nServices=%i nTime=%s addrTo=%s addrFrom=%s nNonce=0x%016X strSubVer=%s nStartingHeight=%i nRelay=%i)' \\\n             % (self.nVersion, self.nServices, time.ctime(self.nTime),\n                repr(self.addrTo), repr(self.addrFrom), self.nNonce,\n-               self.strSubVer, self.nStartingHeight)\n+               self.strSubVer, self.nStartingHeight, self.nRelay)\n \n \n class msg_verack(object):"
      }
    ]
  }
]