jonasschnelli,2020-08-27 09:45:39,"should someone verify if the right sources have been taken from upstream (unchanged)?\nhttps://github.com/tpoechtrager/apple-libtapi\nhttps://github.com/apple/llvm-project/commits/apple/stable/20190104\n\nWhy is the snv suffix in the library name required?",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-681844059,681844059,
fanquake,2020-08-27 14:24:58,"> Why is the snv suffix in the library name required?\n\nThe `.8svn` suffix comes from LLVMs dylib naming, which is the LLVM  major version number + the LLVM version suffix (`svn`). After building you can grep and find:\n```bash\nbuild/tools/llvm-config/BuildVariables.inc\n35:#define LLVM_DYLIB_VERSION ""8svn""\n\nbuild/include/llvm/Config/config.h\n330:#define PACKAGE_STRING ""LLVM 8.0.0svn""",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-681982567,681982567,
fanquake,2020-08-28 14:27:29,"> should someone verify if the right sources have been taken from upstream (unchanged)?\n\nI've posted a diff of the Clang and libtapi sources here: https://gist.github.com/fanquake/1512109cc69d0a61f352e326f34bb90a.\n\nYou can recreate the using the following steps:\nClang:\n```bash\ngit clone https://github.com/apple/llvm-project\ngit clone https://github.com/tpoechtrager/apple-libtapi\n",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-682615984,682615984,
promag,2020-08-28 14:37:22,"> If anyone wants an intro to `.tbd` stubs, I wrote something here using libconsensus: https://github.com/fanquake/core-review/blob/master/tbd-stubs.md.\n\nTIL, very nice! 👏 ",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-682632232,682632232,
MarcoFalke,2020-08-29 17:46:55,"```\nmake: Entering directory '/home/ubuntu/build/bitcoin/depends'\nExtracting native_cctools...\n/home/ubuntu/cache/common/55562e4073dea0fbfd0b20e0bf69ffe6390c7f97.tar.gz: OK\n/home/ubuntu/cache/common/clang-llvm-8.0.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz: OK\nsha256sum: /home/ubuntu/cache/common/86f43cdb62a3ceb39f3ee6e4568eded67a4912e8.tar.gz: No such file or directory\n/home/ubuntu/cache/",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-683321644,683321644,
MarcoFalke,2020-08-29 19:03:40,"Steps to reproduce:\n\n```\n   git checkout bitcoin-core/master \n   cd depends/\n   make download HOST=x86_64-apple-darwin16 \n   git cherry-pick 826d42903da5a927f296be1fa86096bce53d5f1b\n   make HOST=x86_64-apple-darwin16 \n",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-683330210,683330210,
laanwj,2020-09-03 10:22:24,"> If anyone wants an intro to .tbd stubs, I wrote something here using libconsensus: https://github.com/fanquake/core-review/blob/master/tbd-stubs.md.\n\nI've wanted this kind of thing forever. I wish this was cross-platform.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-686396270,686396270,
fanquake,2020-09-15 08:44:59,"This needs updating for a newer [libtapi update](https://github.com/tpoechtrager/apple-libtapi/commit/a66284251b46d591ee4a0cb4cf561b92a0c138d8), and one of either @dongcarl's or @hebasto's ""fix building dependant libs"" commits pulled in to fix the rebuilding.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-692565696,692565696,
jonasschnelli,2020-12-04 10:01:57,"@MarcoFalke: you need to clear the `depends/sources/` dir (a `make clean`) is not sufficient.\n\nTested ACK 1a1fc87169bc18db6a9897595401cf81c9b7427a - tested with Xcode-12.2-12B45b",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-738692278,738692278,
MarcoFalke,2020-12-04 10:09:39,"depends should ideally detect missing or outdated sources automatically and download them. This is how it used to work, am I wrong?",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-738696013,738696013,
fanquake,2020-12-09 13:15:42,"Seeing as this is now useful for a reason other than mentioned in the OP, I'll address outstanding issues and take this out of draft.\n\n> depends should ideally detect missing or outdated sources automatically and download them. This is how it used to work, am I wrong?\n\nIIRC this has never been the case for the `native_cctools` package. However it's always been masked by the fact that we'd ",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-741763289,741763289,
DrahtBot,2021-03-17 16:07:48,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21420 (build, qt: No longer need to patch translation.pro by hebasto)\n\nIf you consider this pull request important, ple",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-801210206,801210206,
fanquake,2021-03-18 02:47:45,"I've modified this to be a macOS toolchain bump, based on #21457, rather than updating libtapi individually.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-801575945,801575945,
hebasto,2021-03-31 00:30:01,"un-draft?\n:)",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810665506,810665506,
hebasto,2021-03-31 03:31:43,"Update https://github.com/bitcoin/bitcoin/blob/d9172f83e0bcdf877c25e044a13690bca99bac5a/contrib/gitian-descriptors/gitian-osx.yml#L34 ?\n\n(everywhere)",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810732142,810732142,
hebasto,2021-03-31 04:10:25,"#### Guix build:\n```\n$ find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n2862d0d9c21e5508b29932a6bf72a7b3e042e8283f6152ac421631ffa135f962  output/bitcoin-d9172f83e0bc-osx-unsigned.dmg\nd8e664c29b2998a6eb66ccf10afa07aa77ca9b11bbcba29c4f7fc2f4e5735810  output/bitcoin-d9172f83e0bc-osx-unsigned.tar.gz\n6ddd8eabe273518fdaa7aa0a848d8",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810744586,810744586,
fanquake,2021-03-31 05:01:37,"> Update\n> (everywhere)\n\nUpdated the missed replacement in the gitian descriptor, and version numbers in the CI. Was there something else missing?\n\nI've run Guix builds @ d9172f83e0bcdf877c25e044a13690bca99bac5a with various `MAX_JOBS`, (1,3,7,8), and have so far seen deterministic results:\n```bash\nbash-5.1# find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810762469,810762469,
hebasto,2021-03-31 05:16:12,https://github.com/bitcoin/bitcoin/blob/e4a2918238559e0b82e287833f51b321b97518ab/contrib/gitian-build.py#L213,https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810768597,810768597,
hebasto,2021-03-31 05:41:15,"#### Gitian builds:\n- `--jobs 8`\n```\nGenerating report\n52301a10a1e988dffa2ac71ece046c5c9de52578ef5f8ff06aa5fc7645a8e694  bitcoin-1e18d58d10d6-osx-unsigned.dmg\n4e0174e212ea233552d97299f304f08776263d45a0b1fccabdda60249083d30e  bitcoin-1e18d58d10d6-osx-unsigned.tar.gz\n82c36661f208f8501b6310d77b9b30d3b067d05614eb1fb9e575a08bb0a05580  bitcoin-1e18d58d10d6-osx64.tar.gz\n97326c1f6df4e48283b3",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810781442,810781442,
hebasto,2021-03-31 05:59:02,"#### Guix build:\n- `MAX_JOBS=8`\n```\n$ find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd965da3230f73a78c91473bf393b8cab6081a539fe335eca573f6bc4e3a4bb9a  output/bitcoin-1e18d58d10d6-osx-unsigned.dmg\n03c8b3575a0c6cb402dd8b7f9e1097a3f7303d1c90a562f8e54e863be9b7d9a0  output/bitcoin-1e18d58d10d6-osx-unsigned.tar.gz\ne2603c3a55d2",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810789722,810789722,
hebasto,2021-03-31 06:33:42,Looks like a new sdk archive should be uploaded to https://bitcoincore.org/depends-sources/sdks.,https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810810748,810810748,
fanquake,2021-03-31 08:04:29,"Guix:\nRan builds with varying `MAX_JOBS=`. i.e:\n```bash\ntime BASE_CACHE=""/guix/base_cache"" SOURCES_PATH=""/guix/sources"" SDK_PATH=""/guix/SDKs"" HOSTS=""x86_64-apple-darwin18"" MAX_JOBS=""1"" ./contrib/guix/guix-build.sh\n```\nall produced the same result.\n```bash\nbash-5.1# find output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd965d",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810865519,810865519,
hebasto,2021-03-31 10:13:17,"Tested 1e18d58d10d6021fc1833ea530963e42d2e4c5e6\nOn macOS Big Sur 11.2.3 (20D91) the dark mode (https://github.com/bitcoin-core/gui/pull/154) does not work.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-810949389,810949389,
goums,2021-03-31 15:33:32,"ACK 1e18d58d10d6021fc1833ea530963e42d2e4c5e6\nTested on macOS Big Sur 11.2.3.\n\n> Tested [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> On macOS Big Sur 11.2.3 (20D91) the dark mode ([bitcoin-core/gui#154](https://github.com/bitcoin-core/gui/pull/154)) does not work.\n\nDark mode is ok on my side after a clean rebuild and `make deploy`: \n!",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811160638,811160638,
hebasto,2021-03-31 16:47:46,"> ACK [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> Tested on macOS Big Sur 11.2.3.\n> \n> > Tested [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> > On macOS Big Sur 11.2.3 (20D91) the dark mode ([bitcoin-core/gui#154](https://github.com/bitcoin-core/gui/pull/154)) does not work.\n> \n> Dark ",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811244605,811244605,
hebasto,2021-03-31 16:59:47,"> Tested [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> On macOS Big Sur 11.2.3 (20D91) the dark mode ([bitcoin-core/gui#154](https://github.com/bitcoin-core/gui/pull/154)) does not work.\n\n@fanquake \nCould bumping Xcode/SDK be premature?\n\nQt [docs](https://doc.qt.io/qt-5.12/macos.html) mention only Xcode 10 (10.14 SDK) for Qt 5.12 :man_s",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811253136,811253136,
fanquake,2021-04-01 00:14:06,"> Could bumping Xcode/SDK be premature?\n> Qt docs mention only Xcode 10 (10.14 SDK) for Qt 5.12 🤷‍♂️\n\nJust because Xcode 10 is listed on that page, doesn't mean it's the only version that will work (I assume 10 was just the latest Xcode release at the time). We are already building with Xcode 11 (the Xcode version is also basically irrelevant, and Xcode itself is not even present when cross-",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811547537,811547537,
hebasto,2021-04-01 01:04:08,"FWIW, gitian build with dropped ""build: Xcode 12.1, macOS SDK 10.15.6"" commit also has a dark mode regression.\n\nAssuming that the root of problem lies elsewhere...",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811564578,811564578,
hebasto,2021-04-01 03:26:38,"Here are results of my tests:\n1. dark mode works if commit ""build: Clang 10.0.1"" is dropped\n2. tested `clang+llvm-10.0.0-x86_64-linux-gnu-ubuntu-18.04.tar.xz` -- fails\n3. tested `clang+llvm-11.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz` -- fails",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-811610551,811610551,
sipa,2021-04-01 19:22:31,"Guix build:\n\n```\nfind output -type f -name *$(git rev-parse --short HEAD)*.* -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd965da3230f73a78c91473bf393b8cab6081a539fe335eca573f6bc4e3a4bb9a  output/bitcoin-1e18d58d10d6-osx-unsigned.dmg\n03c8b3575a0c6cb402dd8b7f9e1097a3f7303d1c90a562f8e54e863be9b7d9a0  output/bitcoin-1e18d58d10d6-osx-unsigned.tar.gz\ne2603c3a55d2b948e46bcc3e481222f08",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-812119850,812119850,
DrahtBot,2021-04-05 05:16:30,"Pls, where to download xcode?",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-813188693,813188693,
fanquake,2021-04-16 01:14:37,"> Should this PR also handle updating this part of the GUIX readme?\n\nDone.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-820838951,820838951,
jarolrod,2021-04-16 03:49:06,"Guix hashes for fa11599c7c6bd8a326781728af5b914ce21449c3:\n\n```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\ne111a0d3a05e837f6efb6f8f22291ccbdaf6e28f7ceb6259eb42cc56971733df  guix-build-fa11599c7c6b/output/dist-archive/bitcoin-fa11599c7c6b.tar.gz\n446cd8b4afed859f7aac4c69964b7ef12d32db2fc0240b01e33142e13b84e918  gu",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-820886184,820886184,
hebasto,2021-04-22 13:12:53,"> Tested [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> On macOS Big Sur 11.2.3 (20D91) the dark mode ([bitcoin-core/gui#154](https://github.com/bitcoin-core/gui/pull/154)) does not work.\n\nFor now, it is clear that the ""build: Clang 10.0.1"" commit is the root of the problem.\n\nHere are my further investigation details.\n\n- master (e7776e",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-824829811,824829811,
hebasto,2021-04-22 16:12:58,"> Tested [1e18d58](https://github.com/bitcoin/bitcoin/commit/1e18d58d10d6021fc1833ea530963e42d2e4c5e6)\n> On macOS Big Sur 11.2.3 (20D91) the dark mode ([bitcoin-core/gui#154](https://github.com/bitcoin-core/gui/pull/154)) does not work.\n\nAnother round of tests.\n\n- master (e7776e20ed0ddf41d15b3d2df87a92ea6666226c)\n\n1) build depends\n2) substitute `depends/x86_64-apple-darwin18/native",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-824980525,824980525,
fanquake,2021-04-28 03:50:20,Added a commit to start using `-stdlib++-isystem` now that we are using Clang 10.,https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-828121905,828121905,
hebasto,2021-04-28 17:18:01,I think #21793 should go first :),https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-828632416,828632416,
fanquake,2021-05-01 06:09:18,Rebased for #21793. Will add updated gitian and guix build hashes to the PR description.,https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-830560196,830560196,
hebasto,2021-05-01 14:03:55,"> Having some trouble doing a gitian build, probably unrelated to this PR though...\n\nWhat if to re-run from the `--setup` command?",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-830638202,830638202,
Sjors,2021-05-01 15:35:04,"Reviewed code and tested a5550f8\n\nI was able to build on macOS 11.3 with Xcode 12.5 as well as cross-compile on Ubuntu. Those binaries seem to behave.\n\nI also did a gitian build:\n```\n506a8abdefe559999b43dd9f14905b9b2b5a3363b1cd013d45ae47acc1f7ef6c  bitcoin-a5550f877a2c-osx-unsigned.dmg\nf606997f74026dd12d110d683c6f116b40df324836904ef507dd7ac787e6ebe2  bitcoin-a5550f877a2c-osx-unsigned",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-830650857,830650857,
fanquake,2021-05-03 06:02:48,"Thanks for testing.\n> Not sure why bitcoin-core-osx-22-res.yml doesn't match:\n\nIt's not expected that `*-res.yml` files match.",https://github.com/bitcoin/bitcoin/pull/19817#issuecomment-831040737,831040737,
Sjors,2021-05-01 13:22:30,"Do we want to leapfrog to Xcode 12.5 or just leave this? There is a new SDK version 10.15.7 which was a security update, but I don't know if it's relevant to the things we use.",https://github.com/bitcoin/bitcoin/pull/19817#discussion_r624509638,624509638,depends/hosts/darwin.mk
fanquake,2021-05-03 06:02:33,Going to leave this as-is for now. May be revisited soon in regards to proper Apple ARM support.,https://github.com/bitcoin/bitcoin/pull/19817#discussion_r624889087,624889087,depends/hosts/darwin.mk
