[
  {
    "sha": "a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
    "node_id": "C_kwDOABII59oAKGEyNmU4ZWVmNDNjNWZmMGY0YTVjZDQ0ZDFkMzMxYTdiZDcyNTY0YTU",
    "commit": {
      "author": {
        "name": "Arnab Sen",
        "email": "arnabsen1729@gmail.com",
        "date": "2021-09-03T13:16:13Z"
      },
      "committer": {
        "name": "Arnab Sen",
        "email": "arnabsen1729@gmail.com",
        "date": "2021-11-28T06:04:44Z"
      },
      "message": "[tracing] tracepoint for utxocache flushes\n\nSigned-off-by: Arnab Sen <arnabsen1729@gmail.com>",
      "tree": {
        "sha": "c68d455a2072645ab0d6678e811a14afaa2aad4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c68d455a2072645ab0d6678e811a14afaa2aad4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/comments",
    "author": {
      "login": "arnabsen1729",
      "id": 51032928,
      "node_id": "MDQ6VXNlcjUxMDMyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51032928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnabsen1729",
      "html_url": "https://github.com/arnabsen1729",
      "followers_url": "https://api.github.com/users/arnabsen1729/followers",
      "following_url": "https://api.github.com/users/arnabsen1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnabsen1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnabsen1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnabsen1729/subscriptions",
      "organizations_url": "https://api.github.com/users/arnabsen1729/orgs",
      "repos_url": "https://api.github.com/users/arnabsen1729/repos",
      "events_url": "https://api.github.com/users/arnabsen1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnabsen1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "arnabsen1729",
      "id": 51032928,
      "node_id": "MDQ6VXNlcjUxMDMyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51032928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnabsen1729",
      "html_url": "https://github.com/arnabsen1729",
      "followers_url": "https://api.github.com/users/arnabsen1729/followers",
      "following_url": "https://api.github.com/users/arnabsen1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnabsen1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnabsen1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnabsen1729/subscriptions",
      "organizations_url": "https://api.github.com/users/arnabsen1729/orgs",
      "repos_url": "https://api.github.com/users/arnabsen1729/repos",
      "events_url": "https://api.github.com/users/arnabsen1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnabsen1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f8b1f8759301d2553183e14f72444a0f1d80725",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f8b1f8759301d2553183e14f72444a0f1d80725",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f8b1f8759301d2553183e14f72444a0f1d80725"
      }
    ],
    "stats": {
      "total": 129,
      "additions": 129,
      "deletions": 0
    },
    "files": [
      {
        "sha": "df55b9416291fd60cbe2ac3008f47bda5f11a844",
        "filename": "contrib/tracing/log_utxocache_flush.py",
        "status": "added",
        "additions": 105,
        "deletions": 0,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/contrib/tracing/log_utxocache_flush.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/contrib/tracing/log_utxocache_flush.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tracing/log_utxocache_flush.py?ref=a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
        "patch": "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python3\n+\n+import sys\n+import ctypes\n+from bcc import BPF, USDT\n+\n+\"\"\" Example script to log details about coins flushed by the Bitcoin client\n+utilizing USDT probes and the flush:flush tracepoint. \"\"\"\n+\n+# USAGE:  ./contrib/tracing/log_utxocache_flush.py path/to/bitcoind\n+\n+# BCC: The C program to be compiled to an eBPF program (by BCC) and loaded into\n+# a sandboxed Linux kernel VM.\n+program = \"\"\"\n+# include <uapi/linux/ptrace.h>\n+struct data_t\n+{\n+  u64 duration;\n+  u32 mode;\n+  u64 coins_count;\n+  u64 coins_mem_usage;\n+  bool is_flush_prune;\n+  bool is_full_flush;\n+};\n+// BPF perf buffer to push the data to user space.\n+BPF_PERF_OUTPUT(flush);\n+int trace_flush(struct pt_regs *ctx) {\n+  struct data_t data = {};\n+  bpf_usdt_readarg(1, ctx, &data.duration);\n+  bpf_usdt_readarg(2, ctx, &data.mode);\n+  bpf_usdt_readarg(3, ctx, &data.coins_count);\n+  bpf_usdt_readarg(4, ctx, &data.coins_mem_usage);\n+  bpf_usdt_readarg(5, ctx, &data.is_flush_prune);\n+  bpf_usdt_readarg(5, ctx, &data.is_full_flush);\n+  flush.perf_submit(ctx, &data, sizeof(data));\n+  return 0;\n+}\n+\"\"\"\n+\n+FLUSH_MODES = [\n+    'NONE',\n+    'IF_NEEDED',\n+    'PERIODIC',\n+    'ALWAYS'\n+]\n+\n+\n+# define output data structure\n+class Data(ctypes.Structure):\n+    _fields_ = [\n+        (\"duration\", ctypes.c_uint64),\n+        (\"mode\", ctypes.c_uint32),\n+        (\"coins_count\", ctypes.c_uint64),\n+        (\"coins_mem_usage\", ctypes.c_uint64),\n+        (\"is_flush_prune\", ctypes.c_bool),\n+        (\"is_full_flush\", ctypes.c_bool)\n+    ]\n+\n+\n+def print_event(event):\n+    print(\"%-15d %-10s %-15d %-15s %-8s %-8s\" % (\n+        event.duration,\n+        FLUSH_MODES[event.mode],\n+        event.coins_count,\n+        \"%.2f kB\" % (event.coins_mem_usage/1000),\n+        event.is_flush_prune,\n+        event.is_full_flush\n+    ))\n+\n+\n+def main(bitcoind_path):\n+    bitcoind_with_usdts = USDT(path=str(bitcoind_path))\n+\n+    # attaching the trace functions defined in the BPF program\n+    # to the tracepoints\n+    bitcoind_with_usdts.enable_probe(\n+        probe=\"flush\", fn_name=\"trace_flush\")\n+    b = BPF(text=program, usdt_contexts=[bitcoind_with_usdts])\n+\n+    def handle_flush(_, data, size):\n+        \"\"\" Coins Flush handler.\n+          Called each time coin caches and indexes are flushed.\"\"\"\n+        event = ctypes.cast(data, ctypes.POINTER(Data)).contents\n+        print_event(event)\n+\n+    b[\"flush\"].open_perf_buffer(handle_flush)\n+    print(\"Logging utxocache flushes. Ctrl-C to end...\")\n+    print(\"%-15s %-10s %-15s %-15s %-8s %-8s\" % (\"Duration (\u00b5s)\", \"Mode\",\n+                                                 \"Coins Count\", \"Memory Usage\",\n+                                                 \"Prune\", \"Full Flush\"))\n+\n+    while True:\n+        try:\n+            b.perf_buffer_poll()\n+        except KeyboardInterrupt:\n+            exit(0)\n+\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) < 2:\n+        print(\"USAGE: \", sys.argv[0], \"path/to/bitcoind\")\n+        exit(1)\n+\n+    path = sys.argv[1]\n+    main(path)"
      },
      {
        "sha": "4c181799283e207fd879206e2d9ec3381e582378",
        "filename": "doc/tracing.md",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/doc/tracing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/doc/tracing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tracing.md?ref=a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
        "patch": "@@ -108,6 +108,22 @@ Arguments passed:\n 5. SigOps in the Block (excluding coinbase SigOps) `uint64`\n 6. Time it took to connect the Block in microseconds (\u00b5s) as `uint64`\n \n+### Context `utxocache`\n+\n+#### Tracepoint `utxocache:flush`\n+\n+Is called *after* the caches and indexes are flushed depending on the mode\n+`CChainState::FlushStateToDisk` is called with.\n+\n+Arguments passed:\n+1. Duration in microseconds as `int64`\n+2. Flush state mode as `uint32`. It's an enumerator class with values `0`\n+   (`NONE`), `1` (`IF_NEEDED`), `2` (`PERIODIC`), `3` (`ALWAYS`)\n+3. Number of coins flushed as `uint64`\n+4. Memory usage in bytes as `uint64`\n+5. If the flush was pruned as `bool`\n+6. If it was full flush as `bool`\n+\n ## Adding tracepoints to Bitcoin Core\n \n To add a new tracepoint, `#include <util/trace.h>` in the compilation unit where"
      },
      {
        "sha": "7a14218b5ccc4b1ac6ea9d3e35ddbeed7016b1c8",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
        "patch": "@@ -2101,6 +2101,14 @@ bool CChainState::FlushStateToDisk(\n             nLastFlush = nNow;\n             full_flush_completed = true;\n         }\n+        TRACE6(utxocache, flush,\n+            (int64_t)(GetTimeMicros() - nNow.count()), // in microseconds (\u00b5s)\n+            (u_int32_t)mode,\n+            (u_int64_t)coins_count,\n+            (u_int64_t)coins_mem_usage,\n+            (bool)fFlushForPrune,\n+            (bool)fDoFullFlush\n+        );\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets)."
      }
    ]
  },
  {
    "sha": "2bc51c5c3215398875c04456a3f3df1c07b830b5",
    "node_id": "C_kwDOABII59oAKDJiYzUxYzVjMzIxNTM5ODg3NWMwNDQ1NmEzZjNkZjFjMDdiODMwYjU",
    "commit": {
      "author": {
        "name": "Arnab Sen",
        "email": "arnabsen1729@gmail.com",
        "date": "2021-09-03T16:38:53Z"
      },
      "committer": {
        "name": "Arnab Sen",
        "email": "arnabsen1729@gmail.com",
        "date": "2021-11-28T06:21:21Z"
      },
      "message": "[tracing] tracepoints to utxocache add, spent and uncache\n\nSigned-off-by: Arnab Sen <arnabsen1729@gmail.com>",
      "tree": {
        "sha": "aef191c5127b3a7e4a0d1c791e96b54c9958d082",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aef191c5127b3a7e4a0d1c791e96b54c9958d082"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bc51c5c3215398875c04456a3f3df1c07b830b5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc51c5c3215398875c04456a3f3df1c07b830b5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bc51c5c3215398875c04456a3f3df1c07b830b5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bc51c5c3215398875c04456a3f3df1c07b830b5/comments",
    "author": {
      "login": "arnabsen1729",
      "id": 51032928,
      "node_id": "MDQ6VXNlcjUxMDMyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51032928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnabsen1729",
      "html_url": "https://github.com/arnabsen1729",
      "followers_url": "https://api.github.com/users/arnabsen1729/followers",
      "following_url": "https://api.github.com/users/arnabsen1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnabsen1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnabsen1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnabsen1729/subscriptions",
      "organizations_url": "https://api.github.com/users/arnabsen1729/orgs",
      "repos_url": "https://api.github.com/users/arnabsen1729/repos",
      "events_url": "https://api.github.com/users/arnabsen1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnabsen1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "arnabsen1729",
      "id": 51032928,
      "node_id": "MDQ6VXNlcjUxMDMyOTI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51032928?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arnabsen1729",
      "html_url": "https://github.com/arnabsen1729",
      "followers_url": "https://api.github.com/users/arnabsen1729/followers",
      "following_url": "https://api.github.com/users/arnabsen1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/arnabsen1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arnabsen1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arnabsen1729/subscriptions",
      "organizations_url": "https://api.github.com/users/arnabsen1729/orgs",
      "repos_url": "https://api.github.com/users/arnabsen1729/repos",
      "events_url": "https://api.github.com/users/arnabsen1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arnabsen1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a26e8eef43c5ff0f4a5cd44d1d331a7bd72564a5"
      }
    ],
    "stats": {
      "total": 218,
      "additions": 208,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b71ce2f34b8ab723be14f36ee480e1b03fc4eee5",
        "filename": "contrib/tracing/README.md",
        "status": "modified",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tracing/README.md?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -234,3 +234,62 @@ Histogram of block connection times in milliseconds (ms).\n [16, 32)               9 |                                                    |\n [32, 64)               4 |                                                    |\n ```\n+\n+### log_utxocache_flush.py\n+\n+A BCC Python script to log the cache and index flushes. Based on the\n+`utxocache:flush` tracepoint.\n+\n+```bash\n+$ python3 contrib/tracing/log_utxocache_flush.py ./src/bitcoind\n+```\n+\n+```\n+Logging utxocache flushes. Ctrl-C to end...\n+Duration (\u00b5s)   Mode       Coins Count     Memory Usage    Prune    Full Flush\n+0               PERIODIC   28484           3929.87 kB      False    False\n+1               PERIODIC   28485           3930.00 kB      False    False\n+0               PERIODIC   28489           3930.51 kB      False    False\n+1               PERIODIC   28490           3930.64 kB      False    False\n+0               PERIODIC   28491           3930.77 kB      False    False\n+0               PERIODIC   28491           3930.77 kB      False    False\n+0               PERIODIC   28496           3931.41 kB      False    False\n+1               PERIODIC   28496           3931.41 kB      False    False\n+0               PERIODIC   28497           3931.54 kB      False    False\n+1               PERIODIC   28497           3931.54 kB      False    False\n+1               PERIODIC   28499           3931.79 kB      False    False\n+.\n+.\n+.\n+53788           ALWAYS     30076           4136.27 kB      False    False\n+7463            ALWAYS     0               245.84 kB       False    False\n+```\n+\n+### log_utxos.bt\n+\n+A `bpftrace` script to log information about the coins that are added, spent, or\n+uncached from the UTXO set. Based on the `utxocache:add`, `utxocache:spend` and\n+`utxocache:uncache` tracepoints.\n+\n+```bash\n+$ bpftrace contrib/tracing/log_utxos.bt\n+```\n+\n+It should produce an output similar to the following.\n+\n+```bash\n+Attaching 4 probes...\n+OP      Outpoint                                                                           Value  Height Coinbase\n+Added   6ba9ad857e1ef2eb2a2c94f06813c414c7ab273e3d6bd7ad64e000315a887e7c:1                 10000 2094512 No\n+Spent   fa7dc4db56637a151f6649d8f26732956d1c5424c82aae400a83d02b2cc2c87b:0             182264897 2094512 No\n+Added   eeb2f099b1af6a2a12e6ddd2eeb16fc5968582241d7f08ba202d28b60ac264c7:0                 10000 2094512 No\n+Added   eeb2f099b1af6a2a12e6ddd2eeb16fc5968582241d7f08ba202d28b60ac264c7:1             182254756 2094512 No\n+Added   a0c7f4ec9cccef2d89672a624a4e6c8237a17572efdd4679eea9e9ee70d2db04:0              10072679 2094513 Yes\n+Spent   25e0df5cc1aeb1b78e6056bf403e5e8b7e41f138060ca0a50a50134df0549a5e:2                   540 2094508 No\n+Spent   42f383c04e09c26a2378272ec33aa0c1bf4883ca5ab739e8b7e06be5a5787d61:1               3848399 2007724 No\n+Added   f85e3b4b89270863a389395cc9a4123e417ab19384cef96533c6649abd6b0561:0               3788399 2094513 No\n+Added   f85e3b4b89270863a389395cc9a4123e417ab19384cef96533c6649abd6b0561:2                   540 2094513 No\n+Spent   a05880b8c77971ed0b9f73062c7c4cdb0ff3856ab14cbf8bc481ed571cd34b83:1            5591281046 2094511 No\n+Added   eb689865f7d957938978d6207918748f74e6aa074f47874724327089445b0960:0            5589696005 2094513 No\n+Added   eb689865f7d957938978d6207918748f74e6aa074f47874724327089445b0960:1               1565556 2094513 No\n+```"
      },
      {
        "sha": "df27dc193a755a53874388392915fd199712c363",
        "filename": "contrib/tracing/log_utxocache_flush.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/log_utxocache_flush.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/log_utxocache_flush.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tracing/log_utxocache_flush.py?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -4,8 +4,8 @@\n import ctypes\n from bcc import BPF, USDT\n \n-\"\"\" Example script to log details about coins flushed by the Bitcoin client\n-utilizing USDT probes and the flush:flush tracepoint. \"\"\"\n+\"\"\"Example logging Bitcoin Core utxo set cache flushes utilizing\n+    the utxocache:flush tracepoint.\"\"\"\n \n # USAGE:  ./contrib/tracing/log_utxocache_flush.py path/to/bitcoind\n \n@@ -22,8 +22,10 @@\n   bool is_flush_prune;\n   bool is_full_flush;\n };\n+\n // BPF perf buffer to push the data to user space.\n BPF_PERF_OUTPUT(flush);\n+\n int trace_flush(struct pt_regs *ctx) {\n   struct data_t data = {};\n   bpf_usdt_readarg(1, ctx, &data.duration);\n@@ -45,8 +47,8 @@\n ]\n \n \n-# define output data structure\n class Data(ctypes.Structure):\n+    # define output data structure corresponding to struct data_t\n     _fields_ = [\n         (\"duration\", ctypes.c_uint64),\n         (\"mode\", ctypes.c_uint32),"
      },
      {
        "sha": "0d47f3d62bc96d5e7cca0c41711d3252a94b195a",
        "filename": "contrib/tracing/log_utxos.bt",
        "status": "added",
        "additions": 86,
        "deletions": 0,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/log_utxos.bt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/contrib/tracing/log_utxos.bt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tracing/log_utxos.bt?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -0,0 +1,86 @@\n+#!/usr/bin/env bpftrace\n+\n+/*\n+\n+  USAGE:\n+\n+  bpftrace contrib/tracing/log_utxos.bt\n+\n+  This script requires a 'bitcoind' binary compiled with eBPF support and the\n+  'utxochache' tracepoints. By default, it's assumed that 'bitcoind' is\n+  located in './src/bitcoind'. This can be modified in the script below.\n+\n+  NOTE: requires bpftrace v0.12.0 or above.\n+*/\n+\n+BEGIN\n+{\n+    printf(\"%-7s %-71s %16s %7s %8s\\n\",\n+          \"OP\", \"Outpoint\", \"Value\", \"Height\", \"Coinbase\");\n+}\n+\n+/*\n+  Attaches to the 'utxocache:add' tracepoint and prints additions to the UTXO set cache.\n+*/\n+usdt:./src/bitcoind:utxocache:add\n+{\n+  $txid = arg0;\n+  $index = (uint32)arg1;\n+  $height = (uint32)arg2;\n+  $value = (int64)arg3;\n+  $isCoinbase = arg4;\n+\n+  printf(\"Added   \");\n+  $p = $txid + 31;\n+  unroll(32) {\n+    $b = *(uint8*)$p;\n+    printf(\"%02x\", $b);\n+    $p-=1;\n+  }\n+\n+  printf(\":%-6d %16ld %7d %s\\n\", $index, $value, $height, ($isCoinbase ? \"Yes\" : \"No\" ));\n+}\n+\n+/*\n+  Attaches to the 'utxocache:spent' tracepoint and prints spents from the UTXO set cache.\n+*/\n+usdt:./src/bitcoind:utxocache:spent\n+{\n+  $txid = arg0;\n+  $index = (uint32)arg1;\n+  $height = (uint32)arg2;\n+  $value = (int64)arg3;\n+  $isCoinbase = arg4;\n+\n+  printf(\"Spent   \");\n+  $p = $txid + 31;\n+  unroll(32) {\n+    $b = *(uint8*)$p;\n+    printf(\"%02x\", $b);\n+    $p-=1;\n+  }\n+\n+  printf(\":%-6d %16ld %7d %s\\n\", $index, $value, $height, ($isCoinbase ? \"Yes\" : \"No\" ));\n+}\n+\n+/*\n+  Attaches to the 'utxocache:uncache' tracepoint and uncache UTXOs from the UTXO set cache.\n+*/\n+usdt:./src/bitcoind:utxocache:uncache\n+{\n+  $txid = arg0;\n+  $index = (uint32)arg1;\n+  $height = (uint32)arg2;\n+  $value = (int64)arg3;\n+  $isCoinbase = arg4;\n+\n+  printf(\"Uncache \");\n+  $p = $txid + 31;\n+  unroll(32) {\n+    $b = *(uint8*)$p;\n+    printf(\"%02x\", $b);\n+    $p-=1;\n+  }\n+\n+  printf(\":%-6d %16ld %7d %s\\n\", $index, $value, $height, ($isCoinbase ? \"Yes\" : \"No\" ));\n+}"
      },
      {
        "sha": "5b9ba09c2f8d1239ec62bbe21ac2d35dd1eb6f9c",
        "filename": "doc/tracing.md",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/doc/tracing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/doc/tracing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tracing.md?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -124,6 +124,39 @@ Arguments passed:\n 5. If the flush was pruned as `bool`\n 6. If it was full flush as `bool`\n \n+#### Tracepoint `utxocache:add`\n+\n+It is called when a new coin is added to the UTXO cache.\n+\n+Arguments passed:\n+1. Transaction ID (hash) as `pointer to unsigned chars` (i.e. 32 bytes in little-endian)\n+2. Output index as `uint32`\n+3. Block height the coin was added to the UTXO-set as  `uint32`\n+4. Value of the coin as `int64`\n+5. If the coin is a coinbase as `bool`\n+\n+#### Tracepoint `utxocache:spent`\n+\n+It is called when a coin is spent from the UTXO cache.\n+\n+Arguments passed:\n+1. Transaction ID (hash) as `pointer to unsigned chars` (i.e. 32 bytes in little-endian)\n+2. Output index as `uint32`\n+3. Block height the coin was spent, as `uint32`\n+4. Value of the coin as `int64`\n+5. If the coin is a coinbase as `bool`\n+\n+#### Tracepoint `utxocache:uncache`\n+\n+It is called when the UTXO with the given outpoint is removed from the cache.\n+\n+Arguments passed:\n+1. Transaction ID (hash) as `pointer to unsigned chars` (i.e. 32 bytes in little-endian)\n+2. Output index as `uint32`\n+3. Block height the coin was uncached, as `uint32`\n+4. Value of the coin as `int64`\n+. If the coin is a coinbase as `bool`\n+\n ## Adding tracepoints to Bitcoin Core\n \n To add a new tracepoint, `#include <util/trace.h>` in the compilation unit where"
      },
      {
        "sha": "daead6055e117fd3c55a936498380046c3aea0dd",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -7,6 +7,7 @@\n #include <consensus/consensus.h>\n #include <logging.h>\n #include <random.h>\n+#include <util/trace.h>\n #include <version.h>\n \n bool CCoinsView::GetCoin(const COutPoint &outpoint, Coin &coin) const { return false; }\n@@ -95,6 +96,12 @@ void CCoinsViewCache::AddCoin(const COutPoint &outpoint, Coin&& coin, bool possi\n     it->second.coin = std::move(coin);\n     it->second.flags |= CCoinsCacheEntry::DIRTY | (fresh ? CCoinsCacheEntry::FRESH : 0);\n     cachedCoinsUsage += it->second.coin.DynamicMemoryUsage();\n+    TRACE5(utxocache, add,\n+           outpoint.hash.data(),\n+           (uint32_t)outpoint.n,\n+           (uint32_t)coin.nHeight,\n+           (int64_t)coin.out.nValue,\n+           (bool)coin.IsCoinBase());\n }\n \n void CCoinsViewCache::EmplaceCoinInternalDANGER(COutPoint&& outpoint, Coin&& coin) {\n@@ -120,6 +127,12 @@ bool CCoinsViewCache::SpendCoin(const COutPoint &outpoint, Coin* moveout) {\n     CCoinsMap::iterator it = FetchCoin(outpoint);\n     if (it == cacheCoins.end()) return false;\n     cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n+    TRACE5(utxocache, spent,\n+           outpoint.hash.data(),\n+           (uint32_t)outpoint.n,\n+           (uint32_t)it->second.coin.nHeight,\n+           (int64_t)it->second.coin.out.nValue,\n+           (bool)it->second.coin.IsCoinBase());\n     if (moveout) {\n         *moveout = std::move(it->second.coin);\n     }\n@@ -231,6 +244,12 @@ void CCoinsViewCache::Uncache(const COutPoint& hash)\n     CCoinsMap::iterator it = cacheCoins.find(hash);\n     if (it != cacheCoins.end() && it->second.flags == 0) {\n         cachedCoinsUsage -= it->second.coin.DynamicMemoryUsage();\n+        TRACE5(utxocache, uncache,\n+               hash.hash.data(),\n+               (uint32_t)hash.n,\n+               (uint32_t)it->second.coin.nHeight,\n+               (int64_t)it->second.coin.out.nValue,\n+               (bool)it->second.coin.IsCoinBase());\n         cacheCoins.erase(it);\n     }\n }"
      },
      {
        "sha": "86d2ae7577a22ccf7f4a95e97f0eddd268d4b4bf",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bc51c5c3215398875c04456a3f3df1c07b830b5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bc51c5c3215398875c04456a3f3df1c07b830b5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2bc51c5c3215398875c04456a3f3df1c07b830b5",
        "patch": "@@ -2102,13 +2102,12 @@ bool CChainState::FlushStateToDisk(\n             full_flush_completed = true;\n         }\n         TRACE6(utxocache, flush,\n-            (int64_t)(GetTimeMicros() - nNow.count()), // in microseconds (\u00b5s)\n-            (u_int32_t)mode,\n-            (u_int64_t)coins_count,\n-            (u_int64_t)coins_mem_usage,\n-            (bool)fFlushForPrune,\n-            (bool)fDoFullFlush\n-        );\n+               (int64_t)(GetTimeMicros() - nNow.count()), // in microseconds (\u00b5s)\n+               (u_int32_t)mode,\n+               (u_int64_t)coins_count,\n+               (u_int64_t)coins_mem_usage,\n+               (bool)fFlushForPrune,\n+               (bool)fDoFullFlush);\n     }\n     if (full_flush_completed) {\n         // Update best block in wallet (so we can detect restored wallets)."
      }
    ]
  }
]