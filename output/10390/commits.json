[
  {
    "sha": "091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTFhOWFlMjFjNDdlYTdjNDc5ZTU4NDY1ZmY4YWFlZTdhMzc4ZmM1",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-05-11T20:41:53Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2017-05-12T02:28:46Z"
      },
      "message": "remove minimum total fee option",
      "tree": {
        "sha": "f5b5f3e4a8c47f0e7aa09f74a450194db6566981",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5b5f3e4a8c47f0e7aa09f74a450194db6566981"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94e52273f30fc9f3f1a7b58778ed21781bb2a744",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94e52273f30fc9f3f1a7b58778ed21781bb2a744",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94e52273f30fc9f3f1a7b58778ed21781bb2a744"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 1,
      "deletions": 46
    },
    "files": [
      {
        "sha": "135cf6f701a8dfc0b69b6e0860c51259efc12fcc",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
        "patch": "@@ -513,8 +513,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n \n         // Fee\n         nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, ::mempool, ::feeEstimator);\n-        if (nPayFee > 0 && coinControl->nMinimumTotalFee > nPayFee)\n-            nPayFee = coinControl->nMinimumTotalFee;\n \n         if (nPayAmount > 0)\n         {\n@@ -573,7 +571,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l5->setText(((nBytes > 0) ? ASYMP_UTF8 : \"\") + QString::number(nBytes));        // Bytes\n     l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n-    if (nPayFee > 0 && (coinControl->nMinimumTotalFee < nPayFee))\n+    if (nPayFee > 0)\n     {\n         l3->setText(ASYMP_UTF8 + l3->text());\n         l4->setText(ASYMP_UTF8 + l4->text());"
      },
      {
        "sha": "89f9c25d143697f8a61317d0307d38eafd745acb",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
        "patch": "@@ -861,19 +861,6 @@\n                    </attribute>\n                   </widget>\n                  </item>\n-                 <item>\n-                  <widget class=\"QRadioButton\" name=\"radioCustomAtLeast\">\n-                   <property name=\"toolTip\">\n-                    <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n-                   </property>\n-                   <property name=\"text\">\n-                    <string>total at least</string>\n-                   </property>\n-                   <attribute name=\"buttonGroup\">\n-                    <string notr=\"true\">groupCustomFee</string>\n-                   </attribute>\n-                  </widget>\n-                 </item>\n                  <item>\n                   <widget class=\"BitcoinAmountField\" name=\"customFee\"/>\n                  </item>"
      },
      {
        "sha": "67b75b862ddb3aeeb89a6f80442566b25bb7c447",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
        "patch": "@@ -111,7 +111,6 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     ui->groupFee->setId(ui->radioCustomFee, 1);\n     ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n     ui->groupCustomFee->setId(ui->radioCustomPerKilobyte, 0);\n-    ui->groupCustomFee->setId(ui->radioCustomAtLeast, 1);\n     ui->groupCustomFee->button((int)std::max(0, std::min(1, settings.value(\"nCustomFeeRadio\").toInt())))->setChecked(true);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n     ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n@@ -608,7 +607,6 @@ void SendCoinsDialog::updateFeeSectionControls()\n     ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n     ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n     ui->radioCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n-    ui->radioCustomAtLeast      ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked() && CoinControlDialog::coinControl->HasSelected());\n     ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n }\n \n@@ -619,19 +617,12 @@ void SendCoinsDialog::updateGlobalFeeVariables()\n         int nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n         payTxFee = CFeeRate(0);\n \n-        // set nMinimumTotalFee to 0 to not accidentally pay a custom fee\n-        CoinControlDialog::coinControl->nMinimumTotalFee = 0;\n-\n         // show the estimated required time for confirmation\n         ui->confirmationTargetLabel->setText(GUIUtil::formatDurationStr(nConfirmTarget * Params().GetConsensus().nPowTargetSpacing) + \" / \" + tr(\"%n block(s)\", \"\", nConfirmTarget));\n     }\n     else\n     {\n         payTxFee = CFeeRate(ui->customFee->value());\n-\n-        // if user has selected to set a minimum absolute fee, pass the value to coincontrol\n-        // set nMinimumTotalFee to 0 in case of user has selected that the fee is per KB\n-        CoinControlDialog::coinControl->nMinimumTotalFee = ui->radioCustomAtLeast->isChecked() ? ui->customFee->value() : 0;\n     }\n }\n \n@@ -830,21 +821,6 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (!model || !model->getOptionsModel())\n         return;\n \n-    if (model->getOptionsModel()->getCoinControlFeatures())\n-    {\n-        // enable minimum absolute fee UI controls\n-        ui->radioCustomAtLeast->setVisible(true);\n-\n-        // only enable the feature if inputs are selected\n-        ui->radioCustomAtLeast->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked() &&CoinControlDialog::coinControl->HasSelected());\n-    }\n-    else\n-    {\n-        // in case coin control is disabled (=default), hide minimum absolute fee UI controls\n-        ui->radioCustomAtLeast->setVisible(false);\n-        return;\n-    }\n-\n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n     CoinControlDialog::fSubtractFeeFromAmount = false;"
      },
      {
        "sha": "cb4719ae90c01710f27ee77488680a365d081b84",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
        "patch": "@@ -18,8 +18,6 @@ class CCoinControl\n     bool fAllowOtherInputs;\n     //! Includes watch only addresses which match the ISMINE_WATCH_SOLVABLE criteria\n     bool fAllowWatchOnly;\n-    //! Minimum absolute fee (not per kilobyte)\n-    CAmount nMinimumTotalFee;\n     //! Override estimated feerate\n     bool fOverrideFeeRate;\n     //! Feerate to use if overrideFeeRate is true\n@@ -40,7 +38,6 @@ class CCoinControl\n         fAllowOtherInputs = false;\n         fAllowWatchOnly = false;\n         setSelected.clear();\n-        nMinimumTotalFee = 0;\n         nFeeRate = CFeeRate(0);\n         fOverrideFeeRate = false;\n         nConfirmTarget = 0;"
      },
      {
        "sha": "c2316679b4d0a1bdedb84733f457194258f046d0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/091a9ae21c47ea7c479e58465ff8aaee7a378fc5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=091a9ae21c47ea7c479e58465ff8aaee7a378fc5",
        "patch": "@@ -2599,9 +2599,6 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                     currentConfirmationTarget = coinControl->nConfirmTarget;\n \n                 CAmount nFeeNeeded = GetMinimumFee(nBytes, currentConfirmationTarget, ::mempool, ::feeEstimator);\n-                if (coinControl && nFeeNeeded > 0 && coinControl->nMinimumTotalFee > nFeeNeeded) {\n-                    nFeeNeeded = coinControl->nMinimumTotalFee;\n-                }\n                 if (coinControl && coinControl->fOverrideFeeRate)\n                     nFeeNeeded = coinControl->nFeeRate.GetFee(nBytes);\n "
      }
    ]
  }
]