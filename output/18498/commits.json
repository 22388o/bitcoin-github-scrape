[
  {
    "sha": "9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGU4NmU0ZjAwYmRkZTcwY2RiODhjOWJjY2UwNWE5MWQ2YTM2N2I5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-01T14:02:35Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T13:27:22Z"
      },
      "message": "test: allow p2p connections without sync_with_ping\n\nfor cases where the add_p2p_connection is already followed with a call to\nsync_with_ping or send_with_ping, or where the test integrity appears better\nserved by not performing the sync_with_ping, which was added as a default in\nfa906470.",
      "tree": {
        "sha": "66ed8f21b65244a7198ca6afbdcd186e027efed5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66ed8f21b65244a7198ca6afbdcd186e027efed5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6e9LoACgkQT1chs9Dj\nkh23LxAAkDf+X1jxUodYhxmo+iuzF9aO87GhAq3ibv9S/QH1Vqc4qkzhZ6ctQuDT\nadP8EfeVfzET6mBfAxpb/PuL+ImsXNVHZTgoMD+lG1CznfsC9yNRe27KVT65V3Tp\nD/8vPjHZDcvQrOtg/6GvujUxyuFlLuuRngjGy4rDDZ2Yug6VsNMR0EY2Kk1JenYk\ndoJ6ltQ9AbUCW+hBhRcwwAPUZtypqaAc0DK8HCQQfaxKd4PUL0xG6Sdj5ZfeWRaf\nWt0XchF6gHIEwtHdnC60UaNhZmiIXApaYt2a3OW5R3Y/oIGacTJBR3ba+6pfQ+Nr\nrYhvErJRDoAFwBDBtGshOLerqvCdezinh+gedaImFjKEm05B9inVVyeVzsHNDIb+\nZsyPSR2z9L/Mce11+svD8fmXLa1H280zan7Dp+EE5437AHhJh53hh1UT2W9VSSmo\nuB/hukyOfMVKc1W4/f5suvg940jt4lnDbcmxHvhS/wl361ZZ9CxwyoKTza2vaoDh\n5xRHl/VwcYy+oX3Xv0MsOI9ClmZfCCOmU4XlcFxr7+c4PGhpOH2vjxAQuBc0/DB8\nsg24h27Z8CHK0uOqe7f7nC5EliaYBQotSaL3Nfa3gcEEMWWEO+hpfIsuFuP8p8va\nAmobUpoVEdgK2cYwhikwrzAsyz3kzYQoRDTiMr1X2U8848xNlk4=\n=RB/E\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFZWvsukMCAAQ2UYJHtxuk/v6z7DBh7AqUt4iiIN0GTaCP/wECySnLqFFOId\na/QfT9TVr0sI8QRenvS88Ajm9RUi6KwkmACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFDFmlFG+nusVlTCzxAJ\n8vAI8QRenvS88AjhKMeNYCOdIwCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEHLwdQ/UeFDLuJgR6EjYcGEI8QRenvS8\n8Aj1j52ejpAZngCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxs\nYXh5LmNvbfAQmTL08LTWX7hERClTOnVlPgjxBF6e9LzwCJEvL7qXtvvNAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 66ed8f21b65244a7198ca6afbdcd186e027efed5\nparent 977328338e468390feea691de744609db213281b\nauthor Jon Atack <jon@atack.com> 1585749755 +0200\ncommitter Jon Atack <jon@atack.com> 1587475642 +0200\n\ntest: allow p2p connections without sync_with_ping\n\nfor cases where the add_p2p_connection is already followed with a call to\nsync_with_ping or send_with_ping, or where the test integrity appears better\nserved by not performing the sync_with_ping, which was added as a default in\nfa906470.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "977328338e468390feea691de744609db213281b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/977328338e468390feea691de744609db213281b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/977328338e468390feea691de744609db213281b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fd66a38d3d778fa43c25d38139bd2210aace6300",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
        "patch": "@@ -475,7 +475,7 @@ def assert_start_raises_init_error(self, extra_args=None, expected_msg=None, mat\n                     assert_msg = \"bitcoind should have exited with expected error \" + expected_msg\n                 self._raise_assertion_error(assert_msg)\n \n-    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n+    def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, sync_with_ping=True, **kwargs):\n         \"\"\"Add a p2p connection to the node.\n \n         This method adds the p2p connection to the self.p2ps list and also\n@@ -500,7 +500,11 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n             #\n             # So syncing here is redundant when we only want to send a message, but the cost is low (a few milliseconds)\n             # in comparision to the upside of making tests less fragile and unexpected intermittent errors less likely.\n-            p2p_conn.sync_with_ping()\n+            #\n+            # If a caller needs to open a partial connection for testing purposes or follows this call with send_with_ping\n+            # (or send_message + sync_with_ping), it may avoid syncing here by passing sync_with_ping=False.\n+            if sync_with_ping:\n+                p2p_conn.sync_with_ping()\n \n         return p2p_conn\n "
      }
    ]
  },
  {
    "sha": "522bdf647e807a1cc1cb3947c16a9d7e6469612a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjJiZGY2NDdlODA3YTFjYzFjYjM5NDdjMTZhOWQ3ZTY0Njk2MTJh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-01T13:37:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-04-21T13:31:27Z"
      },
      "message": "test: avoid redundant sync with ping in p2p connections\n\nin cases where the add_p2p_connection is already followed with a call to\nsync_with_ping or send_with_ping, or where the test integrity appears better\nserved by not performing the sync_with_ping, which was added as a default in\nfa906470.",
      "tree": {
        "sha": "19678ad9738b9b3f918fccde2d1deccd0cb8a873",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/19678ad9738b9b3f918fccde2d1deccd0cb8a873"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/522bdf647e807a1cc1cb3947c16a9d7e6469612a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl6e9bAACgkQT1chs9Dj\nkh2wbg/9EU8e6Nlv376S6qk64NICQ/SZlvlZGlNxmFDqRlC3OgeXE1M3hPshwEn9\noxUxtsomuqZAacQHsozR81CckvrJQLVoVdYVZIQjM90KGZPPE4X9kg+kiF3XtiSQ\nddvlnA8Sao7BB5Q7/67kInGzzjzglTKckuFsXIv3HjDozvErgqwU5pZ+/im+40mu\nzqc3/R90pTbe67tHoutWpQ7yRjqV+3WODfSX+rKp2RJzjb4TrTF3IORbuVs/b3Ok\nU6WSYhiQFVKbcV7jho1kL4vRHcSmY1kmWtEB/WdJwiPS7AJRdjDAWBF7uY3GAeZK\nr7th6uRnsVqzIFirLEtk0Nf6X4ZwDDyiympnm0HSKRAF69C7vfWk+ugV2Szdv9sZ\n8920feGn/fMnLVoaHWjPWs2sSbfYWehx6Hx5+Q0sJs3hYBdkezkj7aYvKWdPRB9B\nQr2RlDJM4e9PoFDCMG3ayuh7pV0bZz94gpAcrPIdyBFeNuLWw9wjXMB4d0Gw7Wmo\nPWTq8IQgjc/UD0tYSknmjCOA2Y35Pv1Rf/d1FIyI0GdEK1lE+TNzJEzwt7Z3ccKr\nMUFkh7CDELIrr296kaIyvi+RepZXH4o2heepVsTXyDIKcQVnciG4AFriTrEDepJv\nrTpV/12Y8HKagnL+zDlaqLpMjneWIzPMatYMoyfftpAd7uuRpf8=\n=L5g0\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIL0uJLT76KMHWSc7DJCLwn3lFPTupDYJkjwy0sjwTd38CP/wEA9s5sbMF5dG\nAiVfeXRcWNMI8QRenvWy8AjHAY3e7O5EUgCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQMxy3SY4gdTQ5rslB\nXKKnWQjwIHqrflliI+JsO/cGXEAmm9VGdl89GWXUv3QJqnsbCTqPCPEEXp71sfAI\nnq9iWZ/aKkoAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb23/8BBoTffL60uAeaNadqUbKmITCPEEXp71sfAIRAr2kMLpxJYA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmfwELst4vmkCDZUEHv+5WJqdowI8QRenvWx8Ajx7INW9EPicwCD3+MNLvkM\njiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 19678ad9738b9b3f918fccde2d1deccd0cb8a873\nparent 9de86e4f00bdde70cdb88c9bcce05a91d6a367b9\nauthor Jon Atack <jon@atack.com> 1585748240 +0200\ncommitter Jon Atack <jon@atack.com> 1587475887 +0200\n\ntest: avoid redundant sync with ping in p2p connections\n\nin cases where the add_p2p_connection is already followed with a call to\nsync_with_ping or send_with_ping, or where the test integrity appears better\nserved by not performing the sync_with_ping, which was added as a default in\nfa906470.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/522bdf647e807a1cc1cb3947c16a9d7e6469612a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/522bdf647e807a1cc1cb3947c16a9d7e6469612a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/522bdf647e807a1cc1cb3947c16a9d7e6469612a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9de86e4f00bdde70cdb88c9bcce05a91d6a367b9"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "935d8a6196d15dec6a363aaf77a45a415780a50e",
        "filename": "test/functional/feature_assumevalid.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_assumevalid.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -165,7 +165,7 @@ def run_test(self):\n         self.start_node(2, extra_args=[\"-assumevalid=\" + hex(block102.sha256)])\n \n         p2p0 = self.nodes[0].add_p2p_connection(BaseNode())\n-        p2p1 = self.nodes[1].add_p2p_connection(BaseNode())\n+        p2p1 = self.nodes[1].add_p2p_connection(BaseNode(), sync_with_ping=False)\n         p2p2 = self.nodes[2].add_p2p_connection(BaseNode())\n \n         # send header lists to all three nodes"
      },
      {
        "sha": "e50430c10323303359c7f50e2d71d08dff02cc27",
        "filename": "test/functional/feature_block.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_block.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_block.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_block.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -1386,7 +1386,7 @@ def bootstrap_p2p(self, timeout=10):\n         \"\"\"Add a P2P connection to the node.\n \n         Helper to connect and wait for version handshake.\"\"\"\n-        self.nodes[0].add_p2p_connection(P2PDataStore())\n+        self.nodes[0].add_p2p_connection(P2PDataStore(), sync_with_ping=False)\n         # We need to wait for the initial getheaders from the peer before we\n         # start populating our blockstore. If we don't, then we may run ahead\n         # to the next subtest before we receive the getheaders. We'd then send"
      },
      {
        "sha": "d891dbfc05f1086f30a9d447ad3512d0815752b8",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -142,7 +142,7 @@ def run_test(self):\n         self.start_node(0, [\"-whitelist=noban@127.0.0.1\", \"-maxuploadtarget=1\"])\n \n         # Reconnect to self.nodes[0]\n-        self.nodes[0].add_p2p_connection(TestP2PConn())\n+        self.nodes[0].add_p2p_connection(TestP2PConn(), sync_with_ping=False)\n \n         #retrieve 20 blocks which should be enough to break the 1MB limit\n         getdata_request.inv = [CInv(2, big_new_block)]"
      },
      {
        "sha": "1dffc8dc60f3f86e4ecb004e2fd5f221be1928db",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -796,9 +796,9 @@ def announce_cmpct_block(node, peer):\n \n     def run_test(self):\n         # Setup the p2p connections\n-        self.segwit_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2))\n-        self.old_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=1), services=NODE_NETWORK)\n-        self.additional_segwit_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2))\n+        self.segwit_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2), sync_with_ping=False)\n+        self.old_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=1), services=NODE_NETWORK, sync_with_ping=False)\n+        self.additional_segwit_node = self.nodes[0].add_p2p_connection(TestP2PConn(cmpct_version=2), sync_with_ping=False)\n \n         # We will need UTXOs to construct transactions in later tests.\n         self.make_utxos()"
      },
      {
        "sha": "63169930cb50c97ebc69e652d8359cf12352fe7e",
        "filename": "test/functional/p2p_dos_header_tree.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_dos_header_tree.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_dos_header_tree.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_dos_header_tree.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -46,7 +46,7 @@ def run_test(self):\n         self.headers_fork = [FromHex(CBlockHeader(), h) for h in self.headers_fork]\n \n         self.log.info(\"Feed all non-fork headers, including and up to the first checkpoint\")\n-        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.nodes[0].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n         self.nodes[0].p2p.send_and_ping(msg_headers(self.headers))\n         assert {\n             'height': 546,\n@@ -63,7 +63,7 @@ def run_test(self):\n         self.log.info(\"Feed all fork headers (succeeds without checkpoint)\")\n         # On node 0 it succeeds because checkpoints are disabled\n         self.restart_node(0, extra_args=['-nocheckpoints'])\n-        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.nodes[0].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n         self.nodes[0].p2p.send_and_ping(msg_headers(self.headers_fork))\n         assert {\n             \"height\": 2,\n@@ -73,7 +73,7 @@ def run_test(self):\n         } in self.nodes[0].getchaintips()\n \n         # On node 1 it succeeds because no checkpoint has been reached yet by a chain tip\n-        self.nodes[1].add_p2p_connection(P2PInterface())\n+        self.nodes[1].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n         self.nodes[1].p2p.send_and_ping(msg_headers(self.headers_fork))\n         assert {\n             \"height\": 2,"
      },
      {
        "sha": "43efdbd854f566eb22b95286636c4cd70c02c00b",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -65,15 +65,15 @@ def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        filter_node = self.nodes[0].add_p2p_connection(FilterNode())\n+        filter_node = self.nodes[0].add_p2p_connection(FilterNode(), sync_with_ping=False)\n \n-        self.log.info('Check that too large filter is rejected')\n+        self.log.info('Check that too-large filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n             filter_node.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n             filter_node.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n \n-        self.log.info('Check that too large data element to add to the filter is rejected')\n+        self.log.info('Check that too-large data element to add to the filter is rejected')\n         with self.nodes[0].assert_debug_log(['Misbehaving']):\n             filter_node.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n "
      },
      {
        "sha": "fd5d318350b90eecaf48a0e428149621a7dc5a5e",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -55,8 +55,8 @@ def run_test(self):\n \n         node = self.nodes[0]\n         self.node = node\n-        node.add_p2p_connection(P2PDataStore())\n-        conn2 = node.add_p2p_connection(P2PDataStore())\n+        node.add_p2p_connection(P2PDataStore(), sync_with_ping=False)\n+        conn2 = node.add_p2p_connection(P2PDataStore(), sync_with_ping=False)\n \n         msg_limit = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n         valid_data_limit = msg_limit - 5  # Account for the 4-byte length prefix\n@@ -163,7 +163,7 @@ async def swap_magic_bytes():\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore(), sync_with_ping=False)\n         with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             cut_len = (\n@@ -192,7 +192,7 @@ def test_size(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n+        conn = self.nodes[0].add_p2p_connection(P2PDataStore(), sync_with_ping=False)\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12"
      },
      {
        "sha": "4b929069d83f1415138361dc113faa07def9ad93",
        "filename": "test/functional/p2p_unrequested_blocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_unrequested_blocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/p2p_unrequested_blocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_unrequested_blocks.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -81,9 +81,9 @@ def setup_network(self):\n     def run_test(self):\n         # Setup the p2p connections\n         # test_node connects to node0 (not whitelisted)\n-        test_node = self.nodes[0].add_p2p_connection(P2PInterface())\n+        test_node = self.nodes[0].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n         # min_work_node connects to node1 (whitelisted)\n-        min_work_node = self.nodes[1].add_p2p_connection(P2PInterface())\n+        min_work_node = self.nodes[1].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n \n         # 1. Have nodes mine a block (leave IBD)\n         [n.generatetoaddress(1, n.get_deterministic_priv_key().address) for n in self.nodes]\n@@ -198,7 +198,7 @@ def run_test(self):\n         self.nodes[0].disconnect_p2ps()\n         self.nodes[1].disconnect_p2ps()\n \n-        test_node = self.nodes[0].add_p2p_connection(P2PInterface())\n+        test_node = self.nodes[0].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n \n         test_node.send_and_ping(msg_block(block_h1f))\n         assert_equal(self.nodes[0].getblockcount(), 2)"
      },
      {
        "sha": "a87538c13c47ab9e53d6119977f0dab5689b433e",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522bdf647e807a1cc1cb3947c16a9d7e6469612a/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=522bdf647e807a1cc1cb3947c16a9d7e6469612a",
        "patch": "@@ -140,7 +140,7 @@ def _test_getpeerinfo(self):\n             assert_net_servicesnames(int(info[0][\"services\"], 0x10), info[0][\"servicesnames\"])\n \n     def _test_getnodeaddresses(self):\n-        self.nodes[0].add_p2p_connection(P2PInterface())\n+        self.nodes[0].add_p2p_connection(P2PInterface(), sync_with_ping=False)\n \n         # send some addresses to the node via the p2p message addr\n         msg = msg_addr()"
      }
    ]
  }
]