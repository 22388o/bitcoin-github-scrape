sipa,2014-08-23T11:26:50Z,Why do you keep moving CTxDestination to key? IMHO it doesn't belong there at all.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53150226,53150226,
jtimon,2014-08-23T11:43:32Z,"Since this one depends on the other, I'll be showing more controversial things like that one.\nAnd abandon the ones that don't get acked.\nI still think CTxDestination doesn't belong to script. CTxDestination is related to CKeyID, CScriptID (in key.h) and CBitcoinAddress (in base58.h). \nI thought the changes in the includes would make it more clear than the first time I tried it (#4698).\nIn part",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53150539,53150539,
sipa,2014-08-23T11:45:40Z,How can scriptutils.h not include script.h? It needs the CScript type...?\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53150578,53150578,
jtimon,2014-08-23T11:46:26Z,`class CScript;` as shown in the controversial commit.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53150599,53150599,
sipa,2014-08-23T11:51:19Z,"Ah.\n\nSo, my opinion about this: using forward declarations and .h files including fewer things than the corresponding .cpp file is nice for one thing only: speeding up compilation.\n\nFor all other purposes, I consider it ugly. It hides dependencies between modules, and may cause breaking in case of reorganizations that change types. As far as I'm concerned, the most important thing (and the onl",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53150699,53150699,
jtimon,2014-08-23T12:21:07Z,"Of course it all comes down to whether or not it makes sense semantically there.\nThe includes are just the clues that have led me to believe that an the destination may belong to key.h or base58.h. To be honest I didn't had much hope that the particular commit was going to be accepted, just wanted to present it in a way in which my reasoning is more clear.\n\nRe: forward declarations: I guess if ",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53151350,53151350,
sipa,2014-08-23T12:40:19Z,"- Key is a wrapper around ECDSA, and has types for private and public keys, and support signature generation and verification [key].\n- Script defines a higher-level crypto system. It has private keys consisting of a CKeyStore plus a CScript redeem script, public keys consisting of just the CScript redeem script, and signatures consisting of CScript sigScripts [script].\n- In order to help signing",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53151751,53151751,
laanwj,2014-08-25T10:33:26Z,"Agree that CTxDestination doesn't belong in key.h. We've had this discussion before, please don't keep doing that.\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53249501,53249501,
jtimon,2014-08-27T16:20:34Z,"I'm sorry I shouldn't have pushed that again. I should have at least used the separated destination.h instead of just mentioning it while pushing the change that had been rejected again, or better yet, not push that commit at all since the PR wasn't finished.\nAnyway, I also moved ExtractDestination() and ExtractDestinations() to script/standard and added a few more commits.\nAt this point the onl",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53599566,53599566,
jtimon,2014-08-29T21:43:34Z,Rebased on top of #4788 \nMaybe I should rename scriptutils.o to ismine.o or just move it to wallet.o?\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53933325,53933325,
laanwj,2014-08-30T08:37:33Z,"@jtimon I'd say if it is only used by the wallet, move it to the wallet. On the other hand the wallet.cpp is growing quite a lot lately so maybe it makes sense to keep it split up. But make it clear in the name (and build system) that it's part of the wallet.\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53952659,53952659,
jtimon,2014-08-30T10:25:01Z,"What about wallet_ismine.o?\nMaybe wallet/ismine.o?\nI mean, probably wallet should have its own directory too, and although that seems to belong to another PR it makes no sense to rename scriptutils.o to wallet_ismine.o and then wallet_ismine.o to wallet/ismine.o\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53954680,53954680,
sipa,2014-08-30T10:42:09Z,I wouldn't worry too much about source/object names for now. Just\nencapsulate where possible.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53954965,53954965,
jtimon,2014-08-30T10:48:42Z,"Yeah, it is bike-shedding but better do it before I do the rename.\nAnyone opposed to wallet/ismine.o?\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53955079,53955079,
laanwj,2014-08-30T11:21:59Z,@jtimon I'd say wallet_ismine.o. Moving it to a directory can always be done later and should happen along with the other files libbitcoin_wallet.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53955743,53955743,
jtimon,2014-08-30T11:31:01Z,"Fair enough, wallet_ismine.o then\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53955899,53955899,
jtimon,2014-08-31T13:08:01Z,Rebased on top of #4754 's latest fix.and after #4788 has being merged.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-53987413,53987413,
sipa,2014-09-01T20:15:33Z,"@jtimon Sorry for not looking closer at the code wrt the CTxDestination question earlier. I didn't realize that CScript itself used CTxDestination. I think that the easiest solution is moving CTxDestination to scriptutils.h (or whatever it's called after renames), and convert the CScript methods SetDestination and SetMultisig to functions in scriptutils.h as well. The CScript data structure has no",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-54089215,54089215,
jtimon,2014-09-02T00:22:04Z,"Don't worry if I hadn't insisted on moving it to key.h only by following the includes and I had fully separated instead (depending on key.h but being a script.h dependency), the responses would have been different I think.\nWhat you say seems right, it's not that script/script and script/standard independently depend on script/destination (allow me the redundancy): is that I was right in the sense",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-54098595,54098595,
jtimon,2014-09-02T10:25:02Z,Closing until #4754 is merged.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-54133465,54133465,
jtimon,2014-09-08T21:11:50Z,I can squash the alphabetical fix into one of the other commits.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-54888038,54888038,
TheBlueMatt,2014-09-09T07:04:56Z,"utACK, verified code move.\n",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-54932251,54932251,
theuni,2014-09-09T18:30:08Z,Looks good to me. Agreed about moving out the wallet tests as a next step.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55012973,55012973,
jtimon,2014-09-09T19:30:43Z,Updated with the ifdef in the includes of the tests fix.\nI'm not sure about what's the correct alphabetic order in the makefile.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55020723,55020723,
laanwj,2014-09-09T19:36:48Z,@jtimon In case of doubt about the sorting you could run the lines through sort. In vim this is a matter of selecting the range with V then `:!sort`.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55021502,55021502,
BitcoinPullTester,2014-09-09T19:40:45Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4755_d1e623c444d664f00f3eaf2c332cffc3784388e9/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55021995,55021995,
sipa,2014-09-09T23:28:24Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55051774,55051774,
laanwj,2014-09-10T10:57:53Z,Merged via fd1caa0 (added the #ifdef)\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55099933,55099933,
jtimon,2014-09-13T15:06:43Z,Thanks @laanwj. I don't use vim but emacs has the equivalent M-x sort-lines. I could have thought of that.\n,https://github.com/bitcoin/bitcoin/pull/4755#issuecomment-55496560,55496560,
laanwj,2014-09-09T14:36:19Z,"Instead of putting these #ifdefs, I'd prefer to move these to a wallet-specific test cpp (e.g. wallet_tests.cpp or create a new one)\n",https://github.com/bitcoin/bitcoin/pull/4755#discussion_r17303902,17303902,src/test/multisig_tests.cpp
sipa,2014-09-09T14:40:51Z,"+1, but I wouldn't object to doing that later.\n",https://github.com/bitcoin/bitcoin/pull/4755#discussion_r17304264,17304264,src/test/multisig_tests.cpp
laanwj,2014-09-09T14:43:09Z,"If you keep the ifdefs, this include needs to be in #ifdef ENABLE_WALLET.\n",https://github.com/bitcoin/bitcoin/pull/4755#discussion_r17304427,17304427,src/test/multisig_tests.cpp
theuni,2014-09-09T18:28:31Z,please keep these alphabetized \n,https://github.com/bitcoin/bitcoin/pull/4755#discussion_r17318077,17318077,src/Makefile.am
jtimon,2014-09-09T19:26:33Z,"Sorry, I always get confused with symbols, should it be:\n\n```\n   wallet.cpp \\n   wallet_ismine.cpp \\n   walletdb.cpp \\n```\n\nor \n\n```\n   wallet.cpp \\n   walletdb.cpp \\n   wallet_ismine.cpp \\n```\n\n?\n",https://github.com/bitcoin/bitcoin/pull/4755#discussion_r17322153,17322153,src/Makefile.am
