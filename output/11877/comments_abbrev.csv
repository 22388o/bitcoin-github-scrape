promag,2017-12-12T15:05:33Z,Relates to #11872 (https://github.com/bitcoin/bitcoin/pull/11872#issuecomment-351024184).,https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351078061,351078061,
laanwj,2017-12-12T15:09:51Z,utACK 0df137b,https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351079464,351079464,
MarcoFalke,2017-12-13T00:13:05Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351238288,351238288,
MarcoFalke,2017-12-13T15:23:08Z,"According to what others reviewed, only change should be adding a comment, so trivial to re-ACK. (ping @jnewbery )\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nutACK 88af5028ad3de71c8b86b50cb1c6bdd57c1ba6e5\n-----BEGIN PGP SIGNATURE-----\n\niQIcBAEBCgAGBQJaMUWGAAoJENLqSFDnUoslcNUP/Ar1eK4SOmsoA/SvpfhbpwHE\n4jMFEqkKhef4F1AYQIDaJAvh4HKUpyTX2o8IA9XRvrHLjTJz0vFMd/jMMuKbnB7M\n6",https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351423329,351423329,
jnewbery,2017-12-13T16:07:43Z,Tested ACK 88af5028ad3de71c8b86b50cb1c6bdd57c1ba6e5. Comment looks good :slightly_smiling_face:  ,https://github.com/bitcoin/bitcoin/pull/11877#issuecomment-351437737,351437737,
laanwj,2017-12-12T15:06:34Z,"So there is already a check for duplicated address?\nThat's great!\n",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392203,156392203,test/functional/rawtransactions.py
promag,2017-12-12T15:08:16Z,"Yes, `createrawtransaction` and `sendmany` RPC's check for duplicated address.",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156392721,156392721,test/functional/rawtransactions.py
laanwj,2017-12-12T15:09:48Z,Indeed! I hadn't expected a check here because passing this is tricky in JSON object format.,https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156393176,156393176,test/functional/rawtransactions.py
jnewbery,2017-12-12T22:06:43Z,"Can you add a comment for this please? Something like:\n\n```\n""""""Dictionary that allows duplicate keys.\n\nConstructed with a list of (key, value) tuples. When dumped by the json module, will output invalid json with repeated keys, eg:\n>>> json.dumps(multidict([(1,2),(1,2)])\n'{""1"": 2, ""1"": 2}'\n\nUsed to test calls to rpc methods with invalid repeated keys in the json object.""""""\n```",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156509754,156509754,test/functional/rawtransactions.py
MarcoFalke,2017-12-13T00:11:00Z,nit: My personal style preference is to use named args when passing unnamed parameters. Not sure what others think.,https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156532958,156532958,test/functional/rawtransactions.py
laanwj,2017-12-13T05:53:57Z,"Yeah submitting JSON objects in deterministic order and with potentially duplicated keys is the only thing it's good for, it's not quite a traditional multidict implementation.",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156569572,156569572,test/functional/rawtransactions.py
promag,2017-12-13T09:52:58Z,"In this case I'm not sure, because that will throw `Unknown named parameter`. But for other cases you mean?\n```py\nassert_raises_rpc_error(-1, ""createrawtransaction"", self.nodes[0].createrawtransaction, inputs=[], outputs={}, locktime=0, replaceable=False)\n```\n ",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156607535,156607535,test/functional/rawtransactions.py
promag,2017-12-13T14:52:53Z,Done.,https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156680155,156680155,test/functional/rawtransactions.py
MarcoFalke,2017-12-13T15:06:20Z,"Ah, right. Won't work in this case.",https://github.com/bitcoin/bitcoin/pull/11877#discussion_r156684215,156684215,test/functional/rawtransactions.py
