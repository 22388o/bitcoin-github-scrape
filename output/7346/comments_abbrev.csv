luke-jr,2016-01-18T18:13:37Z,Addressed nits.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-172610371,172610371,
luke-jr,2016-01-28T05:33:32Z,Poke @laanwj \n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-175988905,175988905,
laanwj,2016-01-28T10:54:09Z,"utACK, but would like at least one ACK from someone that worked on this code to verify this that this is correct.\n",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176122838,176122838,
morcos,2016-01-28T12:33:36Z,"I prefer the current wording to these changes.\n\nAlso I believe with the mempool limiting changes we have badly broken the functioning of priority transactions, and it does developers and users a disservice to keep it limping along.  It would be better to inform them of its impending dismissal.\n\n@sdaftuar and I spent considerable time yesterday discussing badly needed improvements to fee estima",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176157411,176157411,
laanwj,2016-01-28T12:36:43Z,"@morcos Right. But I think it doesn't hurt to mention how to still achieve some compatibility with the old code.\nI agree adding the underlying reason and eventual plan makes sense, too.\n",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176157948,176157948,
morcos,2016-01-28T12:42:33Z,"@laanwj Sure I don't mind telling them how to set the old default, although I imagine they could figure that out by themselves.\nThe two more significant changes I object to which are: \n- removing the notice that priority is scheduled for removal\n- telling miners to use 0.11 if they care about accurate priority.  Even for miners that care strongly about continuing to support what priority txs re",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176160724,176160724,
luke-jr,2016-01-28T16:21:55Z,"@morcos Priority has absolutely nothing to do with fee estimation, and blaming it is just a lame excuse. Ignore priority entirely in the wallet if you want.\n\nPriority continues to be a key part of the best policy for mining, and breaking it is a serious regression for which miners **should** remain at 0.11 until it is fixed. If it is removed entirely, I may very well just cease contributing to C",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176260451,176260451,
p3yot3,2016-01-28T16:30:55Z,"luke-jr says - ""I may very well just cease contributing to Core.""\n\nI may very well start using Core again then......\n",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176265734,176265734,
morcos,2016-01-28T17:07:17Z,"@luke-jr It is actually quite intertwined with fee estimation.  But it's also a problem with many areas of the code.\n\nIts certainly not up to me whether priority is removed or not.  In fact @sdaftuar and I have been the two people doing the most work to keep priority functioning correctly, and eventually decided it was too big an uphill battle and I believe its overall a detriment to keep priori",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176285920,176285920,
luke-jr,2016-01-28T23:38:46Z,"@morcos Please explain why you cannot ignore priority entirely in fee estimation. (Note that miners _will_ continue to use priority-supporting policies even if Core removes it, so ""we can pretend it doesn't exist at all"" is not an answer.)\n\n> Obviously I don't want you to stop contributing to Core. I think that would be a huge loss for all of us. But I don't think thats a good way for us to go a",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-176482364,176482364,
luke-jr,2016-02-09T08:19:24Z,@morcos Added a final paragraph covering your nits. Look okay now?\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181755335,181755335,
petertodd,2016-02-09T12:31:51Z,utACK https://github.com/luke-jr/bitcoin/commit/73a0375ebedb3cf8c51189292ce80faa04c61fa4\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181845677,181845677,
MarcoFalke,2016-02-09T12:35:40Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181846383,181846383,
sipa,2016-02-09T12:47:29Z,"I disagree with recommending to use 0.11. If we believe that, we shouldn't release 0.12. However, It's a tradeoff and one I believe to be the right one. It simplifies code and improves performance, and is unlikely to matter in practice. Especially now old transactions expire and get reevaluated when received again. Can we just list the change and its motivation?\n\nSomething like:\n\nPriority calc",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181849709,181849709,
MarcoFalke,2016-02-09T13:46:52Z,"> and is unlikely to matter in practice\n\nAll versions of bitcoin core still support priority in the wallet via `-sendfreetransactions`. #7022 did not address this issue. Instead of #7022, the wallet code should be changed first to no longer support priority and then have the miners deprecate priority in a later release (if desired).\n\nIf all miners switch to `0.12` or `master` in the coming wee",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181870224,181870224,
sipa,2016-02-09T13:52:29Z,"You're talking about the change of default to 0 bytes priority area. Bitcoin Core does apply estimation to this, so it should detect the case of miners adopting that (or not).\n\nI was talking about the non-updating of priorities in the mempool. The PR suggests sticking to 0.11 to retain accurate priority calculations. I believe that's not useful advice, and I don't expect it to matter.\n\nYour co",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181872365,181872365,
morcos,2016-02-09T15:01:28Z,"Yes I'd prefer something like what @sipa suggests.\n\nRegarding @MarcoFalke's comments, I think we often confuse talking about priority transactions and free transactions.  It appears to me that free transactions are a thing of the past (I have mempools well over 1GB of usage of fee paying txs and growing).  Given the way mempool limiting code works, it could lead to a confusing user experience wh",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-181904685,181904685,
luke-jr,2016-02-09T20:02:54Z,"> I disagree with recommending to use 0.11. If we believe that, we shouldn't release 0.12.\n\n@sipa I personally will be not recommending miners upgrade to [Core] 0.12. Miners should be given /useful/ information; either that's 0.11 or Knots 0.12.\n\n> However, It's a tradeoff and one I believe to be the right one. It simplifies code and improves performance, and is unlikely to matter in practice.",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182037138,182037138,
sipa,2016-02-09T20:07:00Z,"> @sipa I personally will be not recommending miners upgrade to [Core] 0.12. Miners should be given /useful/ information; either that's 0.11 or Knots 0.12.\n\nAnd it's your full right to inform people either way of your opinion. But I disagree that your opinion should be what's written in the release notes.\n\n> Priority calculations for transactions are now only approximate, as maintaining the ex",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182038737,182038737,
gmaxwell,2016-02-09T20:14:57Z,"> Priority calculations for transactions are now only approximate, as maintaining the exact old semantics is complicated with the new getblocktemplate implementation relying on precalculated indexes. This is unlikely to affect mined blocks significantly.\n\nIf you say it's unlikely to have a significant impact (I agree)-- than whats with the recommendation to use 0.11?\n",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182043877,182043877,
sipa,2016-02-09T20:18:47Z,@gmaxwell That was my suggested language to use instead of the 0.11 recommendation.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182044859,182044859,
luke-jr,2016-02-09T20:44:39Z,"@gmaxwell Oops, sorry for the confusion there, I guess I pasted it extra and without the quote marker.\n\n> And it's your full right to inform people either way of your opinion. But I disagree that your opinion should be what's written in the release notes.\n\n@sipa So what should it suggest? ""miners who consider accurate priority accounting important can go screw themselves""? I'm at a loss for ho",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182055835,182055835,
sipa,2016-02-09T21:23:01Z,"@luke-jr In my opinion there is no reason why retaining the exact semantics that priority currently has is important. The definition of priority and its surrounding policy is arbitrary (rate limited, using fee as a limit, sorted after dividing by an arbitrary modified size), and it has changed several times. Why does it matter to maintain its exact same semantics? It at worst affects a tiny minori",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182073297,182073297,
luke-jr,2016-02-09T21:29:31Z,Removed 0.11 suggestion.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182080706,182080706,
wangchun,2016-02-09T22:02:49Z,"Developers should provide a ""framework"" instead of making the decision, so that miners could easily write their own transaction selection policy. If some miners want the old-style priority, it should be able to calculate the value with a handy call within CreateNewBlock(). It also helps altcoin development, as they do not have to maintain unnecessary changesets. We cannot enforce all altcoins to d",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182097796,182097796,
luke-jr,2016-02-09T22:04:30Z,@wangchun Agree with the first part. But altcoins are not our concern/responsibility at all.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182098244,182098244,
gmaxwell,2016-02-09T22:31:43Z,"@wangchun What makes you think anyone is doing otherwise?\n\nA simple ""your costing function here"" is already provided via RPC via prioritisetransaction, which eliminates the need to make difficult to maintain and potentially risky internal changes. Because the rpc is out of the critical path its acceptable for its cost function to be slow.\n\nThe internal design is driven by efficiency and must b",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182108751,182108751,
luke-jr,2016-02-09T22:43:37Z,@gmaxwell prioritisetransaction is _not_ a useful replacement for algorithmic policy decisions.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182113906,182113906,
gmaxwell,2016-02-09T22:46:23Z,@luke-jr text is still confusing. It sounds like priority transactions' won't be mined even if they meet the fee or that the rpc isn't functional.\n\nLet me try:\n\n Relay and Mining: Priority transactions\n\n---\n\nBitcoin Core has a heuristic 'priority' based on coin value and age for transactions which do not meet pay\nthe minimum relay fee. Bitcoin Core relays and mines these transactions depe,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182116147,182116147,
luke-jr,2016-02-09T23:32:02Z,Adopted @gmaxwell 's modifications and made some further clarifications. How's this looking now?\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182133268,182133268,
rebroad,2016-02-11T02:46:20Z,So old and small transactions will no longer have a chance of being transmitted economically if these proposed changes go through?\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182678288,182678288,
luke-jr,2016-02-11T02:51:38Z,"@rebroad That's a related but different subject. In any case, this is just for discussion of the 0.12 release notes, not the actual topic itself.\n",https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182678789,182678789,
da2ce7,2016-02-11T13:38:08Z,I think that this would be nice to include in the 0.12 release. Personally I've taken advantage of the High-Priority transaction policies when making some personal transactions.\n\nThis is an important change of default behaviour that will affects both users and miners.\n\nI believe the wording post @gmaxwell changes is clear and reasonable.\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182867626,182867626,
sipa,2016-02-11T13:56:20Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/7346#issuecomment-182875334,182875334,
paveljanik,2016-01-14T20:27:51Z,"The text in () is part of the sentence, so please move the dot.\n",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49780489,49780489,doc/release-notes.md
paveljanik,2016-01-14T20:29:06Z,Well said.\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49780629,49780629,doc/release-notes.md
jonasschnelli,2016-01-14T20:31:59Z,"Don't get me wrong,.. I like the ""Bitcoin LJR"" code fork. But IMO we should not mention code forks in our release notes. ""[...] consider merging [...]"" should be do the thing.\n",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49780922,49780922,doc/release-notes.md
sdaftuar,2016-01-14T21:11:23Z,"I agree with @jonasschnelli that we should not suggest code forks in our release notes. \n\nI also don't think we can suggest that people merge #7149 themselves.  Even if your explanation were true (that it's due to lack of review -- I disagree with that characterization as other contributors to core have explicitly NACKed priority-related pulls recently, but I think it's beside the point), it's n",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49785665,49785665,doc/release-notes.md
luke-jr,2016-01-14T23:28:23Z,This is part of #7336\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49801877,49801877,doc/release-notes.md
sdaftuar,2016-01-15T01:08:33Z,"(My earlier comment seems to have been zapped by github when the commit changed; hopefully this one will stick.)\n\nI think it's inappropriate for the release notes to point people at PR's that haven't been reviewed and merged -- ascertaining the correctness of the code, and evaluating the various tradeoffs that could come up (including performance impact) is the whole point of Bitcoin Core's code",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49810123,49810123,doc/release-notes.md
luke-jr,2016-01-15T01:16:53Z,"Users should be doing their own policy patching anyway. Core is a _reference_ codebase, it isn't meant to be just taken and used as-is, especially for miners.\n\nJustifying a clear bug by ""intentional change"" is just silly, especially when the new behaviour is not even deterministic. Note that the comments in #7008 do not in fact discuss this matter... and much of the support for merging the broke",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49810647,49810647,doc/release-notes.md
laanwj,2016-01-18T09:42:58Z,"I agre with @sdaftuar - let's not refer to code under development. Also this is too detailed for the release notes. The release notes are not meant as a documentation compendium, but as a quick overview of changes between releases.\n",https://github.com/bitcoin/bitcoin/pull/7346#discussion_r49977277,49977277,doc/release-notes.md
MarcoFalke,2016-01-18T18:26:24Z,This sounds odd if you don't mention the reason: `Priority code is scheduled for removal in Bitcoin Core 0.13`\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r50030252,50030252,doc/release-notes.md
luke-jr,2016-01-18T19:37:56Z,It is not.\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r50036553,50036553,doc/release-notes.md
paveljanik,2016-01-23T13:31:30Z,I like @MarcoFalke addition. It is good to inform our users about the plan.\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r50620287,50620287,doc/release-notes.md
luke-jr,2016-01-23T13:48:18Z,There is no such plan.\n,https://github.com/bitcoin/bitcoin/pull/7346#discussion_r50620459,50620459,doc/release-notes.md
