sipa,2016-06-18T18:42:44Z,"Oops, I forgot we just merged the refactor that turned it into a class. You're right.\n",https://github.com/bitcoin/bitcoin/pull/8223#issuecomment-226958479,226958479,
luke-jr,2016-06-18T19:02:02Z,Concept ACK. But it might make more sense to use a shared_ptr so TestBlockValidity can be split off to a new thread while GBT returns...\n,https://github.com/bitcoin/bitcoin/pull/8223#issuecomment-226959438,226959438,
dcousens,2016-06-19T03:43:08Z,utACK 9fce062\n,https://github.com/bitcoin/bitcoin/pull/8223#issuecomment-226977677,226977677,
laanwj,2016-10-18T19:13:22Z,utACK 9fce062\n,https://github.com/bitcoin/bitcoin/pull/8223#issuecomment-254609275,254609275,
sipa,2016-06-18T18:37:36Z,Return value optimization applies here; I think using std::move is discouraged in that case.\n,https://github.com/bitcoin/bitcoin/pull/8223#discussion_r67604813,67604813,src/miner.cpp
domob1812,2016-06-18T18:41:33Z,"No, it does not.  `pblocktemplate` is a member variable and not a local one, I think the code does not compile without `std::move`.\n",https://github.com/bitcoin/bitcoin/pull/8223#discussion_r67604860,67604860,src/miner.cpp
laanwj,2016-06-20T12:01:37Z,Shouldn't the caller decide in what kind of pointer to wrap the object?\nWhat if they want to e.g. have a shared pointer instead?\n,https://github.com/bitcoin/bitcoin/pull/8223#discussion_r67677930,67677930,src/miner.h
sipa,2016-06-20T12:06:47Z,"Converting from unique_ptr to shared_ptr is relatively cheap (specifically, does not require copying the object).\n",https://github.com/bitcoin/bitcoin/pull/8223#discussion_r67678542,67678542,src/miner.h
laanwj,2016-06-20T12:29:20Z,But does this mean we want all functions that currently return a bare pointer that will become caller ownership to returning `unique_ptr`?\nThis is probably the kind of c++11 refactoring that we want to leave for later.\n,https://github.com/bitcoin/bitcoin/pull/8223#discussion_r67681016,67681016,src/miner.h
