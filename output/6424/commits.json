[
  {
    "sha": "6a07eb676a020b0035173facb25f92f1ff6380f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTA3ZWI2NzZhMDIwYjAwMzUxNzNmYWNiMjVmOTJmMWZmNjM4MGY3",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:14:58Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:27:22Z"
      },
      "message": "Make TX_SCRIPTHASH clear vSolutionsRet first\n\nPreviously unlike other transaction types the TX_SCRIPTHASH would not\nclear vSolutionsRet, which means that unlike other transaction types if\nit was called twice in a row you would get the result of the previous\ninvocation as well.",
      "tree": {
        "sha": "7c78eaa878e8a206b9412eb089224a7a85a590df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c78eaa878e8a206b9412eb089224a7a85a590df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a07eb676a020b0035173facb25f92f1ff6380f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb882d04e8626ba534200a44b58e7ac872a55dd0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb882d04e8626ba534200a44b58e7ac872a55dd0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "59496d795d1c337e57966e964e682676e869e6a2",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a07eb676a020b0035173facb25f92f1ff6380f7/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a07eb676a020b0035173facb25f92f1ff6380f7/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=6a07eb676a020b0035173facb25f92f1ff6380f7",
        "patch": "@@ -58,6 +58,8 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n+    vSolutionsRet.clear();\n+\n     // Shortcut for pay-to-script-hash, which are more constrained than the other types:\n     // it is always OP_HASH160 20 [20 byte hash] OP_EQUAL\n     if (scriptPubKey.IsPayToScriptHash())"
      }
    ]
  },
  {
    "sha": "5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDg3MDljM2I3ZmNjNjZmYmY1MzdlYzBiNmMxYTk4ZDY5MjE0ZTI1",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-11-04T17:38:56Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:28:11Z"
      },
      "message": "Add IsPushOnly(const_iterator pc)\n\nAllows IsPushOnly() to be applied to just part of the script for\nOP_RETURN outputs.",
      "tree": {
        "sha": "ee5385b59d430542d8f8195a6f33988e322bf107",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee5385b59d430542d8f8195a6f33988e322bf107"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a07eb676a020b0035173facb25f92f1ff6380f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a07eb676a020b0035173facb25f92f1ff6380f7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a07eb676a020b0035173facb25f92f1ff6380f7"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a8ec9fa7bf7d569ed68bb447bbd422265cee578",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "patch": "@@ -210,9 +210,8 @@ bool CScript::IsPayToScriptHash() const\n             this->at(22) == OP_EQUAL);\n }\n \n-bool CScript::IsPushOnly() const\n+bool CScript::IsPushOnly(const_iterator pc) const\n {\n-    const_iterator pc = begin();\n     while (pc < end())\n     {\n         opcodetype opcode;\n@@ -227,3 +226,8 @@ bool CScript::IsPushOnly() const\n     }\n     return true;\n }\n+\n+bool CScript::IsPushOnly() const\n+{\n+    return this->IsPushOnly(begin());\n+}"
      },
      {
        "sha": "3923a559b160119950d30335b1e211212021364d",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "patch": "@@ -589,6 +589,7 @@ class CScript : public std::vector<unsigned char>\n     bool IsPayToScriptHash() const;\n \n     /** Called by IsStandardTx and P2SH/BIP62 VerifyScript (which makes it consensus-critical). */\n+    bool IsPushOnly(const_iterator pc) const;\n     bool IsPushOnly() const;\n \n     /**"
      }
    ]
  },
  {
    "sha": "da894ab5da222ad317039eb008ec6443fb9113d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTg5NGFiNWRhMjIyYWQzMTcwMzllYjAwOGVjNjQ0M2ZiOTExM2Q5",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-10-13T14:18:05Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-10-01T16:28:13Z"
      },
      "message": "Accept any sequence of PUSHDATAs in OP_RETURN outputs\n\nPreviously only one PUSHDATA was allowed, needlessly limiting\napplications such as matching OP_RETURN contents with bloom filters that\noperate on a per-PUSHDATA level. Now any combination that passes\nIsPushOnly() is allowed, so long as the total size of the scriptPubKey\nis less than 42 bytes. (unchanged modulo non-minimal PUSHDATA encodings)\n\nAlso, this fixes the odd bug where previously the PUSHDATA could be\nreplaced by any single opcode, even sigops consuming opcodes such as\nCHECKMULTISIG. (20 sigops!)",
      "tree": {
        "sha": "391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/391ecd1cf9ea432a1558ae2e70d9a1fbb91d5dd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da894ab5da222ad317039eb008ec6443fb9113d9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da894ab5da222ad317039eb008ec6443fb9113d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da894ab5da222ad317039eb008ec6443fb9113d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da894ab5da222ad317039eb008ec6443fb9113d9/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d8709c3b7fcc66fbf537ec0b6c1a98d69214e25"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 34,
      "deletions": 17
    },
    "files": [
      {
        "sha": "4c96fbf5a5c399296a1fa355ad86a4770fcef84f",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -49,7 +49,9 @@ bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)\n             return false;\n         if (m < 1 || m > n)\n             return false;\n-    }\n+    } else if (whichType == TX_NULL_DATA &&\n+               (!GetBoolArg(\"-datacarrier\", true) || scriptPubKey.size() > nMaxDatacarrierBytes))\n+          return false;\n \n     return whichType != TX_NONSTANDARD;\n }"
      },
      {
        "sha": "9a0c067a335d0fa6b3ed7ae117ac9880bd558871",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -144,7 +144,7 @@ const char* GetOpName(opcodetype opcode)\n     case OP_INVALIDOPCODE          : return \"OP_INVALIDOPCODE\";\n \n     // Note:\n-    //  The template matching params OP_SMALLDATA/etc are defined in opcodetype enum\n+    //  The template matching params OP_SMALLINTEGER/etc are defined in opcodetype enum\n     //  as kind of implementation hack, they are *NOT* real opcodes.  If found in real\n     //  Script, just let the default: case deal with them.\n "
      },
      {
        "sha": "cdc9a71bb24a075a4025e3cb359e828244dd4f88",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -167,7 +167,6 @@ enum opcodetype\n \n \n     // template matching params\n-    OP_SMALLDATA = 0xf9,\n     OP_SMALLINTEGER = 0xfa,\n     OP_PUBKEYS = 0xfb,\n     OP_PUBKEYHASH = 0xfd,"
      },
      {
        "sha": "bfef8afa17bbc9d26007a74a77a764dcec3026c5",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -51,11 +51,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n         // Sender provides N pubkeys, receivers provides M signatures\n         mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n-\n-        // Empty, provably prunable, data-carrying output\n-        if (GetBoolArg(\"-datacarrier\", true))\n-            mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN << OP_SMALLDATA));\n-        mTemplates.insert(make_pair(TX_NULL_DATA, CScript() << OP_RETURN));\n     }\n \n     vSolutionsRet.clear();\n@@ -70,6 +65,16 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         return true;\n     }\n \n+    // Provably prunable, data-carrying output\n+    //\n+    // So long as script passes the IsUnspendable() test and all but the first\n+    // byte passes the IsPushOnly() test we don't care what exactly is in the\n+    // script.\n+    if (scriptPubKey.size() >= 1 && scriptPubKey[0] == OP_RETURN && scriptPubKey.IsPushOnly(scriptPubKey.begin()+1)) {\n+        typeRet = TX_NULL_DATA;\n+        return true;\n+    }\n+\n     // Scan templates\n     const CScript& script1 = scriptPubKey;\n     BOOST_FOREACH(const PAIRTYPE(txnouttype, CScript)& tplate, mTemplates)\n@@ -142,12 +147,6 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n                 else\n                     break;\n             }\n-            else if (opcode2 == OP_SMALLDATA)\n-            {\n-                // small pushdata, <= nMaxDatacarrierBytes\n-                if (vch1.size() > nMaxDatacarrierBytes)\n-                    break;\n-            }\n             else if (opcode1 != opcode2 || vch1 != vch2)\n             {\n                 // Others must match exactly"
      },
      {
        "sha": "ae1bbecca0bc58ef1f3dc5e016e94f04dd0131d4",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -25,7 +25,7 @@ class CScriptID : public uint160\n     CScriptID(const uint160& in) : uint160(in) {}\n };\n \n-static const unsigned int MAX_OP_RETURN_RELAY = 80;      //! bytes\n+static const unsigned int MAX_OP_RETURN_RELAY = 83; //! bytes (+1 for OP_RETURN, +2 for the pushdata opcodes)\n extern unsigned nMaxDatacarrierBytes;\n \n /**"
      },
      {
        "sha": "9847f6512ea6fbfd879077ec1bd9962fecd66988",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 2,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da894ab5da222ad317039eb008ec6443fb9113d9/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da894ab5da222ad317039eb008ec6443fb9113d9/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=da894ab5da222ad317039eb008ec6443fb9113d9",
        "patch": "@@ -351,12 +351,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].scriptPubKey = CScript() << OP_1;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n-    // 80-byte TX_NULL_DATA (standard)\n+    // MAX_OP_RETURN_RELAY-byte TX_NULL_DATA (standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY, t.vout[0].scriptPubKey.size());\n     BOOST_CHECK(IsStandardTx(t, reason));\n \n-    // 81-byte TX_NULL_DATA (non-standard)\n+    // MAX_OP_RETURN_RELAY+1-byte TX_NULL_DATA (non-standard)\n     t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3804678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef3800\");\n+    BOOST_CHECK_EQUAL(MAX_OP_RETURN_RELAY + 1, t.vout[0].scriptPubKey.size());\n+    BOOST_CHECK(!IsStandardTx(t, reason));\n+\n+    // Data payload can be encoded in any way...\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << ParseHex(\"00\") << ParseHex(\"01\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    // OP_RESERVED *is* considered to be a PUSHDATA type opcode by IsPushOnly()!\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RESERVED << -1 << 0 << ParseHex(\"01\") << 2 << 3 << 4 << 5 << 6 << 7 << 8 << 9 << 10 << 11 << 12 << 13 << 14 << 15 << 16;\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << 0 << ParseHex(\"01\") << 2 << ParseHex(\"ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n+    BOOST_CHECK(IsStandardTx(t, reason));\n+\n+    // ...so long as it only contains PUSHDATA's\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << OP_RETURN;\n     BOOST_CHECK(!IsStandardTx(t, reason));\n \n     // TX_NULL_DATA w/o PUSHDATA"
      }
    ]
  }
]