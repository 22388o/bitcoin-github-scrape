laanwj,2015-07-13T07:06:02Z,"Concept ACK - I've always thought policy doesn't belong in the Solver, which would be expected to determine what kind of script something is, then the policy to judge based on its output.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-120833832,120833832,
petertodd,2015-07-17T15:25:20Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-122311450,122311450,
petertodd,2015-07-17T15:27:35Z,"If you want to go ahead and rebase, that'd be great - I don't have the time/funding to do anything with this.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-122312298,122312298,
jtimon,2015-07-17T19:35:30Z,"Squashed everything but the last commit.\n\n@petertodd Thanks for the review. As long as there are reviewers with time to re-review, I'm happy to re-rebase.\n\nThoughts on the last commit again?\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-122387896,122387896,
petertodd,2015-07-18T17:15:19Z,"@jtimon I would _strongly_ recommend you change the constant rather than the unit tests - people end up designing stuff based on things like ""most miners will mine 80 byte op_return"" so changing it can be highly disruptive.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-122567268,122567268,
jtimon,2015-08-21T02:21:20Z,"No input from anyone else besides @petertodd for a while, so I've just removed the last commit ""fixup! Better yet, change the tests instead of the default constant"" like he suggested.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-133247703,133247703,
dcousens,2015-09-16T14:38:43Z,concept/utACK\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-140761484,140761484,
jtimon,2015-09-22T12:47:59Z,ping\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-142277887,142277887,
sipa,2015-09-22T16:34:56Z,Untested ACK.\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-142342481,142342481,
laanwj,2015-10-01T16:04:32Z,"utACK, needs rebase\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-144773029,144773029,
jtimon,2015-10-01T16:42:27Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-144782755,144782755,
laanwj,2015-10-02T09:45:25Z,"Forgot this, but @petertodd sending a tweet remindede me of it: this needs mention in `doc/release-notes.md`.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-144977072,144977072,
petertodd,2015-10-03T13:00:14Z,@laanwj Fixed: #6751 \n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-145246216,145246216,
NicolasDorier,2015-11-09T14:10:12Z,"What was the rational about allowing any push data in the OP_RETURN instead of just allowing any OP ? Why not accepting any operation ? After all, since the rest is never executed, we can save bytes by allowing any OP to be used, even invalid one. (Invalid OPs are standard if they are not executed)\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155072700,155072700,
jtimon,2015-11-10T13:54:29Z,"@NicolasDorier That's a very good question. In the original PR #5079 @petertodd says ""Previously only one PUSHDATA was allowed, needlessly limiting applications such as matching OP_RETURN contents with bloom filters that operate on a per-PUSHDATA level.""\nSo it seems that this additional limitation of in the standard policy of allowing only unspendable outputs that consist only on pushdata instruc",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155425450,155425450,
NicolasDorier,2015-11-10T14:16:44Z,"bloom filter is a way to get notified about content in OP_RETURN by SPV wallets with configurable compromise on privacy.\n\nSo this is not the reason, accepting all OP do not prevent you to use PushData in your OP_RETURN instead of garbage if you really need SPV capabilities.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155432192,155432192,
jtimon,2015-11-10T14:27:23Z,"Thanks for the clarification, I'm thinking that I should have moved that check to policy::IsStandard() as well. But I don't really understand what is for, so I would like to hear an answer to your question as well.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155434480,155434480,
petertodd,2015-11-10T19:58:33Z,"> What was the rational about allowing any push data in the OP_RETURN instead of just allowing any OP ? Why not accepting any operation ? After all, since the rest is never executed, we can save bytes by allowing any OP to be used, even invalid one.\n\nThat's an clever observation, and I had the same idea too!\n\nBut unfortunately sigops are counted in outputs, which makes it tricky to be sure we'",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155548865,155548865,
NicolasDorier,2015-11-11T05:56:23Z,"Ok, did not thought about sigops :(\nWill the SIG OP rule will change one day ? Something like a limit count per script ?\nI guess we can already be DoS by that now arbitrary redeem script are standard, and, most likely, miners does not even check the number of sig in a particular redeem.\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155676578,155676578,
sipa,2015-11-11T06:13:04Z,@NicolasDorier That would be hard fork. I don't think anyone here has to authority to say whether or not that will change.\n,https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155679130,155679130,
NicolasDorier,2015-11-11T06:15:55Z,"So what I mean is more, is there proposal being written to fix the issue right now ? (or even some args that the user/miner can turn on if we get spammed attacked with that so it is possible to refuse script with too much sig, we'll get some mitigation)\n",https://github.com/bitcoin/bitcoin/pull/6424#issuecomment-155679424,155679424,
dexX7,2015-07-12T14:44:42Z,"If `nMaxDatacarrierBytes` is 80, wouldn't the effective size only be ~~79~~ 77 byte now, due to the op code, which is part of `scriptPubKey`?\n",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r34422319,34422319,src/policy/policy.cpp
jtimon,2015-07-12T16:23:56Z,"It is clearer if you read commit by commit:\nhttps://github.com/jtimon/bitcoin/commit/dbc241dfd51623da770725909bb329f2188a5cb1\nhttps://github.com/jtimon/bitcoin/commit/904d59368899c9e522325e1925b500b3f9e34ee9\nhttps://github.com/jtimon/bitcoin/commit/984f7b4796f59b79da7a9074245b435007fb16a9\n\nThe simplest way to maintain the current ""effective size"" of 80 is to simply add 3 to MAX_OP_RETURN_RELA",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r34423087,34423087,src/policy/policy.cpp
dexX7,2015-07-12T17:38:38Z,"Thanks, I understand your reasoning, and even though it's a bit arbitrary, this may have an impact on applications. For example, a block header doesn't fit in nicely anymore. (I don't really care about those few bytes, but I recall reading about this use case somewhere..)\n",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r34423665,34423665,src/policy/policy.cpp
jtimon,2015-07-12T18:02:30Z,"Yes, I know the last commit will probably be discarded (that's why I put it the last), but I just want it to be considered as an option. I'm totally fine with 83 in the constant.\n",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r34423909,34423909,src/policy/policy.cpp
jgarzik,2015-09-16T13:19:07Z,It is a bit disappointing that GetBoolArg() use from prior code is continued.  Need a state-and-options struct.\n,https://github.com/bitcoin/bitcoin/pull/6424#discussion_r39627549,39627549,src/policy/policy.cpp
dcousens,2015-09-16T14:36:36Z,"`MAX_OP_RETURN_RELAY length bytes`, the hyphen seems odd here\n",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r39637268,39637268,src/test/transaction_tests.cpp
jtimon,2015-09-17T18:32:21Z,"It still needs to be a global. Later it can be an attribute of a global object, like in https://github.com/bitcoin/bitcoin/commit/4c412c994b9eccc0fdb9df3bfaea464afa0f90f5 but that global object can be ""moved up"" as a paramter (see https://github.com/bitcoin/bitcoin/commit/ddcb6a131791fc848036db450b0a75a55aae8010 ).\n",https://github.com/bitcoin/bitcoin/pull/6424#discussion_r39781866,39781866,src/policy/policy.cpp
