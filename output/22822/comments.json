[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548252",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907548252",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 907548252,
    "node_id": "IC_kwDOABII5842GBZc",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-28T01:48:53Z",
    "updated_at": "2021-08-28T01:48:53Z",
    "author_association": "MEMBER",
    "body": "Please add a link from the main README.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548252/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548882",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907548882",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 907548882,
    "node_id": "IC_kwDOABII5842GBjS",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-28T01:53:39Z",
    "updated_at": "2021-08-28T01:53:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@fanquake Done.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907548882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907703927",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-907703927",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 907703927,
    "node_id": "IC_kwDOABII5842GnZ3",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-28T23:48:44Z",
    "updated_at": "2021-08-28T23:52:07Z",
    "author_association": "MEMBER",
    "body": "@harding might be interested too\r\n\r\nUnsure if here or some wiki page is best, but I can step through the tutorial in a bit and give feedback",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/907703927/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908396688",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-908396688",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 908396688,
    "node_id": "IC_kwDOABII5842JQiQ",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-30T14:35:52Z",
    "updated_at": "2021-08-30T14:35:52Z",
    "author_association": "MEMBER",
    "body": "utACK 2693a97e51ee527a5e43c1d9c493a43cbd289af8\r\n\r\nThis process is still quite tedious, but it's good to have it documented.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908396688/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908985319",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-908985319",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 908985319,
    "node_id": "IC_kwDOABII5842LgPn",
    "user": {
      "login": "jaysonmald35",
      "id": 87387449,
      "node_id": "MDQ6VXNlcjg3Mzg3NDQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/87387449?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaysonmald35",
      "html_url": "https://github.com/jaysonmald35",
      "followers_url": "https://api.github.com/users/jaysonmald35/followers",
      "following_url": "https://api.github.com/users/jaysonmald35/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaysonmald35/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaysonmald35/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaysonmald35/subscriptions",
      "organizations_url": "https://api.github.com/users/jaysonmald35/orgs",
      "repos_url": "https://api.github.com/users/jaysonmald35/repos",
      "events_url": "https://api.github.com/users/jaysonmald35/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaysonmald35/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-31T07:46:51Z",
    "updated_at": "2021-08-31T07:46:51Z",
    "author_association": "NONE",
    "body": "Thank u",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/908985319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909999410",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-909999410",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 909999410,
    "node_id": "IC_kwDOABII5842PX0y",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-01T07:18:30Z",
    "updated_at": "2021-09-01T07:18:30Z",
    "author_association": "NONE",
    "body": "I don't quite understand the point of this, when we have https://github.com/bitcoin/bitcoin/pull/22067\r\n\r\n22067 simply explains how to set up a multisig wallet using the GUI and RPC commands, why have another document with bash scripts? Other improvements can be added to the other PR",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/909999410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911627612",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-911627612",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 911627612,
    "node_id": "IC_kwDOABII5842VlVc",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-02T12:33:24Z",
    "updated_at": "2021-09-02T12:33:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "The purpose of this PR is to add a tutorial (step by step) on multisig that explains some current functions and limitations in more detail.\r\n\r\nThus, the reader who doesn't understand the Test Framework or python will still be able to reproduce these steps on signet or even mainnet .\r\n\r\nIf this is a valid proposal, it can be a complement to PR #22067.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911627612/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911702496",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-911702496",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 911702496,
    "node_id": "IC_kwDOABII5842V3ng",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-02T13:46:32Z",
    "updated_at": "2021-09-02T13:46:32Z",
    "author_association": "MEMBER",
    "body": "Concept ACK, provided people continue to maintain this and keep it up-to-date. Links between this and the docs + test in #22067 may be good to avoid information siloing.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911702496/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911711792",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-911711792",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 911711792,
    "node_id": "IC_kwDOABII5842V54w",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-02T13:55:30Z",
    "updated_at": "2021-09-02T13:56:15Z",
    "author_association": "MEMBER",
    "body": "> Thus, the reader who doesn't understand the Test Framework or python will still be able to reproduce these steps on signet or even mainnet .\r\n\r\nConversely, the purpose of tests is to ensure we don't accidentally break functionality.\r\n\r\nI agree it's useful if the toturial points to the test and vv, and we try to keep them somewhat consistent (although the test may continue to use earlier methods to ensure we don't break those as we change the recommended workflow for new users)\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911711792/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911802620",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-911802620",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 911802620,
    "node_id": "IC_kwDOABII5842WQD8",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-02T15:22:17Z",
    "updated_at": "2021-09-02T15:36:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't quite understand the point of this, when we have #22067\r\n>\r\n> 22067 simply explains how to set up a multisig wallet using the GUI and RPC commands, why have another document with bash scripts? Other improvements can be added to the other PR\r\n\r\nI agree with @Rspigler. I'd prefer this was a StackExchange post given that the process will likely repeatedly change in future and introduces maintenance burden. It looks good though, just quibbling on the best location for it given we want to avoid bloated, outdated docs in the repo in future. \r\n\r\nedit: Feel free to put it [here](https://bitcoin.stackexchange.com/questions/109472/can-you-explain-how-to-set-up-a-basic-m-of-n-multisig-between-multiple-people-us) if you agree with above. Once the (optimal) process has crystallized I'd be more comfortable transferring it back as a stable doc to the repo.\r\n\r\nI put up a StackExchange [post](https://bitcoin.stackexchange.com/questions/100967/in-a-multisig-wallet-setup-what-needs-to-be-backed-up-and-why/) by @ben-kaufman there on multisig backups which seems to me to be in a similar vein.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/911802620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915639066",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-915639066",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 915639066,
    "node_id": "IC_kwDOABII5842k4sa",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-08T23:25:35Z",
    "updated_at": "2021-09-08T23:25:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for suggestions @shaavan. I added them. \r\n\r\n@michaelfolkson  I will add a short version of this tutorial to the StackExchange question you created.\r\n\r\nI don't have a strong opinion whether this type of documentation is better to be in the repo or on another site.\r\n\r\nThe advantage of listing the procedures here is that it is extensively reviewed, so it is much more reliable and is part of the reference implementation.\r\n\r\nThe downside, as already mentioned, is the maintenance burden.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/915639066/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921029032",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-921029032",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 921029032,
    "node_id": "IC_kwDOABII58425cmo",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-16T15:58:37Z",
    "updated_at": "2021-09-16T15:58:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have a slight preference towards more concise guide from #22067. \r\n\r\nBut in case this will be merged sooner, I'll repeat my concern for both this PR and #22067\r\n\r\n> Why not have just one wallet? Having two wallets is less intuitive, complicates backups and could lead to user confusion and even loss of funds. Especially taking into account that you need to backup both wallets to restore your funds. This doesn't come through the documentation.\r\n\r\nSee my [comment](https://github.com/bitcoin/bitcoin/pull/22067#pullrequestreview-739096266) for suggestions",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921029032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921061022",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-921061022",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 921061022,
    "node_id": "IC_kwDOABII58425kae",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-16T16:41:55Z",
    "updated_at": "2021-09-16T16:41:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I have a slight preference towards more concise guide from #22067.\r\n\r\nwhynotboth.gif\r\n\r\nAlthough I like this tutorial. Other PR adds lot of things which can be useful for devs but docs from repository are also used by power users.  \r\n\r\nConcept ACK and thanks for your contribution @lsilva01\r\n\r\nI want to use this tutorial and make some GUI or script to make it even easier for users before reviewing this PR in detail. Because multisig still feels like something only devs and few users can do. \r\n\r\nhttps://unchained-capital.github.io/caravan/ is a nice web app although I don't have the skills to create such things, I will try doing a console application/desktop application/scripts. Also it would be better if we can avoid reference to open PRs in docs.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/921061022/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923618566",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-923618566",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 923618566,
    "node_id": "IC_kwDOABII5843DU0G",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T04:41:56Z",
    "updated_at": "2021-09-21T04:41:56Z",
    "author_association": "NONE",
    "body": "@S3RK I think it is better to have the setup with 2 wallets, because that is how offline multisig should be run (1 wallet for the offline privkey/signing, another wallet for the online coordinator/node).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923618566/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923636574",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-923636574",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 923636574,
    "node_id": "IC_kwDOABII5843DZNe",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T05:22:46Z",
    "updated_at": "2021-09-21T05:22:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I have also started working on a desktop application based on this tutorial. Hopefully will be completed by end of this week.\r\n\r\n![image](https://user-images.githubusercontent.com/13405205/134115644-d22b95a4-ab62-4807-9b28-6642c47ad153.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923636574/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923712187",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-923712187",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 923712187,
    "node_id": "IC_kwDOABII5843Drq7",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-21T07:25:06Z",
    "updated_at": "2021-09-21T07:25:06Z",
    "author_association": "NONE",
    "body": "@prayank23 Awesome!\r\n\r\nPlease see https://github.com/bitcoin/bitcoin/issues/21071#issuecomment-923711647 if you are working on a multisig GUI",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923712187/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/945769508",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-945769508",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 945769508,
    "node_id": "IC_kwDOABII5844X0wk",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-18T13:29:39Z",
    "updated_at": "2021-10-18T13:29:39Z",
    "author_association": "MEMBER",
    "body": "> It would be great if we could figure out some middle ground where the documentation is visible to the audience who needs a multisig tutorial. But at the same time, not being a maintenance burden to the bitcoin in general.\r\n\r\nI think documenting a basic multisig flow is important, as it is something a lot of people want to do nowadays. IMO it's best to regard it as basic functionality of the wallet not something exotic.\r\n\r\n>  but I understand that it would be a burden to keep updating the doc as the process keeps changing\r\n\r\nNow that PSBT's and descriptor wallets have been hammered out. The process shouldn't change too much anymore, right?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/945769508/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964050698",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#issuecomment-964050698",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22822",
    "id": 964050698,
    "node_id": "IC_kwDOABII5845dj8K",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-09T11:13:21Z",
    "updated_at": "2021-11-16T12:48:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/964050698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697960709",
    "pull_request_review_id": 741077143,
    "id": 697960709,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5Nzk2MDcwOQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 30,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should we mention about P2TR and `m/86'/1'/0'` here? ",
    "created_at": "2021-08-29T05:47:16Z",
    "updated_at": "2021-08-29T05:47:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r697960709",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697960709"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r697960709"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697960709/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698540741",
    "pull_request_review_id": 741720035,
    "id": 698540741,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0MDc0MQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 3,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Type-o: \"multig\" => \"multisig\"",
    "created_at": "2021-08-30T14:33:08Z",
    "updated_at": "2021-08-30T14:47:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698540741",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698540741"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698540741"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698540741/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698546861",
    "pull_request_review_id": 741720035,
    "id": 698546861,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0Njg2MQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 153,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Type-o: \"Te\" => \"The\"",
    "created_at": "2021-08-30T14:40:10Z",
    "updated_at": "2021-08-30T14:47:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698546861",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698546861"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698546861"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698546861/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 153,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698547764",
    "pull_request_review_id": 741720035,
    "id": 698547764,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU0Nzc2NA==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).\n+\n+For simplicity, the destination address is taken from the `participant_1` wallet in the code above, but it can be any valid bitcoin address.\n+\n+The `walletcreatefundedpsbt` RPC is used to create and fund a transaction in the PSBT format. It is the first step in creating the PSBT.\\",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 157,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Type-o: \".\\\\\" => \".\" at end of line",
    "created_at": "2021-08-30T14:41:12Z",
    "updated_at": "2021-08-30T14:47:24Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698547764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698547764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698547764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698547764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 157,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698576475",
    "pull_request_review_id": 741767874,
    "id": 698576475,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU3NjQ3NQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 60,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's good to point out this limitation at the top too.",
    "created_at": "2021-08-30T15:15:39Z",
    "updated_at": "2021-08-30T15:15:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698576475",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698576475"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698576475"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698576475/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698577295",
    "pull_request_review_id": 741769036,
    "id": 698577295,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU3NzI5NQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.",
    "path": "doc/multisig-tutorial.md",
    "position": 25,
    "original_position": 19,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In addition, these three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\r\n\r\n(that said, I find this restriction annoying)",
    "created_at": "2021-08-30T15:16:46Z",
    "updated_at": "2021-08-30T15:17:28Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698577295",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698577295"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r698577295"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/698577295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699038799",
    "pull_request_review_id": 742346456,
    "id": 699038799,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTAzODc5OQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.",
    "path": "doc/multisig-tutorial.md",
    "position": 5,
    "original_position": 5,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Is `regtest` vs `signet` the main difference? I'd expect the guide to have the same steps regardless of the chain used. \r\n\r\nWhat's the long-term plan for this guide and the guide from #22067? Do we plan to maintain both of them or keep only one?",
    "created_at": "2021-08-31T06:59:39Z",
    "updated_at": "2021-08-31T06:59:39Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699038799",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699038799"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699038799"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699038799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 5,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699178577",
    "pull_request_review_id": 742533102,
    "id": 699178577,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5OTE3ODU3Nw==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.",
    "path": "doc/multisig-tutorial.md",
    "position": 5,
    "original_position": 5,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The \"Basic multisig example\" in 22067 should probably link to this guide, but let's see what gets merged first.",
    "created_at": "2021-08-31T10:08:40Z",
    "updated_at": "2021-08-31T10:08:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699178577",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699178577"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r699178577"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/699178577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 5,
    "original_line": 5,
    "side": "RIGHT",
    "in_reply_to_id": 699038799
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070306",
    "pull_request_review_id": 745044284,
    "id": 701070306,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MDMwNg==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 30,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added this path.",
    "created_at": "2021-09-02T13:14:11Z",
    "updated_at": "2021-09-02T13:14:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070306",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070306"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070306"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070306/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 697960709
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070548",
    "pull_request_review_id": 745044652,
    "id": 701070548,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MDU0OA==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 3,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed. Thanks.",
    "created_at": "2021-09-02T13:14:29Z",
    "updated_at": "2021-09-02T13:14:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070548",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070548"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070548"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070548/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3,
    "side": "RIGHT",
    "in_reply_to_id": 698540741
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070662",
    "pull_request_review_id": 745044784,
    "id": 701070662,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MDY2Mg==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 153,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed. ",
    "created_at": "2021-09-02T13:14:36Z",
    "updated_at": "2021-09-02T13:14:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070662",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070662"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070662"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070662/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 153,
    "side": "RIGHT",
    "in_reply_to_id": 698546861
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070747",
    "pull_request_review_id": 745044904,
    "id": 701070747,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MDc0Nw==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+### 1.5 Fund the wallet\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)\n+\n+./contrib/signet/getcoins.py -a $receiving_address\n+```\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+The `getbalances` RPC may be used to check the balance. Coins with `trusted` status can be spent.\n+\n+```bash\n+./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalances\n+```\n+\n+### 1.6 Create a PSBT\n+\n+```bash\n+balance=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getbalance)\n+\n+amount=$(echo \"$balance * 0.8\" | bc -l | sed -e 's/^\\./0./' -e 's/^-\\./-0./')\n+\n+destination_addr=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_1\" getnewaddress)\n+\n+funded_psbt=$(./src/bitcoin-cli -signet -named -rpcwallet=\"multisig_wallet_01\" walletcreatefundedpsbt outputs=\"{\\\"$destination_addr\\\": $amount}\" | jq -r '.psbt')\n+```\n+\n+Unlike singlesig wallets, multisig wallets cannot create and sign transactions directly because they require the signatures of the co-signers. Instead they create a Partially Signed Bitcoin Transaction (PSBT).\n+\n+PSBT is a data format that allows wallets and other tools to exchange information about a Bitcoin transaction and the signatures necessary to complete it. [[source](https://bitcoinops.org/en/topics/psbt/)]\n+\n+Te current PSBT version (v0) is defined in [BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki).\n+\n+For simplicity, the destination address is taken from the `participant_1` wallet in the code above, but it can be any valid bitcoin address.\n+\n+The `walletcreatefundedpsbt` RPC is used to create and fund a transaction in the PSBT format. It is the first step in creating the PSBT.\\",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 157,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed. ",
    "created_at": "2021-09-02T13:14:43Z",
    "updated_at": "2021-09-02T13:14:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070747",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070747"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701070747"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701070747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 157,
    "side": "RIGHT",
    "in_reply_to_id": 698547764
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701071995",
    "pull_request_review_id": 745046673,
    "id": 701071995,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MTk5NQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH and `m/49'/1'/0'` for P2WPKH-nested-in-P2SH based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+Note that this step extracts the `m/84'/1'/0'` account and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).",
    "path": "doc/multisig-tutorial.md",
    "position": null,
    "original_position": 60,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. Thanks.",
    "created_at": "2021-09-02T13:16:12Z",
    "updated_at": "2021-09-02T13:16:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701071995",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701071995"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701071995"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701071995/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 698576475
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701072385",
    "pull_request_review_id": 745047206,
    "id": 701072385,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDcwMTA3MjM4NQ==",
    "diff_hunk": "@@ -0,0 +1,225 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet\n+```\n+\n+This tutorial also uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.",
    "path": "doc/multisig-tutorial.md",
    "position": 25,
    "original_position": 19,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "2693a97e51ee527a5e43c1d9c493a43cbd289af8",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Text added.",
    "created_at": "2021-09-02T13:16:40Z",
    "updated_at": "2021-09-02T13:16:40Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701072385",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701072385"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r701072385"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/701072385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 698577295
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712700281",
    "pull_request_review_id": 759308268,
    "id": 712700281,
    "node_id": "PRRC_kwDOABII584qevF5",
    "diff_hunk": "@@ -0,0 +1,242 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multisig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+This tutorial uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet -daemon\n+```\n+\n+This tutorial also uses the default WPKH derivation path to get the xpubs and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+These three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH, `m/49'/1'/0'` for P2WPKH-nested-in-P2SH and `m/86'/1'/0'` for P2TR based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+As previously mentioned, this step extracts the `m/84'/1'/0'` account instead of the path defined in [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki), since there is no way to extract a specific path in Bitcoin Core at the time of writing.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+Once the wallets have already been created and this tutorial needs to be repeated or resumed, it is not necessary to recreate them, just load them with the command below:\n+\n+```bash\n+for ((n=1;n<=3;n++)); do ./src/bitcoin-cli -signet loadwallet \"participant_${n}\"; done\n+```\n+\n+### 1.5 Fund the wallet\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)",
    "path": "doc/multisig-tutorial.md",
    "position": 137,
    "original_position": 137,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This gives error:\r\n\r\n```\r\nerror code: -4\r\nerror message:\r\nError: This wallet has no available keys\r\n```",
    "created_at": "2021-09-21T05:14:47Z",
    "updated_at": "2021-09-21T05:14:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r712700281",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712700281"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r712700281"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712700281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713481938",
    "pull_request_review_id": 760329614,
    "id": 713481938,
    "node_id": "PRRC_kwDOABII584qht7S",
    "diff_hunk": "@@ -0,0 +1,242 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multisig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+This tutorial uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet -daemon\n+```\n+\n+This tutorial also uses the default WPKH derivation path to get the xpubs and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+These three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH, `m/49'/1'/0'` for P2WPKH-nested-in-P2SH and `m/86'/1'/0'` for P2TR based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+As previously mentioned, this step extracts the `m/84'/1'/0'` account instead of the path defined in [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki), since there is no way to extract a specific path in Bitcoin Core at the time of writing.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+Once the wallets have already been created and this tutorial needs to be repeated or resumed, it is not necessary to recreate them, just load them with the command below:\n+\n+```bash\n+for ((n=1;n<=3;n++)); do ./src/bitcoin-cli -signet loadwallet \"participant_${n}\"; done\n+```\n+\n+### 1.5 Fund the wallet\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)",
    "path": "doc/multisig-tutorial.md",
    "position": 137,
    "original_position": 137,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The multisig wallet is created without keys (line 114), so you can import the descriptors (line 116). If you forget to do this, this error message is displayed.\r\n\r\nYou can check if the wallet has descriptors imported with the command  command `./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" listdescriptors` .",
    "created_at": "2021-09-21T23:15:16Z",
    "updated_at": "2021-09-21T23:15:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r713481938",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713481938"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r713481938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/713481938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 712700281
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717446980",
    "pull_request_review_id": 765266538,
    "id": 717446980,
    "node_id": "PRRC_kwDOABII584qw19E",
    "diff_hunk": "@@ -0,0 +1,242 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multisig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+This tutorial uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet -daemon\n+```\n+\n+This tutorial also uses the default WPKH derivation path to get the xpubs and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+These three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets\n+\n+Extract the xpub of each wallet. To do this, the `listdescriptors` RPC is used. By default, Bitcoin Core single-sig wallets are created using path `m/44'/1'/0'` for PKH, `m/84'/1'/0'` for WPKH, `m/49'/1'/0'` for P2WPKH-nested-in-P2SH and `m/86'/1'/0'` for P2TR based accounts. Each of them uses the chain 0 for external addresses and chain 1 for internal ones, as shown in the example below.\n+\n+```\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/0/*)#g8l47ngv\n+\n+wpkh([1004658e/84'/1'/0']tpubDCBEcmVKbfC9KfdydyLbJ2gfNL88grZu1XcWSW9ytTM6fitvaRmVyr8Ddf7SjZ2ZfMx9RicjYAXhuh3fmLiVLPodPEqnQQURUfrBKiiVZc8/1/*)#en65rxc5\n+```\n+\n+The suffix (after #) is the checksum. Descriptors can optionally be suffixed with a checksum to protect against typos or copy-paste errors.\n+All RPCs in Bitcoin Core will include the checksum in their output.\n+\n+```bash\n+declare -A xpubs\n+\n+for ((n=1;n<=3;n++))\n+do\n+ xpubs[\"internal_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/1/*\"))][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+\n+ xpubs[\"external_xpub_${n}\"]=$(./src/bitcoin-cli -signet -rpcwallet=\"participant_${n}\" listdescriptors | jq '.descriptors | [.[] | select(.desc | startswith(\"wpkh\") and contains(\"/0/*\") )][0] | .desc' | grep -Po '(?<=\\().*(?=\\))')\n+done\n+```\n+\n+`jq` is used to extract the xpub from the `wpkh` descriptor.\n+\n+The following command can be used to verify if the xpub was generated correctly.\n+\n+```bash\n+for x in \"${!xpubs[@]}\"; do printf \"[%s]=%s\\n\" \"$x\" \"${xpubs[$x]}\" ; done\n+```\n+\n+As previously mentioned, this step extracts the `m/84'/1'/0'` account instead of the path defined in [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki), since there is no way to extract a specific path in Bitcoin Core at the time of writing.\n+\n+### 1.3 Define the Multisig Descriptors\n+\n+Define the external and internal multisig descriptors, add the checksum and then, join both in a JSON array.\n+\n+```bash\n+external_desc=\"wsh(sortedmulti(2,${xpubs[\"external_xpub_1\"]},${xpubs[\"external_xpub_2\"]},${xpubs[\"external_xpub_3\"]}))\"\n+internal_desc=\"wsh(sortedmulti(2,${xpubs[\"internal_xpub_1\"]},${xpubs[\"internal_xpub_2\"]},${xpubs[\"internal_xpub_3\"]}))\"\n+\n+external_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $external_desc | jq '.descriptor')\n+internal_desc_sum=$(./src/bitcoin-cli -signet getdescriptorinfo $internal_desc | jq '.descriptor')\n+\n+multisig_ext_desc=\"{\\\"desc\\\": $external_desc_sum, \\\"active\\\": true, \\\"internal\\\": false, \\\"timestamp\\\": \\\"now\\\"}\"\n+multisig_int_desc=\"{\\\"desc\\\": $internal_desc_sum, \\\"active\\\": true, \\\"internal\\\": true, \\\"timestamp\\\": \\\"now\\\"}\"\n+\n+multisig_desc=\"[$multisig_ext_desc, $multisig_int_desc]\"\n+```\n+\n+`external_desc` and `internal_desc` specify the output type (`wsh`, in this case) and the xpubs involved. They also use BIP 67 (`sortedmulti`), so the wallet can be recreated without worrying about the order of xpubs. Conceptually, descriptors describe a list of scriptPubKey (along with information for spending from it) [[source](https://github.com/bitcoin/bitcoin/issues/21199#issuecomment-780772418)].\n+\n+Note that at least two descriptors are usually used, one for internal derivation paths and external ones. There are discussions about eliminating this redundancy, as can been seen in the issue [#17190](https://github.com/bitcoin/bitcoin/issues/17190).\n+\n+After creating the descriptors, it is necessary to add the checksum, which is required by the `importdescriptors` RPC.\n+\n+The checksum for a descriptor without one can be computed using the `getdescriptorinfo` RPC. The response has the `descriptor` field, which is the descriptor with the checksum added.\n+\n+There are other fields that can be added to the descriptors:\n+\n+* `active`: Sets the descriptor to be the active one for the corresponding output type (`wsh`, in this case).\n+* `internal`: Indicates whether matching outputs should be treated as something other than incoming payments (e.g. change).\n+* `timestamp`: Sets the time from which to start rescanning the blockchain for the descriptor, in UNIX epoch time.\n+\n+Documentation for these and other parameters can be found by typing `./src/bitcoin-cli help importdescriptors`.\n+\n+`multisig_desc` concatenates external and internal descriptors in a JSON array and then it will be used to create the multisig wallet.\n+\n+### 1.4 Create the Multisig Wallet\n+\n+To create the multisig wallet, first create an empty one (no keys, HD seed and private keys disabled).\n+\n+Then import the descriptors created in the previous step using the `importdescriptors` RPC.\n+\n+After that, `getwalletinfo` can be used to check if the wallet was created successfully.\n+\n+```bash\n+./src/bitcoin-cli -signet -named createwallet wallet_name=\"multisig_wallet_01\" disable_private_keys=true blank=true descriptors=true\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" importdescriptors \"$multisig_desc\"\n+\n+./src/bitcoin-cli  -signet -rpcwallet=\"multisig_wallet_01\" getwalletinfo\n+```\n+\n+Once the wallets have already been created and this tutorial needs to be repeated or resumed, it is not necessary to recreate them, just load them with the command below:\n+\n+```bash\n+for ((n=1;n<=3;n++)); do ./src/bitcoin-cli -signet loadwallet \"participant_${n}\"; done\n+```\n+\n+### 1.5 Fund the wallet\n+\n+The wallet can receive signet coins by generating a new address and passing it as parameters to `getcoins.py` script.\n+\n+If the script throws an error such as `Captcha required (reload page)`, the url in the script can be accessed directly.\n+At time of writing, the url is [`https://signetfaucet.com`](https://signetfaucet.com).\n+\n+Coins received by the wallet must have at least 1 confirmation before they can be spent. It is necessary to wait for a new block to be mined before continuing.\n+\n+```bash\n+receiving_address=$(./src/bitcoin-cli -signet -rpcwallet=\"multisig_wallet_01\" getnewaddress)",
    "path": "doc/multisig-tutorial.md",
    "position": 137,
    "original_position": 137,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@lsilva01 Sorry I missed importing descriptors. Will be working on this today.",
    "created_at": "2021-09-28T10:38:32Z",
    "updated_at": "2021-09-28T10:38:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r717446980",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717446980"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r717446980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717446980/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 137,
    "original_line": 137,
    "side": "RIGHT",
    "in_reply_to_id": 712700281
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717466713",
    "pull_request_review_id": 765293381,
    "id": 717466713,
    "node_id": "PRRC_kwDOABII584qw6xZ",
    "diff_hunk": "@@ -0,0 +1,242 @@\n+# 1. Multisig Tutorial\n+\n+Currently, it is possible to create a multisig wallet using Bitcoin Core only.\n+\n+Although there is already a brief explanation and a functional test about the multisig implemented in [PR 22067](https://github.com/bitcoin/bitcoin/pull/22067), this tutorial proposes to use the signet (instead of regtest), bringing the reader closer to a real environment and explaining some functions in more detail.\n+\n+This tutorial uses [jq](https://github.com/stedolan/jq) JSON processor to process the results from RPC and stores the relevant values in bash variables. This makes the tutorial reproducible and easier to follow step by step.\n+\n+Before starting this tutorial, start the bitcoin node on the signet network.\n+\n+```bash\n+./src/bitcoind -signet -daemon\n+```\n+\n+This tutorial also uses the default WPKH derivation path to get the xpubs and does not conform to [BIP 45](https://github.com/bitcoin/bips/blob/master/bip-0045.mediawiki) or [BIP 87](https://github.com/bitcoin/bips/blob/master/bip-0087.mediawiki).\n+\n+At the time of writing, there is no way to extract a specific path from wallets in Bitcoin Core. For this, an external signer/xpub can be used.\n+\n+[PR #22341](https://github.com/bitcoin/bitcoin/pull/22341), which is still under development, introduces a new wallet RPC `getxpub`. It takes a BIP32 path as an argument and returns the xpub, along with the master key fingerprint.\n+\n+## 1.1 Basic Multisig Workflow\n+\n+### 1.1 Create the Descriptor Wallets\n+\n+For a 2-of-3 multisig, create 3 descriptor wallets. It is important that they are of the descriptor type in order to retrieve the wallet descriptors. These wallets contain HD seed and private keys, which will be used to sign the PSBTs and derive the xpub.\n+\n+These three wallets should not be used directly for privacy reasons (public key reuse). They should only be used to sign transactions for the (watch-only) multisig wallet.\n+\n+```bash\n+for ((n=1;n<=3;n++))\n+do\n+ ./src/bitcoin-cli -signet -named createwallet wallet_name=\"participant_${n}\" descriptors=true\n+done\n+```\n+\n+### 1.2 Create the Descriptor Wallets",
    "path": "doc/multisig-tutorial.md",
    "position": 36,
    "original_position": 36,
    "commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "original_commit_id": "d92210e01b5d38bba5ce5bd80fd4caa59f96eec1",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Line 23 is `### 1.1 Create the Descriptor Wallets` and this line `### 1.2 Create the Descriptor Wallets`\r\n\r\nShould combine them in one or change 1.2 to something else? I think we list descriptors in 1.2",
    "created_at": "2021-09-28T11:07:58Z",
    "updated_at": "2021-09-28T11:07:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r717466713",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717466713"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22822#discussion_r717466713"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22822"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/717466713/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 36,
    "original_line": 36,
    "side": "RIGHT"
  }
]