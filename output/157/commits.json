[
  {
    "sha": "4a97b6679621359d471cd22bbc63508ca2f80ed1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTk3YjY2Nzk2MjEzNTlkNDcxY2QyMmJiYzYzNTA4Y2EyZjgwZWQx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-04-14T09:17:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2011-04-17T20:04:13Z"
      },
      "message": "Monitor incoming transactions for spends by (a copy of) your own wallet",
      "tree": {
        "sha": "ec00824f4662cf374f839f32b595a46462058c3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec00824f4662cf374f839f32b595a46462058c3b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a97b6679621359d471cd22bbc63508ca2f80ed1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a97b6679621359d471cd22bbc63508ca2f80ed1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a97b6679621359d471cd22bbc63508ca2f80ed1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a97b6679621359d471cd22bbc63508ca2f80ed1/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf3a0902ef98365d803e4a03853dbf0f83511026",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf3a0902ef98365d803e4a03853dbf0f83511026",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf3a0902ef98365d803e4a03853dbf0f83511026"
      }
    ],
    "stats": {
      "total": 46,
      "additions": 11,
      "deletions": 35
    },
    "files": [
      {
        "sha": "c313fb86279b49a96f594f790bd3604985777118",
        "filename": "main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 35,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a97b6679621359d471cd22bbc63508ca2f80ed1/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a97b6679621359d471cd22bbc63508ca2f80ed1/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/main.cpp?ref=4a97b6679621359d471cd22bbc63508ca2f80ed1",
        "patch": "@@ -178,30 +178,20 @@ bool AddToWallet(const CWalletTx& wtxIn)\n     return true;\n }\n \n-bool AddToWalletIfMine(const CTransaction& tx, const CBlock* pblock)\n+bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlock* pblock, bool fUpdate = false)\n {\n-    if (tx.IsMine() || mapWallet.count(tx.GetHash()))\n-    {\n-        CWalletTx wtx(tx);\n-        // Get merkle branch if transaction was found in a block\n-        if (pblock)\n-            wtx.SetMerkleBranch(pblock);\n-        return AddToWallet(wtx);\n-    }\n-    return true;\n-}\n-\n-bool AddToWalletIfFromMe(const CTransaction& tx, const CBlock* pblock)\n-{\n-    if (tx.IsFromMe() || mapWallet.count(tx.GetHash()))\n+    uint256 hash = tx.GetHash();\n+    bool fExisted = mapWallet.count(hash);\n+    if (fExisted && !fUpdate) return false;\n+    if (fExisted || tx.IsMine() || tx.IsFromMe())\n     {\n         CWalletTx wtx(tx);\n         // Get merkle branch if transaction was found in a block\n         if (pblock)\n             wtx.SetMerkleBranch(pblock);\n         return AddToWallet(wtx);\n     }\n-    return true;\n+    return false;\n }\n \n bool EraseFromWallet(uint256 hash)\n@@ -911,22 +901,8 @@ int ScanForWalletTransactions(CBlockIndex* pindexStart)\n             block.ReadFromDisk(pindex, true);\n             foreach(CTransaction& tx, block.vtx)\n             {\n-                uint256 hash = tx.GetHash();\n-                if (mapWallet.count(hash)) continue;\n-                AddToWalletIfMine(tx, &block);\n-                if (mapWallet.count(hash))\n-                {\n-                    ++ret;\n-                    printf(\"Added missing RECEIVE %s\\n\", hash.ToString().c_str());\n-                    continue;\n-                }\n-                AddToWalletIfFromMe(tx, &block);\n-                if (mapWallet.count(hash))\n-                {\n-                    ++ret;\n-                    printf(\"Added missing SEND %s\\n\", hash.ToString().c_str());\n-                    continue;\n-                }\n+                if (AddToWalletIfInvolvingMe(tx, &block))\n+                    ret++;\n             }\n             pindex = pindex->pnext;\n         }\n@@ -1471,7 +1447,7 @@ bool CBlock::ConnectBlock(CTxDB& txdb, CBlockIndex* pindex)\n \n     // Watch for transactions paying to me\n     foreach(CTransaction& tx, vtx)\n-        AddToWalletIfMine(tx, this);\n+        AddToWalletIfInvolvingMe(tx, this, true);\n \n     return true;\n }\n@@ -2705,7 +2681,7 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         bool fMissingInputs = false;\n         if (tx.AcceptToMemoryPool(true, &fMissingInputs))\n         {\n-            AddToWalletIfMine(tx, NULL);\n+            AddToWalletIfInvolvingMe(tx, NULL, true);\n             RelayMessage(inv, vMsg);\n             mapAlreadyAskedFor.erase(inv);\n             vWorkQueue.push_back(inv.hash);\n@@ -2726,7 +2702,7 @@ bool ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     if (tx.AcceptToMemoryPool(true))\n                     {\n                         printf(\"   accepted orphan tx %s\\n\", inv.hash.ToString().substr(0,10).c_str());\n-                        AddToWalletIfMine(tx, NULL);\n+                        AddToWalletIfInvolvingMe(tx, NULL, true);\n                         RelayMessage(inv, vMsg);\n                         mapAlreadyAskedFor.erase(inv);\n                         vWorkQueue.push_back(inv.hash);"
      }
    ]
  }
]