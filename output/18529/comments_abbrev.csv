MarcoFalke,2020-04-05 00:29:31,"The fuzz tests are not shipped on our website, nor are they run as part of `make check`. The existing unit test runs in a few milliseconds. So I'd slightly prefer to keep the unit tests for end users on odd compilers/platforms, which would otherwise be left standing in the rain. If you are worries about code duplication of the `prevector_tester` class, you may put it in `./src/test/util/`, which i",https://github.com/bitcoin/bitcoin/pull/18529#issuecomment-609109271,609109271,
sipa,2020-04-06 22:07:31,"@MarcoFalke Rebased, addressed your comments, and removed removal of the existing unit test (I've duplicated instead of creating a common shared class, as I expect the two to diverge - the existing test is much more suited as an approach for fuzzing, while we may want a few static cases instead as unit tests).",https://github.com/bitcoin/bitcoin/pull/18529#issuecomment-610062445,610062445,
MarcoFalke,2020-04-09 18:55:31,"ACK b1d24d1d031a2b2ce67bf846bafa1c3a499b7553 üç¨\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK b1d24d1d031a2b2ce67bf846bafa1c3a499b7553 üç¨\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjr+Qv/Xzpe1YkQG9BnrvlnlXx+mop66tdFHH3YXUWm8vaz9MPrQx3aWk",https://github.com/bitcoin/bitcoin/pull/18529#issuecomment-611696791,611696791,
MarcoFalke,2020-04-05 00:35:01,"Could this be combined with `case 3` and generalized?\n```suggestion\n            int del = prov.ConsumeIntegralInRange<int>(1, test.size());\n```",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r403599550,403599550,src/test/fuzz/prevector.cpp
MarcoFalke,2020-04-05 00:35:36,"Can the test method be made read-only? If yes, I think `case 15` can be removed?\n\n```suggestion\n    void test() const {\n```",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r403599745,403599745,src/test/fuzz/prevector.cpp
MarcoFalke,2020-04-05 00:41:58,"I think the assert-side-effects linter complains about this, so you might have two options:\n\n* Disable the linter for the fuzz tests\n* Remove the side effect\n\n```\nAssertions should not have side effects:\n\nsrc/test/fuzz/prevector.cpp:             assert(v == real_vector[pos++]);\n\nsrc/test/fuzz/prevector.cpp:             assert(v == real_vector[--pos]);\n\nsrc/test/fuzz/prevect",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r403602307,403602307,src/test/fuzz/prevector.cpp
MarcoFalke,2020-04-05 02:36:16,"Needs rebase, sorry\n\n```suggestion\ntest_fuzz_prevector_SOURCES = test/fuzz/prevector.cpp\n```",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r403639840,403639840,src/Makefile.test.include
sipa,2020-04-06 22:01:37,"Indeed, done (and the del range can start at 0 even).",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r404415137,404415137,src/test/fuzz/prevector.cpp
sipa,2020-04-06 22:02:38,"Right, my thinking was that the fuzzer should be allowed to find intermediate failures too, but I think that's pointless. A shorter fuzzer input (which runs test once at the end) would accomplish the same.\n\nDone.",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r404415565,404415565,src/test/fuzz/prevector.cpp
sipa,2020-04-06 22:02:52,Fixed by removing the side effect.,https://github.com/bitcoin/bitcoin/pull/18529#discussion_r404415680,404415680,src/test/fuzz/prevector.cpp
sipa,2020-04-06 22:03:00,"No worries, done.",https://github.com/bitcoin/bitcoin/pull/18529#discussion_r404415727,404415727,src/Makefile.test.include
MarcoFalke,2021-07-16 09:56:51,post-merge question: Is there a reason to limit the number of elements inserted in this case to `1` or `2`?,https://github.com/bitcoin/bitcoin/pull/18529#discussion_r671121780,671121780,src/test/fuzz/prevector.cpp
