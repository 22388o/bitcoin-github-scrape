[
  {
    "sha": "cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmViZDQwMGVmNGIyNmY1YjZjMWQ4YjMxYzZmNWUwZjA5MTg0ZGJh",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2018-02-20T04:20:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T18:58:48Z"
      },
      "message": "[test] Round target fee to 8 decimals in assert_fee_amount\n\nThe output would produce arbitrary number of decimal points, sometimes resulting in 9 decimals:\nAssertionError: Fee of 0.00000415 BTC too low! (Should be 0.000006175 BTC)\nThe above looks like the expected fee is 6175 sats when in reality it's 618.\n\nGithub-Pull: #12486\nRebased-From: 42e1b5d9797b65d3ce13a7cbace15fbedbcd4018",
      "tree": {
        "sha": "1061353edbe3491cf6f9b0ca9603ee15a0872747",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1061353edbe3491cf6f9b0ca9603ee15a0872747"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "845838c4451ecd1f7e988e7538a4d82f80b73670",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845838c4451ecd1f7e988e7538a4d82f80b73670",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/845838c4451ecd1f7e988e7538a4d82f80b73670"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "644f2d868aa35fc74e956493b9d7d0d7e8c7fbbf",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
        "patch": "@@ -26,7 +26,7 @@\n \n def assert_fee_amount(fee, tx_size, fee_per_kB):\n     \"\"\"Assert the fee was in range\"\"\"\n-    target_fee = tx_size * fee_per_kB / 1000\n+    target_fee = round(tx_size * fee_per_kB / 1000, 8)\n     if fee < target_fee:\n         raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\" % (str(fee), str(target_fee)))\n     # allow the wallet's estimation to be at most 2 bytes off"
      }
    ]
  },
  {
    "sha": "1286f3e49a7bdae72ae022ff4f83d0a77e832891",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjg2ZjNlNDlhN2JkYWU3MmFlMDIyZmY0ZjgzZDBhNzdlODMyODkx",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-21T05:25:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "test: Use wait_until to ensure ping goes out\n\nIntermittent failure evident here:\nhttps://travis-ci.org/bitcoin/bitcoin/jobs/344021180\n\nGithub-Pull: #12545\nRebased-From: 0eb84f30d80847b7392ad42b2d916eaf5923a63c",
      "tree": {
        "sha": "83f79f41e60be3287fbb41f113f24b6295b28355",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83f79f41e60be3287fbb41f113f24b6295b28355"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1286f3e49a7bdae72ae022ff4f83d0a77e832891",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1286f3e49a7bdae72ae022ff4f83d0a77e832891",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1286f3e49a7bdae72ae022ff4f83d0a77e832891",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1286f3e49a7bdae72ae022ff4f83d0a77e832891/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfebd400ef4b26f5b6c1d8b31c6f5e0f09184dba"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5f34b35bfbadad0793dac98ddb6f5f1e645f173c",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1286f3e49a7bdae72ae022ff4f83d0a77e832891/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1286f3e49a7bdae72ae022ff4f83d0a77e832891/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=1286f3e49a7bdae72ae022ff4f83d0a77e832891",
        "patch": "@@ -15,6 +15,7 @@\n     assert_raises_rpc_error,\n     connect_nodes_bi,\n     p2p_port,\n+    wait_until,\n )\n \n class NetTest(BitcoinTestFramework):\n@@ -47,14 +48,13 @@ def _test_getnettotals(self):\n         # the bytes sent/received should change\n         # note ping and pong are 32 bytes each\n         self.nodes[0].ping()\n-        time.sleep(0.1)\n+        wait_until(lambda: (net_totals['totalbytessent'] + 32*2) == self.nodes[0].getnettotals()['totalbytessent'], timeout=1)\n+        wait_until(lambda: (net_totals['totalbytesrecv'] + 32*2) == self.nodes[0].getnettotals()['totalbytesrecv'], timeout=1)\n+\n         peer_info_after_ping = self.nodes[0].getpeerinfo()\n-        net_totals_after_ping = self.nodes[0].getnettotals()\n         for before, after in zip(peer_info, peer_info_after_ping):\n             assert_equal(before['bytesrecv_per_msg']['pong'] + 32, after['bytesrecv_per_msg']['pong'])\n             assert_equal(before['bytessent_per_msg']['ping'] + 32, after['bytessent_per_msg']['ping'])\n-        assert_equal(net_totals['totalbytesrecv'] + 32*2, net_totals_after_ping['totalbytesrecv'])\n-        assert_equal(net_totals['totalbytessent'] + 32*2, net_totals_after_ping['totalbytessent'])\n \n     def _test_getnetworkinginfo(self):\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], True)"
      }
    ]
  },
  {
    "sha": "0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTk4Zjk2ZTQyMzU3YWMyNDMyMmE5NmYwODY0YjZiZmQ1ZTU1ZmZl",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-02-26T22:04:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "test: Use wait_until in tests where time was used for polling\n\nGithub-Pull: #12553\nRebased-From: 81b0822772169cb697b5994f49398e619d61a12d",
      "tree": {
        "sha": "85d621fbcac468ff527bf3fb2fc1834bc5b680ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85d621fbcac468ff527bf3fb2fc1834bc5b680ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1286f3e49a7bdae72ae022ff4f83d0a77e832891",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1286f3e49a7bdae72ae022ff4f83d0a77e832891",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1286f3e49a7bdae72ae022ff4f83d0a77e832891"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 13,
      "deletions": 34
    },
    "files": [
      {
        "sha": "cb2dd1f6a8188b008967bc60ae9cd52bf3b11e15",
        "filename": "test/functional/feature_pruning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 11,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/feature_pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/feature_pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_pruning.py?ref=0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "patch": "@@ -11,7 +11,6 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n-import time\n import os\n \n MIN_BLOCKS_TO_KEEP = 288\n@@ -79,11 +78,8 @@ def test_height_min(self):\n         for i in range(25):\n             mine_large_block(self.nodes[0], self.utxo_cache_0)\n \n-        waitstart = time.time()\n-        while os.path.isfile(self.prunedir+\"blk00000.dat\"):\n-            time.sleep(0.1)\n-            if time.time() - waitstart > 30:\n-                raise AssertionError(\"blk00000.dat not pruned when it should be\")\n+        # Wait for blk00000.dat to be pruned\n+        wait_until(lambda: not os.path.isfile(self.prunedir+\"blk00000.dat\"), timeout=30)\n \n         self.log.info(\"Success\")\n         usage = calc_usage(self.prunedir)\n@@ -218,11 +214,8 @@ def reorg_back(self):\n             goalbestheight = first_reorg_height + 1\n \n         self.log.info(\"Verify node 2 reorged back to the main chain, some blocks of which it had to redownload\")\n-        waitstart = time.time()\n-        while self.nodes[2].getblockcount() < goalbestheight:\n-            time.sleep(0.1)\n-            if time.time() - waitstart > 900:\n-                raise AssertionError(\"Node 2 didn't reorg to proper height\")\n+        # Wait for Node 2 to reorg to proper height\n+        wait_until(lambda: self.nodes[2].getblockcount() >= goalbestheight, timeout=900)\n         assert(self.nodes[2].getbestblockhash() == goalbesthash)\n         # Verify we can now have the data for a block previously pruned\n         assert(self.nodes[2].getblock(self.forkhash)[\"height\"] == self.forkheight)"
      },
      {
        "sha": "d1d3f1d7f15b66b975d9e348318ecdd703928aa7",
        "filename": "test/functional/feature_reindex.py",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/feature_reindex.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/feature_reindex.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_reindex.py?ref=0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "patch": "@@ -10,8 +10,7 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal\n-import time\n+from test_framework.util import wait_until\n \n class ReindexTest(BitcoinTestFramework):\n \n@@ -25,9 +24,7 @@ def reindex(self, justchainstate=False):\n         self.stop_nodes()\n         extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\", \"-checkblockindex=1\"]]\n         self.start_nodes(extra_args)\n-        while self.nodes[0].getblockcount() < blockcount:\n-            time.sleep(0.1)\n-        assert_equal(self.nodes[0].getblockcount(), blockcount)\n+        wait_until(lambda: self.nodes[0].getblockcount() == blockcount)\n         self.log.info(\"Success\")\n \n     def run_test(self):"
      },
      {
        "sha": "d8348432aa89314a6971ad322ad512cce67dc8e4",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "patch": "@@ -7,8 +7,6 @@\n Tests correspond to code in rpc/net.cpp.\n \"\"\"\n \n-import time\n-\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n@@ -62,12 +60,8 @@ def _test_getnetworkinginfo(self):\n \n         self.nodes[0].setnetworkactive(False)\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], False)\n-        timeout = 3\n-        while self.nodes[0].getnetworkinfo()['connections'] != 0:\n-            # Wait a bit for all sockets to close\n-            assert timeout > 0, 'not all connections closed in time'\n-            timeout -= 0.1\n-            time.sleep(0.1)\n+        # Wait a bit for all sockets to close\n+        wait_until(lambda: self.nodes[0].getnetworkinfo()['connections'] == 0, timeout=3)\n \n         self.nodes[0].setnetworkactive(True)\n         connect_nodes_bi(self.nodes, 0, 1)"
      },
      {
        "sha": "db259db8eb371a2bbbfe7c3403ba03a4a9b1ce76",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "patch": "@@ -334,20 +334,15 @@ def disconnect_nodes(from_connection, node_num):\n     for peer_id in [peer['id'] for peer in from_connection.getpeerinfo() if \"testnode%d\" % node_num in peer['subver']]:\n         from_connection.disconnectnode(nodeid=peer_id)\n \n-    for _ in range(50):\n-        if [peer['id'] for peer in from_connection.getpeerinfo() if \"testnode%d\" % node_num in peer['subver']] == []:\n-            break\n-        time.sleep(0.1)\n-    else:\n-        raise AssertionError(\"timed out waiting for disconnect\")\n+    # wait to disconnect\n+    wait_until(lambda: [peer['id'] for peer in from_connection.getpeerinfo() if \"testnode%d\" % node_num in peer['subver']] == [], timeout=5)\n \n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\" + str(p2p_port(node_num))\n     from_connection.addnode(ip_port, \"onetry\")\n     # poll until version handshake complete to avoid race conditions\n     # with transaction relaying\n-    while any(peer['version'] == 0 for peer in from_connection.getpeerinfo()):\n-        time.sleep(0.1)\n+    wait_until(lambda:  all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n \n def connect_nodes_bi(nodes, a, b):\n     connect_nodes(nodes[a], b)"
      },
      {
        "sha": "06300d3de6b39330b81adcb243d53b743f33b78d",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e98f96e42357ac24322a96f0864b6bfd5e55ffe/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "patch": "@@ -379,9 +379,9 @@ def run_test(self):\n             self.start_node(0, [m, \"-limitancestorcount=\"+str(chainlimit)])\n             self.start_node(1, [m, \"-limitancestorcount=\"+str(chainlimit)])\n             self.start_node(2, [m, \"-limitancestorcount=\"+str(chainlimit)])\n-            while m == '-reindex' and [block_count] * 3 != [self.nodes[i].getblockcount() for i in range(3)]:\n+            if m == '-reindex':\n                 # reindex will leave rpc warm up \"early\"; Wait for it to finish\n-                time.sleep(0.1)\n+                wait_until(lambda: [block_count] * 3 == [self.nodes[i].getblockcount() for i in range(3)])\n             assert_equal(balance_nodes, [self.nodes[i].getbalance() for i in range(3)])\n \n         # Exercise listsinceblock with the last two blocks"
      }
    ]
  },
  {
    "sha": "4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmRiMGNlNTE3MmI1MTFjMTQyNmY1YWU4MzljNmI2NjcwNmQ4YjYy",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-27T21:18:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "[tests] Fix intermittent rpc_net.py failure.\n\nrpc_net.py would intermittently fail on Travis, probably\ndue to assuming that two consecutive RPC calls were atomic.\nFix this by only testing that amounts are bounded above and\nbelow rather than equal.\n\nGithub-Pull: #12804\nRebased-From: 5a67c0524e5dc98d0e387f189545bc99863916d4",
      "tree": {
        "sha": "78d8b31d1ea1fbf5b24e82ec86085e5a516924ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/78d8b31d1ea1fbf5b24e82ec86085e5a516924ed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bdb0ce5172b511c1426f5ae839c6b66706d8b62/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e98f96e42357ac24322a96f0864b6bfd5e55ffe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e98f96e42357ac24322a96f0864b6bfd5e55ffe"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 21,
      "deletions": 13
    },
    "files": [
      {
        "sha": "72b5f4748feab65319d16f502b1ea60897239961",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 21,
        "deletions": 13,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bdb0ce5172b511c1426f5ae839c6b66706d8b62/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bdb0ce5172b511c1426f5ae839c6b66706d8b62/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
        "patch": "@@ -10,6 +10,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_greater_than_or_equal,\n     assert_raises_rpc_error,\n     connect_nodes_bi,\n     p2p_port,\n@@ -33,26 +34,34 @@ def _test_connection_count(self):\n         assert_equal(self.nodes[0].getconnectioncount(), 2)\n \n     def _test_getnettotals(self):\n-        # check that getnettotals totalbytesrecv and totalbytessent\n-        # are consistent with getpeerinfo\n+        # getnettotals totalbytesrecv and totalbytessent should be\n+        # consistent with getpeerinfo. Since the RPC calls are not atomic,\n+        # and messages might have been recvd or sent between RPC calls, call\n+        # getnettotals before and after and verify that the returned values\n+        # from getpeerinfo are bounded by those values.\n+        net_totals_before = self.nodes[0].getnettotals()\n         peer_info = self.nodes[0].getpeerinfo()\n+        net_totals_after = self.nodes[0].getnettotals()\n         assert_equal(len(peer_info), 2)\n-        net_totals = self.nodes[0].getnettotals()\n-        assert_equal(sum([peer['bytesrecv'] for peer in peer_info]),\n-                     net_totals['totalbytesrecv'])\n-        assert_equal(sum([peer['bytessent'] for peer in peer_info]),\n-                     net_totals['totalbytessent'])\n+        peers_recv = sum([peer['bytesrecv'] for peer in peer_info])\n+        peers_sent = sum([peer['bytessent'] for peer in peer_info])\n+\n+        assert_greater_than_or_equal(peers_recv, net_totals_before['totalbytesrecv'])\n+        assert_greater_than_or_equal(net_totals_after['totalbytesrecv'], peers_recv)\n+        assert_greater_than_or_equal(peers_sent, net_totals_before['totalbytessent'])\n+        assert_greater_than_or_equal(net_totals_after['totalbytessent'], peers_sent)\n+\n         # test getnettotals and getpeerinfo by doing a ping\n         # the bytes sent/received should change\n         # note ping and pong are 32 bytes each\n         self.nodes[0].ping()\n-        wait_until(lambda: (net_totals['totalbytessent'] + 32*2) == self.nodes[0].getnettotals()['totalbytessent'], timeout=1)\n-        wait_until(lambda: (net_totals['totalbytesrecv'] + 32*2) == self.nodes[0].getnettotals()['totalbytesrecv'], timeout=1)\n+        wait_until(lambda: (self.nodes[0].getnettotals()['totalbytessent'] >= net_totals_after['totalbytessent'] + 32 * 2), timeout=1)\n+        wait_until(lambda: (self.nodes[0].getnettotals()['totalbytesrecv'] >= net_totals_after['totalbytesrecv'] + 32 * 2), timeout=1)\n \n         peer_info_after_ping = self.nodes[0].getpeerinfo()\n         for before, after in zip(peer_info, peer_info_after_ping):\n-            assert_equal(before['bytesrecv_per_msg']['pong'] + 32, after['bytesrecv_per_msg']['pong'])\n-            assert_equal(before['bytessent_per_msg']['ping'] + 32, after['bytessent_per_msg']['ping'])\n+            assert_greater_than_or_equal(after['bytesrecv_per_msg']['pong'], before['bytesrecv_per_msg']['pong'] + 32)\n+            assert_greater_than_or_equal(after['bytessent_per_msg']['ping'], before['bytessent_per_msg']['ping'] + 32)\n \n     def _test_getnetworkinginfo(self):\n         assert_equal(self.nodes[0].getnetworkinfo()['networkactive'], True)\n@@ -78,8 +87,7 @@ def _test_getaddednodeinfo(self):\n         assert_equal(len(added_nodes), 1)\n         assert_equal(added_nodes[0]['addednode'], ip_port)\n         # check that a non-existent node returns an error\n-        assert_raises_rpc_error(-24, \"Node has not been added\",\n-                              self.nodes[0].getaddednodeinfo, '1.1.1.1')\n+        assert_raises_rpc_error(-24, \"Node has not been added\", self.nodes[0].getaddednodeinfo, '1.1.1.1')\n \n     def _test_getpeerinfo(self):\n         peer_info = [x.getpeerinfo() for x in self.nodes]"
      }
    ]
  },
  {
    "sha": "df38b130d957afbeda8be34a649f6e406f4c79b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjM4YjEzMGQ5NTdhZmJlZGE4YmUzNGE2NDlmNmU0MDZmNGM3OWIz",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2018-03-30T15:36:38Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "[tests] Test starting bitcoind with -h and -version\n\nGithub-Pull: #12843\nRebased-From: 63048ec73d790ecbcfe3186f2520dac4460f56e3",
      "tree": {
        "sha": "a57dccbc47cde460c37129248928bbada87a37e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a57dccbc47cde460c37129248928bbada87a37e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df38b130d957afbeda8be34a649f6e406f4c79b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df38b130d957afbeda8be34a649f6e406f4c79b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df38b130d957afbeda8be34a649f6e406f4c79b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df38b130d957afbeda8be34a649f6e406f4c79b3/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bdb0ce5172b511c1426f5ae839c6b66706d8b62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bdb0ce5172b511c1426f5ae839c6b66706d8b62"
      }
    ],
    "stats": {
      "total": 43,
      "additions": 43,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1e62d7a4092af012d2940ca10c61b4d7a973f396",
        "filename": "test/functional/feature_help.py",
        "status": "added",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df38b130d957afbeda8be34a649f6e406f4c79b3/test/functional/feature_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df38b130d957afbeda8be34a649f6e406f4c79b3/test/functional/feature_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_help.py?ref=df38b130d957afbeda8be34a649f6e406f4c79b3",
        "patch": "@@ -0,0 +1,42 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Verify that starting bitcoin with -h works as expected.\"\"\"\n+import subprocess\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+class HelpTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.add_nodes(self.num_nodes)\n+        # Don't start the node\n+\n+    def run_test(self):\n+        self.log.info(\"Start bitcoin with -h for help text\")\n+        self.nodes[0].start(extra_args=['-h'], stderr=subprocess.PIPE, stdout=subprocess.PIPE)\n+        # Node should exit immediately and output help to stdout.\n+        ret_code = self.nodes[0].process.wait(timeout=1)\n+        assert_equal(ret_code, 0)\n+        output = self.nodes[0].process.stdout.read()\n+        assert b'Options' in output\n+        self.log.info(\"Help text received: {} (...)\".format(output[0:60]))\n+        self.nodes[0].running = False\n+\n+        self.log.info(\"Start bitcoin with -version for version information\")\n+        self.nodes[0].start(extra_args=['-version'], stderr=subprocess.PIPE, stdout=subprocess.PIPE)\n+        # Node should exit immediately and output version to stdout.\n+        ret_code = self.nodes[0].process.wait(timeout=1)\n+        assert_equal(ret_code, 0)\n+        output = self.nodes[0].process.stdout.read()\n+        assert b'version' in output\n+        self.log.info(\"Version text received: {} (...)\".format(output[0:60]))\n+        self.nodes[0].running = False\n+\n+if __name__ == '__main__':\n+    HelpTest().main()"
      },
      {
        "sha": "fbd155438e34ca1821055ac667d36ce314c11c7b",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df38b130d957afbeda8be34a649f6e406f4c79b3/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df38b130d957afbeda8be34a649f6e406f4c79b3/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=df38b130d957afbeda8be34a649f6e406f4c79b3",
        "patch": "@@ -133,6 +133,7 @@\n     'feature_logging.py',\n     'p2p_node_network_limited.py',\n     'feature_config_args.py',\n+    'feature_help.py',\n     # Don't append tests at the end to avoid merge conflicts\n     # Put them in a random line within the section that fits their approximate run-time\n ]"
      }
    ]
  },
  {
    "sha": "6c26df06adc55ef7c27891a52a8feccec58b4aea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YzI2ZGYwNmFkYzU1ZWY3YzI3ODkxYTUyYThmZWNjZWM1OGI0YWVh",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-06T14:53:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "[qa] Ensure bitcoind processes are cleaned up when tests end\n\nGithub-Pull: #12904\nRebased-From: e36a0c08529bccc695ec71a7ec1df89367cc1628",
      "tree": {
        "sha": "5208a81a56ef5fb5cde8ed495591255a5929775f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5208a81a56ef5fb5cde8ed495591255a5929775f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6c26df06adc55ef7c27891a52a8feccec58b4aea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c26df06adc55ef7c27891a52a8feccec58b4aea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6c26df06adc55ef7c27891a52a8feccec58b4aea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c26df06adc55ef7c27891a52a8feccec58b4aea/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df38b130d957afbeda8be34a649f6e406f4c79b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df38b130d957afbeda8be34a649f6e406f4c79b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df38b130d957afbeda8be34a649f6e406f4c79b3"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 17,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fd4a72f628fd0b7e9cbe0a7b43636efd73d815cc",
        "filename": "test/functional/feature_help.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/feature_help.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/feature_help.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_help.py?ref=6c26df06adc55ef7c27891a52a8feccec58b4aea",
        "patch": "@@ -36,7 +36,11 @@ def run_test(self):\n         output = self.nodes[0].process.stdout.read()\n         assert b'version' in output\n         self.log.info(\"Version text received: {} (...)\".format(output[0:60]))\n+        # Clean up TestNode state\n         self.nodes[0].running = False\n+        self.nodes[0].process = None\n+        self.nodes[0].rpc_connected = False\n+        self.nodes[0].rpc = None\n \n if __name__ == '__main__':\n     HelpTest().main()"
      },
      {
        "sha": "9dc2e5a08e7b7773322e1c5abe8a61c684b24a63",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=6c26df06adc55ef7c27891a52a8feccec58b4aea",
        "patch": "@@ -145,6 +145,8 @@ def main(self):\n             if self.nodes:\n                 self.stop_nodes()\n         else:\n+            for node in self.nodes:\n+                node.cleanup_on_exit = False\n             self.log.info(\"Note: bitcoinds were not stopped and may still be running\")\n \n         if not self.options.nocleanup and not self.options.noshutdown and success != TestStatus.FAILED:"
      },
      {
        "sha": "19db11d8a3c6c81bc7ac4edb309bd8fa24557f35",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6c26df06adc55ef7c27891a52a8feccec58b4aea/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=6c26df06adc55ef7c27891a52a8feccec58b4aea",
        "patch": "@@ -70,9 +70,20 @@ def __init__(self, i, dirname, extra_args, rpchost, timewait, binary, stderr, mo\n         self.rpc = None\n         self.url = None\n         self.log = logging.getLogger('TestFramework.node%d' % i)\n+        self.cleanup_on_exit = True # Whether to kill the node when this object goes away\n \n         self.p2ps = []\n \n+    def __del__(self):\n+        # Ensure that we don't leave any bitcoind processes lying around after\n+        # the test ends\n+        if self.process and self.cleanup_on_exit:\n+            # Should only happen on test failure\n+            # Avoid using logger, as that may have already been shutdown when\n+            # this destructor is called.\n+            print(\"Cleaning up leftover process\")\n+            self.process.kill()\n+\n     def __getattr__(self, name):\n         \"\"\"Dispatches any unrecognised messages to the RPC connection or a CLI instance.\"\"\"\n         if self.use_cli:"
      }
    ]
  },
  {
    "sha": "0a76ed232a6c448a8666234a2c190db37e3498e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTc2ZWQyMzJhNmM0NDhhODY2NjIzNGEyYzE5MGRiMzdlMzQ5OGU3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-03-07T18:49:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "qa: Cache only chain and wallet for regtest datadir\n\nGithub-Pull: #12638\nRebased-From: fa2310572f4cfcd3322409ce7e37dde155fc4bc9",
      "tree": {
        "sha": "25239b4712b8cb6027f76d90867cbdc295144e88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25239b4712b8cb6027f76d90867cbdc295144e88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a76ed232a6c448a8666234a2c190db37e3498e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a76ed232a6c448a8666234a2c190db37e3498e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a76ed232a6c448a8666234a2c190db37e3498e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a76ed232a6c448a8666234a2c190db37e3498e7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6c26df06adc55ef7c27891a52a8feccec58b4aea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6c26df06adc55ef7c27891a52a8feccec58b4aea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6c26df06adc55ef7c27891a52a8feccec58b4aea"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "59ec5117e507417321dca2c2f1deb13d4ddc1d6b",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 13,
        "deletions": 10,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a76ed232a6c448a8666234a2c190db37e3498e7/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a76ed232a6c448a8666234a2c190db37e3498e7/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=0a76ed232a6c448a8666234a2c190db37e3498e7",
        "patch": "@@ -24,8 +24,8 @@\n     check_json_precision,\n     connect_nodes_bi,\n     disconnect_nodes,\n+    get_datadir_path,\n     initialize_datadir,\n-    log_filename,\n     p2p_port,\n     set_node_times,\n     sync_blocks,\n@@ -374,7 +374,7 @@ def _initialize_chain(self):\n         assert self.num_nodes <= MAX_NODES\n         create_cache = False\n         for i in range(MAX_NODES):\n-            if not os.path.isdir(os.path.join(self.options.cachedir, 'node' + str(i))):\n+            if not os.path.isdir(get_datadir_path(self.options.cachedir, i)):\n                 create_cache = True\n                 break\n \n@@ -383,8 +383,8 @@ def _initialize_chain(self):\n \n             # find and delete old cache directories if any exist\n             for i in range(MAX_NODES):\n-                if os.path.isdir(os.path.join(self.options.cachedir, \"node\" + str(i))):\n-                    shutil.rmtree(os.path.join(self.options.cachedir, \"node\" + str(i)))\n+                if os.path.isdir(get_datadir_path(self.options.cachedir, i)):\n+                    shutil.rmtree(get_datadir_path(self.options.cachedir, i))\n \n             # Create cache directories, run bitcoinds:\n             for i in range(MAX_NODES):\n@@ -422,15 +422,18 @@ def _initialize_chain(self):\n             self.stop_nodes()\n             self.nodes = []\n             self.disable_mocktime()\n+\n+            def cache_path(n, *paths):\n+                return os.path.join(get_datadir_path(self.options.cachedir, n), \"regtest\", *paths)\n+\n             for i in range(MAX_NODES):\n-                os.remove(log_filename(self.options.cachedir, i, \"debug.log\"))\n-                os.remove(log_filename(self.options.cachedir, i, \"wallets/db.log\"))\n-                os.remove(log_filename(self.options.cachedir, i, \"peers.dat\"))\n-                os.remove(log_filename(self.options.cachedir, i, \"fee_estimates.dat\"))\n+                for entry in os.listdir(cache_path(i)):\n+                    if entry not in ['wallets', 'chainstate', 'blocks']:\n+                        os.remove(cache_path(i, entry))\n \n         for i in range(self.num_nodes):\n-            from_dir = os.path.join(self.options.cachedir, \"node\" + str(i))\n-            to_dir = os.path.join(self.options.tmpdir, \"node\" + str(i))\n+            from_dir = get_datadir_path(self.options.cachedir, i)\n+            to_dir = get_datadir_path(self.options.tmpdir, i)\n             shutil.copytree(from_dir, to_dir)\n             initialize_datadir(self.options.tmpdir, i)  # Overwrite port/rpcport in bitcoin.conf\n "
      },
      {
        "sha": "538ae7691b582ea68c9bf03cb315030524ff9ba3",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a76ed232a6c448a8666234a2c190db37e3498e7/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a76ed232a6c448a8666234a2c190db37e3498e7/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=0a76ed232a6c448a8666234a2c190db37e3498e7",
        "patch": "@@ -319,9 +319,6 @@ def get_auth_cookie(datadir):\n         raise ValueError(\"No RPC credentials\")\n     return user, password\n \n-def log_filename(dirname, n_node, logname):\n-    return os.path.join(dirname, \"node\" + str(n_node), \"regtest\", logname)\n-\n def get_bip9_status(node, key):\n     info = node.getblockchaininfo()\n     return info['bip9_softforks'][key]"
      }
    ]
  },
  {
    "sha": "7460945e0b663585a7af3cde6c8675cbe21b4111",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDYwOTQ1ZTBiNjYzNTg1YTdhZjNjZGU2Yzg2NzVjYmUyMWI0MTEx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2018-04-09T18:07:47Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "[qa] Delete cookie file before starting node\n\nIf a cookie file exists in a datadir prior to node startup, it must have\nbeen leftover from a prior unclean shutdown. As bitcoind will overwrite\nit anyway, delete it before starting up to prevent the test framework\nfrom inadvertently trying to connect using stale credentials.\n\nGithub-Pull: #12902\nRebased-From: 75d0e4c5444249f0cf81ed0494e2c2717170b695",
      "tree": {
        "sha": "3a4f094714d9ed74ad9cc0793ea841a9d3f25391",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a4f094714d9ed74ad9cc0793ea841a9d3f25391"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7460945e0b663585a7af3cde6c8675cbe21b4111",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7460945e0b663585a7af3cde6c8675cbe21b4111",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7460945e0b663585a7af3cde6c8675cbe21b4111",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7460945e0b663585a7af3cde6c8675cbe21b4111/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0a76ed232a6c448a8666234a2c190db37e3498e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a76ed232a6c448a8666234a2c190db37e3498e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0a76ed232a6c448a8666234a2c190db37e3498e7"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f6e48712994aaa6e06291f20d91bb79443121456",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7460945e0b663585a7af3cde6c8675cbe21b4111/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7460945e0b663585a7af3cde6c8675cbe21b4111/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=7460945e0b663585a7af3cde6c8675cbe21b4111",
        "patch": "@@ -17,6 +17,7 @@\n from .authproxy import JSONRPCException\n from .util import (\n     assert_equal,\n+    delete_cookie_file,\n     get_rpc_proxy,\n     rpc_url,\n     wait_until,\n@@ -98,6 +99,10 @@ def start(self, extra_args=None, stderr=None, *args, **kwargs):\n             extra_args = self.extra_args\n         if stderr is None:\n             stderr = self.stderr\n+        # Delete any existing cookie file -- if such a file exists (eg due to\n+        # unclean shutdown), it will get overwritten anyway by bitcoind, and\n+        # potentially interfere with our attempt to authenticate\n+        delete_cookie_file(self.datadir)\n         self.process = subprocess.Popen(self.args + extra_args, stderr=stderr, *args, **kwargs)\n         self.running = True\n         self.log.debug(\"bitcoind started, waiting for RPC to come up\")"
      },
      {
        "sha": "ead1f844f75235924bdb0c864a3a5aed9fba2861",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7460945e0b663585a7af3cde6c8675cbe21b4111/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7460945e0b663585a7af3cde6c8675cbe21b4111/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=7460945e0b663585a7af3cde6c8675cbe21b4111",
        "patch": "@@ -319,6 +319,12 @@ def get_auth_cookie(datadir):\n         raise ValueError(\"No RPC credentials\")\n     return user, password\n \n+# If a cookie file exists in the given datadir, delete it.\n+def delete_cookie_file(datadir):\n+    if os.path.isfile(os.path.join(datadir, \"regtest\", \".cookie\")):\n+        logger.debug(\"Deleting leftover cookie file\")\n+        os.remove(os.path.join(datadir, \"regtest\", \".cookie\"))\n+\n def get_bip9_status(node, key):\n     info = node.getblockchaininfo()\n     return info['bip9_softforks'][key]"
      }
    ]
  },
  {
    "sha": "41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWMyOWY2ZDFkZjBmNzhjZmViMGI2ODhhMGExNzUwYzhiMmU1YzAz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-02-18T00:27:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-20T22:38:41Z"
      },
      "message": "qa: Fix python TypeError in script.py\n\nGithub-Pull: #12475\nRebased-From: fa41d68a2e3f2148c3539a11b61ff835e3141c0d",
      "tree": {
        "sha": "df85fc09e7c6d93fdbf45c91020eea263c2f0be7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df85fc09e7c6d93fdbf45c91020eea263c2f0be7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7460945e0b663585a7af3cde6c8675cbe21b4111",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7460945e0b663585a7af3cde6c8675cbe21b4111",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7460945e0b663585a7af3cde6c8675cbe21b4111"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6fe0b445da67c1c61425ca49f8a850b0146c3189",
        "filename": "test/functional/test_framework/script.py",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03/test/functional/test_framework/script.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03/test/functional/test_framework/script.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/script.py?ref=41c29f6d1df0f78cfeb0b688a0a1750c8b2e5c03",
        "patch": "@@ -526,11 +526,9 @@ def __iter__(self):\n                     yield CScriptOp(opcode)\n \n     def __repr__(self):\n-        # For Python3 compatibility add b before strings so testcases don't\n-        # need to change\n         def _repr(o):\n             if isinstance(o, bytes):\n-                return b\"x('%s')\" % hexlify(o).decode('ascii')\n+                return \"x('%s')\" % hexlify(o).decode('ascii')\n             else:\n                 return repr(o)\n "
      }
    ]
  }
]