gmaxwell,2011-07-18T07:01:59Z,This needs RPC / CLI support.\n\nOtherwise it's it's a nifty feature.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-1593237,1593237,
Benares,2011-08-03T19:17:25Z,+1 for CLI support. Otherwise a must-have feature for me.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-1720839,1720839,
ghost,2011-08-10T17:16:13Z,"CLI support done!\n\nbitcoin listaddressgroupings\nbitcoin sendtoaddress &lt;bitcoinaddress&gt;[:&lt;sendfromaddress1&gt;[,&lt;sendfromaddress2&gt;[,...]]] &lt;amount&gt; [comment] [comment-to]\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-1774577,1774577,
zellfaze-zz,2011-08-16T18:37:32Z,+1 I think this is a great change.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-1819018,1819018,
ripper234,2011-09-02T17:03:40Z,+1\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-1980957,1980957,
alexwaters,2011-09-30T08:05:20Z,"The pull has become unmergeable (without conflicts), and will be closed in 15 days from this message if action is not taken.\n\nTo prevent closure, kindly rebase the pull to merge cleanly with the current codebase. If a time extension is needed, please respond to this comment or contact QA@BitcoinTesting.org.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-2247120,2247120,
ghost,2011-10-09T05:19:51Z,fixed\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-2335342,2335342,
alexwaters,2011-10-20T06:01:42Z,"I'll ACK immediately if this is rebased with QT, and holds up to unit test / code read-through (sorry).\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-2465111,2465111,
ghost,2011-11-07T05:06:06Z,finally got around to repatching this onto bitcoin-qt... probably still needs some code cleanup... will look into tests next\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-2650112,2650112,
alexgenaud,2011-12-16T02:04:13Z,+1 Please mainline this killer feature!\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3172331,3172331,
paraipan,2011-12-16T03:14:13Z,"+1 advanced features, geek only. This patch with priv key import feature could make a good team :)\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3172746,3172746,
finway-china,2011-12-16T23:55:25Z,I say it'll be good.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3186306,3186306,
yhaenggi,2011-12-17T11:42:44Z,+1 \n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3189002,3189002,
kwukduck,2011-12-18T00:35:48Z,+1 key feature in managing anonymity.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3192475,3192475,
WyseNynja,2011-12-18T01:45:09Z,+1  I'm looking forward to this and being able to sweep keys\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3192705,3192705,
gavinandresen,2011-12-18T20:59:42Z,"coderr, can you write up a test plan or recruit somebody to write a test plan?  What are the corner cases that might break? Does this change the way fees work at all-- if I try to send 0.5 BTC from an address that has exactly 0.5 BTC but it's in a brand-new transaction (and so trigger the pay-a-fee code), what happens?\n\nI'll let laanjw approve/disapprove the GUI changes.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3196900,3196900,
ghost,2011-12-19T00:42:22Z,"@gavinandresen\nIs this the kind of test plan you were looking for? https://gist.github.com/9ec080b2bab70372b60e\n\nWhat the patch does is basically only allow SelectCoinsMinConf() to ""see"" the addresses you have selected to send from.  So in the case you mention it will inform the user the transaction has failed.  Same thing for any case where the total amount required is more than the sum of the",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3198060,3198060,
simonk83,2011-12-19T06:10:45Z,+1\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3199693,3199693,
laanwj,2011-12-20T03:42:19Z,"I'll test this soon, only just heard this was rebased to Qt.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3214027,3214027,
TheBlueMatt,2011-12-20T03:47:58Z,"This is not the place to be +1'ing, if you want to show public support for a feature, please make a forum thread where everyone can +1.  If you have some useful comment on the bug, ie ""Ive compiled this/been running this and spent more than 10 minutes testing it and it behaves as expected"", say it, otherwise keep it to yourself, thanks.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3214053,3214053,
paraipan,2011-12-20T12:20:13Z,"any place is a good place Matt, please stop preaching ppl, this feature had a forgotten thread on the forum and didn't got too much support until ppl started supporting it on git. Try to look at the good side of things ;)\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3218098,3218098,
TheBlueMatt,2011-12-20T17:00:44Z,"No, not at all.  Have you seen the forums? They are so full of crazy people and stupid comments that you can't get any work done.  If its such a good feature, post your +1s on the form thread and it will be alive again.  Getting people to post +1s on this thread is a waste of time and takes away from the conversation that could be happening about the actual code in question.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3221664,3221664,
TheBlueMatt,2011-12-20T17:01:37Z,"~~Anyway, I was gonna try to test this, but when starting with a .bitcoin that just contains blk\* files, all I get is~~\n~~EXCEPTION: 11DbException~~\n~~Db::exists: DB_PAGE_NOTFOUND: Requested page not found~~\nIgnore this, my blockchain was corrupted.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3221680,3221680,
TheBlueMatt,2011-12-20T17:08:08Z,"In general comments: I really dont think this belongs in mainline.  Its a cool feature for those who wish to make their bitcoin usage anonymous, but by itself it does not even get close to providing anonymity.  It also pushes the wrong message about bitcoin: it was designed to be, and is anonymous; and that it is great for use in illegal activity.  That message should be highly avoided as it is hi",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3221776,3221776,
laanwj,2011-12-20T18:23:33Z,"On the other hand, it is clearly a very popular and much-requested feature.\n\nAnd please don't promote the stigma that people want anonymity only because they want to do illegal things. It's clear that in today's world there can be many reasons you'd want to be anonymous, for example because of oppressive governments (China, Middle East, etc).\n\nEdit: But I agree it might be too _complicated_ fo",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3222886,3222886,
TheBlueMatt,2011-12-20T18:42:06Z,"No, I know that there are many legitimate uses for anonymity that arent illegal, but that is a stigma that already exists when people view bitcoin, and pushing its anonymous properties (when its actually harder than most people realize to be anonymous with bitcoin) just furthers that stigma.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3223148,3223148,
laanwj,2011-12-20T18:58:50Z,"I'm not saying we have to advertise ""anonymity"" explicitly any more than we do now. It will remain an advanced feature, manually setting inputs/outputs is not for the faint-hearted.\n\nHowever, it is a valid use-case. And if people want to do advanced things with addresses and address linkages, and someone is contributing code for it, why not incorporate it?\n\nAlso look at this thread. The guy fi",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3223388,3223388,
alexgenaud,2011-12-21T17:25:50Z,"For me, it's not about the anonymity, but control and transparency. As it is (prior to this pull) we can only see one address from every transaction. One needs to use blockexplorer.com to have any clue what is actually going on. Further more (prior to this pull), one needs to have multiple wallets to have any separation of 'accounts' which is more error prone and confusing. I think hiding advanced",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3236662,3236662,
ghost,2011-12-21T17:45:16Z,"Ok, so I'll be cleaning up the patch's code and removing the word anonymity from it completely.  I'll use Gavin's suggested ""coin control"" wording unless someone else comes up with a better alternative.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3236971,3236971,
kwukduck,2011-12-21T19:29:55Z,I think it's a very good idea to rename it. Gives us the functionality and prevents the 'bad' publicity that 'anonymity' gives according to some people :)\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3238335,3238335,
ghost,2011-12-24T21:35:43Z,"ok guys, no more anonymity, just coin control\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269145,3269145,
luke-jr,2011-12-25T01:02:21Z,This definitely should have lower visibility (tab-wise) than sendmessage IMO...\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269600,3269600,
ghost,2011-12-25T01:09:08Z,"sorry, I didn't follow that, sendmessage? tab-wise?\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269612,3269612,
luke-jr,2011-12-25T01:15:45Z,"Sorry, _sign_message. In pull #582, some people objected to having more than just the basics as tabs.\n\nThis also needs rebasing. Even after merging conflicts, it doesn't compile.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269623,3269623,
ghost,2011-12-25T01:18:44Z,"Ah, yea I don't really care where the tab goes.\n\nWhich doesn't compile?  This pull request or #582?\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269629,3269629,
luke-jr,2011-12-25T01:25:50Z,This pull request.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269643,3269643,
ghost,2011-12-25T01:27:39Z,"Ah, you must mean against master (so far I've only been keeping it rebased against the most recent release).  After gavin or whoever has OKd this to be merged I'll rebase it against master.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3269645,3269645,
TheBlueMatt,2011-12-31T00:27:01Z,"Again with the+ 1s, seriously?\nAnyway, has this been tested to properly mark send to ip txes as linked with their punishment equivalents, also what about op_eval?\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3318670,3318670,
midnightmagic,2012-01-01T23:25:13Z,"It's getting +1s because a thread is requesting them. Regardless of its current (stylistically correct or not) form, please let's not bikeshed this into oblivion. Each of us has a style we prefer. I think everyone is nuts for not using 1TBS, for example, but this is an important feature that allows people greater control (for those who want it.) So.. +1 for potential motility, especially in light ",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326460,3326460,
TheBlueMatt,2012-01-01T23:45:47Z,"@midnightmagic every pull request to bitcoin is asked to not break anything or not interact negatively with existing features.  Every other pull request (including ones which many would argue are much more important than this one) is subject to the same requirements.  This is a cool feature for people who want to be anonymous or just have more control over their transactions, but if it breaks or a",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326515,3326515,
midnightmagic,2012-01-01T23:55:53Z,"If it breaks something, fine, or if it requires testing beyond what it's been tested with, fine. I'm writing both to explain why you keep getting +1 and to suggest we ignore stylistic complaints about command form. github should have an upvote function. :)\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326553,3326553,
TheBlueMatt,2012-01-02T00:03:48Z,"@midnightmagic if any bitcoin pull request has style choices which the final pull-er doesn't agree with it wont get pulled.  This pull is not special, and it should adapt to match the stylistic choices of the pull-ers.  If you don't agree with those choices you can argue them, but if the developers dont agree, thats what forks are for.\nAlso, people discussing the stylistic choices is healthy, thi",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326591,3326591,
midnightmagic,2012-01-02T01:01:38Z,"What does it matter if the addresses are serially encoded in JSON-like structs or separated by commas..? Bitcoin took a huge beating at 28c3, and this would allow the biggest pseudo-complaint to be addressed. Therefore this patch has become special. Either way, I intended to put down support for this: this is my +1, minus the lack of ""why."" coderrr your work is VERY much appreciated, even if it do",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326792,3326792,
laanwj,2012-01-02T01:10:17Z,"People, if you want to speed up the process for this patch please try to be\nconstructive. Help coderr out with coding, testing, documenting and so on.\nPosting +1 (vote for someone else to do the work?) or arguing doesn't help.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326816,3326816,
ghost,2012-01-02T01:11:50Z,I'm currently working on op_eval support\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3326819,3326819,
torusJKL,2012-01-23T08:21:11Z,AFAIK OP_EVAL has been withdrawn.\nhttps://en.bitcoin.it/wiki/BIP_0012\n\nPlease do not spend time for it's support.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3610506,3610506,
luke-jr,2012-01-23T15:04:18Z,"Probably whatever the OP_EVAL support was before, applies equally to the newer P2SH BIPs.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-3615142,3615142,
laanwj,2012-02-18T11:06:14Z,"I've rebased this to the current master: https://github.com/laanwj/bitcoin/tree/2012_02_coincontrol\n\nRe: BIP16 support -- isn't this a moving target? It should certainly be able to cope with BIP16 transactions without crashing or doing weird stuff, but I'm not sure that it already needs full support yet. The rest of the GUI doesn't, either.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4033384,4033384,
dooglus,2012-03-19T06:17:39Z,I can't get this to merge cleanly to the current master branch.  Does it need rebasing again?\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4568319,4568319,
luke-jr,2012-03-19T06:22:08Z,Has for a while. Coderrr said maybe soon.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4568348,4568348,
ghost,2012-03-22T18:08:45Z,Rebased against 0.6.0rc4.  Seems to work fine with p2sh.  Doesn't do anything fancy yet like link the addresses of the keys used to redeem a p2sh tx.   Only operates on the p2sh address itself.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4644743,4644743,
dooglus,2012-03-22T20:08:50Z,"Nice.\n\nI think you missed this bit:\n\n```\nsrc/qt/optionsmodel.cpp:\n-    boolOptions << ""bDisplayAddresses"" << ""fMinimizeToTray"" << ""fMinimizeOnClose"" << ""fUseProxy"" << ""fUseUPnP"";\n+    boolOptions << ""bDisplayAddresses"" << ""bCoinControlFeatures"" << ""fMinimizeToTray"" << ""fMinimizeOnClose"" << ""fUseProxy"" << ""fUseUPnP"";\n```\n\nso that in future the value of bCoinControlFeatures will be preserv",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4647241,4647241,
dooglus,2012-03-22T23:10:35Z,"After further experimentation, it turns out that if I send coins from an address that has existing links in the coincontrol tab and explicitly send the change back to the same address, then the old linkage is lost.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4650441,4650441,
dooglus,2012-03-22T23:13:18Z,"I also found a different bug.  If you leave the ""Send From"" box empty in the ""Send coins"" tab and try to send coins, CWallet::setSendFromAddressRestriction(string addresses) is called with an empty string, boost:split makes a set of restrictions cointaining one element, the empty string, and then the this->sendFromAddressRestriction.empty() check in CWallet::SelectCoinsMinConf is false, and so no ",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4650470,4650470,
dooglus,2012-03-23T07:46:26Z,"> After further experimentation, it turns out that if I send coins from an address\n> that has existing links in the coincontrol tab and explicitly send the change\n> back to the same address, then the old linkage is lost.\n\nThis is because explicitly sending coins to an existing change address adds the change address to the address book, causing IsChange() to fail on the original output to the c",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4654861,4654861,
dooglus,2012-03-23T08:49:46Z,"When I click the 'coin control' tab, the GUI freezes for over 70 seconds while the groupings are calculated.  Most of the time is spent in the recursive ExpandGrouping() function which returns its results both by reference and by value.  Changing its type to void speeds things up so it only takes 2.5 seconds instead of 70 seconds.\n\nI'll commit all my changes to my repository tomorrow.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4655536,4655536,
ghost,2012-03-23T09:27:52Z,"hey, thanks for finding all these issues, I'll fix the optionmodel and blank sendfrom bugs.  The change issue is a little more complicated.\n\n""I sent a payment to myself from a single large output to lots of small new previously unused addresses""\n\nSomeone looking at the chain wouldn't be able to prove that the output addresses are controlled by the same person so it doesn't show them as linked.",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4655961,4655961,
ghost,2012-03-23T09:46:03Z,"got rid of the ExpandGroupings return too, thanks!\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4656185,4656185,
dooglus,2012-03-24T05:42:52Z,"I rewrote the code that makes the unique groupings so it runs a lot faster.  Now it takes about half a second on my wallet instead of 7 seconds and makes the code simpler to read too.  It's odd - after changing the return type of ExpandGroupings to be void, the time it took dropped from 72 to 2.5 seconds, but then the next day it went back up to 7 seconds.  I made a few new big transactions, but I",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4671792,4671792,
dooglus,2012-03-24T07:15:10Z,"https://github.com/dooglus/bitcoin/commits/coincontrol has 2 more commits:\n\n1) remove the blank line from the top of the coin control table\n2) order groups in order of total balance, so most valuable groups appear first\n\nI'd also like to reformat the whole patch to match the existing bitcoin code (4 space indents, etc). but that will mess up any merges you have planned.  Is now a good time?\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4672062,4672062,
luke-jr,2012-03-25T02:08:57Z,"This (tested without dooglus's changes) is exceedingly slow! Every time I select the Coin Control tab, I have to wait about 2 full minutes before it loads. :(\n\nOnce it does load, the blank rows between groups feels pretty hackish - how hard would it be to get a thick divider of some sort instead?\n\nWhat is ""Balance Minus Tx Fee""?\n\nFinally, I don't see any way to easily get addresses to the ""S",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4678819,4678819,
dooglus,2012-03-25T02:19:09Z,"@luke-jr\n\nMy changes make a huge difference to the speed.  It's almost instantaneous with them.\n\nI removed the top blank line which I thought looked really bad.  I don't know anything about Qt, but also don't like the blank lines.\n\n""Balance Minus Tx Fee"" is (balance-MIN_TX_FEE), and:\n    static const int64 MIN_TX_FEE = 50000;\nI'd rather not see that column.\n\nTo get addresses to the ""Send",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4678869,4678869,
luke-jr,2012-03-25T02:20:41Z,"Cool, I'll see if I can merge your changes on top of next-test\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4678874,4678874,
luke-jr,2012-03-25T03:04:47Z,"Dooglus's changes don't build for Win32:\n\n```\nsrc/wallet.cpp:18: error: using 'typename' outside of template\nsrc/wallet.cpp:19: error: using 'typename' outside of template\n```\n\nNo idea why it builds on Linux, that looks totally invalid :/\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679073,4679073,
tril0byte,2012-03-25T03:28:20Z,"Trying to build v0.5.3+coderrr on debian squeeze, I get this error. Checking the qlineedit.h indicates coderrr's patch would seem to require qt4.7 and squeeze has only 4.6.4.  I don't need this to be fixed, just tell me if I need to upgrade.\n\nIn file included from src/qt/sendcoinsdialog.cpp:2:\nbuild/ui_sendcoinsdialog.h: In member function ‘void Ui_SendCoinsDialog::retranslateUi(QDialog_)’:\nbu",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679171,4679171,
luke-jr,2012-03-25T03:31:07Z,Wrap setPlaceholderText uses in #if QT_VERSION >= 0x040700\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679187,4679187,
dooglus,2012-03-25T04:13:54Z,"> No idea why it builds on Linux, that looks totally invalid :/\n\nThat is odd.  It builds without warning in what claims to be ""gcc version 4.6.1 (Ubuntu/Linaro 4.6.1-9ubuntu3) "".  I've removed the two ""typename"" keywords that snuck in there so it should build for you now too.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679337,4679337,
luke-jr,2012-03-25T04:18:34Z,Removing the 'typename's seems to have fixed the problem.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679360,4679360,
dooglus,2012-03-25T04:52:39Z,"I copied that IsDisjoint() function from http://stackoverflow.com/a/1964252/1253362 which is under this license: http://creativecommons.org/licenses/by-sa/3.0/ - it requires attribution, so I added the link to a comment above the function.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679481,4679481,
luke-jr,2012-03-25T05:05:34Z,That license will be a problem to merging.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679538,4679538,
dooglus,2012-03-25T05:22:19Z,"Then I don't know how to proceed.  I could rewrite the function, but the way it's written seems to be pretty optimal to me, and I'd just rewrite it much like how it's already written.  Even if I wrote it slightly differently, wouldn't it be considered a derivative work, and so still subject to the same license?\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679589,4679589,
luke-jr,2012-03-25T05:47:17Z,"It could be. I didn't look at what the function actually does or how it works, so I (or anyone else) should be safe to rewrite it. Can you describe in English how the input(s) and output(s) are related?\n\nAlternatively, you might email the author and ask for a MIT license to contribute it to Bitcoin.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679679,4679679,
dooglus,2012-03-25T06:06:37Z,"I think I can rewrite the higher level function so it never needs to call IsDisjoint, and maybe make it more effecient in the process.\n\nThe problem with emailing the author of that answer is that he just improved on a previous author's answer, so I'd have to get agreement from at least 2 of them, maybe more.\n\nThe function does this:\n\nInput two references to sets of strings, return a bool.  T",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4679740,4679740,
dooglus,2012-03-25T07:22:33Z,"https://github.com/dooglus/bitcoin/commits/coincontrol is now safe to merge again, and faster still.\n\nThe formatting is still all wrong though, relative to the rest of the Bitcoin source.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4680021,4680021,
dooglus,2012-03-26T04:34:39Z,"https://github.com/dooglus/bitcoin/commits/coincontrol is now reformatted to match the other Bitcoin code - 4 space tabs, etc.\n",https://github.com/bitcoin/bitcoin/pull/415#issuecomment-4687794,4687794,
sipa,2012-04-08T17:11:04Z,I'd like to close this request in favor of #1017.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-5016819,5016819,
tril0byte,2012-04-08T17:29:17Z,yes 1017 (dooglus) coin control window opens quickly and also builds on Debian squeeze.\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-5016954,5016954,
ghost,2012-04-10T18:54:16Z,moved to #1017\n,https://github.com/bitcoin/bitcoin/pull/415#issuecomment-5053436,5053436,
gavinandresen,2011-12-20T19:35:27Z,"I really don't like the loose coupling here using a global variable to influence the behavior of SelectCoins... how hard would it be to pass that down through the call chain as an extra std::vector<CBitcoinAddress> argument to SelectCoins ?\n\nOR, probably better, make it a restriction that can be placed on the wallet (thanks to laanjw for suggesting in IRC)\n",https://github.com/bitcoin/bitcoin/pull/415#discussion_r306749,306749,src/wallet.cpp
,2011-12-20T22:25:05Z,"@gavinandresen \n\nIt was purposely written like this to be as minimally intrusive as possible for two reasons. First, I figured the less code I changed the less argument I'd get from devs about it.  Secondly, it'd be easier to continually re-merge as master changed.\n\nIf you guys believe this feature should be merged into mainline then I'll gladly rewrite it in a ""cleaner"" way.  But I'd rather n",https://github.com/bitcoin/bitcoin/pull/415#discussion_r307255,307255,src/wallet.cpp
gavinandresen,2011-12-21T01:15:41Z,"See IRC discussion from today here:\n  http://bitcoinstats.com/irc/bitcoin-dev/logs/2011/12/20/5#l2405995\n\nMy only concern is over-promising ""anonymity"", when actually staying anonymous is hard work.  But there is definitely a desire for this feature, so if it is cleaned up a little I think it should be pulled.\n",https://github.com/bitcoin/bitcoin/pull/415#discussion_r307680,307680,src/wallet.cpp
laanwj,2011-12-21T10:52:33Z,"@coderr  It is also a bit my fault, I've never really explained the design of Bitcoin-Qt. My idea is that the UI bits (dialogs, widgets, screens) are independent of a specific bitcoin implementation. The UI bits communicate with the models through method calls and Qt signals. The models communicate with the core in whatever way they need to; that includes changing globals if you really need to, th",https://github.com/bitcoin/bitcoin/pull/415#discussion_r308372,308372,src/wallet.cpp
luke-jr,2011-12-25T00:44:02Z,"I don't think the JSON-RPC server should be parsing strings like this... remember, this is for automation/services, not just some CLI tool.\n",https://github.com/bitcoin/bitcoin/pull/415#discussion_r314384,314384,src/bitcoinrpc.cpp
,2011-12-25T00:49:27Z,"@luke-jr \n\nThe motivation for this was to make the sendtoaddress RPC interface change as unobtrusive as possible.   What's your suggested alternative?\n- totally different/new RPC command?\n- put the send from addresses as new arguments at the end?\n- put the send from addresses somewhere else but not at the end, breaking backwards compatibility?\n",https://github.com/bitcoin/bitcoin/pull/415#discussion_r314385,314385,src/bitcoinrpc.cpp
luke-jr,2011-12-25T01:09:08Z,"Based on the existing JSON-RPC commands, it seems the historical way of doing this is to add a new JSON-RPC method for different parameters. Putting it at the end would be another option, and might be extensible to the other variants as well. Another possibility might be a rule that where there used to just be a string ""destination address"", there could also be an array [[""source"", ...], [""destina",https://github.com/bitcoin/bitcoin/pull/415#discussion_r314386,314386,src/bitcoinrpc.cpp
,2011-12-25T01:17:07Z,re select specific coins: If you read the original motivation for this patch it was to prevent linkages of addresses/private-keys.  Selecting individual coins doesn't matter for that.\n\nre the RPC command arguments: I'm not sold that it's worth doing what you suggested purely because of your aversion to bitcoind parsing strings.  The way it's done now is pretty minimally invasive and the other wa,https://github.com/bitcoin/bitcoin/pull/415#discussion_r314387,314387,src/bitcoinrpc.cpp
laanwj,2011-12-31T09:24:45Z,"I agree with @luke-jr in principle. In JSON-RPC, arrays are a first-class object. Even though this is easy for CLI usage, there is really no need to concatenate things into strings and parse it out later. Using multiple kinds of parsing/concatenation imposes extra work on the caller (and other implementations of the RPC protocol).\n\nIMO the optional ""overloading"" using an array instead of a strin",https://github.com/bitcoin/bitcoin/pull/415#discussion_r321421,321421,src/bitcoinrpc.cpp
