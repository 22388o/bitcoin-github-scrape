luke-jr,2014-03-16T20:30:58Z,"This doesn't change the actual behaviour of the pre-existing functions, correct? So, eg, unit test assumptions remain valid..\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-37769328,37769328,
sipa,2014-03-16T20:34:58Z,"A better summary of the changes:\n- before: standalone headers/tx checks, (orphan store), tree headers/tx checks, store block, connect\n- after: standalone headers checks, tree headers checks, store headers, standalone tx checks, (orphan store), tree tx checks, store block, connect\n\nIn a later pull request, the orphan storage will be removed entirely, as blocks can be stored with just headers va",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-37769604,37769604,
sipa,2014-03-17T19:06:41Z,"Please take your time, and ask for clarification as necessary.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-37856930,37856930,
sipa,2014-03-29T16:16:46Z,"There is a bug in this code, which prevents syncing. Closing until fixed.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-39000202,39000202,
sipa,2014-04-08T00:14:46Z,\o/ segfault\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-39799010,39799010,
sipa,2014-04-08T18:22:16Z,Bug fixed.\n\n@luke-jr I don't think any assumptions that are used in unit tests change. The only real change is that now CBlockIndex entries in the block tree may exist that do not have actual block data associated with them.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-39883370,39883370,
mikehearn,2014-04-10T15:08:41Z,"I did a review, comments ended up on the origin commit rather than here - oops.\n\nOverall looks good, just would appreciate some more comments and helper methods in a few places to make the logic easier to follow and reduce the chances of typos with all the bit twiddling.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40097047,40097047,
rdponticelli,2014-04-16T16:43:40Z,"There seems to be some bug on the connection logic in this pull. I got a node stuck after it got shutdown during syncing. After launching it again, all the remaining blocks got marked as orphans, and it never resumed syncing. Shutting down and launching again several times didn't help.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40622381,40622381,
sipa,2014-04-16T17:24:54Z,@rdponticelli With a recent version of this code (less than 8 days old?)\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40627044,40627044,
rdponticelli,2014-04-16T17:35:03Z,"@sipa Yes, last version. Culprit seems to be some kind of race condition with the low disk space code. Some logs:\n\n2014-04-16 14:18:49 UpdateTip: new best=0000000000000000937bdca5485b8a02da4cbfea74fe982903a2da1ba8537866  height=295933  log2_work=77.988128  tx=36873027  date=2014-04-15 07:18:51 progress=0.993805\n2014-04-16 14:18:49 ProcessBlock: ACCEPTED\n2014-04-16 14:18:49 **\* Error: Disk spa",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40628189,40628189,
rdponticelli,2014-04-16T18:18:40Z,Running the code in master in this state I got:\n\n2014-04-16 17:10:31 init message: Done loading\n2014-04-16 17:10:31 Initialization result: 1\n2014-04-16 17:10:41 Pre-allocating up to position 0x7000000 in blk00132.dat\n2014-04-16 17:10:47 ERROR: ReadBlockFromDisk : OpenBlockFile failed\n2014-04-16 17:10:47 **\* Failed to read block\n2014-04-16 17:10:51 ERROR: AcceptBlock() : AddToBlockIndex fai,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40633330,40633330,
sipa,2014-04-17T11:21:54Z,"@rdponticelli Thanks for testing!\n\nSo the problem was that if the block data failed to write, we ended up with a block header in the index, but no corresponding block data in the block file. At next startup, this would mean it would need to download it again, but the block download logic can't deal with the in-index-but-not-on-disk case yet, which will be added later.\n\nI've (hopefully) fixed i",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40704167,40704167,
rdponticelli,2014-04-17T19:19:42Z,Now I'm getting this on another node. It seems that it's breaking when it changes the block file:\n\n2014-04-17 19:02:56 ProcessBlock: ACCEPTED\n2014-04-17 19:03:07 UpdateTip: new best=0000000000000000551b394408e467f83cd5d6f36612f8e33643d188f0d4498f  height=293947  log2_work=77.722856  tx=36140885  date=2014-04-03 11:35:26 progress=0.931634\n2014-04-17 19:03:07 ProcessBlock: ACCEPTED\n2014-04-17 1,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40752143,40752143,
sipa,2014-04-17T19:49:07Z,"Just seeing orphans while syncing is perfectly expected (not intentional though, but it will require more to fix that).\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40755048,40755048,
sipa,2014-04-18T21:42:40Z,Rebased and addressed @mikehearn's comments.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-40847068,40847068,
sipa,2014-04-24T22:36:46Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-41341113,41341113,
BitcoinPullTester,2014-04-24T23:00:56Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/942b33a19d3aa96326acc044c1834c48beff777c for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-41342904,41342904,
mikehearn,2014-04-29T21:42:24Z,@gavinandresen How does this look to you?\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-41736093,41736093,
leofidus,2014-05-02T13:38:56Z,"Tested this on the Dogecoin blockchain. Both initial sync and keeping up with the blockchain worked as normal, both restarting the client and waking up from hibernation worked fine and I didn't spot anything unusual in the logs.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42032702,42032702,
rebroad,2014-05-09T00:09:55Z,"I'm currently testing this. It's still incredibly slow due to the peer selection for the block download. I really think it should take the speed of download into consideration for selecting a peer, and I still don't understand why it selects only one peer - why can't it select several? After all, most download tools these days choose to download from multiple sources to reduce the load on any one ",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42621306,42621306,
gmaxwell,2014-05-09T00:14:00Z,@rebroad This is an incremental reorganization. All that stuff you are talking about was implemented months ago in sipa's headers first branch but it was too risky a change to take at once and wasn't seeing adequate testing.  This pull (and others) are breaking up the steps to move to it incrementally in a way which is easier to verify.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42621532,42621532,
rebroad,2014-05-09T01:48:09Z,"@gmaxwell yes, I know. The stuff I am talking about hasn't been implemented yet. This is why I am mentioning it.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42626282,42626282,
gmaxwell,2014-05-09T02:00:54Z,> The stuff I am talking about hasn't been implemented yet.\n\nPulling from multiple peers and taking speed into account were both implemented in the headers first branch. (actually it does something which is usually better than take speed into account it tracks when peers are stalling the process and kicks out the straggler(s)).\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42626881,42626881,
laanwj,2014-05-09T05:46:27Z,"@rebroad That's just rude. Please keep discussion in issues about the goal of the issue. @sipa does not claim that this change solves the problems that you mention, so you should not be disappointed that they are not solved by it.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42635350,42635350,
sipa,2014-05-09T10:25:24Z,"@rebroad Selecting multiple peers to download from would just bring duplicate block downloads back, unless it happens in a coordinated way. No such coordination exists, because we don't know in advance which peers have which blocks - we just download what they tell us they have.\n\nNobody claims we can't download from multiple peers at once - that is one of the goals of headers-first synchronizati",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42652367,42652367,
mikehearn,2014-05-09T11:00:06Z,How do we decide when there's been enough testing and review? Seems like the path forward here isn't clear.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42654652,42654652,
laanwj,2014-05-09T11:31:36Z,@mikehearn What part is unclear? This is tagged '0.10' so will be merged after the branch-off of 0.9.2.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42656694,42656694,
mikehearn,2014-05-09T11:46:03Z,"This may be a discussion for the mailing list, but I'm not sure it's healthy to keep pull requests that are ""done"" queued up where they have to be constantly rebased, waiting to enter master, missing out on testing that people might do. If you want to have a branch for stabilisation, why not branch for 0.9.2 now and cherry pick fixes into it until you're confident it's ready?\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42657665,42657665,
laanwj,2014-05-09T12:48:00Z,I know that - the plan is to split off 0.9.2 this week.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42661928,42661928,
mikehearn,2014-05-09T12:59:22Z,Okie dokie.\n,https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42662782,42662782,
rebroad,2014-05-09T13:18:11Z,"@gmaxwell ah, so it's not in the master branch? Am I able to submit pull requests to the branch you mention? What is the purpose of this branch and will it as some point be merged into master?\n\nMy main reason for mentioning these concerns is that the current master as it is doesn't work well, and gets 300 or so orphan blocks piling up without catching up on the blockchain, often requiring a rest",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42664439,42664439,
sipa,2014-05-09T13:57:53Z,"@rebroad Gregory talking about my personal headers-first branch (#2964),\nwhich was never merged because of multiple reasons, and later abandoned.\nI've since (slowly) been working on several pull requests with pieces of\nthat functionality. This pull request is just some refactoring work towards\nthat.\n",https://github.com/bitcoin/bitcoin/pull/3884#issuecomment-42668599,42668599,
Diapolo,2014-04-11T12:42:37Z,Shouldn't these be constants perhaps in CChainParams?\n,https://github.com/bitcoin/bitcoin/pull/3884#discussion_r11529986,11529986,src/main.cpp
sipa,2014-04-11T13:12:17Z,"Agree, but let's do that in another PR.\n",https://github.com/bitcoin/bitcoin/pull/3884#discussion_r11531092,11531092,src/main.cpp
