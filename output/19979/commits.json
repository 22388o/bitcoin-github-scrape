[
  {
    "sha": "73f71e19965e07534eb47701f2b23c9ed59ef475",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2Y3MWUxOTk2NWUwNzUzNGViNDc3MDFmMmIyM2M5ZWQ1OWVmNDc1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T08:52:27Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T14:50:58Z"
      },
      "message": "refactor: Use explicit function type instead of template",
      "tree": {
        "sha": "c660c5a5933c4577d965adce2109003ce5ed40b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c660c5a5933c4577d965adce2109003ce5ed40b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73f71e19965e07534eb47701f2b23c9ed59ef475",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9mGtIACgkQQQEIES5+\nqB99dxAArtzlwBpniUnUrugsWakvfzi2I2NtiUfyJTLiQw2mbOjYWaLJBA3tb6iE\nme5vDoWE0sJ4YRGXmnbi7tGQIrv/c0l/AlZhHumrxBup1H91wukQhJCxb8SShNjr\nRmA2JZr/YXUUoTvjHhUWOjWOthfAhycc2KbQM6s8/AexXmTOmFummT3imUICQJ8T\nvSNskQirRw68qsTElZZG0wckkxnrppB0gnGAGxWervWMQN8Tms6Kl9yJPyug5mAL\nu685TVLegFD082OUz6cOio6MC6Eruy4IAkrltQvWvtbC0Z4YPlvMzqAWPezHgpee\nH1ahPgRoDgmiL9L6hgQdwMx5xUioQHjM+4sQzlvSnaBrLOiZazzZjJWAdGB/4eYD\nN41VWd5i6cyOEXpai31oSqw55y2RGE/Ew22EmlqfsDAIxqCG0G6boMsjYZ0cgQnX\nDYYpyneepbLVE1zOnuaE/UVnWwIHA2GRMCZxA/ETx5hg4Ps5Nw1GZIw+ZjBjBk8U\nTna0oXqvHOt6lTPyYCOq8iIW/MpvW458BVuMRpqUQWavrC6d30ubHAmkzMM9000U\naShsJqB2uPY27ccn1BWl8RqzZUdp9dCpyPOuiDeqR80zLTOHlxvL0cz8GQ2rOGNl\nkJdNlZvaMiPK+WkVxhopNBNe30TduiMv6ze5AkXPDJi2IbwnGRo=\n=wO2S\n-----END PGP SIGNATURE-----",
        "payload": "tree c660c5a5933c4577d965adce2109003ce5ed40b8\nparent c30f79d418e2e001f1f804a2370db47e5d9ea587\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600505547 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600527058 +0300\n\nrefactor: Use explicit function type instead of template\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73f71e19965e07534eb47701f2b23c9ed59ef475",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73f71e19965e07534eb47701f2b23c9ed59ef475",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73f71e19965e07534eb47701f2b23c9ed59ef475/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c30f79d418e2e001f1f804a2370db47e5d9ea587",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c30f79d418e2e001f1f804a2370db47e5d9ea587",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c30f79d418e2e001f1f804a2370db47e5d9ea587"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b0294d5b15376510e7707b02be8828294d14e427",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73f71e19965e07534eb47701f2b23c9ed59ef475/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73f71e19965e07534eb47701f2b23c9ed59ef475/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=73f71e19965e07534eb47701f2b23c9ed59ef475",
        "patch": "@@ -258,8 +258,8 @@ class CConnman\n \n     void PushMessage(CNode* pnode, CSerializedNetMsg&& msg);\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func)\n+    using NodeFn = std::function<void(CNode*)>;\n+    void ForEachNode(const NodeFn& func)\n     {\n         LOCK(cs_vNodes);\n         for (auto&& node : vNodes) {\n@@ -268,8 +268,7 @@ class CConnman\n         }\n     };\n \n-    template<typename Callable>\n-    void ForEachNode(Callable&& func) const\n+    void ForEachNode(const NodeFn& func) const\n     {\n         LOCK(cs_vNodes);\n         for (auto&& node : vNodes) {"
      }
    ]
  },
  {
    "sha": "ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjJhNDQyOTdmZDA3OTZiZjU3OTdhZTJhNDc3ZThlNTZkOWMzYzEy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T08:56:28Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T15:02:02Z"
      },
      "message": "Replace LockAssertion with a proper thread safety annotations",
      "tree": {
        "sha": "08a7348359eb441c63b5ba96e6965a06ca7c1b9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/08a7348359eb441c63b5ba96e6965a06ca7c1b9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9mHWoACgkQQQEIES5+\nqB8D4Q/+MpB+O+FTuKJl/ldfbu7bQVmAgfZYfmmtDfaBHq+UWWl1xNs2nZSfIC3h\n7Z46RPuTnotTxLL2Y7LUTXbxAcE7e0P7LypjaloyWil4MckqIRLGRbiucQNNeByg\n5VCFpPsGQ3cal1/mWDcPWHbEwbMIuYEmkwWm5juHVcWxQbAXCa7QaEecg7epfucC\nXD9ipDe4Fnyshv/IkjUDHTjtW5wrfLat+HnQawm4y+3mGdPfpT41dXhVS4kjLXHq\nAwKz3+1LWElNz1VgD7f8H7adAWKC7zk9I5sabi04Y20sV0n2b28qSgBn++mMee4f\n0kJeZcCJcVQwvkYOb2VWY3GKNvK79N1KIRJmgwK2frHRIunYXeN8z3AF+aUvgwBm\nAZjeBShl6KzrhRw5lOUhAvCLjoqplCpy+bmeO+hc0sWyeSu5IIwMXcgBmwfu5kTN\nBt00+b1dfmlwXefx5VKmudEpu/gd+/kas5riyAcDnsFB4jzsyU2K6D0nvJUgqYWR\nWQLZRftl0lQJuFIUxqk9v9KoWZPZ/TFHesfH6Pds0fAbvtYkJHvfHBKdOXQw70cB\n/isi0D8orZidaBEMqoJoF6bXjc0wgOvfXnxSH78eExRoJhhdzLQQm9Jp2BHycHEN\n2JHIKOzNKbWQNHjNeChdLoEHy2iHLQ7dTUGMDaPUG7DLK7a942Y=\n=bqSR\n-----END PGP SIGNATURE-----",
        "payload": "tree 08a7348359eb441c63b5ba96e6965a06ca7c1b9b\nparent 73f71e19965e07534eb47701f2b23c9ed59ef475\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600505788 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600527722 +0300\n\nReplace LockAssertion with a proper thread safety annotations\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73f71e19965e07534eb47701f2b23c9ed59ef475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73f71e19965e07534eb47701f2b23c9ed59ef475",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73f71e19965e07534eb47701f2b23c9ed59ef475"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 10,
      "deletions": 11
    },
    "files": [
      {
        "sha": "7cf6da270ee33a10bc92ded0e2b232b045cf3802",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 11,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
        "patch": "@@ -662,8 +662,8 @@ static void MaybeSetPeerAsAnnouncingHeaderAndIDs(NodeId nodeid, CConnman& connma\n                 return;\n             }\n         }\n-        connman.ForNode(nodeid, [&connman](CNode* pfrom){\n-            LockAssertion lock(::cs_main);\n+        connman.ForNode(nodeid, [&connman](CNode* pfrom) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n             uint64_t nCMPCTBLOCKVersion = (pfrom->GetLocalServices() & NODE_WITNESS) ? 2 : 1;\n             if (lNodesAnnouncingHeaderAndIDs.size() >= 3) {\n                 // As per BIP152, we only get 3 of our peers to announce\n@@ -1355,8 +1355,8 @@ void PeerManager::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_\n         fWitnessesPresentInMostRecentCompactBlock = fWitnessEnabled;\n     }\n \n-    m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n-        LockAssertion lock(::cs_main);\n+    m_connman.ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n \n         // TODO: Avoid the repeated-serialization here\n         if (pnode->nVersion < INVALID_CB_NO_BAN_VERSION || pnode->fDisconnect)\n@@ -1489,9 +1489,8 @@ bool static AlreadyHaveBlock(const uint256& block_hash) EXCLUSIVE_LOCKS_REQUIRED\n \n void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman)\n {\n-    connman.ForEachNode([&txid, &wtxid](CNode* pnode)\n-    {\n-        LockAssertion lock(::cs_main);\n+    connman.ForEachNode([&txid, &wtxid](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+        AssertLockHeld(::cs_main);\n \n         CNodeState* state = State(pnode->GetId());\n         if (state == nullptr) return;\n@@ -3979,8 +3978,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n         NodeId worst_peer = -1;\n         int64_t oldest_block_announcement = std::numeric_limits<int64_t>::max();\n \n-        m_connman.ForEachNode([&](CNode* pnode) {\n-            LockAssertion lock(::cs_main);\n+        m_connman.ForEachNode([&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+            AssertLockHeld(::cs_main);\n \n             // Ignore non-outbound peers, or nodes marked for disconnect already\n             if (!pnode->IsOutboundOrBlockRelayConn() || pnode->fDisconnect) return;\n@@ -3996,8 +3995,8 @@ void PeerManager::EvictExtraOutboundPeers(int64_t time_in_seconds)\n             }\n         });\n         if (worst_peer != -1) {\n-            bool disconnected = m_connman.ForNode(worst_peer, [&](CNode *pnode) {\n-                LockAssertion lock(::cs_main);\n+            bool disconnected = m_connman.ForNode(worst_peer, [&](CNode* pnode) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\n+                AssertLockHeld(::cs_main);\n \n                 // Only disconnect a peer that has been connected to us for\n                 // some reasonable fraction of our check-frequency, to give"
      }
    ]
  },
  {
    "sha": "0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmQxMTg0YWRmNjYxMGMwYmQxNGY0ZTlhMjVjMGEyMDBlNjVhZTI1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T09:06:36Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-19T15:02:42Z"
      },
      "message": "Remove unused LockAssertion struct",
      "tree": {
        "sha": "3755ff8cdd8f0202f64684d03511f1fc82fc7f22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3755ff8cdd8f0202f64684d03511f1fc82fc7f22"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9mHZIACgkQQQEIES5+\nqB/rNw//VIuUfSV0yIMt1RcXB+f9CKx9y5qr/HJ6LlX72/M2U2ZkYnFVND4wh7be\ne7EKpGUo+zGdCD4iwAs5zpIj0FzfqOcbeRMrUpTcjSftKEuBJI9H2MN6q0fkrwI8\nRcjnaUB4800qZH+vJzVhdIPa1cxPmR2JAW5CTC+I3pPmnOirNiZXfQa4qLNYvjgD\n6daz7rHya9zXV0VG8Q/V9IUBQhijiBORk41KeEfsOTEWHAJiehEtTijCYxeZnQBg\nxcYoTo1/X4XcGVD+f5Sw1Dtg2LIMP7dHfg+FZ8BEPsFwsOXr0gUx3l2qJLhk0ObY\nDsFDXMKWlYLFuaqcrkD/6LFCmiqriw/LlvWhZPNDEOAoRhmjBY33esHr35Pfd9YP\n5rLgRuGDwLFbhyhQRap3GiGAsAPlyIV5pcuG++SrUp8B1of4xEiXpm3p7rrxi/Zt\nDdUeqO0LuFzyn6HdLkw0cgg6PKVEKD1QgJq3uyZ9817yUE+i9qLyC8ujmc6BmZrP\njkcy4TSqzwOgmBkJcp/+bNWoObPJW0pWfg3Ee/S7pwQTtTnnVw1kx+HYQEWDugg6\nt5Wxa1GGsbJC6AsevHrMCse7fJvAYoR+kkAI+9reJ7Pq+kqBMLCR3QTePsgwAr2W\nU+GXa51x1ob4onlOhaW9d2TawS49dOwB6wuP+GG5t1dVNJH4rCc=\n=XfEB\n-----END PGP SIGNATURE-----",
        "payload": "tree 3755ff8cdd8f0202f64684d03511f1fc82fc7f22\nparent ab2a44297fd0796bf5797ae2a477e8e56d9c3c12\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600506396 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1600527762 +0300\n\nRemove unused LockAssertion struct\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab2a44297fd0796bf5797ae2a477e8e56d9c3c12"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 0,
      "deletions": 33
    },
    "files": [
      {
        "sha": "fa188dbcd603b6eef80d3855ee9aa44c5e4a37f3",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
        "patch": "@@ -793,25 +793,6 @@ bool ChainstateManager::ProcessNewBlock(...)\n }\n ```\n \n-- When Clang Thread Safety Analysis is unable to determine if a mutex is locked, use `LockAssertion` class instances:\n-\n-```C++\n-// net_processing.h\n-void RelayTransaction(...) EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n-\n-// net_processing.cpp\n-void RelayTransaction(...)\n-{\n-    AssertLockHeld(::cs_main);\n-\n-    connman.ForEachNode([&txid, &wtxid](CNode* pnode) {\n-        LockAssertion lock(::cs_main);\n-        ...\n-    });\n-}\n-\n-```\n-\n - Build and run tests with `-DDEBUG_LOCKORDER` to verify that no potential\n   deadlocks are introduced. As of 0.12, this is defined by default when\n   configuring with `--enable-debug`."
      },
      {
        "sha": "41f4e43bdd58a67c5f567bdaa9fe1f3280290ade",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bd1184adf6610c0bd14f4e9a25c0a200e65ae25/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=0bd1184adf6610c0bd14f4e9a25c0a200e65ae25",
        "patch": "@@ -352,18 +352,4 @@ class CSemaphoreGrant\n     }\n };\n \n-// Utility class for indicating to compiler thread analysis that a mutex is\n-// locked (when it couldn't be determined otherwise).\n-struct SCOPED_LOCKABLE LockAssertion\n-{\n-    template <typename Mutex>\n-    explicit LockAssertion(Mutex& mutex) EXCLUSIVE_LOCK_FUNCTION(mutex)\n-    {\n-#ifdef DEBUG_LOCKORDER\n-        AssertLockHeld(mutex);\n-#endif\n-    }\n-    ~LockAssertion() UNLOCK_FUNCTION() {}\n-};\n-\n #endif // BITCOIN_SYNC_H"
      }
    ]
  }
]