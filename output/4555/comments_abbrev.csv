sipa,2014-07-18T15:24:41Z,"Untested ACK.\n\nI've always wondered what the nHashType flag was for, really...\n",https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-49443629,49443629,
jtimon,2014-07-18T16:50:05Z,Removed nHashType from EvalScript and CheckSig as well. Maybe I can unify some of the commits (all of them?)\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-49453485,49453485,
petertodd,2014-07-18T19:12:05Z,"@sipa nHashType is useful to determine what hash types are being used in scriptSigs; I'm actually working on a patch to eliminate a SIGHASH_ANYONECANPAY-related DoS attack that needs it. That said, it might be more useful to have a mechanism the hash types used are added to a list, or for that matter, a generic callback is called to let the callee apply whatever logic they need.\n",https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-49468718,49468718,
sipa,2014-07-23T08:53:40Z,"@petertodd I'm not convinced that's currently a use case worth keeping the nHashType parameter for, especially as the implementation is not certain.\n",https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-49848482,49848482,
petertodd,2014-07-23T09:58:07Z,"@sipa Yeah, a sighash callback probably makes more sense and keeps more code out of the consensus critical section.\n\nSo untested ACK.\n",https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-49854431,49854431,
sipa,2014-07-27T12:34:55Z,Tested ACK. Did a testnet sync from scratch with it (which likely has more cases of odd hashtypes than mainnet).\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-50263281,50263281,
jtimon,2014-08-14T13:10:42Z,~~Blocked until #4692 is merged~~\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-52180713,52180713,
jtimon,2014-08-28T09:49:58Z,Rebased on top of #4754\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-53697662,53697662,
jtimon,2014-08-31T13:48:58Z,Rebased on top of #4755\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-53988456,53988456,
jtimon,2014-09-02T10:18:39Z,Closing until #4754 and #4775 are merged.\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-54132943,54132943,
sipa,2014-09-08T21:19:15Z,Tested ACK\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-54888967,54888967,
sipa,2014-09-12T18:02:32Z,Needs rebase (but a rebased version is in #4890).\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-55439338,55439338,
jtimon,2014-09-13T03:01:47Z,Rebased\n,https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-55479900,55479900,
BitcoinPullTester,2014-09-13T03:10:00Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4555_6dcfda2dc48bee2148acd571dce7d3f09608d7a2/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4555#issuecomment-55480070,55480070,
jtimon,2014-07-18T16:53:15Z,"This was the only place where something different from 0 (SIGHASH_NONE = 2) was passed down, but the tests are running just fine without passing it.\n",https://github.com/bitcoin/bitcoin/pull/4555#discussion_r15121271,15121271,src/test/script_tests.cpp
jtimon,2014-07-18T16:54:38Z,This was always the case (except for the tests previously commented).\n,https://github.com/bitcoin/bitcoin/pull/4555#discussion_r15121348,15121348,src/script.cpp
