theuni,2014-01-15T22:36:38Z,"Nack on the boost changes.\n\nThe user does not control whether we link against shared libs or static, the linker does. The linker can be explicitly told what to do by passing something like ""LDFLAGS=-static"". Having an option for it does not make sense.\n\nInstead, we should test with -DBOOST_TEST_DYN_LINK, and store the pass/fail result as a way of knowing whether we're shared or static. Basical",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32423192,32423192,
laanwj,2014-01-15T22:40:54Z,"I'm not happy with the --with-static-boost either, but for me it was the only way to get it to work. Feel free to improve on it later.\n",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32423554,32423554,
theuni,2014-01-15T22:43:44Z,"If you're trying to reduce build-time for boost, you should specify on the modules you want, that avoids building/installing the ones we don't use. Something like:\n\n```\n--with-system --with-filesystem --with-program_options --with-thread --with-chrono\n```\n",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32423802,32423802,
theuni,2014-01-15T22:45:13Z,I just explained how to make it work. Is there a rush here?\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32423902,32423902,
laanwj,2014-01-15T22:54:52Z,"Indeed, specifying the modules is a possibility to make the boost build even faster. I may do that later. We don't use the trigonometry and geometry and such modules and we likely never will for bitcoin :)\n\nNo rush but I'm happy to see this working at all. I've been working for two days on gitian building stuff and I'm sick and tired of it.\n\nI suck at autotools and if there was a way to do the",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32424659,32424659,
wtogami,2014-01-16T06:09:27Z,c665d663e0bae284a23076160e4ffa77450480489199955c0c8b561de577a464  bitcoin-deps-linux32-gitian-r2.tar.gz\n91f8c787aeb263f88ac812f61d5585480451121b8b755cb46214735693205299  bitcoin-deps-linux64-gitian-r2.tar.gz\n\nDo your builds match?\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32444688,32444688,
wtogami,2014-01-16T06:27:14Z,1a0100fe7ad0fb77ed51b46dc8c82f25528023e8c2953fbab9b9ff6de54164f7  boost-linux32-1.55.0-gitian-r1.tar.gz\ne9490de332efe04e4c6b65c5a1d4b6cc4bbfef22ec9351e5bcafdabd3c669d9c  boost-linux64-1.55.0-gitian-r1.tar.gz\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32445232,32445232,
theuni,2014-01-16T07:03:21Z,99% chance tarballs won't match without: https://github.com/bitcoin/bitcoin/pull/3546#issuecomment-32430170\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32446484,32446484,
laanwj,2014-01-16T08:04:17Z,@wtogami I haven't focused on determinism of the intermediate outputs yet at all. Let's first make sure that the build works and produces correct executables.\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32448813,32448813,
wtogami,2014-01-16T08:07:53Z,@laanwj \nExecutables produced seem to work as expected on Fedora 20.\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32448975,32448975,
laanwj,2014-01-16T08:19:13Z,Thanks for testing!\n,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32449517,32449517,
laanwj,2014-01-16T09:15:57Z,"Going to rebase and use a .zip for the built boost dependency as well.\n\n@theuni I've thought about the static boost link bit:\n- The libboost_chrono on `-lrt` dependency should be handled outside our autoconf, as bitcoin should indeed not care about the dependencies of dependencies. \n  - The `.la` file for libraries was invented for exactly this (https://stackoverflow.com/questions/1238035/what",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32452619,32452619,
laanwj,2014-01-16T11:45:42Z,"Ok I added a check for `-DBOOST_TEST_DYN_LINK`. It's not being assumed based on the platform anymore.\n\nI've also removed the option `--with-static-boost`. There is now an undocumented environment variable BOOST_CHRONO_EXTRALIBS to specify extra libraries for  Boost Chrono. This is not perfect either, but at least doesn't have as much impact on the configure.ac script. It would be great if other ",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32462199,32462199,
BitcoinPullTester,2014-01-16T13:39:58Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/7f51b918109263501de1592e647ebf136e1cd5be for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32469017,32469017,
wtogami,2014-01-18T10:01:18Z,2ee4dfb8c7351a95859b6b19f2568841326f1ae7f4b2c74ef7477bd0496261e9  bitcoin-deps-linux32-gitian-r2.zip\n82e27e988049a6a9384e377c10cd0997a580dfb44eabdab068f3af1fada22c2c  bitcoin-deps-linux64-gitian-r2.zip\n\n0f44759738bff1eaa1284e7f53e51b0679658c0161d9e085b4d5ea4fa70fdab8  boost-linux32-1.55.0-gitian-r1.zip\n03c959bbda6d085146b84f75c2973fda66072145eebf2269a099c5030be912f6  boost-linux64-1.55.0-gitia,https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32678537,32678537,
theuni,2014-01-18T20:02:06Z,"@laanwj Any time you link a static lib you have to worry about dependencies of dependencies. It comes with the territory. It's been ""solved"" many times via libtool, pkgconfig, etc. In this case, as boost doesn't ship a .pc and we're not using libtool, so it's our responsibility to solve it. It's a major strike against boost in my opinion, but one that many projects are forced to deal with.\n\nEith",https://github.com/bitcoin/bitcoin/pull/3545#issuecomment-32691491,32691491,
