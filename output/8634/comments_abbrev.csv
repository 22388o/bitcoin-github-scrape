jl2012,2016-09-02T01:41:51Z,Please tag 0.13.1\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-244261555,244261555,
btcdrak,2016-09-02T11:00:02Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-244346175,244346175,
jl2012,2016-09-06T12:32:34Z,"This is an implementation of NULLFAIL of BIP146, except the activation logic:\n\nhttps://github.com/bitcoin/bips/blob/master/bip-0146.mediawiki#NULLFAIL\n",https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-244935735,244935735,
NicolasDorier,2016-09-06T14:36:29Z,CodeReview ACK bb50e7683d97ea6cc69fa5837a51fba54643f2cc\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-244970459,244970459,
dcousens,2016-09-11T01:01:50Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-246155073,246155073,
btcdrak,2016-09-12T16:13:17Z,ACK d071bfd\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-246400269,246400269,
rubensayshi,2016-09-13T07:55:18Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-246604061,246604061,
gmaxwell,2016-09-15T19:42:40Z,"concept ACK, utACK, will review more.\n",https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-247430870,247430870,
CodeShark,2016-09-22T04:46:28Z,utACK bb50e7683d97ea6cc69fa5837a51fba54643f2cc\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-248810496,248810496,
jtimon,2016-09-22T19:21:37Z,ut ACK 1912bf1\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-249002368,249002368,
CodeShark,2016-09-23T05:32:04Z,utACK cd102b57a4c148fb93428e656e7282732c65033c\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-249106568,249106568,
btcdrak,2016-09-27T15:15:33Z,needs rebase\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-249895866,249895866,
jl2012,2016-09-27T15:42:07Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/8634#issuecomment-249904909,249904909,
jl2012,2016-09-06T12:40:15Z,"Comments for the following few lines should be read as ""BIP66-compliant but not NULLFAIL-compliant"". Will fix\n",https://github.com/bitcoin/bitcoin/pull/8634#discussion_r77625882,77625882,src/test/data/script_tests.json
CodeShark,2016-09-22T04:29:03Z,"Small nit: moving this line below the next will avoid performing the addition if the range check on nKeysCount fails. Also, since this is only used for cleanup, I would suggest giving the variable a more descriptive name like nNonSigCleanupItems or adding a comment describing what it's for.\n",https://github.com/bitcoin/bitcoin/pull/8634#discussion_r79974678,79974678,src/script/interpreter.cpp
jl2012,2016-09-22T07:07:31Z,Addressed with 5d23cfe\n,https://github.com/bitcoin/bitcoin/pull/8634#discussion_r79984923,79984923,src/script/interpreter.cpp
instagibbs,2016-09-22T20:26:07Z,"nit of nits: just check vchSig.size() instead, move before popstack\n",https://github.com/bitcoin/bitcoin/pull/8634#discussion_r80128699,80128699,src/script/interpreter.cpp
instagibbs,2016-09-22T20:47:49Z,"This code section is a bit confusing already with all these different counters, why not set\n\n> int ikey2 = i;\n\nright after the following line:\n\n> i += nKeysCount;\n\nbelow? From there the two values diverge.\n",https://github.com/bitcoin/bitcoin/pull/8634#discussion_r80132891,80132891,src/script/interpreter.cpp
jl2012,2016-09-23T03:12:59Z,Addressed with cd102b5\n,https://github.com/bitcoin/bitcoin/pull/8634#discussion_r80175609,80175609,src/script/interpreter.cpp
jl2012,2016-09-23T03:16:13Z,I prefer the current way as it's clearly correct. The way that `i` is calculated looks a bit obscure to me\n,https://github.com/bitcoin/bitcoin/pull/8634#discussion_r80175814,80175814,src/script/interpreter.cpp
instagibbs,2016-09-23T03:28:18Z,"Oh, I misread. Yes, the `i` is calculated quite oddly, but it's the value we're calculating yet again here. \n",https://github.com/bitcoin/bitcoin/pull/8634#discussion_r80176620,80176620,src/script/interpreter.cpp
