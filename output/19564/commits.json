[
  {
    "sha": "6d941923c318ce9cb2380d3e41ffb760636656a2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDk0MTkyM2MzMThjZTljYjIzODBkM2U0MWZmYjc2MDYzNjY1NmEy",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-07-21T23:49:09Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-12T20:21:38Z"
      },
      "message": "test: add logging for p2p_feefilter.py",
      "tree": {
        "sha": "0f56a3537ca9c94dfb9b9ad3cebfe9aecd14c1f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f56a3537ca9c94dfb9b9ad3cebfe9aecd14c1f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d941923c318ce9cb2380d3e41ffb760636656a2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d941923c318ce9cb2380d3e41ffb760636656a2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d941923c318ce9cb2380d3e41ffb760636656a2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d941923c318ce9cb2380d3e41ffb760636656a2/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb1ee1551cf39905ccb67e3d07b0e3aaaca18ce3"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 5,
      "deletions": 7
    },
    "files": [
      {
        "sha": "c58c972c9b75513d77d79408c5f79c57c377d673",
        "filename": "test/functional/p2p_feefilter.py",
        "status": "modified",
        "additions": 5,
        "deletions": 7,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d941923c318ce9cb2380d3e41ffb760636656a2/test/functional/p2p_feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d941923c318ce9cb2380d3e41ffb760636656a2/test/functional/p2p_feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_feefilter.py?ref=6d941923c318ce9cb2380d3e41ffb760636656a2",
        "patch": "@@ -88,24 +88,22 @@ def test_feefilter(self):\n \n         conn = self.nodes[0].add_p2p_connection(TestP2PConn())\n \n-        # Test that invs are received by test connection for all txs at\n-        # feerate of .2 sat/byte\n+        self.log.info(\"Test txs paying 0.2 sat/byte are received by test connection\")\n         node1.settxfee(Decimal(\"0.00000200\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n         assert allInvsMatch(txids, conn)\n         conn.clear_invs()\n \n-        # Set a filter of .15 sat/byte on test connection\n+        # Set a fee filter of 0.15 sat/byte on test connection\n         conn.send_and_ping(msg_feefilter(150))\n \n-        # Test that txs are still being received by test connection (paying .15 sat/byte)\n+        self.log.info(\"Test txs paying 0.15 sat/byte are received by test connection\")\n         node1.settxfee(Decimal(\"0.00000150\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n         assert allInvsMatch(txids, conn)\n         conn.clear_invs()\n \n-        # Change tx fee rate to .1 sat/byte and test they are no longer received\n-        # by the test connection\n+        self.log.info(\"Test txs paying 0.1 sat/byte are no longer received by test connection\")\n         node1.settxfee(Decimal(\"0.00000100\"))\n         [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n         self.sync_mempools()  # must be sure node 0 has received all txs\n@@ -122,7 +120,7 @@ def test_feefilter(self):\n         assert allInvsMatch(txids, conn)\n         conn.clear_invs()\n \n-        # Remove fee filter and check that txs are received again\n+        self.log.info(\"Remove fee filter and check txs are received again\")\n         conn.send_and_ping(msg_feefilter(0))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n         assert allInvsMatch(txids, conn)"
      }
    ]
  },
  {
    "sha": "fe3f0cc44ec6301a86de48cdc3883377932e44eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTNmMGNjNDRlYzYzMDFhODZkZTQ4Y2RjMzg4MzM3NzkzMmU0NGVi",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-07-22T00:35:20Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-12T20:30:38Z"
      },
      "message": "test: use wait_until for invs matching in p2p_feefilter.py\n\nadditionally:\n    -> rename function with snake_case (s/allInvsMatch/wait_for_invs_to_match)\n    -> move it from global namespace to the class FeefilterConn",
      "tree": {
        "sha": "1a1b6427c0c7c96d6e55ce175c629714a1bf2854",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a1b6427c0c7c96d6e55ce175c629714a1bf2854"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe3f0cc44ec6301a86de48cdc3883377932e44eb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe3f0cc44ec6301a86de48cdc3883377932e44eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe3f0cc44ec6301a86de48cdc3883377932e44eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe3f0cc44ec6301a86de48cdc3883377932e44eb/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d941923c318ce9cb2380d3e41ffb760636656a2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d941923c318ce9cb2380d3e41ffb760636656a2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d941923c318ce9cb2380d3e41ffb760636656a2"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 8,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c811ed7b72659a920d1398f9304ea816f2077ae3",
        "filename": "test/functional/p2p_feefilter.py",
        "status": "modified",
        "additions": 8,
        "deletions": 15,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe3f0cc44ec6301a86de48cdc3883377932e44eb/test/functional/p2p_feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe3f0cc44ec6301a86de48cdc3883377932e44eb/test/functional/p2p_feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_feefilter.py?ref=fe3f0cc44ec6301a86de48cdc3883377932e44eb",
        "patch": "@@ -5,7 +5,6 @@\n \"\"\"Test processing of feefilter messages.\"\"\"\n \n from decimal import Decimal\n-import time\n \n from test_framework.messages import MSG_TX, MSG_WTX, msg_feefilter\n from test_framework.mininode import mininode_lock, P2PInterface\n@@ -17,16 +16,6 @@ def hashToHex(hash):\n     return format(hash, '064x')\n \n \n-# Wait up to 60 secs to see if the testnode has received all the expected invs\n-def allInvsMatch(invsExpected, testnode):\n-    for _ in range(60):\n-        with mininode_lock:\n-            if (sorted(invsExpected) == sorted(testnode.txinvs)):\n-                return True\n-        time.sleep(1)\n-    return False\n-\n-\n class FeefilterConn(P2PInterface):\n     feefilter_received = False\n \n@@ -48,6 +37,10 @@ def on_inv(self, message):\n             if (i.type == MSG_TX) or (i.type == MSG_WTX):\n                 self.txinvs.append(hashToHex(i.hash))\n \n+    def wait_for_invs_to_match(self, invs_expected):\n+        invs_expected.sort()\n+        self.wait_until(lambda: invs_expected == sorted(self.txinvs), timeout=60)\n+\n     def clear_invs(self):\n         with mininode_lock:\n             self.txinvs = []\n@@ -91,7 +84,7 @@ def test_feefilter(self):\n         self.log.info(\"Test txs paying 0.2 sat/byte are received by test connection\")\n         node1.settxfee(Decimal(\"0.00000200\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n-        assert allInvsMatch(txids, conn)\n+        conn.wait_for_invs_to_match(txids)\n         conn.clear_invs()\n \n         # Set a fee filter of 0.15 sat/byte on test connection\n@@ -100,7 +93,7 @@ def test_feefilter(self):\n         self.log.info(\"Test txs paying 0.15 sat/byte are received by test connection\")\n         node1.settxfee(Decimal(\"0.00000150\"))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n-        assert allInvsMatch(txids, conn)\n+        conn.wait_for_invs_to_match(txids)\n         conn.clear_invs()\n \n         self.log.info(\"Test txs paying 0.1 sat/byte are no longer received by test connection\")\n@@ -117,13 +110,13 @@ def test_feefilter(self):\n         # as well.\n         node0.settxfee(Decimal(\"0.00020000\"))\n         txids = [node0.sendtoaddress(node0.getnewaddress(), 1)]\n-        assert allInvsMatch(txids, conn)\n+        conn.wait_for_invs_to_match(txids)\n         conn.clear_invs()\n \n         self.log.info(\"Remove fee filter and check txs are received again\")\n         conn.send_and_ping(msg_feefilter(0))\n         txids = [node1.sendtoaddress(node1.getnewaddress(), 1) for _ in range(3)]\n-        assert allInvsMatch(txids, conn)\n+        conn.wait_for_invs_to_match(txids)\n         conn.clear_invs()\n \n "
      }
    ]
  },
  {
    "sha": "9e7894357e296dbe0be775e1527654729dbb71b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTc4OTQzNTdlMjk2ZGJlMGJlNzc1ZTE1Mjc2NTQ3MjlkYmI3MWIw",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-07-22T00:44:58Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-08-12T20:38:09Z"
      },
      "message": "test: speedup p2p_feefilter.py by whitelisting peers (immediate tx relay)\n\nMost of the test time is spent in wait_for_invs() after sending to addresses,\ni.e. the bottleneck is in relaying transactions. By whitelisting the peers via\n-whitelist, the inventory is transmissioned immediately rather than on average\nevery 5 seconds, speeding up the test significantly:\n\nbefore:\n$ time ./p2p_feefilter.py\n...\nreal    0m39.367s\nuser    0m1.227s\nsys 0m0.571s\n\nwith this commit:\n$ time ./p2p_feefilter.py\n...\nreal    0m9.386s\nuser    0m1.120s\nsys 0m0.577s",
      "tree": {
        "sha": "0e880ccb899277f19d0c13828d2e291ebc37183d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e880ccb899277f19d0c13828d2e291ebc37183d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e7894357e296dbe0be775e1527654729dbb71b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7894357e296dbe0be775e1527654729dbb71b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e7894357e296dbe0be775e1527654729dbb71b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e7894357e296dbe0be775e1527654729dbb71b0/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe3f0cc44ec6301a86de48cdc3883377932e44eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe3f0cc44ec6301a86de48cdc3883377932e44eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe3f0cc44ec6301a86de48cdc3883377932e44eb"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3a9b8dfbd71224d70df9d34c9d3779f910e3ae7b",
        "filename": "test/functional/p2p_feefilter.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e7894357e296dbe0be775e1527654729dbb71b0/test/functional/p2p_feefilter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e7894357e296dbe0be775e1527654729dbb71b0/test/functional/p2p_feefilter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_feefilter.py?ref=9e7894357e296dbe0be775e1527654729dbb71b0",
        "patch": "@@ -54,7 +54,12 @@ def set_test_params(self):\n         # mempool and wallet feerate calculation based on GetFee\n         # rounding down 3 places, leading to stranded transactions.\n         # See issue #16499\n-        self.extra_args = [[\"-minrelaytxfee=0.00000100\", \"-mintxfee=0.00000100\"]] * self.num_nodes\n+        # grant noban permission to all peers to speed up tx relay / mempool sync\n+        self.extra_args = [[\n+            \"-minrelaytxfee=0.00000100\",\n+            \"-mintxfee=0.00000100\",\n+            \"-whitelist=noban@127.0.0.1\",\n+        ]] * self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      }
    ]
  }
]