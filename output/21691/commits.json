[
  {
    "sha": "fad4167871c3c9fde462e64e3ef3be937e585084",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ0MTY3ODcxYzNjOWZkZTQ2MmU2NGUzZWYzYmU5MzdlNTg1MDg0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-15T08:02:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-17T08:40:43Z"
      },
      "message": "test: Check that no versionbits are re-used\n\nThis allows to remove check that windows for the same bit are disjoint\n\nThis addresses https://github.com/bitcoin/bitcoin/pull/21377#discussion_r611492633",
      "tree": {
        "sha": "250f1ca9e2c2d6caf7dbc1e4c461fe84d4b5b700",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/250f1ca9e2c2d6caf7dbc1e4c461fe84d4b5b700"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad4167871c3c9fde462e64e3ef3be937e585084",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiG1AwAozyUQOJYAMD9uoDW09Rm3FjyxnQjD6nl3lI2qFp1wzMSK3ci3oMyg0e+\n9CLOPrBwoFOH9/pWX4+lAVVlEpBvdUlkN7H2VRAKjujEXZNyMNBzIPncRL93KgKv\n1N7qZ9M1FPfNSVTNrPSWnBTNLHKtoQJNXjPnmj2eKoNDehi6AnUWB0nHHkSDbjVe\nKGfythITFCQwemMoT3AJqvcWoNXjXg0Tmko/EHYi6hX1sQlllOaA/1voAULPEV9R\n830bKV8REm4/IygNB8j/sPixZxEl16K5Un6SEZ5WFllmo/FMZzptoI97SSeBTfgH\nwSfy1EtIGng6PXAp+p79oNG8SmfpChtDDyWlADy9OKO4hxr9Q8XTKdly70MKhKWr\nW/KjfhJhtZWofWn+StYS+FEAMoxLgIWNUCBVsgDqwSgGmssZs8ugg5V2DDowu/Km\nBRZ+tO5jifePkpSnVqYowocuXBkFOaducJYUmsR34DGOIu5or3nPjIMn75ljNnMt\nmTrtzJe+\n=IO1F\n-----END PGP SIGNATURE-----",
        "payload": "tree 250f1ca9e2c2d6caf7dbc1e4c461fe84d4b5b700\nparent 8e69370b150658beef95c25992fb329e5a4b8526\nauthor MarcoFalke <falke.marco@gmail.com> 1618473752 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1618648843 +0200\n\ntest: Check that no versionbits are re-used\n\nThis allows to remove check that windows for the same bit are disjoint\n\nThis addresses https://github.com/bitcoin/bitcoin/pull/21377#discussion_r611492633\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad4167871c3c9fde462e64e3ef3be937e585084",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad4167871c3c9fde462e64e3ef3be937e585084",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad4167871c3c9fde462e64e3ef3be937e585084/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e69370b150658beef95c25992fb329e5a4b8526",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e69370b150658beef95c25992fb329e5a4b8526",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e69370b150658beef95c25992fb329e5a4b8526"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 11,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c80f8cbf876a7aed99fae8001e59efcc994f7ea0",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 15,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad4167871c3c9fde462e64e3ef3be937e585084/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad4167871c3c9fde462e64e3ef3be937e585084/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=fad4167871c3c9fde462e64e3ef3be937e585084",
        "patch": "@@ -273,20 +273,6 @@ BOOST_AUTO_TEST_CASE(versionbits_sanity)\n         if (mainnetParams.vDeployments[i].nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE || mainnetParams.vDeployments[i].nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE) {\n             BOOST_CHECK_EQUAL(mainnetParams.vDeployments[i].min_activation_height, 0);\n         }\n-\n-        // Verify that the deployment windows of different deployment using the\n-        // same bit are disjoint.\n-        // This test may need modification at such time as a new deployment\n-        // is proposed that reuses the bit of an activated soft fork, before the\n-        // end time of that soft fork.  (Alternatively, the end time of that\n-        // activated soft fork could be later changed to be earlier to avoid\n-        // overlap.)\n-        for (int j=i+1; j<(int) Consensus::MAX_VERSION_BITS_DEPLOYMENTS; j++) {\n-            if (VersionBitsMask(mainnetParams, static_cast<Consensus::DeploymentPos>(j)) == bitmask) {\n-                BOOST_CHECK(mainnetParams.vDeployments[j].nStartTime > mainnetParams.vDeployments[i].nTimeout ||\n-                        mainnetParams.vDeployments[i].nStartTime > mainnetParams.vDeployments[j].nTimeout);\n-            }\n-        }\n     }\n }\n \n@@ -443,8 +429,18 @@ BOOST_AUTO_TEST_CASE(versionbits_computeblockversion)\n     // ACTIVE and FAILED states in roughly the way we expect\n     for (const auto& chain_name : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST}) {\n         const auto chainParams = CreateChainParams(*m_node.args, chain_name);\n+        uint32_t chain_all_vbits{0};\n         for (int i = 0; i < (int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++i) {\n-            check_computeblockversion(chainParams->GetConsensus(), static_cast<Consensus::DeploymentPos>(i));\n+            const auto dep = static_cast<Consensus::DeploymentPos>(i);\n+            // Check that no bits are re-used (within the same chain). This is\n+            // disallowed because the transition to FAILED (on timeout) does\n+            // not take precedence over STARTED/LOCKED_IN. So all softforks on\n+            // the same bit might overlap, even when non-overlapping start-end\n+            // times are picked.\n+            const uint32_t dep_mask{VersionBitsMask(chainParams->GetConsensus(), dep)};\n+            BOOST_CHECK(!(chain_all_vbits & dep_mask));\n+            chain_all_vbits |= dep_mask;\n+            check_computeblockversion(chainParams->GetConsensus(), dep);\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVjMWU5ZWUxZjEyNjEyODMxYWQ1YjBmMGE3NjdkODdiZDJkMDI0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-17T08:27:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-17T08:40:47Z"
      },
      "message": "test: Address outstanding versionbits_test feedback\n\n* https://github.com/bitcoin/bitcoin/pull/21377#discussion_r609585080\n* https://github.com/bitcoin/bitcoin/pull/21377#discussion_r613702341",
      "tree": {
        "sha": "00f3642ef672d4b3acc418c2dc200160ec81284d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00f3642ef672d4b3acc418c2dc200160ec81284d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiDMwv/ZV6vaUhbtCaJmDHHeqmI/kjkG0pqRw2ZKSWdB647Anwo27FoImep5nkA\nyx2fHP3Dn2homX/cguiv3YfPwXPGHSdjPqDdwuFVxs9e/KztFRdm6DE6xxb+1R1M\nfmFP4UBCD3GzJNTY8SM5XA+lyytXcehW84rbohatSH+kuEQ73JurVlOLYoFe8eOk\nJkYLBQQfAVJREsoMODA8uH+MCmrBSXymwdk4bSauOCT2ma2J+AMPQBNjk544KD1k\n6+ifugu+b7Xq6T1SZrzlLeiOns8VgP78UXSyRcJAw5z7S3ofLNvCnIufbpvfeGZv\nYJI7apsQT0/1hq476BFCTfx7R1UtApERdJ7T9sh9lIaFrdwB8Aeu8f9A5qB1qT1l\niw/8SPauP55nfmQRpjh8h4j+6m4VZTx/L/kJVO1lvwUysUSHP4HNmfj0n5NfmqZj\nHDcNOIe9OuTZ4nGpoSlTD/5Q6WynzRDeyiDqbDrqw8OVNmQ+Z3hfBaiNU0aFdYXW\nct5pi+B/\n=h10k\n-----END PGP SIGNATURE-----",
        "payload": "tree 00f3642ef672d4b3acc418c2dc200160ec81284d\nparent fad4167871c3c9fde462e64e3ef3be937e585084\nauthor MarcoFalke <falke.marco@gmail.com> 1618648036 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1618648847 +0200\n\ntest: Address outstanding versionbits_test feedback\n\n* https://github.com/bitcoin/bitcoin/pull/21377#discussion_r609585080\n* https://github.com/bitcoin/bitcoin/pull/21377#discussion_r613702341\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec1e9ee1f12612831ad5b0f0a767d87bd2d024/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad4167871c3c9fde462e64e3ef3be937e585084",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad4167871c3c9fde462e64e3ef3be937e585084",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad4167871c3c9fde462e64e3ef3be937e585084"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "ad27c1c26e2614fbd6dd1a1641299e1c1e8a1a5c",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faec1e9ee1f12612831ad5b0f0a767d87bd2d024/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faec1e9ee1f12612831ad5b0f0a767d87bd2d024/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
        "patch": "@@ -81,11 +81,9 @@ class VersionBitsTester\n     TestNeverActiveConditionChecker checker_never[CHECKERS];\n \n     // Test counter (to identify failures)\n-    int num;\n+    int num{1000};\n \n public:\n-    VersionBitsTester() : num(1000) {}\n-\n     VersionBitsTester& Reset() {\n         // Have each group of tests be counted by the 1000s part, starting at 1000\n         num = num - (num % 1000) + 1000;\n@@ -300,7 +298,7 @@ static void check_computeblockversion(const Consensus::Params& params, Consensus\n     BOOST_REQUIRE(0 <= bit && bit < 32);\n     BOOST_REQUIRE(((1 << bit) & VERSIONBITS_TOP_MASK) == 0);\n     BOOST_REQUIRE(min_activation_height >= 0);\n-    BOOST_REQUIRE_EQUAL(min_activation_height % params.nMinerConfirmationWindow, 0);\n+    BOOST_REQUIRE_EQUAL(min_activation_height % params.nMinerConfirmationWindow, 0U);\n \n     // In the first chain, test that the bit is set by CBV until it has failed.\n     // In the second chain, test the bit is set by CBV while STARTED and"
      }
    ]
  },
  {
    "sha": "fa8eaee6a8531db970cc84436bf2ae8150a58642",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThlYWVlNmE4NTMxZGI5NzBjYzg0NDM2YmYyYWU4MTUwYTU4NjQy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-15T10:50:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-04-17T09:29:50Z"
      },
      "message": "test: Run versionbits_sanity for all chains",
      "tree": {
        "sha": "327dbf4ac29121b3287c8371c4a2fa2b9d2db5fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/327dbf4ac29121b3287c8371c4a2fa2b9d2db5fa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8eaee6a8531db970cc84436bf2ae8150a58642",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi/8Av/fW6pJBuNRit3oZ9T82Y5drosdB/7suXJ6YLqtKDxb0wkTbzsfh9M2HSS\nc7uVlVShQTI9za5HaT4UC6/I06exuyLQ1HQlCotfPsR1ff5TR0sx17TGWeIj225w\nMGPtiSdhEdaHARv0R+Q26rUwP4tfC0jQvN17N7URQuMbRkf2DqxdfKBl05oF5Pk6\nmCen1AHBuszlflrLVqFJSd8XfYz+SnwKl4tMKK207PYoryZt6PT3m/nXo/OmmM1a\nLJsDg8WujktH/c7doskCbqaiQAHqSOABTpMrL1s3r+a6w6Fa4PjypHKkKTh4OZAT\npPWyWYOyjcTJrGJVV2poUj0qJ80Y8o+H3m8bw2bNtzE1ibWwQhqBSH+ey7HZVPZP\nMxmJ0r2Oy4Q2mrJD8mLA5zSGn+eHGXTRC+XcHTRP2ouAzkTCvyew/SmUcS8Q/RUc\n9u/4YbACXrETm+cjRxGumZ6+p4r1znlcpZa3iGo/wyA+wJGiW25TlIGGA+reEC/9\nug7K0/hx\n=Hkv2\n-----END PGP SIGNATURE-----",
        "payload": "tree 327dbf4ac29121b3287c8371c4a2fa2b9d2db5fa\nparent faec1e9ee1f12612831ad5b0f0a767d87bd2d024\nauthor MarcoFalke <falke.marco@gmail.com> 1618483809 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1618651790 +0200\n\ntest: Run versionbits_sanity for all chains\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8eaee6a8531db970cc84436bf2ae8150a58642",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8eaee6a8531db970cc84436bf2ae8150a58642",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8eaee6a8531db970cc84436bf2ae8150a58642/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faec1e9ee1f12612831ad5b0f0a767d87bd2d024",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faec1e9ee1f12612831ad5b0f0a767d87bd2d024"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 11,
      "deletions": 21
    },
    "files": [
      {
        "sha": "304cd8feb07afef4865fe016d780f5f565bb6f7c",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 21,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8eaee6a8531db970cc84436bf2ae8150a58642/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8eaee6a8531db970cc84436bf2ae8150a58642/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=fa8eaee6a8531db970cc84436bf2ae8150a58642",
        "patch": "@@ -255,25 +255,6 @@ BOOST_AUTO_TEST_CASE(versionbits_test)\n     }\n }\n \n-BOOST_AUTO_TEST_CASE(versionbits_sanity)\n-{\n-    // Sanity checks of version bit deployments\n-    const auto chainParams = CreateChainParams(*m_node.args, CBaseChainParams::MAIN);\n-    const Consensus::Params &mainnetParams = chainParams->GetConsensus();\n-    for (int i=0; i<(int) Consensus::MAX_VERSION_BITS_DEPLOYMENTS; i++) {\n-        uint32_t bitmask = VersionBitsMask(mainnetParams, static_cast<Consensus::DeploymentPos>(i));\n-        // Make sure that no deployment tries to set an invalid bit.\n-        BOOST_CHECK_EQUAL(bitmask & ~(uint32_t)VERSIONBITS_TOP_MASK, bitmask);\n-\n-        // Check min_activation_height is on a retarget boundary\n-        BOOST_CHECK_EQUAL(mainnetParams.vDeployments[i].min_activation_height % mainnetParams.nMinerConfirmationWindow, 0);\n-        // Check min_activation_height is 0 for ALWAYS_ACTIVE and never active deployments\n-        if (mainnetParams.vDeployments[i].nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE || mainnetParams.vDeployments[i].nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE) {\n-            BOOST_CHECK_EQUAL(mainnetParams.vDeployments[i].min_activation_height, 0);\n-        }\n-    }\n-}\n-\n /** Check that ComputeBlockVersion will set the appropriate bit correctly */\n static void check_computeblockversion(const Consensus::Params& params, Consensus::DeploymentPos dep)\n {\n@@ -289,17 +270,26 @@ static void check_computeblockversion(const Consensus::Params& params, Consensus\n     BOOST_CHECK_EQUAL(ComputeBlockVersion(nullptr, params), VERSIONBITS_TOP_BITS);\n \n     // always/never active deployments shouldn't need to be tested further\n-    if (nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE) return;\n-    if (nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE) return;\n+    if (nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\n+        nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE)\n+    {\n+        BOOST_CHECK_EQUAL(min_activation_height, 0);\n+        return;\n+    }\n \n     BOOST_REQUIRE(nStartTime < nTimeout);\n     BOOST_REQUIRE(nStartTime >= 0);\n     BOOST_REQUIRE(nTimeout <= std::numeric_limits<uint32_t>::max() || nTimeout == Consensus::BIP9Deployment::NO_TIMEOUT);\n     BOOST_REQUIRE(0 <= bit && bit < 32);\n+    // Make sure that no deployment tries to set an invalid bit.\n     BOOST_REQUIRE(((1 << bit) & VERSIONBITS_TOP_MASK) == 0);\n     BOOST_REQUIRE(min_activation_height >= 0);\n+    // Check min_activation_height is on a retarget boundary\n     BOOST_REQUIRE_EQUAL(min_activation_height % params.nMinerConfirmationWindow, 0U);\n \n+    const uint32_t bitmask{VersionBitsMask(params, dep)};\n+    BOOST_CHECK_EQUAL(bitmask, uint32_t{1} << bit);\n+\n     // In the first chain, test that the bit is set by CBV until it has failed.\n     // In the second chain, test the bit is set by CBV while STARTED and\n     // LOCKED-IN, and then no longer set while ACTIVE."
      }
    ]
  }
]