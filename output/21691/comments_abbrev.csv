jnewbery,2021-04-15 09:18:55,Concept ACK. I agree that https://github.com/bitcoin/bitcoin/pull/21691#discussion_r613882514 is a better way of adding this test.,https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-820271112,820271112,
MarcoFalke,2021-04-16 09:14:28,"(not for backport, obviously)",https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-821039709,821039709,
DrahtBot,2021-04-16 14:47:11,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19438 (Introduce deploymentstatus by ajtowns)\n\nIf you consider this pull request important, please also help to review ",https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-821229639,821229639,
practicalswift,2021-04-17 10:35:03,Concept ACK,https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-821802798,821802798,
jnewbery,2021-04-19 12:51:18,Code review ACK fa8eaee6a8531db970cc84436bf2ae8150a58642,https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-822441568,822441568,
jonatack,2021-04-19 14:16:58,"Sanity check on the values in `versionbits_computeblockversion`\n```diff\n     for (const auto& chain_name : {CBaseChainParams::MAIN, CBaseChainParams::TESTNET, CBaseChainParams::SIGNET, CBaseChainParams::REGTEST}) {\n+        BOOST_TEST_MESSAGE(strprintf(""chain: %s"", chain_name));\n         const auto chainParams = CreateChainParams(*m_node.args, chain_name);\n         uint32_t chain_all_vbi",https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-822502255,822502255,
MarcoFalke,2021-04-20 05:15:56,">  to make these const \n\nLeft this as is for now to not invalidate reviews",https://github.com/bitcoin/bitcoin/pull/21691#issuecomment-822979511,822979511,
ajtowns,2021-04-15 08:54:53,"Err, there's already a test to ""Verify that the deployment windows of different deployment using the same bit are disjoint."" wouldn't it make more sense to do:\n\n```diff\n+            BOOST_CHECK(VersionBitsMask(mainnetParams, static_cast<Consensus::DeploymentPos>(j)) != bitmask);\n-            if (VersionBitsMask(mainnetParams, static_cast<Consensus::DeploymentPos>(j)) == bitmask) {\n-     ",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r613882514,613882514,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-15 10:04:29,"This is only run for the mainnetParams, but we want to run it for all chains.\n\nI've removed the redundant parts from versionbits_sanity and made the other parts run for all chains.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r613936337,613936337,src/test/versionbits_tests.cpp
jnewbery,2021-04-15 14:22:17,"Do we have any guidance on whether we should avoid side-effects in `BOOST_CHECK()` expressions?  This can obviously be rewritten in a way that inserts and then checks the return value on the following line, but I'm not sure if that's preferred",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r614114870,614114870,src/test/versionbits_tests.cpp
jnewbery,2021-04-15 14:27:01,"Rather than adding to a `std::set<uint32_t>`, should we check set `chain_masks` to a uint32_t, and then check that there's no overlap between the signaled bits:\n\n```diff\n--- a/src/test/versionbits_tests.cpp\n+++ b/src/test/versionbits_tests.cpp\n@@ -418,7 +418,7 @@ BOOST_AUTO_TEST_CASE(versionbits_computeblockversion)\n     for (const auto& chain_name : {CBaseChainParams::MAIN, CBaseChain",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r614119156,614119156,src/test/versionbits_tests.cpp
ajtowns,2021-04-16 02:34:01,Seems like there's a few of these issues: https://github.com/bitcoin/bitcoin/pull/21701#pullrequestreview-637244766,https://github.com/bitcoin/bitcoin/pull/21691#discussion_r614521127,614521127,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-17 08:48:36,The other instance is removed in the next commit,https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615228872,615228872,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-17 08:51:43,Removed this line because I think it is redundant,https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615229143,615229143,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-17 08:51:59,"Thanks, done that.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615229167,615229167,src/test/versionbits_tests.cpp
ajtowns,2021-04-19 02:11:27,"I think it would be better to keep the ""check the params make sense"" checks separate from the ""check ComputeBlockVersion does the right thing"" checks.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615503301,615503301,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-19 05:51:16,"the sanity checks are a requirement, so they need to be run as part of the same test case. Do you mean to split them up into a separate function? I think that'd be too verbose, but I am happy to take a diff if you happen to have one.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615557449,615557449,src/test/versionbits_tests.cpp
ajtowns,2021-04-19 06:19:13,"Yeah, maybe you're right -- can't reliably test computeblockversion if some other deployment might start setting the bit in question as soon as it hits ACTIVE, even if they're not technically overlapping. No need to hold this up over it in any event.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615567369,615567369,src/test/versionbits_tests.cpp
jonatack,2021-04-19 13:43:48,"```diff\n@@ -271,8 +367,7 @@ static void check_computeblockversion(const Consensus::Params& params, Consensus\n \n     // always/never active deployments shouldn't need to be tested further\n     if (nStartTime == Consensus::BIP9Deployment::ALWAYS_ACTIVE ||\n-        nStartTime == Consensus::BIP9Deployment::NEVER_ACTIVE)\n-    {\n+        nStartTime == Consensus::BIP9Deployment::NEVER_ACTIV",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615860603,615860603,src/test/versionbits_tests.cpp
MarcoFalke,2021-04-19 16:21:49,"Personally I find it incredibly ugly to have the if-condition and the first if-branch continue with the same indentation as if they are one block. It might be good to update the clang-format to not do this.\n\nAlso this file is far from clang-format clean, so I am going to leave as is for now.",https://github.com/bitcoin/bitcoin/pull/21691#discussion_r615994551,615994551,src/test/versionbits_tests.cpp
ajtowns,2021-04-19 20:55:50,@MarcoFalke  **CONCEPT ACK**,https://github.com/bitcoin/bitcoin/pull/21691#discussion_r616171540,616171540,src/test/versionbits_tests.cpp
