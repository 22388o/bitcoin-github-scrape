[
  {
    "sha": "fa3999fe351b510bb141dff9ae4ecc8e717bf292",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTM5OTlmZTM1MWI1MTBiYjE0MWRmZjlhZTRlY2M4ZTcxN2JmMjky",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-21T14:41:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-04T20:39:17Z"
      },
      "message": "net: Reformat excessively long if condition into multiple lines\n\nCan be reviewed with the git option\n--word-diff-regex=.",
      "tree": {
        "sha": "4e2ae1b8c706a4fa0770a2d6108abc4c2ddee944",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e2ae1b8c706a4fa0770a2d6108abc4c2ddee944"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa3999fe351b510bb141dff9ae4ecc8e717bf292",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiZ9wv8Cgjhz14M+KljlxPbi+ebWoyyoWuQpx32Ro/q6nIQRc1SNWqqO5TFKxxv\nd2XDx+aSsS+NtxvUdl5WYd+kS6Wza+sg//P20v2O594TaXL7IApDTvUCdBWJ1XWT\nhxfZ/LFK+qZ/y5d2VzplN5SIBMJH2KVfuNh+5XhI99vg9ZrAUfYR01wwhWFitEy2\npfVtprIaeyffU+BknE2yxwTslNbJtw/j33u1z6jL4uPH7eQYFbC70K+8gD6ADXIK\nxDHWVe1atF5QqyNY8XJ8+cjYRun8Y2ItXQLcq+4L5yR0vnghmCxgUtTLdOcWqwTT\nqTd14tPw9a4IqWR8WUeMtUzKLR2S7Q19sVwk5PDHqIlPXWiWYDvfvPAZNu2q5MxS\nGb6NMZZtV5cT4yxuHvnyCHkaWhvTRl6igmGIeD+w8ijsFfxre6pa0SCS6n9UWWev\nLXHFAHLCRG6bKUjlZIeL15fl+rygaHUee46KbihwddCnquBZyp4lUTJvlmLdqsol\n58K7Soks\n=M6T1\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e2ae1b8c706a4fa0770a2d6108abc4c2ddee944\nparent 01b45b2e016f0b0907929e818216edf7157fb03a\nauthor MarcoFalke <falke.marco@gmail.com> 1590072079 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1591303157 -0400\n\nnet: Reformat excessively long if condition into multiple lines\n\nCan be reviewed with the git option\n--word-diff-regex=.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3999fe351b510bb141dff9ae4ecc8e717bf292",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3999fe351b510bb141dff9ae4ecc8e717bf292",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3999fe351b510bb141dff9ae4ecc8e717bf292/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "01b45b2e016f0b0907929e818216edf7157fb03a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01b45b2e016f0b0907929e818216edf7157fb03a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01b45b2e016f0b0907929e818216edf7157fb03a"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 5,
      "deletions": 2
    },
    "files": [
      {
        "sha": "18695c8f44a33d74a14087059115bdd7ef8495da",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa3999fe351b510bb141dff9ae4ecc8e717bf292/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa3999fe351b510bb141dff9ae4ecc8e717bf292/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa3999fe351b510bb141dff9ae4ecc8e717bf292",
        "patch": "@@ -1510,8 +1510,11 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n     const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n     // disconnect node in case we have reached the outbound limit for serving historical blocks\n     // never disconnect whitelisted nodes\n-    if (send && connman->OutboundTargetReached(true) && ( ((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom.HasPermission(PF_NOBAN))\n-    {\n+    if (send &&\n+        connman->OutboundTargetReached(true) &&\n+        (((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) &&\n+        !pfrom.HasPermission(PF_NOBAN)\n+    ) {\n         LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom.GetId());\n \n         //disconnect node"
      }
    ]
  },
  {
    "sha": "fa9604c46f3245a704487c29b684caadffbf73bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk2MDRjNDZmMzI0NWE3MDQ0ODdjMjliNjg0Y2FhZGZmYmY3M2Jj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-21T14:42:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-04T20:39:23Z"
      },
      "message": "doc: noban precludes maxuploadtarget disconnects",
      "tree": {
        "sha": "190637c73190b8582ce66f338922ce6ff4c14152",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/190637c73190b8582ce66f338922ce6ff4c14152"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9604c46f3245a704487c29b684caadffbf73bc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi5gwv+II+TLotnnjQXqupCETMInttKyOpz2aBmOo09LlZeOP4SO5XMKA/GRgy/\nowe3ukT4x55na/JPKTb5pOxwD2dw2lppKBWWo5j4BEgIbEZln9lcUxea42R/pkTb\nYjxRRHv3poK6Gl95CPZn0SnZGL2NfM3EhkniP0z8XUeCBJPpap8fhjavKGwgUfoN\nnjHvi2oNYZqeOGSL3hAu42ZioSmhSbgGWO5z8w8C3LPWpSIx00eovNakpHbi4elx\nqzev/2d7rNb3g+7FUczASkpLwW/CT4KXtnZs20O3UiRWTfy4/ejSvOcw/L2vC2uT\n39kAYH/bT4AB0v3O8GKX+BkDf2SGcNsQBnh8VrKmJ3RbK4tdsY/zqtV3b0+9VFZ8\ndtJV3Peq+katknIEuL57ztPMW7GWfwFzvlWiKJ9SY9NiSyYWGpbCcY2gMKsEht4D\neUiWbVIsLsqWmupik8X8gp9EOY4uQsVoc/FExnOoYHK9UPMyGyFLPgVSbeNDnYQq\npDkmkqEY\n=qj4r\n-----END PGP SIGNATURE-----",
        "payload": "tree 190637c73190b8582ce66f338922ce6ff4c14152\nparent fa3999fe351b510bb141dff9ae4ecc8e717bf292\nauthor MarcoFalke <falke.marco@gmail.com> 1590072157 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1591303163 -0400\n\ndoc: noban precludes maxuploadtarget disconnects\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9604c46f3245a704487c29b684caadffbf73bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9604c46f3245a704487c29b684caadffbf73bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9604c46f3245a704487c29b684caadffbf73bc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa3999fe351b510bb141dff9ae4ecc8e717bf292",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa3999fe351b510bb141dff9ae4ecc8e717bf292",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa3999fe351b510bb141dff9ae4ecc8e717bf292"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 7,
      "deletions": 9
    },
    "files": [
      {
        "sha": "ce77a00dd50eaf5471b34e0cd82c615b07b35816",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9604c46f3245a704487c29b684caadffbf73bc/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9604c46f3245a704487c29b684caadffbf73bc/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=fa9604c46f3245a704487c29b684caadffbf73bc",
        "patch": "@@ -23,7 +23,7 @@ longer serving historic blocks (blocks older than one week).\n Keep in mind that new nodes require other nodes that are willing to serve\n historic blocks.\n \n-Whitelisted peers will never be disconnected, although their traffic counts for\n+Peers with the `noban` permission will never be disconnected, although their traffic counts for\n calculating the target.\n \n ## 2. Disable \"listening\" (`-listen=0`)"
      },
      {
        "sha": "a56df4a4363f360fceaf5cd23407be8aa6f1e9e1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9604c46f3245a704487c29b684caadffbf73bc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9604c46f3245a704487c29b684caadffbf73bc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fa9604c46f3245a704487c29b684caadffbf73bc",
        "patch": "@@ -444,7 +444,7 @@ void SetupServerArgs(NodeContext& node)\n     gArgs.AddArg(\"-maxreceivebuffer=<n>\", strprintf(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXRECEIVEBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-maxsendbuffer=<n>\", strprintf(\"Maximum per-connection send buffer, <n>*1000 bytes (default: %u)\", DEFAULT_MAXSENDBUFFER), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)\", DEFAULT_MAX_TIME_ADJUSTMENT), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    gArgs.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    gArgs.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB per 24h). Limit does not apply to peers with 'noban' permission. 0 = no limit (default: %d)\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor hidden services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-onlynet=<net>\", \"Make outgoing connections only through network <net> (ipv4, ipv6 or onion). Incoming connections are not affected by this option. This option can be specified multiple times to allow multiple networks.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     gArgs.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);"
      },
      {
        "sha": "f3b7e8dab17f516b281f410adfb48841ff3cabca",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9604c46f3245a704487c29b684caadffbf73bc/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9604c46f3245a704487c29b684caadffbf73bc/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fa9604c46f3245a704487c29b684caadffbf73bc",
        "patch": "@@ -2639,7 +2639,7 @@ void CConnman::RecordBytesSent(uint64_t bytes)\n         nMaxOutboundTotalBytesSentInCycle = 0;\n     }\n \n-    // TODO, exclude whitebind peers\n+    // TODO, exclude peers with noban permission\n     nMaxOutboundTotalBytesSentInCycle += bytes;\n }\n "
      },
      {
        "sha": "d48745aef25ea8665f83171a11bf65b8232945e1",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9604c46f3245a704487c29b684caadffbf73bc/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9604c46f3245a704487c29b684caadffbf73bc/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa9604c46f3245a704487c29b684caadffbf73bc",
        "patch": "@@ -1509,11 +1509,10 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n     }\n     const CNetMsgMaker msgMaker(pfrom.GetSendVersion());\n     // disconnect node in case we have reached the outbound limit for serving historical blocks\n-    // never disconnect whitelisted nodes\n     if (send &&\n         connman->OutboundTargetReached(true) &&\n         (((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) &&\n-        !pfrom.HasPermission(PF_NOBAN)\n+        !pfrom.HasPermission(PF_NOBAN) // never disconnect nodes with the noban permission\n     ) {\n         LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom.GetId());\n "
      },
      {
        "sha": "7eabf86cadb3db1eb92fd31ec2219eb5716c6018",
        "filename": "test/functional/feature_maxuploadtarget.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9604c46f3245a704487c29b684caadffbf73bc/test/functional/feature_maxuploadtarget.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9604c46f3245a704487c29b684caadffbf73bc/test/functional/feature_maxuploadtarget.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_maxuploadtarget.py?ref=fa9604c46f3245a704487c29b684caadffbf73bc",
        "patch": "@@ -138,8 +138,7 @@ def run_test(self):\n         self.nodes[0].disconnect_p2ps()\n \n         self.log.info(\"Restarting node 0 with noban permission and 1MB maxuploadtarget\")\n-        self.stop_node(0)\n-        self.start_node(0, [\"-whitelist=noban@127.0.0.1\", \"-maxuploadtarget=1\"])\n+        self.restart_node(0, [\"-whitelist=noban@127.0.0.1\", \"-maxuploadtarget=1\"])\n \n         # Reconnect to self.nodes[0]\n         self.nodes[0].add_p2p_connection(TestP2PConn())\n@@ -152,9 +151,9 @@ def run_test(self):\n \n         getdata_request.inv = [CInv(MSG_BLOCK, big_old_block)]\n         self.nodes[0].p2p.send_and_ping(getdata_request)\n-        assert_equal(len(self.nodes[0].getpeerinfo()), 1) #node is still connected because of the whitelist\n+        assert_equal(len(self.nodes[0].getpeerinfo()), 1)  #node is still connected because of the noban permission\n \n-        self.log.info(\"Peer still connected after trying to download old block (whitelisted)\")\n+        self.log.info(\"Peer still connected after trying to download old block (noban permission)\")\n \n if __name__ == '__main__':\n     MaxUploadTest().main()"
      }
    ]
  }
]