[
  {
    "sha": "4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YzNiZDBiYjZlMWM3ZTIyYzM4MTgwMmY2YmZkNmE2MGE5MDVmNjM3",
    "commit": {
      "author": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-05T15:37:01Z"
      },
      "committer": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-05T15:37:01Z"
      },
      "message": "Fixing compiler warning C4101",
      "tree": {
        "sha": "7bf874447c9e4428dffb7999a18540401d91c319",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bf874447c9e4428dffb7999a18540401d91c319"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/comments",
    "author": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8d92236f61699846f67d8ce6cb55458a46f9de1"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "11c3326a3f2cecb61a03bf38194063b76fb92189",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -97,7 +97,7 @@ bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx)\n     try {\n         ssData >> tx;\n     }\n-    catch (std::exception &e) {\n+    catch (std::exception const &) {\n         return false;\n     }\n "
      },
      {
        "sha": "6fa880f8b48141626edac4f5b850caad9c873f52",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -129,7 +129,7 @@ class CDB\n             CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n+        catch (std::exception const &) {\n             return false;\n         }\n "
      },
      {
        "sha": "309eeaa862d6a645f831b55e690a4903b080dee6",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -99,7 +99,7 @@ class CLevelDBWrapper\n         try {\n             CDataStream ssValue(strValue.data(), strValue.data() + strValue.size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n-        } catch(std::exception &e) {\n+        } catch(std::exception const &) {\n             return false;\n         }\n         return true;"
      },
      {
        "sha": "144d8b90b47cc6f319d7dca4c020035889c2dde2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -3134,7 +3134,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                 blkdat >> nSize;\n                 if (nSize < 80 || nSize > MAX_BLOCK_SIZE)\n                     continue;\n-            } catch (std::exception &e) {\n+            } catch (std::exception const &) {\n                 // no valid block header found; don't complain\n                 break;\n             }"
      },
      {
        "sha": "3b6408af39ca8b8d588aefe08cddae07b1bfd05f",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -689,7 +689,7 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n     try {\n         hdrbuf >> hdr;\n     }\n-    catch (std::exception &e) {\n+    catch (std::exception const &) {\n         return -1;\n     }\n "
      },
      {
        "sha": "0646c9db80bf21ec3d027586498be513d9ab1e00",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -553,7 +553,7 @@ Value submitblock(const Array& params, bool fHelp)\n     try {\n         ssBlock >> pblock;\n     }\n-    catch (std::exception &e) {\n+    catch (std::exception const &) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n     }\n "
      },
      {
        "sha": "ae8c887a58b8de287600b349e654c42ab5227144",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -540,7 +540,7 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             ssData >> tx;\n             txVariants.push_back(tx);\n         }\n-        catch (std::exception &e) {\n+        catch (std::exception const &) {\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n         }\n     }"
      },
      {
        "sha": "4ea769317537b0129c3fecca7b682374434eba40",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -628,7 +628,7 @@ void StartRPCThreads()\n             try {\n                 vEndpoints.push_back(ParseEndpoint(addr, defaultPort));\n             }\n-            catch(boost::system::system_error &e)\n+            catch(boost::system::system_error const &)\n             {\n                 uiInterface.ThreadSafeMessageBox(\n                     strprintf(_(\"Could not parse -rpcbind value %s as network address\"), addr),"
      },
      {
        "sha": "5b96bd65e7a29b3451b906c4d33c2a662d31bf3f",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637",
        "patch": "@@ -572,7 +572,7 @@ CTxMemPool::WriteFeeEstimates(CAutoFile& fileout) const\n         fileout << CLIENT_VERSION; // version that wrote the file\n         minerPolicyEstimator->Write(fileout);\n     }\n-    catch (std::exception &e) {\n+    catch (std::exception const &) {\n         LogPrintf(\"CTxMemPool::WriteFeeEstimates() : unable to write policy estimator data (non-fatal)\");\n         return false;\n     }\n@@ -591,7 +591,7 @@ CTxMemPool::ReadFeeEstimates(CAutoFile& filein)\n         LOCK(cs);\n         minerPolicyEstimator->Read(filein, minRelayFee);\n     }\n-    catch (std::exception &e) {\n+    catch (std::exception const &) {\n         LogPrintf(\"CTxMemPool::ReadFeeEstimates() : unable to read policy estimator data (non-fatal)\");\n         return false;\n     }"
      }
    ]
  }
]