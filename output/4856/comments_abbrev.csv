BitcoinPullTester,2014-09-05T16:00:08Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4856_4c3bd0bb6e1c7e22c381802f6bfd6a60a905f637/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54644550,54644550,
sipa,2014-09-06T15:46:32Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54715951,54715951,
TheBlueMatt,2014-09-08T04:04:51Z,"Does bitcoin use the T const & syntax elsewhere? seems our style is const T&, or does that not fix the warning?\n",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54774952,54774952,
laanwj,2014-09-08T07:26:57Z,@TheBlueMatt That would solve the warning just as well.\n,https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54784454,54784454,
ENikS,2014-09-08T15:03:52Z,"@TheBlueMatt \n\nGlobal search reveals that 'const T' has been used exactly  two times. So I would say majority of the code (9 files) uses 'T const'.\n\nFind all ""catch._(._const"", Regular expressions, Subfolders, Find Results 1, Entire Solution, \n  D:\bitcoin-dev-msvc\bitcoin\src\walletdb.cpp(880):  } catch(const filesystem::filesystem_error &e) {\n  D:\bitcoin-dev-msvc\bitcoin\src\compat\glibcx",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54833405,54833405,
sipa,2014-09-08T15:19:43Z,"Your assumption is incorrect. There are only two cases whatsoever where an exception is caught in a const variable. Both of these have the 'const' in front.\n\nIn fact, I believe every const variable has the const in front (""const &"" or ""const&"" appear nowhere in the source tree). So, yes, please follow the existing style. What you consider 'perfectly normal code' would make our source look incons",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54836122,54836122,
laanwj,2014-09-08T15:25:29Z,"I could have replaced them 10 times in the time I spent typing replies in this thread; no problem if you don't want to do it, I'll replace them on merge.\n",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-54837228,54837228,
sipa,2014-09-12T17:37:12Z,"Ok, untested ACK apart from coding style :)\n",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-55436111,55436111,
jgarzik,2014-09-15T01:41:37Z,"Indeed.  Again, new/updated code _must_ look like existing bitcoin code.  This is a normal rule for any codebase, anywhere.\n\nut ACK once code is consistent with _our_ codebase.\n",https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-55546649,55546649,
laanwj,2014-09-15T12:36:07Z,Merged via ec91092 (with code style changes)\n,https://github.com/bitcoin/bitcoin/pull/4856#issuecomment-55584032,55584032,
laanwj,2014-09-05T15:56:00Z,"If your intent is to make it a const reference, shouldn't it at least be `const std::exception &`? Otherwise you're making the reference itself const but references are const by definition (you can't change what they point to). Or am I missing something? Why the const in the first place?\n",https://github.com/bitcoin/bitcoin/pull/4856#discussion_r17180348,17180348,src/core_read.cpp
ENikS,2014-09-05T16:18:50Z,http://www.parashift.com/c++-faq-lite/const-ref-alt.html\n,https://github.com/bitcoin/bitcoin/pull/4856#discussion_r17181514,17181514,src/core_read.cpp
laanwj,2014-09-05T16:23:20Z,"Ah, right, I was confused with `std::exception & const`, which is nonsense.\n",https://github.com/bitcoin/bitcoin/pull/4856#discussion_r17181709,17181709,src/core_read.cpp
ENikS,2014-09-05T16:30:22Z,"What is nonsense, std::exception or std::exception & const?\n",https://github.com/bitcoin/bitcoin/pull/4856#discussion_r17182013,17182013,src/core_read.cpp
laanwj,2014-09-05T16:33:46Z,"Putting the const at the end. That literally comes from the link that you posted and is also what I meant above with ""otherwise you're making the reference itself const but references are const by definition"":\n\n> Another caveat: if you decide to use X const&, do something to make sure your people don't mis-type it as the nonsensical ""X& const x"". \n",https://github.com/bitcoin/bitcoin/pull/4856#discussion_r17182173,17182173,src/core_read.cpp
