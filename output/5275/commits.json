[
  {
    "sha": "18379875bf7dd91637e4a206db58cd0968b5d47f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODM3OTg3NWJmN2RkOTE2MzdlNGEyMDZkYjU4Y2QwOTY4YjVkNDdm",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-11-13T19:52:04Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-11-14T18:42:15Z"
      },
      "message": "Optimize -regtest setgenerate block generation\n\nSpeed up generating blocks in regression test mode, by moving\nblock-creating and nonce-finding directly into the setgenerate\nRPC call (instead of starting up a mining thread and waiting for\nit to find a block).\n\nThis makes the forknotify RPC test three times quicker, for\nexample (10 seconds runtime instead of 30 seconds, assuming\nthe initial blockchain cache is already built).",
      "tree": {
        "sha": "077beebc3c5f4202985c88086a299186ee102c57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/077beebc3c5f4202985c88086a299186ee102c57"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18379875bf7dd91637e4a206db58cd0968b5d47f",
      "comment_count": 1,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlRmTQkACgkQdYgkL74406iH3wCfW5f7jCojYK2rpaH1TX6Af6Jo\nHJAAnj54Va9H1w6FwUIUy0mKs0Y8KF8W\n=oDzs\n-----END PGP SIGNATURE-----",
        "payload": "tree 077beebc3c5f4202985c88086a299186ee102c57\nparent 3d3ce7421e11ed693840e04bee4d18fb9d396309\nauthor Gavin Andresen <gavinandresen@gmail.com> 1415908324 -0500\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1415990535 -0500\n\nOptimize -regtest setgenerate block generation\n\nSpeed up generating blocks in regression test mode, by moving\nblock-creating and nonce-finding directly into the setgenerate\nRPC call (instead of starting up a mining thread and waiting for\nit to find a block).\n\nThis makes the forknotify RPC test three times quicker, for\nexample (10 seconds runtime instead of 30 seconds, assuming\nthe initial blockchain cache is already built).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18379875bf7dd91637e4a206db58cd0968b5d47f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18379875bf7dd91637e4a206db58cd0968b5d47f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18379875bf7dd91637e4a206db58cd0968b5d47f/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d3ce7421e11ed693840e04bee4d18fb9d396309",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d3ce7421e11ed693840e04bee4d18fb9d396309"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 22,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2bde02c0a12ba31536935fab35a0f01d3e64484e",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 8,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18379875bf7dd91637e4a206db58cd0968b5d47f/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18379875bf7dd91637e4a206db58cd0968b5d47f/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=18379875bf7dd91637e4a206db58cd0968b5d47f",
        "patch": "@@ -121,6 +121,8 @@ Value setgenerate(const Array& params, bool fHelp)\n             \"1. generate         (boolean, required) Set to true to turn on generation, off to turn off.\\n\"\n             \"2. genproclimit     (numeric, optional) Set the processor limit for when generation is on. Can be -1 for unlimited.\\n\"\n             \"                    Note: in -regtest mode, genproclimit controls how many blocks are generated immediately.\\n\"\n+            \"\\nResult\\n\"\n+            \"[ blockhashes ]     (array, -regtest only) hashes of blocks generated\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSet the generation on with a limit of one processor\\n\"\n             + HelpExampleCli(\"setgenerate\", \"true 1\") +\n@@ -154,26 +156,38 @@ Value setgenerate(const Array& params, bool fHelp)\n         int nHeightEnd = 0;\n         int nHeight = 0;\n         int nGenerate = (nGenProcLimit > 0 ? nGenProcLimit : 1);\n+        CReserveKey reservekey(pwalletMain);\n+\n         {   // Don't keep cs_main locked\n             LOCK(cs_main);\n             nHeightStart = chainActive.Height();\n             nHeight = nHeightStart;\n             nHeightEnd = nHeightStart+nGenerate;\n         }\n-        int nHeightLast = -1;\n+        unsigned int nExtraNonce = 0;\n+        Array blockHashes;\n         while (nHeight < nHeightEnd)\n         {\n-            if (nHeightLast != nHeight)\n+            auto_ptr<CBlockTemplate> pblocktemplate(CreateNewBlockWithKey(reservekey));\n+            if (!pblocktemplate.get())\n+                throw JSONRPCError(RPC_INTERNAL_ERROR, \"Wallet keypool empty\");\n+            CBlock *pblock = &pblocktemplate->block;\n             {\n-                nHeightLast = nHeight;\n-                GenerateBitcoins(fGenerate, pwalletMain, 1);\n-            }\n-            MilliSleep(1);\n-            {   // Don't keep cs_main locked\n                 LOCK(cs_main);\n-                nHeight = chainActive.Height();\n+                IncrementExtraNonce(pblock, chainActive.Tip(), nExtraNonce);\n+            }\n+            while (!CheckProofOfWork(pblock->GetHash(), pblock->nBits)) {\n+                // Yes, there is a chance every nonce could fail to satisfy the -regtest\n+                // target -- 1 in 2^(2^32). That ain't gonna happen.\n+                ++pblock->nNonce;\n             }\n+            CValidationState state;\n+            if (!ProcessNewBlock(state, NULL, pblock))\n+                throw JSONRPCError(RPC_INTERNAL_ERROR, \"ProcessNewBlock, block not accepted\");\n+            ++nHeight;\n+            blockHashes.push_back(pblock->GetHash().GetHex());\n         }\n+        return blockHashes;\n     }\n     else // Not -regtest: start generate thread, return immediately\n     {"
      }
    ]
  }
]