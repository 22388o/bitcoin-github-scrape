[
  {
    "sha": "edae6075aa3b1169c84b65e76fd48d68242a294e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGFlNjA3NWFhM2IxMTY5Yzg0YjY1ZTc2ZmQ0OGQ2ODI0MmEyOTRl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:57:13Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:57:13Z"
      },
      "message": "[tests] Only acquire lock once in p2p_compactblocks.py",
      "tree": {
        "sha": "50742c04418697232b432e3ce7a17721942a0237",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/50742c04418697232b432e3ce7a17721942a0237"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edae6075aa3b1169c84b65e76fd48d68242a294e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edae6075aa3b1169c84b65e76fd48d68242a294e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/edae6075aa3b1169c84b65e76fd48d68242a294e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edae6075aa3b1169c84b65e76fd48d68242a294e/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0fc6ea216c00fff470bd876c53418afca63bf7e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0fc6ea216c00fff470bd876c53418afca63bf7e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0fc6ea216c00fff470bd876c53418afca63bf7e9"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0b3738b5721e019b62414ec7f0c813cd050b1ebd",
        "filename": "test/functional/p2p_compactblocks.py",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edae6075aa3b1169c84b65e76fd48d68242a294e/test/functional/p2p_compactblocks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edae6075aa3b1169c84b65e76fd48d68242a294e/test/functional/p2p_compactblocks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_compactblocks.py?ref=edae6075aa3b1169c84b65e76fd48d68242a294e",
        "patch": "@@ -305,10 +305,9 @@ def test_compactblock_construction(self, test_node, use_witness_address=True):\n         self.check_compactblock_construction_from_block(version, header_and_shortids, block_hash, block)\n \n         # Now fetch the compact block using a normal non-announce getdata\n-        with mininode_lock:\n-            test_node.clear_block_announcement()\n-            inv = CInv(MSG_CMPCT_BLOCK, block_hash)\n-            test_node.send_message(msg_getdata([inv]))\n+        test_node.clear_block_announcement()\n+        inv = CInv(MSG_CMPCT_BLOCK, block_hash)\n+        test_node.send_message(msg_getdata([inv]))\n \n         wait_until(test_node.received_block_announcement, timeout=30, lock=mininode_lock)\n "
      }
    ]
  },
  {
    "sha": "9d80762fa0931fe553fad241e95bcc1515ef0e95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDgwNzYyZmEwOTMxZmU1NTNmYWQyNDFlOTViY2MxNTE1ZWYwZTk1",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:58:25Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:58:25Z"
      },
      "message": "[tests] Don't acquire mininode_lock twice in wait_for_broadcast()",
      "tree": {
        "sha": "8b44970400ad903460d34f33fcb6960555e4483e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b44970400ad903460d34f33fcb6960555e4483e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d80762fa0931fe553fad241e95bcc1515ef0e95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d80762fa0931fe553fad241e95bcc1515ef0e95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d80762fa0931fe553fad241e95bcc1515ef0e95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d80762fa0931fe553fad241e95bcc1515ef0e95/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edae6075aa3b1169c84b65e76fd48d68242a294e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edae6075aa3b1169c84b65e76fd48d68242a294e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edae6075aa3b1169c84b65e76fd48d68242a294e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "69307d196081b7721a144f0959a59d90552ea23f",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d80762fa0931fe553fad241e95bcc1515ef0e95/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d80762fa0931fe553fad241e95bcc1515ef0e95/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=9d80762fa0931fe553fad241e95bcc1515ef0e95",
        "patch": "@@ -669,6 +669,6 @@ def wait_for_broadcast(self, txns, timeout=60):\n         The mempool should mark unbroadcast=False for these transactions.\n         \"\"\"\n         # Wait until invs have been received (and getdatas sent) for each txid.\n-        self.wait_until(lambda: set(self.get_invs()) == set([int(tx, 16) for tx in txns]), timeout)\n+        self.wait_until(lambda: set(self.tx_invs_received.keys()) == set([int(tx, 16) for tx in txns]), timeout)\n         # Flush messages and wait for the getdatas to be processed\n         self.sync_with_ping()"
      }
    ]
  },
  {
    "sha": "c67c1f2c032a8efa141d776a7e5be58f052159ea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNjdjMWYyYzAzMmE4ZWZhMTQxZDc3NmE3ZTViZTU4ZjA1MjE1OWVh",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:59:40Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T14:59:40Z"
      },
      "message": "[tests] Don't call super twice in P2PTxInvStore.on_inv()",
      "tree": {
        "sha": "5f2797bb3a7a47d5fe710571397743808a7f8fa7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f2797bb3a7a47d5fe710571397743808a7f8fa7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c67c1f2c032a8efa141d776a7e5be58f052159ea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c67c1f2c032a8efa141d776a7e5be58f052159ea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c67c1f2c032a8efa141d776a7e5be58f052159ea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c67c1f2c032a8efa141d776a7e5be58f052159ea/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d80762fa0931fe553fad241e95bcc1515ef0e95",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d80762fa0931fe553fad241e95bcc1515ef0e95",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d80762fa0931fe553fad241e95bcc1515ef0e95"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a2c695a704949604fd24dcedeb0aa6bb10adaa04",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c67c1f2c032a8efa141d776a7e5be58f052159ea/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c67c1f2c032a8efa141d776a7e5be58f052159ea/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=c67c1f2c032a8efa141d776a7e5be58f052159ea",
        "patch": "@@ -658,8 +658,6 @@ def on_inv(self, message):\n                 # save txid\n                 self.tx_invs_received[i.hash] += 1\n \n-        super().on_inv(message)\n-\n     def get_invs(self):\n         with mininode_lock:\n             return list(self.tx_invs_received.keys())"
      }
    ]
  },
  {
    "sha": "62068381a3b9c065d81300be79abba7aecfdb41b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjA2ODM4MWEzYjljMDY1ZDgxMzAwYmU3OWFiYmE3YWVjZmRiNDFi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T15:01:54Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-06-05T15:01:54Z"
      },
      "message": "[tests] Make mininode_lock non-reentrant\n\nThere's no need for mininode_lock to be reentrant.\nUse a simpler non-recursive lock.",
      "tree": {
        "sha": "472d387b7d78872dd20cdbd42149c0ced35e7df8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/472d387b7d78872dd20cdbd42149c0ced35e7df8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62068381a3b9c065d81300be79abba7aecfdb41b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62068381a3b9c065d81300be79abba7aecfdb41b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62068381a3b9c065d81300be79abba7aecfdb41b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62068381a3b9c065d81300be79abba7aecfdb41b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c67c1f2c032a8efa141d776a7e5be58f052159ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c67c1f2c032a8efa141d776a7e5be58f052159ea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c67c1f2c032a8efa141d776a7e5be58f052159ea"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b6c37bc7e066e203f36f7494d5a1f830fe65c608",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62068381a3b9c065d81300be79abba7aecfdb41b/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62068381a3b9c065d81300be79abba7aecfdb41b/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=62068381a3b9c065d81300be79abba7aecfdb41b",
        "patch": "@@ -492,7 +492,7 @@ def test_function():\n # P2PConnection acquires this lock whenever delivering a message to a P2PInterface.\n # This lock should be acquired in the thread running the test logic to synchronize\n # access to any data shared with the P2PInterface or P2PConnection.\n-mininode_lock = threading.RLock()\n+mininode_lock = threading.Lock()\n \n \n class NetworkThread(threading.Thread):"
      }
    ]
  }
]