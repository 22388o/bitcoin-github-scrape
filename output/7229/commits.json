[
  {
    "sha": "fa0765d433eb6d44a5cbec44f136b62814c663e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA3NjVkNDMzZWI2ZDQ0YTVjYmVjNDRmMTM2YjYyODE0YzY2M2U1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-15T16:15:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-18T11:37:08Z"
      },
      "message": "[qa] Cleanup wallet.py test\n\n* Remove outdated comment\n* Remove unneeded 0s\n* Remove semicolons",
      "tree": {
        "sha": "3610b387a070d840d19385c2493a5b1cc139c7c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3610b387a070d840d19385c2493a5b1cc139c7c0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0765d433eb6d44a5cbec44f136b62814c663e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0765d433eb6d44a5cbec44f136b62814c663e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0765d433eb6d44a5cbec44f136b62814c663e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0765d433eb6d44a5cbec44f136b62814c663e5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cd836c1d855b92e7c73ab31979f471c4f8dad68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cd836c1d855b92e7c73ab31979f471c4f8dad68"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 11,
      "deletions": 26
    },
    "files": [
      {
        "sha": "f6cffe61211778fc6fea23d9e0bbe6ff8c3fb1fa",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 11,
        "deletions": 26,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0765d433eb6d44a5cbec44f136b62814c663e5/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0765d433eb6d44a5cbec44f136b62814c663e5/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fa0765d433eb6d44a5cbec44f136b62814c663e5",
        "patch": "@@ -3,21 +3,6 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#\n-# Exercise the wallet.  Ported from wallet.sh.\n-# Does the following:\n-#   a) creates 3 nodes, with an empty chain (no blocks).\n-#   b) node0 mines a block\n-#   c) node1 mines 101 blocks, so now nodes 0 and 1 have 50btc, node2 has none.\n-#   d) node0 sends 21 btc to node2, in two transactions (11 btc, then 10 btc).\n-#   e) node0 mines a block, collects the fee on the second transaction\n-#   f) node1 mines 100 blocks, to mature node0's just-mined block\n-#   g) check that node0 has 100-21, node2 has 21\n-#   h) node0 should now have 2 unspent outputs;  send these to node2 via raw tx broadcast by node1\n-#   i) have node1 mine a block\n-#   j) check balances - node0 should have 0, node2 should have 100\n-#   k) test ResendWalletTransactions - create transactions, startup fourth node, make sure it syncs\n-#\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n@@ -190,7 +175,7 @@ def run_test (self):\n         for uTx in unspentTxs:\n             if uTx['txid'] == zeroValueTxid:\n                 found = True\n-                assert_equal(uTx['amount'], Decimal('0.00000000'));\n+                assert_equal(uTx['amount'], Decimal('0'))\n         assert(found)\n \n         #do some -walletbroadcast tests\n@@ -202,21 +187,21 @@ def run_test (self):\n         connect_nodes_bi(self.nodes,0,2)\n         self.sync_all()\n \n-        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2);\n+        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2)\n         txObjNotBroadcasted = self.nodes[0].gettransaction(txIdNotBroadcasted)\n         self.nodes[1].generate(1) #mine a block, tx should not be in there\n         self.sync_all()\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal); #should not be changed because tx was not broadcasted\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal) #should not be changed because tx was not broadcasted\n \n         #now broadcast from another node, mine a block, sync, and check the balance\n         self.nodes[1].sendrawtransaction(txObjNotBroadcasted['hex'])\n         self.nodes[1].generate(1)\n         self.sync_all()\n         txObjNotBroadcasted = self.nodes[0].gettransaction(txIdNotBroadcasted)\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('2')); #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('2')) #should not be\n \n         #create another tx\n-        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2);\n+        txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2)\n \n         #restart the nodes with -walletbroadcast=1\n         stop_nodes(self.nodes)\n@@ -231,21 +216,21 @@ def run_test (self):\n         sync_blocks(self.nodes)\n \n         #tx should be added to balance because after restarting the nodes tx should be broadcastet\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('4')); #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('4')) #should not be\n \n         #send a tx with value in a string (PR#6380 +)\n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"2\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-2.00000000'))\n+        assert_equal(txObj['amount'], Decimal('-2'))\n \n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"0.0001\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-0.00010000'))\n+        assert_equal(txObj['amount'], Decimal('-0.0001'))\n \n         #check if JSON parser can handle scientific notation in strings\n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"1e-4\")\n         txObj = self.nodes[0].gettransaction(txId)\n-        assert_equal(txObj['amount'], Decimal('-0.00010000'))\n+        assert_equal(txObj['amount'], Decimal('-0.0001'))\n \n         #this should fail\n         errorString = \"\"\n@@ -254,15 +239,15 @@ def run_test (self):\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"Invalid amount\" in errorString, True);\n+        assert_equal(\"Invalid amount\" in errorString, True)\n \n         errorString = \"\"\n         try:\n             self.nodes[0].generate(\"2\") #use a string to as block amount parameter must fail because it's not interpreted as amount\n         except JSONRPCException,e:\n             errorString = e.error['message']\n \n-        assert_equal(\"not an integer\" in errorString, True);\n+        assert_equal(\"not an integer\" in errorString, True)\n \n \n if __name__ == '__main__':"
      }
    ]
  },
  {
    "sha": "fa14d994843fe2d700c977653cd3133d0a77cb67",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE0ZDk5NDg0M2ZlMmQ3MDBjOTc3NjUzY2QzMTMzZDBhNzdjYjY3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-18T11:35:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-18T11:37:29Z"
      },
      "message": "[qa] check if wallet or blochchain maintenance changes the balance",
      "tree": {
        "sha": "4900b43f3624039a566cea07e1eb8aa55888056d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4900b43f3624039a566cea07e1eb8aa55888056d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa14d994843fe2d700c977653cd3133d0a77cb67",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa14d994843fe2d700c977653cd3133d0a77cb67",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa14d994843fe2d700c977653cd3133d0a77cb67",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa14d994843fe2d700c977653cd3133d0a77cb67/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0765d433eb6d44a5cbec44f136b62814c663e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0765d433eb6d44a5cbec44f136b62814c663e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0765d433eb6d44a5cbec44f136b62814c663e5"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 27,
      "deletions": 2
    },
    "files": [
      {
        "sha": "11abb5797b7b4df65217d4d0c95cf0334955991c",
        "filename": "qa/rpc-tests/wallet.py",
        "status": "modified",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa14d994843fe2d700c977653cd3133d0a77cb67/qa/rpc-tests/wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa14d994843fe2d700c977653cd3133d0a77cb67/qa/rpc-tests/wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/wallet.py?ref=fa14d994843fe2d700c977653cd3133d0a77cb67",
        "patch": "@@ -197,8 +197,9 @@ def run_test (self):\n         self.nodes[1].sendrawtransaction(txObjNotBroadcasted['hex'])\n         self.nodes[1].generate(1)\n         self.sync_all()\n+        node_2_bal += 2\n         txObjNotBroadcasted = self.nodes[0].gettransaction(txIdNotBroadcasted)\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('2')) #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n \n         #create another tx\n         txIdNotBroadcasted  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), 2)\n@@ -214,9 +215,10 @@ def run_test (self):\n \n         self.nodes[0].generate(1)\n         sync_blocks(self.nodes)\n+        node_2_bal += 2\n \n         #tx should be added to balance because after restarting the nodes tx should be broadcastet\n-        assert_equal(self.nodes[2].getbalance(), node_2_bal + Decimal('4')) #should not be\n+        assert_equal(self.nodes[2].getbalance(), node_2_bal)\n \n         #send a tx with value in a string (PR#6380 +)\n         txId  = self.nodes[0].sendtoaddress(self.nodes[2].getnewaddress(), \"2\")\n@@ -249,6 +251,29 @@ def run_test (self):\n \n         assert_equal(\"not an integer\" in errorString, True)\n \n+        #check if wallet or blochchain maintenance changes the balance\n+        self.sync_all()\n+        self.nodes[0].generate(1)\n+        self.sync_all()\n+        balance_nodes = [self.nodes[i].getbalance() for i in range(3)]\n+\n+        maintenance = [\n+            '-rescan',\n+            '-reindex',\n+            '-zapwallettxes=1',\n+            '-zapwallettxes=2',\n+            '-salvagewallet',\n+        ]\n+        for m in maintenance:\n+            stop_nodes(self.nodes)\n+            wait_bitcoinds()\n+            self.nodes = start_nodes(3, self.options.tmpdir, [[m]] * 3)\n+            connect_nodes_bi(self.nodes,0,1)\n+            connect_nodes_bi(self.nodes,1,2)\n+            connect_nodes_bi(self.nodes,0,2)\n+            self.sync_all()\n+            assert_equal(balance_nodes, [self.nodes[i].getbalance() for i in range(3)])\n+\n \n if __name__ == '__main__':\n     WalletTest ().main ()"
      }
    ]
  },
  {
    "sha": "fa33d9740c9b0d1071094ab6c1736f27a7090c95",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTMzZDk3NDBjOWIwZDEwNzEwOTRhYjZjMTczNmYyN2E3MDkwYzk1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-19T13:26:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2015-12-19T13:26:46Z"
      },
      "message": "[walletdb] Add missing LOCK() in Recover() for dummyWallet",
      "tree": {
        "sha": "b820b7393284821f447935174d731713495c9304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b820b7393284821f447935174d731713495c9304"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa33d9740c9b0d1071094ab6c1736f27a7090c95",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa33d9740c9b0d1071094ab6c1736f27a7090c95",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa33d9740c9b0d1071094ab6c1736f27a7090c95",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa33d9740c9b0d1071094ab6c1736f27a7090c95/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa14d994843fe2d700c977653cd3133d0a77cb67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa14d994843fe2d700c977653cd3133d0a77cb67",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa14d994843fe2d700c977653cd3133d0a77cb67"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "44b79ed1fcf13d7f7fef8e8487892945417b27a5",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa33d9740c9b0d1071094ab6c1736f27a7090c95/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa33d9740c9b0d1071094ab6c1736f27a7090c95/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=fa33d9740c9b0d1071094ab6c1736f27a7090c95",
        "patch": "@@ -960,8 +960,13 @@ bool CWalletDB::Recover(CDBEnv& dbenv, const std::string& filename, bool fOnlyKe\n             CDataStream ssKey(row.first, SER_DISK, CLIENT_VERSION);\n             CDataStream ssValue(row.second, SER_DISK, CLIENT_VERSION);\n             string strType, strErr;\n-            bool fReadOK = ReadKeyValue(&dummyWallet, ssKey, ssValue,\n+            bool fReadOK;\n+            {\n+                // Required in LoadKeyMetadata():\n+                LOCK(dummyWallet.cs_wallet);\n+                fReadOK = ReadKeyValue(&dummyWallet, ssKey, ssValue,\n                                         wss, strType, strErr);\n+            }\n             if (!IsKeyType(strType))\n                 continue;\n             if (!fReadOK)"
      }
    ]
  }
]