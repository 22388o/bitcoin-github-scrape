luke-jr,2012-06-27T23:52:31Z,Does it stop being enforced if ver=2 falls below 75% majority later?\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6618707,6618707,
gavinandresen,2012-06-27T23:56:35Z,"Does it stop being enforced:  yes, whether it is enforced or not depends on the previous 1,000 blocks.  If more than 250 of the past 1,000 (starting at the block before the block being considered) is nVersion=0 or 1, then the rule isn't enforced.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6618762,6618762,
luke-jr,2012-06-28T01:59:17Z,Is that intentional? Would there be any harm to having a point of no return?\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6620216,6620216,
gavinandresen,2012-06-28T19:54:43Z,"RE: point of no return: I don't see a good reason to write code to do that, and it would be hard to test (would have to notice when we hit the point of no return and record that in the block database, I suppose, then read and pay attention to that database setting).\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6639732,6639732,
gmaxwell,2012-07-02T13:24:18Z,"If there isn't a point of no return the transition for this particular feature can never be removed. If there is, then once its hit after the next checkpoint has been set the code for counting the quorum for this could just be removed and replaced with a simple height comparison.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6708044,6708044,
jgarzik,2012-07-02T16:35:08Z,"As I read the code of commit 93fdc48, it does not do what I expect.\n\nA version>1 block with invalid height is simply an invalid block, to be unconditionally rejected.  No need for supermajority check.\n\nNobody generates version>1 blocks right now (right?), so it should be fine to simply publish a BIP and note the new rejection policy.\n\nThe logic just described could be deployed immediately.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6713132,6713132,
gmaxwell,2012-07-02T16:38:44Z,"@jgarzik  Then I, Greifer Mc. Greifer,  mine a single invalid v2 block.  The super majority of nodes will happily extend it and continue the chain, the minority of upgraded nodes will reject it forever and ignore that chain. Nice split you've got there.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6713232,6713232,
luke-jr,2012-07-02T16:41:51Z,"And perhaps half as importantly, that would be an abuse of the centralization in a single client to force a blockchain rule through like that. Besides, @sipa already was working on a proper ""block/transaction version rules"" BIP.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6713309,6713309,
jgarzik,2012-07-02T17:00:22Z,"@gmaxwell highly unlikely, but no objection to doing it the current way\n\n@luke-jr re-read, you missed the phrase ""publish a BIP""\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6713757,6713757,
luke-jr,2012-07-02T17:08:13Z,"@jgarzik Yes, I did. Sorry.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6713935,6713935,
gavinandresen,2012-07-02T18:05:57Z,"RE: locking issues setting strMiscWarnings : before this pull, strMiscWarnings is set from exception handlers (a ""should never happen"" case) and AddTimeData(), which is called from ProcessMessage when a new node connects.\n\nThe new code is in ProcessBlock(), which is also called from ProcessMessage but is also called from -loadblock.\n\nI'm tempted to ignore locking in this case, because I think ",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6715440,6715440,
rebroad,2012-07-02T19:00:52Z,What would be needed to create a split with the code as it currently is?\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6716937,6716937,
gmaxwell,2012-07-02T19:09:01Z,"@rebroad it can't make a split as it currently is, but because the v2 blocks are not _enforced_ as it is a malicious party who wants to create trouble by mining duplicate coinbases could do so by just choosing to mine v1 blocks. Basically the patch as is only protects against mistaken duplication by incorrectly modified mining code.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717106,6717106,
gavinandresen,2012-07-02T19:09:29Z,"As the pull request stands, the only way to get an orphan chain is:\n- wait until 75% of the blocks created are nVersion=2\n- some idiot creates/broadcasts a nVersion=2 block that does NOT have the height in the coinbase\n\n25% of the network would build on idiot's block, the other 75% would reject that chain.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717123,6717123,
gmaxwell,2012-07-02T19:13:19Z,@gavinandresen  but as soon as the 75% produces two blocks (or whatever is require to get ahead again) the 25% moves back.  (thus the distinction between a split and a orphan-stub: a split never heals)\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717194,6717194,
rebroad,2012-07-02T19:21:45Z,"@gavinandresen thanks, you answered the question I had intended to ask.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717380,6717380,
gavinandresen,2012-07-02T19:34:41Z,"@gmaxwell : I think of orphan-stubs as temporary splits, and use the term ""hard fork"" for permanent splits (but don't really care about vocabulary as long as we all understand each other).\n\nOk:  One issue remains with this:  should this pull include rules for eventually rejecting nVersion=1 blocks ?\n\nIf that is _not_ done now, then we'll be bumping block.nVersion=3 in a year and writing code t",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717685,6717685,
jgarzik,2012-07-02T19:45:07Z,"Agree with what someone (@gmaxwell?) said on IRC, about stopping v1 acceptance:  don't make it a software rule that can ""flap"" (rule switches on and off and on and off).  Just pick a height, once you hit 5% or whatever threshold.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717959,6717959,
jgarzik,2012-07-02T19:45:23Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6717967,6717967,
luke-jr,2012-07-02T20:01:12Z,"I think we can add the ""reject v1 blocks"" rule later without bumping to version=3; since all the ""this generation"" nodes will enforce it so long as the majority remains over 75%, the only risk is someone making version=1 blocks having more than ""future v1-rejecting version"" _plus_ this version combined...\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6718327,6718327,
gavinandresen,2012-07-02T21:11:57Z,"@jgarzik: once past 95% v2 blocks (assuming there's consensus on ""orphan the last 5% of miners who refuse to get with the program and upgrade"") there will be no flapping, because 95% of the network will reject v1 blocks past that point.  The release after that happens a checkpoint can be added and the code can be simplified to ""require valid v2+ blocks.""\n\n@luke-jr:  so we release code that creat",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6719888,6719888,
gavinandresen,2012-07-06T01:32:54Z,"Added a commit with a ""reject nVersion=1 blocks when 95% of the last 1,000 blocks are nVersion=2"" -- the point of no return.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6795288,6795288,
jgarzik,2012-07-06T02:05:25Z,Code ACK\n\nIMO this warrants a BIP\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6795630,6795630,
gavinandresen,2012-07-06T02:55:06Z,"I ran my 'coinbase_integers.py' tool on the chain, and somebody is producing block.nVersion=1 blocks with blockheight-1 in their coinbases; see blocks 172036 or 174854 for example (coinbases start with PUSH 172035/174853). Interesting, but not a problem.\n\nThere are also some accidental ""looks like a block height"" blocks (e.g. block 164384 starts its coinbase with PUSH 1983702).\n\nThat opens a t",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6796145,6796145,
jgarzik,2012-07-06T04:59:34Z,"The most likely error scenario is probably a buggy miner creating a version=2, height=$ValidHeight+1 or height=$ValidHeight-1 block.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6797307,6797307,
jgarzik,2012-07-06T05:25:11Z,First draft of BIP text: https://gist.github.com/3058253\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6797528,6797528,
genjix,2012-07-06T10:24:35Z,"This is a good rule change, and I only wish it was in all blocks already. It's such a pain to have different transactions with the same hash.\n\nDoes this mean sipa's rule change will be removed? This change seems to obselete that once network hashing majority is achieved.\n\nAbout blocks that have a coinbase which looks like a block number and could cause problems: the only way around that is to ",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6801792,6801792,
jgarzik,2012-07-06T15:04:50Z,"New URL for spec, with assigned BIP number: https://en.bitcoin.it/wiki/BIP_0034\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-6807375,6807375,
luke-jr,2012-08-01T19:26:10Z,"Can this be amended to only pay attention to the last octet, just in case we end up using the first 3 for something else?\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7437277,7437277,
BitcoinPullTester,2012-08-09T19:13:07Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/fa174be9b58de7377b46416d3a040c979d27d7e2 for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts\n2. It does not build on either Linux i386",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7623925,7623925,
luke-jr,2012-08-12T19:46:57Z,"This should fix the test:\n\n``` diff\ndiff --git a/src/test/miner_tests.cpp b/src/test/miner_tests.cpp\nindex c9981fb..8ffc9b4 100644\n--- a/src/test/miner_tests.cpp\n+++ b/src/test/miner_tests.cpp\n@@ -62,6 +62,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     std::vector<CTransaction*>txFirst;\n     for (unsigned int i = 0; i < sizeof(blockinfo)/sizeof(*blockinfo); ++i)\n     {\n+       ",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7679161,7679161,
luke-jr,2012-08-13T16:10:59Z,"Note that this should be merged only after #936: there is software (p2pool?) which will create version==2 blocks without the height right now. #936 will workaround this problem by breaking compatibility with said application, and BIP22 explicitly requires clients understand and implement height-in-coinbase for version 2.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7696680,7696680,
jgarzik,2012-08-13T17:35:16Z,@luke-jr forrestv does not agree\n,https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7699453,7699453,
BitcoinPullTester,2012-08-20T19:25:16Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d18f2fd9d6927b1a132c5e0094479cf44fc54aeb for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1526#issuecomment-7880441,7880441,
genjix,2012-07-06T10:12:58Z,It's confusing to have 2 variables called CURRENT_VERSION. Better would be: CURRENT_TX_VERSION and CURRENT_BLOCK_VERSION.\n,https://github.com/bitcoin/bitcoin/pull/1526#discussion_r1111912,1111912,src/main.h
genjix,2012-07-06T10:27:55Z,This looks like we can get sequences of version 1 blocks following version 2 blocks. Doesn't seem good.\n\nHow were those magical numbers picked? Comments or constant names would be nice for illustrating them.\n,https://github.com/bitcoin/bitcoin/pull/1526#discussion_r1111973,1111973,src/main.cpp
gavinandresen,2012-07-06T13:51:44Z,Their full names are CBlock::CURRENT_VERSION and CTransaction::CURRENT_VERSION; I'll modify the code to use their full names.\n,https://github.com/bitcoin/bitcoin/pull/1526#discussion_r1112891,1112891,src/main.h
gavinandresen,2012-07-06T13:55:41Z,"The magical numbers are arbitrary, but 75% network support before enforcing a ""If you produce a v=2 block, then it must have heigh in the coinbase"" and 95% support before enforcing ""no more v1 blocks"" feel reasonable.\n\nYou can get a sequence of version 1 block following version 2 blocks, there is no way to avoid that unless we think we can tell everybody to upgrade and start producing version=2 ",https://github.com/bitcoin/bitcoin/pull/1526#discussion_r1112928,1112928,src/main.cpp
sipa,2012-07-06T15:16:16Z,"I don't really like transaction code to look at (potentially unrelated) blockchain data, but it's probably by far easier this way.\n\nEDIT: nevermind, it looked like this code was part of IsStandard()\n",https://github.com/bitcoin/bitcoin/pull/1526#discussion_r1113460,1113460,src/main.cpp
