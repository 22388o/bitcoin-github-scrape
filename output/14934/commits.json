[
  {
    "sha": "2290269759ad10cc2e35958c7b0a63f3a7608621",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjkwMjY5NzU5YWQxMGNjMmUzNTk1OGM3YjBhNjNmM2E3NjA4NjIx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-12-12T08:45:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-01-29T15:13:29Z"
      },
      "message": "scripted-diff: rename DescriptorImpl m_script_arg to m_subdescriptor_arg\n\n-BEGIN VERIFY SCRIPT-\nsed -i -e 's/m_script_arg/m_subdescriptor_arg/g' src/script/descriptor.cpp\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "97fe019749d65e2c26f14aa2955fe52248849eed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97fe019749d65e2c26f14aa2955fe52248849eed"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2290269759ad10cc2e35958c7b0a63f3a7608621",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlxQbZkACgkQV/+b28ww\nEAlsvA//dk5rJeCmbRxkCTSvLZlS46M6I4XTlS4dXt4iyTwNyNHgFUs3i5rGiUoL\nPaFJ+AU20EDtkxQx+MuTOHIqL13dNnjrgQkzhqOhe9HR1jc+BEE2MiCbCz1unCos\n6DnQ26B9z+5kSuzXwsoy/YYvEtB9Iz8dboBvAstkDG0h2boZ69xNjEyh9TzAc777\nPSS1lDAZLSsZV/tbQEObzct/iHM8/WkJ8wctJp1NiHXUz0Jd56LK+xgdyCUDqiWT\nkxRqlnikGGL0e32KwJyBDHzeOeQzK88zAJ9HGUuO9n99+kRNQYZdY8g8AZxKwZL0\nzMOVAPQhswR64PQB6CiCvP0eWiDIRZWChh78fXZCM/NfChL3zUZTbxsv/9vohwvW\nII6PAgb0X9yyZCJ1yaZR7yFRhSgJQGzXWsv2nVvxpdq+cm1QPz1I/muy9CZgHKYm\nDt22RVaCGh3JqIAViatdwh9XsFMnkmfTbe/YUxSm+m2thz3T5+zX8Xe4dm2WFqr3\n5m1lCdGgXuBNf9uuOHDgYImXk+OHRQfM7NXzeQ4kATtmY+SPiknIpcHJFhUG6K+T\nHUbbe52fQE5DNHFro3RPygjdFKZ+oqc/mkAFcv9C0MpENgzGUsr5rLWsXBSEYmjt\nI3EWir3QOPJStaXiqVxrguC1BJQDZ2MjbuKYdKFmF2Mawmm3oXg=\n=UJAi\n-----END PGP SIGNATURE-----",
        "payload": "tree 97fe019749d65e2c26f14aa2955fe52248849eed\nparent 7275365c9bc7e7ebd6bbf7dcb251946aac44b5de\nauthor Sjors Provoost <sjors@sprovoost.nl> 1544604355 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1548774809 +0100\n\nscripted-diff: rename DescriptorImpl m_script_arg to m_subdescriptor_arg\n\n-BEGIN VERIFY SCRIPT-\nsed -i -e 's/m_script_arg/m_subdescriptor_arg/g' src/script/descriptor.cpp\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2290269759ad10cc2e35958c7b0a63f3a7608621",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2290269759ad10cc2e35958c7b0a63f3a7608621",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2290269759ad10cc2e35958c7b0a63f3a7608621/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7275365c9bc7e7ebd6bbf7dcb251946aac44b5de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7275365c9bc7e7ebd6bbf7dcb251946aac44b5de"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "5f758ab42d4d4bcc9e1bc55d56d0f323fa991898",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2290269759ad10cc2e35958c7b0a63f3a7608621/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2290269759ad10cc2e35958c7b0a63f3a7608621/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=2290269759ad10cc2e35958c7b0a63f3a7608621",
        "patch": "@@ -210,7 +210,7 @@ class DescriptorImpl : public Descriptor\n     //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size of Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The sub-descriptor argument (nullptr for everything but SH and WSH).\n-    const std::unique_ptr<DescriptorImpl> m_script_arg;\n+    const std::unique_ptr<DescriptorImpl> m_subdescriptor_arg;\n     //! The string name of the descriptor function.\n     const std::string m_name;\n \n@@ -221,23 +221,23 @@ class DescriptorImpl : public Descriptor\n     /** A helper function to construct the scripts for this descriptor.\n      *\n      *  This function is invoked once for every CScript produced by evaluating\n-     *  m_script_arg, or just once in case m_script_arg is nullptr.\n+     *  m_subdescriptor_arg, or just once in case m_subdescriptor_arg is nullptr.\n \n      *  @param pubkeys The evaluations of the m_pubkey_args field.\n-     *  @param script The evaluation of m_script_arg (or nullptr when m_script_arg is nullptr).\n+     *  @param script The evaluation of m_subdescriptor_arg (or nullptr when m_subdescriptor_arg is nullptr).\n      *  @param out A FlatSigningProvider to put scripts or public keys in that are necessary to the solver.\n      *             The script and pubkeys argument to this function are automatically added.\n      *  @return A vector with scriptPubKeys for this descriptor.\n      */\n     virtual std::vector<CScript> MakeScripts(const std::vector<CPubKey>& pubkeys, const CScript* script, FlatSigningProvider& out) const = 0;\n \n public:\n-    DescriptorImpl(std::vector<std::unique_ptr<PubkeyProvider>> pubkeys, std::unique_ptr<DescriptorImpl> script, const std::string& name) : m_pubkey_args(std::move(pubkeys)), m_script_arg(std::move(script)), m_name(name) {}\n+    DescriptorImpl(std::vector<std::unique_ptr<PubkeyProvider>> pubkeys, std::unique_ptr<DescriptorImpl> script, const std::string& name) : m_pubkey_args(std::move(pubkeys)), m_subdescriptor_arg(std::move(script)), m_name(name) {}\n \n     bool IsSolvable() const override\n     {\n-        if (m_script_arg) {\n-            if (!m_script_arg->IsSolvable()) return false;\n+        if (m_subdescriptor_arg) {\n+            if (!m_subdescriptor_arg->IsSolvable()) return false;\n         }\n         return true;\n     }\n@@ -247,8 +247,8 @@ class DescriptorImpl : public Descriptor\n         for (const auto& pubkey : m_pubkey_args) {\n             if (pubkey->IsRange()) return true;\n         }\n-        if (m_script_arg) {\n-            if (m_script_arg->IsRange()) return true;\n+        if (m_subdescriptor_arg) {\n+            if (m_subdescriptor_arg->IsRange()) return true;\n         }\n         return false;\n     }\n@@ -268,10 +268,10 @@ class DescriptorImpl : public Descriptor\n             }\n             ret += std::move(tmp);\n         }\n-        if (m_script_arg) {\n+        if (m_subdescriptor_arg) {\n             if (pos++) ret += \",\";\n             std::string tmp;\n-            if (!m_script_arg->ToStringHelper(arg, tmp, priv)) return false;\n+            if (!m_subdescriptor_arg->ToStringHelper(arg, tmp, priv)) return false;\n             ret += std::move(tmp);\n         }\n         out = std::move(ret) + \")\";\n@@ -311,9 +311,9 @@ class DescriptorImpl : public Descriptor\n             }\n         }\n         std::vector<CScript> subscripts;\n-        if (m_script_arg) {\n+        if (m_subdescriptor_arg) {\n             FlatSigningProvider subprovider;\n-            if (!m_script_arg->ExpandHelper(pos, arg, cache_read, subscripts, subprovider, cache_write)) return false;\n+            if (!m_subdescriptor_arg->ExpandHelper(pos, arg, cache_read, subscripts, subprovider, cache_write)) return false;\n             out = Merge(out, subprovider);\n         }\n \n@@ -324,7 +324,7 @@ class DescriptorImpl : public Descriptor\n             out.origins.emplace(entry.first.GetID(), std::move(entry.second));\n             out.pubkeys.emplace(entry.first.GetID(), entry.first);\n         }\n-        if (m_script_arg) {\n+        if (m_subdescriptor_arg) {\n             for (const auto& subscript : subscripts) {\n                 out.scripts.emplace(CScriptID(subscript), subscript);\n                 std::vector<CScript> addscripts = MakeScripts(pubkeys, &subscript, out);"
      }
    ]
  },
  {
    "sha": "2e68ffaf205866e4cea71f64e79bbfb89e17280a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZTY4ZmZhZjIwNTg2NmU0Y2VhNzFmNjRlNzliYmZiODllMTcyODBh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-12-12T09:08:08Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-01-29T15:55:45Z"
      },
      "message": "[doc] descriptor: explain GetPubKey() usage with cached public key\n\nPlus a few typo fixes.",
      "tree": {
        "sha": "92e743f148d366a8a124bf8155791a37ace6b968",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92e743f148d366a8a124bf8155791a37ace6b968"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e68ffaf205866e4cea71f64e79bbfb89e17280a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlxQd4IACgkQV/+b28ww\nEAlA9w//Rv76vPtqsEe2KRgJz5NJmw0YI4Zy/12zkUW3w0Oh0wvvXHVIHcRnZFWk\nGGlC00H9o8zAFtIldWVrh04ncqTSYuhjq/XdJPrPqSg1dCh2p6ddTIa+Fo4J9tPv\nueuzSOiUWT2HC8VnwMOZ2zmE13tZ1v40U8BId5k0Yi8ox64lSwGuPpc3XdDxOtZi\nu3CvRF3FV1tINO8PSkaZrqkuMzd3CP9uv79PiPu69WMbwlpc058bJpgDgUVmz9uH\n+Q3hroASXSqxx/Av3uIbRcPlPktM0IQ0IvOQGHgnWPoswcKz1VH9YskY3xg09i//\nXrQq+FjhAtymL54QZTSJpGJ2NS9XctK713qNT3IE6dnR8veWiZFAB9DNWhxziBL7\nKuSfSh0v8oeVLOUdQjstW6n/UoXXLzK8y1IAXGuys/285XUgpawml5Xgeras/bx8\naY9q1FFNCHVIySvFU4BcY52FBngvpmDr+VO+IxRV8kifoZjX0Y38/SYEnP6hDLao\nUVtJDQw4P6LlP6DKJAYy6kBWZBruggJpHdblHntvZipckEQud/lWJA+CU18JuMKK\nV8+l/94CTcKTjsa03jxkiWJ/O6hK1f2O1z5YY+turGNloE/oEDNVFg7O1seBKGeN\n42yYkQ8L1fmEdhHTLjgzQLguFXvdTFGsfmNhBsmLpSXTDAbhxvA=\n=plUv\n-----END PGP SIGNATURE-----",
        "payload": "tree 92e743f148d366a8a124bf8155791a37ace6b968\nparent 2290269759ad10cc2e35958c7b0a63f3a7608621\nauthor Sjors Provoost <sjors@sprovoost.nl> 1544605688 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1548777345 +0100\n\n[doc] descriptor: explain GetPubKey() usage with cached public key\n\nPlus a few typo fixes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e68ffaf205866e4cea71f64e79bbfb89e17280a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e68ffaf205866e4cea71f64e79bbfb89e17280a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e68ffaf205866e4cea71f64e79bbfb89e17280a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2290269759ad10cc2e35958c7b0a63f3a7608621",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2290269759ad10cc2e35958c7b0a63f3a7608621",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2290269759ad10cc2e35958c7b0a63f3a7608621"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "96cd93df5a596f7a39cadd3d3b2593da67125490",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e68ffaf205866e4cea71f64e79bbfb89e17280a/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e68ffaf205866e4cea71f64e79bbfb89e17280a/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=2e68ffaf205866e4cea71f64e79bbfb89e17280a",
        "patch": "@@ -207,9 +207,11 @@ class BIP32PubkeyProvider final : public PubkeyProvider\n /** Base class for all Descriptor implementations. */\n class DescriptorImpl : public Descriptor\n {\n-    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size of Multisig).\n+    //! Public key arguments for this descriptor (size 1 for PK, PKH, WPKH; any size for Multisig).\n     const std::vector<std::unique_ptr<PubkeyProvider>> m_pubkey_args;\n     //! The sub-descriptor argument (nullptr for everything but SH and WSH).\n+    //! In doc/descriptors.m this is referred to as SCRIPT expressions sh(SCRIPT)\n+    //! and wsh(SCRIPT), and distinct from KEY expressions and ADDR expressions.\n     const std::unique_ptr<DescriptorImpl> m_subdescriptor_arg;\n     //! The string name of the descriptor function.\n     const std::string m_name;\n@@ -295,6 +297,8 @@ class DescriptorImpl : public Descriptor\n         // Construct temporary data in `entries` and `subscripts`, to avoid producing output in case of failure.\n         for (const auto& p : m_pubkey_args) {\n             entries.emplace_back();\n+            // If we have a cache, we don't need GetPubKey to compute the public key.\n+            // Pass in nullptr to signify only origin info is desired.\n             if (!p->GetPubKey(pos, arg, cache_read ? nullptr : &entries.back().first, entries.back().second)) return false;\n             if (cache_read) {\n                 // Cached expanded public key exists, use it."
      },
      {
        "sha": "2be157b86174cfd17b72aee69a972561478b1f9e",
        "filename": "src/script/descriptor.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e68ffaf205866e4cea71f64e79bbfb89e17280a/src/script/descriptor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e68ffaf205866e4cea71f64e79bbfb89e17280a/src/script/descriptor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.h?ref=2e68ffaf205866e4cea71f64e79bbfb89e17280a",
        "patch": "@@ -46,17 +46,17 @@ struct Descriptor {\n      *\n      * pos: the position at which to expand the descriptor. If IsRange() is false, this is ignored.\n      * provider: the provider to query for private keys in case of hardened derivation.\n-     * output_script: the expanded scriptPubKeys will be put here.\n+     * output_scripts: the expanded scriptPubKeys will be put here.\n      * out: scripts and public keys necessary for solving the expanded scriptPubKeys will be put here (may be equal to provider).\n-     * cache: vector which will be overwritten with cache data necessary to-evaluate the descriptor at this point without access to private keys.\n+     * cache: vector which will be overwritten with cache data necessary to evaluate the descriptor at this point without access to private keys.\n      */\n     virtual bool Expand(int pos, const SigningProvider& provider, std::vector<CScript>& output_scripts, FlatSigningProvider& out, std::vector<unsigned char>* cache = nullptr) const = 0;\n \n     /** Expand a descriptor at a specified position using cached expansion data.\n      *\n      * pos: the position at which to expand the descriptor. If IsRange() is false, this is ignored.\n      * cache: vector from which cached expansion data will be read.\n-     * output_script: the expanded scriptPubKeys will be put here.\n+     * output_scripts: the expanded scriptPubKeys will be put here.\n      * out: scripts and public keys necessary for solving the expanded scriptPubKeys will be put here (may be equal to provider).\n      */\n     virtual bool ExpandFromCache(int pos, const std::vector<unsigned char>& cache, std::vector<CScript>& output_scripts, FlatSigningProvider& out) const = 0;"
      }
    ]
  }
]