fanquake,2018-12-12T09:12:33Z,Might as well fixup the other (trivial) [nits](https://github.com/bitcoin/bitcoin/pull/14646#pullrequestreview-183028560).,https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-446515501,446515501,
Sjors,2018-12-12T09:16:06Z,"@fanquake done, I snuck those into the second commit. ",https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-446516542,446516542,
DrahtBot,2018-12-12T10:52:30Z,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-446545462,446545462,
laanwj,2019-01-22T12:25:26Z,"Ping @sipa, as this is your code it'd help if you give your opinion on this.",https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-456381393,456381393,
meshcollider,2019-01-26T19:44:23Z,"`m_script_arg` refers to the defined `SCRIPT` in the descriptor doc, to make it distinct from `KEY` or `ADDR`. But subdescriptor is also a clear name so I have no strong preference either way. ",https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-457859466,457859466,
Sjors,2019-01-29T15:32:02Z,"Rebased.\n\n@MeshCollider I added a comment referencing `SCRIPT` in the descriptor docs.\n\nBy the way, I noticed that neither `DescriptorImpl` nor `m_subdescriptor_arg` show up in the docs, not even in the docs for `script/descriptor.cpp`. I don't understand Doxygen well enough to know if that's a feature (i.e. because these functions are private).",https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-458584267,458584267,
Sjors,2019-02-21T17:32:54Z,Miraculously this doesn't need another rebase...,https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-466091470,466091470,
practicalswift,2019-03-15T16:36:15Z,FWIW: I've verified that a disassembly of the `bitcoind` binary built with this patch applied is identical to a disassembly of the `bitcoind` binary built against `master` (as expected).,https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-473356572,473356572,
laanwj,2019-08-14T11:30:07Z,ACK 2e68ffaf205866e4cea71f64e79bbfb89e17280a,https://github.com/bitcoin/bitcoin/pull/14934#issuecomment-521208436,521208436,
flack,2018-12-12T11:01:27Z,Typo: `nullprt`,https://github.com/bitcoin/bitcoin/pull/14934#discussion_r240969251,240969251,src/script/descriptor.cpp
Sjors,2018-12-12T11:22:53Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14934#discussion_r240975609,240975609,src/script/descriptor.cpp
sipa,2019-01-27T00:12:26Z,"""should not"" sounds like it should be prohibited from computing the pubkey.\n\nWhat about ""If we have a cache, we don't need GetPubKey to compute the public key. Pass in nullptr to signify only origin info is desired."".",https://github.com/bitcoin/bitcoin/pull/14934#discussion_r251217004,251217004,src/script/descriptor.cpp
Sjors,2019-01-29T15:15:04Z,Done,https://github.com/bitcoin/bitcoin/pull/14934#discussion_r251875375,251875375,src/script/descriptor.cpp
