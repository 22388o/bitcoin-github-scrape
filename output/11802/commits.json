[
  {
    "sha": "38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGVmZDIyMGM0MTQyY2ZlMTEyMzhjZjE3Y2NiNDVkNGViNWY2YmZj",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-11-30T19:59:17Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-11-30T20:30:45Z"
      },
      "message": "RPC/Wallet: Refuse to dumpprivkey for derived addresses\n\nThe specific ECDSA \"private key\" of a derived key is merely a midstate of the signature algorithm. It doesn't really make sense to dump it.",
      "tree": {
        "sha": "7d45e9bf0501602aa863aeac44d87a2c48e72a7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d45e9bf0501602aa863aeac44d87a2c48e72a7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "961901f77e55aa07d5048000d57bcd218ae74b08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/961901f77e55aa07d5048000d57bcd218ae74b08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/961901f77e55aa07d5048000d57bcd218ae74b08"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0e1fcf59fb10d21721d0ae157fbc04e1b6bf4548",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
        "patch": "@@ -578,6 +578,9 @@ UniValue dumpprivkey(const JSONRPCRequest& request)\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n     }\n+    if (pwallet->IsKeyDerived(dest)) {\n+        throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to a key (derived)\");\n+    }\n     const CKeyID *keyID = boost::get<CKeyID>(&dest);\n     if (!keyID) {\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to a key\");"
      },
      {
        "sha": "2e94331d938df4438f7eb711d1c5816cb5e99fa5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
        "patch": "@@ -3586,6 +3586,20 @@ void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts) const\n \n /** @} */ // end of Actions\n \n+bool CWallet::IsKeyDerived(const CTxDestination& txdest) const {\n+    AssertLockHeld(cs_wallet); // mapKeyMetadata\n+\n+    const auto it = mapKeyMetadata.find(txdest);\n+    if (it == mapKeyMetadata.end()) {\n+        return false;\n+    }\n+    const CKeyMetadata& meta = it->second;\n+    if (meta.hdKeypath.empty() || meta.hdKeypath == \"m\") {\n+        return false;\n+    }\n+    return true;\n+}\n+\n void CWallet::GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) const {\n     AssertLockHeld(cs_wallet); // mapKeyMetadata\n     mapKeyBirth.clear();"
      },
      {
        "sha": "6f7427921a8cfefb1c29f222cd57f45eb2bf50c8",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38efd220c4142cfe11238cf17ccb45d4eb5f6bfc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=38efd220c4142cfe11238cf17ccb45d4eb5f6bfc",
        "patch": "@@ -899,6 +899,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     bool ChangeWalletPassphrase(const SecureString& strOldWalletPassphrase, const SecureString& strNewWalletPassphrase);\n     bool EncryptWallet(const SecureString& strWalletPassphrase);\n \n+    bool IsKeyDerived(const CTxDestination&) const;\n     void GetKeyBirthTimes(std::map<CTxDestination, int64_t> &mapKeyBirth) const;\n     unsigned int ComputeTimeSmart(const CWalletTx& wtx) const;\n "
      }
    ]
  }
]