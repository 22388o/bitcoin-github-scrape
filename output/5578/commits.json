[
  {
    "sha": "4f1ee565b5669fece4178d590f37a577c4062420",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjFlZTU2NWI1NjY5ZmVjZTQxNzhkNTkwZjM3YTU3N2M0MDYyNDIw",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2014-12-30T22:02:46Z"
      },
      "committer": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2014-12-30T22:02:46Z"
      },
      "message": "Clean AcceptToMemoryPool error messages",
      "tree": {
        "sha": "1382238514a84c33ad07a270aaf28553d6a62d0c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1382238514a84c33ad07a270aaf28553d6a62d0c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f1ee565b5669fece4178d590f37a577c4062420",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f1ee565b5669fece4178d590f37a577c4062420",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f1ee565b5669fece4178d590f37a577c4062420",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f1ee565b5669fece4178d590f37a577c4062420/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f9c571aad8261eb9a5cab9dce5b490bd253c5fe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f9c571aad8261eb9a5cab9dce5b490bd253c5fe1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f9c571aad8261eb9a5cab9dce5b490bd253c5fe1"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "0e199fe6035ba4620032052ee63255388a1b9d14",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f1ee565b5669fece4178d590f37a577c4062420/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f1ee565b5669fece4178d590f37a577c4062420/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4f1ee565b5669fece4178d590f37a577c4062420",
        "patch": "@@ -926,11 +926,11 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         *pfMissingInputs = false;\n \n     if (!CheckTransaction(tx, state))\n-        return error(\"AcceptToMemoryPool: : CheckTransaction failed\");\n+        return error(\"AcceptToMemoryPool: CheckTransaction failed\");\n \n     // Coinbase is only valid in a block, not as a loose transaction\n     if (tx.IsCoinBase())\n-        return state.DoS(100, error(\"AcceptToMemoryPool: : coinbase as individual tx\"),\n+        return state.DoS(100, error(\"AcceptToMemoryPool: coinbase as individual tx\"),\n                          REJECT_INVALID, \"coinbase\");\n \n     // Rather not work on nonstandard transactions (unless -testnet/-regtest)\n@@ -1000,7 +1000,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Check for non-standard pay-to-script-hash in inputs\n         if (Params().RequireStandard() && !AreInputsStandard(tx, view))\n-            return error(\"AcceptToMemoryPool: : nonstandard transaction input\");\n+            return error(\"AcceptToMemoryPool: nonstandard transaction input\");\n \n         // Check that the transaction doesn't have an excessive number of\n         // sigops, making it impossible to mine. Since the coinbase transaction\n@@ -1076,7 +1076,7 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         // can be exploited as a DoS attack.\n         if (!CheckInputs(tx, state, view, true, MANDATORY_SCRIPT_VERIFY_FLAGS, true))\n         {\n-            return error(\"AcceptToMemoryPool: : BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n+            return error(\"AcceptToMemoryPool: BUG! PLEASE REPORT THIS! ConnectInputs failed against MANDATORY but not STANDARD flags %s\", hash.ToString());\n         }\n \n         // Store transaction in memory"
      }
    ]
  }
]