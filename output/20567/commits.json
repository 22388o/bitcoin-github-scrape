[
  {
    "sha": "34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGM4MGQ5ZWVlN2QyMTc1NWYyYmI4MGY3Yzk3ZmQzMGQyYzdiNjU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-04T08:33:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-12-04T08:36:17Z"
      },
      "message": "test: Add option to git-subtree-check to do full check, add help\n\nThis adds a brief help text to `git-subtree-check.sh` and adds and an\noption to do a full remote check instead of having two different code\npaths with a successful exit status. Also make it explicit that the CI\nis not doing this.",
      "tree": {
        "sha": "45897c93a0f53ba7fac1f421e1ecfc6b7094e19b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45897c93a0f53ba7fac1f421e1ecfc6b7094e19b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2ae6a2befad6158286e498f013e136e21e8b4f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2ae6a2befad6158286e498f013e136e21e8b4f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2ae6a2befad6158286e498f013e136e21e8b4f0"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 58,
      "deletions": 16
    },
    "files": [
      {
        "sha": "6f81ecb22e7a11a681d2c9ef4e4b68c29f4aa84c",
        "filename": "ci/lint/06_script.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/ci/lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/ci/lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/06_script.sh?ref=34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
        "patch": "@@ -14,6 +14,8 @@ if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then\n   test/lint/commit-script-check.sh $COMMIT_RANGE\n fi\n \n+# This only checks that the trees are pure subtrees, it is not doing a full\n+# check with -r to not have to fetch all the remotes.\n test/lint/git-subtree-check.sh src/crypto/ctaes\n test/lint/git-subtree-check.sh src/secp256k1\n test/lint/git-subtree-check.sh src/univalue"
      },
      {
        "sha": "7e0630834795dd2631812783013933f25c96e229",
        "filename": "test/lint/README.md",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/test/lint/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/test/lint/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/README.md?ref=34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
        "patch": "@@ -15,7 +15,16 @@ git-subtree-check.sh\n Run this script from the root of the repository to verify that a subtree matches the contents of\n the commit it claims to have been updated to.\n \n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n+```\n+Usage: test/lint/git-subtree-check.sh [-r] DIR [COMMIT]\n+       test/lint/git-subtree-check.sh -?\n+```\n+\n+- `DIR` is the prefix within the repository to check.\n+- `COMMIT` is the commit to check, if it is not provided, HEAD will be used.\n+- `-r` checks that subtree commit is present in repository.\n+\n+To do a full check with `-r`, make sure that you have fetched the upstream repository branch in which the subtree is\n maintained:\n * for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n * for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n@@ -29,10 +38,6 @@ To do so, add the upstream repository as remote:\n git remote add --fetch secp256k1 https://github.com/bitcoin-core/secp256k1.git\n ```\n \n-Usage: `git-subtree-check.sh DIR (COMMIT)`\n-\n-`COMMIT` may be omitted, in which case `HEAD` is used.\n-\n lint-all.sh\n ===========\n Calls other scripts with the `lint-` prefix."
      },
      {
        "sha": "46aa6e715725eb58c8d78d0abc78dd9217130f40",
        "filename": "test/lint/git-subtree-check.sh",
        "status": "modified",
        "additions": 46,
        "deletions": 11,
        "changes": 57,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/test/lint/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34c80d9eee7d21755f2bb80f7c97fd30d2c7b656/test/lint/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/git-subtree-check.sh?ref=34c80d9eee7d21755f2bb80f7c97fd30d2c7b656",
        "patch": "@@ -4,6 +4,39 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n+\n+check_remote=0\n+while getopts \"?hr\" opt; do\n+  case $opt in\n+    '?' | h)\n+      echo \"Usage: $0 [-r] DIR [COMMIT]\"\n+      echo \"       $0 -?\"\n+      echo \"\"\n+      echo \"Checks that a certain prefix is pure subtree, and optionally whether the\"\n+      echo \"referenced commit is present in any fetched remote.\"\n+      echo \"\"\n+      echo \"DIR is the prefix within the repository to check.\"\n+      echo \"COMMIT is the commit to check, if it is not provided, HEAD will be used.\"\n+      echo \"\"\n+      echo \"-r      Check that subtree commit is present in repository.\"\n+      echo \"        To do this check, fetch the subtreed remote first. Example:\"\n+      echo \"\"\n+      echo \"            git fetch https://github.com/bitcoin-core/secp256k1.git\"\n+      echo \"            test/lint/git-subtree-check.sh -r src/secp256k1\"\n+      exit 1\n+    ;;\n+    r)\n+      check_remote=1\n+    ;;\n+  esac\n+done\n+shift $((OPTIND-1))\n+\n+if [ -z \"$1\" ]; then\n+    echo \"Need to provide a DIR, see $0 -?\"\n+    exit 1\n+fi\n+\n # Strip trailing / from directory path (in case it was added by autocomplete)\n DIR=\"${1%/}\"\n COMMIT=\"$2\"\n@@ -79,18 +112,20 @@ if [ \"$tree_actual_tree\" != \"$tree_commit\" ]; then\n     exit 1\n fi\n \n-# get the tree in the subtree commit referred to\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"subtree commit $rev unavailable: cannot compare. Did you add and fetch the remote?\" >&2\n-    exit\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n+if [ \"$check_remote\" != \"0\" ]; then\n+    # get the tree in the subtree commit referred to\n+    if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n+        echo \"subtree commit $rev unavailable: cannot compare. Did you add and fetch the remote?\" >&2\n+        exit 1\n+    fi\n+    tree_subtree=$(git show -s --format=\"%T\" $rev)\n+    echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n \n-# ... and compare the actual tree with it\n-if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    echo \"FAIL: subtree update commit differs from upstream tree!\" >&2\n-    exit 1\n+    # ... and compare the actual tree with it\n+    if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n+        echo \"FAIL: subtree update commit differs from upstream tree!\" >&2\n+        exit 1\n+    fi\n fi\n \n echo \"GOOD\""
      }
    ]
  }
]