[
  {
    "sha": "b260aade80574fc618eb1e6407df683492ded0c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjYwYWFkZTgwNTc0ZmM2MThlYjFlNjQwN2RmNjgzNDkyZGVkMGMx",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-08-31T19:32:23Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-08-31T19:57:41Z"
      },
      "message": "Separate data from checkpoints.cpp",
      "tree": {
        "sha": "0816a966d7a6dadbf2b141eae88fe59266f2fa28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0816a966d7a6dadbf2b141eae88fe59266f2fa28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b260aade80574fc618eb1e6407df683492ded0c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b260aade80574fc618eb1e6407df683492ded0c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b260aade80574fc618eb1e6407df683492ded0c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b260aade80574fc618eb1e6407df683492ded0c1/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9f3d47677973cb894fdbb437b9b322e2062a1bf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9f3d47677973cb894fdbb437b9b322e2062a1bf1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9f3d47677973cb894fdbb437b9b322e2062a1bf1"
      }
    ],
    "stats": {
      "total": 137,
      "additions": 76,
      "deletions": 61
    },
    "files": [
      {
        "sha": "1a4ceb058f1c1febc863259ff374dc09d329ef08",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b260aade80574fc618eb1e6407df683492ded0c1/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b260aade80574fc618eb1e6407df683492ded0c1/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b260aade80574fc618eb1e6407df683492ded0c1",
        "patch": "@@ -70,6 +70,7 @@ BITCOIN_CORE_H = \\\n   chainparams.h \\\n   chainparamsbase.h \\\n   chainparamsseeds.h \\\n+  checkpoint_data.h \\\n   checkpoints.h \\\n   checkqueue.h \\\n   clientversion.h \\"
      },
      {
        "sha": "52c4ee9eec260c28a913b27ff1cc658876938e62",
        "filename": "src/checkpoint_data.h",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b260aade80574fc618eb1e6407df683492ded0c1/src/checkpoint_data.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b260aade80574fc618eb1e6407df683492ded0c1/src/checkpoint_data.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoint_data.h?ref=b260aade80574fc618eb1e6407df683492ded0c1",
        "patch": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2009-2013 The Bitcoin developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef H_BITCOIN_CHECKPOINT_DATA\n+#define H_BITCOIN_CHECKPOINT_DATA\n+\n+#include \"uint256.h\"\n+\n+#include <map>\n+\n+#include <boost/assign/list_of.hpp> // for 'map_list_of()'\n+\n+typedef std::map<int, uint256> MapCheckpoints;\n+\n+struct CCheckpointData {\n+    const MapCheckpoints *mapCheckpoints;\n+    int64_t nTimeLastCheckpoint;\n+    int64_t nTransactionsLastCheckpoint;\n+    double fTransactionsPerDay;\n+};\n+\n+// What makes a good checkpoint block?\n+// + Is surrounded by blocks with reasonable timestamps\n+//   (no blocks before with a timestamp after, none after with\n+//    timestamp before)\n+// + Contains no strange transactions\n+static MapCheckpoints mapCheckpoints =\n+    boost::assign::map_list_of\n+    ( 11111, uint256(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n+    ( 33333, uint256(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n+    ( 74000, uint256(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n+    (105000, uint256(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\"))\n+    (134444, uint256(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"))\n+    (168000, uint256(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))\n+    (193000, uint256(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\"))\n+    (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n+    (216116, uint256(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\"))\n+    (225430, uint256(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n+    (250000, uint256(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\"))\n+    (279000, uint256(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\"))\n+    (295000, uint256(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\"))\n+    ;\n+static const CCheckpointData data = {\n+    &mapCheckpoints,\n+    1397080064, // * UNIX timestamp of last checkpoint block\n+    36544669,   // * total number of transactions between genesis and last checkpoint\n+    //   (the tx=... number in the SetBestChain debug.log lines)\n+    60000.0     // * estimated number of transactions per day after checkpoint\n+};\n+\n+static MapCheckpoints mapCheckpointsTestnet =\n+    boost::assign::map_list_of\n+    ( 546, uint256(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\"))\n+    ;\n+static const CCheckpointData dataTestnet = {\n+    &mapCheckpointsTestnet,\n+    1337966069,\n+    1488,\n+    300\n+};\n+\n+static MapCheckpoints mapCheckpointsRegtest =\n+    boost::assign::map_list_of\n+    ( 0, uint256(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n+    ;\n+static const CCheckpointData dataRegtest = {\n+    &mapCheckpointsRegtest,\n+    0,\n+    0,\n+    0\n+};\n+\n+#endif"
      },
      {
        "sha": "acff5e70a66a78302e32aba2e6fffbb382d456fa",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 61,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b260aade80574fc618eb1e6407df683492ded0c1/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b260aade80574fc618eb1e6407df683492ded0c1/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b260aade80574fc618eb1e6407df683492ded0c1",
        "patch": "@@ -4,85 +4,25 @@\n \n #include \"checkpoints.h\"\n \n+#include \"checkpoint_data.h\"\n #include \"main.h\"\n #include \"uint256.h\"\n \n #include <stdint.h>\n \n-#include <boost/assign/list_of.hpp> // for 'map_list_of()'\n #include <boost/foreach.hpp>\n \n namespace Checkpoints {\n \n-    typedef std::map<int, uint256> MapCheckpoints;\n-\n     // How many times we expect transactions after the last checkpoint to\n     // be slower. This number is a compromise, as it can't be accurate for\n     // every system. When reindexing from a fast disk with a slow CPU, it\n     // can be up to 20, while when downloading from a slow network with a\n     // fast multicore CPU, it won't be much higher than 1.\n     static const double SIGCHECK_VERIFICATION_FACTOR = 5.0;\n \n-    struct CCheckpointData {\n-        const MapCheckpoints *mapCheckpoints;\n-        int64_t nTimeLastCheckpoint;\n-        int64_t nTransactionsLastCheckpoint;\n-        double fTransactionsPerDay;\n-    };\n-\n     bool fEnabled = true;\n \n-    // What makes a good checkpoint block?\n-    // + Is surrounded by blocks with reasonable timestamps\n-    //   (no blocks before with a timestamp after, none after with\n-    //    timestamp before)\n-    // + Contains no strange transactions\n-    static MapCheckpoints mapCheckpoints =\n-        boost::assign::map_list_of\n-        ( 11111, uint256(\"0x0000000069e244f73d78e8fd29ba2fd2ed618bd6fa2ee92559f542fdb26e7c1d\"))\n-        ( 33333, uint256(\"0x000000002dd5588a74784eaa7ab0507a18ad16a236e7b1ce69f00d7ddfb5d0a6\"))\n-        ( 74000, uint256(\"0x0000000000573993a3c9e41ce34471c079dcf5f52a0e824a81e7f953b8661a20\"))\n-        (105000, uint256(\"0x00000000000291ce28027faea320c8d2b054b2e0fe44a773f3eefb151d6bdc97\"))\n-        (134444, uint256(\"0x00000000000005b12ffd4cd315cd34ffd4a594f430ac814c91184a0d42d2b0fe\"))\n-        (168000, uint256(\"0x000000000000099e61ea72015e79632f216fe6cb33d7899acb35b75c8303b763\"))\n-        (193000, uint256(\"0x000000000000059f452a5f7340de6682a977387c17010ff6e6c3bd83ca8b1317\"))\n-        (210000, uint256(\"0x000000000000048b95347e83192f69cf0366076336c639f9b7228e9ba171342e\"))\n-        (216116, uint256(\"0x00000000000001b4f4b433e81ee46494af945cf96014816a4e2370f11b23df4e\"))\n-        (225430, uint256(\"0x00000000000001c108384350f74090433e7fcf79a606b8e797f065b130575932\"))\n-        (250000, uint256(\"0x000000000000003887df1f29024b06fc2200b55f8af8f35453d7be294df2d214\"))\n-        (279000, uint256(\"0x0000000000000001ae8c72a0b0c301f67e3afca10e819efa9041e458e9bd7e40\"))\n-        (295000, uint256(\"0x00000000000000004d9b4ef50f0f9d686fd69db2e03af35a100370c64632a983\"))\n-        ;\n-    static const CCheckpointData data = {\n-        &mapCheckpoints,\n-        1397080064, // * UNIX timestamp of last checkpoint block\n-        36544669,   // * total number of transactions between genesis and last checkpoint\n-                    //   (the tx=... number in the SetBestChain debug.log lines)\n-        60000.0     // * estimated number of transactions per day after checkpoint\n-    };\n-\n-    static MapCheckpoints mapCheckpointsTestnet =\n-        boost::assign::map_list_of\n-        ( 546, uint256(\"000000002a936ca763904c3c35fce2f3556c559c0214345d31b1bcebf76acb70\"))\n-        ;\n-    static const CCheckpointData dataTestnet = {\n-        &mapCheckpointsTestnet,\n-        1337966069,\n-        1488,\n-        300\n-    };\n-\n-    static MapCheckpoints mapCheckpointsRegtest =\n-        boost::assign::map_list_of\n-        ( 0, uint256(\"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\"))\n-        ;\n-    static const CCheckpointData dataRegtest = {\n-        &mapCheckpointsRegtest,\n-        0,\n-        0,\n-        0\n-    };\n-\n     const CCheckpointData &Checkpoints() {\n         if (Params().NetworkID() == CBaseChainParams::TESTNET)\n             return dataTestnet;"
      }
    ]
  },
  {
    "sha": "0781bde927f8cbf55693eb63ef4c6ac96886d49f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzgxYmRlOTI3ZjhjYmY1NTY5M2ViNjNlZjRjNmFjOTY4ODZkNDlm",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-08-31T19:56:50Z"
      },
      "committer": {
        "name": "jtimon",
        "email": "jtimon@blockstream.io",
        "date": "2014-08-31T20:40:29Z"
      },
      "message": "Move checkpoint data selection to chainparams",
      "tree": {
        "sha": "c5cc239d6012f5516c69118ed5b2e2aa6690beb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c5cc239d6012f5516c69118ed5b2e2aa6690beb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0781bde927f8cbf55693eb63ef4c6ac96886d49f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0781bde927f8cbf55693eb63ef4c6ac96886d49f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0781bde927f8cbf55693eb63ef4c6ac96886d49f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0781bde927f8cbf55693eb63ef4c6ac96886d49f/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b260aade80574fc618eb1e6407df683492ded0c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b260aade80574fc618eb1e6407df683492ded0c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b260aade80574fc618eb1e6407df683492ded0c1"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 22,
      "deletions": 13
    },
    "files": [
      {
        "sha": "4ea81b0dac0c8ebebab3cc89775205ce7f6a05a7",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=0781bde927f8cbf55693eb63ef4c6ac96886d49f",
        "patch": "@@ -5,6 +5,7 @@\n \n #include \"chainparams.h\"\n \n+#include \"checkpoint_data.h\"\n #include \"random.h\"\n #include \"util.h\"\n \n@@ -117,6 +118,11 @@ class CMainParams : public CChainParams {\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n     }\n+\n+    const CCheckpointData& Checkpoints() const \n+    {\n+        return data;\n+    }\n };\n static CMainParams mainParams;\n \n@@ -172,6 +178,10 @@ class CTestNetParams : public CMainParams {\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n     }\n+    const CCheckpointData& Checkpoints() const \n+    {\n+        return dataTestnet;\n+    }\n };\n static CTestNetParams testNetParams;\n \n@@ -211,6 +221,10 @@ class CRegTestParams : public CTestNetParams {\n         fRequireStandard = false;\n         fMineBlocksOnDemand = true;\n     }\n+    const CCheckpointData& Checkpoints() const \n+    {\n+        return dataRegtest;\n+    }\n };\n static CRegTestParams regTestParams;\n "
      },
      {
        "sha": "af3cd62ce41a7f1f6267e6427083efa448673c8c",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=0781bde927f8cbf55693eb63ef4c6ac96886d49f",
        "patch": "@@ -13,6 +13,8 @@\n \n #include <vector>\n \n+class CCheckpointData;\n+\n typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n struct CDNSSeedData {\n@@ -75,6 +77,7 @@ class CChainParams\n     const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const std::vector<CAddress>& FixedSeeds() const { return vFixedSeeds; }\n+    virtual const CCheckpointData& Checkpoints() const = 0;\n protected:\n     CChainParams() {}\n "
      },
      {
        "sha": "8e71bc568343eaa944d6c8ce988bee8f1b36d154",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 13,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0781bde927f8cbf55693eb63ef4c6ac96886d49f/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=0781bde927f8cbf55693eb63ef4c6ac96886d49f",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"checkpoints.h\"\n \n+#include \"chainparams.h\"\n #include \"checkpoint_data.h\"\n #include \"main.h\"\n #include \"uint256.h\"\n@@ -23,21 +24,12 @@ namespace Checkpoints {\n \n     bool fEnabled = true;\n \n-    const CCheckpointData &Checkpoints() {\n-        if (Params().NetworkID() == CBaseChainParams::TESTNET)\n-            return dataTestnet;\n-        else if (Params().NetworkID() == CBaseChainParams::MAIN)\n-            return data;\n-        else\n-            return dataRegtest;\n-    }\n-\n     bool CheckBlock(int nHeight, const uint256& hash)\n     {\n         if (!fEnabled)\n             return true;\n \n-        const MapCheckpoints& checkpoints = *Checkpoints().mapCheckpoints;\n+        const MapCheckpoints& checkpoints = *Params().Checkpoints().mapCheckpoints;\n \n         MapCheckpoints::const_iterator i = checkpoints.find(nHeight);\n         if (i == checkpoints.end()) return true;\n@@ -57,7 +49,7 @@ namespace Checkpoints {\n         // Work is defined as: 1.0 per transaction before the last checkpoint, and\n         // fSigcheckVerificationFactor per transaction after.\n \n-        const CCheckpointData &data = Checkpoints();\n+        const CCheckpointData &data = Params().Checkpoints();\n \n         if (pindex->nChainTx <= data.nTransactionsLastCheckpoint) {\n             double nCheapBefore = pindex->nChainTx;\n@@ -81,7 +73,7 @@ namespace Checkpoints {\n         if (!fEnabled)\n             return 0;\n \n-        const MapCheckpoints& checkpoints = *Checkpoints().mapCheckpoints;\n+        const MapCheckpoints& checkpoints = *Params().Checkpoints().mapCheckpoints;\n \n         return checkpoints.rbegin()->first;\n     }\n@@ -91,7 +83,7 @@ namespace Checkpoints {\n         if (!fEnabled)\n             return NULL;\n \n-        const MapCheckpoints& checkpoints = *Checkpoints().mapCheckpoints;\n+        const MapCheckpoints& checkpoints = *Params().Checkpoints().mapCheckpoints;\n \n         BOOST_REVERSE_FOREACH(const MapCheckpoints::value_type& i, checkpoints)\n         {"
      }
    ]
  }
]