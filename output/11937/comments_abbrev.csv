Sjors,2017-12-18T16:18:56Z,"If you edit the pull request description, you can change the base branch from `bitcoin:master` to `sipa:201709_segwitwallet2`. That should make review here much easier. Although it might cause Github to move the whole pull request to @sipa's account, which would hurt visibility.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352475918,352475918,
hsjoberg,2017-12-18T16:30:42Z,"@Sjors Yes, I tried to do that but it doesn't seem to be possible.\n\nBut opening a new PR to Wuille's repository should be possible yes.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352479441,352479441,
Sjors,2017-12-18T17:24:11Z,"No problem, it's easy to work around:\n<img width=""712"" alt=""schermafbeelding 2017-12-18 om 18 23 23"" src=""https://user-images.githubusercontent.com/10217/34118906-94c3fa46-e420-11e7-8769-ef3d993ab5ec.png"">",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352495407,352495407,
hsjoberg,2017-12-18T23:37:29Z,"> I suggest moving this the same level as Expert. Alternatively, use a dropdown.\n\n@Sjors @promag The Address type was actually intentionally in the Expert group, but I guess you are right, it makes more sense to have it separately. I will move it.\nWe need good tooltips and description though.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352592598,352592598,
hsjoberg,2017-12-19T00:03:43Z,"> Send tab has a bug: without a restart, the change address will not use newly selected address type (maybe explicitly set -changetype?).\n\n@Sjors Very true, I'll fix this.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352597253,352597253,
hsjoberg,2017-12-19T00:11:19Z,Rebased to fix some of the nits.,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352598523,352598523,
luke-jr,2017-12-19T03:04:07Z,"GUI settings probably shouldn't influence RPC like this, and IMO it should really be exposed per-receive.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352626210,352626210,
Sjors,2017-12-19T09:12:39Z,"@luke-jr wrote:\n>  IMO it should really be exposed per-receive\n\nDo you mean that it should _only_ be exposed per receive (i.e. don't add this setting)?\n\nThat would not be ideal, because the wallet wouldn't use bech32 for change in that case.\n\nIt reveals another problem with this setting: if the user changes the setting and then runs `bitcoind` instead of `bitcoin-qt`, they might expe",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352683404,352683404,
hsjoberg,2017-12-19T17:51:07Z,"> Send tab has a bug: without a restart, the change address will not use newly selected address type (maybe explicitly set -changetype?).\n\n@Sjors Rebased and fixed this.\nRight now, changetype isn't changed if you explicitly set a type it in the configuration file, otherwise it defaults to whatever addresstype option is chosen.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352835364,352835364,
hsjoberg,2017-12-19T17:56:33Z,"> GUI settings probably shouldn't influence RPC like this\n\n@luke-jr Isn't this what GUI settings basically are used for? It seems like most of the settings in the GUI expose different configuration parameters.\n\n> IMO it should really be exposed per-receive.\n\nYes, I guess that makes sense too.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-352836857,352836857,
Sjors,2017-12-22T14:57:20Z,"For a per receive address toggle, see #11991. These PR's are compatible (aside from the usual potential for merge conflicts), so we can use both, either or none.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-353613686,353613686,
jb55,2017-12-30T22:33:12Z,"Hmm after testing this patch over #11991, I think I prefer this one. The toggle seems a bit weird. I don't see why I would ever want to selectively toggle a bech32 address, vs just eventually having it my default when I feel comfortable doing that.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-354572309,354572309,
sipa,2017-12-31T04:07:34Z,@jb55 The only reason for bech32 or not is whether the sender supports bech32 - which I think is something you may want to decide per address.,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-354584167,354584167,
hsjoberg,2017-12-31T13:35:33Z,"Perhaps it makes sense to have both options available. Per receive level and as a global setting.\nIf not, I think @Sjors PR works very well.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-354604146,354604146,
molxyz,2018-01-02T18:59:00Z,"ACK!  I just compiled this PR for Windows. It is beautiful. Really love it.  Will test. \n\n![walletgui-by-coco](https://user-images.githubusercontent.com/21127776/34495853-0a1e972e-efc5-11e7-8cf4-10a1cec80a21.png)\n",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-354847391,354847391,
jonasschnelli,2018-01-04T08:09:22Z,"Nice!\nConcept ACK",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-355221732,355221732,
jonasschnelli,2018-01-11T07:23:03Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-356848093,356848093,
hsjoberg,2018-01-11T08:30:33Z,@jonasschnelli I'll rebase to master as soon as I have time.,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-356861983,356861983,
hsjoberg,2018-01-11T22:22:11Z,"Rebased to master.\nI intend to look at and fix the things that have been pointed out soon.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-357080877,357080877,
hsjoberg,2018-01-16T23:17:31Z,"Addressed some of the issues that have been pointed out as well as the compiling error, sorry for that.\n\nThere are still some outstanding things that need to be addressed, I'll look into them.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-358140269,358140269,
jonasschnelli,2018-01-17T07:09:13Z,"Tested a bit and seems to work.\nWhat worries me is that the code has not the right concurrency protections to have those globals change during run-time. There would be some potential races (rare and often only possible when mixing QT with RPC).\n\nWe can leave this for an follow up PR but I'd prefer the have the right instruments in place before adding runtime ""sets"" on those globals.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-358216854,358216854,
gmaxwell,2018-01-17T11:23:12Z,"I don't see any use case for the three way selection-- it just confronts users with more technical details (complete with gobbltygopy technical terms like P2SH and BIP173 ) which many won't know how to select among.\n\nThe purpose of having the legacy setting is maintaining wallet backwards compatibility.  .. but that's blown out the moment you select either P2SH or BC1 addresses.   What is the ",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-358275646,358275646,
jonasschnelli,2018-01-18T19:48:58Z,"Removing 0.16 milestone since there are some concerns with this PR. Also, seems not to be a blocker for 0.16 (especially since #11991).",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-358761109,358761109,
molxyz,2018-04-25T16:51:12Z,I'm not sure why this PR isn't merged? It makes much more sense to use this so I have been using it as my wallet. Please consider to merge this PR.  Thank you!,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-384356823,384356823,
MarcoFalke,2018-05-23T15:27:45Z,Needs rebase if still relevant. Otherwise I suggest to close.,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-391390094,391390094,
hsjoberg,2018-05-23T15:52:16Z,"@molxyz @MarcoFalke Sorry for the delay.\n\nYes, If there is interest I could continue work on this PR.\n\nThere are some minor outstanding issues (albeit minor) regarding thread safety and other things that I'll look into before merge.\n\nThere doesn't seem to be a clear consensus regarding if we should merge this.\nPersonally I think it makes sense considering we already provide these opt",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-391398977,391398977,
MarcoFalke,2018-05-23T15:59:03Z,"@hsjoberg have you seen #13251? I haven't looked closely at you pull request, but they seem strongly related. And yours might not be relevant after that one has been merged.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-391401321,391401321,
MarcoFalke,2018-05-23T15:59:30Z,"If it is still relevant, please rebase so that it compiles at a minimum. (green travis)",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-391401484,391401484,
DrahtBot,2018-07-29T15:17:38Z,"<!--5d09a71f8925f3f132321140b44b946d-->The last travis run for this pull request was 55 days ago and is thus outdated. To trigger a fresh travis build, this pull request should be closed and re-opened.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-408684653,408684653,
MarcoFalke,2018-07-29T16:13:04Z,"Hmm, I don't think we should expose a ""legacy"" checkbox through the gui. I am missing the use case for that, given that ""bech32"" can already be unchecked.",https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-408688115,408688115,
practicalswift,2018-09-15T07:55:37Z,This PR doesn't compile when rebased on `master` :-),https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-421539420,421539420,
MarcoFalke,2018-09-15T13:31:46Z,Closing for now,https://github.com/bitcoin/bitcoin/pull/11937#issuecomment-421571038,421571038,
Sjors,2017-12-18T17:28:36Z,"Maybe call this ""Native SegWit (bech32, BIP173)""?\n\nCan you also add a description (could be a popover) to explain the difference, explain:\n* not all wallets support this format\n* there are privacy implications for using bech32 while adoption is low, as well as for mixing bech32 and P2SH",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157549030,157549030,src/qt/forms/optionsdialog.ui
Sjors,2017-12-18T17:29:37Z,Do we really want to maintain UI support for legacy addresses? Maybe only show this option if the app was launched with `-addresstype=legacy`?,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157549259,157549259,src/qt/optionsdialog.cpp
promag,2017-12-18T21:19:10Z,"Nit, missing space after `if`, missing `{}`.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157603389,157603389,src/qt/optionsmodel.cpp
promag,2017-12-18T21:19:50Z,"Nit, missing `{}`.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157603544,157603544,src/qt/optionsmodel.cpp
promag,2017-12-18T21:23:00Z,If this is not hit then assert?,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157604224,157604224,src/qt/optionsdialog.cpp
promag,2017-12-18T22:04:30Z,"This is inside Export group box, should be on the outside instead?",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157613496,157613496,src/qt/forms/optionsdialog.ui
hsjoberg,2017-12-18T23:39:16Z,"Hmm, I think it makes more sense to have the GUI options mapped 1:1 to the `addresstype` parameter. Perhaps this could be something to look into later?",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157630656,157630656,src/qt/optionsdialog.cpp
hsjoberg,2017-12-18T23:40:07Z,"Sure, I'll look into that.\nAny suggestions of exactly what the tooltip(s) should say?",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157630769,157630769,src/qt/forms/optionsdialog.ui
hsjoberg,2017-12-18T23:54:38Z,"Hmm I'm not sure if we really need to kill the application, if we cannot resolve an address type, it doesn't necessarily need to be fatal.\n\nI'm not sure what the best practice is here.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157632918,157632918,src/qt/optionsdialog.cpp
hsjoberg,2017-12-18T23:55:25Z,"Thanks, fixing missing space. :)",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157633050,157633050,src/qt/optionsmodel.cpp
hsjoberg,2017-12-18T23:56:32Z,Fixing.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r157633207,157633207,src/qt/forms/optionsdialog.ui
jonasschnelli,2018-01-04T08:05:32Z,I think an assert would be appropriate here (stop the app if address type is unknown to the GUI).,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r159596365,159596365,src/qt/optionsdialog.cpp
jonasschnelli,2018-01-04T08:08:49Z,"Not sure, but I guess changing `g_address_type` and `g_change_type ` needs locking (concurrency), otherwise a race would be possible (unlikely, though possible).",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r159596830,159596830,src/qt/optionsmodel.cpp
jonasschnelli,2018-01-12T06:33:19Z,"Rebase issue, .. should this be `OUTPUT_TYPE_P2SH_SEGWIT`?",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161148906,161148906,src/qt/optionsdialog.cpp
jonasschnelli,2018-01-12T06:34:35Z,"Maybe for constancy reason, change that to `AddressTypeP2SHSegWit`?",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161149029,161149029,src/qt/optionsmodel.h
TheBlueMatt,2018-01-12T17:01:06Z,"Yes, probably, in current code I think its safe just because they're only set at init, setting at runtime is probably a lock bug, but none of the option are good fixes :/",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161274454,161274454,src/qt/optionsmodel.cpp
Sjors,2018-01-12T19:03:00Z,"Nvm, it's fine for a setting, especially combined with the per address checkbox in #11991.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161301285,161301285,src/qt/optionsdialog.cpp
Sjors,2018-01-12T19:13:25Z,"Yes, it won't compile otherwise.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161303390,161303390,src/qt/optionsdialog.cpp
Sjors,2018-01-12T19:31:21Z,"Actually this is not true. It will happily ignore `-addresstype` if you change the setting.\n\nInstead, you should add `addOverriddenOption(""-changetype"");`, since this setting _is_ honored.",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161307184,161307184,src/qt/optionsmodel.cpp
Sjors,2018-01-12T19:37:16Z,`AddressTypeBech32` would be more consistent with `enum OutputType`.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161308404,161308404,src/qt/optionsmodel.h
promag,2018-01-16T02:09:01Z,@hsjoberg ping.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161647642,161647642,src/qt/optionsdialog.cpp
promag,2018-01-16T02:12:33Z,Looks like this code could be factored out to a function? (repeated 3 times),https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161647908,161647908,src/qt/optionsmodel.cpp
promag,2018-01-16T02:16:44Z,Guard with cs_main? Most accesses already held the lock. Fix the remaining.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161648301,161648301,src/qt/optionsmodel.cpp
promag,2018-01-16T02:17:28Z,Agree.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161648347,161648347,src/qt/optionsmodel.h
promag,2018-01-16T02:17:39Z,Agree.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161648368,161648368,src/qt/optionsmodel.h
instagibbs,2018-01-16T18:41:34Z,"prefered(merged) nomenclature is ""P2SH-Segwit""",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161848741,161848741,src/qt/forms/optionsdialog.ui
hsjoberg,2018-01-16T23:13:43Z,"@jonasschnelli Fixed, thanks!",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161915152,161915152,src/qt/optionsdialog.cpp
hsjoberg,2018-01-16T23:13:51Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161915175,161915175,src/qt/optionsmodel.h
hsjoberg,2018-01-16T23:13:59Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161915201,161915201,src/qt/optionsmodel.h
hsjoberg,2018-01-16T23:14:05Z,@instagibbs Fixed.,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161915214,161915214,src/qt/forms/optionsdialog.ui
jonasschnelli,2018-01-17T06:58:52Z,"We do that also at different places... but this makes changing defaults in the future really hard. If we the default for `-addresstype`, QT remains at the old state even if the user hasn't changed the value there...",https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161969139,161969139,src/qt/optionsmodel.cpp
jonasschnelli,2018-01-17T07:00:51Z,We can fix this in a follow up PR (that also fixes the other issues with defaults).,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r161969320,161969320,src/qt/optionsmodel.cpp
MarcoFalke,2018-07-29T16:10:57Z,Why this include?,https://github.com/bitcoin/bitcoin/pull/11937#discussion_r205979306,205979306,src/qt/optionsmodel.h
