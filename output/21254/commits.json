[
  {
    "sha": "fa1b713941f71b077da07e9dedb743c7e99c3ca8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFiNzEzOTQxZjcxYjA3N2RhMDdlOWRlZGI3NDNjN2U5OWMzY2E4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-21T10:01:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-21T10:01:53Z"
      },
      "message": "test: Assume node is running in subtests\n\nEvery (sub)test in the framework assumes the node is running, except for\nthe (sub)tests in this file. Remove that confusion by stopping the node\nat the start of every subtest, instead of at the end.",
      "tree": {
        "sha": "353edfe5632deba3b1c40a1c609cc58ad9facd0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/353edfe5632deba3b1c40a1c609cc58ad9facd0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1b713941f71b077da07e9dedb743c7e99c3ca8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUibZgwAiuKk5Aib4UMATINCbVammJSDToaZuKTmayK+tUmu/+U19ETHmjwI/PCv\nChQmSiYesGNNWpa1rnN837nVvRxgDLzdthS6D8Ih4AtTJFkiCzygqWX52D4S4xVk\nlnwhhivRLmMBdZ9k7AcJhcDBSgxYqUT3Htk5f8UBY3x/GtBefa8yPbnfCCt66klI\n34YHLdFNHHWaTnb+j5h9x7i6/hRcANy6HlBHVTrDGzbsDYgehyLjZ2/zoI77chjT\n705zIeKIPTh5N2exaG1NjmVgzgZKGxSXynBCQznbafzVqoX7/IWPi9obR9k4fBrg\nygcBeO9iEtjCNhW4HLgv8oPeQb5bfBSML85Ie6JI6kul9ehsHgow4/DxEpR3dd27\n3NpJLt4b3iIMr9UEmIx8LzsRhn11JajMkeq0BgwbG9uuyx3Qh8gdWZ5nssPNI5Yo\niIDByYtcq1B7Z3Kexxbt2KhixU+AmonDjzkmq5LaC2GzwkBLdoKyl2k1cT+Hi7zM\nOj93TT7Y\n=CK2N\n-----END PGP SIGNATURE-----",
        "payload": "tree 353edfe5632deba3b1c40a1c609cc58ad9facd0b\nparent 828bb776d29cbdfad3937ba100c428e3244c652f\nauthor MarcoFalke <falke.marco@gmail.com> 1613901680 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1613901713 +0100\n\ntest: Assume node is running in subtests\n\nEvery (sub)test in the framework assumes the node is running, except for\nthe (sub)tests in this file. Remove that confusion by stopping the node\nat the start of every subtest, instead of at the end.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1b713941f71b077da07e9dedb743c7e99c3ca8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1b713941f71b077da07e9dedb743c7e99c3ca8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1b713941f71b077da07e9dedb743c7e99c3ca8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "828bb776d29cbdfad3937ba100c428e3244c652f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/828bb776d29cbdfad3937ba100c428e3244c652f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/828bb776d29cbdfad3937ba100c428e3244c652f"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 10,
      "deletions": 12
    },
    "files": [
      {
        "sha": "e8d55e8be7ee0034ca1f53e40ef416af16822fab",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 10,
        "deletions": 12,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1b713941f71b077da07e9dedb743c7e99c3ca8/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1b713941f71b077da07e9dedb743c7e99c3ca8/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=fa1b713941f71b077da07e9dedb743c7e99c3ca8",
        "patch": "@@ -19,7 +19,7 @@ def set_test_params(self):\n         self.wallet_names = []\n \n     def test_config_file_parser(self):\n-        # Assume node is stopped\n+        self.stop_node(0)\n \n         inc_conf_file_path = os.path.join(self.nodes[0].datadir, 'include.conf')\n         with open(os.path.join(self.nodes[0].datadir, 'bitcoin.conf'), 'a', encoding='utf-8') as conf:\n@@ -89,11 +89,12 @@ def test_invalid_command_line_options(self):\n         )\n \n     def test_log_buffer(self):\n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['Warning: parsed potentially confusing double-negative -connect=0\\n']):\n             self.start_node(0, extra_args=['-noconnect=0'])\n-        self.stop_node(0)\n \n     def test_args_log(self):\n+        self.stop_node(0)\n         self.log.info('Test config args logging')\n         with self.nodes[0].assert_debug_log(\n                 expected_msgs=[\n@@ -120,37 +121,37 @@ def test_args_log(self):\n                 '-rpcuser=secret-rpcuser',\n                 '-torpassword=secret-torpassword',\n             ])\n-        self.stop_node(0)\n \n     def test_networkactive(self):\n         self.log.info('Test -networkactive option')\n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: true\\n']):\n             self.start_node(0)\n-        self.stop_node(0)\n \n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: true\\n']):\n             self.start_node(0, extra_args=['-networkactive'])\n-        self.stop_node(0)\n \n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: true\\n']):\n             self.start_node(0, extra_args=['-networkactive=1'])\n-        self.stop_node(0)\n \n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: false\\n']):\n             self.start_node(0, extra_args=['-networkactive=0'])\n-        self.stop_node(0)\n \n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: false\\n']):\n             self.start_node(0, extra_args=['-nonetworkactive'])\n-        self.stop_node(0)\n \n+        self.stop_node(0)\n         with self.nodes[0].assert_debug_log(expected_msgs=['SetNetworkActive: false\\n']):\n             self.start_node(0, extra_args=['-nonetworkactive=1'])\n-        self.stop_node(0)\n \n     def test_seed_peers(self):\n         self.log.info('Test seed peers')\n         default_data_dir = self.nodes[0].datadir\n+        self.stop_node(0)\n \n         # No peers.dat exists and -dnsseed=1\n         # We expect the node will use DNS Seeds, but Regtest mode has 0 DNS seeds\n@@ -201,12 +202,9 @@ def test_seed_peers(self):\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n                 \"Adding fixed seeds as 60 seconds have passed and addrman is empty\"]):\n             self.nodes[0].setmocktime(start + 65)\n-        self.stop_node(0)\n \n \n     def run_test(self):\n-        self.stop_node(0)\n-\n         self.test_log_buffer()\n         self.test_args_log()\n         self.test_seed_peers()"
      }
    ]
  },
  {
    "sha": "fa730e915766b012ff145e3c2af782668defb21f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTczMGU5MTU3NjZiMDEyZmYxNDVlM2MyYWY3ODI2NjhkZWZiMjFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-21T09:53:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-02-21T10:02:58Z"
      },
      "message": "test: Avoid connecting to real network when running tests\n\nCan be reviewed with --word-diff-regex=.",
      "tree": {
        "sha": "2e6f71d5ffc36402f3d6a39a3d49a23568e0fec8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2e6f71d5ffc36402f3d6a39a3d49a23568e0fec8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa730e915766b012ff145e3c2af782668defb21f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhLKwwAtuQys7rik4pazTGomlzQTLbfoDNN83Krk4y37PwNfzF+mN2hCRxSzto7\ngmKLTvkcXwPkPcF2PowbTc3Rqp6phSv50gpML+3Mvo+tf7g8DUn5dh3PIXODzZRg\nLqm9d9igPVt5TXMLxAksAR12s5sHpFlCyBmfLNAcFtbIG2cRd4enqBF7QHjYJbZV\nByq4YA+XzB9qoxOpSYFvX4a2UtLJ7L0eFEKIxjCs0xUdEymudjj+aImXxTM5jiOV\nV4+hXfDmnjifdnSWXThDVoBtPT8vwicovh6oCIBzQyI8SS1MflCKMJtbKJd09ZuY\nZ8OBN+WxAUrrkAS2wlsOJVDk3o4LdAI9WpN9Q3YFcN2XuRhoMxVESLsVnQLI52yZ\nBJxgDJ6qiEJz/F9pJWasEuMqOaKCKD3KamNSk62QGxXedgMYSYfTzKKR67537CF9\n7PrgxXDAgr4jGtMiPPJXVsuVWU9GeWzIavJicui47dJkiTs/bKM2GiuLWZGz+X8w\nfEOvlvhF\n=zRoy\n-----END PGP SIGNATURE-----",
        "payload": "tree 2e6f71d5ffc36402f3d6a39a3d49a23568e0fec8\nparent fa1b713941f71b077da07e9dedb743c7e99c3ca8\nauthor MarcoFalke <falke.marco@gmail.com> 1613901238 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1613901778 +0100\n\ntest: Avoid connecting to real network when running tests\n\nCan be reviewed with --word-diff-regex=.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa730e915766b012ff145e3c2af782668defb21f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa730e915766b012ff145e3c2af782668defb21f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa730e915766b012ff145e3c2af782668defb21f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1b713941f71b077da07e9dedb743c7e99c3ca8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1b713941f71b077da07e9dedb743c7e99c3ca8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1b713941f71b077da07e9dedb743c7e99c3ca8"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 20,
      "deletions": 10
    },
    "files": [
      {
        "sha": "a0bcd9f12af4e41c782e34b1cb61ac1ab626bee4",
        "filename": "test/functional/feature_config_args.py",
        "status": "modified",
        "additions": 19,
        "deletions": 10,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa730e915766b012ff145e3c2af782668defb21f/test/functional/feature_config_args.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa730e915766b012ff145e3c2af782668defb21f/test/functional/feature_config_args.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_config_args.py?ref=fa730e915766b012ff145e3c2af782668defb21f",
        "patch": "@@ -151,6 +151,10 @@ def test_networkactive(self):\n     def test_seed_peers(self):\n         self.log.info('Test seed peers')\n         default_data_dir = self.nodes[0].datadir\n+        # Only regtest has no fixed seeds. To avoid connections to random\n+        # nodes, regtest is the only network where it is safe to enable\n+        # -fixedseeds in tests\n+        util.assert_equal(self.nodes[0].getblockchaininfo()['chain'],'regtest')\n         self.stop_node(0)\n \n         # No peers.dat exists and -dnsseed=1\n@@ -160,10 +164,12 @@ def test_seed_peers(self):\n         start = int(time.time())\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n                 \"Loaded 0 addresses from peers.dat\",\n-                \"0 addresses found from DNS seeds\"]):\n-            self.start_node(0, extra_args=['-dnsseed=1 -mocktime={}'.format(start)])\n+                \"0 addresses found from DNS seeds\",\n+        ]):\n+            self.start_node(0, extra_args=['-dnsseed=1', '-fixedseeds=1', f'-mocktime={start}'])\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n-                \"Adding fixed seeds as 60 seconds have passed and addrman is empty\"]):\n+                \"Adding fixed seeds as 60 seconds have passed and addrman is empty\",\n+        ]):\n             self.nodes[0].setmocktime(start + 65)\n         self.stop_node(0)\n \n@@ -174,8 +180,9 @@ def test_seed_peers(self):\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n                 \"Loaded 0 addresses from peers.dat\",\n                 \"DNS seeding disabled\",\n-                \"Adding fixed seeds as -dnsseed=0, -addnode is not provided and all -seednode(s) attempted\\n\"]):\n-            self.start_node(0, extra_args=['-dnsseed=0'])\n+                \"Adding fixed seeds as -dnsseed=0, -addnode is not provided and all -seednode(s) attempted\\n\",\n+        ]):\n+            self.start_node(0, extra_args=['-dnsseed=0', '-fixedseeds=1'])\n         assert time.time() - start < 60\n         self.stop_node(0)\n \n@@ -186,7 +193,8 @@ def test_seed_peers(self):\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n                 \"Loaded 0 addresses from peers.dat\",\n                 \"DNS seeding disabled\",\n-                \"Fixed seeds are disabled\"]):\n+                \"Fixed seeds are disabled\",\n+        ]):\n             self.start_node(0, extra_args=['-dnsseed=0', '-fixedseeds=0'])\n         assert time.time() - start < 60\n         self.stop_node(0)\n@@ -197,13 +205,14 @@ def test_seed_peers(self):\n         start = int(time.time())\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n                 \"Loaded 0 addresses from peers.dat\",\n-                \"DNS seeding disabled\"]):\n-            self.start_node(0, extra_args=['-dnsseed=0', '-addnode=fakenodeaddr -mocktime={}'.format(start)])\n+                \"DNS seeding disabled\",\n+        ]):\n+            self.start_node(0, extra_args=['-dnsseed=0', '-fixedseeds=1', '-addnode=fakenodeaddr', f'-mocktime={start}'])\n         with self.nodes[0].assert_debug_log(expected_msgs=[\n-                \"Adding fixed seeds as 60 seconds have passed and addrman is empty\"]):\n+                \"Adding fixed seeds as 60 seconds have passed and addrman is empty\",\n+        ]):\n             self.nodes[0].setmocktime(start + 65)\n \n-\n     def run_test(self):\n         self.test_log_buffer()\n         self.test_args_log()"
      },
      {
        "sha": "d335d4ea79fe9d4e6f2c5124e97f8107cf200c74",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa730e915766b012ff145e3c2af782668defb21f/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa730e915766b012ff145e3c2af782668defb21f/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=fa730e915766b012ff145e3c2af782668defb21f",
        "patch": "@@ -368,6 +368,7 @@ def write_config(config_path, *, n, chain, extra_config=\"\"):\n         f.write(\"keypool=1\\n\")\n         f.write(\"discover=0\\n\")\n         f.write(\"dnsseed=0\\n\")\n+        f.write(\"fixedseeds=0\\n\")\n         f.write(\"listenonion=0\\n\")\n         f.write(\"printtoconsole=0\\n\")\n         f.write(\"upnp=0\\n\")"
      }
    ]
  }
]