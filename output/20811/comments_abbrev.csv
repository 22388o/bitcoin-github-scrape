ajtowns,2020-12-31 06:51:51,"This is the first step of the refactoring proposed in #20758 and just does encapsulation, it doesn't remove any of the globals.\n\nEDIT: Rationale for moving things from the header into cpp files is to:\n\n- reduce compilation times (the code only gets compiled for a single cpp, rather than every cpp that includes the header)\n- reduce churn when updating the implementation (you only need to ",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-752866799,752866799,
DrahtBot,2020-12-31 08:17:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20904 (net: (de)serialize CSubNet in addrv2 format by vasild)\n* #20729 (p2p: standardize on outbound-{full, block}-relay",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-752884973,752884973,
jnewbery,2021-01-01 01:00:38,"Concept ACK. I like this kind of encapsulation a lot.\n\nI'm not sure why the TSAN build is failing with ""WARNING: ThreadSanitizer: double lock of a mutex"". It seems like a false alarm to me. I think it's choking on `std::condition_variable condMsgProc`/`Mutex mutexMsgProc` so maybe it's something similar to https://github.com/google/sanitizers/issues/1259?\n",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753235027,753235027,
jnewbery,2021-01-02 09:49:38,utACK fa6b22736656b207251fabb068d9a3ddd91d1266,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753453403,753453403,
jnewbery,2021-01-03 10:37:12,utACK 7bd4517e5830a09a173d82fe3184acf0bcea06a9,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753597290,753597290,
Sjors,2021-01-03 12:44:42,Would it make sense to move `PeerManager` to its own file (given how much this PR is moving stuff around anyway)?,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753611705,753611705,
jnewbery,2021-01-03 13:30:53,"utACK abeecaa66ed136b3f0b7ff500ae5b592256072a5\n\nThanks for being so responsive to review comments!",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753617551,753617551,
ajtowns,2021-01-03 13:31:47,"Bumped to fix missed indentation.\n\n@Sjors After the further commits in #20758 almost all of net_processing is moved into `PeerManager`, so its effectively a dedicated file anyway. Splitting out sub-components (like orphan handling) into their own modules would be a good next step afterwards, I think.",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-753617650,753617650,
ajtowns,2021-01-06 01:48:01,Rebased for conflict with #20842,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-755022898,755022898,
jnewbery,2021-01-06 09:42:10,utACK 916cfe29656a11592f9eff31219353ff1ac9d564,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-755194604,755194604,
jnewbery,2021-01-07 09:35:09,"I'm not sure if adding the comments to `NetEventsInterface` adds much.\n\nutACK 02f67760d9014b4c963c3c8a57ed5d56de98205d.",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-756000517,756000517,
jnewbery,2021-01-09 13:51:21,ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa,https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-757212348,757212348,
Sjors,2021-01-11 11:50:00,"ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa\n\n> After the further commits in #20758 almost all of net_processing is moved into `PeerManager`, so its effectively a dedicated file anyway. Splitting out sub-components (like orphan handling) into their own modules would be a good next step afterwards, I think.\n\nThat sounds good, because `net_processing.cpp` is almost 5000 lines now, with a who",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-757901480,757901480,
ariard,2021-01-13 02:47:09,"Reviewing this really soon if you're looking for more eyes on it before merge.\n\n",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-759167895,759167895,
laanwj,2021-01-13 08:47:28,"Nice, good thing to have less implementation details in (commonly included) header files.\n\nCode review ACK c97f70c861ac6959b8116a9bca3031edeb2b2aaa\n\n> Reviewing this really soon if you're looking for more eyes on it before merge.\n\nDon't let it being merged keep you from reviewing it please ðŸ˜„ ",https://github.com/bitcoin/bitcoin/pull/20811#issuecomment-759299847,759299847,
MarcoFalke,2021-01-01 11:15:32,"When renaming this, you'll probably also have to rename `mutex:PeerManager::UpdatedBlockTip` in `./test/sanitizer_suppressions/tsan`",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758244,550758244,src/net_processing.cpp
jnewbery,2021-01-01 11:18:18,Perhaps align with opening parens?,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758510,550758510,src/net_processing.h
jnewbery,2021-01-01 11:24:58,Keep alignment with parens,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550758986,550758986,src/net_processing.cpp
jnewbery,2021-01-01 11:33:07,"Adding a new parameter to the ctor now requires updating five locations (`PeerManager::make` declaration, `PeerManager::make` definition signature, `PeerManager::make` function body` `PeerManagerImpl` ctor declaration, `PeerManagerImpl` ctor definition signature.\n\nI wonder if it makes sense to create a `PeerManagerArgs` struct that's passed into the `make()` method and forwarded to the `PeerMa",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550759607,550759607,src/net_processing.cpp
jnewbery,2021-01-01 11:33:48,Feel free to fix alignment while you're touching this function :),https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550759657,550759657,src/net_processing.cpp
jnewbery,2021-01-01 11:58:43,"This only needs to be exposed because of the weird lock ordering requirements documented here: https://github.com/bitcoin/bitcoin/blob/e75f91eae3936269b40b4bfdfe540d5526270936/src/init.cpp#L202-L208. Once tx data is moved into `Peer` and `RelayTransactions()` no longer needs to call `ForEachNode()` and therefore take `cs_vNodes` while holding `g_cs_orphans`, this mutex can be private in net_proces",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550761705,550761705,src/net_processing.h
ajtowns,2021-01-03 02:11:05,I don't think that's relevant for this PR though?,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550944654,550944654,src/net_processing.h
ajtowns,2021-01-03 02:12:36,"Also requires touching everywhere that calls the ctor. Not against it, but doesn't seem like a big win.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550944743,550944743,src/net_processing.cpp
jnewbery,2021-01-03 10:24:25,"Not necessarily if we're passing in arguments with defaults. Anyway, not important here. Can be considered separately.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550986467,550986467,src/net_processing.cpp
jnewbery,2021-01-03 10:24:57,"Correct, this was just an observation about why is required here now.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550986507,550986507,src/net_processing.h
jnewbery,2021-01-03 10:36:59,not resolved,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r550987838,550987838,src/net_processing.cpp
ajtowns,2021-01-03 13:29:08,dammit,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551006305,551006305,src/net_processing.cpp
ajtowns,2021-01-04 03:09:28,"BTW, as part of turning (almost) all of net_processing.cpp into `PeerManagerImpl` methods, we could plausibly remove all the `PeerManagerImpl` declarations by just having net_processing.h start with `namespace { class PeerManagerImpl : public PeerManager {` and end with the closing brackets and the `PeerManager::make` definition -- there's no need to declare class methods before use. That'd remove",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551099132,551099132,src/net_processing.cpp
jnewbery,2021-01-04 10:01:02,"Seems reasonable, although like you say earlier, it's not a big win. Perhaps something for a follow-up once more of #20758 has landed.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r551217966,551217966,src/net_processing.cpp
Sjors,2021-01-06 12:13:11,Are you sure you want to lose all this documentation?,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r552546506,552546506,src/net_processing.h
ajtowns,2021-01-07 02:54:17,Added a commit to move them into `NetEventsInterface`; that makes more of a conflict with #20864 so probably a good idea to get that reviewed and merged first.,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r553080928,553080928,src/net_processing.h
jnewbery,2021-01-07 09:24:35,This comment about the implementation (`mapNodeState`) doesn't make sense in the interface class. Same for `FinalizeNode()` below.,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r553205371,553205371,src/net.h
ajtowns,2021-01-09 06:51:02,"Grr, edited twice, but rebased three times and lost them, I guess. Rebased and edited again.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554301333,554301333,src/net.h
jnewbery,2021-01-09 12:39:03,"I don't think it's a big deal, but if you're going to add these comments to the interface class, I think there are some potential improvements:\n\n- ""queue any initial messages"" is only true for the version message for outbound peers. Since it's not universally true, it probably doesn't belong in the description of the interface.\n- `SendMessages()` return value is not used to indicate if more ",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554422942,554422942,src/net.h
ajtowns,2021-01-09 13:29:23,"`SendMessages` lost its new lock annotation in the rebase, so I've added the doc from `ProcessMessages` return value.\n\nI think ""any initial messages"" covers nothing, just a version message, or anything else we might think up fine. The return value of `SendMessages` is ""used"" in the unit tests, so haven't removed that in this PR. Looking at the `CNode&` thing in #20758",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r554427587,554427587,src/net.h
vasild,2021-01-12 08:59:18,"nit: maybe consider renaming\n`PeerManager` -> `PeerManagerInterface`\n`PeerManagerImpl` -> `PeerManager`\nfor consistency with `CValidationInterface` and `NetEventsInterface`.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555608269,555608269,src/net_processing.h
vasild,2021-01-12 09:06:43,What is the rationale behind this method? It is not like callers can choose which implementation to use. Why not use `std::make_unique<PeerManagerImpl>(...)` in the callers and drop this method?,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555612652,555612652,src/net_processing.cpp
vasild,2021-01-12 09:11:01,"nit:\n```suggestion\n \n```",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555615240,555615240,src/net_processing.cpp
jnewbery,2021-01-12 10:02:14,"`PeerManagerImpl` is only declared in the cpp file, so is not available to the callers.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555650041,555650041,src/net_processing.cpp
jnewbery,2021-01-12 10:17:32,"Same for below L462-464. I don't think this needs to be fixed in this PR. When it is, everything in the second anonymous namespace (L351-462) should be unindented - our style guide says that namespace blocks shouldn't be indented.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555659702,555659702,src/net_processing.cpp
vasild,2021-01-12 10:28:12,Right.,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555666697,555666697,src/net_processing.cpp
ajtowns,2021-01-12 11:54:40,The way I look at it is that `Interface` is for defining a class where some other module is going to implement the methods that do the actual work; but the work to fulfill the `PeerManager` API really is done by net_processing; it's just an implementation detail that the methods are virtual and inheritance is used -- the `unique_ptr<Impl> m_impl;` approach used in txrequest could equally well have,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555716021,555716021,src/net_processing.h
ajtowns,2021-01-12 11:57:03,"See #20758 -- that has patches that move the entries from those namespaces into PeerManager (and thus skips over unindenting them). Certainly could remove the redundant close/open, but it seemed a useful indicator of where the work's up to to me, and it doesn't seem harmful.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r555717316,555717316,src/net_processing.cpp
ariard,2021-01-14 23:13:36,"I think comment here and above should have been updated as ""Overriden from..."" now we have a final class.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557760040,557760040,src/net_processing.h
ariard,2021-01-14 23:24:28,"nit: This param name could be more precise, according to the BIP, the waiver around invalid transactions is restrained to high-bandwidth only, so could be `via_hb_compact_block`.",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557764144,557764144,src/net_processing.cpp
ariard,2021-01-14 23:34:42,Should say PeerManagerImpl now ?,https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557767872,557767872,src/net_processing.cpp
ariard,2021-01-15 00:15:35,"Could have been better to comment in commit message the re-ordering logic followed ""Move method exposed for test-only at the end of public method space declaration"" :) ?",https://github.com/bitcoin/bitcoin/pull/20811#discussion_r557781816,557781816,src/net_processing.h
