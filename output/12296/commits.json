[
  {
    "sha": "718f05cab5fe632c5dc4e3c689d5e4cd51331089",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MThmMDVjYWI1ZmU2MzJjNWRjNGUzYzY4OWQ1ZTRjZDUxMzMxMDg5",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-01-23T18:57:10Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-01-23T19:50:37Z"
      },
      "message": "move more bumpfee prechecks to feebumper::PreconditionChecks",
      "tree": {
        "sha": "20e4c6afd905aff0beb5afab5bb343471a300399",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20e4c6afd905aff0beb5afab5bb343471a300399"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/718f05cab5fe632c5dc4e3c689d5e4cd51331089",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/718f05cab5fe632c5dc4e3c689d5e4cd51331089",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/718f05cab5fe632c5dc4e3c689d5e4cd51331089",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/718f05cab5fe632c5dc4e3c689d5e4cd51331089/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5e4b9b5100ec15217d43edb5f4149439f4b20a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5e4b9b5100ec15217d43edb5f4149439f4b20a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5e4b9b5100ec15217d43edb5f4149439f4b20a5"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 20,
      "deletions": 17
    },
    "files": [
      {
        "sha": "e78095bf74c0ac985ef4b8bb97d0c7d0cf3315f5",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 17,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/718f05cab5fe632c5dc4e3c689d5e4cd51331089/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/718f05cab5fe632c5dc4e3c689d5e4cd51331089/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=718f05cab5fe632c5dc4e3c689d5e4cd51331089",
        "patch": "@@ -65,6 +65,25 @@ static feebumper::Result PreconditionChecks(const CWallet* wallet, const CWallet\n         errors.push_back(\"Transaction has been mined, or is conflicted with a mined transaction\");\n         return feebumper::Result::WALLET_ERROR;\n     }\n+\n+    if (!SignalsOptInRBF(*wtx.tx)) {\n+        errors.push_back(\"Transaction is not BIP 125 replaceable\");\n+        return feebumper::Result::WALLET_ERROR;\n+    }\n+\n+    if (wtx.mapValue.count(\"replaced_by_txid\")) {\n+        errors.push_back(strprintf(\"Cannot bump transaction %s which was already bumped by transaction %s\", wtx.GetHash().ToString(), wtx.mapValue.at(\"replaced_by_txid\")));\n+        return feebumper::Result::WALLET_ERROR;\n+    }\n+\n+    // check that original tx consists entirely of our inputs\n+    // if not, we can't bump the fee, because the wallet has no way of knowing the value of the other inputs (thus the fee)\n+    if (!wallet->IsAllFromMe(*wtx.tx, ISMINE_SPENDABLE)) {\n+        errors.push_back(\"Transaction contains inputs that don't belong to this wallet\");\n+        return feebumper::Result::WALLET_ERROR;\n+    }\n+\n+\n     return feebumper::Result::OK;\n }\n \n@@ -94,23 +113,6 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         return result;\n     }\n \n-    if (!SignalsOptInRBF(*wtx.tx)) {\n-        errors.push_back(\"Transaction is not BIP 125 replaceable\");\n-        return Result::WALLET_ERROR;\n-    }\n-\n-    if (wtx.mapValue.count(\"replaced_by_txid\")) {\n-        errors.push_back(strprintf(\"Cannot bump transaction %s which was already bumped by transaction %s\", txid.ToString(), wtx.mapValue.at(\"replaced_by_txid\")));\n-        return Result::WALLET_ERROR;\n-    }\n-\n-    // check that original tx consists entirely of our inputs\n-    // if not, we can't bump the fee, because the wallet has no way of knowing the value of the other inputs (thus the fee)\n-    if (!wallet->IsAllFromMe(*wtx.tx, ISMINE_SPENDABLE)) {\n-        errors.push_back(\"Transaction contains inputs that don't belong to this wallet\");\n-        return Result::WALLET_ERROR;\n-    }\n-\n     // figure out which output was change\n     // if there was no change output or multiple change outputs, fail\n     int nOutput = -1;\n@@ -228,6 +230,7 @@ Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoin\n         }\n     }\n \n+\n     return Result::OK;\n }\n "
      }
    ]
  },
  {
    "sha": "faca18dcf499e36069ce5fcd3e02a5ee86639436",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWNhMThkY2Y0OTllMzYwNjljZTVmY2QzZTAyYTVlZTg2NjM5NDM2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-29T23:25:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-29T23:31:33Z"
      },
      "message": "feebumper: Use PreconditionChecks to determine bump eligibility",
      "tree": {
        "sha": "5d720fffafaeced0b3f8551900e53747a8f30d0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d720fffafaeced0b3f8551900e53747a8f30d0b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faca18dcf499e36069ce5fcd3e02a5ee86639436",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABAgAGBQJab67VAAoJEM4rdWl+aaVISH8L/itbLwhzyRZVf373otBiEhyD\nHP6PH7cU6lwl9edPHWBlB2GJT8x3mUDTyykJnLd7Hdw1O/QVZwQJ1lL6vuN0s2gg\nLsA+74Eap8ACCQDDeO314/qypvzi0MN5Rj6H76kxi5nK13ILq/9NxBGj3olkRilw\n2qiYKOljZLUhQnxn/3D+lW1AvRh1AFTxf2Jh/LywovgL+xSkoFOTw+ZvUtK3gBFG\nk7+soxNTkhmMk3M5G5fiaiHwa7pzwoBryqA2M9Ecd++zcJdASjU2aQBJzgUBk7eW\nKHuIfyxmEGC0Huda+hNzD05Ux8zOqaTOgRC8GW1nPzzmp+h30JgJLwpho2oKr6JY\nFNBmtGdSP45Qt2Cy7wxr6msR5361ddmYPTXtC5jtmi0cKg9RU+eZbtDQO8fMT/KQ\nz3sDnZPhT3OqwJ1YW/MEKgFg/9gB+XyQjvMEzutCJNc8u25ZbSF3NKrJzCGto0xL\nvKYCaIubRhpteiEWiE+2w9JVibFPW5BxXCZRyDnY1Q==\n=jl0p\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d720fffafaeced0b3f8551900e53747a8f30d0b\nparent 718f05cab5fe632c5dc4e3c689d5e4cd51331089\nauthor MarcoFalke <falke.marco@gmail.com> 1517268335 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1517268693 -0500\n\nfeebumper: Use PreconditionChecks to determine bump eligibility\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca18dcf499e36069ce5fcd3e02a5ee86639436",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faca18dcf499e36069ce5fcd3e02a5ee86639436",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faca18dcf499e36069ce5fcd3e02a5ee86639436/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "718f05cab5fe632c5dc4e3c689d5e4cd51331089",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/718f05cab5fe632c5dc4e3c689d5e4cd51331089",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/718f05cab5fe632c5dc4e3c689d5e4cd51331089"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "5234a697100e70ddc564c431a9847c2f18cebd93",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faca18dcf499e36069ce5fcd3e02a5ee86639436/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faca18dcf499e36069ce5fcd3e02a5ee86639436/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=faca18dcf499e36069ce5fcd3e02a5ee86639436",
        "patch": "@@ -89,11 +89,15 @@ static feebumper::Result PreconditionChecks(const CWallet* wallet, const CWallet\n \n namespace feebumper {\n \n-bool TransactionCanBeBumped(CWallet* wallet, const uint256& txid)\n+bool TransactionCanBeBumped(const CWallet* wallet, const uint256& txid)\n {\n     LOCK2(cs_main, wallet->cs_wallet);\n     const CWalletTx* wtx = wallet->GetWalletTx(txid);\n-    return wtx && SignalsOptInRBF(*wtx->tx) && !wtx->mapValue.count(\"replaced_by_txid\");\n+    if (wtx == nullptr) return false;\n+\n+    std::vector<std::string> errors_dummy;\n+    feebumper::Result res = PreconditionChecks(wallet, *wtx, errors_dummy);\n+    return res == feebumper::Result::OK;\n }\n \n Result CreateTransaction(const CWallet* wallet, const uint256& txid, const CCoinControl& coin_control, CAmount total_fee, std::vector<std::string>& errors,"
      },
      {
        "sha": "7e36a9766be7ef50a7009c83d2016119306079be",
        "filename": "src/wallet/feebumper.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faca18dcf499e36069ce5fcd3e02a5ee86639436/src/wallet/feebumper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faca18dcf499e36069ce5fcd3e02a5ee86639436/src/wallet/feebumper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.h?ref=faca18dcf499e36069ce5fcd3e02a5ee86639436",
        "patch": "@@ -26,7 +26,7 @@ enum class Result\n };\n \n //! Return whether transaction can be bumped.\n-bool TransactionCanBeBumped(CWallet* wallet, const uint256& txid);\n+bool TransactionCanBeBumped(const CWallet* wallet, const uint256& txid);\n \n //! Create bumpfee transaction.\n Result CreateTransaction(const CWallet* wallet,"
      }
    ]
  }
]