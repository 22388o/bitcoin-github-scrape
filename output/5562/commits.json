[
  {
    "sha": "98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OGE5NmZjMGU4YjlhM2ZiNjNkZjVkN2I5MTkxZDdiZDVhMDc2ZWJh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-12-29T19:17:27Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-12-29T19:17:31Z"
      },
      "message": "Remove BIP34 switchover logic\n\nIt's more than a year ago, so just replace the 75%/95% version counting\nlogic with a static historic switchover point.",
      "tree": {
        "sha": "9ef5e8509dc7f0882366b8aae86a3128a9e5ddce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ef5e8509dc7f0882366b8aae86a3128a9e5ddce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a99ef7d3533b5685bd871365b4574aa4d8e0ca20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99ef7d3533b5685bd871365b4574aa4d8e0ca20",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a99ef7d3533b5685bd871365b4574aa4d8e0ca20"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 11,
      "deletions": 46
    },
    "files": [
      {
        "sha": "00efd6cbf865de53dbe2db04d824a98bb9d3c29e",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 12,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
        "patch": "@@ -116,9 +116,7 @@ class CMainParams : public CChainParams {\n         nDefaultPort = 8333;\n         bnProofOfWorkLimit = ~uint256(0) >> 32;\n         nSubsidyHalvingInterval = 210000;\n-        nEnforceBlockUpgradeMajority = 750;\n-        nRejectBlockOutdatedMajority = 950;\n-        nToCheckBlockUpgradeMajority = 1000;\n+        nBIP34Height = 227931;\n         nMinerThreads = 0;\n         nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         nTargetSpacing = 10 * 60;\n@@ -198,9 +196,7 @@ class CTestNetParams : public CMainParams {\n         pchMessageStart[3] = 0x07;\n         vAlertPubKey = ParseHex(\"04302390343f91cc401d56d68b123028bf52e5fca1939df127f63c6467cdf9c8e2c14b61104cf817d0b780da337893ecc4aaff1309e536162dabbdb45200ca2b0a\");\n         nDefaultPort = 18333;\n-        nEnforceBlockUpgradeMajority = 51;\n-        nRejectBlockOutdatedMajority = 75;\n-        nToCheckBlockUpgradeMajority = 100;\n+        nBIP34Height = 21111;\n         nMinerThreads = 0;\n         nTargetTimespan = 14 * 24 * 60 * 60; //! two weeks\n         nTargetSpacing = 10 * 60;\n@@ -254,9 +250,7 @@ class CRegTestParams : public CTestNetParams {\n         pchMessageStart[2] = 0xb5;\n         pchMessageStart[3] = 0xda;\n         nSubsidyHalvingInterval = 150;\n-        nEnforceBlockUpgradeMajority = 750;\n-        nRejectBlockOutdatedMajority = 950;\n-        nToCheckBlockUpgradeMajority = 1000;\n+        nBIP34Height = 0;\n         nMinerThreads = 1;\n         nTargetTimespan = 14 * 24 * 60 * 60; //! two weeks\n         nTargetSpacing = 10 * 60;\n@@ -313,9 +307,7 @@ class CUnitTestParams : public CMainParams, public CModifiableParams {\n \n     //! Published setters to allow changing values in unit test cases\n     virtual void setSubsidyHalvingInterval(int anSubsidyHalvingInterval)  { nSubsidyHalvingInterval=anSubsidyHalvingInterval; }\n-    virtual void setEnforceBlockUpgradeMajority(int anEnforceBlockUpgradeMajority)  { nEnforceBlockUpgradeMajority=anEnforceBlockUpgradeMajority; }\n-    virtual void setRejectBlockOutdatedMajority(int anRejectBlockOutdatedMajority)  { nRejectBlockOutdatedMajority=anRejectBlockOutdatedMajority; }\n-    virtual void setToCheckBlockUpgradeMajority(int anToCheckBlockUpgradeMajority)  { nToCheckBlockUpgradeMajority=anToCheckBlockUpgradeMajority; }\n+    virtual void setBIP34Height(int anBIP34Height)  { nBIP34Height=anBIP34Height; }\n     virtual void setDefaultCheckMemPool(bool afDefaultCheckMemPool)  { fDefaultCheckMemPool=afDefaultCheckMemPool; }\n     virtual void setAllowMinDifficultyBlocks(bool afAllowMinDifficultyBlocks) {  fAllowMinDifficultyBlocks=afAllowMinDifficultyBlocks; }\n     virtual void setSkipProofOfWorkCheck(bool afSkipProofOfWorkCheck) { fSkipProofOfWorkCheck = afSkipProofOfWorkCheck; }"
      },
      {
        "sha": "5b950d9cb988e7c4eb69c1d19da29567d865f296",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
        "patch": "@@ -48,9 +48,7 @@ class CChainParams\n     const uint256& ProofOfWorkLimit() const { return bnProofOfWorkLimit; }\n     int SubsidyHalvingInterval() const { return nSubsidyHalvingInterval; }\n     /** Used to check majorities for block version upgrade */\n-    int EnforceBlockUpgradeMajority() const { return nEnforceBlockUpgradeMajority; }\n-    int RejectBlockOutdatedMajority() const { return nRejectBlockOutdatedMajority; }\n-    int ToCheckBlockUpgradeMajority() const { return nToCheckBlockUpgradeMajority; }\n+    int BIP34Height() const { return nBIP34Height; }\n \n     /** Used if GenerateBitcoins is called with a negative number of threads */\n     int DefaultMinerThreads() const { return nMinerThreads; }\n@@ -89,9 +87,7 @@ class CChainParams\n     int nDefaultPort;\n     uint256 bnProofOfWorkLimit;\n     int nSubsidyHalvingInterval;\n-    int nEnforceBlockUpgradeMajority;\n-    int nRejectBlockOutdatedMajority;\n-    int nToCheckBlockUpgradeMajority;\n+    int nBIP34Height;\n     int64_t nTargetTimespan;\n     int64_t nTargetSpacing;\n     int nMinerThreads;\n@@ -121,9 +117,7 @@ class CModifiableParams {\n public:\n     //! Published setters to allow changing values in unit test cases\n     virtual void setSubsidyHalvingInterval(int anSubsidyHalvingInterval) =0;\n-    virtual void setEnforceBlockUpgradeMajority(int anEnforceBlockUpgradeMajority)=0;\n-    virtual void setRejectBlockOutdatedMajority(int anRejectBlockOutdatedMajority)=0;\n-    virtual void setToCheckBlockUpgradeMajority(int anToCheckBlockUpgradeMajority)=0;\n+    virtual void setBIP34Height(int anBIP34Height) =0;\n     virtual void setDefaultCheckMemPool(bool aDefaultCheckMemPool)=0;\n     virtual void setAllowMinDifficultyBlocks(bool aAllowMinDifficultyBlocks)=0;\n     virtual void setSkipProofOfWorkCheck(bool aSkipProofOfWorkCheck)=0;"
      },
      {
        "sha": "f809f3507fe8ddac1261a29ef13e1ce64d63b0ce",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 25,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=98a96fc0e8b9a3fb63df5d7b9191d7bd5a076eba",
        "patch": "@@ -67,13 +67,6 @@ map<uint256, COrphanTx> mapOrphanTransactions;\n map<uint256, set<uint256> > mapOrphanTransactionsByPrev;\n void EraseOrphansFor(NodeId peer);\n \n-/**\n- * Returns true if there are nRequired or more blocks of minVersion or above\n- * in the last Params().ToCheckBlockUpgradeMajority() blocks, starting at pstart \n- * and going backwards.\n- */\n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired);\n-\n /** Constant stuff for coinbase transactions we create: */\n CScript COINBASE_FLAGS;\n \n@@ -2506,8 +2499,8 @@ bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationState& sta\n     if (pcheckpoint && nHeight < pcheckpoint->nHeight)\n         return state.DoS(100, error(\"%s : forked chain older than last checkpoint (height %d)\", __func__, nHeight));\n \n-    // Reject block.nVersion=1 blocks when 95% (75% on testnet) of the network has upgraded:\n-    if (block.nVersion < 2 && IsSuperMajority(2, pindexPrev, Params().RejectBlockOutdatedMajority()))\n+    // Reject block.nVersion=1 blocks after the BIP34 switchover point.\n+    if (block.nVersion < 2 && nHeight >= Params().BIP34Height())\n     {\n         return state.Invalid(error(\"%s : rejected nVersion=1 block\", __func__),\n                              REJECT_OBSOLETE, \"bad-version\");\n@@ -2526,9 +2519,8 @@ bool ContextualCheckBlock(const CBlock& block, CValidationState& state, CBlockIn\n             return state.DoS(10, error(\"%s : contains a non-final transaction\", __func__), REJECT_INVALID, \"bad-txns-nonfinal\");\n         }\n \n-    // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height\n-    // if 750 of the last 1,000 blocks are version 2 or greater (51/100 if testnet):\n-    if (block.nVersion >= 2 && IsSuperMajority(2, pindexPrev, Params().EnforceBlockUpgradeMajority()))\n+    // Enforce block.nVersion=2 rule that the coinbase starts with serialized block height after the BIP34 switchover point.\n+    if (block.nVersion >= 2 && nHeight >= Params().BIP34Height())\n     {\n         CScript expect = CScript() << nHeight;\n         if (block.vtx[0].vin[0].scriptSig.size() < expect.size() ||\n@@ -2628,19 +2620,6 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n     return true;\n }\n \n-static bool IsSuperMajority(int minVersion, const CBlockIndex* pstart, unsigned int nRequired)\n-{\n-    unsigned int nToCheck = Params().ToCheckBlockUpgradeMajority();\n-    unsigned int nFound = 0;\n-    for (unsigned int i = 0; i < nToCheck && nFound < nRequired && pstart != NULL; i++)\n-    {\n-        if (pstart->nVersion >= minVersion)\n-            ++nFound;\n-        pstart = pstart->pprev;\n-    }\n-    return (nFound >= nRequired);\n-}\n-\n \n bool ProcessNewBlock(CValidationState &state, CNode* pfrom, CBlock* pblock, CDiskBlockPos *dbp)\n {"
      }
    ]
  }
]