jachiang,2019-10-28 19:19:11,@jnewbery has provided many inputs for this PR. Previous discussion and review can be found [here](https://github.com/ChaincodeResidency/bitcoin/pull/26).,https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547104970,547104970,
jnewbery,2019-10-28 19:50:48,"Concept ACK. We used this in the taproot workshops and it's a really nice way of interacting with bitcoind instances, prototyping tests, learning the RPC interface, etc",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547116752,547116752,
jamesob,2019-10-28 20:03:51,"Concept ACK, seems like a great feature.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547121817,547121817,
practicalswift,2019-10-28 22:05:37,"Concept ACK: very nice idea and what an excellent first-time contribution!\n\nHope to see more contributions from you in the future!",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547165834,547165834,
fjahr,2019-10-29 19:23:31,"Concept ACK\n\nI can see how this will be useful for a lot of people in the future. Only one nit: I am not sure if `TestWrapper` is a great name. I would expect a class by that name to wrap a specific test. But it's hard to come up with a better name that is still short and describes what this class is doing. Maybe something like `InteractiveDriver`. But probably not worth the effort unless othe",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057,547589057,
jnewbery,2019-10-29 19:26:43,">  I am not sure if TestWrapper is a great name.\n\nI think the name is ok. Other options: `TestREPL`, `TestShell`, `TestDriver`, ...",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547590357,547590357,
jnewbery,2019-10-29 20:09:14,"> In general, it would be nice to wrap lines in markdown files around 80-120\n\nPlease also do the same for commit logs! Aim to limit the summary line to 50 characters if possible and wrap all other lines at 80 characters. There are some good pointers on writing commit logs here: https://chris.beams.io/posts/git-commit/",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547607108,547607108,
laanwj,2019-10-30 11:54:11,Concept ACK,https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547865586,547865586,
practicalswift,2019-10-30 12:06:50,Regarding the naming: `TestShell` or `TestDriver` as suggested by @jnewbery and echoed by @jamesob are both clearer names than `TestWrapper` IMO :),https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547870014,547870014,
jachiang,2019-10-30 15:21:46,"> Regarding the naming: TestShell or TestDriver as suggested by @jnewbery and echoed by @jamesob are both clearer names than TestWrapper IMO :)\n\nMany thanks for all the naming ideas, so it seems like TestShell / TestDriver are the leading candidates? (I sorta like TestShell because it implies an interactive interface?)",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547960860,547960860,
jonatack,2019-10-30 16:35:46,"Since we're discussing names, can offer up `TestConsole` as well (and give some love to the `TestREPL` suggestion.)",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547997570,547997570,
MarcoFalke,2019-10-30 17:24:44,"Ok, let's go ahead and pick a name. ""Wrapper"" is a bit too general and I am fine with any of the previous other suggestions.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-548021050,548021050,
jachiang,2019-11-03 20:38:21,"Thank you everybody for your reviews and comments! \n\n- **Nits and fixes:** Have been addressed.\n- **Naming:** May I suggest to move ahead with `TestShell`? `TestREPL` also seemed popular but awkward in camel case? (As per @fjahr's [comment](https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-547589057) to rename, and all subsequent naming suggestions.)\n- **Documentation:** `test/fun",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549176038,549176038,
jamesob,2019-11-04 18:45:16,ACK https://github.com/bitcoin/bitcoin/pull/17288/commits/19139ee034d20ebab1b91d3ac13a8eee70b59374,https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549492455,549492455,
jonatack,2019-11-04 19:12:09,"ACK 19139ee034d20ebab1b91d3ac13a8eee70b59374\n\nVerified that setting up with the updated instruction of `test.setup(num_nodes=2, setup_clean_chain=True)` initializes with a block height of 0.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549503270,549503270,
jnewbery,2019-11-04 19:37:39,"Rather than invalidate the three ACKs for a minor nit, can you force push back to 19139ee034d20ebab1b91d3ac13a8eee70b59374 please? I think this PR was ready to merge before your last force push.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549513505,549513505,
jachiang,2019-11-04 19:52:50,"> Rather than invalidate the three ACKs for a minor nit, can you force push back to [19139ee](https://github.com/bitcoin/bitcoin/commit/19139ee034d20ebab1b91d3ac13a8eee70b59374) please? I think this PR was ready to merge before your last force push.\n\nApologies @jnewbery. Back to 19139ee now.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549519347,549519347,
MarcoFalke,2019-11-04 19:57:03,Could do the fixup as a follow-up?,https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549521075,549521075,
instagibbs,2019-11-04 20:02:59,very nice! post-hom concept ACK,https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549523386,549523386,
jachiang,2019-11-05 15:27:03,"- Post-merge suggestions are tracked in #17378 (Sorry for the additional review effort).\n- Since I am not sure, I have opened an issue track doc consolidation in #17380.",https://github.com/bitcoin/bitcoin/pull/17288#issuecomment-549872561,549872561,
MarcoFalke,2019-10-28 19:35:03,nit: Wouldn't it make more sense to put this file in the `test/` directory? I feel like we already have some documentation there and it could be referenced from the existing docs.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r339753399,339753399,doc/test-wrapper.md
jonatack,2019-10-29 11:55:08,...or possibly in `test/functional/`,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031294,340031294,doc/test-wrapper.md
jonatack,2019-10-29 11:56:34,"In general, it would be nice to wrap lines in markdown files around 80-120 characters for easier reviewing here and in local editors. Most editors can do this automatically for you while editing the file and it would be kind for reviewers.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340031846,340031846,doc/test-wrapper.md
jonatack,2019-10-29 11:57:30,s/functional the/the functional/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032263,340032263,doc/test-wrapper.md
jonatack,2019-10-29 11:58:15,nit: s/command-line/command line/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032568,340032568,doc/test-wrapper.md
jonatack,2019-10-29 11:58:53,"s/kernel,/kernel./ ?",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340032866,340032866,doc/test-wrapper.md
jonatack,2019-10-29 12:00:09,The first 2 commands didn't seem needed for running your example in the PR description?,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033351,340033351,doc/test-wrapper.md
jonatack,2019-10-29 12:00:54,"nit: s/run/run,/ (add Oxford comma) and s/shutdown/shut down/ (shutdown is a noun but not a verb)",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340033677,340033677,doc/test-wrapper.md
jonatack,2019-10-29 12:02:44,Perhaps s/This/Running a single process/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034412,340034412,doc/test-wrapper.md
jonatack,2019-10-29 12:03:38,"s/running,/running/ (remove the comma)",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340034751,340034751,doc/test-wrapper.md
jonatack,2019-10-29 12:05:06,nit: s/especially/particularly/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340035312,340035312,doc/test-wrapper.md
jonatack,2019-10-29 12:07:40,nit: s/startup/start up/ and s/test-framework/test framework/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036265,340036265,test/functional/test_framework/test_framework.py
jonatack,2019-10-29 12:08:37,nit: s/shutdown/shut down/ and s/test-framework/test framework/,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340036650,340036650,test/functional/test_framework/test_framework.py
jonatack,2019-10-29 12:10:44,"nit: possibly remove the extra lines at L21, 23 and 31",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340037602,340037602,test/functional/test_framework/test_wrapper.py
jonatack,2019-10-29 12:12:51,"Do these args need to be maintained in parallel with those in test_framework.py, etc? If yes, perhaps mention/warn about it in a code comment.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340038381,340038381,test/functional/test_framework/test_wrapper.py
jonatack,2019-10-29 12:18:48,nit: missing newline at EOF,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340040618,340040618,doc/test-wrapper.md
jnewbery,2019-10-29 20:20:50,"I think this could use a comment saying why you're not just calling `logging.shutdown()` (maybe reference https://docs.python.org/3/library/logging.html#logging.shutdown).\n\nWithout a comment, someone might helpfully change this back to using `logging.shutdown()` in future.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340304288,340304288,test/functional/test_framework/test_framework.py
jnewbery,2019-10-29 20:22:56,I'd move this to be a class docstring for `TestWrapper` rather than a file docstring.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305236,340305236,test/functional/test_framework/test_wrapper.py
jnewbery,2019-10-29 20:23:21,nit: (c) 2019 (unless you've been secretly working on this for 5 years),https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340305415,340305415,test/functional/test_framework/test_wrapper.py
jnewbery,2019-10-29 20:37:51,Small comment here to explain that we wrap the class to enforce a singleton pattern would be nice.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340312053,340312053,test/functional/test_framework/test_wrapper.py
jamesob,2019-10-29 21:04:50,Make any sense to log instead of print? (same question for below),https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340324672,340324672,test/functional/test_framework/test_wrapper.py
jachiang,2019-10-30 15:14:17,"Thanks @jamesob for the review. For my understanding, do you mean logging it to the (already) running TestShell/Driver instance?",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340678650,340678650,test/functional/test_framework/test_wrapper.py
jachiang,2019-10-30 15:14:56,Almost feels like it ;),https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340679054,340679054,test/functional/test_framework/test_wrapper.py
jachiang,2019-10-30 16:09:25,"Thank you, I have added it to the PR description.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r340714099,340714099,doc/test-wrapper.md
jnewbery,2019-10-31 18:36:27,"I think this is better as a `print()` which gets displayed to the user immediately. The log context is for what's happening inside the test, not for a user accidentally re-calling the setup message.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341305354,341305354,test/functional/test_framework/test_wrapper.py
MarcoFalke,2019-11-03 22:59:28,"```suggestion\n                print(""Shutdown TestShell before resetting!"")\n```",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341878366,341878366,test/functional/test_framework/test_shell.py
jachiang,2019-11-04 07:50:40,"Ok, as of now I have left all TestWrapper warnings as `print()`. These include the following. As far as I can tell, they are specific to the lifetime of the TestShell object and not the underlying test.\n\n- ""TestShell is already running!"" (Multiple initializations)\n- ""TestShell is not running!"" (Shutdown call without running test)\n- ""Shutdown TestWrapper before resetting!"" (Reset call while",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r341927364,341927364,test/functional/test_framework/test_wrapper.py
jonatack,2019-11-04 12:13:38,"nit: remove comma after environments, as the clause after is not independent.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342019934,342019934,test/functional/README.md
jonatack,2019-11-04 12:14:22,"nit: ""describes how to use"" might be friendlier.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342020174,342020174,test/functional/test-shell.md
jonatack,2019-11-04 12:15:38,nit: you write TestShell without backticks above and below; ideally settle on one style. Idem for BitcoinTestFramework.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342020614,342020614,test/functional/test-shell.md
jonatack,2019-11-04 12:18:23,nit: wrote BitcoinTestFramework elsewhere without spaces,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342021535,342021535,test/functional/test-shell.md
jonatack,2019-11-04 12:22:06,"I'm seeing 200 blocks by default, is it me?\n```python\n((HEAD detached at origin/pr/17288))$ python3\nPython 3.7.3 (default, Apr  3 2019, 05:39:12) \n[GCC 8.3.0] on linux\nType ""help"", ""copyright"", ""credits"" or ""license"" for more information.\n>>> import sys\n>>> from test_framework.test_shell import TestShell\n>>> test = TestShell()\n>>> test.setup(num_nodes=2)\n2019-11-04T12:07:13.890",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342022875,342022875,test/functional/test-shell.md
jonatack,2019-11-04 12:22:44,Logging tested/verified.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342023112,342023112,test/functional/test-shell.md
jonatack,2019-11-04 12:22:57,Tested and verified.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342023181,342023181,test/functional/test-shell.md
jonatack,2019-11-04 12:29:49,Nice! I wonder it this table should be in test/README.md which touches on some of these parameters. Best to not maintain docs in two places if feasible.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342025578,342025578,test/functional/test-shell.md
jachiang,2019-11-04 13:15:51,"Oops, I forgot to update that. The `setup_clean_chain` default is now `False`, since we are inheriting it from the `BitcoinTestFramework` parent class. Will update in docs, Thanks!!",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342042465,342042465,test/functional/test-shell.md
jachiang,2019-11-04 14:48:32,"Hm. I was thinking about that, but not sure of the following two issues if we are to consolidate test parameter documentation.\n\n**A) Minor inconsistency in parameter naming:**\n\n- `BitcoinTestFramework` command-line args vs `BitcoinTestFramework` member:\n    - `--tracerpc` vs `trace_rpc`\n    - `--portseed` vs `port_seed`\n\n`TestShell` just looks up the `setup` keywords as attributes,",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342087153,342087153,test/functional/test-shell.md
jachiang,2019-11-04 15:03:37,Fixed.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095721,342095721,test/functional/test-shell.md
jachiang,2019-11-04 15:03:40,Fixed.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095746,342095746,test/functional/test-shell.md
jachiang,2019-11-04 15:04:06,"Fixed in documentation:`test.setup(num_nodes=2, setup_clean_chain=True)`.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342095995,342095995,test/functional/test-shell.md
jnewbery,2019-11-04 17:45:29,"instead of popping the entry from kwargs here, why not just set:\n\n```\nself.num_nodes = 1\n```\n\nand let the mainline logic below overwrite that if a `num_nodes` argument has been passed in.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342181988,342181988,test/functional/test_framework/test_shell.py
jnewbery,2019-11-04 18:16:51,"The risk with documenting defaults outside the code is that they might change and the documentation goes out of date.\n\nI tried updating the `TestShell.__doc__` string to list all the defaults programatically but that seems like overkill.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342195750,342195750,test/functional/test-shell.md
jonatack,2019-11-04 19:02:08,"@jachiang in reply to your question, given the good state of the PR now and the acks, I would leave it for a possible follow-up.",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342216440,342216440,test/functional/test-shell.md
jachiang,2019-11-04 19:32:34,Much better. Fixed. Thank you!,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342230545,342230545,test/functional/test_framework/test_shell.py
MarcoFalke,2019-11-04 20:10:46,"```\n                                          ^\nSyntaxError: invalid syntax\n",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342247343,342247343,test/functional/test-shell.md
MarcoFalke,2019-11-04 20:15:49,"Instead of duplicating all help text, you could only mention the command line arg name and the TestShell name, and then tell users to refer to to the command line help string",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342249280,342249280,test/functional/test-shell.md
instagibbs,2019-11-04 20:26:21,This should probably be `TestShell().setup()`,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342253593,342253593,test/functional/test-shell.md
instagibbs,2019-11-04 20:26:29,This should probably be `TestShell().shutdown()`,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342253665,342253665,test/functional/test-shell.md
MarcoFalke,2019-11-04 20:28:48,"This is not for the interactive session, but more a documentation of these member functions",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342254546,342254546,test/functional/test-shell.md
jachiang,2019-11-04 20:49:08,Sorry. I'll follow-up with a fix.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342262814,342262814,test/functional/test-shell.md
jachiang,2019-11-04 20:52:09,Thank you. I'll follow-up.,https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342264044,342264044,test/functional/test_framework/test_shell.py
jachiang,2019-11-05 07:36:48,"Hm. @MarcoFalke agree with you, but I am thinking it may be useful for `setup()` to return `self` so we can chain it to initializer as suggested by @instagibbs: \n\n`test = TestShell().setup()`",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342414498,342414498,test/functional/test-shell.md
jachiang,2019-11-05 07:42:20,"Thank you @MarcoFalke for the review. The command line help doesn't cover all the parameters I suppose. `setup_clean_chain` is overridden in `set_test_params()` and isn't covered by cmdline help.\n\nWould it be an acceptable solution to reduce the documentation down the parameters which don't have help text (e.g. `setup_clean_chain, num_nodes, ...`) , and refer to the command-line help string fo",https://github.com/bitcoin/bitcoin/pull/17288#discussion_r342416100,342416100,test/functional/test-shell.md
