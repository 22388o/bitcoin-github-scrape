[
  {
    "sha": "7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Yjc4MmY1YjAxZjRjMmQ5MDZhMjg4MDBkMDFmZmQwNWFkMjU3Y2Jl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-12-30T14:32:07Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2014-12-30T14:46:57Z"
      },
      "message": "RPCWallet: Notate all account stuff as deprecated",
      "tree": {
        "sha": "53e3d07308d03fddc4ba14a4935b51a0435d8b33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/53e3d07308d03fddc4ba14a4935b51a0435d8b33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7c001bb49c084a01a09827bf26447a418ecaeb9a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7c001bb49c084a01a09827bf26447a418ecaeb9a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7c001bb49c084a01a09827bf26447a418ecaeb9a"
      }
    ],
    "stats": {
      "total": 101,
      "additions": 46,
      "deletions": 55
    },
    "files": [
      {
        "sha": "c225b9f3e95f4772097992439c53f7dc96e57ee5",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
        "patch": "@@ -85,19 +85,19 @@ This help message\n Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n .TP\n \\fBgetaccount 'bitcoinaddress'\\fR\n-Returns the account associated with the given address.\n+DEPRECATED. Returns the account associated with the given address.\n .TP\n \\fBsetaccount 'bitcoinaddress' ['account']\\fR\n-Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n+DEPRECATED. Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n .TP\n \\fBgetaccountaddress 'account'\\fR\n-Returns a new bitcoin address for 'account'.\n+DEPRECATED. Returns a new bitcoin address for 'account'.\n .TP\n \\fBgetaddressesbyaccount 'account'\\fR\n-Returns the list of addresses associated with the given 'account'.\n+DEPRECATED. Returns the list of addresses associated with the given 'account'.\n .TP\n \\fBgetbalance 'account'\\fR\n-Returns the server's available balance, or the balance for 'account'.\n+Returns the server's available balance, or the balance for 'account' (accounts are deprecated).\n .TP\n \\fBgetblockcount\\fR\n Returns the number of blocks in the longest block chain.\n@@ -124,10 +124,10 @@ Returns a recent hashes per second performance measurement while generating.\n Returns an object containing server information.\n .TP\n \\fBgetnewaddress 'account'\\fR\n-Returns a new bitcoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n+Returns a new bitcoin address for receiving payments. If 'account' is specified (deprecated), it is added to the address book so payments received with the address will be credited to 'account'.\n .TP\n \\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n-Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n+DEPRECATED. Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n .TP\n \\fBgetreceivedbyaddress 'bitcoinaddress' ['minconf=1']\\fR\n Returns the total amount received by 'bitcoinaddress' in transactions with at least ['minconf'] confirmations.\n@@ -147,21 +147,21 @@ If 'data' is specified, tries to solve the block and returns true if it was succ\n List commands, or get help for a command.\n .TP\n \\fBlistaccounts ['minconf=1']\\fR\n-List accounts and their current balances.\n+DEPRECATED. List accounts and their current balances.\n      *note: requires bitcoin 0.3.20 or later.\n .TP\n \\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n ['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n \n-    \"account\"       : the account of the receiving address.\n+    \"account\"       : DEPRECATED. the account of the receiving address.\n     \"amount\"        : total amount received by the address.\n     \"confirmations\" : number of confirmations of the most recent transaction included.\n .TP\n \\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n ['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n \n     \"address\"       : receiving address.\n-    \"account\"       : the account of the receiving address.\n+    \"account\"       : DEPRECATED. the account of the receiving address.\n     \"amount\"        : total amount received by the address.\n     \"confirmations\" : number of confirmations of the most recent transaction included.\n .TP\n@@ -180,10 +180,10 @@ Returns a list of the last ['count'] transactions for 'account' \\- for all accou\n     *note: requires bitcoin 0.3.20 or later.\n .TP\n \\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n-Moves funds between accounts.\n+DEPRECATED. Moves funds between accounts.\n .TP\n \\fBsendfrom* <'account'> <'bitcoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n-Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n+DEPRECATED. Sends amount from account's balance to 'bitcoinaddress'. This method will fail if there is less than amount bitcoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n .TP     \n \\fBsendtoaddress 'bitcoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n Sends amount from the server's available balance to 'bitcoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success."
      },
      {
        "sha": "7732e05367646ae3e20104ed3d31f5638df36296",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
        "patch": "@@ -166,7 +166,7 @@ Value validateaddress(const Array& params, bool fHelp)\n             \"  \\\"isscript\\\" : true|false,        (boolean) If the key is a script\\n\"\n             \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string) The hex value of the raw public key\\n\"\n             \"  \\\"iscompressed\\\" : true|false,    (boolean) If the address is compressed\\n\"\n-            \"  \\\"account\\\" : \\\"account\\\"         (string) The account associated with the address, \\\"\\\" is the default account\\n\"\n+            \"  \\\"account\\\" : \\\"account\\\"         (string) DEPRECATED. The account associated with the address, \\\"\\\" is the default account\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")"
      },
      {
        "sha": "c16d7289909a449d3b5479b680262c8a7815eb79",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
        "patch": "@@ -218,7 +218,7 @@ Value listunspent(const Array& params, bool fHelp)\n             \"    \\\"txid\\\" : \\\"txid\\\",        (string) the transaction id \\n\"\n             \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n             \"    \\\"address\\\" : \\\"address\\\",  (string) the bitcoin address\\n\"\n-            \"    \\\"account\\\" : \\\"account\\\",  (string) The associated account, or \\\"\\\" for the default account\\n\"\n+            \"    \\\"account\\\" : \\\"account\\\",  (string) DEPRECATED. The associated account, or \\\"\\\" for the default account\\n\"\n             \"    \\\"scriptPubKey\\\" : \\\"key\\\", (string) the script key\\n\"\n             \"    \\\"amount\\\" : x.xxx,         (numeric) the transaction amount in btc\\n\"\n             \"    \\\"confirmations\\\" : n       (numeric) The number of confirmations\\n\""
      },
      {
        "sha": "66c13a7688ff57da0ba248a8630bc88670b09322",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 41,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b782f5b01f4c2d906a28800d01ffd05ad257cbe/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=7b782f5b01f4c2d906a28800d01ffd05ad257cbe",
        "patch": "@@ -81,17 +81,15 @@ Value getnewaddress(const Array& params, bool fHelp)\n         throw runtime_error(\n             \"getnewaddress ( \\\"account\\\" )\\n\"\n             \"\\nReturns a new Bitcoin address for receiving payments.\\n\"\n-            \"If 'account' is specified (recommended), it is added to the address book \\n\"\n+            \"If 'account' is specified (DEPRECATED), it is added to the address book \\n\"\n             \"so payments received with the address will be credited to 'account'.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"        (string, optional) The account name for the address to be linked to. if not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n+            \"1. \\\"account\\\"        (string, optional) DEPRECATED. The account name for the address to be linked to. if not provided, the default account \\\"\\\" is used. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created if there is no account by the given name.\\n\"\n             \"\\nResult:\\n\"\n             \"\\\"bitcoinaddress\\\"    (string) The new bitcoin address\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getnewaddress\", \"\")\n-            + HelpExampleCli(\"getnewaddress\", \"\\\"\\\"\")\n-            + HelpExampleCli(\"getnewaddress\", \"\\\"myaccount\\\"\")\n-            + HelpExampleRpc(\"getnewaddress\", \"\\\"myaccount\\\"\")\n+            + HelpExampleRpc(\"getnewaddress\", \"\")\n         );\n \n     // Parse the account first so we don't generate a key if there's an error\n@@ -156,7 +154,7 @@ Value getaccountaddress(const Array& params, bool fHelp)\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccountaddress \\\"account\\\"\\n\"\n-            \"\\nReturns the current Bitcoin address for receiving payments to this account.\\n\"\n+            \"\\nDEPRECATED. Returns the current Bitcoin address for receiving payments to this account.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"       (string, required) The account name for the address. It can also be set to the empty string \\\"\\\" to represent the default account. The account does not need to exist, it will be created and a new address created  if there is no account by the given name.\\n\"\n             \"\\nResult:\\n\"\n@@ -214,7 +212,7 @@ Value setaccount(const Array& params, bool fHelp)\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"setaccount \\\"bitcoinaddress\\\" \\\"account\\\"\\n\"\n-            \"\\nSets the account associated with the given address.\\n\"\n+            \"\\nDEPRECATED. Sets the account associated with the given address.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address to be associated with an account.\\n\"\n             \"2. \\\"account\\\"         (string, required) The account to assign the address to.\\n\"\n@@ -256,7 +254,7 @@ Value getaccount(const Array& params, bool fHelp)\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaccount \\\"bitcoinaddress\\\"\\n\"\n-            \"\\nReturns the account associated with the given address.\\n\"\n+            \"\\nDEPRECATED. Returns the account associated with the given address.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"bitcoinaddress\\\"  (string, required) The bitcoin address for account lookup.\\n\"\n             \"\\nResult:\\n\"\n@@ -283,7 +281,7 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getaddressesbyaccount \\\"account\\\"\\n\"\n-            \"\\nReturns the list of addresses for the given account.\\n\"\n+            \"\\nDEPRECATED. Returns the list of addresses for the given account.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"  (string, required) The account name.\\n\"\n             \"\\nResult:\\n\"\n@@ -402,7 +400,7 @@ Value listaddressgroupings(const Array& params, bool fHelp)\n             \"    [\\n\"\n             \"      \\\"bitcoinaddress\\\",     (string) The bitcoin address\\n\"\n             \"      amount,                 (numeric) The amount in btc\\n\"\n-            \"      \\\"account\\\"             (string, optional) The account\\n\"\n+            \"      \\\"account\\\"             (string, optional) The account (DEPRECATED)\\n\"\n             \"    ]\\n\"\n             \"    ,...\\n\"\n             \"  ]\\n\"\n@@ -544,7 +542,7 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n     if (fHelp || params.size() < 1 || params.size() > 2)\n         throw runtime_error(\n             \"getreceivedbyaccount \\\"account\\\" ( minconf )\\n\"\n-            \"\\nReturns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.\\n\"\n+            \"\\nDEPRECATED. Returns the total amount received by addresses with <account> in transactions with at least [minconf] confirmations.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"account\\\"      (string, required) The selected account, may be the default account using \\\"\\\".\\n\"\n             \"2. minconf          (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n@@ -629,26 +627,22 @@ Value getbalance(const Array& params, bool fHelp)\n         throw runtime_error(\n             \"getbalance ( \\\"account\\\" minconf includeWatchonly )\\n\"\n             \"\\nIf account is not specified, returns the server's total available balance.\\n\"\n-            \"If account is specified, returns the balance in the account.\\n\"\n+            \"If account is specified (DEPRECATED), returns the balance in the account.\\n\"\n             \"Note that the account \\\"\\\" is not the same as leaving the parameter out.\\n\"\n             \"The server total may be different to the balance in the default \\\"\\\" account.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"      (string, optional) The selected account, or \\\"*\\\" for entire wallet. It may be the default account using \\\"\\\".\\n\"\n+            \"1. \\\"account\\\"      (string, optional) DEPRECATED. The selected account, or \\\"*\\\" for entire wallet. It may be the default account using \\\"\\\".\\n\"\n             \"2. minconf          (numeric, optional, default=1) Only include transactions confirmed at least this many times.\\n\"\n             \"3. includeWatchonly (bool, optional, default=false) Also include balance in watchonly addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"amount              (numeric) The total amount in btc received for this account.\\n\"\n             \"\\nExamples:\\n\"\n-            \"\\nThe total amount in the server across all accounts\\n\"\n+            \"\\nThe total amount in the wallet\\n\"\n             + HelpExampleCli(\"getbalance\", \"\") +\n-            \"\\nThe total amount in the server across all accounts, with at least 5 confirmations\\n\"\n+            \"\\nThe total amount in the wallet at least 5 blocks confirmed\\n\"\n             + HelpExampleCli(\"getbalance\", \"\\\"*\\\" 6\") +\n-            \"\\nThe total amount in the default account with at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"getbalance\", \"\\\"\\\"\") +\n-            \"\\nThe total amount in the account named tabby with at least 6 confirmations\\n\"\n-            + HelpExampleCli(\"getbalance\", \"\\\"tabby\\\" 6\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"getbalance\", \"\\\"tabby\\\", 6\")\n+            + HelpExampleRpc(\"getbalance\", \"\\\"*\\\", 6\")\n         );\n \n     if (params.size() == 0)\n@@ -712,7 +706,7 @@ Value movecmd(const Array& params, bool fHelp)\n     if (fHelp || params.size() < 3 || params.size() > 5)\n         throw runtime_error(\n             \"move \\\"fromaccount\\\" \\\"toaccount\\\" amount ( minconf \\\"comment\\\" )\\n\"\n-            \"\\nMove a specified amount from one account in your wallet to another.\\n\"\n+            \"\\nDEPRECATED. Move a specified amount from one account in your wallet to another.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"fromaccount\\\"   (string, required) The name of the account to move funds from. May be the default account using \\\"\\\".\\n\"\n             \"2. \\\"toaccount\\\"     (string, required) The name of the account to move funds to. May be the default account using \\\"\\\".\\n\"\n@@ -777,7 +771,7 @@ Value sendfrom(const Array& params, bool fHelp)\n     if (fHelp || params.size() < 3 || params.size() > 6)\n         throw runtime_error(\n             \"sendfrom \\\"fromaccount\\\" \\\"tobitcoinaddress\\\" amount ( minconf \\\"comment\\\" \\\"comment-to\\\" )\\n\"\n-            \"\\nSent an amount from an account to a bitcoin address.\\n\"\n+            \"\\nDEPRECATED (use sendtoaddress). Sent an amount from an account to a bitcoin address.\\n\"\n             \"The amount is a real and is rounded to the nearest 0.00000001.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n@@ -838,7 +832,7 @@ Value sendmany(const Array& params, bool fHelp)\n             \"\\nSend multiple times. Amounts are double-precision floating point numbers.\"\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"fromaccount\\\"         (string, required) The account to send the funds from, can be \\\"\\\" for the default account\\n\"\n+            \"1. \\\"fromaccount\\\"         (string, required) DEPRECATED. The account to send the funds from. Should be \\\"\\\" for the default account\\n\"\n             \"2. \\\"amounts\\\"             (string, required) A json object with addresses and amounts\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\":amount   (numeric) The bitcoin address is the key, the numeric amount in btc is the value\\n\"\n@@ -851,11 +845,11 @@ Value sendmany(const Array& params, bool fHelp)\n             \"                                    the number of addresses.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend two amounts to two different addresses:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"tabby\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendmany\", \"\\\"tabby\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n+            + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n     string strAccount = AccountFromValue(params[0]);\n@@ -920,7 +914,7 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n         string msg = \"addmultisigaddress nrequired [\\\"key\\\",...] ( \\\"account\\\" )\\n\"\n             \"\\nAdd a nrequired-to-sign multisignature address to the wallet.\\n\"\n             \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n-            \"If 'account' is specified, assign address to that account.\\n\"\n+            \"If 'account' is specified (DEPRECATED), assign address to that account.\\n\"\n \n             \"\\nArguments:\\n\"\n             \"1. nrequired        (numeric, required) The number of required signatures out of the n keys or addresses.\\n\"\n@@ -929,7 +923,7 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n             \"       \\\"address\\\"  (string) bitcoin address or hex-encoded public key\\n\"\n             \"       ...,\\n\"\n             \"     ]\\n\"\n-            \"3. \\\"account\\\"      (string, optional) An account to assign the addresses to.\\n\"\n+            \"3. \\\"account\\\"      (string, optional) DEPRECATED. An account to assign the addresses to.\\n\"\n \n             \"\\nResult:\\n\"\n             \"\\\"bitcoinaddress\\\"  (string) A bitcoin address associated with the keys.\\n\"\n@@ -1105,7 +1099,7 @@ Value listreceivedbyaddress(const Array& params, bool fHelp)\n             \"  {\\n\"\n             \"    \\\"involvesWatchonly\\\" : \\\"true\\\",    (bool) Only returned if imported addresses were involved in transaction\\n\"\n             \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n-            \"    \\\"account\\\" : \\\"accountname\\\",       (string) The account of the receiving address. The default account is \\\"\\\".\\n\"\n+            \"    \\\"account\\\" : \\\"accountname\\\",       (string) DEPRECATED. The account of the receiving address. The default account is \\\"\\\".\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in btc received by the address\\n\"\n             \"    \\\"confirmations\\\" : n                (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"  }\\n\"\n@@ -1126,7 +1120,7 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n     if (fHelp || params.size() > 3)\n         throw runtime_error(\n             \"listreceivedbyaccount ( minconf includeempty includeWatchonly)\\n\"\n-            \"\\nList balances by account.\\n\"\n+            \"\\nDEPRECATED. List balances by account.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. minconf      (numeric, optional, default=1) The minimum number of confirmations before payments are included.\\n\"\n             \"2. includeempty (boolean, optional, default=false) Whether to include accounts that haven't received any payments.\\n\"\n@@ -1253,15 +1247,14 @@ Value listtransactions(const Array& params, bool fHelp)\n             \"listtransactions ( \\\"account\\\" count from includeWatchonly)\\n\"\n             \"\\nReturns up to 'count' most recent transactions skipping the first 'from' transactions for account 'account'.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"account\\\"    (string, optional) The account name. If not included, it will list all transactions for all accounts.\\n\"\n-            \"                                     If \\\"\\\" is set, it will list transactions for the default account.\\n\"\n+            \"1. \\\"account\\\"    (string, optional) DEPRECATED. The account name. Should be \\\"*\\\".\\n\"\n             \"2. count          (numeric, optional, default=10) The number of transactions to return\\n\"\n             \"3. from           (numeric, optional, default=0) The number of transactions to skip\\n\"\n             \"4. includeWatchonly (bool, optional, default=false) Include transactions to watchonly addresses (see 'importaddress')\\n\"\n             \"\\nResult:\\n\"\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"account\\\":\\\"accountname\\\",       (string) The account name associated with the transaction. \\n\"\n+            \"    \\\"account\\\":\\\"accountname\\\",       (string) DEPRECATED. The account name associated with the transaction. \\n\"\n             \"                                                It will be \\\"\\\" for the default account.\\n\"\n             \"    \\\"address\\\":\\\"bitcoinaddress\\\",    (string) The bitcoin address of the transaction. Not present for \\n\"\n             \"                                                move transactions (category = move).\\n\"\n@@ -1295,12 +1288,10 @@ Value listtransactions(const Array& params, bool fHelp)\n             \"\\nExamples:\\n\"\n             \"\\nList the most recent 10 transactions in the systems\\n\"\n             + HelpExampleCli(\"listtransactions\", \"\") +\n-            \"\\nList the most recent 10 transactions for the tabby account\\n\"\n-            + HelpExampleCli(\"listtransactions\", \"\\\"tabby\\\"\") +\n-            \"\\nList transactions 100 to 120 from the tabby account\\n\"\n-            + HelpExampleCli(\"listtransactions\", \"\\\"tabby\\\" 20 100\") +\n+            \"\\nList transactions 100 to 120\\n\"\n+            + HelpExampleCli(\"listtransactions\", \"\\\"*\\\" 20 100\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"listtransactions\", \"\\\"tabby\\\", 20, 100\")\n+            + HelpExampleRpc(\"listtransactions\", \"\\\"*\\\", 20, 100\")\n         );\n \n     string strAccount = \"*\";\n@@ -1363,7 +1354,7 @@ Value listaccounts(const Array& params, bool fHelp)\n     if (fHelp || params.size() > 2)\n         throw runtime_error(\n             \"listaccounts ( minconf includeWatchonly)\\n\"\n-            \"\\nReturns Object that has account names as keys, account balances as values.\\n\"\n+            \"\\nDEPRECATED. Returns Object that has account names as keys, account balances as values.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. minconf          (numeric, optional, default=1) Only include transactions with at least this many confirmations\\n\"\n             \"2. includeWatchonly (bool, optional, default=false) Include balances in watchonly addresses (see 'importaddress')\\n\"\n@@ -1446,7 +1437,7 @@ Value listsinceblock(const Array& params, bool fHelp)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"transactions\\\": [\\n\"\n-            \"    \\\"account\\\":\\\"accountname\\\",       (string) The account name associated with the transaction. Will be \\\"\\\" for the default account.\\n\"\n+            \"    \\\"account\\\":\\\"accountname\\\",       (string) DEPRECATED. The account name associated with the transaction. Will be \\\"\\\" for the default account.\\n\"\n             \"    \\\"address\\\":\\\"bitcoinaddress\\\",    (string) The bitcoin address of the transaction. Not present for move transactions (category = move).\\n\"\n             \"    \\\"category\\\":\\\"send|receive\\\",     (string) The transaction category. 'send' has negative amounts, 'receive' has positive amounts.\\n\"\n             \"    \\\"amount\\\": x.xxx,          (numeric) The amount in btc. This is negative for the 'send' category, and for the 'move' category for moves \\n\"\n@@ -1540,7 +1531,7 @@ Value gettransaction(const Array& params, bool fHelp)\n             \"  \\\"timereceived\\\" : ttt,    (numeric) The time received in seconds since epoch (1 Jan 1970 GMT)\\n\"\n             \"  \\\"details\\\" : [\\n\"\n             \"    {\\n\"\n-            \"      \\\"account\\\" : \\\"accountname\\\",  (string) The account name involved in the transaction, can be \\\"\\\" for the default account.\\n\"\n+            \"      \\\"account\\\" : \\\"accountname\\\",  (string) DEPRECATED. The account name involved in the transaction, can be \\\"\\\" for the default account.\\n\"\n             \"      \\\"address\\\" : \\\"bitcoinaddress\\\",   (string) The bitcoin address involved in the transaction\\n\"\n             \"      \\\"category\\\" : \\\"send|receive\\\",    (string) The category, either 'send' or 'receive'\\n\"\n             \"      \\\"amount\\\" : x.xxx                  (numeric) The amount in btc\\n\""
      }
    ]
  }
]