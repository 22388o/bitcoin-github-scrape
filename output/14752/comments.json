[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446724627",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-446724627",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 446724627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjcyNDYyNw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T20:03:00Z",
    "updated_at": "2018-12-12T20:03:00Z",
    "author_association": "MEMBER",
    "body": "Could also add coverage to `IsPayToScriptHash`?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446724627/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446872409",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-446872409",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 446872409,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0Njg3MjQwOQ==",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?u=e81e2a7da2b6e14d523d137b92a3202387134531&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-13T07:44:39Z",
    "updated_at": "2018-12-13T07:44:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Could also add coverage to `IsPayToScriptHash`?\r\n\r\nThat test already exists, in `script_p2sh_tests.cpp` (in fact, that's where the \"unrelated\" change from above is).",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/446872409/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485854734",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-485854734",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 485854734,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NTg1NDczNA==",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?u=e81e2a7da2b6e14d523d137b92a3202387134531&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-23T15:31:48Z",
    "updated_at": "2019-04-23T15:31:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased and updated the code for the recent refactoring of the testing setup.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/485854734/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938742251",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-938742251",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 938742251,
    "node_id": "IC_kwDOABII58439BHr",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T15:43:08Z",
    "updated_at": "2021-10-16T16:57:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938742251/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944000018",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-944000018",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 944000018,
    "node_id": "IC_kwDOABII5844REwS",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?u=e81e2a7da2b6e14d523d137b92a3202387134531&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T04:47:14Z",
    "updated_at": "2021-10-15T04:47:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebased",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944000018/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944270937",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#issuecomment-944270937",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/14752",
    "id": 944270937,
    "node_id": "IC_kwDOABII5844SG5Z",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-15T12:49:46Z",
    "updated_at": "2021-10-15T12:49:46Z",
    "author_association": "MEMBER",
    "body": "cc @dongcarl Do you still have concerns about this?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/944270937/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234518469",
    "pull_request_review_id": 176172615,
    "id": 234518469,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDUxODQ2OQ==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash ());",
    "path": "src/test/script_segwit_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "6473702ebc6d63335677345da67ba0b890396bc6",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: Remove space before `()` :-)\r\n\r\nApplies throughout this PR.",
    "created_at": "2018-11-19T07:48:06Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r234518469",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234518469"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r234518469"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234518469/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234572978",
    "pull_request_review_id": 176238949,
    "id": 234572978,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNDU3Mjk3OA==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash ());",
    "path": "src/test/script_segwit_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "6473702ebc6d63335677345da67ba0b890396bc6",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch (that's left over from me coding GNU style most of the time outside of Bitcoin), fixed.",
    "created_at": "2018-11-19T10:51:15Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r234572978",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234572978"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r234572978"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/234572978/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 234518469
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236981458",
    "pull_request_review_id": 179170361,
    "id": 236981458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjk4MTQ1OA==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I might be missing something but the two `BOOST_CHECK`s here seem to be testing `IsPayToWitnessScriptHash()` on identical `CScript`s. If the intention is to test that the two ways of constructing a `CScript` yield the same `CScript`, perhaps that should be in another test case in another file.",
    "created_at": "2018-11-28T08:31:10Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236981458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236981458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236981458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236981458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 14,
    "original_line": 14,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236983416",
    "pull_request_review_id": 179170361,
    "id": 236983416,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjk4MzQxNg==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};\n+    CScript wit;\n+    wit << OP_0 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 0, program));\n+\n+    wit.clear();\n+    program.resize(40);\n+    wit << OP_16 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 16, program));\n+\n+    program.resize(32);",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 107,
    "original_position": 105,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's a little unclear why the construction of the `CScript` here is different from the other two `CHECK`s in the same test, does this change in construction test the correctness of `IsExpectedWitnessProgram` in any way? As in, what advantages does this have over:\r\n\r\n```c++\r\nwit.clear();\r\nprogram.resize(30);\r\nwit << OP_5 << program;\r\nBOOST_CHECK(IsExpectedWitnessProgram(wit, 5, program));\r\n```",
    "created_at": "2018-11-28T08:37:47Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236983416",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236983416"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236983416"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236983416/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 107,
    "original_line": 107,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236998799",
    "pull_request_review_id": 179170361,
    "id": 236998799,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjk5ODc5OQ==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 96,
    "original_position": 95,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    // Witness programs have a minimum data push of 2 bytes\r\n    std::vector<unsigned char> program = {42, 18};\r\n```",
    "created_at": "2018-11-28T09:21:35Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236998799",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236998799"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236998799"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236998799/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 96,
    "original_line": 96,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236999231",
    "pull_request_review_id": 179170361,
    "id": 236999231,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNjk5OTIzMQ==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};\n+    CScript wit;\n+    wit << OP_0 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 0, program));\n+\n+    wit.clear();\n+    program.resize(40);",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 103,
    "original_position": 101,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    // Witness programs have a maximum data push of 40 bytes\r\n    program.resize(40);\r\n```",
    "created_at": "2018-11-28T09:22:53Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236999231",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236999231"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r236999231"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/236999231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237077887",
    "pull_request_review_id": 179288090,
    "id": 237077887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzA3Nzg4Nw==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 14,
    "original_position": 14,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The main reason why I added the second version here is because that code is used later for constructing the \"invalid\" ones as well (basically so that we would likely notice if the construction itself is wrong and the other tests invalid).  But if you thank that it is clear enough that those scripts are constructed in the right way, then I'm happy to drop either of the two tests in this test case.",
    "created_at": "2018-11-28T13:14:14Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237077887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237077887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237077887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237077887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 14,
    "original_line": 14,
    "side": "RIGHT",
    "in_reply_to_id": 236981458
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237078619",
    "pull_request_review_id": 179289036,
    "id": 237078619,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzA3ODYxOQ==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};\n+    CScript wit;\n+    wit << OP_0 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 0, program));\n+\n+    wit.clear();\n+    program.resize(40);\n+    wit << OP_16 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 16, program));\n+\n+    program.resize(32);",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 107,
    "original_position": 105,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added this for the same reason as with the other comment above - to make sure that code constructing a script \"this way\" yields a valid witness program as well, while very similar code in later tests with slight modifications yields an invalid program.  Again I'm happy to remove that one if everyone else thinks this is clear anyway.",
    "created_at": "2018-11-28T13:16:39Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237078619",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237078619"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237078619"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237078619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 107,
    "original_line": 107,
    "side": "RIGHT",
    "in_reply_to_id": 236983416
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079443",
    "pull_request_review_id": 179290123,
    "id": 237079443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzA3OTQ0Mw==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 96,
    "original_position": 95,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added to the commit, thanks for the suggestion!",
    "created_at": "2018-11-28T13:19:26Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237079443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237079443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 96,
    "original_line": 96,
    "side": "RIGHT",
    "in_reply_to_id": 236998799
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079483",
    "pull_request_review_id": 179290178,
    "id": 237079483,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIzNzA3OTQ4Mw==",
    "diff_hunk": "@@ -0,0 +1,162 @@\n+// Copyright (c) 2012-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/test_bitcoin.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(script_segwit_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Valid)\n+{\n+    uint256 dummy;\n+    CScript p2wsh;\n+    p2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(p2wsh.IsPayToWitnessScriptHash());\n+\n+    std::vector<unsigned char> bytes = {OP_0, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_NotOp0)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_1 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Size)\n+{\n+    uint160 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Nop)\n+{\n+    uint256 dummy;\n+    CScript notp2wsh;\n+    notp2wsh << OP_0 << OP_NOP << ToByteVector(dummy);\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_EmptyScript)\n+{\n+    CScript notp2wsh;\n+    BOOST_CHECK(!notp2wsh.IsPayToWitnessScriptHash());\n+}\n+\n+BOOST_AUTO_TEST_CASE(IsPayToWitnessScriptHash_Invalid_Pushdata)\n+{\n+    // A script is not P2WSH if OP_PUSHDATA is used to push the hash.\n+    std::vector<unsigned char> bytes = {OP_0, OP_PUSHDATA1, 32};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA2, 32, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+\n+    bytes = {OP_0, OP_PUSHDATA4, 32, 0, 0, 0};\n+    bytes.insert(bytes.end(), 32, 0);\n+    BOOST_CHECK(!CScript(bytes.begin(), bytes.end()).IsPayToWitnessScriptHash());\n+}\n+\n+namespace {\n+\n+bool IsExpectedWitnessProgram(const CScript& script, const int expectedVersion, const std::vector<unsigned char>& expectedProgram)\n+{\n+    int actualVersion;\n+    std::vector<unsigned char> actualProgram;\n+    if (!script.IsWitnessProgram(actualVersion, actualProgram)) {\n+        return false;\n+    }\n+    BOOST_CHECK_EQUAL(actualVersion, expectedVersion);\n+    BOOST_CHECK(actualProgram == expectedProgram);\n+    return true;\n+}\n+\n+bool IsNoWitnessProgram(const CScript& script)\n+{\n+    int dummyVersion;\n+    std::vector<unsigned char> dummyProgram;\n+    return !script.IsWitnessProgram(dummyVersion, dummyProgram);\n+}\n+\n+} // anonymous namespace\n+\n+BOOST_AUTO_TEST_CASE(IsWitnessProgram_Valid)\n+{\n+    std::vector<unsigned char> program = {42, 18};\n+    CScript wit;\n+    wit << OP_0 << program;\n+    BOOST_CHECK(IsExpectedWitnessProgram(wit, 0, program));\n+\n+    wit.clear();\n+    program.resize(40);",
    "path": "src/test/script_segwit_tests.cpp",
    "position": 103,
    "original_position": 101,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "54c648d327c3c5903edd7ec738666f9bd9bf564d",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Added.",
    "created_at": "2018-11-28T13:19:33Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237079483",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079483"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r237079483"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/237079483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 103,
    "original_line": 103,
    "side": "RIGHT",
    "in_reply_to_id": 236999231
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241164191",
    "pull_request_review_id": 184368154,
    "id": 241164191,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTE2NDE5MQ==",
    "diff_hunk": "@@ -213,14 +213,22 @@ BOOST_AUTO_TEST_CASE(is)\n     BOOST_CHECK(p2sh.IsPayToScriptHash());\n \n     // Not considered pay-to-script-hash if using one of the OP_PUSHDATA opcodes:\n-    static const unsigned char direct[] =    { OP_HASH160, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(CScript(direct, direct+sizeof(direct)).IsPayToScriptHash());\n-    static const unsigned char pushdata1[] = { OP_HASH160, OP_PUSHDATA1, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata1, pushdata1+sizeof(pushdata1)).IsPayToScriptHash());\n-    static const unsigned char pushdata2[] = { OP_HASH160, OP_PUSHDATA2, 20,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata2, pushdata2+sizeof(pushdata2)).IsPayToScriptHash());\n-    static const unsigned char pushdata4[] = { OP_HASH160, OP_PUSHDATA4, 20,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata4, pushdata4+sizeof(pushdata4)).IsPayToScriptHash());\n+    std::vector<unsigned char> direct = {OP_HASH160, 20};\n+    direct.insert(direct.end(), 20, 0);\n+    direct.push_back(OP_EQUAL);\n+    BOOST_CHECK(CScript(direct.begin(), direct.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata1 = {OP_HASH160, OP_PUSHDATA1, 20};\n+    pushdata1.insert(pushdata1.end(), 20, 0);\n+    pushdata1.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata1.begin(), pushdata1.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata2 = {OP_HASH160, 20, 0};\n+    pushdata2.insert(pushdata2.end(), 20, 0);\n+    pushdata2.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata2.begin(), pushdata2.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata4 = {OP_HASH160, 20, 0, 0, 0};\n+    pushdata4.insert(pushdata4.end(), 20, 0);\n+    pushdata4.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata4.begin(), pushdata4.end()).IsPayToScriptHash());",
    "path": "src/test/script_p2sh_tests.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "5072c40b292dfd7aeb59a52f5576c2a57f426134",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Meh, I'd prefer if this was dropped from this pull request. Could create a separate pull request later if you feel strongly.",
    "created_at": "2018-12-12T19:57:48Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r241164191",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241164191"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r241164191"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241164191/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241297490",
    "pull_request_review_id": 184532619,
    "id": 241297490,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0MTI5NzQ5MA==",
    "diff_hunk": "@@ -213,14 +213,22 @@ BOOST_AUTO_TEST_CASE(is)\n     BOOST_CHECK(p2sh.IsPayToScriptHash());\n \n     // Not considered pay-to-script-hash if using one of the OP_PUSHDATA opcodes:\n-    static const unsigned char direct[] =    { OP_HASH160, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(CScript(direct, direct+sizeof(direct)).IsPayToScriptHash());\n-    static const unsigned char pushdata1[] = { OP_HASH160, OP_PUSHDATA1, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata1, pushdata1+sizeof(pushdata1)).IsPayToScriptHash());\n-    static const unsigned char pushdata2[] = { OP_HASH160, OP_PUSHDATA2, 20,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata2, pushdata2+sizeof(pushdata2)).IsPayToScriptHash());\n-    static const unsigned char pushdata4[] = { OP_HASH160, OP_PUSHDATA4, 20,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata4, pushdata4+sizeof(pushdata4)).IsPayToScriptHash());\n+    std::vector<unsigned char> direct = {OP_HASH160, 20};\n+    direct.insert(direct.end(), 20, 0);\n+    direct.push_back(OP_EQUAL);\n+    BOOST_CHECK(CScript(direct.begin(), direct.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata1 = {OP_HASH160, OP_PUSHDATA1, 20};\n+    pushdata1.insert(pushdata1.end(), 20, 0);\n+    pushdata1.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata1.begin(), pushdata1.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata2 = {OP_HASH160, 20, 0};\n+    pushdata2.insert(pushdata2.end(), 20, 0);\n+    pushdata2.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata2.begin(), pushdata2.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata4 = {OP_HASH160, 20, 0, 0, 0};\n+    pushdata4.insert(pushdata4.end(), 20, 0);\n+    pushdata4.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata4.begin(), pushdata4.end()).IsPayToScriptHash());",
    "path": "src/test/script_p2sh_tests.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "5072c40b292dfd7aeb59a52f5576c2a57f426134",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I do not feel particularly strongly, but I think it is clearly an improvement in readability.  Since it is mostly unrelated to this change (except that it is the same kind of test), I put it into a separate commit.  But I'm happy to remove it from here and perhaps submit separately if the community thinks that's what we should do.",
    "created_at": "2018-12-13T07:43:28Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r241297490",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241297490"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r241297490"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/241297490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 241164191
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245242804",
    "pull_request_review_id": 189297209,
    "id": 245242804,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDI0NTI0MjgwNA==",
    "diff_hunk": "@@ -213,14 +213,22 @@ BOOST_AUTO_TEST_CASE(is)\n     BOOST_CHECK(p2sh.IsPayToScriptHash());\n \n     // Not considered pay-to-script-hash if using one of the OP_PUSHDATA opcodes:\n-    static const unsigned char direct[] =    { OP_HASH160, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(CScript(direct, direct+sizeof(direct)).IsPayToScriptHash());\n-    static const unsigned char pushdata1[] = { OP_HASH160, OP_PUSHDATA1, 20, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata1, pushdata1+sizeof(pushdata1)).IsPayToScriptHash());\n-    static const unsigned char pushdata2[] = { OP_HASH160, OP_PUSHDATA2, 20,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata2, pushdata2+sizeof(pushdata2)).IsPayToScriptHash());\n-    static const unsigned char pushdata4[] = { OP_HASH160, OP_PUSHDATA4, 20,0,0,0, 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, OP_EQUAL };\n-    BOOST_CHECK(!CScript(pushdata4, pushdata4+sizeof(pushdata4)).IsPayToScriptHash());\n+    std::vector<unsigned char> direct = {OP_HASH160, 20};\n+    direct.insert(direct.end(), 20, 0);\n+    direct.push_back(OP_EQUAL);\n+    BOOST_CHECK(CScript(direct.begin(), direct.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata1 = {OP_HASH160, OP_PUSHDATA1, 20};\n+    pushdata1.insert(pushdata1.end(), 20, 0);\n+    pushdata1.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata1.begin(), pushdata1.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata2 = {OP_HASH160, 20, 0};\n+    pushdata2.insert(pushdata2.end(), 20, 0);\n+    pushdata2.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata2.begin(), pushdata2.end()).IsPayToScriptHash());\n+    std::vector<unsigned char> pushdata4 = {OP_HASH160, 20, 0, 0, 0};\n+    pushdata4.insert(pushdata4.end(), 20, 0);\n+    pushdata4.push_back(OP_EQUAL);\n+    BOOST_CHECK(!CScript(pushdata4.begin(), pushdata4.end()).IsPayToScriptHash());",
    "path": "src/test/script_p2sh_tests.cpp",
    "position": null,
    "original_position": 27,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "5072c40b292dfd7aeb59a52f5576c2a57f426134",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Split out into #15099.",
    "created_at": "2019-01-04T09:06:45Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r245242804",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245242804"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r245242804"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/245242804/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 231,
    "side": "RIGHT",
    "in_reply_to_id": 241164191
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588222286",
    "pull_request_review_id": 605043008,
    "id": 588222286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODIyMjI4Ng==",
    "diff_hunk": "@@ -0,0 +1,164 @@\n+// Copyright (c) 2012-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/setup_common.h>",
    "path": "src/test/script_segwit_tests.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "a1cb474203b583df140005cc1aab80310e55ac9e",
    "user": {
      "login": "leonardojobim",
      "id": 2694753,
      "node_id": "MDQ6VXNlcjI2OTQ3NTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2694753?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/leonardojobim",
      "html_url": "https://github.com/leonardojobim",
      "followers_url": "https://api.github.com/users/leonardojobim/followers",
      "following_url": "https://api.github.com/users/leonardojobim/following{/other_user}",
      "gists_url": "https://api.github.com/users/leonardojobim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/leonardojobim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/leonardojobim/subscriptions",
      "organizations_url": "https://api.github.com/users/leonardojobim/orgs",
      "repos_url": "https://api.github.com/users/leonardojobim/repos",
      "events_url": "https://api.github.com/users/leonardojobim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/leonardojobim/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n#include <test/util/setup_common.h>\r\n```\r\nThis change makes the test works with current master branch.",
    "created_at": "2021-03-05T11:23:30Z",
    "updated_at": "2021-03-05T12:56:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r588222286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588222286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r588222286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588222286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 6,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588275820",
    "pull_request_review_id": 605113668,
    "id": 588275820,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODI3NTgyMA==",
    "diff_hunk": "@@ -0,0 +1,164 @@\n+// Copyright (c) 2012-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <script/script.h>\n+#include <test/setup_common.h>",
    "path": "src/test/script_segwit_tests.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "a1cb474203b583df140005cc1aab80310e55ac9e",
    "user": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good catch (I already had mostly forgotten about this PR).  I've rebased it to latest master now + added your fix, which indeed makes it work also for me.",
    "created_at": "2021-03-05T12:57:20Z",
    "updated_at": "2021-03-05T12:57:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r588275820",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588275820"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r588275820"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588275820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 6,
    "side": "RIGHT",
    "in_reply_to_id": 588222286
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/724971922",
    "pull_request_review_id": 774957579,
    "id": 724971922,
    "node_id": "PRRC_kwDOABII584rNjGS",
    "diff_hunk": "@@ -117,6 +117,7 @@ BITCOIN_TESTS =\\\n   test/scheduler_tests.cpp \\\n   test/script_p2sh_tests.cpp \\\n   test/script_tests.cpp \\\n+  test/script_segwit_tests.cpp \\",
    "path": "src/Makefile.test.include",
    "position": 4,
    "original_position": 4,
    "commit_id": "bce9aaf31e2b0428e686e151324f8561ad71f11f",
    "original_commit_id": "b6b64d467df0522575820827e2b4e86674b1a4d0",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Could sort the lines here?",
    "created_at": "2021-10-08T12:35:34Z",
    "updated_at": "2021-10-08T12:35:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r724971922",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/724971922"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/14752#discussion_r724971922"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/14752"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/724971922/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 123,
    "original_line": 123,
    "side": "RIGHT"
  }
]