[
  {
    "sha": "8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTZhMjFlMTFiYzVhOWFlYzkwMGQ5ZDg3OWUzMmIxN2ZmY2QwMTVj",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-09-13T15:05:46Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2016-09-14T16:48:34Z"
      },
      "message": "Split debug for estimatefee into {estimatefee,2}",
      "tree": {
        "sha": "1d675ea59a22c58979fa175731526edb0720db98",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d675ea59a22c58979fa175731526edb0720db98"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a82e5d8220bbc8b5d786bed99b0876f530b9b7cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a82e5d8220bbc8b5d786bed99b0876f530b9b7cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a82e5d8220bbc8b5d786bed99b0876f530b9b7cc"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f6ea9486b89b884e6bdcefebd6c8080f08a8ef67",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
        "patch": "@@ -423,7 +423,7 @@ std::string HelpMessage(HelpMessageMode mode)\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n     }\n-    string debugCategories = \"addrman, alert, bench, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n+    string debugCategories = \"addrman, alert, bench, coindb, db, estimatefee{,2}, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n     if (mode == HMM_BITCOIN_QT)\n         debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +"
      },
      {
        "sha": "a6b9a0024c8a055f1e05def3c2de7a0f80ff4f78",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e6a21e11bc5a9aec900d9d879e32b17ffcd015c/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=8e6a21e11bc5a9aec900d9d879e32b17ffcd015c",
        "patch": "@@ -251,7 +251,7 @@ unsigned int TxConfirmStats::NewTx(unsigned int nBlockHeight, double val)\n     unsigned int bucketindex = bucketMap.lower_bound(val)->second;\n     unsigned int blockIndex = nBlockHeight % unconfTxs.size();\n     unconfTxs[blockIndex][bucketindex]++;\n-    LogPrint(\"estimatefee\", \"adding to %s\", dataTypeString);\n+    LogPrint(\"estimatefee2\", \"adding to %s\", dataTypeString);\n     return bucketindex;\n }\n \n@@ -380,7 +380,7 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     double curPri = entry.GetPriority(txHeight);\n     mapMemPoolTxs[hash].blockHeight = txHeight;\n \n-    LogPrint(\"estimatefee\", \"Blockpolicy mempool tx %s \", hash.ToString().substr(0,10));\n+    LogPrint(\"estimatefee2\", \"Blockpolicy mempool tx %s \", hash.ToString().substr(0,10));\n     // Record this as a priority estimate\n     if (entry.GetFee() == 0 || isPriDataPoint(feeRate, curPri)) {\n         mapMemPoolTxs[hash].stats = &priStats;\n@@ -392,9 +392,9 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n         mapMemPoolTxs[hash].bucketIndex = feeStats.NewTx(txHeight, (double)feeRate.GetFeePerK());\n     }\n     else {\n-        LogPrint(\"estimatefee\", \"not adding\");\n+        LogPrint(\"estimatefee2\", \"not adding\");\n     }\n-    LogPrint(\"estimatefee\", \"\\n\");\n+    LogPrint(\"estimatefee2\", \"\\n\");\n }\n \n void CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry& entry)"
      }
    ]
  }
]