ajtowns,2021-01-15 08:35:33,Next set of patches from #20758 -- should be straightforward to review hopefully.,https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-760753399,760753399,
DrahtBot,2021-01-15 15:04:31,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21162 (Net Processing: Move RelayTransaction() into PeerManager by jnewbery)\n* #21160 (Net/Net processing: Move tx inven",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-760993809,760993809,
ajtowns,2021-01-29 16:55:03,"Rebased, addressed some of @jnewbery's comments. There's still more stuff coming from #20758 so will leave reorganising PeerManagerImpl declaration until later.",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-769922909,769922909,
vasild,2021-02-09 17:06:16,"It would be really nice to get these right before merge:\n\n* Order of member variables and methods, private and public. I think the [Google C++ Style Guide](https://google.github.io/styleguide/cppguide.html#Declaration_Order) makes perfect sense.\n* Member variables naming.\n* Proper doxygen comments.\n\nOtherwise 6452190841f8da1cdaf899d064974136ab37659f looks good.",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-776091733,776091733,
jnewbery,2021-02-15 10:37:04,"I think this is probably ready for merge. It's a simple refactor and has three ACKs.\n\n@ajtowns - All three reviewers have asked for sorting members, doxygen comments and renaming data members. I have a small branch that does those things here: https://github.com/jnewbery/bitcoin/tree/pr20942.1. Feel free to take those commits in a follow-up PR.",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-779129464,779129464,
amitiuttarwar,2021-02-15 21:59:39,"fwiw, I had reviewed until a490f0a056456d683dd8ef6f89a5af1a13792118, so post-merge-ACK the first few commits =P ",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-779466509,779466509,
Sjors,2021-04-01 09:29:06,"Thanks, d44084883adcf00f50d3d5a9e0c88e3a0b276817 allows me to simplify #20295 a bit.",https://github.com/bitcoin/bitcoin/pull/20942#issuecomment-811781708,811781708,
jnewbery,2021-01-18 11:21:38,You're renaming the other data members as you move them into `PeerManagerImpl`. Perhaps rename this to `m_sync_started`?,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559495985,559495985,src/net_processing.cpp
jnewbery,2021-01-18 11:22:09,Perhaps rename this to `m_block_sources`?,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559496221,559496221,src/net_processing.cpp
jnewbery,2021-01-18 11:29:33,"Since you're already renaming this, consider dropping the outdated cs naming. Perhaps `m_recent_confirmed_transactions_mutex`?",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559500293,559500293,src/net_processing.cpp
jnewbery,2021-01-18 11:36:59,Move the function comments to the declarations now that these are declared separately from the function definition.,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559504329,559504329,src/net_processing.cpp
jnewbery,2021-01-18 11:40:03,"Now that `m_last_tip_update` isn't a global and can be initialized at the time that `PeerManagerImpl` is constructed, consider initializing it to `GetTime()` in the initializer list and removing this special casing.",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559506033,559506033,src/net_processing.cpp
jnewbery,2021-01-18 11:42:44,Move function comment to the declaration.,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559507511,559507511,src/net_processing.cpp
ajtowns,2021-01-29 15:56:37,"I'm only renaming the ones that are currently marked `g_` since that would be wrong once they're no longer global. I'm avoiding renaming the others because that's unnecessary churn.\n\nI think all of them are `GUARDED_BY(cs_main)` so renaming them at the same time as switching them to a new mutex would make sense -- that's the point at which you need to be reviewing every place the variable is t",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r566919793,566919793,src/net_processing.cpp
ajtowns,2021-01-29 15:57:00,"Sure, makes sense.",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r566920079,566920079,src/net_processing.cpp
ajtowns,2021-01-29 16:27:32,That seems like a good idea -- I think it'd let you mark `TipMayBeStale` as a const method as well; but I think it goes beyond the mechanical code shuffling that the rest of this PR does.,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r566940719,566940719,src/net_processing.cpp
jnewbery,2021-02-04 12:21:20,This (and the comment for `MarkBlockAsInFlight()`) won't get picked up by doxygen without the `/**` comment marker (https://www.doxygen.nl/manual/docblocks.html),https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570180374,570180374,src/net_processing.cpp
jnewbery,2021-02-04 12:29:08,ok!,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570185059,570185059,src/net_processing.cpp
jnewbery,2021-02-04 12:30:00,"Yep, fine to leave this. There's plenty more to be cleaned up after this PR.",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570185597,570185597,src/net_processing.cpp
ariard,2021-02-05 13:09:37,"eeac506\n\nI don't know if we have code guidelines on this but maybe move this method at the bottom of the other ones instead of among variables members. \n\nAlso maybe add a small comment ""Check if we have already seen this transaction by looking up its identifier among reject filter, orphan pool, recent confirmations and mempool"" ? ",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570955961,570955961,src/net_processing.cpp
ariard,2021-02-05 13:22:39,"a490f0a\n\n""Check if our chain is stalling by measuring if a delta of pow targets has been reached since last time of tip update"" ?",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570962958,570962958,src/net_processing.cpp
jnewbery,2021-02-05 14:05:24,See discussion here: https://github.com/bitcoin/bitcoin/pull/20942#discussion_r559495985,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r570989482,570989482,src/net_processing.cpp
ajtowns,2021-02-11 01:58:42,Added some text to https://github.com/bitcoin/bitcoin/pull/20758/commits/4f9931df03ac5ea223733abe3909db8c61aa559e ,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r574210485,574210485,src/net_processing.cpp
ajtowns,2021-02-15 02:30:01,Added a todo commit in #20758 to track this,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r575912407,575912407,src/net_processing.cpp
MarcoFalke,2021-02-15 10:54:03,"Would be good to not shadow the lock annotation from the ""header"". Otherwise it *won't* result in a compile failure if a new lock requirement is added to the ""header"", but not here, and the new lock isn't taken.",https://github.com/bitcoin/bitcoin/pull/20942#discussion_r576105248,576105248,src/net_processing.cpp
MarcoFalke,2021-02-15 10:54:14,Same for all other commits.,https://github.com/bitcoin/bitcoin/pull/20942#discussion_r576105380,576105380,src/net_processing.cpp
