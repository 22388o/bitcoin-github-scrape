MarcoFalke,2019-11-06 13:40:16,ACK 9c1b60bc0793207295a8355df83ffcf094aa77c8,https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550312942,550312942,
ryanofsky,2019-11-06 14:15:55,"Updated 9c1b60bc0793207295a8355df83ffcf094aa77c8 -> fc76edec6140be51cfc1b44900aaf0139fdc4950 ([`pr/argparse-test.2`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.2) -> [`pr/argparse-test.3`](https://github.com/ryanofsky/bitcoin/commits/pr/argparse-test.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/argparse-test.2..pr/argparse-test.3)) to make comment a little clear",https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550328156,550328156,
promag,2019-11-06 15:03:50,"ACK 286f197, more surprising results ðŸ˜± ",https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550350215,550350215,
laanwj,2019-11-06 16:00:49,ACK 286f197704e82045c762d332aba5d1ac52e0212d,https://github.com/bitcoin/bitcoin/pull/17390#issuecomment-550376486,550376486,
laanwj,2019-11-06 09:08:30,"I really don't like setting these in stone. Let's test desired behavior. Instead of adding tests for the current insane behavior (which relies on implementation details of `atoi`), I think we need to work on getting errors to the user for these.",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r342982604,342982604,src/test/util_tests.cpp
MarcoFalke,2019-11-06 12:24:32,"I think it is easier to review ""fixes"" when they are also documented with test changes.",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343065919,343065919,src/test/util_tests.cpp
laanwj,2019-11-06 12:30:30,"I'm not sure about that. It could just as well bite anyone that dares to change this parsing in the future. This behavior was never documented so no one should be relying on it.\n(and a test is essentially ""this should work"" documentation)",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343068269,343068269,src/test/util_tests.cpp
ryanofsky,2019-11-06 13:01:56,"> I really don't like setting these in stone. \n\nLike Marco is saying the goal of the test is to make it **easier** not harder to fix these confusing parsings in the future. Easier as a developer because you can test the effects of your change with a simple make check, easier as a reviewer to underand the change. Easier as a developer because after implementing the desired behavior you don't ha",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343081284,343081284,src/test/util_tests.cpp
laanwj,2019-11-06 13:08:00,"OK, fair enough. To be clear I agree with adding this test conceptually, and some of the additional cases like ""spaces around the argument should be ignored"" seem decent\nbut say, we probably don't want a test for ""what atoi regards as whitespace depends on your locale"" :cry: \nanyhow, if this is with the understanding that these aren't supposed to be guaranteed to be supported for the infinite ",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343083742,343083742,src/test/util_tests.cpp
MarcoFalke,2019-11-06 13:17:36,Maybe a comment that says the tests are fragile and meant to be removed could help?,https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343088006,343088006,src/test/util_tests.cpp
ryanofsky,2019-11-06 13:27:06,"> Maybe a comment that says the tests are fragile and meant to be removed could help?\n\nThere is a general comment already that ""Some of these cases could be ambiguous or surprising to users, and might be worth triggering errors or warning in the future"", but I could also note something like ""// Confusing parsing, should be changed or disallowed in the future"" on specific cases if desired.\n\",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343092555,343092555,src/test/util_tests.cpp
laanwj,2019-11-06 14:12:39,"> ""// Confusing parsing, should be changed or disallowed in the future"" on specific cases if desired.\n\nI think that's a good idea, to split the list into ""normal"" and ""expected"" cases and ""parser details leaking through please don't do this"" cases.\n",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343115184,343115184,src/test/util_tests.cpp
promag,2019-11-06 14:56:07,"nit, if you have to push again maybe include `BOOST_CHECK(error.empty());`.",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343140341,343140341,src/test/util_tests.cpp
ryanofsky,2019-11-06 14:56:14,"> > ""// Confusing parsing, should be changed or disallowed in the future"" on specific cases if desired.\n> \n> I think that's a good idea, to split the list into ""normal"" and ""expected"" cases and ""parser details leaking through please don't do this"" cases.\n\nI started to do this, but wasn't actually sure which specific cases people may want to change in the future, and figured it would be bes",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343140407,343140407,src/test/util_tests.cpp
laanwj,2019-11-06 15:13:17,"> I also think we could support true false yes no for boolean flags in the future\n\nSure, but even in that case, they probably shouldn't all evaluate as 0/false. `5.` and even `5.0` such at least do what could be remotely expected (truncating decimal). Accepting faux hexadecimal is pretty bad though (which is why I initially commented on this line specifically)\n\nBut I agree this might not b",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343150286,343150286,src/test/util_tests.cpp
ryanofsky,2019-11-06 15:48:46,"> I honestly didn't know anyone had such strong opinions about this, and would have let this sleeping dog lie if I knew.\n\nHeh, I will talk to you all day about settings. But thanks for starting this. Previously, I assumed we actually had pretty good test coverage for parsing settings strings. I think filling the gap can prevent confusing and potentially dangerous bugs like https://github.com/b",https://github.com/bitcoin/bitcoin/pull/17390#discussion_r343171747,343171747,src/test/util_tests.cpp
