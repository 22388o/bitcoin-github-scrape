jonasschnelli,2015-07-09T10:51:26Z,NACK.\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119907741,119907741,
luke-jr,2015-07-09T10:52:28Z,"@jonasschnelli Read the diff before NACKing. The description sucks, but the code seems reasonable enough. I'd utACK, but I'm not feeling very confident in my judgement right now.\n",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119907841,119907841,
jonasschnelli,2015-07-09T10:58:30Z,"The code looks like...\n\n``` diff\n     if (nDataOut > 1) {\n         reason = ""multi-op-return"";\n         return false;\n     }\n+    // all OP_RETURN is not permitted\n+    if (nDataOut == tx.vout.size()) {\n+        reason = ""all-op-return"";\n+        return false;\n+    }\n```\n\nDo we have problems with a transaction containing 1vin (maybe [to]large) with 1 OP_RETURN vout?\n",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119908659,119908659,
jgarzik,2015-07-09T11:33:49Z,I don't see the point.  NAK without justification.\n\nThe improved diagnostic output is nice.\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119921882,119921882,
laanwj,2015-07-09T12:49:37Z,"Why would you want to reject transactions that are all OP_RETURN? From the viewpoint of the UTXO set those transactions are great, entirely provably unspendable - so the inputs are removed and nothing new is added.\n\n(remember that the alternative, effectively accomplishing the same, is to send to the coin eater address or another address for which no private key is known - with the difference th",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119951481,119951481,
paveljanik,2015-07-09T13:26:03Z,NACK\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119964008,119964008,
paveljanik,2015-07-09T13:44:41Z,"What is the point? You do not like the sender burning the `OP_RETURN` output value or giving the complete inputs value to miners (in the case `OP_RETURN` output value is zero)? I do not get it, sorry.\n",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-119973024,119973024,
jgarzik,2015-07-09T14:29:27Z,+1 @laanwj \n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120001364,120001364,
luke-jr,2015-07-09T18:30:46Z,@laanwj UTXO set is not the only relevant resource. It would make more sense to limit this special case to OP_RETURN without data. With data encourages spam unnecessarily.\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120096789,120096789,
btcdrak,2015-07-09T20:26:38Z,What is the reason for this PR?\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120135882,120135882,
bitkevin,2015-07-10T02:50:52Z,"reject tx like this one, https://blockchain.info/tx/9e492bbc6e56f0a7b5369a3d359c82e29e53f25a6d6a9d6d399b772224603b5c\n\n```\n{\n    ""hex"" : ""0100000001d258f657290aa721d0187b8c6ab54f603c1e673648d6375ff528b0d16edf26f90b0000008a473044022062dddfafe6ce1641639af00d76cb9164fa0e91c865c341363b3dcccc5a53914202201e2ad564407e5263c619aa6395919aef4999c7ccc8e8a7d31e6752fdf6c538c0014104334ec322ef674d8a91a5467b78c",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120208791,120208791,
luke-jr,2015-07-10T02:59:09Z,I don't see a purpose to that one other than cleaning up the UTXO set (inefficiently). Maybe the ideal solution is to provide some easy way to deprioritise these.\n,https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120209446,120209446,
bitkevin,2015-07-10T03:36:23Z,"https://blockchain.info/address/1C1r1zMnPFfjQYhW2np6h1vynxrfKK2zHm (https://chain.bitmain.com/api/v1/address/1C1r1zMnPFfjQYhW2np6h1vynxrfKK2zHm)\n\nTxs from this address are all dust tx, should reject them.\n",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120213339,120213339,
jgarzik,2015-07-10T03:43:44Z,"Dust has nothing to do with OP_RETURN.  Any value sent to OP_RETURN outputs is burned, because these outputs are provably unspendable and thus pruned.\n",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120215480,120215480,
paveljanik,2015-07-10T07:22:00Z,"@bitkevin So IIUIC you want to reject only empty-data OP_RETURN transactions? By dust you mean they are useless, but their fee is their input value which is 0.00001. As the size is only 199 bytes, this is way above our ""dust"" limit (as defined in the source code). Can you please highlight in the decoded TX above the line which is the reason for this PR, so it is clearly stated?\n\nIn fact these tr",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120264149,120264149,
bitkevin,2015-07-10T08:25:13Z,"```\n    BOOST_FOREACH(const CTxOut& txout, tx.vout) {\n        if (!::IsStandard(txout.scriptPubKey, whichType)) {\n            reason = ""scriptpubkey"";\n            return false;\n        }\n\n        if (whichType == TX_NULL_DATA)\n            nDataOut++;\n        else if ((whichType == TX_MULTISIG) && (!fIsBareMultisigStd)) {\n            reason = ""bare-multisig"";\n            return false;\n ",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120293084,120293084,
laanwj,2015-07-10T10:29:06Z,"NACK as this won't actually do anything against storing data in the chain, and all the alternatives to do so are worse.\n\nDust filtering should be accomplished some other way, because nothing would stop the spammer from using another kind of transaction if these specific ones were filtered.\n\n> If the only ouput is TX_NULL_DATA, It can avoid dust detection.\n\nWhich is okay - remember, these tra",https://github.com/bitcoin/bitcoin/pull/6407#issuecomment-120363723,120363723,
