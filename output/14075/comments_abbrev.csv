achow101,2018-08-28T00:03:11Z,Rebased. The first commit is still from #14019 ,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-416407367,416407367,
instagibbs,2018-08-29T14:28:52Z,`CWallet::CreateTransaction` needs to check for keys in change keypool even if `WALLET_FLAG_DISABLE_PRIVATE_KEYS` is set.,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-416974371,416974371,
Sjors,2018-09-13T17:57:33Z,"Concept ACK. Lightly tested via your combined branch 3fa968ea343: I was able to import a bunch of receive and change keys. I was also able to receive coins on a `bech32` address and send from it.\n\nFor some reason when I composed the transaction it picked change address with index 1 instead of with index 0. Is that an existing rule?\n\nWhat I also found confusing, though I don't know if that'",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-421096615,421096615,
achow101,2018-09-13T23:32:36Z,"> For some reason when I composed the transaction it picked change address with index 1 instead of with index 0. Is that an existing rule?\n\nMaybe your import command was weird? It should be adding them in the order of the import command so you should be getting them in that order too.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-421184428,421184428,
Sjors,2018-10-04T03:31:00Z,What's a good way to inspect the wallet / keypool?,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-426873840,426873840,
achow101,2018-10-04T12:16:47Z,@Sjors You can use dumpwallet,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-426996508,426996508,
Sjors,2018-10-05T03:50:49Z,"@achow101 `dumpwallet` doesn't contain the bip32 derivation paths though.\n\nI'll try with `getaddressinfo`.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-427238139,427238139,
achow101,2018-10-15T21:07:12Z,I will rework this to not require #14019 as soon as I have time (in a few days),https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-430013430,430013430,
Sjors,2018-11-05T12:18:58Z,"Probably best rebased on #14491 or its predecessor.\n\nHere's my attempt at it: https://github.com/Sjors/bitcoin/tree/2018/11/watch-only-keypool\n* start with #14021 \n* cherry-pick 0abb0b28e76224fb5b163b29937b7a08ed60d20a, bcb8b4834ada2fcdbdcdeeed7cbc95ee0b81f9b0\n* manually cherry-pick bcb8b4834ada2fcdbdcdeeed7cbc95ee0b81f9b0\n\nIt seems to work for a simple case, but haven't thoroughly t",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-435854838,435854838,
achow101,2018-11-06T15:04:52Z,Rebased onto #14491,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-436284225,436284225,
achow101,2018-11-08T19:08:01Z,I've added two commits contributed by @instagibbs. The first one makes it so that things are imported in the order they are listed in the import command or in the order expanded for ranged descriptors. The second commit has watch keys imported to the keypool be marked as used when transactions are seen using them.,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-437119112,437119112,
DrahtBot,2018-11-09T09:30:03Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#14021](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/14021.html) (Import key origin data through descriptors ",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-437302117,437302117,
meshcollider,2018-11-16T10:29:48Z,"Light utACK https://github.com/bitcoin/bitcoin/pull/14075/commits/8e6b7bd5e9aeb8efe85068de8fc38cf0b22f1185\n\nWill review more in-depth after the dependent PRs are merged and this is rebased",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-439351070,439351070,
Sjors,2018-12-12T11:01:29Z,"I think we should make `keypoolrefill` and `TopUpKeyPool` work with just public keys.\n\nWhen `WALLET_FLAG_DISABLE_PRIVATE_KEYS` is set we can skip the `EnsureWalletIsUnlocked(pwallet)` check.\n\n`TopUpKeyPool` currently only creates random fresh keys (for legacy wallets) or derives new keys from the wallet HD seed. We could change it to first walk through `solvable` keys in the wallet.\n\nF",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-446547958,446547958,
achow101,2018-12-16T19:36:48Z,"Rebased.\n\nI dropped the last commit as #14821 should handle that.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-447669564,447669564,
achow101,2018-12-24T15:29:40Z,Rebased,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-449746795,449746795,
achow101,2019-01-18T22:10:09Z,I've added a commit which fixed an issue where the `Request payment` button was not being enabled once keys were imported to the keypool. That commit sends a signal to the GUI every time the keypool changes so that the button will be enabled and disabled as there keys are added and removed from the keypool.,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-455704126,455704126,
achow101,2019-01-22T00:01:38Z,I split out 28c89d1 into it's own PR: #15225,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-456228317,456228317,
Sjors,2019-01-22T17:54:57Z,"In light of #15226 (specifically the test comment ""Imported private keys are currently ignored by the keypool"") I'd like to revisit my [earlier remark](\nhttps://github.com/bitcoin/bitcoin/pull/14075#issuecomment-446547958):\n\nI'd like to avoid messing with the keypool inside of `importmulti`. Instead I would prefer if `TopUpKeyPool` can deal with imported keys.\n\n> `TopUpKeyPool` currently",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-456497278,456497278,
jonasschnelli,2019-01-29T20:19:28Z,"Concept ACK\n\nIdeally – but orthogonal to this PR – would be if someone could provide a xpub or range based descriptor during sethdseed (or new command) that would make the keypool act similar to the default HD keypool but derive watch only pub keys.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-458691861,458691861,
Sjors,2019-01-31T20:24:34Z,"Tested a4bd25d, import works and GUI new address button updates as expected.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-459492568,459492568,
Sjors,2019-01-31T20:27:36Z,">  if someone could provide a xpub or range based descriptor during sethdseed (or new command) that would make the keypool act similar to the default HD keypool but derive watch only pub keys.\n\nI would prefer to hold off on that until we have a descriptor based wallet, which would make that trivial.\n\nIn the mean time you can set the import range argument for the descriptor extremely long f",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-459493527,459493527,
Sjors,2019-02-09T11:45:16Z,"I had some difficulty combining this with #15226 (blank wallet) and made a commit that does that, poorly: https://github.com/Sjors/bitcoin/commit/8988a96e2eff8bd6344f9e93032e86742e7dc3f8\nHowever, the blank wallet PR has since changed again, so my commit is merely useful for inspiration and some extra tests. Don't let it hold back merging here.\n\nI had to choose between the two PR's, I prefer ",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462037542,462037542,
meshcollider,2019-02-09T15:58:40Z,I don't think we can get both this and #14021 in to 0.18 so I'll remove this from the milestone,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462055828,462055828,
achow101,2019-02-09T19:51:47Z,"I've actually decided to base this on #15226. In the version of #15226, I introduced `CanGetAddresses` and `CanGenerateKeys` which I am using here for determining whether there are things in the keypool to fetch keys instead of `NoPrivkeysAndKeypoolEmpty` (which did a similar thing but was less robust). Because of this, I have also replaced `WalletModel::privateKeysDisabled` with `canGetaddresses`",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462074050,462074050,
Sjors,2019-02-11T10:14:16Z,"I used a rather unpractical descriptor in my example above, with hardened derivation after the xpub. Let's try that again...\n\nIt works fine, so tACK a6e2c33, but I'm still confused why it works :-)\n\nHere's a wallet where one address has received funds:\n\n```sh\nbitcoin-cli createwallet keypool true\nbitcoin-cli -rpcwallet=keypool importmulti '[{""desc"": ""wpkh(tpubD6NzVbkrYhZ4YNXVQbNhMK",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462275673,462275673,
achow101,2019-02-11T15:28:27Z,"> But these imported public keys are merely `Solvable` so why aren't they skipped?\n\n`IsMine()` returns true for things that are watch only, solvable, or spendable.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462369203,462369203,
instagibbs,2019-02-11T15:35:39Z,"More concretely, `IsMine` does a last-minute check if the exact scriptPubKey exists in the watchonly store if it fails at everything else.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-462372141,462372141,
instagibbs,2019-02-14T18:01:04Z,"Feel free to remove ""built on"" comment in OP so I don't keep checking if it's time to review in earnest :) ",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463727777,463727777,
instagibbs,2019-02-14T18:14:53Z,"There is no test for keys being imported in order, and it appears to not actually be implemented for descriptors with ranges? You're iterating over a map's keys, which will be sorted in `CKeyID` order.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463732686,463732686,
instagibbs,2019-02-14T19:19:18Z,"Good news: I'm wrong, and I'm the one who wrote the logic originally :( \n\nTest and I'm happy.\n",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463756158,463756158,
Sjors,2019-02-14T19:28:41Z,"@instagibbs keys from a ranged descriptor are imported in order. Feel free to replace this test:\n\n```py\n        # Test importing of a ranged descriptor without keys, check order\n        self.log.info(""Should import the ranged descriptor with specified range as solvable"")\n        self.test_importmulti({""desc"": desc,\n                               ""timestamp"": ""now"",\n                  ",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463759396,463759396,
instagibbs,2019-02-14T19:33:27Z,"Test fix only change.\n\nreACK https://github.com/bitcoin/bitcoin/pull/14075/commits/32fd3bb627fbd3c44b4f45434ead56f207dffa06",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463761195,463761195,
instagibbs,2019-02-14T19:43:32Z,"re-ACK https://github.com/bitcoin/bitcoin/pull/14075/commits/38fbc101d1342222565b8670b7cd9c2485a57c74\n\nOrdering test fixed, at least locally.",https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463765056,463765056,
Sjors,2019-02-14T19:56:31Z,utACK a6e2c3331023d11112f8e9d176aa823d84b3f5ce (only adds a test since my last ACK),https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463770072,463770072,
meshcollider,2019-02-14T22:32:22Z,utACK https://github.com/bitcoin/bitcoin/pull/14075/commits/38fbc101d1342222565b8670b7cd9c2485a57c74,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463829201,463829201,
meshcollider,2019-02-14T23:51:19Z,LGTM https://github.com/bitcoin/bitcoin/pull/14075/commits/f4b00b70e811d3772589ab3c64d7658f4dbdab69,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463850235,463850235,
Sjors,2019-02-15T07:41:58Z,Post merge utACK f4b00b7,https://github.com/bitcoin/bitcoin/pull/14075#issuecomment-463939400,463939400,
promag,2018-08-26T23:02:19Z,"Commit ""Fetch keys from keypool when private keys are disabled""\n\nCould move test to a different commit?",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r212841823,212841823,test/functional/wallet_importmulti.py
promag,2018-08-26T23:02:26Z,"Commit ""Fetch keys from keypool when private keys are disabled""\n\nUse named argument `disable_private_keys=True`?",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r212841827,212841827,test/functional/wallet_importmulti.py
promag,2018-08-26T23:04:02Z,"Commit ""Add option to importmulti add an imported pubkey to the keypool""\n\nDefault false.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r212841877,212841877,src/wallet/rpcdump.cpp
promag,2018-08-26T23:04:33Z,"Commit ""Add option to importmulti add an imported pubkey to the keypool""\n\n... can be ...",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r212841894,212841894,src/wallet/rpcdump.cpp
instagibbs,2018-08-27T15:15:45Z,"This function should be renamed or called into from a new one.\n\n`WalletModel::KeypoolEmptyAndPrivkeysDisabled` or something obnoxiously explicit.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213011946,213011946,src/qt/walletmodel.cpp
instagibbs,2018-08-27T15:26:36Z,Might be time to make a `TryToTopUpKeyPool` function for when we will continue regardless. We do this in a number of places in the PR and probably elsewhere.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213015525,213015525,src/wallet/rpcwallet.cpp
instagibbs,2018-08-27T15:31:40Z,"assumption here being using importmulti means you want to support hdsplit?\n\nPerhaps break this into two lines:\n```\nbool fReturningInternal = fRequestedInternal;\nfReturningInternal &= (IsHDEnabled() && CanSupportFeature(FEATURE_HD_SPLIT)) || IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n```",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213017252,213017252,src/wallet/wallet.cpp
instagibbs,2018-08-27T15:34:18Z,"Belt and suspenders, we should be checking that this exists in our wallet regardless yes? Just not asking if we have the private key itself.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213018153,213018153,src/wallet/wallet.cpp
instagibbs,2018-08-27T15:37:59Z,"This should be checking the keypool corresponding to `internal`, yes?",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213019389,213019389,src/wallet/wallet.cpp
achow101,2018-08-27T23:24:44Z,`TopUpKeypool` actually already has this check in it so it won't do anything when the disable private keys flag is set. This is just an extra belt and suspenders check.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213145236,213145236,src/wallet/rpcwallet.cpp
achow101,2018-08-28T00:01:50Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150903,213150903,test/functional/wallet_importmulti.py
achow101,2018-08-28T00:01:54Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150916,213150916,test/functional/wallet_importmulti.py
achow101,2018-08-28T00:02:00Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150933,213150933,src/wallet/rpcdump.cpp
achow101,2018-08-28T00:02:04Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150943,213150943,src/wallet/rpcdump.cpp
achow101,2018-08-28T00:02:10Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150957,213150957,src/qt/walletmodel.cpp
achow101,2018-08-28T00:02:15Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213150976,213150976,src/wallet/wallet.cpp
achow101,2018-08-28T00:02:39Z,I changed this line to check for the pubkey in the wallet instead of the privkey.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213151030,213151030,src/wallet/wallet.cpp
achow101,2018-08-28T00:02:45Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213151039,213151039,src/wallet/wallet.cpp
instagibbs,2018-08-29T13:27:37Z,generalize comment,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213675322,213675322,src/interfaces/wallet.h
instagibbs,2018-08-29T13:29:15Z,mu-nit: add commit for KeypoolCountInternalKeys,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213675937,213675937,src/wallet/wallet.cpp
achow101,2018-08-29T20:55:41Z,I think that's unnecssary.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213831230,213831230,src/wallet/wallet.cpp
achow101,2018-08-29T20:59:35Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r213832373,213832373,src/interfaces/wallet.h
practicalswift,2018-09-10T06:44:10Z,"FWIW, PEP-8 whitespace nits:\n\n```\n./test/functional/wallet_importmulti.py:458:31: E203 whitespace before ':'\n./test/functional/wallet_importmulti.py:458:35: E201 whitespace after '{'\n./test/functional/wallet_importmulti.py:458:45: E203 whitespace before ':'\n./test/functional/wallet_importmulti.py:459:31: E203 whitespace before ':'\n./test/functional/wallet_importmulti.py:460:26: E203 ",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r216212468,216212468,test/functional/wallet_importmulti.py
achow101,2018-09-13T23:36:09Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r217565129,217565129,test/functional/wallet_importmulti.py
practicalswift,2018-09-30T15:45:10Z,This `vData` shadows another local variable `vData` :-),https://github.com/bitcoin/bitcoin/pull/14075#discussion_r221463595,221463595,src/wallet/rpcdump.cpp
Sjors,2019-02-10T16:52:48Z,"Nit: `assert_equal(wrpc.getwalletinfo()[""keypoolsize""],2)`",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255345358,255345358,test/functional/wallet_importmulti.py
Sjors,2019-02-10T17:15:34Z,Nit: update documentation and argument name for `setHDStatus`.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255346203,255346203,src/qt/bitcoingui.cpp
Sjors,2019-02-10T17:55:34Z,"This is weird; whether we treat watch-only balances as ours shouldn't depend on if the keypool is empty. The original `privateKeysDisabled()` is more appropriate, because it's the only wallet type where we can be certain no private keys will be added at any time (saving us from having to deal with a bunch of UI glitches described below). \n\nFortunately you need to do something fairly contrived ",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255347804,255347804,src/qt/overviewpage.cpp
Sjors,2019-02-10T18:06:26Z,"Same as above, but even more rare.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255348169,255348169,src/qt/overviewpage.cpp
Sjors,2019-02-10T18:07:36Z,"Nit: drop / tweak ""Private keys are disabled for this wallet.""",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255348210,255348210,src/wallet/wallet.cpp
Sjors,2019-02-10T18:12:29Z,"nit, add `HasHDSeed()` to complement `IsHDEnabled()`, and make it more clear what you're checking:\n```cpp\n// All WALLET_FLAG_DISABLE_PRIVATE_KEYS wallets were created after HD_SPLIT was added.\nconst bool fSupportsInternal = (HasHDSeed() && IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) || CanSupportFeature(FEATURE_HD_SPLIT)\nbool fReturningInternal = fRequestedInternal & fSupportsIntern",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255348392,255348392,src/wallet/wallet.cpp
Sjors,2019-02-10T18:34:15Z,"Nit: call this new function from `TopUpKeyPool`, so it's more clear this function reuses existing code. It could take a `error_message` and an optional `WalletBatch` argument. If `WalletBatch` is set it should skip `NotifyCanGetAddressesChanged()`, though that gets a bit ugly.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255349233,255349233,src/wallet/wallet.h
achow101,2019-02-10T20:43:41Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354746,255354746,test/functional/wallet_importmulti.py
achow101,2019-02-10T20:43:55Z,I've reverted this change.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354763,255354763,src/qt/bitcoingui.cpp
achow101,2019-02-10T20:44:05Z,I reverted that change,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354773,255354773,src/qt/overviewpage.cpp
achow101,2019-02-10T20:44:24Z,Reverted,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354781,255354781,src/qt/overviewpage.cpp
achow101,2019-02-10T20:45:55Z,"I added a function `AddKeypoolPubkeyWithDB` which `TopUpKeypool` calls. `AddKeypoolPubkey` will make the `WalletBatch`, call `AddKeypoolPubkeyWithDB` and then ``NotifyCanGetAddressesChanged``.",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354839,255354839,src/wallet/wallet.h
achow101,2019-02-10T20:48:17Z,We can do that later.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255354927,255354927,src/wallet/wallet.cpp
achow101,2019-02-10T20:54:42Z,Changed.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255355290,255355290,src/wallet/wallet.cpp
instagibbs,2019-02-11T04:01:57Z,A test showing that importing some non-single-pubkey addresses using descriptors doesn't cause the keypool to grow seems apt.,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255377738,255377738,test/functional/wallet_importmulti.py
achow101,2019-02-11T04:45:50Z,Done,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r255380700,255380700,test/functional/wallet_importmulti.py
instagibbs,2019-02-14T19:26:41Z,"```\n./test/functional/wallet_importmulti.py:730:35: F821 undefined name 'xpub'\n```",https://github.com/bitcoin/bitcoin/pull/14075#discussion_r256977707,256977707,test/functional/wallet_importmulti.py
achow101,2019-02-14T19:29:51Z,Whoops,https://github.com/bitcoin/bitcoin/pull/14075#discussion_r256978847,256978847,test/functional/wallet_importmulti.py
