[
  {
    "sha": "06a91d9698762fe56fca3bd33484bddc9f020405",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmE5MWQ5Njk4NzYyZmU1NmZjYTNiZDMzNDg0YmRkYzlmMDIwNDA1",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-05-23T16:04:09Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-06-03T13:21:47Z"
      },
      "message": "VerifyDB progress",
      "tree": {
        "sha": "5d494bb3f766e17f0abf1ee94b6c904cdf41b179",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d494bb3f766e17f0abf1ee94b6c904cdf41b179"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06a91d9698762fe56fca3bd33484bddc9f020405",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a91d9698762fe56fca3bd33484bddc9f020405",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06a91d9698762fe56fca3bd33484bddc9f020405",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a91d9698762fe56fca3bd33484bddc9f020405/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4c097f9669a28420da74b159a4d61e509da80d33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4c097f9669a28420da74b159a4d61e509da80d33",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4c097f9669a28420da74b159a4d61e509da80d33"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 74,
      "deletions": 5
    },
    "files": [
      {
        "sha": "840a07d610b005f3b8584cd64c69a2f983dd5181",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -858,7 +858,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n                 }\n \n                 uiInterface.InitMessage(_(\"Verifying blocks...\"));\n-                if (!VerifyDB(GetArg(\"-checklevel\", 3),\n+                if (!CVerifyDB().VerifyDB(GetArg(\"-checklevel\", 3),\n                               GetArg(\"-checkblocks\", 288))) {\n                     strLoadError = _(\"Corrupted block database detected\");\n                     break;"
      },
      {
        "sha": "30fa9c6d70397f42f8702e101f78eeef2833ddb7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -2968,7 +2968,17 @@ bool static LoadBlockIndexDB()\n     return true;\n }\n \n-bool VerifyDB(int nCheckLevel, int nCheckDepth)\n+CVerifyDB::CVerifyDB()\n+{\n+    uiInterface.ShowProgress(_(\"Verifying blocks...\"), 0);\n+}\n+\n+CVerifyDB::~CVerifyDB()\n+{\n+    uiInterface.ShowProgress(\"\", 100);\n+}\n+\n+bool CVerifyDB::VerifyDB(int nCheckLevel, int nCheckDepth)\n {\n     LOCK(cs_main);\n     if (chainActive.Tip() == NULL || chainActive.Tip()->pprev == NULL)\n@@ -2989,6 +2999,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n     for (CBlockIndex* pindex = chainActive.Tip(); pindex && pindex->pprev; pindex = pindex->pprev)\n     {\n         boost::this_thread::interruption_point();\n+        uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100)))));\n         if (pindex->nHeight < chainActive.Height()-nCheckDepth)\n             break;\n         CBlock block;\n@@ -3028,6 +3039,7 @@ bool VerifyDB(int nCheckLevel, int nCheckDepth)\n         CBlockIndex *pindex = pindexState;\n         while (pindex != chainActive.Tip()) {\n             boost::this_thread::interruption_point();\n+            uiInterface.ShowProgress(_(\"Verifying blocks...\"), std::max(1, std::min(99, 100 - (int)(((double)(chainActive.Height() - pindex->nHeight)) / (double)nCheckDepth * 50))));\n             pindex = chainActive.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex))"
      },
      {
        "sha": "42cf4a0861fad3584aebdd988a3ce6b0c734b06c",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -144,8 +144,6 @@ bool InitBlockIndex();\n bool LoadBlockIndex();\n /** Unload database information */\n void UnloadBlockIndex();\n-/** Verify consistency of the block and coin databases */\n-bool VerifyDB(int nCheckLevel, int nCheckDepth);\n /** Print the loaded block tree */\n void PrintBlockTree();\n /** Process protocol messages received from a given node */\n@@ -1024,6 +1022,15 @@ class CValidationState {\n     std::string GetRejectReason() const { return strRejectReason; }\n };\n \n+/** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n+class CVerifyDB {\n+public:\n+\n+    CVerifyDB();\n+    ~CVerifyDB();\n+    bool VerifyDB(int nCheckLevel, int nCheckDepth);\n+};\n+\n /** An in-memory indexed chain of blocks. */\n class CChain {\n private:"
      },
      {
        "sha": "3469f990ac7b2b45f14641a2519ffe7682635ccc",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -40,6 +40,7 @@\n #include <QMessageBox>\n #include <QMimeData>\n #include <QProgressBar>\n+#include <QProgressDialog>\n #include <QSettings>\n #include <QStackedWidget>\n #include <QStatusBar>\n@@ -409,6 +410,9 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         // Receive and report messages from client model\n         connect(clientModel, SIGNAL(message(QString,QString,unsigned int)), this, SLOT(message(QString,QString,unsigned int)));\n \n+        // Show progress dialog\n+        connect(clientModel, SIGNAL(showProgress(QString,int)), this, SLOT(showProgress(QString,int)));\n+\n         rpcConsole->setClientModel(clientModel);\n #ifdef ENABLE_WALLET\n         if(walletFrame)\n@@ -949,6 +953,29 @@ void BitcoinGUI::detectShutdown()\n     }\n }\n \n+void BitcoinGUI::showProgress(const QString &title, int nProgress)\n+{\n+    if (nProgress == 0)\n+    {\n+        progressDialog = new QProgressDialog(title, \"\", 0, 100);\n+        progressDialog->setWindowModality(Qt::ApplicationModal);\n+        progressDialog->setMinimumDuration(0);\n+        progressDialog->setCancelButton(0);\n+        progressDialog->setAutoClose(false);\n+        progressDialog->setValue(0);\n+    }\n+    else if (nProgress == 100)\n+    {\n+        if (progressDialog)\n+        {\n+            progressDialog->close();\n+            progressDialog->deleteLater();\n+        }\n+    }\n+    else if (progressDialog)\n+        progressDialog->setValue(nProgress);\n+}\n+\n static bool ThreadSafeMessageBox(BitcoinGUI *gui, const std::string& message, const std::string& caption, unsigned int style)\n {\n     bool modal = (style & CClientUIInterface::MODAL);"
      },
      {
        "sha": "275fa35f3942212f24e049b0ef5d5089f5c058f0",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -26,6 +26,7 @@ QT_BEGIN_NAMESPACE\n class QAction;\n class QLabel;\n class QProgressBar;\n+class QProgressDialog;\n QT_END_NAMESPACE\n \n /**\n@@ -73,6 +74,7 @@ class BitcoinGUI : public QMainWindow\n     QLabel *labelBlocksIcon;\n     QLabel *progressBarLabel;\n     QProgressBar *progressBar;\n+    QProgressDialog *progressDialog;\n \n     QMenuBar *appMenuBar;\n     QAction *overviewAction;\n@@ -191,6 +193,9 @@ private slots:\n \n     /** called by a timer to check if fRequestShutdown has been set **/\n     void detectShutdown();\n+\n+    /** Show progress dialog e.g. for verifychain */\n+    void showProgress(const QString &title, int nProgress);\n };\n \n #endif // BITCOINGUI_H"
      },
      {
        "sha": "656c8bd113848a68fbcbe00e37f4eedbb1373bfe",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -206,6 +206,14 @@ QString ClientModel::formatClientStartupTime() const\n }\n \n // Handlers for core signals\n+static void ShowProgress(ClientModel *clientmodel, const std::string &title, int nProgress)\n+{\n+    // emits signal \"showProgress\"\n+    QMetaObject::invokeMethod(clientmodel, \"showProgress\", Qt::QueuedConnection,\n+                              Q_ARG(QString, QString::fromStdString(title)),\n+                              Q_ARG(int, nProgress));\n+}\n+\n static void NotifyBlocksChanged(ClientModel *clientmodel)\n {\n     // This notification is too frequent. Don't trigger a signal.\n@@ -230,6 +238,7 @@ static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, Ch\n void ClientModel::subscribeToCoreSignals()\n {\n     // Connect signals to client\n+    uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.connect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n@@ -238,6 +247,7 @@ void ClientModel::subscribeToCoreSignals()\n void ClientModel::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n+    uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyBlocksChanged.disconnect(boost::bind(NotifyBlocksChanged, this));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));"
      },
      {
        "sha": "9c9a35b6547d42abfcbb15343ba11ea301a862fa",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -95,6 +95,9 @@ class ClientModel : public QObject\n     //! Fired when a message should be reported to the user\n     void message(const QString &title, const QString &message, unsigned int style);\n \n+    // Show progress dialog e.g. for verifychain\n+    void showProgress(const QString &title, int nProgress);\n+\n public slots:\n     void updateTimer();\n     void updateNumConnections(int numConnections);"
      },
      {
        "sha": "1162e2d87f5a72553025a4d10d8c34f06a503ec6",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -129,6 +129,7 @@ void SplashScreen::subscribeToCoreSignals()\n {\n     // Connect signals to client\n     uiInterface.InitMessage.connect(boost::bind(InitMessage, this, _1));\n+    uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n #ifdef ENABLE_WALLET\n     uiInterface.LoadWallet.connect(boost::bind(ConnectWallet, this, _1));\n #endif\n@@ -138,6 +139,7 @@ void SplashScreen::unsubscribeFromCoreSignals()\n {\n     // Disconnect signals from client\n     uiInterface.InitMessage.disconnect(boost::bind(InitMessage, this, _1));\n+    uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n #ifdef ENABLE_WALLET\n     if(pwalletMain)\n         pwalletMain->ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));"
      },
      {
        "sha": "ff5057b526f27e16fe2e66a7427449ddb4d56745",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -427,7 +427,7 @@ Value verifychain(const Array& params, bool fHelp)\n     if (params.size() > 1)\n         nCheckDepth = params[1].get_int();\n \n-    return VerifyDB(nCheckLevel, nCheckDepth);\n+    return CVerifyDB().VerifyDB(nCheckLevel, nCheckDepth);\n }\n \n Value getblockchaininfo(const Array& params, bool fHelp)"
      },
      {
        "sha": "e1a3e04e12f1ef3e1a971f093f76d5ccbff51a32",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a91d9698762fe56fca3bd33484bddc9f020405/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a91d9698762fe56fca3bd33484bddc9f020405/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=06a91d9698762fe56fca3bd33484bddc9f020405",
        "patch": "@@ -94,6 +94,9 @@ class CClientUIInterface\n \n     /** A wallet has been loaded. */\n     boost::signals2::signal<void (CWallet* wallet)> LoadWallet;\n+\n+    /** Show progress e.g. for verifychain */\n+    boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n };\n \n extern CClientUIInterface uiInterface;"
      }
    ]
  }
]