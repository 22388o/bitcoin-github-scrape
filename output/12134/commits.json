[
  {
    "sha": "ae379cf7d12943fc192d58176673bcfe7d53da53",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTM3OWNmN2QxMjk0M2ZjMTkyZDU4MTc2NjczYmNmZTdkNTNkYTUz",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-07-06T15:26:57Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T18:37:37Z"
      },
      "message": "[scripts] build earlier releases",
      "tree": {
        "sha": "2674e5d61ce576acf7e677bbf9c138151d9b11db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2674e5d61ce576acf7e677bbf9c138151d9b11db"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae379cf7d12943fc192d58176673bcfe7d53da53",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5C9HEACgkQV/+b28ww\nEAkowQ//fs3Erh94rEsYDawSyyW30AxN2evn+CAez9hBkd1CBedTfDgNGb3BfE6S\nDUJ/433k4X2NqLWuzqQCebjOGvyr6paMWGbzmUxxUdYuxyu3Fh+DoUnezUB4JqWc\nbc9daNOckMWp9n2CRG1bgEuss3/owZEM5OIk8WLaPLZNlfLGBgYtFajmqS8eV/Gp\nG0DnASn0TxKalhJg+M05ArNnuPZXfocJoi71MOito2ZkYQByhTz2tBuCQS7+g9Ym\n56q9Ujc5zcYJGMS9qPi3yuf3HDEGzbFj4M1FjsRoSstdK2+QzgddE7JV+cqeXQfF\nt42WO8wuOYAPfq35UKys+sHAkb2mKAX//Ia5jDX8J9RzM55afMPTu9nB9KAdsXZR\nLerfNIc/ou4u2AXOXmYGm13NkN3Yot6a28yWQlip3abjf+WLaEVQSdYPqsTpqsG5\nzByngXWVOulCZd+UBDRLufhzBgtOA1YdAB8bl5OHjp7Mnu43KcC7OQKfKBCoIovV\nTTe1TRW9YwMq7Sky1hgnICDT6etwLcSHncpjBCvtcAYZGKadBNzZztN6eVnvenxI\nDnLbUuhFgGv3XiJh5p/l2e25mtYK2czOUea9dRv5J3V2AJY8wlj5k5u025DtNfsM\nORQUaHfDweTSjfUB6Wr7HrSfz/kFivc9m/+pbzQyXz954eMbgsg=\n=CjfI\n-----END PGP SIGNATURE-----",
        "payload": "tree 2674e5d61ce576acf7e677bbf9c138151d9b11db\nparent 98264e2ccb177a6603fe957f7e263fb413b50d04\nauthor Sjors Provoost <sjors@sprovoost.nl> 1530890817 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581446257 +0100\n\n[scripts] build earlier releases\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae379cf7d12943fc192d58176673bcfe7d53da53",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae379cf7d12943fc192d58176673bcfe7d53da53",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae379cf7d12943fc192d58176673bcfe7d53da53/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98264e2ccb177a6603fe957f7e263fb413b50d04",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98264e2ccb177a6603fe957f7e263fb413b50d04",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98264e2ccb177a6603fe957f7e263fb413b50d04"
      }
    ],
    "stats": {
      "total": 147,
      "additions": 147,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc8751c805e38c186675a4a3f182af5792aea5e2",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae379cf7d12943fc192d58176673bcfe7d53da53/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae379cf7d12943fc192d58176673bcfe7d53da53/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=ae379cf7d12943fc192d58176673bcfe7d53da53",
        "patch": "@@ -108,6 +108,9 @@ qrc_*.cpp\n .DS_Store\n build\n \n+# Previous releases\n+releases\n+\n #lcov\n *.gcno\n *.gcda"
      },
      {
        "sha": "ea096c0cec0d6f47c5106d0d8321a811e347975b",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "added",
        "additions": 144,
        "deletions": 0,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae379cf7d12943fc192d58176673bcfe7d53da53/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae379cf7d12943fc192d58176673bcfe7d53da53/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=ae379cf7d12943fc192d58176673bcfe7d53da53",
        "patch": "@@ -0,0 +1,144 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+#\n+# Build previous releases.\n+\n+export LC_ALL=C\n+\n+CONFIG_FLAGS=\"\"\n+FUNCTIONAL_TESTS=0\n+DELETE_EXISTING=0\n+USE_DEPENDS=0\n+DOWNLOAD_BINARY=0\n+CONFIG_FLAGS=\"\"\n+TARGET=\"releases\"\n+\n+while getopts \":hfrdbt:\" opt; do\n+  case $opt in\n+    h)\n+      echo \"Usage: .previous_release.sh [options] tag1 tag2\"\n+      echo \"  options:\"\n+      echo \"  -h   Print this message\"\n+      echo \"  -f   Configure for functional tests\"\n+      echo \"  -r   Remove existing directory\"\n+      echo \"  -d   Use depends\"\n+      echo \"  -b   Download release binary\"\n+      echo \"  -t   Target directory (default: releases)\"\n+      exit 0\n+      ;;\n+    f)\n+      FUNCTIONAL_TESTS=1\n+      CONFIG_FLAGS=\"$CONFIG_FLAGS --without-gui --disable-tests --disable-bench\"\n+      ;;\n+    r)\n+      DELETE_EXISTING=1\n+      ;;\n+    d)\n+      USE_DEPENDS=1\n+      ;;\n+    b)\n+      DOWNLOAD_BINARY=1\n+      ;;\n+    t)\n+      TARGET=$OPTARG\n+      ;;\n+    \\?)\n+      echo \"Invalid option: -$OPTARG\" >&2\n+      exit 1\n+      ;;\n+  esac\n+done\n+\n+shift $((OPTIND-1))\n+\n+if [ -z \"$1\" ]; then\n+  echo \"Specify release tag(s), e.g.: .previous_release v0.15.1\"\n+  exit 1\n+fi\n+\n+if [ ! -d \"$TARGET\" ]; then\n+  mkdir -p $TARGET\n+fi\n+\n+if [ \"$DOWNLOAD_BINARY\" -eq \"1\" ]; then\n+  HOST=\"${HOST:-$(./depends/config.guess)}\"\n+  case \"$HOST\" in\n+    x86_64-*-linux*)\n+      PLATFORM=x86_64-linux-gnu\n+      ;;\n+    x86_64-apple-darwin*)\n+      PLATFORM=osx64\n+      ;;\n+    *)\n+      echo \"Not sure which binary to download for $HOST.\"\n+      exit 1\n+      ;;\n+  esac\n+fi\n+\n+echo \"Releases directory: $TARGET\"\n+pushd \"$TARGET\" || exit 1\n+{\n+  for tag in \"$@\"\n+  do\n+    if [ \"$DELETE_EXISTING\" -eq \"1\" ]; then\n+      if [ -d \"$tag\" ]; then\n+        rm -r \"$tag\"\n+      fi\n+    fi\n+\n+    if [ \"$DOWNLOAD_BINARY\" -eq \"0\" ]; then\n+\n+      if [ ! -d \"$tag\" ]; then\n+        if [ -z $(git tag -l \"$tag\") ]; then\n+          echo \"Tag $tag not found\"\n+          exit 1\n+        fi\n+\n+        git clone https://github.com/bitcoin/bitcoin \"$tag\"\n+        pushd \"$tag\" || exit 1\n+        {\n+          git checkout \"$tag\"\n+          if [ \"$USE_DEPENDS\" -eq \"1\" ]; then\n+            pushd depends || exit 1\n+            {\n+              if [ \"$FUNCTIONAL_TESTS\" -eq \"1\" ]; then\n+                make NO_QT=1\n+              else\n+                make\n+              fi\n+              HOST=\"${HOST:-$(./config.guess)}\"\n+            }\n+            popd || exit 1\n+            CONFIG_FLAGS=\"--prefix=$PWD/depends/$HOST $CONFIG_FLAGS\"\n+          fi\n+          ./autogen.sh\n+          ./configure $CONFIG_FLAGS\n+          make\n+          # Move binaries, so they're in the same place as in the release download:\n+          mkdir bin\n+          mv src/bitcoind src/bitcoin-cli src/bitcoin-tx bin\n+          if [ \"$FUNCTIONAL_TESTS\" -eq \"0\" ]; then\n+            mv src/qt/bitcoin-qt bin\n+          fi\n+        }\n+        popd || exit 1\n+      fi\n+    else\n+      if [ -d \"$tag\" ]; then\n+        echo \"Using cached $tag\"\n+      else\n+        mkdir \"$tag\"\n+        URL=\"https://bitcoin.org/bin/bitcoin-core-${tag:1}/bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n+        echo \"Fetching: $URL\"\n+        curl -O $URL\n+        tar -zxf \"bitcoin-${tag:1}-$PLATFORM.tar.gz\" -C \"$tag\" --strip-components=1 \"bitcoin-${tag:1}\"\n+        rm \"bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n+      fi\n+    fi\n+  done\n+}\n+popd || exit 1"
      }
    ]
  },
  {
    "sha": "8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjE0NjBkYmQxYjczMmYwNmQ0Y2ViZTFmYTY4NDQyODZjN2EwMDU2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-01-05T19:20:42Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T20:46:21Z"
      },
      "message": "[tests] check v0.17.1 and v0.18.1 backwards compatibility",
      "tree": {
        "sha": "5d2fba3358e417a1caaed230d79d51a635856e7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d2fba3358e417a1caaed230d79d51a635856e7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5DEp4ACgkQV/+b28ww\nEAkCPxAAgSkl3E9Qf6ju2jlxz/kkY7HLb0eECAxfITkuFPI2cgCBn41MY25Ns6fP\nkwfMfeNOLZarpwLLDFZyojl5/80mna77xdFhJEI5G2h+bmVXi516n5rfdntP+EvZ\nePnoH2cCwsWRxjo2kJh8lIRVHthjot4Y75nI9aDYbpp3uHaGP9OyOvOEB8zSLsTA\nxFnnybq63pfB5ZleDgNfWZUXdh5GNkdRpCAm2/YbFoD0jSuoqhE8HZTxQ+4BxFqE\nJUUpbWkgUIWYUst6TIHPVhIC9jL0a5Csv0rgQYBx5xi00YdaGH9TSEr2CzIDwcwd\nqXa0BxyXishUJ9eBxowNrpSLAGnSTAsZKfQ5ESPgSoX8JSG0auTiveygf6Dd/d0L\nt9XmV7fAakfBC9nz5alDoQotHzCoG/w1pRG17kWE9MfgiyxSsVkgn85Nsaz6gqu+\n8+7x1xDWI8ivek/C3KO5L3tRWbTFxBvtoMBk43dPHgiNiWSgJvfVUYEuycCfST0w\nSaDCtxvaygjctd8qXBvJGju9yclKCvVilmrfMCkGpXt8HIFm5oLt1bSfG/q1ZkHo\nRrV/kpQu7bR78kYQcVo1l7zWmozZ84NRJPDTFayNywyk7RfTgPPVyWpzf4l33ck7\nMex40Ebh+c+0LLYahFESdQuEauZlHSfSQN0W52kv2Zg4d1db+10=\n=3f6u\n-----END PGP SIGNATURE-----",
        "payload": "tree 5d2fba3358e417a1caaed230d79d51a635856e7c\nparent ae379cf7d12943fc192d58176673bcfe7d53da53\nauthor Sjors Provoost <sjors@sprovoost.nl> 1546716042 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581453981 +0100\n\n[tests] check v0.17.1 and v0.18.1 backwards compatibility\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae379cf7d12943fc192d58176673bcfe7d53da53",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae379cf7d12943fc192d58176673bcfe7d53da53",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae379cf7d12943fc192d58176673bcfe7d53da53"
      }
    ],
    "stats": {
      "total": 120,
      "additions": 112,
      "deletions": 8
    },
    "files": [
      {
        "sha": "c5b8c476b7ebd3052453100cf4afdde30b35e056",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -35,6 +35,7 @@ cache:\n     - $TRAVIS_BUILD_DIR/depends/built\n     - $TRAVIS_BUILD_DIR/depends/sdk-sources\n     - $TRAVIS_BUILD_DIR/ci/scratch/.ccache\n+    - $TRAVIS_BUILD_DIR/releases/$HOST\n     # macOS\n     - $HOME/Library/Caches/Homebrew\n     - /usr/local/Homebrew\n@@ -108,7 +109,7 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_i686_centos.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package and some depends packages] [unsigned char]'\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [previous releases, uses qt5 dev package and some depends packages] [unsigned char]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n "
      },
      {
        "sha": "d2ea255b4bad7e410eac0cc0512568fa70b04243",
        "filename": "ci/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -13,7 +13,7 @@ If the repository is not a fresh git clone, you might have to clean files from p\n \n The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n-such as the depends cache or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+such as the depends cache, previous release binaries, or ccache, are mounted as read-write into the docker container. While it should be fine to run\n the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n system in a virtual machine with a Linux operating system of your choice."
      },
      {
        "sha": "4c22e4e6c54301e92e8ae9fd20e1009eebc1e39d",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -33,6 +33,7 @@ export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n+export TEST_PREVIOUS_RELEASES=${TEST_PREVIOUS_RELEASES:-false}\n export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}\n export DOCKER_NAME_TAG=${DOCKER_NAME_TAG:-ubuntu:18.04}\n@@ -50,6 +51,7 @@ export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n # Folder where the build is done (bin and lib).\n export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n+export PREVIOUS_RELEASES_DIR=${PREVIOUS_RELEASES_DIR:-$BASE_ROOT_DIR/releases/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}\n export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps}"
      },
      {
        "sha": "21c15236d25f239f1108b7a0f29b9ab85d921e17",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -11,4 +11,5 @@ export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libhar\n export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n export TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n export GOAL=\"install\"\n+export TEST_PREVIOUS_RELEASES=true\n export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\""
      },
      {
        "sha": "c6e8331a717bd0b0803f5827abb7d1d7bd03c2d3",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -40,12 +40,13 @@ fi\n \n mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n+mkdir -p \"${PREVIOUS_RELEASES_DIR}\"\n \n export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|TEST_PREVIOUS_RELEASES|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n@@ -62,6 +63,7 @@ if [ -z \"$RUN_CI_ON_HOST\" ]; then\n                   --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n                   --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n                   --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  --mount type=bind,src=$PREVIOUS_RELEASES_DIR,dst=$PREVIOUS_RELEASES_DIR \\\n                   -w $BASE_ROOT_DIR \\\n                   --env-file /tmp/env \\\n                   --name $CONTAINER_NAME \\"
      },
      {
        "sha": "0e9e8fe80fb69a53d25c3fd8e7e757dfc84c388c",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -35,3 +35,8 @@ if [ -z \"$NO_DEPENDS\" ]; then\n   fi\n   DOCKER_EXEC $SHELL_OPTS make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n fi\n+if [ \"$TEST_PREVIOUS_RELEASES\" = \"true\" ]; then\n+  BEGIN_FOLD previous-versions\n+  DOCKER_EXEC contrib/devtools/previous_release.sh -b -t \"$PREVIOUS_RELEASES_DIR\" v0.17.1 v0.18.1\n+  END_FOLD\n+fi"
      },
      {
        "sha": "452b55337467332a5c9b2347116cb38a0123069d",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -0,0 +1,78 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Backwards compatibility functional test\n+\n+Test various backwards compatibility scenarios. Download the previous node binaries:\n+\n+contrib/devtools/previous_release.sh -b v0.18.1 v0.17.1\n+\n+Due to RPC changes introduced in various versions the below tests\n+won't work for older versions without some patches or workarounds.\n+\n+Use only the latest patch version of each release, unless a test specifically\n+needs an older patch version.\n+\"\"\"\n+\n+import os\n+\n+from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+\n+from test_framework.util import (\n+    assert_equal,\n+    sync_blocks\n+)\n+\n+class BackwardsCompatibilityTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 4\n+        # Add new version after each release:\n+        self.extra_args = [\n+            [], # Pre-release: use to mine blocks\n+            [], # Pre-release: use to receive coins, swap wallets, etc\n+            [], # v0.18.1\n+            [] # v0.17.1\n+        ]\n+\n+    def setup_nodes(self):\n+        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n+            raise SkipTest(\"backwards compatibility tests\")\n+\n+        releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n+        if not os.path.isdir(releases_path):\n+            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n+                raise AssertionError(\"TEST_PREVIOUS_RELEASES=1 but releases missing: \" + releases_path)\n+            raise SkipTest(\"This test requires binaries for previous releases\")\n+\n+        self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n+            None,\n+            None,\n+            180100,\n+            170100\n+        ], binary=[\n+            self.options.bitcoind,\n+            self.options.bitcoind,\n+            releases_path + \"/v0.18.1/bin/bitcoind\",\n+            releases_path + \"/v0.17.1/bin/bitcoind\"\n+        ], binary_cli=[\n+            self.options.bitcoincli,\n+            self.options.bitcoincli,\n+            releases_path + \"/v0.18.1/bin/bitcoin-cli\",\n+            releases_path + \"/v0.17.1/bin/bitcoin-cli\"\n+        ])\n+\n+        self.start_nodes()\n+\n+    def run_test(self):\n+        self.nodes[0].generate(101)\n+\n+        sync_blocks(self.nodes)\n+\n+        # Sanity check the test framework:\n+        res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n+        assert_equal(res['blocks'], 101)\n+\n+if __name__ == '__main__':\n+    BackwardsCompatibilityTest().main()"
      },
      {
        "sha": "e36fb350c657cd772ddf88f4c9123a2415ce4b89",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -369,7 +369,7 @@ def run_test(self):\n \n     # Public helper methods. These can be accessed by the subclass test scripts.\n \n-    def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n+    def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None, binary_cli=None, versions=None):\n         \"\"\"Instantiate TestNode objects.\n \n         Should only be called once after the nodes have been specified in\n@@ -380,11 +380,17 @@ def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n             extra_confs = [[]] * num_nodes\n         if extra_args is None:\n             extra_args = [[]] * num_nodes\n+        if versions is None:\n+            versions = [None] * num_nodes\n         if binary is None:\n             binary = [self.options.bitcoind] * num_nodes\n+        if binary_cli is None:\n+            binary_cli = [self.options.bitcoincli] * num_nodes\n         assert_equal(len(extra_confs), num_nodes)\n         assert_equal(len(extra_args), num_nodes)\n+        assert_equal(len(versions), num_nodes)\n         assert_equal(len(binary), num_nodes)\n+        assert_equal(len(binary_cli), num_nodes)\n         for i in range(num_nodes):\n             self.nodes.append(TestNode(\n                 i,\n@@ -393,7 +399,8 @@ def add_nodes(self, num_nodes, extra_args=None, *, rpchost=None, binary=None):\n                 rpchost=rpchost,\n                 timewait=self.rpc_timeout,\n                 bitcoind=binary[i],\n-                bitcoin_cli=self.options.bitcoincli,\n+                bitcoin_cli=binary_cli[i],\n+                version=versions[i],\n                 coverage_dir=self.options.coveragedir,\n                 cwd=self.options.tmpdir,\n                 extra_conf=extra_confs[i],"
      },
      {
        "sha": "c7559ac7c899eca3d7a3b1589f6b5ae29e71d9ef",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -60,7 +60,7 @@ class TestNode():\n     To make things easier for the test writer, any unrecognised messages will\n     be dispatched to the RPC connection.\"\"\"\n \n-    def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cli, coverage_dir, cwd, extra_conf=None, extra_args=None, use_cli=False, start_perf=False, use_valgrind=False):\n+    def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cli, coverage_dir, cwd, extra_conf=None, extra_args=None, use_cli=False, start_perf=False, use_valgrind=False, version=None):\n         \"\"\"\n         Kwargs:\n             start_perf (bool): If True, begin profiling the node with `perf` as soon as\n@@ -84,14 +84,14 @@ def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cl\n         # For those callers that need more flexibility, they can just set the args property directly.\n         # Note that common args are set in the config file (see initialize_datadir)\n         self.extra_args = extra_args\n+        self.version = version\n         # Configuration for logging is set as command-line args rather than in the bitcoin.conf file.\n         # This means that starting a bitcoind using the temp dir to debug a failed test won't\n         # spam debug.log.\n         self.args = [\n             self.binary,\n             \"-datadir=\" + self.datadir,\n             \"-logtimemicros\",\n-            \"-logthreadnames\",\n             \"-debug\",\n             \"-debugexclude=libevent\",\n             \"-debugexclude=leveldb\",\n@@ -107,6 +107,9 @@ def __init__(self, i, datadir, *, chain, rpchost, timewait, bitcoind, bitcoin_cl\n                          \"--gen-suppressions=all\", \"--exit-on-first-error=yes\",\n                          \"--error-exitcode=1\", \"--quiet\"] + self.args\n \n+        if self.version is None or self.version >= 190000:\n+            self.args.append(\"-logthreadnames\")\n+\n         self.cli = TestNodeCLI(bitcoin_cli, self.datadir)\n         self.use_cli = use_cli\n         self.start_perf = start_perf\n@@ -254,7 +257,11 @@ def stop_node(self, expected_stderr='', wait=0):\n             return\n         self.log.debug(\"Stopping node\")\n         try:\n-            self.stop(wait=wait)\n+            # Do not use wait argument when testing older nodes, e.g. in feature_backwards_compatibility.py\n+            if self.version is None or self.version >= 180000:\n+                self.stop(wait=wait)\n+            else:\n+                self.stop()\n         except http.client.CannotSendRequest:\n             self.log.exception(\"Unable to stop node.\")\n "
      },
      {
        "sha": "ea8a340081dcfeaab58d15a6792d74fe4f0f42cf",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b1460dbd1b732f06d4cebe1fa6844286c7a0056/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "patch": "@@ -158,6 +158,7 @@\n     'feature_assumevalid.py',\n     'example_test.py',\n     'wallet_txn_doublespend.py',\n+    'feature_backwards_compatibility.py',\n     'wallet_txn_clone.py --mineblock',\n     'feature_notifications.py',\n     'rpc_getblockfilter.py',"
      }
    ]
  },
  {
    "sha": "c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2NhNjMwODk2OGIyOWEwZTBlZGM0ODVjZDA2ZTY4ZTVlZGI3Yzdk",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-03-07T18:22:00Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T20:46:22Z"
      },
      "message": "[scripts] support release candidates of earlier releases",
      "tree": {
        "sha": "620c6a04e906038a87d5c133269c662aa3b05433",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/620c6a04e906038a87d5c133269c662aa3b05433"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5DEp4ACgkQV/+b28ww\nEAne8xAAtKAevYuJh2n9Kefepwdd0BIAp2uZGskT7rjDrsbGyo9BUjbd98ZSCeb1\nHBrcDPT40T2lRo0Hp+Q9f4+4WMY8TcMLf5MGv+vPA98BX1onPhzm82wJBxihHpKv\n+b5X3OaL7M+uJpOHG0WIVHKvMf9pcHVy7/esN5qGCU+rW8pCOm/g7zv+A/ngJLdb\nI3l+Fw5O1HhuNMZttYMyAaC0cCNaE5TMGeFg61UyFp64y8129riXKXvB4Bd4O7Ob\n3Nlm+6jo4d7zCtZo3hp2jxR8CFDnKcqg8AECYR4UO4HZBqruYSpAGB9S3mHSlSnE\nkf/ZOJ68wi+gY4xRJ7PuUG4tSXXeSTBMrtzv1I+g6jrNn7YG/oGsydl2RWR8EFb2\nAiqj8eQFWUojdRugUQPcs7ClAAu06rO1ejgKTh3KE95CVKFGhvfMLYrarc6SmhPz\nh6yfZrwfA02gW6qsAeBHnS8n4c4hh9shfIeD8Gtt30zoqzdWJBuvsDadeOi0YBR0\nlWfEVt7UTz/+M+KQ/Cll2Zrz7/hPsBKnIkTaVO0yARNCUG+o23sB/duElwgOc9d2\nZdano2n1rcIj4IVdXjOwl3xYfrHNO1vV6KdXOnQh1xGbXazwHKGVGO+JXGCgg3ne\nivQBuwTyhb7/JP3BvD1nAt76MBjDPxLLT8vw++wds38hfNcr2KM=\n=Sl41\n-----END PGP SIGNATURE-----",
        "payload": "tree 620c6a04e906038a87d5c133269c662aa3b05433\nparent 8b1460dbd1b732f06d4cebe1fa6844286c7a0056\nauthor Sjors Provoost <sjors@sprovoost.nl> 1551982920 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581453982 +0100\n\n[scripts] support release candidates of earlier releases\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b1460dbd1b732f06d4cebe1fa6844286c7a0056",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b1460dbd1b732f06d4cebe1fa6844286c7a0056"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "efd035f7781ff30029ca997c6c4e8b8c7abab436",
        "filename": "contrib/devtools/previous_release.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d/contrib/devtools/previous_release.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d/contrib/devtools/previous_release.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/previous_release.sh?ref=c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
        "patch": "@@ -132,7 +132,12 @@ pushd \"$TARGET\" || exit 1\n         echo \"Using cached $tag\"\n       else\n         mkdir \"$tag\"\n-        URL=\"https://bitcoin.org/bin/bitcoin-core-${tag:1}/bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n+        if [[ \"$tag\" =~ v(.*)(rc[0-9]+)$ ]]; then\n+            BIN_PATH=\"bin/bitcoin-core-${BASH_REMATCH[1]}/test.${BASH_REMATCH[2]}\"\n+        else\n+            BIN_PATH=\"bin/bitcoin-core-${tag:1}\"\n+        fi\n+        URL=\"https://bitcoin.org/$BIN_PATH/bitcoin-${tag:1}-$PLATFORM.tar.gz\"\n         echo \"Fetching: $URL\"\n         curl -O $URL\n         tar -zxf \"bitcoin-${tag:1}-$PLATFORM.tar.gz\" -C \"$tag\" --strip-components=1 \"bitcoin-${tag:1}\""
      }
    ]
  },
  {
    "sha": "9d9390dab716f07057c94e8e21f3c7dd06192f35",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDkzOTBkYWI3MTZmMDcwNTdjOTRlOGUyMWYzYzdkZDA2MTkyZjM1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-20T19:43:35Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T20:46:23Z"
      },
      "message": "[tests] add wallet backwards compatility tests",
      "tree": {
        "sha": "1c0452e47317501c2abb7027355ef59a844f1791",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1c0452e47317501c2abb7027355ef59a844f1791"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d9390dab716f07057c94e8e21f3c7dd06192f35",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5DEp8ACgkQV/+b28ww\nEAn0Tw/9EuY2YtpIbiw9ln6A11dWiRWS5OzxcykpjjYEC0hyg456YnfdhslqQYCH\nyTBcMSl6I1IMOKANOfS2P+0LFF8kY9RMWJlnDJKmJV3CJlUqWLE+V7rb5CCQJOP0\nSOi726zgt3Lvk8YZ9GyODpnRavaQe6ZqVqSEMhNH8DN0qwFV0NtAnMvaIZmNjk+e\nH6WEXqpBSNewoptRg1B/z53OUwIY/Je1czvfnsm6wDJfuXkJgXEkeRyFbcLOaDib\nrV1SUOxcYyJ3hoyRC/8DYEPUKepxwP4VVmEqA5vRcl7KRkdWiDlwZe0NNC78Jmca\nBPgkWr76h3DJOXu7JnEmqVjLtALo9WvllmA5z0Oli+nZm1N5MBDIjmvlxLSbXVag\n/nPlOxGtUCbZqExoXuEC2BKbHVWb5Mrsfh1A2ofUd+9K81/HLooizw2LKlKY3KSL\njqshGaQaicycYR317ouFSZHLKIKfPp9Bdc3C+Mw0vpLfFUOzYtXhA8NUXRaf75ku\nz24zSIhu9VvxSxggHBu8ZX06VkgzwcDkZjfAYvwjoOiOoyI24el/k6iN3GEOVqfX\nApDMNt/20Gw0wxpsZsUIwht8rvZo+9d9w0Y9GfkSTW8nJCVm2KnXPi54VXdkEpiq\nX8iBoygNa57dfMY3kbN1RejPlfel0HhnkzV7ywsZ/dZTg6K/JiQ=\n=UO4o\n-----END PGP SIGNATURE-----",
        "payload": "tree 1c0452e47317501c2abb7027355ef59a844f1791\nparent c7ca6308968b29a0e0edc485cd06e68e5edb7c7d\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550691815 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581453983 +0100\n\n[tests] add wallet backwards compatility tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d9390dab716f07057c94e8e21f3c7dd06192f35",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d9390dab716f07057c94e8e21f3c7dd06192f35",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d9390dab716f07057c94e8e21f3c7dd06192f35/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7ca6308968b29a0e0edc485cd06e68e5edb7c7d"
      }
    ],
    "stats": {
      "total": 179,
      "additions": 173,
      "deletions": 6
    },
    "files": [
      {
        "sha": "946e5de054a5b021b04ea9720f5b5266379402d3",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 173,
        "deletions": 6,
        "changes": 179,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d9390dab716f07057c94e8e21f3c7dd06192f35/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d9390dab716f07057c94e8e21f3c7dd06192f35/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=9d9390dab716f07057c94e8e21f3c7dd06192f35",
        "patch": "@@ -16,12 +16,14 @@\n \"\"\"\n \n import os\n+import shutil\n \n from test_framework.test_framework import BitcoinTestFramework, SkipTest\n \n from test_framework.util import (\n     assert_equal,\n-    sync_blocks\n+    sync_blocks,\n+    sync_mempools\n )\n \n class BackwardsCompatibilityTest(BitcoinTestFramework):\n@@ -30,10 +32,10 @@ def set_test_params(self):\n         self.num_nodes = 4\n         # Add new version after each release:\n         self.extra_args = [\n-            [], # Pre-release: use to mine blocks\n-            [], # Pre-release: use to receive coins, swap wallets, etc\n-            [], # v0.18.1\n-            [] # v0.17.1\n+            [\"-addresstype=bech32\"], # Pre-release: use to mine blocks\n+            [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"], # Pre-release: use to receive coins, swap wallets, etc\n+            [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"], # v0.18.1\n+            [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"] # v0.17.1\n         ]\n \n     def setup_nodes(self):\n@@ -66,13 +68,178 @@ def setup_nodes(self):\n         self.start_nodes()\n \n     def run_test(self):\n-        self.nodes[0].generate(101)\n+        self.nodes[0].generatetoaddress(101, self.nodes[0].getnewaddress())\n \n         sync_blocks(self.nodes)\n \n         # Sanity check the test framework:\n         res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n         assert_equal(res['blocks'], 101)\n \n+        node_master = self.nodes[self.num_nodes - 3]\n+        node_v18 = self.nodes[self.num_nodes - 2]\n+        node_v17 = self.nodes[self.num_nodes - 1]\n+\n+        self.log.info(\"Test wallet backwards compatibility...\")\n+        # Create a number of wallets and open them in older versions:\n+\n+        # w1: regular wallet, created on master: update this test when default\n+        #     wallets can no longer be opened by older versions.\n+        node_master.createwallet(wallet_name=\"w1\")\n+        wallet = node_master.get_wallet_rpc(\"w1\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+        # Create a confirmed transaction, receiving coins\n+        address = wallet.getnewaddress()\n+        self.nodes[0].sendtoaddress(address, 10)\n+        sync_mempools(self.nodes)\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        # Create a conflicting transaction using RBF\n+        return_address = self.nodes[0].getnewaddress()\n+        tx1_id = self.nodes[1].sendtoaddress(return_address, 1)\n+        tx2_id = self.nodes[1].bumpfee(tx1_id)[\"txid\"]\n+        # Confirm the transaction\n+        sync_mempools(self.nodes)\n+        self.nodes[0].generate(1)\n+        sync_blocks(self.nodes)\n+        # Create another conflicting transaction using RBF\n+        tx3_id = self.nodes[1].sendtoaddress(return_address, 1)\n+        tx4_id = self.nodes[1].bumpfee(tx3_id)[\"txid\"]\n+        # Abondon transaction, but don't confirm\n+        self.nodes[1].abandontransaction(tx3_id)\n+\n+        # w1_v18: regular wallet, created with v0.18\n+        node_v18.createwallet(wallet_name=\"w1_v18\")\n+        wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+\n+        # w2: wallet with private keys disabled, created on master: update this\n+        #     test when default wallets private keys disabled can no longer be\n+        #     opened by older versions.\n+        node_master.createwallet(wallet_name=\"w2\", disable_private_keys=True)\n+        wallet = node_master.get_wallet_rpc(\"w2\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        # w2_v18: wallet with private keys disabled, created with v0.18\n+        node_v18.createwallet(wallet_name=\"w2_v18\", disable_private_keys=True)\n+        wallet = node_v18.get_wallet_rpc(\"w2_v18\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        # w3: blank wallet, created on master: update this\n+        #     test when default blank wallets can no longer be opened by older versions.\n+        node_master.createwallet(wallet_name=\"w3\", blank=True)\n+        wallet = node_master.get_wallet_rpc(\"w3\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] == 0\n+\n+        # w3_v18: blank wallet, created with v0.18\n+        node_v18.createwallet(wallet_name=\"w3_v18\", blank=True)\n+        wallet = node_v18.get_wallet_rpc(\"w3_v18\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] == 0\n+\n+        # Copy the wallets to older nodes:\n+        node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        node_v18_wallets_dir = os.path.join(node_v18.datadir, \"regtest/wallets\")\n+        node_v17_wallets_dir = os.path.join(node_v17.datadir, \"regtest/wallets\")\n+        node_master.unloadwallet(\"w1\")\n+        node_master.unloadwallet(\"w2\")\n+        node_v18.unloadwallet(\"w1_v18\")\n+        node_v18.unloadwallet(\"w2_v18\")\n+\n+        # Copy wallets to v0.17\n+        for wallet in os.listdir(node_master_wallets_dir):\n+            shutil.copytree(\n+                os.path.join(node_master_wallets_dir, wallet),\n+                os.path.join(node_v17_wallets_dir, wallet)\n+            )\n+        for wallet in os.listdir(node_v18_wallets_dir):\n+            shutil.copytree(\n+                os.path.join(node_v18_wallets_dir, wallet),\n+                os.path.join(node_v17_wallets_dir, wallet)\n+            )\n+\n+        # Copy wallets to v0.18\n+        for wallet in os.listdir(node_master_wallets_dir):\n+            shutil.copytree(\n+                os.path.join(node_master_wallets_dir, wallet),\n+                os.path.join(node_v18_wallets_dir, wallet)\n+            )\n+\n+        # Open the wallets in v0.18\n+        node_v18.loadwallet(\"w1\")\n+        wallet = node_v18.get_wallet_rpc(\"w1\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+        txs = wallet.listtransactions()\n+        assert_equal(len(txs), 5)\n+        assert_equal(txs[1][\"txid\"], tx1_id)\n+        assert_equal(txs[2][\"walletconflicts\"], [tx1_id])\n+        assert_equal(txs[1][\"replaced_by_txid\"], tx2_id)\n+        assert not(txs[1][\"abandoned\"])\n+        assert_equal(txs[1][\"confirmations\"], -1)\n+        assert_equal(txs[2][\"blockindex\"], 1)\n+        assert txs[3][\"abandoned\"]\n+        assert_equal(txs[4][\"walletconflicts\"], [tx3_id])\n+        assert_equal(txs[3][\"replaced_by_txid\"], tx4_id)\n+        assert not(hasattr(txs[3], \"blockindex\"))\n+\n+        node_v18.loadwallet(\"w2\")\n+        wallet = node_v18.get_wallet_rpc(\"w2\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        node_v18.loadwallet(\"w3\")\n+        wallet = node_v18.get_wallet_rpc(\"w3\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] == 0\n+\n+        # Open the wallets in v0.17\n+        node_v17.loadwallet(\"w1_v18\")\n+        wallet = node_v17.get_wallet_rpc(\"w1_v18\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+\n+        node_v17.loadwallet(\"w1\")\n+        wallet = node_v17.get_wallet_rpc(\"w1\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+\n+        node_v17.loadwallet(\"w2_v18\")\n+        wallet = node_v17.get_wallet_rpc(\"w2_v18\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        node_v17.loadwallet(\"w2\")\n+        wallet = node_v17.get_wallet_rpc(\"w2\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        # RPC loadwallet failure causes bitcoind to exit, in addition to the RPC\n+        # call failure, so the following test won't work:\n+        # assert_raises_rpc_error(-4, \"Wallet loading failed.\", node_v17.loadwallet, 'w3_v18')\n+\n+        # Instead, we stop node and try to launch it with the wallet:\n+        self.stop_node(self.num_nodes - 1)\n+        node_v17.assert_start_raises_init_error([\"-wallet=w3_v18\"], \"Error: Error loading w3_v18: Wallet requires newer version of Bitcoin Core\")\n+        node_v17.assert_start_raises_init_error([\"-wallet=w3\"], \"Error: Error loading w3: Wallet requires newer version of Bitcoin Core\")\n+\n if __name__ == '__main__':\n     BackwardsCompatibilityTest().main()"
      }
    ]
  },
  {
    "sha": "b769cd142deda74fe46e231cc7b687a86514f2f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzY5Y2QxNDJkZWRhNzRmZTQ2ZTIzMWNjN2I2ODdhODY1MTRmMmYx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-02-20T20:40:29Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T20:46:23Z"
      },
      "message": "[test] add v0.17.1 wallet upgrade test",
      "tree": {
        "sha": "fa67de2baab58d86ccc3b6573c2cc4768acef400",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa67de2baab58d86ccc3b6573c2cc4768acef400"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b769cd142deda74fe46e231cc7b687a86514f2f1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5DEp8ACgkQV/+b28ww\nEAnTbw//cRhe1iRWGCO9XwEZbmpcFTn8s4wuCgHcacdqaAJjZGyn3kGucjxZQIUV\naYKtRWECEQlFZkz5nyfaaUO70XCad2y2vmGELjD6UpTFFIi66TuZIup6jZmJ6Miw\ne4MzfBHUtG74ZuLdRtKyVZwQxZx/F0zZfPLA1mdUi3nhwq9Gb53guyONfMW9oUUD\nJ+iOyUqripBIhUa1hpTc+LfQB1ckEbZkD51uXFpDaOMPcZmA89YJ8lcUSYJdxrxy\n9BGwlx1w7K/4FUVmnkZHRHQyxStOzBMOeLrOTRvXtEREcDlDcqZBpHLTnwIXBLGK\nKK8EC49J71u+HXnmwocn9LIAyKFi8eyPPgM7Ax6ZcA8sWRRhyjcNlgqVeu1fYSY0\nTUctaVI6Mly/wEJ39cP9ZalTXUP+ZMMME36aIImX9DO73p4LK9OrsD9z0gTOIIa1\nQmzJzrEdvKYTRhr2K60qgadVN5sFxB8752kwHbw+fTZaTcCfqnDLraoMuKA66o7q\nnlNfDtGGMCWEra4xMNRdFUqTdDPUz3ZUI2/tLYykibrfDrRnUftsj2SpIZQb7KrC\nwRyAjs5XjFtncOpiSmHEdDyDmLE/bWwBp1F/NJUikpenycYNbjm6cJyvTQbAanQw\nYS+sDM9UoEn9fCu7MDdNw0DpjhgcDZLcGLfGJO+p+URKcrtLzqU=\n=w88I\n-----END PGP SIGNATURE-----",
        "payload": "tree fa67de2baab58d86ccc3b6573c2cc4768acef400\nparent 9d9390dab716f07057c94e8e21f3c7dd06192f35\nauthor Sjors Provoost <sjors@sprovoost.nl> 1550695229 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581453983 +0100\n\n[test] add v0.17.1 wallet upgrade test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b769cd142deda74fe46e231cc7b687a86514f2f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b769cd142deda74fe46e231cc7b687a86514f2f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b769cd142deda74fe46e231cc7b687a86514f2f1/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d9390dab716f07057c94e8e21f3c7dd06192f35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d9390dab716f07057c94e8e21f3c7dd06192f35",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d9390dab716f07057c94e8e21f3c7dd06192f35"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6304c285fec91fff7fe58fe90faf7e4d5616ee53",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b769cd142deda74fe46e231cc7b687a86514f2f1/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b769cd142deda74fe46e231cc7b687a86514f2f1/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=b769cd142deda74fe46e231cc7b687a86514f2f1",
        "patch": "@@ -19,6 +19,7 @@\n import shutil\n \n from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.descriptors import descsum_create\n \n from test_framework.util import (\n     assert_equal,\n@@ -240,6 +241,28 @@ def run_test(self):\n         self.stop_node(self.num_nodes - 1)\n         node_v17.assert_start_raises_init_error([\"-wallet=w3_v18\"], \"Error: Error loading w3_v18: Wallet requires newer version of Bitcoin Core\")\n         node_v17.assert_start_raises_init_error([\"-wallet=w3\"], \"Error: Error loading w3: Wallet requires newer version of Bitcoin Core\")\n+        self.start_node(self.num_nodes - 1)\n+\n+        self.log.info(\"Test wallet upgrade path...\")\n+        # u1: regular wallet, created with v0.17\n+        node_v17.createwallet(wallet_name=\"u1_v17\")\n+        wallet = node_v17.get_wallet_rpc(\"u1_v17\")\n+        address = wallet.getnewaddress(\"bech32\")\n+        info = wallet.getaddressinfo(address)\n+        hdkeypath = info[\"hdkeypath\"]\n+        pubkey = info[\"pubkey\"]\n+\n+        # Copy the wallet to the last Bitcoin Core version and open it:\n+        node_v17.unloadwallet(\"u1_v17\")\n+        shutil.copytree(\n+            os.path.join(node_v17_wallets_dir, \"u1_v17\"),\n+            os.path.join(node_master_wallets_dir, \"u1_v17\")\n+        )\n+        node_master.loadwallet(\"u1_v17\")\n+        wallet = node_master.get_wallet_rpc(\"u1_v17\")\n+        info = wallet.getaddressinfo(address)\n+        descriptor = \"wpkh([\" + info[\"hdmasterfingerprint\"] + hdkeypath[1:] + \"]\" + pubkey + \")\"\n+        assert_equal(info[\"desc\"], descsum_create(descriptor))\n \n if __name__ == '__main__':\n     BackwardsCompatibilityTest().main()"
      }
    ]
  },
  {
    "sha": "c456145b2c65f580683df03bf10cd39000cf24d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDU2MTQ1YjJjNjVmNTgwNjgzZGYwM2JmMTBjZDM5MDAwY2YyNGQ1",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-10-09T19:10:37Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2020-02-11T20:46:23Z"
      },
      "message": "[test] add 0.19 backwards compatibility tests",
      "tree": {
        "sha": "8509dcb4d5927864ea8f8041a720fcdc4a84c15f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8509dcb4d5927864ea8f8041a720fcdc4a84c15f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c456145b2c65f580683df03bf10cd39000cf24d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl5DEp8ACgkQV/+b28ww\nEAkPHxAAj/1O7NfBVtiQY65k5PH11zKCSKSVLL2x0hphT+A7Pwoxk5O0cZjftYhW\nJIc72DMZPdiSn9/OjzvvnTdCH8qfcitQX9er72ffHQvFBZSZlcUUmkdDlLuYr2gA\nG32TeRLtyo6rEnGK1WsHHFpwi9dYkCSHv4Hf8IR5p/Vx0zRhApAbWRdZLQaeKJwY\n5360QpO91jj1MoysVsAWXTLxOLzeBcm6xiJvhcVNp3v+mD6TnpqIc7ZfH+QPBT9u\nYE4ITESMGdLTvwrTVWC+LNiNkBmreMMNdOto5hMuYaBY9YxqfVY6roXWib1u3roR\nZQXo+qIvs5xnP0kipHDfz6TsN2iIYxxp3Ojm9b3/RDDf5wnGN9Oid42Me2k7dRKy\n+sh7+z0qBBZRr1Jl259b00WtjljfoqJ/cgEQrg3/Wq0mv75ttlfRmsZ2oUE2eUCH\noklabFVViz3HLAj5gNaslFw5e4caQlTHr0D4/xaqYh5Joia7sLtMiIcIfnXQXStc\nPYU/dBcy/1s1BS4ni4FcPdVPuukHKi1m68Rzwk7kBd4z82d0aDZff4GtNkLtbWs5\nWQpaZoBtaXIonWTy2XCjf/B2/UW6TlQHdjOazOsXOiim1GYmLuuGG/phd5MJlU8x\nfNoEd1p8D6OTaXMLQxz1Ewb+ywbACjoNVQ6g8fd8EmCrns6qNSE=\n=d17E\n-----END PGP SIGNATURE-----",
        "payload": "tree 8509dcb4d5927864ea8f8041a720fcdc4a84c15f\nparent b769cd142deda74fe46e231cc7b687a86514f2f1\nauthor Sjors Provoost <sjors@sprovoost.nl> 1570648237 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1581453983 +0100\n\n[test] add 0.19 backwards compatibility tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c456145b2c65f580683df03bf10cd39000cf24d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c456145b2c65f580683df03bf10cd39000cf24d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c456145b2c65f580683df03bf10cd39000cf24d5/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b769cd142deda74fe46e231cc7b687a86514f2f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b769cd142deda74fe46e231cc7b687a86514f2f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b769cd142deda74fe46e231cc7b687a86514f2f1"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 71,
      "deletions": 4
    },
    "files": [
      {
        "sha": "1cb5c3090198a87485fb70028482cdc1f37b8430",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c456145b2c65f580683df03bf10cd39000cf24d5/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c456145b2c65f580683df03bf10cd39000cf24d5/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=c456145b2c65f580683df03bf10cd39000cf24d5",
        "patch": "@@ -37,6 +37,6 @@ if [ -z \"$NO_DEPENDS\" ]; then\n fi\n if [ \"$TEST_PREVIOUS_RELEASES\" = \"true\" ]; then\n   BEGIN_FOLD previous-versions\n-  DOCKER_EXEC contrib/devtools/previous_release.sh -b -t \"$PREVIOUS_RELEASES_DIR\" v0.17.1 v0.18.1\n+  DOCKER_EXEC contrib/devtools/previous_release.sh -b -t \"$PREVIOUS_RELEASES_DIR\" v0.17.1 v0.18.1 v0.19.0.1\n   END_FOLD\n fi"
      },
      {
        "sha": "1ac10f971a96c3d7fc082e32584922a6bbfc3558",
        "filename": "test/functional/feature_backwards_compatibility.py",
        "status": "modified",
        "additions": 70,
        "deletions": 3,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c456145b2c65f580683df03bf10cd39000cf24d5/test/functional/feature_backwards_compatibility.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c456145b2c65f580683df03bf10cd39000cf24d5/test/functional/feature_backwards_compatibility.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_backwards_compatibility.py?ref=c456145b2c65f580683df03bf10cd39000cf24d5",
        "patch": "@@ -6,7 +6,7 @@\n \n Test various backwards compatibility scenarios. Download the previous node binaries:\n \n-contrib/devtools/previous_release.sh -b v0.18.1 v0.17.1\n+contrib/devtools/previous_release.sh -b v0.19.0.1 v0.18.1 v0.17.1\n \n Due to RPC changes introduced in various versions the below tests\n won't work for older versions without some patches or workarounds.\n@@ -30,11 +30,12 @@\n class BackwardsCompatibilityTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n+        self.num_nodes = 5\n         # Add new version after each release:\n         self.extra_args = [\n             [\"-addresstype=bech32\"], # Pre-release: use to mine blocks\n             [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"], # Pre-release: use to receive coins, swap wallets, etc\n+            [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"], # v0.19.0.1\n             [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"], # v0.18.1\n             [\"-nowallet\", \"-walletrbf=1\", \"-addresstype=bech32\"] # v0.17.1\n         ]\n@@ -52,16 +53,19 @@ def setup_nodes(self):\n         self.add_nodes(self.num_nodes, extra_args=self.extra_args, versions=[\n             None,\n             None,\n+            190000,\n             180100,\n             170100\n         ], binary=[\n             self.options.bitcoind,\n             self.options.bitcoind,\n+            releases_path + \"/v0.19.0.1/bin/bitcoind\",\n             releases_path + \"/v0.18.1/bin/bitcoind\",\n             releases_path + \"/v0.17.1/bin/bitcoind\"\n         ], binary_cli=[\n             self.options.bitcoincli,\n             self.options.bitcoincli,\n+            releases_path + \"/v0.19.0.1/bin/bitcoin-cli\",\n             releases_path + \"/v0.18.1/bin/bitcoin-cli\",\n             releases_path + \"/v0.17.1/bin/bitcoin-cli\"\n         ])\n@@ -77,7 +81,8 @@ def run_test(self):\n         res = self.nodes[self.num_nodes - 1].getblockchaininfo()\n         assert_equal(res['blocks'], 101)\n \n-        node_master = self.nodes[self.num_nodes - 3]\n+        node_master = self.nodes[self.num_nodes - 4]\n+        node_v19 = self.nodes[self.num_nodes - 3]\n         node_v18 = self.nodes[self.num_nodes - 2]\n         node_v17 = self.nodes[self.num_nodes - 1]\n \n@@ -111,6 +116,13 @@ def run_test(self):\n         # Abondon transaction, but don't confirm\n         self.nodes[1].abandontransaction(tx3_id)\n \n+        # w1_v19: regular wallet, created with v0.19\n+        node_v19.createwallet(wallet_name=\"w1_v19\")\n+        wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+\n         # w1_v18: regular wallet, created with v0.18\n         node_v18.createwallet(wallet_name=\"w1_v18\")\n         wallet = node_v18.get_wallet_rpc(\"w1_v18\")\n@@ -127,6 +139,13 @@ def run_test(self):\n         assert info['private_keys_enabled'] == False\n         assert info['keypoolsize'] == 0\n \n+        # w2_v19: wallet with private keys disabled, created with v0.19\n+        node_v19.createwallet(wallet_name=\"w2_v19\", disable_private_keys=True)\n+        wallet = node_v19.get_wallet_rpc(\"w2_v19\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n         # w2_v18: wallet with private keys disabled, created with v0.18\n         node_v18.createwallet(wallet_name=\"w2_v18\", disable_private_keys=True)\n         wallet = node_v18.get_wallet_rpc(\"w2_v18\")\n@@ -142,6 +161,13 @@ def run_test(self):\n         assert info['private_keys_enabled']\n         assert info['keypoolsize'] == 0\n \n+        # w3_v19: blank wallet, created with v0.19\n+        node_v19.createwallet(wallet_name=\"w3_v19\", blank=True)\n+        wallet = node_v19.get_wallet_rpc(\"w3_v19\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] == 0\n+\n         # w3_v18: blank wallet, created with v0.18\n         node_v18.createwallet(wallet_name=\"w3_v18\", blank=True)\n         wallet = node_v18.get_wallet_rpc(\"w3_v18\")\n@@ -151,10 +177,13 @@ def run_test(self):\n \n         # Copy the wallets to older nodes:\n         node_master_wallets_dir = os.path.join(node_master.datadir, \"regtest/wallets\")\n+        node_v19_wallets_dir = os.path.join(node_v19.datadir, \"regtest/wallets\")\n         node_v18_wallets_dir = os.path.join(node_v18.datadir, \"regtest/wallets\")\n         node_v17_wallets_dir = os.path.join(node_v17.datadir, \"regtest/wallets\")\n         node_master.unloadwallet(\"w1\")\n         node_master.unloadwallet(\"w2\")\n+        node_v19.unloadwallet(\"w1_v19\")\n+        node_v19.unloadwallet(\"w2_v19\")\n         node_v18.unloadwallet(\"w1_v18\")\n         node_v18.unloadwallet(\"w2_v18\")\n \n@@ -177,6 +206,44 @@ def run_test(self):\n                 os.path.join(node_v18_wallets_dir, wallet)\n             )\n \n+        # Copy wallets to v0.19\n+        for wallet in os.listdir(node_master_wallets_dir):\n+            shutil.copytree(\n+                os.path.join(node_master_wallets_dir, wallet),\n+                os.path.join(node_v19_wallets_dir, wallet)\n+            )\n+\n+        # Open the wallets in v0.19\n+        node_v19.loadwallet(\"w1\")\n+        wallet = node_v19.get_wallet_rpc(\"w1\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] > 0\n+        txs = wallet.listtransactions()\n+        assert_equal(len(txs), 5)\n+        assert_equal(txs[1][\"txid\"], tx1_id)\n+        assert_equal(txs[2][\"walletconflicts\"], [tx1_id])\n+        assert_equal(txs[1][\"replaced_by_txid\"], tx2_id)\n+        assert not(txs[1][\"abandoned\"])\n+        assert_equal(txs[1][\"confirmations\"], -1)\n+        assert_equal(txs[2][\"blockindex\"], 1)\n+        assert txs[3][\"abandoned\"]\n+        assert_equal(txs[4][\"walletconflicts\"], [tx3_id])\n+        assert_equal(txs[3][\"replaced_by_txid\"], tx4_id)\n+        assert not(hasattr(txs[3], \"blockindex\"))\n+\n+        node_v19.loadwallet(\"w2\")\n+        wallet = node_v19.get_wallet_rpc(\"w2\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled'] == False\n+        assert info['keypoolsize'] == 0\n+\n+        node_v19.loadwallet(\"w3\")\n+        wallet = node_v19.get_wallet_rpc(\"w3\")\n+        info = wallet.getwalletinfo()\n+        assert info['private_keys_enabled']\n+        assert info['keypoolsize'] == 0\n+\n         # Open the wallets in v0.18\n         node_v18.loadwallet(\"w1\")\n         wallet = node_v18.get_wallet_rpc(\"w1\")"
      }
    ]
  }
]