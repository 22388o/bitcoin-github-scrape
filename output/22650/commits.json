[
  {
    "sha": "8721638daa8502c7f8de5ae24a9393d7290a2ce5",
    "node_id": "C_kwDOABII59oAKDg3MjE2MzhkYWE4NTAyYzdmOGRlNWFlMjRhOTM5M2Q3MjkwYTJjZTU",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-05-10T18:13:40Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-24T19:22:49Z"
      },
      "message": "rpc: remove deprecated addresses and reqSigs from rpc outputs",
      "tree": {
        "sha": "9ee67d85ad3b4fc72b465b5c8431eb83b274375f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ee67d85ad3b4fc72b465b5c8431eb83b274375f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8721638daa8502c7f8de5ae24a9393d7290a2ce5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmFOJYkACgkQc3/VzfHR\nRrmBQg/8DnYjCvKvxephxFpCTz4a0NHngRbRDYCMJeolurkcfSq7XysdsnNP5dC2\nBKqRa3MI4BtXm57D9qgf2XqwGKbqWuQLgUSFbPmMtwELZIEHZJcgVCf2XnypGVMw\nrK6/xsdKJ3X3hOWO3QrBP9mU2/j8uEhs7CjA2AG0/KFUGlbeF7QBOHGEvPiF2Ggh\nFA1NeZeDjVWnQZBDuRyUSvhYgwtRKQL7kUs2pwFk0Kqa4do16bu7baTKoEUrHIoK\nB8TQo4nbuFvl/OPJqzZqgZE+rR5nPMIQzIlS79UAotefZkSK0bLxXk93zJDmLs0w\nojCOspF93TuxwKoCol5eMOY+yvTveIkcMm6i3JhA+ZoyEo4/wcmL01Rv74FNkOba\nocGOVAit3yD3IpdHn370QjmhTCXxIbA0kNNGomc+YBOL/DYSqPnX94aJ8PNeuPqt\n3L5y0TWCgB02BBzGvtwgpy8eMHQU2or7fnpqUHvt8DQog9zZ4ynC/Vrvhallmc+Q\nW+Jmpfy5NKiZ0c88sn3nu1GIQMOyKY48KJF3xSDB3KErNzNV9pRR19f+jIsAsiW0\nfM48KVwBfw9JLFSsbMwgk6Ww4PEjQHaQ1wofVxs43X2bt6175yZiiT8IhOXDONNe\n12qKp8gah0VfNhrdFICrSIA2gBp3VNVw60SEWAw/ZOfrE70c2A0=\n=gDyk\n-----END PGP SIGNATURE-----",
        "payload": "tree 9ee67d85ad3b4fc72b465b5c8431eb83b274375f\nparent 03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b\nauthor Michael Dietz <michael.dietz@waya.ai> 1620670420 -0400\ncommitter Michael Dietz <michael.dietz@waya.ai> 1632511369 -0500\n\nrpc: remove deprecated addresses and reqSigs from rpc outputs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8721638daa8502c7f8de5ae24a9393d7290a2ce5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8721638daa8502c7f8de5ae24a9393d7290a2ce5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8721638daa8502c7f8de5ae24a9393d7290a2ce5/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b"
      }
    ],
    "stats": {
      "total": 326,
      "additions": 35,
      "deletions": 291
    },
    "files": [
      {
        "sha": "98916460aa10be12f7e052443f39013edd103fc9",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -727,7 +727,7 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n static void OutputTxJSON(const CTransaction& tx)\n {\n     UniValue entry(UniValue::VOBJ);\n-    TxToUniv(tx, uint256(), /* include_addresses */ false, entry);\n+    TxToUniv(tx, uint256(), entry);\n \n     std::string jsonOutput = entry.write(4);\n     tfm::format(std::cout, \"%s\\n\", jsonOutput);"
      },
      {
        "sha": "01340ae2ee01d302dcfb5f088b5b4f6bb7e64747",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -44,8 +44,8 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_addresses);\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n void ScriptToUniv(const CScript& script, UniValue& out, bool include_address);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, bool include_addresses, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "4850ef969ffde196207c1a9d74907ce95adaa103",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 23,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -156,41 +156,24 @@ void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n     }\n }\n \n-// TODO: from v23 (\"addresses\" and \"reqSigs\" deprecated) this method should be refactored to remove the `include_addresses` option\n-// this method can also be combined with `ScriptToUniv` as they will overlap\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey,\n-                        UniValue& out, bool fIncludeHex, bool include_addresses)\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex)\n {\n-    TxoutType type;\n     CTxDestination address;\n-    std::vector<CTxDestination> addresses;\n-    int nRequired;\n \n     out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n     if (fIncludeHex)\n         out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n-    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired) || type == TxoutType::PUBKEY) {\n-        out.pushKV(\"type\", GetTxnOutputType(type));\n-        return;\n-    }\n+    std::vector<std::vector<unsigned char>> solns;\n+    TxoutType type = Solver(scriptPubKey, solns);\n \n-    if (ExtractDestination(scriptPubKey, address)) {\n+    if (ExtractDestination(scriptPubKey, address) && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n     out.pushKV(\"type\", GetTxnOutputType(type));\n-\n-    if (include_addresses) {\n-        UniValue a(UniValue::VARR);\n-        for (const CTxDestination& addr : addresses) {\n-            a.push_back(EncodeDestination(addr));\n-        }\n-        out.pushKV(\"addresses\", a);\n-        out.pushKV(\"reqSigs\", nRequired);\n-    }\n }\n \n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, bool include_addresses, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo)\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo)\n {\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n@@ -249,7 +232,7 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, bool include_add\n         out.pushKV(\"n\", (int64_t)i);\n \n         UniValue o(UniValue::VOBJ);\n-        ScriptPubKeyToUniv(txout.scriptPubKey, o, true, include_addresses);\n+        ScriptPubKeyToUniv(txout.scriptPubKey, o, true);\n         out.pushKV(\"scriptPubKey\", o);\n         vout.push_back(out);\n "
      },
      {
        "sha": "a58c7d9f76a37b06c39e04792d0b5eff701dd4db",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -1256,11 +1256,8 @@ static RPCHelpMan gettxout()\n                 {RPCResult::Type::OBJ, \"scriptPubKey\", \"\", {\n                     {RPCResult::Type::STR, \"asm\", \"\"},\n                     {RPCResult::Type::STR_HEX, \"hex\", \"\"},\n-                    {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Number of required signatures\"},\n                     {RPCResult::Type::STR, \"type\", \"The type, eg pubkeyhash\"},\n-                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"bitcoin address (only if a well-defined address exists)\"},\n-                    {RPCResult::Type::ARR, \"addresses\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Array of bitcoin addresses\",\n-                        {{RPCResult::Type::STR, \"address\", \"bitcoin address\"}}},\n+                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                 }},\n                 {RPCResult::Type::BOOL, \"coinbase\", \"Coinbase or not\"},\n             }},\n@@ -1933,16 +1930,6 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n     }\n }\n \n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex)\n-{\n-    ScriptPubKeyToUniv(scriptPubKey, out, fIncludeHex, IsDeprecatedRPCEnabled(\"addresses\"));\n-}\n-\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex, int serialize_flags, const CTxUndo* txundo)\n-{\n-    TxToUniv(tx, hashBlock, IsDeprecatedRPCEnabled(\"addresses\"), entry, include_hex, serialize_flags, txundo);\n-}\n-\n template<typename T>\n static inline bool SetHasKeys(const std::set<T>& set) {return false;}\n template<typename T, typename Tk, typename... Args>"
      },
      {
        "sha": "4b0d85568505eba3c3cca2bc81b97311d181b7dc",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -6,7 +6,6 @@\n #define BITCOIN_RPC_BLOCKCHAIN_H\n \n #include <amount.h>\n-#include <core_io.h>\n #include <streams.h>\n #include <sync.h>\n \n@@ -53,9 +52,6 @@ UniValue blockheaderToJSON(const CBlockIndex* tip, const CBlockIndex* blockindex\n /** Used by getblockstats to get feerates at different percentiles by weight  */\n void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES], std::vector<std::pair<CAmount, int64_t>>& scores, int64_t total_weight);\n \n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n-\n NodeContext& EnsureAnyNodeContext(const std::any& context);\n CTxMemPool& EnsureMemPool(const NodeContext& node);\n CTxMemPool& EnsureAnyMemPool(const std::any& context);"
      },
      {
        "sha": "d01ff6110ce580a98429e391682c59ef6db2d584",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 25,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -131,13 +131,8 @@ static RPCHelpMan getrawtransaction()\n                                      {\n                                          {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                          {RPCResult::Type::STR, \"hex\", \"the hex\"},\n-                                         {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Number of required signatures\"},\n                                          {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                         {RPCResult::Type::STR, \"address\", /* optional */ true, \"bitcoin address (only if a well-defined address exists)\"},\n-                                         {RPCResult::Type::ARR, \"addresses\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Array of bitcoin addresses\",\n-                                         {\n-                                             {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                                         }},\n+                                         {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                                      }},\n                                  }},\n                              }},\n@@ -495,13 +490,8 @@ static RPCHelpMan decoderawtransaction()\n                                 {\n                                     {RPCResult::Type::STR, \"asm\", \"the asm\"},\n                                     {RPCResult::Type::STR_HEX, \"hex\", \"the hex\"},\n-                                    {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Number of required signatures\"},\n                                     {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"bitcoin address (only if a well-defined address exists)\"},\n-                                    {RPCResult::Type::ARR, \"addresses\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Array of bitcoin addresses\",\n-                                    {\n-                                        {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                                    }},\n+                                    {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                                 }},\n                             }},\n                         }},\n@@ -554,24 +544,14 @@ static RPCHelpMan decodescript()\n                     {\n                         {RPCResult::Type::STR, \"asm\", \"Script public key\"},\n                         {RPCResult::Type::STR, \"type\", \"The output type (e.g. \"+GetAllOutputTypes()+\")\"},\n-                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"bitcoin address (only if a well-defined address exists)\"},\n-                        {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Number of required signatures\"},\n-                        {RPCResult::Type::ARR, \"addresses\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Array of bitcoin addresses\",\n-                        {\n-                            {RPCResult::Type::STR, \"address\", \"bitcoin address\"},\n-                        }},\n+                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                         {RPCResult::Type::STR, \"p2sh\", /* optional */ true, \"address of P2SH script wrapping this redeem script (not returned if the script is already a P2SH)\"},\n                         {RPCResult::Type::OBJ, \"segwit\", /* optional */ true, \"Result of a witness script public key wrapping this redeem script (not returned if the script is a P2SH or witness)\",\n                         {\n                             {RPCResult::Type::STR, \"asm\", \"String representation of the script public key\"},\n                             {RPCResult::Type::STR_HEX, \"hex\", \"Hex string of the script public key\"},\n                             {RPCResult::Type::STR, \"type\", \"The type of the script public key (e.g. witness_v0_keyhash or witness_v0_scripthash)\"},\n-                            {RPCResult::Type::STR, \"address\", /* optional */ true, \"bitcoin address (only if a well-defined address exists)\"},\n-                            {RPCResult::Type::NUM, \"reqSigs\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Number of required signatures\"},\n-                            {RPCResult::Type::ARR, \"addresses\", /* optional */ true, \"(DEPRECATED, returned only if config option -deprecatedrpc=addresses is passed) Array of bitcoin addresses\",\n-                            {\n-                                {RPCResult::Type::STR, \"address\", \"segwit address\"},\n-                            }},\n+                            {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                             {RPCResult::Type::STR, \"p2sh-segwit\", \"address of the P2SH script wrapping this witness redeem script\"},\n                         }},\n                     }\n@@ -1061,7 +1041,7 @@ static RPCHelpMan decodepsbt()\n                                         {RPCResult::Type::STR, \"asm\", \"The asm\"},\n                                         {RPCResult::Type::STR_HEX, \"hex\", \"The hex\"},\n                                         {RPCResult::Type::STR, \"type\", \"The type, eg 'pubkeyhash'\"},\n-                                        {RPCResult::Type::STR, \"address\", /*optional=*/true, \"Bitcoin address if there is one\"},\n+                                        {RPCResult::Type::STR, \"address\", /* optional */ true, \"The Bitcoin address (only if a well-defined address exists)\"},\n                                     }},\n                                 }},\n                                 {RPCResult::Type::OBJ_DYN, \"partial_signatures\", /* optional */ true, \"\","
      },
      {
        "sha": "d9656c781dae8903b9881eeae1aa2fa667a7b7c6",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -266,47 +266,6 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     assert(false);\n }\n \n-// TODO: from v23 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n-bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet)\n-{\n-    addressRet.clear();\n-    std::vector<valtype> vSolutions;\n-    typeRet = Solver(scriptPubKey, vSolutions);\n-    if (typeRet == TxoutType::NONSTANDARD) {\n-        return false;\n-    } else if (typeRet == TxoutType::NULL_DATA) {\n-        // This is data, not addresses\n-        return false;\n-    }\n-\n-    if (typeRet == TxoutType::MULTISIG)\n-    {\n-        nRequiredRet = vSolutions.front()[0];\n-        for (unsigned int i = 1; i < vSolutions.size()-1; i++)\n-        {\n-            CPubKey pubKey(vSolutions[i]);\n-            if (!pubKey.IsValid())\n-                continue;\n-\n-            CTxDestination address = PKHash(pubKey);\n-            addressRet.push_back(address);\n-        }\n-\n-        if (addressRet.empty())\n-            return false;\n-    }\n-    else\n-    {\n-        nRequiredRet = 1;\n-        CTxDestination address;\n-        if (!ExtractDestination(scriptPubKey, address))\n-           return false;\n-        addressRet.push_back(address);\n-    }\n-\n-    return true;\n-}\n-\n namespace {\n class CScriptVisitor\n {"
      },
      {
        "sha": "a8e57231bf7a92927962c583c52837e413188fea",
        "filename": "src/script/standard.h",
        "status": "modified",
        "additions": 1,
        "deletions": 17,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/script/standard.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/script/standard.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.h?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -176,27 +176,11 @@ TxoutType Solver(const CScript& scriptPubKey, std::vector<std::vector<unsigned c\n \n /**\n  * Parse a standard scriptPubKey for the destination address. Assigns result to\n- * the addressRet parameter and returns true if successful. For multisig\n- * scripts, instead use ExtractDestinations. Currently only works for P2PK,\n+ * the addressRet parameter and returns true if successful. Currently only works for P2PK,\n  * P2PKH, P2SH, P2WPKH, and P2WSH scripts.\n  */\n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet);\n \n-/**\n- * Parse a standard scriptPubKey with one or more destination addresses. For\n- * multisig scripts, this populates the addressRet vector with the pubkey IDs\n- * and nRequiredRet with the n required to spend. For other destinations,\n- * addressRet is populated with a single value and nRequiredRet is set to 1.\n- * Returns true if successful.\n- *\n- * Note: this function confuses destinations (a subset of CScripts that are\n- * encodable as an address) with key identifiers (of keys involved in a\n- * CScript), and its use should be phased out.\n- *\n- * TODO: from v23 (\"addresses\" and \"reqSigs\" deprecated) \"ExtractDestinations\" should be removed\n- */\n-bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet);\n-\n /**\n  * Generate a Bitcoin scriptPubKey for the given CTxDestination. Returns a P2PKH\n  * script for a CKeyID destination, a P2SH script for a CScriptID, and an empty"
      },
      {
        "sha": "bf699be325d2a82658f4baae39dfd4522b0457d8",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 42,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -56,46 +56,8 @@ FUZZ_TARGET_INIT(script, initialize_script)\n         assert(script == decompressed_script);\n     }\n \n-    CTxDestination address;\n-    TxoutType type_ret;\n-    std::vector<CTxDestination> addresses;\n-    int required_ret;\n-    bool extract_destinations_ret = ExtractDestinations(script, type_ret, addresses, required_ret);\n-    bool extract_destination_ret = ExtractDestination(script, address);\n-    if (!extract_destinations_ret) {\n-        assert(!extract_destination_ret);\n-        if (type_ret == TxoutType::MULTISIG) {\n-            assert(addresses.empty() && required_ret == 0);\n-        } else {\n-            assert(type_ret == TxoutType::PUBKEY ||\n-                   type_ret == TxoutType::NONSTANDARD ||\n-                   type_ret == TxoutType::NULL_DATA);\n-        }\n-    } else {\n-        assert(required_ret >= 1 && required_ret <= 16);\n-        assert((unsigned long)required_ret == addresses.size());\n-        assert(type_ret == TxoutType::MULTISIG || required_ret == 1);\n-    }\n-    if (type_ret == TxoutType::NONSTANDARD || type_ret == TxoutType::NULL_DATA) {\n-        assert(!extract_destinations_ret);\n-    }\n-    if (!extract_destination_ret) {\n-        assert(type_ret == TxoutType::PUBKEY ||\n-               type_ret == TxoutType::NONSTANDARD ||\n-               type_ret == TxoutType::NULL_DATA ||\n-               type_ret == TxoutType::MULTISIG);\n-    } else {\n-        assert(address == addresses[0]);\n-    }\n-    if (type_ret == TxoutType::NONSTANDARD ||\n-        type_ret == TxoutType::NULL_DATA ||\n-        type_ret == TxoutType::MULTISIG) {\n-        assert(!extract_destination_ret);\n-    }\n-\n     TxoutType which_type;\n     bool is_standard_ret = IsStandard(script, which_type);\n-    assert(type_ret == which_type);\n     if (!is_standard_ret) {\n         assert(which_type == TxoutType::NONSTANDARD ||\n                which_type == TxoutType::NULL_DATA ||\n@@ -112,6 +74,20 @@ FUZZ_TARGET_INIT(script, initialize_script)\n                which_type == TxoutType::NONSTANDARD);\n     }\n \n+    CTxDestination address;\n+    bool extract_destination_ret = ExtractDestination(script, address);\n+    if (!extract_destination_ret) {\n+        assert(which_type == TxoutType::PUBKEY ||\n+               which_type == TxoutType::NONSTANDARD ||\n+               which_type == TxoutType::NULL_DATA ||\n+               which_type == TxoutType::MULTISIG);\n+    }\n+    if (which_type == TxoutType::NONSTANDARD ||\n+        which_type == TxoutType::NULL_DATA ||\n+        which_type == TxoutType::MULTISIG) {\n+        assert(!extract_destination_ret);\n+    }\n+\n     const FlatSigningProvider signing_provider;\n     (void)InferDescriptor(script, signing_provider);\n     (void)IsSegWitOutput(signing_provider, script);\n@@ -133,11 +109,9 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     (void)ScriptToAsmStr(script, true);\n \n     UniValue o1(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o1, true, true);\n-    ScriptPubKeyToUniv(script, o1, true, false);\n+    ScriptPubKeyToUniv(script, o1, true);\n     UniValue o2(UniValue::VOBJ);\n-    ScriptPubKeyToUniv(script, o2, false, true);\n-    ScriptPubKeyToUniv(script, o2, false, false);\n+    ScriptPubKeyToUniv(script, o2, false);\n     UniValue o3(UniValue::VOBJ);\n     ScriptToUniv(script, o3, true);\n     UniValue o4(UniValue::VOBJ);"
      },
      {
        "sha": "a21e5cea0cda353ece14cf4e78dac4d54731d2db",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -103,6 +103,6 @@ FUZZ_TARGET_INIT(transaction, initialize_transaction)\n     (void)IsWitnessStandard(tx, coins_view_cache);\n \n     UniValue u(UniValue::VOBJ);\n-    TxToUniv(tx, /* hashBlock */ uint256::ZERO, /* include_addresses */ true, u);\n-    TxToUniv(tx, /* hashBlock */ uint256::ONE, /* include_addresses */ false, u);\n+    TxToUniv(tx, /* hashBlock */ uint256::ZERO, u);\n+    TxToUniv(tx, /* hashBlock */ uint256::ONE, u);\n }"
      },
      {
        "sha": "bf8ff5f5e226dd5067ce9a0e50415a1a992446f3",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 61,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -252,67 +252,6 @@ BOOST_AUTO_TEST_CASE(script_standard_ExtractDestination)\n     BOOST_CHECK(std::get<WitnessUnknown>(address) == unk);\n }\n \n-BOOST_AUTO_TEST_CASE(script_standard_ExtractDestinations)\n-{\n-    CKey keys[3];\n-    CPubKey pubkeys[3];\n-    for (int i = 0; i < 3; i++) {\n-        keys[i].MakeNewKey(true);\n-        pubkeys[i] = keys[i].GetPubKey();\n-    }\n-\n-    CScript s;\n-    TxoutType whichType;\n-    std::vector<CTxDestination> addresses;\n-    int nRequired;\n-\n-    // TxoutType::PUBKEY\n-    s.clear();\n-    s << ToByteVector(pubkeys[0]) << OP_CHECKSIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::PUBKEY);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(std::get<PKHash>(addresses[0]) == PKHash(pubkeys[0]));\n-\n-    // TxoutType::PUBKEYHASH\n-    s.clear();\n-    s << OP_DUP << OP_HASH160 << ToByteVector(pubkeys[0].GetID()) << OP_EQUALVERIFY << OP_CHECKSIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::PUBKEYHASH);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(std::get<PKHash>(addresses[0]) == PKHash(pubkeys[0]));\n-\n-    // TxoutType::SCRIPTHASH\n-    CScript redeemScript(s); // initialize with leftover P2PKH script\n-    s.clear();\n-    s << OP_HASH160 << ToByteVector(CScriptID(redeemScript)) << OP_EQUAL;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::SCRIPTHASH);\n-    BOOST_CHECK_EQUAL(addresses.size(), 1U);\n-    BOOST_CHECK_EQUAL(nRequired, 1);\n-    BOOST_CHECK(std::get<ScriptHash>(addresses[0]) == ScriptHash(redeemScript));\n-\n-    // TxoutType::MULTISIG\n-    s.clear();\n-    s << OP_2 <<\n-        ToByteVector(pubkeys[0]) <<\n-        ToByteVector(pubkeys[1]) <<\n-        OP_2 << OP_CHECKMULTISIG;\n-    BOOST_CHECK(ExtractDestinations(s, whichType, addresses, nRequired));\n-    BOOST_CHECK_EQUAL(whichType, TxoutType::MULTISIG);\n-    BOOST_CHECK_EQUAL(addresses.size(), 2U);\n-    BOOST_CHECK_EQUAL(nRequired, 2);\n-    BOOST_CHECK(std::get<PKHash>(addresses[0]) == PKHash(pubkeys[0]));\n-    BOOST_CHECK(std::get<PKHash>(addresses[1]) == PKHash(pubkeys[1]));\n-\n-    // TxoutType::NULL_DATA\n-    s.clear();\n-    s << OP_RETURN << std::vector<unsigned char>({75});\n-    BOOST_CHECK(!ExtractDestinations(s, whichType, addresses, nRequired));\n-}\n-\n BOOST_AUTO_TEST_CASE(script_standard_GetScriptFor_)\n {\n     CKey keys[3];"
      },
      {
        "sha": "a54a690c6a89b032395057d1db4582aa877a2432",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -1762,7 +1762,7 @@ static RPCHelpMan gettransaction()\n \n     if (verbose) {\n         UniValue decoded(UniValue::VOBJ);\n-        TxToUniv(*wtx.tx, uint256(), pwallet->chain().rpcEnableDeprecated(\"addresses\"), decoded, false);\n+        TxToUniv(*wtx.tx, uint256(), decoded, false);\n         entry.pushKV(\"decoded\", decoded);\n     }\n \n@@ -3784,7 +3784,6 @@ class DescribeWalletAddressVisitor\n             obj.pushKV(\"embedded\", std::move(subobj));\n         } else if (which_type == TxoutType::MULTISIG) {\n             // Also report some information on multisig scripts (which do not have a corresponding address).\n-            // TODO: abstract out the common functionality between this logic and ExtractDestinations.\n             obj.pushKV(\"sigsrequired\", solutions_data[0][0]);\n             UniValue pubkeys(UniValue::VARR);\n             for (size_t i = 1; i < solutions_data.size() - 1; ++i) {"
      },
      {
        "sha": "e566fb0aa7a512d5c67edd4b2da2557bb7dbad3e",
        "filename": "test/functional/rpc_addresses_deprecation.py",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b/test/functional/rpc_addresses_deprecation.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b/test/functional/rpc_addresses_deprecation.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_addresses_deprecation.py?ref=03cb2b480bd5e35cd6bafbca3ff6adcba52dab8b",
        "patch": "@@ -1,56 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2020 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test deprecation of reqSigs and addresses RPC fields.\"\"\"\n-\n-from test_framework.messages import (\n-    tx_from_hex,\n-)\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import (\n-    assert_equal,\n-)\n-\n-\n-class AddressesDeprecationTest(BitcoinTestFramework):\n-    def set_test_params(self):\n-        self.num_nodes = 2\n-        self.extra_args = [[], [\"-deprecatedrpc=addresses\"]]\n-\n-    def skip_test_if_missing_module(self):\n-        self.skip_if_no_wallet()\n-\n-    def run_test(self):\n-        self.test_addresses_deprecation()\n-\n-    def test_addresses_deprecation(self):\n-        node = self.nodes[0]\n-        coin = node.listunspent().pop()\n-\n-        inputs = [{'txid': coin['txid'], 'vout': coin['vout']}]\n-        outputs = {node.getnewaddress(): 0.99}\n-        raw = node.createrawtransaction(inputs, outputs)\n-        signed = node.signrawtransactionwithwallet(raw)['hex']\n-\n-        # This transaction is derived from test/util/data/txcreatemultisig1.json\n-        tx = tx_from_hex(signed)\n-        tx.vout[0].scriptPubKey = bytes.fromhex(\"522102a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff39721021ac43c7ff740014c3b33737ede99c967e4764553d1b2b83db77c83b8715fa72d2102df2089105c77f266fa11a9d33f05c735234075f2e8780824c6b709415f9fb48553ae\")\n-        tx_signed = node.signrawtransactionwithwallet(tx.serialize().hex())['hex']\n-        txid = node.sendrawtransaction(hexstring=tx_signed, maxfeerate=0)\n-\n-        self.log.info(\"Test RPCResult scriptPubKey no longer returns the fields addresses or reqSigs by default\")\n-        hash = self.generateblock(node, output=node.getnewaddress(), transactions=[txid])['hash']\n-        # Ensure both nodes have the newly generated block on disk.\n-        self.sync_blocks()\n-        script_pub_key = node.getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n-        assert 'addresses' not in script_pub_key and 'reqSigs' not in script_pub_key\n-\n-        self.log.info(\"Test RPCResult scriptPubKey returns the addresses field with -deprecatedrpc=addresses\")\n-        script_pub_key = self.nodes[1].getblock(blockhash=hash, verbose=2)['tx'][-1]['vout'][0]['scriptPubKey']\n-        assert_equal(script_pub_key['addresses'], ['mvKDK6D54HU8wQumJBLHY95eq5iHFqXSBz', 'mv3rHCQSwKp2BLSuMHD8uCS32LW5xiNAA5', 'mirrsyhAQYzo5CwVhcaYJKwUJu1WJRCRJe'])\n-        assert_equal(script_pub_key['reqSigs'], 2)\n-\n-\n-if __name__ == \"__main__\":\n-    AddressesDeprecationTest().main()"
      },
      {
        "sha": "01842d73b138c5185a0b34cf69df002db4d5e0b1",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8721638daa8502c7f8de5ae24a9393d7290a2ce5/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8721638daa8502c7f8de5ae24a9393d7290a2ce5/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "patch": "@@ -304,7 +304,6 @@\n     'feature_presegwit_node_upgrade.py',\n     'feature_settings.py',\n     'rpc_getdescriptorinfo.py',\n-    'rpc_addresses_deprecation.py',\n     'rpc_help.py',\n     'feature_help.py',\n     'feature_shutdown.py',"
      }
    ]
  },
  {
    "sha": "d64deac7b823a0eba97ab3a3686054eefe330d3c",
    "node_id": "C_kwDOABII59oAKGQ2NGRlYWM3YjgyM2EwZWJhOTdhYjNhMzY4NjA1NGVlZmUzMzBkM2M",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-05-10T19:14:16Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-24T19:22:53Z"
      },
      "message": "refactor: share logic between ScriptPubKeyToUniv and ScriptToUniv",
      "tree": {
        "sha": "64d3de6c88d7e33b77f79bfae9a4dfe939e5d68c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64d3de6c88d7e33b77f79bfae9a4dfe939e5d68c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d64deac7b823a0eba97ab3a3686054eefe330d3c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmFOJY0ACgkQc3/VzfHR\nRrleTQ/+K/7Aoz9/ojGazwG9FGumOmmrU46fGuttFRZF/WfIuH6DPxwvp4Z0PKmR\na8q9PLuMdaHBOnXaFssY+/dRnzCCUjVrdUmXMAeQQP0Ou3pTE0Ux71lC7fxZrach\ngNXI0QrIDxwja184HUdXBMsTzyd1Ut3DtJqAOZ6Jk6WLwh/VEm3L2X3XYS5wlWKi\nAYgU3PszoDR6mWOMvkK+N5DmQK0yYI1xiJ0Cm9VX73VAUVKYdb1lr3rem/xd24h+\ny+0AackFQVNLPFb4HlXx5+NXMv2mdYDPreFT7DcsKQLnkouF0auHb0mjpFyVftDs\nnyKsV7dT3g0CBVciw2l0tNFqpiRfYcMdiIIPhbQRtRhJ48KHoPeSsmAGbNCorycO\nQf5klfvQQl+GuKqva97jdf4K4exM8E+DQ3SJ71rRSUQmfGosi3kifxVWvaTsXg4o\nzOMWQogqqxMVsbqATYsrRKtRD+tPo7ApDkcQKBQS1odjuuOsvaaATOwZTekrFCLy\nkj59MU2ECPj0mhb2hJ63e03qmj6rKYI3/fhP1zcThY+hJz6PA+fCeDyz7V+MS05c\n4ETTq0FBLE4ppYi1XdRBYEVFlXUJ9MOnnfAT8Sju3BxbVjZ+V2OUpYmDBINKWPhH\nArQHSKa96TpQD4Xe/Bagq78saz/yQUNgPjnCjCSFchEKqdIujwY=\n=a23P\n-----END PGP SIGNATURE-----",
        "payload": "tree 64d3de6c88d7e33b77f79bfae9a4dfe939e5d68c\nparent 8721638daa8502c7f8de5ae24a9393d7290a2ce5\nauthor Michael Dietz <michael.dietz@waya.ai> 1620674056 -0400\ncommitter Michael Dietz <michael.dietz@waya.ai> 1632511373 -0500\n\nrefactor: share logic between ScriptPubKeyToUniv and ScriptToUniv\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d64deac7b823a0eba97ab3a3686054eefe330d3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d64deac7b823a0eba97ab3a3686054eefe330d3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d64deac7b823a0eba97ab3a3686054eefe330d3c/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8721638daa8502c7f8de5ae24a9393d7290a2ce5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8721638daa8502c7f8de5ae24a9393d7290a2ce5"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 13,
      "deletions": 25
    },
    "files": [
      {
        "sha": "dec0297637b6bf2cfb8aee092d4e833883906dab",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "patch": "@@ -44,8 +44,8 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-void ScriptToUniv(const CScript& script, UniValue& out, bool include_address);\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_address = true);\n+void ScriptToUniv(const CScript& script, UniValue& out);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n \n #endif // BITCOIN_CORE_IO_H"
      },
      {
        "sha": "aa560806cdde15d8920d43eab392e2b56fd8fd73",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "patch": "@@ -141,22 +141,12 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n     return HexStr(ssTx);\n }\n \n-void ScriptToUniv(const CScript& script, UniValue& out, bool include_address)\n+void ScriptToUniv(const CScript& script, UniValue& out)\n {\n-    out.pushKV(\"asm\", ScriptToAsmStr(script));\n-    out.pushKV(\"hex\", HexStr(script));\n-\n-    std::vector<std::vector<unsigned char>> solns;\n-    TxoutType type = Solver(script, solns);\n-    out.pushKV(\"type\", GetTxnOutputType(type));\n-\n-    CTxDestination address;\n-    if (include_address && ExtractDestination(script, address) && type != TxoutType::PUBKEY) {\n-        out.pushKV(\"address\", EncodeDestination(address));\n-    }\n+    ScriptPubKeyToUniv(script, out, /* fIncludeHex */ true, /* include_address */ false);\n }\n \n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex)\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_address)\n {\n     CTxDestination address;\n \n@@ -165,9 +155,9 @@ void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fInclud\n         out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n     std::vector<std::vector<unsigned char>> solns;\n-    TxoutType type = Solver(scriptPubKey, solns);\n+    const TxoutType type{Solver(scriptPubKey, solns)};\n \n-    if (ExtractDestination(scriptPubKey, address) && type != TxoutType::PUBKEY) {\n+    if (include_address && ExtractDestination(scriptPubKey, address) && type != TxoutType::PUBKEY) {\n         out.pushKV(\"address\", EncodeDestination(address));\n     }\n     out.pushKV(\"type\", GetTxnOutputType(type));"
      },
      {
        "sha": "7d21c4f59b57af6a78f636c8b15c8f50d1a0c52c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "patch": "@@ -1161,7 +1161,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptToUniv(txout.scriptPubKey, o, true);\n+            ScriptPubKeyToUniv(txout.scriptPubKey, o, /* fIncludeHex */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));\n@@ -1208,12 +1208,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!input.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.redeem_script, r, false);\n+            ScriptToUniv(input.redeem_script, r);\n             in.pushKV(\"redeem_script\", r);\n         }\n         if (!input.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(input.witness_script, r, false);\n+            ScriptToUniv(input.witness_script, r);\n             in.pushKV(\"witness_script\", r);\n         }\n \n@@ -1268,12 +1268,12 @@ static RPCHelpMan decodepsbt()\n         // Redeem script and witness script\n         if (!output.redeem_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.redeem_script, r, false);\n+            ScriptToUniv(output.redeem_script, r);\n             out.pushKV(\"redeem_script\", r);\n         }\n         if (!output.witness_script.empty()) {\n             UniValue r(UniValue::VOBJ);\n-            ScriptToUniv(output.witness_script, r, false);\n+            ScriptToUniv(output.witness_script, r);\n             out.pushKV(\"witness_script\", r);\n         }\n "
      },
      {
        "sha": "74c576322a92888e1ecec39bfc8f309326aad0ec",
        "filename": "src/test/fuzz/script.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/test/fuzz/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d64deac7b823a0eba97ab3a3686054eefe330d3c/src/test/fuzz/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/script.cpp?ref=d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "patch": "@@ -113,9 +113,7 @@ FUZZ_TARGET_INIT(script, initialize_script)\n     UniValue o2(UniValue::VOBJ);\n     ScriptPubKeyToUniv(script, o2, false);\n     UniValue o3(UniValue::VOBJ);\n-    ScriptToUniv(script, o3, true);\n-    UniValue o4(UniValue::VOBJ);\n-    ScriptToUniv(script, o4, false);\n+    ScriptToUniv(script, o3);\n \n     {\n         const std::vector<uint8_t> bytes = ConsumeRandomLengthByteVector(fuzzed_data_provider);"
      }
    ]
  },
  {
    "sha": "2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
    "node_id": "C_kwDOABII59oAKDJiMWZkYzJjNmNlMWQwYjBlNTFhM2YxMDdlMjM0NDNjMTQyZDU3YWY",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-05-10T19:23:39Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-24T19:22:53Z"
      },
      "message": "refactor: minor styling, prefer snake case and same line if",
      "tree": {
        "sha": "145af33ce09130fcc19eaf49a43047430fb12321",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/145af33ce09130fcc19eaf49a43047430fb12321"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmFOJY0ACgkQc3/VzfHR\nRrlwphAAqHStgVSiyoy8fh4YEdf42mI/caHF9GfMz0oHA95wQuOK6AH2biiGSlZY\nBZ7dp8vRGpRXfgrFf0IrqMesOGCAdeekuu5bKiGiuK9F8wuldnlRLv2ic5cAqV2E\nxbYslgrDDMoANNrixM4K7E+ptUkDOqjdE91Ocv87Oxie6I84/ANCDAi97CKeVHsu\nZZRAWnVDGWfrU9aFa/yBUnXoLy8ue2FaIsihXrIkGzib1aQV1wqQ9ADmIiSDu9AQ\nXZzNEHBxbNWxLrt8wxv1tNhZTcE6pWtJ3H98MMWm1lOm8yh7/4K/5kcenEDPi2n6\nMhM6GLgeh2O80/BGR3NMbm52wTfu1g62QEmRfyHwGPgkNO9mLx2yCclkc1A4MeSI\niaqruZ6krnWGUE2HwdXv8+b3q7QWLmYG6QaXPpDXiewucVzM0+NImLV4KZ/tc0lr\nWfy2d17m0ZL58zx8oa6/NiU+ziG/PoONNtmqWm808G/IIizWuecmSBxwGNqNhzMB\nwWPyX7SIdOE0kibP5yIT5q4Z7+Dw01RIo3FjLO1RHgzYseqQVRG2sC0yIR9OHAE7\nfzyhtdfrlaA+zVgy7cqwlf9KluOVUEGupnSB+ZunpDWhGBJpnjMwWSV+oBVVz+wQ\n5CyNl42q1xN6KOnxQGsmkjUVchsE8KgriGUV52DKqWpwYZR3Xik=\n=HV0I\n-----END PGP SIGNATURE-----",
        "payload": "tree 145af33ce09130fcc19eaf49a43047430fb12321\nparent d64deac7b823a0eba97ab3a3686054eefe330d3c\nauthor Michael Dietz <michael.dietz@waya.ai> 1620674619 -0400\ncommitter Michael Dietz <michael.dietz@waya.ai> 1632511373 -0500\n\nrefactor: minor styling, prefer snake case and same line if\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d64deac7b823a0eba97ab3a3686054eefe330d3c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d64deac7b823a0eba97ab3a3686054eefe330d3c"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f00f1552490e4c5b3a4a90d527dc4470f2bb4c6b",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
        "patch": "@@ -44,7 +44,7 @@ UniValue ValueFromAmount(const CAmount amount);\n std::string FormatScript(const CScript& script);\n std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n std::string SighashToStr(unsigned char sighash_type);\n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_address = true);\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address = true);\n void ScriptToUniv(const CScript& script, UniValue& out);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry, bool include_hex = true, int serialize_flags = 0, const CTxUndo* txundo = nullptr);\n "
      },
      {
        "sha": "d92c970cb6cb7289277ac00c27f8be5e3b21a233",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
        "patch": "@@ -143,16 +143,15 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n \n void ScriptToUniv(const CScript& script, UniValue& out)\n {\n-    ScriptPubKeyToUniv(script, out, /* fIncludeHex */ true, /* include_address */ false);\n+    ScriptPubKeyToUniv(script, out, /* include_hex */ true, /* include_address */ false);\n }\n \n-void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex, bool include_address)\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool include_hex, bool include_address)\n {\n     CTxDestination address;\n \n     out.pushKV(\"asm\", ScriptToAsmStr(scriptPubKey));\n-    if (fIncludeHex)\n-        out.pushKV(\"hex\", HexStr(scriptPubKey));\n+    if (include_hex) out.pushKV(\"hex\", HexStr(scriptPubKey));\n \n     std::vector<std::vector<unsigned char>> solns;\n     const TxoutType type{Solver(scriptPubKey, solns)};"
      },
      {
        "sha": "b32bc670b6f919020b261d960a7cc55c699cc7be",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
        "patch": "@@ -572,7 +572,7 @@ static RPCHelpMan decodescript()\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptPubKeyToUniv(script, r, /* fIncludeHex */ false);\n+    ScriptPubKeyToUniv(script, r, /* include_hex */ false);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -606,7 +606,7 @@ static RPCHelpMan decodescript()\n                 // Newer segwit program versions should be considered when then become available.\n                 segwitScr = GetScriptForDestination(WitnessV0ScriptHash(script));\n             }\n-            ScriptPubKeyToUniv(segwitScr, sr, /* fIncludeHex */ true);\n+            ScriptPubKeyToUniv(segwitScr, sr, /* include_hex */ true);\n             sr.pushKV(\"p2sh-segwit\", EncodeDestination(ScriptHash(segwitScr)));\n             r.pushKV(\"segwit\", sr);\n         }\n@@ -1161,7 +1161,7 @@ static RPCHelpMan decodepsbt()\n             txout = input.witness_utxo;\n \n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToUniv(txout.scriptPubKey, o, /* fIncludeHex */ true);\n+            ScriptPubKeyToUniv(txout.scriptPubKey, o, /* include_hex */ true);\n \n             UniValue out(UniValue::VOBJ);\n             out.pushKV(\"amount\", ValueFromAmount(txout.nValue));"
      }
    ]
  },
  {
    "sha": "43cd6b8af9d613ca033800c5cd8524c3f77e13ec",
    "node_id": "C_kwDOABII59oAKDQzY2Q2YjhhZjlkNjEzY2EwMzM4MDBjNWNkODUyNGMzZjc3ZTEzZWM",
    "commit": {
      "author": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-08-25T13:06:10Z"
      },
      "committer": {
        "name": "Michael Dietz",
        "email": "michael.dietz@waya.ai",
        "date": "2021-09-24T19:22:53Z"
      },
      "message": "doc: add release notes for removal of the -deprecatedrpc=addresses flag",
      "tree": {
        "sha": "a1f5ac65db3b57e053e3c5d76efd03c4dbbc3e32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a1f5ac65db3b57e053e3c5d76efd03c4dbbc3e32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43cd6b8af9d613ca033800c5cd8524c3f77e13ec",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEENKwpEUV32QrrIOeYc3/VzfHRRrkFAmFOJY0ACgkQc3/VzfHR\nRrl/+g//fMzomCnLyYO3MWU0p8hyP3o2655Hn3IvFt2GTWrOl0TFjux2g6Vn61Zs\n7B12PZHFoJToFDDY0ovsi4ijzJRJssO2tok5PVFn2wVucGwDtvAisTwHkdADKE3V\n4+UabzFZKSby1tFaw7OhKpR6JhmpshlAfeG2lsU88FEQK4HChtLHYdv48vdNa+fi\no7q+9JujPVicqcsYxg69KezYZiD4AX80KjNgZcMRUriExUPyTwjqFcH6PepqveNm\nciAmcWwHqtb+fLrrdFu4WjKaQy2iTK0ebYi23QvfXHEi+Q0kx1HJzQO9FraichEV\nVkj6LYyPJNrAJdG0Gjjl+HfHfN8lX+UKu4yS7XEX2BqLFCM+DiLalfrEmi3JduwF\nsULJsejQWf8Wy6iKvOjWgphVCr3wErHyj9ETztw1g6uzK0r6//iJSiPlZ7Y1ALbq\ngdTB6R5xlhtFSFoh0ky88Fxej4zg4eUYJlF7Szi2bWSvWsnRo5VdyuPpRakAW1lW\n9cqr+sD8MNVHLdvTcqCyD+zrLFEQHRdnLlxQJcOHBxkc4QeAAUMGA0NGlMZAtLPq\nOT2b25nb9AaEkdIXQNfpwSm0dtAF4bb572x/54mTLYf1zMK3nk0zyEXl5u1REHbt\nqZxo7bd6EywnAkwYDJzgK8f3+xu2nFjKPQCJ8q6iQc6p0z6biYI=\n=FDb3\n-----END PGP SIGNATURE-----",
        "payload": "tree a1f5ac65db3b57e053e3c5d76efd03c4dbbc3e32\nparent 2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af\nauthor Michael Dietz <michael.dietz@waya.ai> 1629896770 -0500\ncommitter Michael Dietz <michael.dietz@waya.ai> 1632511373 -0500\n\ndoc: add release notes for removal of the -deprecatedrpc=addresses flag\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43cd6b8af9d613ca033800c5cd8524c3f77e13ec",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43cd6b8af9d613ca033800c5cd8524c3f77e13ec",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43cd6b8af9d613ca033800c5cd8524c3f77e13ec/comments",
    "author": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mjdietzx",
      "id": 7217256,
      "node_id": "MDQ6VXNlcjcyMTcyNTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7217256?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mjdietzx",
      "html_url": "https://github.com/mjdietzx",
      "followers_url": "https://api.github.com/users/mjdietzx/followers",
      "following_url": "https://api.github.com/users/mjdietzx/following{/other_user}",
      "gists_url": "https://api.github.com/users/mjdietzx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mjdietzx/subscriptions",
      "organizations_url": "https://api.github.com/users/mjdietzx/orgs",
      "repos_url": "https://api.github.com/users/mjdietzx/repos",
      "events_url": "https://api.github.com/users/mjdietzx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mjdietzx/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b1fdc2c6ce1d0b0e51a3f107e23443c142d57af"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e8270231d4e4a304ad7a1d8f19321fee1d426254",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43cd6b8af9d613ca033800c5cd8524c3f77e13ec/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43cd6b8af9d613ca033800c5cd8524c3f77e13ec/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=43cd6b8af9d613ca033800c5cd8524c3f77e13ec",
        "patch": "@@ -64,6 +64,12 @@ P2P and network changes\n Updated RPCs\n ------------\n \n+- The `-deprecatedrpc=addresses` configuration option has been removed.  RPCs\n+  `gettxout`, `getrawtransaction`, `decoderawtransaction`, `decodescript`,\n+  `gettransaction verbose=true` and REST endpoints `/rest/tx`, `/rest/getutxos`,\n+  `/rest/block` no longer return the `addresses` and `reqSigs` fields, which\n+  were previously deprecated in 22.0. (#22650)\n+\n New RPCs\n --------\n "
      }
    ]
  }
]