DrahtBot,2021-08-07 05:09:51,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23091](https://github.com/bitcoin/bitcoin/pull/23091) (fuzz: fix checks on number of required sigs and keys in multisig ",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-894606266,894606266,
fanquake,2021-08-12 02:24:38,Concept ACK ,https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-897297622,897297622,
theStack,2021-08-13 08:35:59,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-898286788,898286788,
MarcoFalke,2021-08-25 08:51:39,"review ACK 28bd30a73bd4bff1dc44c89ae64a194cc1c526e4 üì∞\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nreview ACK 28bd30a73bd4bff1dc44c89ae64a194cc1c526e4 üì∞\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj6LAv/esiGjhUnjDPkpTWtjOaUHG6aiNtEYHI/5WSG",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-905310720,905310720,
MarcoFalke,2021-08-25 08:55:18,"Oh, in the release notes it should say v22 and bitcoin-tx had no behaviour change at all, so no release notes needed?!",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-905313260,905313260,
mjdietzx,2021-08-25 13:07:50,"Thanks @MarcoFalke, release notes have been corrected",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-905485980,905485980,
MarcoFalke,2021-08-25 14:32:13,"re-ACK 3add69bab36ce8e3d1d7d0664d264e4c163233c2 üöÖ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 3add69bab36ce8e3d1d7d0664d264e4c163233c2 üöÖ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh0XAv9F8CNbuDGfeUPadszE9aTIjsAhaztFE3LJmoJrRq9x9LB",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-905553849,905553849,
mjdietzx,2021-08-25 20:06:11,Thanks for the review @jonatack - I made all your suggestions. I had to edit some commits and force push. I'm hoping this didn't throw a wrench in your review @MarcoFalke . If it did and you know a better way I could've done it please lmk so I can avoid this in the future üò¨,https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-905836461,905836461,
mjdietzx,2021-09-03 02:30:15,"Thanks for the re review @jonatack !\n\n> It may be good to drop 7f7a2d9 ""Inline ScriptToUniv"", i.e. merge the two commits, since ScriptToUniv() is un-inlined right after again in b456004\n\nI squashed these two commits together. And then addressed both of your comments\n",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-912205773,912205773,
jonatack,2021-09-03 13:12:04,"Code review re-ACK 92dc5e954fdb974160198f0c97eff3e7e51c1372 only changes are documentation and squashing two commits to one, checked `git diff b456004 92dc5e9`, re-read the per-commit changes, and rebased to current master/debug build/checked unit+functional tests pass ",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-912528997,912528997,
MarcoFalke,2021-09-07 11:14:36,"NACK 92dc5e954f\n\nNo idea what this commit is trying to achieve. Maybe split this up into another pull? It is dangerous by creating undetectable silent merge conflicts and not to mention it is plain wrong.\n\nreview ACK 073035f5a6fae435b96426273f6d1930fc6a70e5 üõé\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: ",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-914216019,914216019,
mjdietzx,2021-09-08 02:51:04,"@MarcoFalke, I think you're right about not including 92dc5e954fdb974160198f0c97eff3e7e51c1372 in this PR. I removed it and will open a 2nd PR with only that commit so it can be reviewed on its own merits.",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-914862099,914862099,
mjdietzx,2021-09-14 14:21:58,"Rebased.\n\n> I think you can drop one of these statements to make the fuzz test run ~twice as fast.\n\nDone c45b133\n\n",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-919200220,919200220,
mjdietzx,2021-09-14 20:25:07,"I got rid of two commits I thought were slightly unnecessary and would be better off in a followup refactor PR:\nc45b13389a3540a07c0f64f63cb36f538f8e2f1c `fuzz: remove an unuseful TxToUniv invocation to speedup fuzz/transaction.cpp`\na0f2dab816fc9987fb177c02f5d801cf0b8ebbf9 `refactor: named args whenever ScriptToUniv, ScriptPubKeyToUniv, TxToUniv are invoked`\n\nI will be making the changes @M",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-919487198,919487198,
mjdietzx,2021-09-24 19:23:54,Rebased,https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-926868088,926868088,
MarcoFalke,2021-09-25 07:38:29,"re-ACK 43cd6b8af9d613ca033800c5cd8524c3f77e13ec üêâ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nre-ACK 43cd6b8af9d613ca033800c5cd8524c3f77e13ec üêâ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgkNQv/TUjva/T/Sp2WEolHXi+auEURUOvDAqnHI2HYJxTX603Y",https://github.com/bitcoin/bitcoin/pull/22650#issuecomment-927049376,927049376,
jonatack,2021-08-25 13:58:31,"b0770cee942e17f6ed3d4\n```suggestion\n    const TxoutType type{Solver(scriptPubKey, solns)};\n```",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695780857,695780857,src/core_write.cpp
jonatack,2021-08-25 13:59:27,"Named args could be nice wherever this function is invoked\n```suggestion\n        ScriptPubKeyToUniv(txout.scriptPubKey, /* out */ o, /* include_hex */ true);\n```",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695781626,695781626,src/core_write.cpp
jonatack,2021-08-25 14:08:39,"b0770cee942e17f6ed3d4ded wherever this function is called\n```suggestion\n    ScriptPubKeyToUniv(script, /* out */ o1, /* include_hex */ true);\n```",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695790580,695790580,src/test/fuzz/script.cpp
jonatack,2021-08-25 14:11:44,"b0770cee942e17f6ed3d4ded\n```suggestion\n        TxToUniv(*wtx.tx, /* hashBlock */ uint256(), /* entry */ decoded, /* include_hex */ false);\n```",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695793742,695793742,src/wallet/rpcwallet.cpp
jonatack,2021-08-25 14:29:11,6604cdcccd maybe I'm missing something but perhaps merge `ScriptPubKeyToUniv` and `ScriptToUniv` into a single function?,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695810931,695810931,src/core_io.h
jonatack,2021-08-25 14:39:04,"IIUC gettransaction is only affected when verbose=true and some writing suggestions\n```diff\n-- The `-deprecatedrpc=addresses` flag has been removed entirely.\n-  The following RPCs:  `gettxout`, `getrawtransaction`, `decoderawtransaction`,\n-  `decodescript`, `gettransaction`, and REST endpoints: `/rest/tx`, `/rest/getutxos`,\n-  `/rest/block` no longer return the fields: `addresses`, `reqS",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r695820683,695820683,doc/release-notes.md
mjdietzx,2021-08-25 20:02:06,Done a1c97440fd8d02c8e931597f6dac2237346b8330,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r696072582,696072582,src/core_write.cpp
mjdietzx,2021-08-25 20:02:37,Done 0ba1fe416a020395877a09f19f86df5e088b4624,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r696072913,696072913,src/core_write.cpp
mjdietzx,2021-08-25 20:04:41,"I thought about it (and agree it's a good change). However I didn't include it originally because I wanted to be conservative w/ the changes in this PR and thought keeping them as separate functions may have been ""self documenting""\n\nAnyways, I wanted to do this and since you were thinking the same thing I did it in this commit b456004de9ef61716140c9020c572416b46acbff - if we decide we don't wa",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r696074141,696074141,src/core_io.h
mjdietzx,2021-08-25 20:04:59,Done: 8ede37671d1174793841ee70e4f21e3221b5b82a,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r696074368,696074368,doc/release-notes.md
jonatack,2021-09-02 10:27:14,"b0770cee ignore unless you retouch\n```suggestion\n                                        {RPCResult::Type::STR, ""address"", /* optional */ true, ""The Bitcoin address (only if a well-defined address exists)""},\n```\n(""Bitcoin"" seems to be a proper noun here, look at the translations returned by `git grep -ni ""bitcoin address""`)",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r700954804,700954804,src/rpc/rawtransaction.cpp
jonatack,2021-09-02 10:47:58,"0ba1fe4 (only if you retouch) missed one ;) \n```suggestion\n            TxToUniv(*input.non_witness_utxo, /* hashBlock */ uint256(), /* entry */ non_wit, /* include_hex */ false);\n```",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r700968493,700968493,src/rpc/rawtransaction.cpp
mjdietzx,2021-09-03 02:27:24,"I went ahead and made this improvement in all places for this field, which was added in the first PR #20286",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r701541326,701541326,src/rpc/rawtransaction.cpp
mjdietzx,2021-09-03 02:27:41,"Nice catch, done",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r701541435,701541435,src/rpc/rawtransaction.cpp
MarcoFalke,2021-09-07 11:15:14,the named arg is wrong,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r703416998,703416998,src/rpc/rawtransaction.cpp
MarcoFalke,2021-09-09 13:22:42,"I think you can drop one of these statements to make the fuzz test run ~twice as fast.\n\n(In a separate commit, obviously)",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r705326938,705326938,src/test/fuzz/transaction.cpp
MarcoFalke,2021-09-09 13:24:35,"If you keep this commit in this pull, it could make sense to use the `/* arg= */` syntax, so that clang-tidy understands it as well.",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r705328584,705328584,src/wallet/rpcwallet.cpp
MarcoFalke,2021-09-09 13:26:03,as a follow-up it could make sense to de-duplicate the common help text,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r705329925,705329925,src/rpc/rawtransaction.cpp
mjdietzx,2021-09-11 22:40:28,"Good point. I don't see any need to exercise this code path from the fuzz test, which seems to be the only point of invoking `TxToUniv` again w/ `/* hashBlock */ uint256::ONE` (especially if it will run twice as fast)\n\n```c++\nif (!hashBlock.IsNull())\n  entry.pushKV(""blockhash"", hashBlock.GetHex());\n```\n\nSo I'll add a commit removing `TxToUniv(tx, /* hashBlock */ uint256::ONE, u);` as",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r706699849,706699849,src/test/fuzz/transaction.cpp
mjdietzx,2021-09-14 14:19:13,Done in this commit c45b13389a3540a07c0f64f63cb36f538f8e2f1c,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708320268,708320268,src/test/fuzz/transaction.cpp
MarcoFalke,2021-09-14 14:28:34,"a0f2dab816fc9987fb177c02f5d801cf0b8ebbf9: I think this can be done in a follow-up.\n\nIf you decide to do it here, at least use the proper clang-tidy format, so that it can be checked by the clang compiler.\n\nhttps://releases.llvm.org/12.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/bugprone-argument-comment.html\n\n`, /* hashBlock=*/ uint256{}, `",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708329669,708329669,src/bitcoin-tx.cpp
mjdietzx,2021-09-14 14:29:22,Good suggestion. My plan is to do this and squash it into a0f2dab816fc9987fb177c02f5d801cf0b8ebbf9,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708330495,708330495,src/wallet/rpcwallet.cpp
MarcoFalke,2021-09-14 14:29:53,An alternative (to test both code paths) would be to deserialize a bool from the fuzzing input and use `uint256{bool_val}`,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708331040,708331040,src/test/fuzz/transaction.cpp
mjdietzx,2021-09-14 14:31:04,"Agreed this could be a worthwhile cleanup, there are 6 occurrences of this exact string, 5 of which are in the same file `src/rpc/rawtransaction.cpp`\n\nDo you have any suggestion on where this variable belongs or can you point me to any conventions in the code?",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708332208,708332208,src/rpc/rawtransaction.cpp
MarcoFalke,2021-09-14 14:31:33,Can also be done in a follow-up,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708332722,708332722,src/test/fuzz/transaction.cpp
MarcoFalke,2021-09-14 14:33:52,"See:\n\n```cpp\n static const std::vector<RPCResult> TransactionDescriptionString()\n",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708334982,708334982,src/rpc/rawtransaction.cpp
mjdietzx,2021-09-14 20:21:54,"I am moving the commit this relates to into a follow-up, and will do as you suggest there. Resolving this for now",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r708604069,708604069,src/bitcoin-tx.cpp
MarcoFalke,2021-09-24 16:09:05,"This assertion fails:\n\nhttps://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39152\n\nIt might be good to merge this pull request or apply the changes to this fuzz test early.",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r715738479,715738479,src/test/fuzz/script.cpp
mjdietzx,2021-09-24 19:24:51,I'm looking into this now to see why this assertion failed. These tests were added in https://github.com/bitcoin/bitcoin/pull/20772. I'm also curious why we're only seeing this now but haven't had the chance to look into this and know what's going on,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r715854751,715854751,src/test/fuzz/script.cpp
mjdietzx,2021-09-25 00:11:28,"I just went ahead and fixed that assertion as I believe it was a buggy assertion. I didn't want this PR to get rushed bc of this, and figured we may want this for correctness. #23091  -- I realize the PR is kinda pointless, so if its best to close it and this is ready to merge, just lmk",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r715959421,715959421,src/test/fuzz/script.cpp
meshcollider,2021-09-28 01:07:34,"This should really be replaced with `include_address=true/false` checks on `ScriptPubKeyToUniv(script, o4, fIncludeHex, include_address)`",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r717148091,717148091,src/test/fuzz/script.cpp
mjdietzx,2021-09-28 01:19:49,"Good point, this isn't really needed. But because the followup PR #22924 merges `ScriptPubKeyToUniv` and `ScriptToUniv` into a single function it will be getting rid of this anyways. So this will be removed in the followup",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r717152098,717152098,src/test/fuzz/script.cpp
jonatack,2021-09-28 13:28:02,"Style thought only (ignore here), in this case where the conditional is for an action other than, say, a simple guard clause with `return` or `return true/false`, I increasingly add braces instead of one-lining it. The action stands out, and if a line raises while running gdb, it's more isolated. Others may have a different opinion, so just a thought.",https://github.com/bitcoin/bitcoin/pull/22650#discussion_r717576503,717576503,src/core_write.cpp
mjdietzx,2021-09-29 01:26:42,Done in followup https://github.com/bitcoin/bitcoin/pull/22924/files#diff-48fa743e653b0ceebb1e454766c5a2e70981a44503eca6adf24895016db9eb26R149,https://github.com/bitcoin/bitcoin/pull/22650#discussion_r718078803,718078803,src/core_write.cpp
