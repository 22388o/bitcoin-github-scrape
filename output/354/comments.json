[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1447377",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-1447377",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 1447377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDczNzc=",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T13:44:54Z",
    "updated_at": "2011-06-27T13:44:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "This feels like the wrong level of abstraction to me.\n\nIf you want this level of control, then an even lower-level interface seems like the way to go-- something like \"here's a transaction, please sign it and broadcast it if it is valid (return txid if it is a valid transaction, error if not)\".\n\nI also don't like all the duplicated code in CreateTransaction/CreateExactTransaction, it may make bug fixing any problems in send or supporting new transaction types like 3-party escrows harder.\n\nFinally, what is the TxIn syntax?  Just txid?  What happens if you point this at a send-to-self or a receive-many where you own more than one TxOut of a previous transaction?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1447377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448212",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-1448212",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 1448212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDgyMTI=",
    "user": {
      "login": "pasky",
      "id": 18439,
      "node_id": "MDQ6VXNlcjE4NDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pasky",
      "html_url": "https://github.com/pasky",
      "followers_url": "https://api.github.com/users/pasky/followers",
      "following_url": "https://api.github.com/users/pasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/pasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pasky/subscriptions",
      "organizations_url": "https://api.github.com/users/pasky/orgs",
      "repos_url": "https://api.github.com/users/pasky/repos",
      "events_url": "https://api.github.com/users/pasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T15:45:54Z",
    "updated_at": "2011-06-27T15:45:54Z",
    "author_association": "NONE",
    "body": "Thanks for the feedback! I'm not sure about your suggestion of providing a raw transaction. I aim at something that is suitable for automated use, but at the same time users can still realistically use manually. It is not clear what exactly do you mean by \"here's a transaction\" - would you like something like, say:\n\n```\n{ \"in\": [ { \"prev_out\": { \"hash\": \"...\", \"n\": \"...\" } } ], \"out\": [ { \"value\": ..., \"address\": \"...\" } ] }\n```\n\nThere is a couple of questions here:\n- Identify prev_outs by specific n's instead of account-based autoselection (answer to your last question: all txouts claimable by the given account are selected). Maybe this really is the best way to go, but then gettransaction and listtransactions output needs to include an 'n' field too.\n- Switch syntax from two-object form to tx-like form. I don't see the benefit, IMO it just leads to a more baroque syntax.\n\nI'm all for switching to explicit n-form for inputs, but how to integrate this with the account system then? Currently, each transaction has single strFromAccount. Should the user still specify the account and the input amount just gets subtracted from that account's balance and it's the user's responsibility to sort out the account balance?\n\nI agree that the duplicated code is bad. I was a bit shy to do large changes in CreateTransaction(), but I will refactor this part of code and I agree it will make the code better. I just want to agree on the final way to select inputs first.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449728",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-1449728",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 1449728,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDk3Mjg=",
    "user": {
      "login": "pasky",
      "id": 18439,
      "node_id": "MDQ6VXNlcjE4NDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pasky",
      "html_url": "https://github.com/pasky",
      "followers_url": "https://api.github.com/users/pasky/followers",
      "following_url": "https://api.github.com/users/pasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/pasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pasky/subscriptions",
      "organizations_url": "https://api.github.com/users/pasky/orgs",
      "repos_url": "https://api.github.com/users/pasky/repos",
      "events_url": "https://api.github.com/users/pasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T19:14:24Z",
    "updated_at": "2011-06-27T19:14:24Z",
    "author_association": "NONE",
    "body": "By the way, thinking things through more, now I think that sendtxfee/paytxfee should not be imposed on these transactions (our goal is still creating transaction only based on pubkeys stored in our wallet, but no extra client automagic), but creating unrelayable transactions still should not be allowed. Does that make sense? In line with that, AIUI I should check against nMinFee but not nPayFee?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1449728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450672",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-1450672",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 1450672,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTA2NzI=",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T21:43:29Z",
    "updated_at": "2011-06-27T21:43:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "When I say \"here's a transaction, please sign it (if you need to) and send it\" I'm imagining you hand it the serialized hex version of a transaction (with all-zeros placeholders for the ECDSA signatures).  Really extremely low-level.\n\nMy thinking is that a very-low-level routine like that might be the path to all sorts of interesting functionality, including things like escrow transactions where some of the transaction signing is done outside the p2p network.\n\nBut I haven't thought about this terribly hard, and, frankly, the high priorities right now are NOT new features like this but scalability and security.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-1451044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 1451044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTEwNDQ=",
    "user": {
      "login": "pasky",
      "id": 18439,
      "node_id": "MDQ6VXNlcjE4NDM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/18439?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pasky",
      "html_url": "https://github.com/pasky",
      "followers_url": "https://api.github.com/users/pasky/followers",
      "following_url": "https://api.github.com/users/pasky/following{/other_user}",
      "gists_url": "https://api.github.com/users/pasky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pasky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pasky/subscriptions",
      "organizations_url": "https://api.github.com/users/pasky/orgs",
      "repos_url": "https://api.github.com/users/pasky/repos",
      "events_url": "https://api.github.com/users/pasky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pasky/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-06-27T22:50:38Z",
    "updated_at": "2011-06-27T22:50:38Z",
    "author_association": "NONE",
    "body": "Ok, I agree that such a command would open other interesting\npossibilities, but that is already something completely different from\nwhat I have in mind. You would not be able to use the wallet at all\nanymore and I am just personally not interested in figuring out how to\nexternally fetch a key from wallet while bitcoind is running and\nre-implementing all the cryptography and script execution. I want to\nstill make use of all these bitcoind facilities, just specify precise\ncoin flow.\n\nI will do the modifications I outlined before and re-submit, you guys\nwill see if you have time to review and merge the patch before you get\nyour high priorities done. If not, I will be a bit sad but try to\nmaintain my changes up-to-date against current code until they are\nmerged.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1451044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2299600",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/354#issuecomment-2299600",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/354",
    "id": 2299600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyOTk2MDA=",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2011-10-05T15:58:05Z",
    "updated_at": "2011-10-05T15:58:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closing; specifying precise coin flow just isn't a high priority. Also, new RPC commands should be discussed on the mailing list or forum.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2299600/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]