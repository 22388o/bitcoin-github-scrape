[
  {
    "sha": "e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTgyZjBiNjgyOWFiZDE4ZjhkNmMyZGZhNDkwZThmMjBhYzk0ZGZk",
    "commit": {
      "author": {
        "name": "andrewtoth",
        "email": "andrewstoth@gmail.com",
        "date": "2018-12-01T18:00:00Z"
      },
      "committer": {
        "name": "andrewtoth",
        "email": "andrewstoth@gmail.com",
        "date": "2018-12-01T18:00:00Z"
      },
      "message": "Add all category options to wallet rpc help",
      "tree": {
        "sha": "2b11e47ae1f0a34116832db22d276afea06f2e4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b11e47ae1f0a34116832db22d276afea06f2e4b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ed12fd83ca7999a896350197533de5e9202bc2fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed12fd83ca7999a896350197533de5e9202bc2fe",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ed12fd83ca7999a896350197533de5e9202bc2fe"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 27,
      "deletions": 12
    },
    "files": [
      {
        "sha": "c9e1faddee189749f6bbebff499f3c800f6ced44",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 12,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
        "patch": "@@ -1458,9 +1458,14 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"[\\n\"\n             \"  {\\n\"\n             \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n-            \"    \\\"category\\\":\\\"send|receive\\\", (string) The transaction category.\\n\"\n+            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n+            \"                \\\"send\\\"                  Transactions sent.\\n\"\n+            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n+            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n+            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n+            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n             \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n-            \"                                        for the 'receive' category,\\n\"\n+            \"                                        for all other categories\\n\"\n             \"    \\\"label\\\": \\\"label\\\",       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n             \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n@@ -1592,20 +1597,25 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"transactions\\\": [\\n\"\n-            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction. Not present for move transactions (category = move).\\n\"\n-            \"    \\\"category\\\":\\\"send|receive\\\",     (string) The transaction category. 'send' has negative amounts, 'receive' has positive amounts.\\n\"\n-            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and for the 'move' category for moves \\n\"\n-            \"                                          outbound. It is positive for the 'receive' category, and for the 'move' category for inbound funds.\\n\"\n+            \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n+            \"    \\\"category\\\":               (string) The transaction category.\\n\"\n+            \"                \\\"send\\\"                  Transactions sent.\\n\"\n+            \"                \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n+            \"                \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n+            \"                \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n+            \"                \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n+            \"    \\\"amount\\\": x.xxx,          (numeric) The amount in \" + CURRENCY_UNIT + \". This is negative for the 'send' category, and is positive\\n\"\n+            \"                                         for all other categories\\n\"\n             \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n             \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the 'send' category of transactions.\\n\"\n-            \"    \\\"confirmations\\\": n,       (numeric) The number of confirmations for the transaction. Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"confirmations\\\": n,       (numeric) The number of confirmations for the transaction.\\n\"\n             \"                                          When it's < 0, it means the transaction conflicted that many blocks ago.\\n\"\n-            \"    \\\"blockhash\\\": \\\"hashvalue\\\",     (string) The block hash containing the transaction. Available for 'send' and 'receive' category of transactions.\\n\"\n-            \"    \\\"blockindex\\\": n,          (numeric) The index of the transaction in the block that includes it. Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"blockhash\\\": \\\"hashvalue\\\",     (string) The block hash containing the transaction.\\n\"\n+            \"    \\\"blockindex\\\": n,          (numeric) The index of the transaction in the block that includes it.\\n\"\n             \"    \\\"blocktime\\\": xxx,         (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id. Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id.\\n\"\n             \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n-            \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT). Available for 'send' and 'receive' category of transactions.\\n\"\n+            \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT).\\n\"\n             \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n             \"                                                   may be unknown for unconfirmed transactions not in the mempool\\n\"\n             \"    \\\"abandoned\\\": xxx,         (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions.\\n\"\n@@ -1746,7 +1756,12 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n             \"  \\\"details\\\" : [\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\" : \\\"address\\\",          (string) The bitcoin address involved in the transaction\\n\"\n-            \"      \\\"category\\\" : \\\"send|receive\\\",    (string) The category, either 'send' or 'receive'\\n\"\n+            \"      \\\"category\\\" :                      (string) The transaction category.\\n\"\n+            \"                   \\\"send\\\"                  Transactions sent.\\n\"\n+            \"                   \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n+            \"                   \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n+            \"                   \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n+            \"                   \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n             \"      \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"      \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n             \"      \\\"vout\\\" : n,                       (numeric) the vout value\\n\""
      }
    ]
  },
  {
    "sha": "f3f6dde56ead45072864123ed0a2bb04ec584b65",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmM2Y2ZGRlNTZlYWQ0NTA3Mjg2NDEyM2VkMGEyYmIwNGVjNTg0YjY1",
    "commit": {
      "author": {
        "name": "andrewtoth",
        "email": "andrewstoth@gmail.com",
        "date": "2018-12-01T18:00:38Z"
      },
      "committer": {
        "name": "andrewtoth",
        "email": "andrewstoth@gmail.com",
        "date": "2018-12-01T18:00:38Z"
      },
      "message": "Test coinbase category in wallet rpcs",
      "tree": {
        "sha": "bd205426a215d0bca3f4c07743efd702c2019fe4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd205426a215d0bca3f4c07743efd702c2019fe4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f3f6dde56ead45072864123ed0a2bb04ec584b65",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f6dde56ead45072864123ed0a2bb04ec584b65",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f3f6dde56ead45072864123ed0a2bb04ec584b65",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f3f6dde56ead45072864123ed0a2bb04ec584b65/comments",
    "author": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "andrewtoth",
      "id": 237213,
      "node_id": "MDQ6VXNlcjIzNzIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/237213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewtoth",
      "html_url": "https://github.com/andrewtoth",
      "followers_url": "https://api.github.com/users/andrewtoth/followers",
      "following_url": "https://api.github.com/users/andrewtoth/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewtoth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewtoth/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewtoth/orgs",
      "repos_url": "https://api.github.com/users/andrewtoth/repos",
      "events_url": "https://api.github.com/users/andrewtoth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewtoth/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e982f0b6829abd18f8d6c2dfa490e8f20ac94dfd"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 60,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2abba9c3f967ac4b23f9628e974348071bbccadb",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f6dde56ead45072864123ed0a2bb04ec584b65/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f6dde56ead45072864123ed0a2bb04ec584b65/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=f3f6dde56ead45072864123ed0a2bb04ec584b65",
        "patch": "@@ -176,6 +176,7 @@\n     'rpc_getblockstats.py',\n     'p2p_fingerprint.py',\n     'feature_uacomment.py',\n+    'wallet_coinbase_category.py',\n     'feature_filelock.py',\n     'p2p_unrequested_blocks.py',\n     'feature_includeconf.py',"
      },
      {
        "sha": "7aa8b44ebd5d5c20502528485628f28684b0d26d",
        "filename": "test/functional/wallet_coinbase_category.py",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f3f6dde56ead45072864123ed0a2bb04ec584b65/test/functional/wallet_coinbase_category.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f3f6dde56ead45072864123ed0a2bb04ec584b65/test/functional/wallet_coinbase_category.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_coinbase_category.py?ref=f3f6dde56ead45072864123ed0a2bb04ec584b65",
        "patch": "@@ -0,0 +1,59 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2018 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test coinbase transactions return the correct categories.\n+\n+Tests listtransactions, listsinceblock, and gettransaction.\n+\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_array_result\n+)\n+\n+class CoinbaseCategoryTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def assert_category(self, category, address, txid, skip):\n+        assert_array_result(self.nodes[0].listtransactions(skip=skip),\n+                            {\"address\": address},\n+                            {\"category\": category})\n+        assert_array_result(self.nodes[0].listsinceblock()[\"transactions\"],\n+                            {\"address\": address},\n+                            {\"category\": category})\n+        assert_array_result(self.nodes[0].gettransaction(txid)[\"details\"],\n+                            {\"address\": address},\n+                            {\"category\": category})\n+\n+    def run_test(self):\n+        # Generate one block to an address\n+        address = self.nodes[0].getnewaddress()\n+        self.nodes[0].generatetoaddress(1, address)\n+        hash = self.nodes[0].getbestblockhash()\n+        txid = self.nodes[0].getblock(hash)[\"tx\"][0]\n+\n+        # Coinbase transaction is immature after 1 confirmation\n+        self.assert_category(\"immature\", address, txid, 0)\n+\n+        # Mine another 99 blocks on top\n+        self.nodes[0].generate(99)\n+        # Coinbase transaction is still immature after 100 confirmations\n+        self.assert_category(\"immature\", address, txid, 99)\n+\n+        # Mine one more block\n+        self.nodes[0].generate(1)\n+        # Coinbase transaction is now matured, so category is \"generate\"\n+        self.assert_category(\"generate\", address, txid, 100)\n+\n+        # Orphan block that paid to address\n+        self.nodes[0].invalidateblock(hash)\n+        # Coinbase transaction is now orphaned\n+        self.assert_category(\"orphan\", address, txid, 100)\n+\n+if __name__ == '__main__':\n+    CoinbaseCategoryTest().main()"
      }
    ]
  }
]