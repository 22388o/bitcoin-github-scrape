[
  {
    "sha": "402ee706d8afab3d8d883cd15a660740fcebeb55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDJlZTcwNmQ4YWZhYjNkOGQ4ODNjZDE1YTY2MDc0MGZjZWJlYjU1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-11T09:51:49Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-11T09:51:49Z"
      },
      "message": "refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE const",
      "tree": {
        "sha": "05bd45c24714c86d71effc40807e6d4840471342",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05bd45c24714c86d71effc40807e6d4840471342"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/402ee706d8afab3d8d883cd15a660740fcebeb55",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3JLzUACgkQQQEIES5+\nqB+0rxAAri3y4FK6RUE/lmqfxBhvgkc3Y0tK6jWzkO+2uCO2riGgYJWVxeX7QZUB\nayJ6f2EIl6KMDCkyMFJqzir0H1xYh7aFpHpCDPGysM3COinYUSkmRm3+T7ezh86D\nO3gnWq4f2lWvRJ08t9uUpf83samCZRuTnxzLeA1w2OFe9tqo5l6dMCKRYttODLI5\nT2M4SwT820o1AOEOo6LleaTEMdG+tYZ43P/ONwiNNTOOrBbJUOqBeke8eddxCN9m\nz16Fi2nP8zNdotyrdk+L5RBtNNTcrGQSQeVRlpAFiUltDNvjqSKDpG6Nme8/ghJr\nDHgG59qenaf/UU79e9ExEXTRMcH5Sco+V+O5h3CjEhn+PGBtjHKrueJEr1On05Gp\nz+0Gb+ei7X/ck5M+ydWkhzNBvfEzZIFoxFAPiAa0+W0aXXWA4mFNiFfeFm9eKcQ5\noeD75wzENd6IKhsUQT8Y9GIluyM7kPd3d+UyDSWkolGJuHsGUO/1BjVhzw9s8qlY\nAfjuWctEF9kA/lBRajiRmqjYavhVxdcEvjv6r+YszamIS0Cm8JJ1/XASR5Wc6C2K\nwYUveg8FWjop6y7bja2RysoxqxFuT+6SliW2gjgKL5aGSqbBVocOLP+7wWr/5mHr\n7eHCstD7iM/WWlOUspLRO88Tw57GNyyh92Lon7Icnk4J8arBdc0=\n=TWUe\n-----END PGP SIGNATURE-----",
        "payload": "tree 05bd45c24714c86d71effc40807e6d4840471342\nparent a6f6333ba253cda83221ee529810cacf930e413f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573465909 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573465909 +0200\n\nrefactor: Use proper MAX_SCRIPT_ELEMENT_SIZE const\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/402ee706d8afab3d8d883cd15a660740fcebeb55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/402ee706d8afab3d8d883cd15a660740fcebeb55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/402ee706d8afab3d8d883cd15a660740fcebeb55/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f6333ba253cda83221ee529810cacf930e413f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f6333ba253cda83221ee529810cacf930e413f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f6333ba253cda83221ee529810cacf930e413f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "32b388b7fa16f3c0c4be1348dc39990959cbb9f1",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/402ee706d8afab3d8d883cd15a660740fcebeb55/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/402ee706d8afab3d8d883cd15a660740fcebeb55/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=402ee706d8afab3d8d883cd15a660740fcebeb55",
        "patch": "@@ -815,8 +815,8 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n             }\n         }\n         if (ctx == ParseScriptContext::P2SH) {\n-            if (script_size + 3 > 520) {\n-                error = strprintf(\"P2SH script is too large, %d bytes is larger than 520 bytes\", script_size + 3);\n+            if (script_size + 3 > MAX_SCRIPT_ELEMENT_SIZE) {\n+                error = strprintf(\"P2SH script is too large, %d bytes is larger than %d bytes\", script_size + 3, MAX_SCRIPT_ELEMENT_SIZE);\n                 return nullptr;\n             }\n         }"
      }
    ]
  },
  {
    "sha": "cb9d830a00995ee60e71780c04f6193efd02c511",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjlkODMwYTAwOTk1ZWU2MGU3MTc4MGMwNGY2MTkzZWZkMDJjNTEx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-11T10:04:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-11T10:04:48Z"
      },
      "message": "test: Use proper MAX_SCRIPT_ELEMENT_SIZE",
      "tree": {
        "sha": "0e170560d14ce926fd628026fe98005207c7316a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0e170560d14ce926fd628026fe98005207c7316a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb9d830a00995ee60e71780c04f6193efd02c511",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3JMkAACgkQQQEIES5+\nqB9KshAAkE07GXjgFFYHPgIQzkrHrVl5WclGm09vz1fdrITUleHtvjunmyEt2BqV\n7jQyJJF/mcqPyDLzrQs/8PmdgZVGR11aiFoyM61ZwdTqD+IpvFWGF+hLLJHvgrom\nA4rWnvYmtUjdEChGtLrZRpxRCq08pDaPtp2df2BuzAmpOenq2idADNatSX7YYQz5\nRIAiBRH4lCMbQPVJZ4rXUqtWGK7yUbrAiCjq+J0vJ+r/bOhDhs7oo4z1kApj6yJm\nz4W2D9syR2IeHJaVH7+S0PYQxpde/VnnBL85Mbx6PqbhvnnSVsjl2Acbn3rFNIUJ\n7IHl70ocRMpAgb+kTSZPoIfrbVmj1iVf8QdSiYwJr26y0TVsEKBwW3D8eQqobDQx\n7nCwkotdwI/iVyhMIXQDyOdSEd0udh43DGDhZ0TVuOob8ivhldFdFWJ6CuH49Bns\nknYY55wa6+QrIO/DsVYjA6uPBOp/fhtxcXeeCwiofZDgUIYvec2YGZrfEAZ8QLeR\n7k3l+VzMaXGB8eFevxOlwHinXG0aVZJJ1ZX+3PnIJPyDo/D6W0EEJrA8vVeVMUA/\nNNoQaRubgwfRFaWQq01SJjHLDcUPhF4o/5QRUhXbBFL553HAOtaU0I8pt+zBCsX+\nlwPswLEP9nXjzqQVkg/ro3s4qTSMhZ5ubM9YVLACLb6+h23C204=\n=HkYR\n-----END PGP SIGNATURE-----",
        "payload": "tree 0e170560d14ce926fd628026fe98005207c7316a\nparent 402ee706d8afab3d8d883cd15a660740fcebeb55\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573466688 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573466688 +0200\n\ntest: Use proper MAX_SCRIPT_ELEMENT_SIZE\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb9d830a00995ee60e71780c04f6193efd02c511",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb9d830a00995ee60e71780c04f6193efd02c511",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb9d830a00995ee60e71780c04f6193efd02c511/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "402ee706d8afab3d8d883cd15a660740fcebeb55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/402ee706d8afab3d8d883cd15a660740fcebeb55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/402ee706d8afab3d8d883cd15a660740fcebeb55"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "fdb70097eea6744e3c02dba2fd186dd008cd79b7",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb9d830a00995ee60e71780c04f6193efd02c511/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb9d830a00995ee60e71780c04f6193efd02c511/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=cb9d830a00995ee60e71780c04f6193efd02c511",
        "patch": "@@ -1116,7 +1116,7 @@ def test_max_witness_program_length(self):\n         MAX_PROGRAM_LENGTH = 10000\n \n         # This program is 19 max pushes (9937 bytes), then 64 more opcode-bytes.\n-        long_witness_program = CScript([b'a' * 520] * 19 + [OP_DROP] * 63 + [OP_TRUE])\n+        long_witness_program = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 63 + [OP_TRUE])\n         assert len(long_witness_program) == MAX_PROGRAM_LENGTH + 1\n         long_witness_hash = sha256(long_witness_program)\n         long_script_pubkey = CScript([OP_0, long_witness_hash])\n@@ -1140,7 +1140,7 @@ def test_max_witness_program_length(self):\n         test_witness_block(self.nodes[0], self.test_node, block, accepted=False)\n \n         # Try again with one less byte in the witness program\n-        witness_program = CScript([b'a' * 520] * 19 + [OP_DROP] * 62 + [OP_TRUE])\n+        witness_program = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 62 + [OP_TRUE])\n         assert len(witness_program) == MAX_PROGRAM_LENGTH\n         witness_hash = sha256(witness_program)\n         script_pubkey = CScript([OP_0, witness_hash])"
      }
    ]
  },
  {
    "sha": "eb880f092b4154cf66fe96fc42ffdeff309e3975",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjg4MGYwOTJiNDE1NGNmNjZmZTk2ZmM0MmZmZGVmZjMwOWUzOTc1",
    "commit": {
      "author": {
        "name": "ianliu",
        "email": "i@yiyangliu.me",
        "date": "2019-11-11T16:56:05Z"
      },
      "committer": {
        "name": "ianliu",
        "email": "i@yiyangliu.me",
        "date": "2019-11-11T16:56:05Z"
      },
      "message": "fix Typo: \"merkelRoot\" -> \"merkleRoot\"",
      "tree": {
        "sha": "dec44e32433abb769e534d9f9dc13580cead7871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dec44e32433abb769e534d9f9dc13580cead7871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb880f092b4154cf66fe96fc42ffdeff309e3975",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb880f092b4154cf66fe96fc42ffdeff309e3975",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb880f092b4154cf66fe96fc42ffdeff309e3975",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb880f092b4154cf66fe96fc42ffdeff309e3975/comments",
    "author": {
      "login": "yiyangiliu",
      "id": 37043548,
      "node_id": "MDQ6VXNlcjM3MDQzNTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37043548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yiyangiliu",
      "html_url": "https://github.com/yiyangiliu",
      "followers_url": "https://api.github.com/users/yiyangiliu/followers",
      "following_url": "https://api.github.com/users/yiyangiliu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yiyangiliu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yiyangiliu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yiyangiliu/subscriptions",
      "organizations_url": "https://api.github.com/users/yiyangiliu/orgs",
      "repos_url": "https://api.github.com/users/yiyangiliu/repos",
      "events_url": "https://api.github.com/users/yiyangiliu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yiyangiliu/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "yiyangiliu",
      "id": 37043548,
      "node_id": "MDQ6VXNlcjM3MDQzNTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/37043548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yiyangiliu",
      "html_url": "https://github.com/yiyangiliu",
      "followers_url": "https://api.github.com/users/yiyangiliu/followers",
      "following_url": "https://api.github.com/users/yiyangiliu/following{/other_user}",
      "gists_url": "https://api.github.com/users/yiyangiliu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yiyangiliu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yiyangiliu/subscriptions",
      "organizations_url": "https://api.github.com/users/yiyangiliu/orgs",
      "repos_url": "https://api.github.com/users/yiyangiliu/repos",
      "events_url": "https://api.github.com/users/yiyangiliu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yiyangiliu/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f6333ba253cda83221ee529810cacf930e413f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f6333ba253cda83221ee529810cacf930e413f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f6333ba253cda83221ee529810cacf930e413f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "03dce552fcb1159e7a3227b6c5704b0a4620f831",
        "filename": "src/test/merkle_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb880f092b4154cf66fe96fc42ffdeff309e3975/src/test/merkle_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb880f092b4154cf66fe96fc42ffdeff309e3975/src/test/merkle_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/merkle_tests.cpp?ref=eb880f092b4154cf66fe96fc42ffdeff309e3975",
        "patch": "@@ -345,8 +345,8 @@ BOOST_AUTO_TEST_CASE(merkle_test_BlockWitness)\n     hashes[0].SetNull();\n     hashes[1] = block.vtx[1]->GetHash();\n \n-    uint256 merkelRootofHashes = ComputeMerkleRoot(hashes);\n+    uint256 merkleRootofHashes = ComputeMerkleRoot(hashes);\n \n-    BOOST_CHECK_EQUAL(merkelRootofHashes, blockWitness);\n+    BOOST_CHECK_EQUAL(merkleRootofHashes, blockWitness);\n }\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGZkYjZmYWQxMzIxNjZiMTBmYmViODYxNWUzYzVjNTkxMjA5ZTBi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-11T18:20:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-11T18:20:27Z"
      },
      "message": "Merge #17442: fix Typo: \"merkelRoot\" -> \"merkleRoot\"\n\neb880f092b4154cf66fe96fc42ffdeff309e3975 fix Typo: \"merkelRoot\" -> \"merkleRoot\" (ianliu)\n\nPull request description:\n\n  <!--\n  *** Please remove the following help text before submitting: ***\n\n  Pull requests without a rationale and clear improvement may be closed\n  immediately.\n  -->\n\n  <!--\n  Please provide clear motivation for your patch and explain how it improves\n  Bitcoin Core user experience or Bitcoin Core developer experience\n  significantly:\n\n  * Any test improvements or new tests that improve coverage are always welcome.\n  * All other changes should have accompanying unit tests (see `src/test/`) or\n    functional tests (see `test/`). Contributors should note which tests cover\n    modified code. If no tests exist for a region of modified code, new tests\n    should accompany the change.\n  * Bug fixes are most welcome when they come with steps to reproduce or an\n    explanation of the potential issue as well as reasoning for the way the bug\n    was fixed.\n  * Features are welcome, but might be rejected due to design or scope issues.\n    If a feature is based on a lot of dependencies, contributors should first\n    consider building the system outside of Bitcoin Core, if possible.\n  * Refactoring changes are only accepted if they are required for a feature or\n    bug fix or otherwise improve developer experience significantly. For example,\n    most \"code style\" refactoring changes require a thorough explanation why they\n    are useful, what downsides they have and why they *significantly* improve\n    developer experience or avoid serious programming bugs. Note that code style\n    is often a subjective matter. Unless they are explicitly mentioned to be\n    preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n    changes are usually rejected.\n  -->\n\n  <!--\n  Bitcoin Core has a thorough review process and even the most trivial change\n  needs to pass a lot of eyes and requires non-zero or even substantial time\n  effort to review. There is a huge lack of active reviewers on the project, so\n  patches often sit for a long time.\n  -->\n\nACKs for top commit:\n  practicalswift:\n    ACK eb880f092b4154cf66fe96fc42ffdeff309e3975 but please change from `merkleRootofHashes` to `merkleRootOfHashes`\n\nTree-SHA512: ada9edceee19da5678bf35e1258163e7102fe176dc5cf40acaa1468fa8b2801494f8bf65d5359dcd0054fbc22f07fdc98d6208cfdb54dd9171fd45c89d71e098",
      "tree": {
        "sha": "dec44e32433abb769e534d9f9dc13580cead7871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dec44e32433abb769e534d9f9dc13580cead7871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3JpmwACgkQ0upIUOdS\niyX27g//TkvFHTqbBrebsPtAebe6JxkOea9j41P5HXfTV6p75cHoRv3Cl/oDJvOj\nL2d7pXwTS2n8nfs4qcU0GFSsBWRQlPnz35OAj7CEPHlom4hiMPoMKglIHaE60iL/\nW2nbDg36ROJHs9j9tsGr9jeP4qtgDBq58z0Iv1dKOj+bIVB0p9gVVuI73QEhpV/Q\nCqVtPA4UcNKWFUy73d9aqXIpfWS42N7gshu9Vb2TwAksgio0mH3O6oSCIYhv9hG4\nqDzdhes7CtGnegJEHNRWAuiR3uG7ZirLYSFCreDqvnYNkQxwoQIOiN1C0Bz2oQbV\nxcD2GVUpNOMzoTjqCDYx6kswWfNcITEBskQUe7WXBD/9SHgI9nC2MoXLOQGrTcqe\n3Cv9XPJr+0C69ro9xXuSfr2kfXzkdrS6XIFnYvaXGlF6iscDczmGF4KBiNEbyNSg\nt+drHfetc6I77us4E676VTWkLV9uwE4F62rR4Gc16O1pXCF/pl1lsHlKQ+vAVZrq\nJE9hF50Evkp/G1Bf1kSgZAM/ZbVjyhsc5KBMjep5eDcJHs+XiupMR47bJOXwtVwd\nN0/6r3yhLThpYLD/qyOxo0xzEx6svVaeaxzNJN9PAcxcvMuZx0yhMJNTKGNtCRmu\nMGrIYSlFWyyAI41dLl2//zBcm+SO2eE3A7Yhh3BbzJRdoreLrKg=\n=j8KL\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJhtQT970vWDwLB/QiunY0QizKpqfqlVrxGhDNcyr5zCCP/wEKBuziP6tIld\nXvrJIQdHUocI8QRdyaZu8AjjUQN7zj7engCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQo60iDwcUn+h4L77x\nDyfv/QjxBF3Jpm7wCCiiE3fbh0E+AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQx1r+zTyGPEOvg79W/kPxBAjxBF3J\npm7wCB4LcFrKgwh+AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDdfB1g/+1rwzboTrOFFCFACPEEXcmmbvAIsRRA\nhPYcaPsAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree dec44e32433abb769e534d9f9dc13580cead7871\nparent a6f6333ba253cda83221ee529810cacf930e413f\nparent eb880f092b4154cf66fe96fc42ffdeff309e3975\nauthor MarcoFalke <falke.marco@gmail.com> 1573496420 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573496427 -0500\n\nMerge #17442: fix Typo: \"merkelRoot\" -> \"merkleRoot\"\n\neb880f092b4154cf66fe96fc42ffdeff309e3975 fix Typo: \"merkelRoot\" -> \"merkleRoot\" (ianliu)\n\nPull request description:\n\n  <!--\n  *** Please remove the following help text before submitting: ***\n\n  Pull requests without a rationale and clear improvement may be closed\n  immediately.\n  -->\n\n  <!--\n  Please provide clear motivation for your patch and explain how it improves\n  Bitcoin Core user experience or Bitcoin Core developer experience\n  significantly:\n\n  * Any test improvements or new tests that improve coverage are always welcome.\n  * All other changes should have accompanying unit tests (see `src/test/`) or\n    functional tests (see `test/`). Contributors should note which tests cover\n    modified code. If no tests exist for a region of modified code, new tests\n    should accompany the change.\n  * Bug fixes are most welcome when they come with steps to reproduce or an\n    explanation of the potential issue as well as reasoning for the way the bug\n    was fixed.\n  * Features are welcome, but might be rejected due to design or scope issues.\n    If a feature is based on a lot of dependencies, contributors should first\n    consider building the system outside of Bitcoin Core, if possible.\n  * Refactoring changes are only accepted if they are required for a feature or\n    bug fix or otherwise improve developer experience significantly. For example,\n    most \"code style\" refactoring changes require a thorough explanation why they\n    are useful, what downsides they have and why they *significantly* improve\n    developer experience or avoid serious programming bugs. Note that code style\n    is often a subjective matter. Unless they are explicitly mentioned to be\n    preferred in the [developer notes](/doc/developer-notes.md), stylistic code\n    changes are usually rejected.\n  -->\n\n  <!--\n  Bitcoin Core has a thorough review process and even the most trivial change\n  needs to pass a lot of eyes and requires non-zero or even substantial time\n  effort to review. There is a huge lack of active reviewers on the project, so\n  patches often sit for a long time.\n  -->\n\nACKs for top commit:\n  practicalswift:\n    ACK eb880f092b4154cf66fe96fc42ffdeff309e3975 but please change from `merkleRootofHashes` to `merkleRootOfHashes`\n\nTree-SHA512: ada9edceee19da5678bf35e1258163e7102fe176dc5cf40acaa1468fa8b2801494f8bf65d5359dcd0054fbc22f07fdc98d6208cfdb54dd9171fd45c89d71e098\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f6333ba253cda83221ee529810cacf930e413f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f6333ba253cda83221ee529810cacf930e413f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f6333ba253cda83221ee529810cacf930e413f"
      },
      {
        "sha": "eb880f092b4154cf66fe96fc42ffdeff309e3975",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb880f092b4154cf66fe96fc42ffdeff309e3975",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb880f092b4154cf66fe96fc42ffdeff309e3975"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "03dce552fcb1159e7a3227b6c5704b0a4620f831",
        "filename": "src/test/merkle_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80fdb6fad132166b10fbeb8615e3c5c591209e0b/src/test/merkle_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80fdb6fad132166b10fbeb8615e3c5c591209e0b/src/test/merkle_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/merkle_tests.cpp?ref=80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "patch": "@@ -345,8 +345,8 @@ BOOST_AUTO_TEST_CASE(merkle_test_BlockWitness)\n     hashes[0].SetNull();\n     hashes[1] = block.vtx[1]->GetHash();\n \n-    uint256 merkelRootofHashes = ComputeMerkleRoot(hashes);\n+    uint256 merkleRootofHashes = ComputeMerkleRoot(hashes);\n \n-    BOOST_CHECK_EQUAL(merkelRootofHashes, blockWitness);\n+    BOOST_CHECK_EQUAL(merkleRootofHashes, blockWitness);\n }\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "faffa7f0dcc9971cb20534816eccdf75bebc853a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZmYTdmMGRjYzk5NzFjYjIwNTM0ODE2ZWNjZGY3NWJlYmM4NTNh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-11T18:58:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-11T18:50:26Z"
      },
      "message": "wallet: Avoid showing GUI popups on RPC errors (take 2)",
      "tree": {
        "sha": "650378bdc816148c42834432d37e6bc84d4a2508",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/650378bdc816148c42834432d37e6bc84d4a2508"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faffa7f0dcc9971cb20534816eccdf75bebc853a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh9fAwAp3dT2jBiu6jPE+QKxfPBvG9blJhiSaeRS2HIWOlSa6STjVlfXoxfuniV\nYSSvRFg2YMzeXqsXh0/IKeGUtbLku4Unj/rf4ps5OFbcRWt0Vjgtu/HxePjnuxPv\nSDAW8knedaTlXyprlxGPuF08cfx6zERAknC5/VCM+ZhOS6zi6t9K+8flCYwNN6p2\n5EXNClFgEgfQWTMGXna55uz0B/CxlXD+Q2XshhYCkXgLXHV3yac/SZqiUU+dDqf/\nw8of2rXHuyAk0GUW67y3GCu5eOuYoUHnkAvGlOfYNTuJi/Ix/hwQcALqVXlc5Rqg\nueW6N24LbJcn6N6tBGVDyxLcG9jCr8kv/EIeMFexsRpA9votSUPWuS/bZlG1ueyp\n8VcjZMl2HiAPfWy1a0NbrSjo46m6kL0dMLaf6f4Jnjxhzn9DehrY9nxcBpQkUClk\nk9nUF7pA63fF/rm57jECIVGelFmLPV4Yz9/0ZMDktKAPMx+h+ZhuvOf+pkWwsXtN\niD++hZht\n=65oC\n-----END PGP SIGNATURE-----",
        "payload": "tree 650378bdc816148c42834432d37e6bc84d4a2508\nparent 8021392b825c74312173f15eb937ba6d4aec3841\nauthor MarcoFalke <falke.marco@gmail.com> 1573498680 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573498226 -0500\n\nwallet: Avoid showing GUI popups on RPC errors (take 2)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faffa7f0dcc9971cb20534816eccdf75bebc853a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faffa7f0dcc9971cb20534816eccdf75bebc853a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faffa7f0dcc9971cb20534816eccdf75bebc853a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8021392b825c74312173f15eb937ba6d4aec3841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8021392b825c74312173f15eb937ba6d4aec3841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8021392b825c74312173f15eb937ba6d4aec3841"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ff182c847f7e44056a5ea9219ec8e48f3df0c10d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faffa7f0dcc9971cb20534816eccdf75bebc853a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faffa7f0dcc9971cb20534816eccdf75bebc853a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=faffa7f0dcc9971cb20534816eccdf75bebc853a",
        "patch": "@@ -3651,9 +3651,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         }\n \n         if (auto spk_man = walletInstance->m_spk_man.get()) {\n-            std::string error;\n             if (!spk_man->Upgrade(prev_version, error)) {\n-                chain.initError(error);\n                 return nullptr;\n             }\n         }"
      }
    ]
  },
  {
    "sha": "49997813a4db388b2810e5e27ef771e8aa6a1f03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTk5NzgxM2E0ZGIzODhiMjgxMGU1ZTI3ZWY3NzFlOGFhNmExZjAz",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-10T18:55:28Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-11T21:37:00Z"
      },
      "message": "test: check custom ancestor limit in mempool_packages.py\n\nTo test the custom ancestor limit on node1 (passed by the argument\n-limitancestorcount), we check for three conditions:\n    -> the # of txs in the node1 mempool is equal to the the limit\n    -> all txs in node1 mempool are a subset of txs in node0 mempool\n    -> the node1 mempool txs match the start of the constructed tx-chain",
      "tree": {
        "sha": "4d5c554ae4515ffd8a2dc28f94365f8685cf8908",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d5c554ae4515ffd8a2dc28f94365f8685cf8908"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49997813a4db388b2810e5e27ef771e8aa6a1f03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49997813a4db388b2810e5e27ef771e8aa6a1f03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49997813a4db388b2810e5e27ef771e8aa6a1f03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49997813a4db388b2810e5e27ef771e8aa6a1f03/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89e93135aedf984f7a98771f047e2beb6cdbdb8e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7014105d88a11070007130ee0a074077ef88f79d",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49997813a4db388b2810e5e27ef771e8aa6a1f03/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49997813a4db388b2810e5e27ef771e8aa6a1f03/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=49997813a4db388b2810e5e27ef771e8aa6a1f03",
        "patch": "@@ -14,13 +14,19 @@\n     satoshi_round,\n )\n \n+# default limits\n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25\n+# custom limits for node1\n+MAX_ANCESTORS_CUSTOM = 5\n \n class MempoolPackagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n-        self.extra_args = [[\"-maxorphantx=1000\"], [\"-maxorphantx=1000\", \"-limitancestorcount=5\"]]\n+        self.extra_args = [\n+            [\"-maxorphantx=1000\"],\n+            [\"-maxorphantx=1000\", \"-limitancestorcount={}\".format(MAX_ANCESTORS_CUSTOM)],\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -188,7 +194,14 @@ def run_test(self):\n             assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 2000)\n             assert_equal(mempool[x]['fees']['descendant'], descendant_fees+satoshi_round(0.00002))\n \n-        # TODO: check that node1's mempool is as expected\n+        # Check that node1's mempool is as expected (-> custom ancestor limit)\n+        mempool0 = self.nodes[0].getrawmempool(False)\n+        mempool1 = self.nodes[1].getrawmempool(False)\n+        assert_equal(len(mempool1), MAX_ANCESTORS_CUSTOM)\n+        assert set(mempool1).issubset(set(mempool0))\n+        for tx in chain[:MAX_ANCESTORS_CUSTOM]:\n+            assert tx in mempool1\n+        # TODO: more detailed check of node1's mempool (fees etc.)\n \n         # TODO: test ancestor size limits\n "
      }
    ]
  },
  {
    "sha": "a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNWU3Nzk1OWM4ZmY2YThiZmZhMTYyMWQ3ZWEyOWVlODYwM2M1YTE0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-11T00:40:11Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-11T22:32:44Z"
      },
      "message": "rpc: Expose block height of wallet transactions",
      "tree": {
        "sha": "3d9b21654f65add933b2afdf1ced509b1ec3252c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d9b21654f65add933b2afdf1ced509b1ec3252c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89e93135aedf984f7a98771f047e2beb6cdbdb8e"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3edfd00a38c8c0bf205125d6d544b60d8afb4cbd",
        "filename": "doc/release-notes-17437.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/doc/release-notes-17437.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/doc/release-notes-17437.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-17437.md?ref=a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "patch": "@@ -0,0 +1,5 @@\n+Low-level RPC Changes\n+===\n+\n+- The RPC gettransaction, listtransactions and listsinceblock responses now also\n+includes the height of the block that contains the wallet transaction, if any."
      },
      {
        "sha": "00742aed7a84c470108d65ea524ee785d7707882",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "patch": "@@ -142,6 +142,7 @@ static void WalletTxToJSON(interfaces::Chain& chain, interfaces::Chain::Lock& lo\n     if (confirms > 0)\n     {\n         entry.pushKV(\"blockhash\", wtx.m_confirm.hashBlock.GetHex());\n+        entry.pushKV(\"blockheight\", wtx.m_confirm.block_height);\n         entry.pushKV(\"blockindex\", wtx.m_confirm.nIndex);\n         int64_t block_time;\n         bool found_block = chain.findBlock(wtx.m_confirm.hashBlock, nullptr /* block */, &block_time);\n@@ -1367,6 +1368,7 @@ static const std::string TransactionDescriptionString()\n            \"    \\\"generated\\\": xxx,                          (bool) Only present if transaction only input is a coinbase one.\\n\"\n            \"    \\\"trusted\\\": xxx,                            (bool) Only present if we consider transaction to be trusted and so safe to spend from.\\n\"\n            \"    \\\"blockhash\\\": \\\"hashvalue\\\",                  (string) The block hash containing the transaction.\\n\"\n+           \"    \\\"blockheight\\\": n,                          (numeric) The block height containing the transaction.\\n\"\n            \"    \\\"blockindex\\\": n,                           (numeric) The index of the transaction in the block that includes it.\\n\"\n            \"    \\\"blocktime\\\": xxx,                          (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n            \"    \\\"txid\\\": \\\"transactionid\\\",                   (string) The transaction id.\\n\""
      },
      {
        "sha": "6f248c9bd3ef46df35d7b8d5175e9ee1aa387e5f",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "patch": "@@ -40,13 +40,15 @@ def run_test(self):\n     def test_no_blockhash(self):\n         txid = self.nodes[2].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n         blockhash, = self.nodes[2].generate(1)\n+        blockheight = self.nodes[2].getblockheader(blockhash)['height']\n         self.sync_all()\n \n         txs = self.nodes[0].listtransactions()\n         assert_array_result(txs, {\"txid\": txid}, {\n             \"category\": \"receive\",\n             \"amount\": 1,\n             \"blockhash\": blockhash,\n+            \"blockheight\": blockheight,\n             \"confirmations\": 1,\n         })\n         assert_equal(\n@@ -276,7 +278,8 @@ def test_double_send(self):\n         self.sync_all()\n \n         # gettransaction should work for txid1\n-        self.nodes[0].gettransaction(txid1)\n+        tx1 = self.nodes[0].gettransaction(txid1)\n+        assert_equal(tx1['blockheight'], self.nodes[0].getblockheader(tx1['blockhash'])['height'])\n \n         # listsinceblock(lastblockhash) should now include txid1 in transactions\n         # as well as in removed"
      },
      {
        "sha": "8c44a070b80f3f62b890e8e1d6ad08d6d383cb16",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "patch": "@@ -40,14 +40,15 @@ def run_test(self):\n                             {\"txid\": txid},\n                             {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 0})\n         # mine a block, confirmations should change:\n-        self.nodes[0].generate(1)\n+        blockhash = self.nodes[0].generate(1)[0]\n+        blockheight = self.nodes[0].getblockheader(blockhash)['height']\n         self.sync_all()\n         assert_array_result(self.nodes[0].listtransactions(),\n                             {\"txid\": txid},\n-                            {\"category\": \"send\", \"amount\": Decimal(\"-0.1\"), \"confirmations\": 1})\n+                            {\"category\": \"send\", \"amount\": Decimal(\"-0.1\"), \"confirmations\": 1, \"blockhash\": blockhash, \"blockheight\": blockheight})\n         assert_array_result(self.nodes[1].listtransactions(),\n                             {\"txid\": txid},\n-                            {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 1})\n+                            {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 1, \"blockhash\": blockhash, \"blockheight\": blockheight})\n \n         # send-to-self:\n         txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.2)"
      }
    ]
  },
  {
    "sha": "3c2c439dcd8797019ac6d6614775d5c20ee41c36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzJjNDM5ZGNkODc5NzAxOWFjNmQ2NjE0Nzc1ZDVjMjBlZTQxYzM2",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T00:16:17Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T00:16:17Z"
      },
      "message": "wallet: Make -walletdir network only",
      "tree": {
        "sha": "9c1fdbae1b4899ae80f7f1db454d5bce7f4b9553",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c1fdbae1b4899ae80f7f1db454d5bce7f4b9553"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c2c439dcd8797019ac6d6614775d5c20ee41c36",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2c439dcd8797019ac6d6614775d5c20ee41c36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2c439dcd8797019ac6d6614775d5c20ee41c36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2c439dcd8797019ac6d6614775d5c20ee41c36/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8b09dc9ad025854e31f01c289db56463d5930628",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c2c439dcd8797019ac6d6614775d5c20ee41c36/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c2c439dcd8797019ac6d6614775d5c20ee41c36/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=3c2c439dcd8797019ac6d6614775d5c20ee41c36",
        "patch": "@@ -58,7 +58,7 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-upgradewallet\", \"Upgrade wallet to latest format on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-wallet=<path>\", \"Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to <walletdir> if it is not absolute, and will be created if it does not exist (as a directory containing a wallet.dat file and log files). For backwards compatibility this will also accept names of existing data files in <walletdir>.)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-walletbroadcast\",  strprintf(\"Make the wallet broadcast transactions (default: %u)\", DEFAULT_WALLETBROADCAST), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-walletdir=<dir>\", \"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-walletdir=<dir>\", \"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);\n #if HAVE_SYSTEM\n     gArgs.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n #endif"
      }
    ]
  },
  {
    "sha": "b1315241375211563e9ec00391c4ac5310e1146f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTMxNTI0MTM3NTIxMTU2M2U5ZWMwMDM5MWM0YWM1MzEwZTExNDZm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-12T07:25:10Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-12T07:30:52Z"
      },
      "message": "util: Add missing headers to util/fees.cpp",
      "tree": {
        "sha": "1cfd15e49deaa3f824303284d864b994d4433871",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cfd15e49deaa3f824303284d864b994d4433871"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b1315241375211563e9ec00391c4ac5310e1146f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3KX8wACgkQQQEIES5+\nqB/6vg//Szj96QVjBuiX/6wlolsh5Q1pQw0YRa1Fdjt8XFckf/NpFeKIj6r2umFn\nx/E+CgQiC3F486qhu6MMMuvfvu2h3SlbsB7pkw3ODKPllpcH7EDoA7cXG7kg4wdd\nyExoK7EYcsdDdBR1kvtAvfWkk09bn8KvveQlvrudRF/oAyA8L5Wf2n6PjTfDO+zM\nVW82XQCLD7nfF5l8K0C0dEs7CJNvxvHqZQ+Pl1RsWgzIuwpqroQUyhZWs03IqB7a\nHfIIyaKi05v0xFk21RxKh7ot4gAQ94Sw3FfpNrQhWcEjn5appgzToZ6PQB/YO1vx\nJsrFz5lv4mT1CQO40dk1cPjr5Rbj9HUgt7zzmpYM8+eQ3wpFPkt2y5ra7d9EOYfx\nm8gPpD+CH5KMIvfCb5qV7y44nbybim5buSPi7VWMYinT/X8a6L5jxqZUggj7Lojr\ntJsL0NLGse6tceWCJp7pRaFp3Jv+0F5yuKnUfji0gABCM+XiTt5aXM6liDBvcPuy\nIAQUOUgPg3yD5xdljEXjOBqfz2LX/bhBbgRQgaEsiu0VAgzn2wQCMvPAxyKYLnvy\ngEHWjHPwxW5FNbiKFrRspfcVZRyPeF2Eot8heXlVp4rt89LaH5b64SM+GsJNjDvc\nC+vYFU8bXjYjUwtTeDEB4ZWHepLMEIIqHBMDkyXWTwKcy8amPYM=\n=HpO/\n-----END PGP SIGNATURE-----",
        "payload": "tree 1cfd15e49deaa3f824303284d864b994d4433871\nparent a6f6333ba253cda83221ee529810cacf930e413f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573543510 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573543852 +0200\n\nutil: Add missing headers to util/fees.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1315241375211563e9ec00391c4ac5310e1146f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b1315241375211563e9ec00391c4ac5310e1146f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1315241375211563e9ec00391c4ac5310e1146f/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f6333ba253cda83221ee529810cacf930e413f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f6333ba253cda83221ee529810cacf930e413f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f6333ba253cda83221ee529810cacf930e413f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "41149888d79d688400c1d1d8fb6f466126e7eb6f",
        "filename": "src/util/fees.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b1315241375211563e9ec00391c4ac5310e1146f/src/util/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b1315241375211563e9ec00391c4ac5310e1146f/src/util/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/fees.cpp?ref=b1315241375211563e9ec00391c4ac5310e1146f",
        "patch": "@@ -3,8 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/fees.h>\n+\n #include <policy/fees.h>\n \n+#include <map>\n #include <string>\n \n std::string StringForFeeReason(FeeReason reason) {"
      }
    ]
  },
  {
    "sha": "6d4b97cb1c21f9534b01fad037837b7966b82190",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDRiOTdjYjFjMjFmOTUzNGIwMWZhZDAzNzgzN2I3OTY2YjgyMTkw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T14:53:00Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T14:53:04Z"
      },
      "message": "Merge #17450: util: Add missing headers to util/fees.cpp\n\nb1315241375211563e9ec00391c4ac5310e1146f util: Add missing headers to util/fees.cpp (Hennadii Stepanov)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    code review ACK b1315241375211563e9ec00391c4ac5310e1146f\n  MarcoFalke:\n    ACK b131524\n  jnewbery:\n    ACK b1315241375211563e9ec00391c4ac5310e1146f\n\nTree-SHA512: a1ad36bff12219912c6aaacd7d9dcbeccf0fa3373280fa6e804d7a4d267b485433d6e1c01134cfa6732d2fb30ec1ab4629dff6e4bea2fe4c1976180064a3c6ca",
      "tree": {
        "sha": "9d11c79eda8662bec5c5178cc50da70338f18295",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9d11c79eda8662bec5c5178cc50da70338f18295"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d4b97cb1c21f9534b01fad037837b7966b82190",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3Kx1AACgkQ0upIUOdS\niyWS5Q//ex3pPRgQwnJTAM1tnEQ6JzZu+j9CPd4fg3B5z1+85s+jPYtIn8aWRyDr\neAy/Gd9I2Qv2y+9POpHtOBD340MMNeXb2VboLS93rSatJRnozxwLLqmUm31gDIEu\nA6ZNocPjGkMZb9dkdgmQ27m/KwXe6a71nJUZ6zQS5s4338VvW+ZOKmArnxANlNcH\naxV5BovrtQNccCj7DCZi0+QR/aaF/ov8gcknkU0QV/2HrUWHJ04TwlOJF7YOT2L4\nOLSa4J/NSsWkVIeeH2tOFs1XG5Y9qkT67IRuwt8lFf4UzqEPxULemsmiwrBWAJ5s\nLMOdhLlfmoSy5GYfMHV7hFRFSdcBxCOm8Dp7ppsA1kN3rpeJxSHF2yZdP3UI3RDy\n5iFcLHf7hi4gUe3WSs+d5sBKdqCcgOHdBEwh6Bf2Rqlnew32+CIPKmzKL6eh8gvP\n6oI/2d/sruiVXUrmMU6+UHNvyU26f3H319AH+BUVaO2XnFNzsSsotMQc46GOGiJ1\nHEJSvCzZxhAg1q/Vy2oDqL2u6t1E/imeh4YQxTxmj4ctNMoiJoT3GhYGlRK77SXV\n7B6ul5btEb6MaL3t0xDN6u0RmvwbVYMZbc3TVfWobOuYGQqvaPPw/iv2aqyxAPlt\n5iFmbhTlK5UakVRLB3O5V1Hl0pZJrxJ/VLIJoPjuL7wCa6bwvg0=\n=Yfs5\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMfQBpSb9pjoiSA2nv3JkwlMG1o6BZ5Uw03of3/gCeb7CP/wEAxDJuD1hk3l\nprsvI9KaSxkI8QRdysdT8Aja0vNxO1Q15ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEGrBiDP5TWHmS7DnYvrIT8cI8QRdysdT\n8AgoZ9mnALqrzACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQjRDG9nr5BBZF0EKlx3PahgjxBF3Kx1PwCAK/sn5H\n3vHnAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGlt\nZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 9d11c79eda8662bec5c5178cc50da70338f18295\nparent 80fdb6fad132166b10fbeb8615e3c5c591209e0b\nparent b1315241375211563e9ec00391c4ac5310e1146f\nauthor MarcoFalke <falke.marco@gmail.com> 1573570380 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573570384 -0500\n\nMerge #17450: util: Add missing headers to util/fees.cpp\n\nb1315241375211563e9ec00391c4ac5310e1146f util: Add missing headers to util/fees.cpp (Hennadii Stepanov)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    code review ACK b1315241375211563e9ec00391c4ac5310e1146f\n  MarcoFalke:\n    ACK b131524\n  jnewbery:\n    ACK b1315241375211563e9ec00391c4ac5310e1146f\n\nTree-SHA512: a1ad36bff12219912c6aaacd7d9dcbeccf0fa3373280fa6e804d7a4d267b485433d6e1c01134cfa6732d2fb30ec1ab4629dff6e4bea2fe4c1976180064a3c6ca\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d4b97cb1c21f9534b01fad037837b7966b82190",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d4b97cb1c21f9534b01fad037837b7966b82190",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d4b97cb1c21f9534b01fad037837b7966b82190/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b"
      },
      {
        "sha": "b1315241375211563e9ec00391c4ac5310e1146f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1315241375211563e9ec00391c4ac5310e1146f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1315241375211563e9ec00391c4ac5310e1146f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "41149888d79d688400c1d1d8fb6f466126e7eb6f",
        "filename": "src/util/fees.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d4b97cb1c21f9534b01fad037837b7966b82190/src/util/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d4b97cb1c21f9534b01fad037837b7966b82190/src/util/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/fees.cpp?ref=6d4b97cb1c21f9534b01fad037837b7966b82190",
        "patch": "@@ -3,8 +3,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <util/fees.h>\n+\n #include <policy/fees.h>\n \n+#include <map>\n #include <string>\n \n std::string StringForFeeReason(FeeReason reason) {"
      }
    ]
  },
  {
    "sha": "333362991c5219e6d9ede5fa54328bcbb0277cf2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzMzNjI5OTFjNTIxOWU2ZDllZGU1ZmE1NDMyOGJjYmIwMjc3Y2Yy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T17:10:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T17:06:34Z"
      },
      "message": "doc: Explain $LIB in LD_PRELOAD in gitian descriptors",
      "tree": {
        "sha": "26ba9d47b28ec49d56ce8da2f3852abfd6325887",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26ba9d47b28ec49d56ce8da2f3852abfd6325887"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/333362991c5219e6d9ede5fa54328bcbb0277cf2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhYCQv+KwxTPix7NBBO4CAH8QEzVuNfjgM2Pkt34ERmJxLMLQgz4zzgCJsuB/B0\nEntUCwodj/1XbqWV6DzdPmv1IT5+mA5gcZNP6MU0dQVHjGu+fpiu9/Fr5hmeXWp2\njYDxaJfce3CGWSkKx17RhiLgtbGrA2SuzfVDoLqZ4usLUVam7UVhdSZpOYuv/Wxi\nOOPErZVbJHbxWHBcHkMG4Km+uybaFVUuWroXP2HugaVd4pYzHEwJ4drjmIvDeByl\n+shQ/uA+lHtpmgijHkiTMiRjigjn4+bwfou65xbN2EOxudl/kJ+WagUzXS8FpWLU\n6Au0BQ7/+ztfvFYOO2awHWT+MGnbOQ5kC7tCCZDy0IoH+ytQB6VBFZ3o9ri/buue\nQUyryvmHixjuW1maMqeeJs2haAPio4hEJDifaQlOrQIq3fq2gPlZTi9KMSS4rrPD\nwvDfuczn8eblhsFvvv8xdNUnfJNNFvEpJvEYOtmcIohDXo/jUD5T+/talb95M0Ia\n5udyARvn\n=3qUA\n-----END PGP SIGNATURE-----",
        "payload": "tree 26ba9d47b28ec49d56ce8da2f3852abfd6325887\nparent fab9850ef4a76e4f09278909a2865e5175661653\nauthor MarcoFalke <falke.marco@gmail.com> 1573578654 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573578394 -0500\n\ndoc: Explain $LIB in LD_PRELOAD in gitian descriptors\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/333362991c5219e6d9ede5fa54328bcbb0277cf2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/333362991c5219e6d9ede5fa54328bcbb0277cf2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/333362991c5219e6d9ede5fa54328bcbb0277cf2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab9850ef4a76e4f09278909a2865e5175661653",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab9850ef4a76e4f09278909a2865e5175661653",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab9850ef4a76e4f09278909a2865e5175661653"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c5b4ac1e83d2240775c9187d4535a156f54f0275",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=333362991c5219e6d9ede5fa54328bcbb0277cf2",
        "patch": "@@ -59,6 +59,7 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "79b1b22cdf84ab4409f35d72c9077f3c35851cbc",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=333362991c5219e6d9ede5fa54328bcbb0277cf2",
        "patch": "@@ -55,6 +55,7 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "4259a10e14758dfdaf04382b33dc21eac543b331",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/333362991c5219e6d9ede5fa54328bcbb0277cf2/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=333362991c5219e6d9ede5fa54328bcbb0277cf2",
        "patch": "@@ -48,6 +48,7 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}"
      }
    ]
  },
  {
    "sha": "1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDI4ODgyZWVhMTI2NTJhZDljYjNkYzA3NDFmYTE1YTdhMGU3YmMw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T19:43:26Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T19:44:13Z"
      },
      "message": "Merge #17437: rpc: Expose block height of wallet transactions\n\na5e77959c8ff6a8bffa1621d7ea29ee8603c5a14 rpc: Expose block height of wallet transactions (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  Closes #17296.\n\nACKs for top commit:\n  practicalswift:\n    ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14 -- diff looks correct now (good catch @theStack!)\n  theStack:\n    ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14\n  ryanofsky:\n    Code review ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14. Changes since last review getblockhash python test fixes, and removing the last hardcoded height\n\nTree-SHA512: 57dcd0e4e7083f34016bf9cf8ef578fbfde49e882b6cd8623dd1c64716e096e62f6177a4c2ed94f5de304e751fe23fb9d11cf107a86fbf0a3c5f539cd2844916",
      "tree": {
        "sha": "c66252144ad918434e961dc271eb5b29cbebb272",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c66252144ad918434e961dc271eb5b29cbebb272"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3LC40ACgkQ0upIUOdS\niyX1OQ//fJGWfLARll3GylzTaaZTAkAIx5NXZq27zYREFvx4kwOk38gRovoFDXqO\nqCIZYGJzHm4q/Wt9HN0UaAyYLyeXvanwBKJmpLQEPrJEwaMFZqUEfcsHaXnlC5FF\n1MmKRTonQ+NFHYgs3/Xz2x5+TV6FhFTI3RuhGw3fmqCtVA3hB5vflBOFwbRbvnJD\nABYHeFedz0o4mV6Gxgn/lqTHLeb8Q0nS/4gQp1Nvc/p3QGhCqF/0P6tHL1N3JJ0N\nZEvVAQjSLenkBVqjxVleT44wrsj7T1YYa6Ky+AnUdb8uHV2gWfE/s+6kYbcTJEpe\nidCAc5mLq3uDTtY6dKZNlfl8goc4Ul4nrSRNb9hfVibr8NFrtm8zViRfbfTzPbe8\nucLYRTS8cJ/lkn+8x+eCmjxSBxx8YpmgdYZ/tHySbixYQKAJxoZ0Te44GSMFkPaF\noJBXcZLoPSoIOtp0SiUmE+FvuxepJfrPlC3VggnrUud47jNYwFmXj6qdvgRXHfi7\nlYjmgRBJwxw5L34DC+GXrRL29r8P5c71vg+H0oO/wkGbaNTUPWRn0ZUAo9VDFkkS\nvBJkz/EnQyxwU12Dl5ZNcDV8r58slCx3RoO4/nnu3GKHwcgkFKeW1Nvlhs6qB+6u\nrdFJRWLfz09TVfirWu7yrKtu9uCtAtIKXVTEi109Eicy0rKwn7c=\n=GiLf\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPv4m0FxzJ5Z+AtiWtOMN3aH2UN1w3oOnij8wBDmW8YRCP/wEE86Uzhg4TVC\nB9pntDTdQL4I8QRdywuQ8AiBo+zZLBgSpgCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQZToyrjV00QfrbNpW\nRC30lwjxBF3LC5DwCLKSUMV7uv7yAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQqAgnXcnYbU0x5wdncKL+5gjxBF3L\nC5DwCBCC1ikPo2chAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDBVXtGyNbX5jABLVXwo4OPCPEEXcsLkPAIF4rg\nA1O3c/gAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c66252144ad918434e961dc271eb5b29cbebb272\nparent 6d4b97cb1c21f9534b01fad037837b7966b82190\nparent a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14\nauthor MarcoFalke <falke.marco@gmail.com> 1573587806 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573587853 -0500\n\nMerge #17437: rpc: Expose block height of wallet transactions\n\na5e77959c8ff6a8bffa1621d7ea29ee8603c5a14 rpc: Expose block height of wallet transactions (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  Closes #17296.\n\nACKs for top commit:\n  practicalswift:\n    ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14 -- diff looks correct now (good catch @theStack!)\n  theStack:\n    ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14\n  ryanofsky:\n    Code review ACK a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14. Changes since last review getblockhash python test fixes, and removing the last hardcoded height\n\nTree-SHA512: 57dcd0e4e7083f34016bf9cf8ef578fbfde49e882b6cd8623dd1c64716e096e62f6177a4c2ed94f5de304e751fe23fb9d11cf107a86fbf0a3c5f539cd2844916\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d4b97cb1c21f9534b01fad037837b7966b82190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d4b97cb1c21f9534b01fad037837b7966b82190",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d4b97cb1c21f9534b01fad037837b7966b82190"
      },
      {
        "sha": "a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a5e77959c8ff6a8bffa1621d7ea29ee8603c5a14"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "3edfd00a38c8c0bf205125d6d544b60d8afb4cbd",
        "filename": "doc/release-notes-17437.md",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/doc/release-notes-17437.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/doc/release-notes-17437.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-17437.md?ref=1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "patch": "@@ -0,0 +1,5 @@\n+Low-level RPC Changes\n+===\n+\n+- The RPC gettransaction, listtransactions and listsinceblock responses now also\n+includes the height of the block that contains the wallet transaction, if any."
      },
      {
        "sha": "00742aed7a84c470108d65ea524ee785d7707882",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "patch": "@@ -142,6 +142,7 @@ static void WalletTxToJSON(interfaces::Chain& chain, interfaces::Chain::Lock& lo\n     if (confirms > 0)\n     {\n         entry.pushKV(\"blockhash\", wtx.m_confirm.hashBlock.GetHex());\n+        entry.pushKV(\"blockheight\", wtx.m_confirm.block_height);\n         entry.pushKV(\"blockindex\", wtx.m_confirm.nIndex);\n         int64_t block_time;\n         bool found_block = chain.findBlock(wtx.m_confirm.hashBlock, nullptr /* block */, &block_time);\n@@ -1367,6 +1368,7 @@ static const std::string TransactionDescriptionString()\n            \"    \\\"generated\\\": xxx,                          (bool) Only present if transaction only input is a coinbase one.\\n\"\n            \"    \\\"trusted\\\": xxx,                            (bool) Only present if we consider transaction to be trusted and so safe to spend from.\\n\"\n            \"    \\\"blockhash\\\": \\\"hashvalue\\\",                  (string) The block hash containing the transaction.\\n\"\n+           \"    \\\"blockheight\\\": n,                          (numeric) The block height containing the transaction.\\n\"\n            \"    \\\"blockindex\\\": n,                           (numeric) The index of the transaction in the block that includes it.\\n\"\n            \"    \\\"blocktime\\\": xxx,                          (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n            \"    \\\"txid\\\": \\\"transactionid\\\",                   (string) The transaction id.\\n\""
      },
      {
        "sha": "6f248c9bd3ef46df35d7b8d5175e9ee1aa387e5f",
        "filename": "test/functional/wallet_listsinceblock.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/test/functional/wallet_listsinceblock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/test/functional/wallet_listsinceblock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listsinceblock.py?ref=1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "patch": "@@ -40,13 +40,15 @@ def run_test(self):\n     def test_no_blockhash(self):\n         txid = self.nodes[2].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n         blockhash, = self.nodes[2].generate(1)\n+        blockheight = self.nodes[2].getblockheader(blockhash)['height']\n         self.sync_all()\n \n         txs = self.nodes[0].listtransactions()\n         assert_array_result(txs, {\"txid\": txid}, {\n             \"category\": \"receive\",\n             \"amount\": 1,\n             \"blockhash\": blockhash,\n+            \"blockheight\": blockheight,\n             \"confirmations\": 1,\n         })\n         assert_equal(\n@@ -276,7 +278,8 @@ def test_double_send(self):\n         self.sync_all()\n \n         # gettransaction should work for txid1\n-        self.nodes[0].gettransaction(txid1)\n+        tx1 = self.nodes[0].gettransaction(txid1)\n+        assert_equal(tx1['blockheight'], self.nodes[0].getblockheader(tx1['blockhash'])['height'])\n \n         # listsinceblock(lastblockhash) should now include txid1 in transactions\n         # as well as in removed"
      },
      {
        "sha": "8c44a070b80f3f62b890e8e1d6ad08d6d383cb16",
        "filename": "test/functional/wallet_listtransactions.py",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/test/functional/wallet_listtransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0/test/functional/wallet_listtransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listtransactions.py?ref=1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "patch": "@@ -40,14 +40,15 @@ def run_test(self):\n                             {\"txid\": txid},\n                             {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 0})\n         # mine a block, confirmations should change:\n-        self.nodes[0].generate(1)\n+        blockhash = self.nodes[0].generate(1)[0]\n+        blockheight = self.nodes[0].getblockheader(blockhash)['height']\n         self.sync_all()\n         assert_array_result(self.nodes[0].listtransactions(),\n                             {\"txid\": txid},\n-                            {\"category\": \"send\", \"amount\": Decimal(\"-0.1\"), \"confirmations\": 1})\n+                            {\"category\": \"send\", \"amount\": Decimal(\"-0.1\"), \"confirmations\": 1, \"blockhash\": blockhash, \"blockheight\": blockheight})\n         assert_array_result(self.nodes[1].listtransactions(),\n                             {\"txid\": txid},\n-                            {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 1})\n+                            {\"category\": \"receive\", \"amount\": Decimal(\"0.1\"), \"confirmations\": 1, \"blockhash\": blockhash, \"blockheight\": blockheight})\n \n         # send-to-self:\n         txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 0.2)"
      }
    ]
  },
  {
    "sha": "8237889e8d0fb7542669a9098516c96da91913f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjM3ODg5ZThkMGZiNzU0MjY2OWE5MDk4NTE2Yzk2ZGE5MTkxM2Yw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T19:53:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-12T19:53:34Z"
      },
      "message": "Merge #17435: test: check custom ancestor limit in mempool_packages.py\n\n49997813a4db388b2810e5e27ef771e8aa6a1f03 test: check custom ancestor limit in mempool_packages.py (Sebastian Falbesoner)\n\nPull request description:\n\n  The functional test `mempool_packages.py` starts one node with default ancestor/descendant limit settings and one with a custom, reduced ancestor limit (currently `-limitancestorcount=5`). The effect of the latter had not been tested yet though. This is approached in this PR by checking on the expected mempool contents of node1 after the node0 ancestor tests are done, via the following three conditions:\n  - the # of txs in the node1 mempool is equal to the the limit\n  - all txs in node1 mempool are a subset of txs in node0 mempool\n  - the node1 mempool txs match the start of the constructed tx-chain\n\n  Note that this still doesn't *fully* check the expected mempool of node1 (e.g. that it isn't influenced by `prioritisetransaction` RPC on node0), hence I add another TODO. In the future it would make sense to also set a custom descendant limit when the second TODO about checking node1's mempool is approached: https://github.com/bitcoin/bitcoin/blob/89e93135aedf984f7a98771f047e2beb6cdbdb8e/test/functional/mempool_packages.py#L228\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 49997813a4db388b2810e5e27ef771e8aa6a1f03 \ud83d\udc72\n\nTree-SHA512: d3a1d19fb49731238ad08ee7c02e2fa81a227e3b4ef3340d68598de42ddb62be9161134f6b8e08fa76b8c9faa02fecfa01111159642e20e9f358292a757b7608",
      "tree": {
        "sha": "b8158d4e6f62ffe99060dcd753df1d4b153d54c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8158d4e6f62ffe99060dcd753df1d4b153d54c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8237889e8d0fb7542669a9098516c96da91913f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3LDb4ACgkQ0upIUOdS\niyW17g/+M03quQKS6SeC+cVmCcrFrBWfSyZ83vbND7N0df+SQS2R+8rQBkRncjZ8\nvLNBH8WPoNJ18V+DaLSDjM2fl02XO1oskDf7ObmS5Nl+wbhWIkTcmBi1Q/oFXLqj\nKlrjLClt2adfEoBwHZJ1PGT51BK0IbUitLKD0KMna2K41u9HaU+VHtLgZ2AMH1i0\nDgmqTyghURdTjwlTF/FV8FrOsJYTetMJHwY3t1jxgCVjiw6okC4KSXtK7XZpEZsB\nzfaUPEnhAtuGUnOovFxS78jYvqzja9lFMoNWLE+9vp2l/fJMz61PS74Qh0vaPwPT\nQQrmUnwSV56+gm0leaAmJ6F59kKckWMtP1PP3oPBaBorGbzgpdXTGbKwHDHhTWWm\nxwlESmGlx7N35i7REn/ru9zX+ZN3e3evLGiqHtDm0ih0KtIz1GSNAwRJio7ttaLP\nbkogV59RZphAL+41TtzWPr+vElPqjY+tUXd9m1fBnmwcK2IVLOKnS5c+b5oOAWWk\npGA2I0Y8XCmh/OXFDNoatTyH7d7Rl8I6GElju6To1gAvYXJSzltL6yYjbV49vnW2\nsxp8SJy6Iq4jL/zbqlQJ8Z4sOkH0rLo0yeHWs/Qd2p5B3e51sjES5LWyg/kvOtlV\nle6SbX1xni7iHUQBUj7qXPzeuHrjJxv28okSY9iJwErzl4WZ0G8=\n=buRf\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPyxPVu7RryKg9KNtmULqml//5HqM6ykEFpvtADOeyvACP/wEBLuFyOzhG8J\n06MKw51r3fAI8QRdyw2/8Ai1NNUPbdVr5wCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEDFKphw0xlVmIl32ppt8+EII8QRdyw2+\n8AiXibNJ0cdEywCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEMrBv94hN6gAxbGy8uNzIzEI8QRdyw2/8AgZ9chX2TKc\naQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQzWDqkvYlwpKMponKnsaEugjxBF3LDb/wCHlDxXVBybvtAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b8158d4e6f62ffe99060dcd753df1d4b153d54c1\nparent 1028882eea12652ad9cb3dc0741fa15a7a0e7bc0\nparent 49997813a4db388b2810e5e27ef771e8aa6a1f03\nauthor MarcoFalke <falke.marco@gmail.com> 1573588411 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573588414 -0500\n\nMerge #17435: test: check custom ancestor limit in mempool_packages.py\n\n49997813a4db388b2810e5e27ef771e8aa6a1f03 test: check custom ancestor limit in mempool_packages.py (Sebastian Falbesoner)\n\nPull request description:\n\n  The functional test `mempool_packages.py` starts one node with default ancestor/descendant limit settings and one with a custom, reduced ancestor limit (currently `-limitancestorcount=5`). The effect of the latter had not been tested yet though. This is approached in this PR by checking on the expected mempool contents of node1 after the node0 ancestor tests are done, via the following three conditions:\n  - the # of txs in the node1 mempool is equal to the the limit\n  - all txs in node1 mempool are a subset of txs in node0 mempool\n  - the node1 mempool txs match the start of the constructed tx-chain\n\n  Note that this still doesn't *fully* check the expected mempool of node1 (e.g. that it isn't influenced by `prioritisetransaction` RPC on node0), hence I add another TODO. In the future it would make sense to also set a custom descendant limit when the second TODO about checking node1's mempool is approached: https://github.com/bitcoin/bitcoin/blob/89e93135aedf984f7a98771f047e2beb6cdbdb8e/test/functional/mempool_packages.py#L228\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 49997813a4db388b2810e5e27ef771e8aa6a1f03 \ud83d\udc72\n\nTree-SHA512: d3a1d19fb49731238ad08ee7c02e2fa81a227e3b4ef3340d68598de42ddb62be9161134f6b8e08fa76b8c9faa02fecfa01111159642e20e9f358292a757b7608\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8237889e8d0fb7542669a9098516c96da91913f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8237889e8d0fb7542669a9098516c96da91913f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8237889e8d0fb7542669a9098516c96da91913f0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1028882eea12652ad9cb3dc0741fa15a7a0e7bc0"
      },
      {
        "sha": "49997813a4db388b2810e5e27ef771e8aa6a1f03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49997813a4db388b2810e5e27ef771e8aa6a1f03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49997813a4db388b2810e5e27ef771e8aa6a1f03"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 15,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7014105d88a11070007130ee0a074077ef88f79d",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 15,
        "deletions": 2,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8237889e8d0fb7542669a9098516c96da91913f0/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8237889e8d0fb7542669a9098516c96da91913f0/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=8237889e8d0fb7542669a9098516c96da91913f0",
        "patch": "@@ -14,13 +14,19 @@\n     satoshi_round,\n )\n \n+# default limits\n MAX_ANCESTORS = 25\n MAX_DESCENDANTS = 25\n+# custom limits for node1\n+MAX_ANCESTORS_CUSTOM = 5\n \n class MempoolPackagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n-        self.extra_args = [[\"-maxorphantx=1000\"], [\"-maxorphantx=1000\", \"-limitancestorcount=5\"]]\n+        self.extra_args = [\n+            [\"-maxorphantx=1000\"],\n+            [\"-maxorphantx=1000\", \"-limitancestorcount={}\".format(MAX_ANCESTORS_CUSTOM)],\n+        ]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n@@ -188,7 +194,14 @@ def run_test(self):\n             assert_equal(mempool[x]['descendantfees'], descendant_fees * COIN + 2000)\n             assert_equal(mempool[x]['fees']['descendant'], descendant_fees+satoshi_round(0.00002))\n \n-        # TODO: check that node1's mempool is as expected\n+        # Check that node1's mempool is as expected (-> custom ancestor limit)\n+        mempool0 = self.nodes[0].getrawmempool(False)\n+        mempool1 = self.nodes[1].getrawmempool(False)\n+        assert_equal(len(mempool1), MAX_ANCESTORS_CUSTOM)\n+        assert set(mempool1).issubset(set(mempool0))\n+        for tx in chain[:MAX_ANCESTORS_CUSTOM]:\n+            assert tx in mempool1\n+        # TODO: more detailed check of node1's mempool (fees etc.)\n \n         # TODO: test ancestor size limits\n "
      }
    ]
  },
  {
    "sha": "b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTFiYWUxYTVhNGZhOGVmNzgyNWRkMWJiMDllM2Y0N2Y5NmQ3YTVh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T12:05:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T22:50:44Z"
      },
      "message": "doc: minor corrections in random.cpp\n\nThis should have been part of #17151.",
      "tree": {
        "sha": "bd08df6d431f6f5bc3578cb95e50e75ead3510a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd08df6d431f6f5bc3578cb95e50e75ead3510a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "270616228bc9a3856a0a82dea26ac3480b7585cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/270616228bc9a3856a0a82dea26ac3480b7585cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/270616228bc9a3856a0a82dea26ac3480b7585cd"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 3,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b453fdd9b85511dfe72ddb95271e372142531628",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
        "patch": "@@ -11,8 +11,8 @@\n #include <compat.h> // for Windows API\n #include <wincrypt.h>\n #endif\n-#include <logging.h>  // for LogPrint()\n-#include <sync.h>     // for WAIT_LOCK\n+#include <logging.h>  // for LogPrintf()\n+#include <sync.h>     // for Mutex\n #include <util/time.h> // for GetTime()\n \n #include <stdlib.h>\n@@ -716,7 +716,7 @@ bool Random_SanityCheck()\n     uint64_t start = GetPerformanceCounter();\n \n     /* This does not measure the quality of randomness, but it does test that\n-     * OSRandom() overwrites all 32 bytes of the output given a maximum\n+     * GetOSRand() overwrites all 32 bytes of the output given a maximum\n      * number of tries.\n      */\n     static const ssize_t MAX_TRIES = 1024;"
      },
      {
        "sha": "b5a7faf48cfa8e23be2367cfeafada5f4defc7e3",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
        "patch": "@@ -52,7 +52,6 @@\n  * sources used in the 'slow' seeder are included, but also:\n  * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n  * - (On Windows) Performance monitoring data from the OS.\n- * - (On Windows) Through OpenSSL, the screen contents.\n  * - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and"
      }
    ]
  },
  {
    "sha": "cea3902015185adc88adbd031d919f91bc844fd7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWEzOTAyMDE1MTg1YWRjODhhZGJkMDMxZDkxOWY5MWJjODQ0ZmQ3",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-26T19:20:12Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T22:50:44Z"
      },
      "message": "[MOVEONLY] Move perfmon data gathering to new randomenv module",
      "tree": {
        "sha": "845d407ac3c2c00364ba64c12896ab927c9421b9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/845d407ac3c2c00364ba64c12896ab927c9421b9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cea3902015185adc88adbd031d919f91bc844fd7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cea3902015185adc88adbd031d919f91bc844fd7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cea3902015185adc88adbd031d919f91bc844fd7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cea3902015185adc88adbd031d919f91bc844fd7/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a"
      }
    ],
    "stats": {
      "total": 139,
      "additions": 97,
      "deletions": 42
    },
    "files": [
      {
        "sha": "dd67bf3240c1714b984709e269229ac8342e25cc",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cea3902015185adc88adbd031d919f91bc844fd7/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cea3902015185adc88adbd031d919f91bc844fd7/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=cea3902015185adc88adbd031d919f91bc844fd7",
        "patch": "@@ -175,6 +175,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   psbt.h \\\n   random.h \\\n+  randomenv.h \\\n   reverse_iterator.h \\\n   reverselock.h \\\n   rpc/blockchain.h \\\n@@ -502,6 +503,7 @@ libbitcoin_util_a_SOURCES = \\\n   interfaces/handler.cpp \\\n   logging.cpp \\\n   random.cpp \\\n+  randomenv.cpp \\\n   rpc/request.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\"
      },
      {
        "sha": "25ff7b3198951e3ff6519c092f973317915f163b",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 42,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cea3902015185adc88adbd031d919f91bc844fd7/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cea3902015185adc88adbd031d919f91bc844fd7/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=cea3902015185adc88adbd031d919f91bc844fd7",
        "patch": "@@ -18,6 +18,8 @@\n #include <stdlib.h>\n #include <thread>\n \n+#include <randomenv.h>\n+\n #include <support/allocators/secure.h>\n \n #ifndef WIN32\n@@ -263,44 +265,6 @@ static void Strengthen(const unsigned char (&seed)[32], int microseconds, CSHA51\n     memory_cleanse(buffer, sizeof(buffer));\n }\n \n-static void RandAddSeedPerfmon(CSHA512& hasher)\n-{\n-#ifdef WIN32\n-    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n-    // Seed with the entire set of perfmon data\n-\n-    // This can take up to 2 seconds, so only do it every 10 minutes\n-    static int64_t nLastPerfmon;\n-    if (GetTime() < nLastPerfmon + 10 * 60)\n-        return;\n-    nLastPerfmon = GetTime();\n-\n-    std::vector<unsigned char> vData(250000, 0);\n-    long ret = 0;\n-    unsigned long nSize = 0;\n-    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n-    while (true) {\n-        nSize = vData.size();\n-        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n-        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n-            break;\n-        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n-    }\n-    RegCloseKey(HKEY_PERFORMANCE_DATA);\n-    if (ret == ERROR_SUCCESS) {\n-        hasher.Write(vData.data(), nSize);\n-        memory_cleanse(vData.data(), nSize);\n-    } else {\n-        // Performance data is only a best-effort attempt at improving the\n-        // situation when the OS randomness (and other sources) aren't\n-        // adequate. As a result, failure to read it is isn't considered critical,\n-        // so we don't call RandFailure().\n-        // TODO: Add logging when the logger is made functional before global\n-        // constructors have been invoked.\n-    }\n-#endif\n-}\n-\n #ifndef WIN32\n /** Fallback: get 32 bytes of system entropy from /dev/urandom. The most\n  * compatible way to get cryptographic randomness on UNIX-ish platforms.\n@@ -585,8 +549,8 @@ static void SeedSleep(CSHA512& hasher, RNGState& rng)\n     // High-precision timestamp after sleeping (as we commit to both the time before and after, this measures the delay)\n     SeedTimestamp(hasher);\n \n-    // Windows performance monitor data (once every 10 minutes)\n-    RandAddSeedPerfmon(hasher);\n+    // Dynamic environment data (performance monitoring, ...; once every 10 minutes)\n+    RandAddDynamicEnv(hasher);\n \n     // Strengthen every minute\n     SeedStrengthen(hasher, rng);\n@@ -600,8 +564,11 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     // Everything that the 'slow' seeder includes.\n     SeedSlow(hasher);\n \n-    // Windows performance monitor data.\n-    RandAddSeedPerfmon(hasher);\n+    // Dynamic environment data\n+    RandAddDynamicEnv(hasher);\n+\n+    // Static environment data\n+    RandAddStaticEnv(hasher);\n \n     // Strengthen\n     SeedStrengthen(hasher, rng);"
      },
      {
        "sha": "529dd039b22c261206c312d44568d742de5f3497",
        "filename": "src/randomenv.cpp",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cea3902015185adc88adbd031d919f91bc844fd7/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cea3902015185adc88adbd031d919f91bc844fd7/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=cea3902015185adc88adbd031d919f91bc844fd7",
        "patch": "@@ -0,0 +1,69 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <randomenv.h>\n+\n+#include <crypto/sha512.h>\n+#include <support/cleanse.h>\n+#include <util/time.h> // for GetTime()\n+#ifdef WIN32\n+#include <compat.h> // for Windows API\n+#endif\n+\n+#include <algorithm>\n+#include <vector>\n+\n+#include <stdint.h>\n+\n+namespace {\n+\n+void RandAddSeedPerfmon(CSHA512& hasher)\n+{\n+#ifdef WIN32\n+    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n+    // Seed with the entire set of perfmon data\n+\n+    // This can take up to 2 seconds, so only do it every 10 minutes\n+    static int64_t nLastPerfmon;\n+    if (GetTime() < nLastPerfmon + 10 * 60)\n+        return;\n+    nLastPerfmon = GetTime();\n+\n+    std::vector<unsigned char> vData(250000, 0);\n+    long ret = 0;\n+    unsigned long nSize = 0;\n+    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n+    while (true) {\n+        nSize = vData.size();\n+        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n+        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n+            break;\n+        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n+    }\n+    RegCloseKey(HKEY_PERFORMANCE_DATA);\n+    if (ret == ERROR_SUCCESS) {\n+        hasher.Write(vData.data(), nSize);\n+        memory_cleanse(vData.data(), nSize);\n+    } else {\n+        // Performance data is only a best-effort attempt at improving the\n+        // situation when the OS randomness (and other sources) aren't\n+        // adequate. As a result, failure to read it is isn't considered critical,\n+        // so we don't call RandFailure().\n+        // TODO: Add logging when the logger is made functional before global\n+        // constructors have been invoked.\n+    }\n+#endif\n+}\n+\n+} // namespace\n+\n+void RandAddDynamicEnv(CSHA512& hasher)\n+{\n+    RandAddSeedPerfmon(hasher);\n+}\n+\n+void RandAddStaticEnv(CSHA512& hasher)\n+{\n+}"
      },
      {
        "sha": "46cea6f6f281bcedbfd793919f828f01890fb263",
        "filename": "src/randomenv.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cea3902015185adc88adbd031d919f91bc844fd7/src/randomenv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cea3902015185adc88adbd031d919f91bc844fd7/src/randomenv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.h?ref=cea3902015185adc88adbd031d919f91bc844fd7",
        "patch": "@@ -0,0 +1,17 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RANDOMENV_H\n+#define BITCOIN_RANDOMENV_H\n+\n+#include <crypto/sha512.h>\n+\n+/** Gather non-cryptographic environment data that changes over time. */\n+void RandAddDynamicEnv(CSHA512& hasher);\n+\n+/** Gather non-cryptographic environment data that does not change over time. */\n+void RandAddStaticEnv(CSHA512& hasher);\n+\n+#endif"
      }
    ]
  },
  {
    "sha": "723c79666770b30cce9f962bed5ece8cc7d74580",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MjNjNzk2NjY3NzBiMzBjY2U5Zjk2MmJlZDVlY2U4Y2M3ZDc0NTgw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-27T19:52:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T22:50:44Z"
      },
      "message": "[MOVEONLY] Move cpuid code from random & sha256 to compat/cpuid",
      "tree": {
        "sha": "b1dbaecda34a61030ede89845bcb271fb4687277",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1dbaecda34a61030ede89845bcb271fb4687277"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/723c79666770b30cce9f962bed5ece8cc7d74580",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723c79666770b30cce9f962bed5ece8cc7d74580",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/723c79666770b30cce9f962bed5ece8cc7d74580",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723c79666770b30cce9f962bed5ece8cc7d74580/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cea3902015185adc88adbd031d919f91bc844fd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cea3902015185adc88adbd031d919f91bc844fd7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cea3902015185adc88adbd031d919f91bc844fd7"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 32,
      "deletions": 30
    },
    "files": [
      {
        "sha": "b04d2ecbbfc04db6585deafc4a946c189d2ca4c9",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723c79666770b30cce9f962bed5ece8cc7d74580/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723c79666770b30cce9f962bed5ece8cc7d74580/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=723c79666770b30cce9f962bed5ece8cc7d74580",
        "patch": "@@ -119,6 +119,7 @@ BITCOIN_CORE_H = \\\n   compat.h \\\n   compat/assumptions.h \\\n   compat/byteswap.h \\\n+  compat/cpuid.h \\\n   compat/endian.h \\\n   compat/sanity.h \\\n   compressor.h \\"
      },
      {
        "sha": "0877ad47d302ba56594673a84b5e43b70ed676a7",
        "filename": "src/compat/cpuid.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723c79666770b30cce9f962bed5ece8cc7d74580/src/compat/cpuid.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723c79666770b30cce9f962bed5ece8cc7d74580/src/compat/cpuid.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/cpuid.h?ref=723c79666770b30cce9f962bed5ece8cc7d74580",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMPAT_CPUID_H\n+#define BITCOIN_COMPAT_CPUID_H\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#define HAVE_GETCPUID\n+\n+#include <cpuid.h>\n+\n+// We can't use cpuid.h's __get_cpuid as it does not support subleafs.\n+void static inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n+#endif // defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#endif // BITCOIN_COMPAT_CPUID_H"
      },
      {
        "sha": "dda7e5230fe8fbdc1b7ca581424ea3d64dde5373",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723c79666770b30cce9f962bed5ece8cc7d74580/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723c79666770b30cce9f962bed5ece8cc7d74580/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=723c79666770b30cce9f962bed5ece8cc7d74580",
        "patch": "@@ -8,9 +8,10 @@\n #include <assert.h>\n #include <string.h>\n \n+#include <compat/cpuid.h>\n+\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n #if defined(USE_ASM)\n-#include <cpuid.h>\n namespace sha256_sse4\n {\n void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks);\n@@ -546,18 +547,7 @@ bool SelfTest() {\n     return true;\n }\n \n-\n #if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__) || defined(__i386__))\n-// We can't use cpuid.h's __get_cpuid as it does not support subleafs.\n-void inline cpuid(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n-{\n-#ifdef __GNUC__\n-    __cpuid_count(leaf, subleaf, a, b, c, d);\n-#else\n-  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n-#endif\n-}\n-\n /** Check whether the OS has enabled AVX registers. */\n bool AVXEnabled()\n {\n@@ -572,7 +562,7 @@ bool AVXEnabled()\n std::string SHA256AutoDetect()\n {\n     std::string ret = \"standard\";\n-#if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__) || defined(__i386__))\n+#if defined(USE_ASM) && defined(HAVE_GETCPUID)\n     bool have_sse4 = false;\n     bool have_xsave = false;\n     bool have_avx = false;\n@@ -589,15 +579,15 @@ std::string SHA256AutoDetect()\n     (void)enabled_avx;\n \n     uint32_t eax, ebx, ecx, edx;\n-    cpuid(1, 0, eax, ebx, ecx, edx);\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n     have_sse4 = (ecx >> 19) & 1;\n     have_xsave = (ecx >> 27) & 1;\n     have_avx = (ecx >> 28) & 1;\n     if (have_xsave && have_avx) {\n         enabled_avx = AVXEnabled();\n     }\n     if (have_sse4) {\n-        cpuid(7, 0, eax, ebx, ecx, edx);\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n         have_avx2 = (ebx >> 5) & 1;\n         have_shani = (ebx >> 29) & 1;\n     }"
      },
      {
        "sha": "6f162a7cf0a816faaa170c150ca6eee0eb3831d0",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 15,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/723c79666770b30cce9f962bed5ece8cc7d74580/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/723c79666770b30cce9f962bed5ece8cc7d74580/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=723c79666770b30cce9f962bed5ece8cc7d74580",
        "patch": "@@ -5,6 +5,7 @@\n \n #include <random.h>\n \n+#include <compat/cpuid.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n@@ -42,11 +43,6 @@\n #include <sys/sysctl.h>\n #endif\n \n-\n-#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-#include <cpuid.h>\n-#endif\n-\n #include <openssl/err.h>\n #include <openssl/rand.h>\n #include <openssl/conf.h>\n@@ -77,7 +73,7 @@ static inline int64_t GetPerformanceCounter() noexcept\n #endif\n }\n \n-#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#ifdef HAVE_GETCPUID\n static bool g_rdrand_supported = false;\n static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n@@ -88,15 +84,6 @@ static_assert(CPUID_F1_ECX_RDRAND == bit_RDRND, \"Unexpected value for bit_RDRND\"\n #ifdef bit_RDSEED\n static_assert(CPUID_F7_EBX_RDSEED == bit_RDSEED, \"Unexpected value for bit_RDSEED\");\n #endif\n-static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n-{\n-    // We can't use __get_cpuid as it doesn't support subleafs.\n-#ifdef __GNUC__\n-    __cpuid_count(leaf, subleaf, a, b, c, d);\n-#else\n-    __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n-#endif\n-}\n \n static void InitHardwareRand()\n {"
      }
    ]
  },
  {
    "sha": "c2a262a78c3bcc4d5e13612ab0214874abe15de0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMmEyNjJhNzhjM2JjYzRkNWUxMzYxMmFiMDIxNDg3NGFiZTE1ZGUw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-27T00:14:21Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T22:50:44Z"
      },
      "message": "Seed randomness with process id / thread id / various clocks\n\nThis sort of data is also used by OpenSSL.",
      "tree": {
        "sha": "cc91016fcd06686bd9af06f21b78f49737784bcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc91016fcd06686bd9af06f21b78f49737784bcb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c2a262a78c3bcc4d5e13612ab0214874abe15de0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2a262a78c3bcc4d5e13612ab0214874abe15de0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c2a262a78c3bcc4d5e13612ab0214874abe15de0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2a262a78c3bcc4d5e13612ab0214874abe15de0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "723c79666770b30cce9f962bed5ece8cc7d74580",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/723c79666770b30cce9f962bed5ece8cc7d74580",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/723c79666770b30cce9f962bed5ece8cc7d74580"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 77,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3f970ec3303c8664a241dccb30e8cda0c0846553",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 77,
        "deletions": 0,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c2a262a78c3bcc4d5e13612ab0214874abe15de0/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c2a262a78c3bcc4d5e13612ab0214874abe15de0/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=c2a262a78c3bcc4d5e13612ab0214874abe15de0",
        "patch": "@@ -13,9 +13,22 @@\n #endif\n \n #include <algorithm>\n+#include <chrono>\n+#include <thread>\n #include <vector>\n \n #include <stdint.h>\n+#include <string.h>\n+#ifndef WIN32\n+#include <sys/time.h>\n+#include <sys/types.h>\n+#include <unistd.h>\n+#endif\n+#ifdef __MACH__\n+#include <mach/clock.h>\n+#include <mach/mach.h>\n+#include <mach/mach_time.h>\n+#endif\n \n namespace {\n \n@@ -57,13 +70,77 @@ void RandAddSeedPerfmon(CSHA512& hasher)\n #endif\n }\n \n+/** Helper to easily feed data into a CSHA512.\n+ *\n+ * Note that this does not serialize the passed object (like stream.h's << operators do).\n+ * Its raw memory representation is used directly.\n+ */\n+template<typename T>\n+CSHA512& operator<<(CSHA512& hasher, const T& data) {\n+    static_assert(!std::is_same<typename std::decay<T>::type, char*>::value, \"Calling operator<<(CSHA512, char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, unsigned char*>::value, \"Calling operator<<(CSHA512, unsigned char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, const char*>::value, \"Calling operator<<(CSHA512, const char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, const unsigned char*>::value, \"Calling operator<<(CSHA512, const unsigned char*) is probably not what you want\");\n+    hasher.Write((const unsigned char*)&data, sizeof(data));\n+    return hasher;\n+}\n+\n } // namespace\n \n void RandAddDynamicEnv(CSHA512& hasher)\n {\n     RandAddSeedPerfmon(hasher);\n+\n+    // Various clocks\n+#ifdef WIN32\n+    FILETIME ftime;\n+    GetSystemTimeAsFileTime(&ftime);\n+    hasher << ftime;\n+#else\n+#  ifndef __MACH__\n+    // On non-MacOS systems, use various clock_gettime() calls.\n+    struct timespec ts;\n+#    ifdef CLOCK_MONOTONIC\n+    clock_gettime(CLOCK_MONOTONIC, &ts);\n+    hasher << ts.tv_sec << ts.tv_nsec;\n+#    endif\n+#    ifdef CLOCK_REALTIME\n+    clock_gettime(CLOCK_REALTIME, &ts);\n+    hasher << ts.tv_sec << ts.tv_nsec;\n+#    endif\n+#    ifdef CLOCK_BOOTTIME\n+    clock_gettime(CLOCK_BOOTTIME, &ts);\n+    hasher << ts.tv_sec << ts.tv_nsec;\n+#    endif\n+#  else\n+    // On MacOS use mach_absolute_time (number of CPU ticks since boot) as a replacement for CLOCK_MONOTONIC,\n+    // and clock_get_time for CALENDAR_CLOCK as a replacement for CLOCK_REALTIME.\n+    hasher << mach_absolute_time();\n+    // From https://gist.github.com/jbenet/1087739\n+    clock_serv_t cclock;\n+    mach_timespec_t mts;\n+    if (host_get_clock_service(mach_host_self(), CALENDAR_CLOCK, &cclock) == KERN_SUCCESS && clock_get_time(cclock, &mts) == KERN_SUCCESS) {\n+        hasher << mts.tv_sec << mts.tv_nsec;\n+        mach_port_deallocate(mach_task_self(), cclock);\n+    }\n+#  endif\n+    // gettimeofday is available on all UNIX systems, but only has microsecond precision.\n+    struct timeval tv;\n+    gettimeofday(&tv, nullptr);\n+    hasher << tv.tv_sec << tv.tv_usec;\n+#endif\n+    // Probably redundant, but also use all the clocks C++11 provides:\n+    hasher << std::chrono::system_clock::now().time_since_epoch().count();\n+    hasher << std::chrono::steady_clock::now().time_since_epoch().count();\n+    hasher << std::chrono::high_resolution_clock::now().time_since_epoch().count();\n }\n \n void RandAddStaticEnv(CSHA512& hasher)\n {\n+#ifdef WIN32\n+    hasher << GetCurrentProcessId() << GetCurrentThreadId();\n+#else\n+    hasher << getpid();\n+#endif\n+    hasher << std::this_thread::get_id();\n }"
      }
    ]
  },
  {
    "sha": "2554c1b81bb8c40e1989025c6f18e7935720b156",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNTU0YzFiODFiYjhjNDBlMTk4OTAyNWM2ZjE4ZTc5MzU3MjBiMTU2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-27T01:05:10Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:24:02Z"
      },
      "message": "Gather additional entropy from the environment\n\nThis based on code by Gregory Maxwell.",
      "tree": {
        "sha": "86dc2f698d86ed556c2fa0ac0f141dfde2f40b23",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86dc2f698d86ed556c2fa0ac0f141dfde2f40b23"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2554c1b81bb8c40e1989025c6f18e7935720b156",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2554c1b81bb8c40e1989025c6f18e7935720b156",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2554c1b81bb8c40e1989025c6f18e7935720b156",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2554c1b81bb8c40e1989025c6f18e7935720b156/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c2a262a78c3bcc4d5e13612ab0214874abe15de0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c2a262a78c3bcc4d5e13612ab0214874abe15de0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c2a262a78c3bcc4d5e13612ab0214874abe15de0"
      }
    ],
    "stats": {
      "total": 194,
      "additions": 184,
      "deletions": 10
    },
    "files": [
      {
        "sha": "1faf2f4613f1266bdf963dbd2ad2612ab60b9fd2",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 184,
        "deletions": 10,
        "changes": 194,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2554c1b81bb8c40e1989025c6f18e7935720b156/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2554c1b81bb8c40e1989025c6f18e7935720b156/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=2554c1b81bb8c40e1989025c6f18e7935720b156",
        "patch": "@@ -3,8 +3,13 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <randomenv.h>\n \n+#include <clientversion.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #include <util/time.h> // for GetTime()\n@@ -14,21 +19,34 @@\n \n #include <algorithm>\n #include <chrono>\n+#include <climits>\n #include <thread>\n #include <vector>\n \n #include <stdint.h>\n #include <string.h>\n #ifndef WIN32\n+#include <sys/types.h> // must go before a number of other headers\n+#include <fcntl.h>\n+#include <netinet/in.h>\n+#include <sys/resource.h>\n+#include <sys/socket.h>\n+#include <sys/stat.h>\n #include <sys/time.h>\n-#include <sys/types.h>\n+#include <sys/utsname.h>\n #include <unistd.h>\n #endif\n #ifdef __MACH__\n #include <mach/clock.h>\n #include <mach/mach.h>\n #include <mach/mach_time.h>\n #endif\n+#if HAVE_DECL_GETIFADDRS\n+#include <ifaddrs.h>\n+#endif\n+\n+//! Necessary on some platforms\n+extern char** environ;\n \n namespace {\n \n@@ -85,6 +103,53 @@ CSHA512& operator<<(CSHA512& hasher, const T& data) {\n     return hasher;\n }\n \n+#ifndef WIN32\n+void AddSockaddr(CSHA512& hasher, const struct sockaddr *addr)\n+{\n+    if (addr == nullptr) return;\n+    switch (addr->sa_family) {\n+    case AF_INET:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\n+        break;\n+    case AF_INET6:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\n+        break;\n+    default:\n+        hasher.Write((const unsigned char*)&addr->sa_family, sizeof(addr->sa_family));\n+    }\n+}\n+\n+void AddFile(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb = {};\n+    int f = open(path, O_RDONLY);\n+    size_t total = 0;\n+    if (f != -1) {\n+        unsigned char fbuf[4096];\n+        int n;\n+        hasher.Write((const unsigned char*)&f, sizeof(f));\n+        if (fstat(f, &sb) == 0) hasher << sb;\n+        do {\n+            n = read(f, fbuf, sizeof(fbuf));\n+            if (n > 0) hasher.Write(fbuf, n);\n+            total += n;\n+            /* not bothering with EINTR handling. */\n+        } while (n == sizeof(fbuf) && total < 1048576); // Read only the first 1 Mbyte\n+        close(f);\n+    }\n+}\n+\n+void AddPath(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb = {};\n+    if (stat(path, &sb) == 0) {\n+        hasher.Write((const unsigned char*)path, strlen(path) + 1);\n+        hasher << sb;\n+    }\n+}\n+#endif\n+\n+\n } // namespace\n \n void RandAddDynamicEnv(CSHA512& hasher)\n@@ -99,48 +164,157 @@ void RandAddDynamicEnv(CSHA512& hasher)\n #else\n #  ifndef __MACH__\n     // On non-MacOS systems, use various clock_gettime() calls.\n-    struct timespec ts;\n+    struct timespec ts = {};\n #    ifdef CLOCK_MONOTONIC\n     clock_gettime(CLOCK_MONOTONIC, &ts);\n-    hasher << ts.tv_sec << ts.tv_nsec;\n+    hasher << ts;\n #    endif\n #    ifdef CLOCK_REALTIME\n     clock_gettime(CLOCK_REALTIME, &ts);\n-    hasher << ts.tv_sec << ts.tv_nsec;\n+    hasher << ts;\n #    endif\n #    ifdef CLOCK_BOOTTIME\n     clock_gettime(CLOCK_BOOTTIME, &ts);\n-    hasher << ts.tv_sec << ts.tv_nsec;\n+    hasher << ts;\n #    endif\n #  else\n     // On MacOS use mach_absolute_time (number of CPU ticks since boot) as a replacement for CLOCK_MONOTONIC,\n     // and clock_get_time for CALENDAR_CLOCK as a replacement for CLOCK_REALTIME.\n     hasher << mach_absolute_time();\n     // From https://gist.github.com/jbenet/1087739\n     clock_serv_t cclock;\n-    mach_timespec_t mts;\n+    mach_timespec_t mts = {};\n     if (host_get_clock_service(mach_host_self(), CALENDAR_CLOCK, &cclock) == KERN_SUCCESS && clock_get_time(cclock, &mts) == KERN_SUCCESS) {\n-        hasher << mts.tv_sec << mts.tv_nsec;\n+        hasher << mts;\n         mach_port_deallocate(mach_task_self(), cclock);\n     }\n #  endif\n     // gettimeofday is available on all UNIX systems, but only has microsecond precision.\n-    struct timeval tv;\n+    struct timeval tv = {};\n     gettimeofday(&tv, nullptr);\n-    hasher << tv.tv_sec << tv.tv_usec;\n+    hasher << tv;\n #endif\n     // Probably redundant, but also use all the clocks C++11 provides:\n     hasher << std::chrono::system_clock::now().time_since_epoch().count();\n     hasher << std::chrono::steady_clock::now().time_since_epoch().count();\n     hasher << std::chrono::high_resolution_clock::now().time_since_epoch().count();\n+\n+#ifndef WIN32\n+    // Current resource usage.\n+    struct rusage usage = {};\n+    if (getrusage(RUSAGE_SELF, &usage) == 0) hasher << usage;\n+#endif\n+\n+#ifdef __linux__\n+    AddFile(hasher, \"/proc/diskstats\");\n+    AddFile(hasher, \"/proc/vmstat\");\n+    AddFile(hasher, \"/proc/schedstat\");\n+    AddFile(hasher, \"/proc/zoneinfo\");\n+    AddFile(hasher, \"/proc/meminfo\");\n+    AddFile(hasher, \"/proc/softirqs\");\n+    AddFile(hasher, \"/proc/stat\");\n+    AddFile(hasher, \"/proc/self/schedstat\");\n+    AddFile(hasher, \"/proc/self/status\");\n+#endif\n+\n+    // Stack and heap location\n+    void* addr = malloc(4097);\n+    hasher << &addr << addr;\n+    free(addr);\n }\n \n void RandAddStaticEnv(CSHA512& hasher)\n {\n+    // Some compile-time static properties\n+    hasher << (CHAR_MIN < 0) << sizeof(void*) << sizeof(long) << sizeof(int);\n+#if defined(__GNUC__) && defined(__GNUC_MINOR__) && defined(__GNUC_PATCHLEVEL__)\n+    hasher << __GNUC__ << __GNUC_MINOR__ << __GNUC_PATCHLEVEL__;\n+#endif\n+#ifdef _MSC_VER\n+    hasher << _MSC_VER;\n+#endif\n+    hasher << __cplusplus;\n+#ifdef _XOPEN_VERSION\n+    hasher << _XOPEN_VERSION;\n+#endif\n+#ifdef __VERSION__\n+    const char* COMPILER_VERSION = __VERSION__;\n+    hasher.Write((const unsigned char*)COMPILER_VERSION, strlen(COMPILER_VERSION) + 1);\n+#endif\n+\n+    // Bitcoin client version\n+    hasher << CLIENT_VERSION;\n+\n+    // Memory locations\n+    hasher << &hasher << &RandAddStaticEnv << &malloc << &errno << &environ;\n+\n+    // Hostname\n+    char hname[256];\n+    if (gethostname(hname, 256) == 0) {\n+        hasher.Write((const unsigned char*)hname, strnlen(hname, 256));\n+    }\n+\n+#if HAVE_DECL_GETIFADDRS\n+    // Network interfaces\n+    struct ifaddrs *ifad = NULL;\n+    getifaddrs(&ifad);\n+    struct ifaddrs *ifit = ifad;\n+    while (ifit != NULL) {\n+        hasher.Write((const unsigned char*)&ifit, sizeof(ifit));\n+        hasher.Write((const unsigned char*)ifit->ifa_name, strlen(ifit->ifa_name) + 1);\n+        hasher.Write((const unsigned char*)&ifit->ifa_flags, sizeof(ifit->ifa_flags));\n+        AddSockaddr(hasher, ifit->ifa_addr);\n+        AddSockaddr(hasher, ifit->ifa_netmask);\n+        AddSockaddr(hasher, ifit->ifa_dstaddr);\n+        ifit = ifit->ifa_next;\n+    }\n+    freeifaddrs(ifad);\n+#endif\n+\n+#ifndef WIN32\n+    // UNIX kernel information\n+    struct utsname name;\n+    if (uname(&name) != -1) {\n+        hasher.Write((const unsigned char*)&name.sysname, strlen(name.sysname) + 1);\n+        hasher.Write((const unsigned char*)&name.nodename, strlen(name.nodename) + 1);\n+        hasher.Write((const unsigned char*)&name.release, strlen(name.release) + 1);\n+        hasher.Write((const unsigned char*)&name.version, strlen(name.version) + 1);\n+        hasher.Write((const unsigned char*)&name.machine, strlen(name.machine) + 1);\n+    }\n+\n+    /* Path and filesystem provided data */\n+    AddPath(hasher, \"/\");\n+    AddPath(hasher, \".\");\n+    AddPath(hasher, \"/tmp\");\n+    AddPath(hasher, \"/home\");\n+    AddPath(hasher, \"/proc\");\n+#ifdef __linux__\n+    AddFile(hasher, \"/proc/cmdline\");\n+    AddFile(hasher, \"/proc/cpuinfo\");\n+    AddFile(hasher, \"/proc/version\");\n+#endif\n+    AddFile(hasher, \"/etc/passwd\");\n+    AddFile(hasher, \"/etc/group\");\n+    AddFile(hasher, \"/etc/hosts\");\n+    AddFile(hasher, \"/etc/resolv.conf\");\n+    AddFile(hasher, \"/etc/timezone\");\n+    AddFile(hasher, \"/etc/localtime\");\n+\n+    /* TODO: sysctl's for OSX to fetch information not available from /proc */\n+#endif\n+\n+    // Env variables\n+    if (environ) {\n+        for (size_t i = 0; environ[i]; ++i) {\n+            hasher.Write((const unsigned char*)environ[i], strlen(environ[i]));\n+        }\n+    }\n+\n+    // Process, thread, user, session, group, ... ids.\n #ifdef WIN32\n     hasher << GetCurrentProcessId() << GetCurrentThreadId();\n #else\n-    hasher << getpid();\n+    hasher << getpid() << getppid() << getsid(0) << getpgid(0) << getuid() << geteuid() << getgid() << getegid();\n #endif\n     hasher << std::this_thread::get_id();\n }"
      }
    ]
  },
  {
    "sha": "a81c494b4c9a8c2f1a319a03375826f12863706f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODFjNDk0YjRjOWE4YzJmMWEzMTlhMDMzNzU4MjZmMTI4NjM3MDZm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-28T17:42:25Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:22Z"
      },
      "message": "Use sysctl for seeding on MacOS/BSD",
      "tree": {
        "sha": "89c230f261ae7c7ab3125d53b61ae69d945e77e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89c230f261ae7c7ab3125d53b61ae69d945e77e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a81c494b4c9a8c2f1a319a03375826f12863706f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a81c494b4c9a8c2f1a319a03375826f12863706f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a81c494b4c9a8c2f1a319a03375826f12863706f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a81c494b4c9a8c2f1a319a03375826f12863706f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2554c1b81bb8c40e1989025c6f18e7935720b156",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2554c1b81bb8c40e1989025c6f18e7935720b156",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2554c1b81bb8c40e1989025c6f18e7935720b156"
      }
    ],
    "stats": {
      "total": 142,
      "additions": 140,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e1db71a7bff38ea357c151c5baf8f93453d764ca",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a81c494b4c9a8c2f1a319a03375826f12863706f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a81c494b4c9a8c2f1a319a03375826f12863706f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a81c494b4c9a8c2f1a319a03375826f12863706f",
        "patch": "@@ -788,7 +788,7 @@ if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n fi\n \n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n \n # FD_ZERO may be dependent on a declaration of memcpy, e.g. in SmartOS\n # check that it fails to build without memcpy, then that it builds with\n@@ -948,6 +948,18 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_VERSION};\n+    #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],"
      },
      {
        "sha": "197c5ce154f719c0263f128745d2ee4c4b23f37a",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 127,
        "deletions": 1,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a81c494b4c9a8c2f1a319a03375826f12863706f/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a81c494b4c9a8c2f1a319a03375826f12863706f/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=a81c494b4c9a8c2f1a319a03375826f12863706f",
        "patch": "@@ -44,6 +44,18 @@\n #if HAVE_DECL_GETIFADDRS\n #include <ifaddrs.h>\n #endif\n+#if HAVE_SYSCTL\n+#include <sys/sysctl.h>\n+#if HAVE_VM_VM_PARAM_H\n+#include <vm/vm_param.h>\n+#endif\n+#if HAVE_SYS_RESOURCES_H\n+#include <sys/resources.h>\n+#endif\n+#if HAVE_SYS_VMMETER_H\n+#include <sys/vmmeter.h>\n+#endif\n+#endif\n \n //! Necessary on some platforms\n extern char** environ;\n@@ -149,6 +161,23 @@ void AddPath(CSHA512& hasher, const char *path)\n }\n #endif\n \n+#if HAVE_SYSCTL\n+template<int... S>\n+void AddSysctl(CSHA512& hasher)\n+{\n+    int CTL[sizeof...(S)] = {S...};\n+    unsigned char buffer[65536];\n+    size_t siz = 65536;\n+    int ret = sysctl(CTL, sizeof...(S), buffer, &siz, nullptr, 0);\n+    if (ret == 0 || (ret == -1 && errno == ENOMEM)) {\n+        hasher << sizeof(CTL);\n+        hasher.Write((const unsigned char*)CTL, sizeof(CTL));\n+        if (siz > sizeof(buffer)) siz = sizeof(buffer);\n+        hasher << siz;\n+        hasher.Write(buffer, siz);\n+    }\n+}\n+#endif\n \n } // namespace\n \n@@ -217,6 +246,30 @@ void RandAddDynamicEnv(CSHA512& hasher)\n     AddFile(hasher, \"/proc/self/status\");\n #endif\n \n+#if HAVE_SYSCTL\n+#  ifdef CTL_KERN\n+#    if defined(KERN_PROC) && defined(KERN_PROC_ALL)\n+    AddSysctl<CTL_KERN, KERN_PROC, KERN_PROC_ALL>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_HW\n+#    ifdef HW_DISKSTATS\n+    AddSysctl<CTL_HW, HW_DISKSTATS>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_VM\n+#    ifdef VM_LOADAVG\n+    AddSysctl<CTL_VM, VM_LOADAVG>(hasher);\n+#    endif\n+#    ifdef VM_TOTAL\n+    AddSysctl<CTL_VM, VM_TOTAL>(hasher);\n+#    endif\n+#    ifdef VM_METER\n+    AddSysctl<CTL_VM, VM_METER>(hasher);\n+#    endif\n+#  endif\n+#endif\n+\n     // Stack and heap location\n     void* addr = malloc(4097);\n     hasher << &addr << addr;\n@@ -299,8 +352,81 @@ void RandAddStaticEnv(CSHA512& hasher)\n     AddFile(hasher, \"/etc/resolv.conf\");\n     AddFile(hasher, \"/etc/timezone\");\n     AddFile(hasher, \"/etc/localtime\");\n+#endif\n \n-    /* TODO: sysctl's for OSX to fetch information not available from /proc */\n+    // For MacOS/BSDs, gather data through sysctl instead of /proc. Not all of these\n+    // will exist on every system.\n+#if HAVE_SYSCTL\n+#  ifdef CTL_HW\n+#    ifdef HW_MACHINE\n+    AddSysctl<CTL_HW, HW_MACHINE>(hasher);\n+#    endif\n+#    ifdef HW_MODEL\n+    AddSysctl<CTL_HW, HW_MODEL>(hasher);\n+#    endif\n+#    ifdef HW_NCPU\n+    AddSysctl<CTL_HW, HW_NCPU>(hasher);\n+#    endif\n+#    ifdef HW_PHYSMEM\n+    AddSysctl<CTL_HW, HW_PHYSMEM>(hasher);\n+#    endif\n+#    ifdef HW_USERMEM\n+    AddSysctl<CTL_HW, HW_USERMEM>(hasher);\n+#    endif\n+#    ifdef HW_MACHINE_ARCH\n+    AddSysctl<CTL_HW, HW_MACHINE_ARCH>(hasher);\n+#    endif\n+#    ifdef HW_REALMEM\n+    AddSysctl<CTL_HW, HW_REALMEM>(hasher);\n+#    endif\n+#    ifdef HW_CPU_FREQ\n+    AddSysctl<CTL_HW, HW_CPU_FREQ>(hasher);\n+#    endif\n+#    ifdef HW_BUS_FREQ\n+    AddSysctl<CTL_HW, HW_BUS_FREQ>(hasher);\n+#    endif\n+#    ifdef HW_CACHELINE\n+    AddSysctl<CTL_HW, HW_CACHELINE>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_KERN\n+#    ifdef KERN_BOOTFILE\n+     AddSysctl<CTL_KERN, KERN_BOOTFILE>(hasher);\n+#    endif\n+#    ifdef KERN_BOOTTIME\n+     AddSysctl<CTL_KERN, KERN_BOOTTIME>(hasher);\n+#    endif\n+#    ifdef KERN_CLOCKRATE\n+     AddSysctl<CTL_KERN, KERN_CLOCKRATE>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTID\n+     AddSysctl<CTL_KERN, KERN_HOSTID>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTUUID\n+     AddSysctl<CTL_KERN, KERN_HOSTUUID>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTNAME\n+     AddSysctl<CTL_KERN, KERN_HOSTNAME>(hasher);\n+#    endif\n+#    ifdef KERN_OSRELDATE\n+     AddSysctl<CTL_KERN, KERN_OSRELDATE>(hasher);\n+#    endif\n+#    ifdef KERN_OSRELEASE\n+     AddSysctl<CTL_KERN, KERN_OSRELEASE>(hasher);\n+#    endif\n+#    ifdef KERN_OSREV\n+     AddSysctl<CTL_KERN, KERN_OSREV>(hasher);\n+#    endif\n+#    ifdef KERN_OSTYPE\n+     AddSysctl<CTL_KERN, KERN_OSTYPE>(hasher);\n+#    endif\n+#    ifdef KERN_POSIX1\n+     AddSysctl<CTL_KERN, KERN_OSREV>(hasher);\n+#    endif\n+#    ifdef KERN_VERSION\n+     AddSysctl<CTL_KERN, KERN_VERSION>(hasher);\n+#    endif\n+#  endif\n #endif\n \n     // Env variables"
      }
    ]
  },
  {
    "sha": "11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTc5M2VhMjJlMTI5OGZhN2QzYjQ0YTViNmQyMDgzMDI0OGQ4Y2Y0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-27T01:17:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:26Z"
      },
      "message": "Feed CPUID data into RNG",
      "tree": {
        "sha": "a2966747e094a86d3760314b0da81d3b4a9b6aff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2966747e094a86d3760314b0da81d3b4a9b6aff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11793ea22e1298fa7d3b44a5b6d20830248d8cf4/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a81c494b4c9a8c2f1a319a03375826f12863706f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a81c494b4c9a8c2f1a319a03375826f12863706f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a81c494b4c9a8c2f1a319a03375826f12863706f"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bfe57dafe50cb371ad1c6d3bd65fcd5cc926946a",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/11793ea22e1298fa7d3b44a5b6d20830248d8cf4/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/11793ea22e1298fa7d3b44a5b6d20830248d8cf4/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
        "patch": "@@ -10,6 +10,7 @@\n #include <randomenv.h>\n \n #include <clientversion.h>\n+#include <compat/cpuid.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #include <util/time.h> // for GetTime()\n@@ -179,6 +180,36 @@ void AddSysctl(CSHA512& hasher)\n }\n #endif\n \n+#ifdef HAVE_GETCPUID\n+void inline AddCPUID(CSHA512& hasher, uint32_t leaf, uint32_t subleaf, uint32_t& ax, uint32_t& bx, uint32_t& cx, uint32_t& dx)\n+{\n+    GetCPUID(leaf, subleaf, ax, bx, cx, dx);\n+    hasher << leaf << subleaf << ax << bx << cx << dx;\n+}\n+\n+void AddAllCPUID(CSHA512& hasher)\n+{\n+    uint32_t ax, bx, cx, dx;\n+    // Iterate over all standard leaves\n+    AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n+    uint32_t max = ax;\n+    for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        for (uint32_t subleaf = 0;; ++subleaf) {\n+            AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n+            // Iterate over subleaves for leaf 4, 11, 13\n+            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n+            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n+            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+        }\n+    }\n+    // Iterate over all extended leaves\n+    AddCPUID(hasher, 0x80000000, 0, ax, bx, cx, dx); // Returns max extended leaf in ax\n+    uint32_t ext_max = ax;\n+    for (uint32_t leaf = 0x80000001; leaf <= ext_max; ++leaf) {\n+        AddCPUID(hasher, leaf, 0, ax, bx, cx, dx);\n+    }\n+}\n+#endif\n } // namespace\n \n void RandAddDynamicEnv(CSHA512& hasher)\n@@ -298,6 +329,10 @@ void RandAddStaticEnv(CSHA512& hasher)\n     // Bitcoin client version\n     hasher << CLIENT_VERSION;\n \n+#ifdef HAVE_GETCPUID\n+    AddAllCPUID(hasher);\n+#endif\n+\n     // Memory locations\n     hasher << &hasher << &RandAddStaticEnv << &malloc << &errno << &environ;\n "
      }
    ]
  },
  {
    "sha": "483b94292e89587e5ab40a30b8a90e2f56e847f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ODNiOTQyOTJlODk1ODdlNWFiNDBhMzBiOGE5MGUyZjU2ZTg0N2Yz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-27T19:36:05Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:26Z"
      },
      "message": "Add information gathered through getauxval()\n\nSuggested by Wladimir van der Laan.",
      "tree": {
        "sha": "cc2844001bfc7610bf08b807f51728a208981c0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc2844001bfc7610bf08b807f51728a208981c0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/483b94292e89587e5ab40a30b8a90e2f56e847f3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/483b94292e89587e5ab40a30b8a90e2f56e847f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/483b94292e89587e5ab40a30b8a90e2f56e847f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/483b94292e89587e5ab40a30b8a90e2f56e847f3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/11793ea22e1298fa7d3b44a5b6d20830248d8cf4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/11793ea22e1298fa7d3b44a5b6d20830248d8cf4"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 25,
      "deletions": 0
    },
    "files": [
      {
        "sha": "05be090d9326adf7b601ff6eb6cd87c6af23cf5a",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/483b94292e89587e5ab40a30b8a90e2f56e847f3/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/483b94292e89587e5ab40a30b8a90e2f56e847f3/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=483b94292e89587e5ab40a30b8a90e2f56e847f3",
        "patch": "@@ -57,6 +57,9 @@\n #include <sys/vmmeter.h>\n #endif\n #endif\n+#ifdef __linux__\n+#include <sys/auxv.h>\n+#endif\n \n //! Necessary on some platforms\n extern char** environ;\n@@ -329,6 +332,28 @@ void RandAddStaticEnv(CSHA512& hasher)\n     // Bitcoin client version\n     hasher << CLIENT_VERSION;\n \n+#ifdef __linux__\n+    // Information available through getauxval()\n+#  ifdef AT_HWCAP\n+    hasher << getauxval(AT_HWCAP);\n+#  endif\n+#  ifdef AT_HWCAP2\n+    hasher << getauxval(AT_HWCAP2);\n+#  endif\n+#  ifdef AT_RANDOM\n+    const unsigned char* random_aux = (const unsigned char*)getauxval(AT_RANDOM);\n+    if (random_aux) hasher.Write(random_aux, 16);\n+#  endif\n+#  ifdef AT_PLATFORM\n+    const char* platform_str = (const char*)getauxval(AT_PLATFORM);\n+    if (platform_str) hasher.Write((const unsigned char*)platform_str, strlen(platform_str) + 1);\n+#  endif\n+#  ifdef AT_EXECFN\n+    const char* exec_str = (const char*)getauxval(AT_EXECFN);\n+    if (exec_str) hasher.Write((const unsigned char*)exec_str, strlen(exec_str) + 1);\n+#  endif\n+#endif // __linux__\n+\n #ifdef HAVE_GETCPUID\n     AddAllCPUID(hasher);\n #endif"
      }
    ]
  },
  {
    "sha": "d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjFmMmJiMDc2ZDhmMTc4NDBhOGU3OWYxNTgzZDdmNmUzZTZkMDlh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-29T18:55:59Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:26Z"
      },
      "message": "Run background seeding periodically instead of unpredictably\n\n* Instead of calling RandAddSeedSleep anytime the scheduler goes\n  idle, call its replacement (RandAddSeedPeriodic) just once per\n  minute. This has better guarantees of actually being run, and\n  helps limit how frequently the dynamic env data is gathered.\n* Since this code runs once per minute regardless now, we no\n  longer need to keep track of the last time strengthening was\n  run; just do it always.\n* Make strengthening time context dependent (100 ms at startup,\n  10 ms once per minute afterwards).",
      "tree": {
        "sha": "e36bc22346ff81282bc46dffea7ba9313fc49e0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e36bc22346ff81282bc46dffea7ba9313fc49e0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "483b94292e89587e5ab40a30b8a90e2f56e847f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/483b94292e89587e5ab40a30b8a90e2f56e847f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/483b94292e89587e5ab40a30b8a90e2f56e847f3"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 24,
      "deletions": 33
    },
    "files": [
      {
        "sha": "2abdf7dbc404f3d30201ce0672146319da49d285",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "patch": "@@ -1258,6 +1258,11 @@ bool AppInitMain(NodeContext& node)\n     CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(std::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, 60000);\n+\n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n     GetMainSignals().RegisterWithMempoolSignals(mempool);\n "
      },
      {
        "sha": "2847aacf6f3a0046e4ea7d2193b0a2f2e4946c77",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 29,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "patch": "@@ -507,40 +507,28 @@ static void SeedSlow(CSHA512& hasher) noexcept\n }\n \n /** Extract entropy from rng, strengthen it, and feed it into hasher. */\n-static void SeedStrengthen(CSHA512& hasher, RNGState& rng) noexcept\n+static void SeedStrengthen(CSHA512& hasher, RNGState& rng, int microseconds) noexcept\n {\n-    static std::atomic<int64_t> last_strengthen{0};\n-    int64_t last_time = last_strengthen.load();\n-    int64_t current_time = GetTimeMicros();\n-    if (current_time > last_time + 60000000) { // Only run once a minute\n-        // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n-        unsigned char strengthen_seed[32];\n-        rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n-        // Strengthen it for 10ms (100ms on first run), and feed it into hasher.\n-        Strengthen(strengthen_seed, last_time == 0 ? 100000 : 10000, hasher);\n-        last_strengthen = current_time;\n-    }\n+    // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n+    unsigned char strengthen_seed[32];\n+    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n+    // Strengthen the seed, and feed it into hasher.\n+    Strengthen(strengthen_seed, microseconds, hasher);\n }\n \n-static void SeedSleep(CSHA512& hasher, RNGState& rng)\n+static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n {\n     // Everything that the 'fast' seeder includes\n     SeedFast(hasher);\n \n     // High-precision timestamp\n     SeedTimestamp(hasher);\n \n-    // Sleep for 1ms\n-    MilliSleep(1);\n-\n-    // High-precision timestamp after sleeping (as we commit to both the time before and after, this measures the delay)\n-    SeedTimestamp(hasher);\n-\n-    // Dynamic environment data (performance monitoring, ...; once every 10 minutes)\n+    // Dynamic environment data (performance monitoring, ...)\n     RandAddDynamicEnv(hasher);\n \n-    // Strengthen every minute\n-    SeedStrengthen(hasher, rng);\n+    // Strengthen for 10 ms\n+    SeedStrengthen(hasher, rng, 10000);\n }\n \n static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n@@ -551,20 +539,20 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     // Everything that the 'slow' seeder includes.\n     SeedSlow(hasher);\n \n-    // Dynamic environment data\n+    // Dynamic environment data (performance monitoring, ...)\n     RandAddDynamicEnv(hasher);\n \n     // Static environment data\n     RandAddStaticEnv(hasher);\n \n-    // Strengthen\n-    SeedStrengthen(hasher, rng);\n+    // Strengthen for 100 ms\n+    SeedStrengthen(hasher, rng, 100000);\n }\n \n enum class RNGLevel {\n     FAST, //!< Automatically called by GetRandBytes\n     SLOW, //!< Automatically called by GetStrongRandBytes\n-    SLEEP, //!< Called by RandAddSeedSleep()\n+    PERIODIC, //!< Called by RandAddPeriodic()\n };\n \n static void ProcRand(unsigned char* out, int num, RNGLevel level)\n@@ -582,8 +570,8 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n     case RNGLevel::SLOW:\n         SeedSlow(hasher);\n         break;\n-    case RNGLevel::SLEEP:\n-        SeedSleep(hasher, rng);\n+    case RNGLevel::PERIODIC:\n+        SeedPeriodic(hasher, rng);\n         break;\n     }\n \n@@ -606,7 +594,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n-void RandAddSeedSleep() { ProcRand(nullptr, 0, RNGLevel::SLEEP); }\n+void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n bool g_mock_deterministic_tests{false};\n "
      },
      {
        "sha": "7768f9d3c50ac19eff8e32fbcbf3316bf508a998",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "patch": "@@ -84,11 +84,11 @@ uint256 GetRandHash() noexcept;\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n \n /**\n- * Sleep for 1ms, gather entropy from various sources, and feed them to the PRNG state.\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void RandAddSeedSleep();\n+void RandAddPeriodic();\n \n /**\n  * Fast randomness source. This is seeded once with secure random data, but"
      },
      {
        "sha": "07a54335ac8991cb09e446467d583665aa4f4805",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "patch": "@@ -41,8 +41,6 @@ void CScheduler::serviceQueue()\n         try {\n             if (!shouldStop() && taskQueue.empty()) {\n                 reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n-                // Use this chance to get more entropy\n-                RandAddSeedSleep();\n             }\n             while (!shouldStop() && taskQueue.empty()) {\n                 // Wait until there is something to do."
      }
    ]
  },
  {
    "sha": "64e1e022cedf6776c5dffd488ca2e766adca5dc3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NGUxZTAyMmNlZGY2Nzc2YzVkZmZkNDg4Y2EyZTc2NmFkY2E1ZGMz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-10-29T19:35:06Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:26Z"
      },
      "message": "Use thread-safe atomic in perfmon seeder\n\nAlso switch to chrono based types.",
      "tree": {
        "sha": "9391261422d31946cf184a5fbb599649b48625aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9391261422d31946cf184a5fbb599649b48625aa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64e1e022cedf6776c5dffd488ca2e766adca5dc3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e1e022cedf6776c5dffd488ca2e766adca5dc3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/64e1e022cedf6776c5dffd488ca2e766adca5dc3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e1e022cedf6776c5dffd488ca2e766adca5dc3/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "603c88eaabe1333e4418e2296d4e8f4a363d44fd",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/64e1e022cedf6776c5dffd488ca2e766adca5dc3/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/64e1e022cedf6776c5dffd488ca2e766adca5dc3/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=64e1e022cedf6776c5dffd488ca2e766adca5dc3",
        "patch": "@@ -19,6 +19,7 @@\n #endif\n \n #include <algorithm>\n+#include <atomic>\n #include <chrono>\n #include <climits>\n #include <thread>\n@@ -73,10 +74,11 @@ void RandAddSeedPerfmon(CSHA512& hasher)\n     // Seed with the entire set of perfmon data\n \n     // This can take up to 2 seconds, so only do it every 10 minutes\n-    static int64_t nLastPerfmon;\n-    if (GetTime() < nLastPerfmon + 10 * 60)\n-        return;\n-    nLastPerfmon = GetTime();\n+    static std::atomic<std::chrono::seconds> last_perfmon{std::chrono::seconds{0}};\n+    auto last_time = last_perfmon.load();\n+    auto current_time = GetTime<std::chrono::seconds>();\n+    if (current_time < last_time + std::chrono::minutes{10}) return;\n+    last_perfmon = current_time;\n \n     std::vector<unsigned char> vData(250000, 0);\n     long ret = 0;"
      }
    ]
  },
  {
    "sha": "d1c02775aa74a0610809ac54bb241ddad61d2d8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWMwMjc3NWFhNzRhMDYxMDgwOWFjNTRiYjI0MWRkYWQ2MWQyZDhj",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-05T18:54:20Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-12T23:35:26Z"
      },
      "message": "Report amount of data gathered from environment",
      "tree": {
        "sha": "13e7fe1e6c46f0870f0e308c72d7957717be95fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/13e7fe1e6c46f0870f0e308c72d7957717be95fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1c02775aa74a0610809ac54bb241ddad61d2d8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c02775aa74a0610809ac54bb241ddad61d2d8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c02775aa74a0610809ac54bb241ddad61d2d8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c02775aa74a0610809ac54bb241ddad61d2d8c/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "64e1e022cedf6776c5dffd488ca2e766adca5dc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/64e1e022cedf6776c5dffd488ca2e766adca5dc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/64e1e022cedf6776c5dffd488ca2e766adca5dc3"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fc7dd1b87eaae4f37a733379d12250f2f5b1fc77",
        "filename": "src/crypto/sha512.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1c02775aa74a0610809ac54bb241ddad61d2d8c/src/crypto/sha512.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1c02775aa74a0610809ac54bb241ddad61d2d8c/src/crypto/sha512.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha512.h?ref=d1c02775aa74a0610809ac54bb241ddad61d2d8c",
        "patch": "@@ -23,6 +23,7 @@ class CSHA512\n     CSHA512& Write(const unsigned char* data, size_t len);\n     void Finalize(unsigned char hash[OUTPUT_SIZE]);\n     CSHA512& Reset();\n+    uint64_t Size() const { return bytes; }\n };\n \n #endif // BITCOIN_CRYPTO_SHA512_H"
      },
      {
        "sha": "3e6398f7b49e3b580cd8e3e9631762d7a23fe226",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1c02775aa74a0610809ac54bb241ddad61d2d8c/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1c02775aa74a0610809ac54bb241ddad61d2d8c/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=d1c02775aa74a0610809ac54bb241ddad61d2d8c",
        "patch": "@@ -525,7 +525,9 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n     SeedTimestamp(hasher);\n \n     // Dynamic environment data (performance monitoring, ...)\n+    auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n+    LogPrintf(\"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 10 ms\n     SeedStrengthen(hasher, rng, 10000);\n@@ -540,10 +542,12 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     SeedSlow(hasher);\n \n     // Dynamic environment data (performance monitoring, ...)\n+    auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n \n     // Static environment data\n     RandAddStaticEnv(hasher);\n+    LogPrintf(\"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 100 ms\n     SeedStrengthen(hasher, rng, 100000);"
      }
    ]
  },
  {
    "sha": "edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGI2Yjc2OGE0MTg1YTRhYWE2MjgxZWU1MGE2NTM4Zjc0MjZjYjFl",
    "commit": {
      "author": {
        "name": "NullFunctor",
        "email": "support@bitcoinv.org",
        "date": "2019-11-12T03:48:51Z"
      },
      "committer": {
        "name": "NullFunctor",
        "email": "support@bitcoinv.org",
        "date": "2019-11-12T23:59:52Z"
      },
      "message": "fix uninitialized variable nMinerConfirmationWindow\n\nfix uninitialized variable hard code the MinBIP9WarningHeight\n\nfix uninitialized var hard code the MinBIP9WarningHeight instead",
      "tree": {
        "sha": "1d65e87ac0342884bb14ca6f0739085d24c2f5a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d65e87ac0342884bb14ca6f0739085d24c2f5a4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edb6b768a4185a4aaa6281ee50a6538f7426cb1e/comments",
    "author": {
      "login": "AlgorithmicDragon",
      "id": 63198764,
      "node_id": "MDQ6VXNlcjYzMTk4NzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/63198764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlgorithmicDragon",
      "html_url": "https://github.com/AlgorithmicDragon",
      "followers_url": "https://api.github.com/users/AlgorithmicDragon/followers",
      "following_url": "https://api.github.com/users/AlgorithmicDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlgorithmicDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlgorithmicDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlgorithmicDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/AlgorithmicDragon/orgs",
      "repos_url": "https://api.github.com/users/AlgorithmicDragon/repos",
      "events_url": "https://api.github.com/users/AlgorithmicDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlgorithmicDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AlgorithmicDragon",
      "id": 63198764,
      "node_id": "MDQ6VXNlcjYzMTk4NzY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/63198764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlgorithmicDragon",
      "html_url": "https://github.com/AlgorithmicDragon",
      "followers_url": "https://api.github.com/users/AlgorithmicDragon/followers",
      "following_url": "https://api.github.com/users/AlgorithmicDragon/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlgorithmicDragon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlgorithmicDragon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlgorithmicDragon/subscriptions",
      "organizations_url": "https://api.github.com/users/AlgorithmicDragon/orgs",
      "repos_url": "https://api.github.com/users/AlgorithmicDragon/repos",
      "events_url": "https://api.github.com/users/AlgorithmicDragon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlgorithmicDragon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a1cb858ef566bb590467cfcffa0ede53fe9a451",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edb6b768a4185a4aaa6281ee50a6538f7426cb1e/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edb6b768a4185a4aaa6281ee50a6538f7426cb1e/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
        "patch": "@@ -71,7 +71,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n         consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n-        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -178,7 +178,7 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n         consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n-        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      }
    ]
  },
  {
    "sha": "cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDZjYjk3NDVlMTNhNjJlMTMwYjExZjc4YTEzYmNjMWQ0MjRiMDVl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-13T09:20:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-13T09:20:30Z"
      },
      "message": "Merge #17409: build: Avoid hardcoded libfaketime dir in gitian\n\n333362991c5219e6d9ede5fa54328bcbb0277cf2 doc: Explain $LIB in LD_PRELOAD in gitian descriptors (MarcoFalke)\nfab9850ef4a76e4f09278909a2865e5175661653 scripted-diff: Avoid hardcoded libfaketime dir in gitian (MarcoFalke)\n\nPull request description:\n\n  Without this gitian prints warnings for me:\n\n  ```\n  ERROR: ld.so: object '/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.\n  ```\n\n  ```\n  $ ls /usr/lib/aarch64-linux-gnu/faketime/libfaketime.so.1\n  /usr/lib/aarch64-linux-gnu/faketime/libfaketime.so.1\n  ```\n\nACKs for top commit:\n  laanwj:\n    ACK 333362991c5219e6d9ede5fa54328bcbb0277cf2\n\nTree-SHA512: 3e7c4471b69c2ae38c29d0cc0db8b9eae0912085299d7f5ac67eeb4b6a2fdc7eb23d806eeeae0b0c2da22d6d1ba82513cab23652876b97aada9928b2c7d38e7e",
      "tree": {
        "sha": "901574fe9bc2c4dfaa86e017aec953a004cd742d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/901574fe9bc2c4dfaa86e017aec953a004cd742d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3Lyt4ACgkQHkrtYphs\n0l1sgwf7BpyI395fEiL18ZchGk8BCyCKITozCrzzkDxTrzZod+nbLVEfUG4juWNy\nd5jJaLSN4qUgjYw9IIbqiET1cveWqNjJ9W3ZdtS8GJdEB18iJz75xY8ncHVcNgZo\nCDYhCoKEcBqgHYYqvonWBVrZkPmXz6FoODCQifIV3Y65LXlwAeC3quxIg7jnpWQJ\nXJaBHj76Zlzxlz98M05Hzm9AohyK6V4J1Xy31RDyLMJxd/ASXo3Sbv0lb6WWj2su\n35gG+k5JgvTh/HPm+st5idhVr1a5olsmEhza41GWWTBlqmiIsevx4W8EWDfFvbM8\nrfebPnZMMNqLHALy40iv42jimtvQhA==\n=mEkC\n-----END PGP SIGNATURE-----",
        "payload": "tree 901574fe9bc2c4dfaa86e017aec953a004cd742d\nparent 8237889e8d0fb7542669a9098516c96da91913f0\nparent 333362991c5219e6d9ede5fa54328bcbb0277cf2\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1573636825 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1573636830 +0100\n\nMerge #17409: build: Avoid hardcoded libfaketime dir in gitian\n\n333362991c5219e6d9ede5fa54328bcbb0277cf2 doc: Explain $LIB in LD_PRELOAD in gitian descriptors (MarcoFalke)\nfab9850ef4a76e4f09278909a2865e5175661653 scripted-diff: Avoid hardcoded libfaketime dir in gitian (MarcoFalke)\n\nPull request description:\n\n  Without this gitian prints warnings for me:\n\n  ```\n  ERROR: ld.so: object '/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' from LD_PRELOAD cannot be preloaded (cannot open shared object file): ignored.\n  ```\n\n  ```\n  $ ls /usr/lib/aarch64-linux-gnu/faketime/libfaketime.so.1\n  /usr/lib/aarch64-linux-gnu/faketime/libfaketime.so.1\n  ```\n\nACKs for top commit:\n  laanwj:\n    ACK 333362991c5219e6d9ede5fa54328bcbb0277cf2\n\nTree-SHA512: 3e7c4471b69c2ae38c29d0cc0db8b9eae0912085299d7f5ac67eeb4b6a2fdc7eb23d806eeeae0b0c2da22d6d1ba82513cab23652876b97aada9928b2c7d38e7e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8237889e8d0fb7542669a9098516c96da91913f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8237889e8d0fb7542669a9098516c96da91913f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8237889e8d0fb7542669a9098516c96da91913f0"
      },
      {
        "sha": "333362991c5219e6d9ede5fa54328bcbb0277cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/333362991c5219e6d9ede5fa54328bcbb0277cf2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/333362991c5219e6d9ede5fa54328bcbb0277cf2"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 16,
      "deletions": 13
    },
    "files": [
      {
        "sha": "c5b4ac1e83d2240775c9187d4535a156f54f0275",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "patch": "@@ -5,7 +5,7 @@ distro: \"ubuntu\"\n suites:\n - \"bionic\"\n architectures:\n-- \"amd64\"\n+- \"linux64\"\n packages:\n - \"curl\"\n - \"g++-aarch64-linux-gnu\"\n@@ -59,11 +59,12 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -77,7 +78,7 @@ script: |\n         then\n             echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n             echo \"REAL=\\`which -a ${i}-${prog}-8 | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-            echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+            echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n             echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n             chmod +x ${WRAP_DIR}/${i}-${prog}"
      },
      {
        "sha": "9957fc0514df8fac6d52745b9f0ee6acdeead33c",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "patch": "@@ -4,7 +4,7 @@ distro: \"ubuntu\"\n suites:\n - \"bionic\"\n architectures:\n-- \"amd64\"\n+- \"linux64\"\n packages:\n - \"faketime\"\n remotes:\n@@ -24,7 +24,7 @@ script: |\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}"
      },
      {
        "sha": "79b1b22cdf84ab4409f35d72c9077f3c35851cbc",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "patch": "@@ -5,7 +5,7 @@ distro: \"ubuntu\"\n suites:\n - \"bionic\"\n architectures:\n-- \"amd64\"\n+- \"linux64\"\n packages:\n - \"ca-certificates\"\n - \"curl\"\n@@ -55,11 +55,12 @@ script: |\n \n   export ZERO_AR_DATE=1\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -71,7 +72,7 @@ script: |\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}"
      },
      {
        "sha": "8076fe13af5ca98b6a61a226491c828046909343",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "patch": "@@ -4,7 +4,7 @@ distro: \"ubuntu\"\n suites:\n - \"bionic\"\n architectures:\n-- \"amd64\"\n+- \"linux64\"\n packages:\n # Once osslsigncode supports openssl 1.1, we can change this back to libssl-dev\n - \"libssl1.0-dev\""
      },
      {
        "sha": "4259a10e14758dfdaf04382b33dc21eac543b331",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd6cb9745e13a62e130b11f78a13bcc1d424b05e/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "patch": "@@ -5,7 +5,7 @@ distro: \"ubuntu\"\n suites:\n - \"bionic\"\n architectures:\n-- \"amd64\"\n+- \"linux64\"\n packages:\n - \"curl\"\n - \"g++\"\n@@ -48,11 +48,12 @@ script: |\n     mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n   fi\n \n+  # Use $LIB in LD_PRELOAD to avoid hardcoding the dir (See `man ld.so`)\n   function create_global_faketime_wrappers {\n   for prog in ${FAKETIME_PROGS}; do\n     echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${prog}\n     echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n+    echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${prog}\n     echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${prog}\n     echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n     chmod +x ${WRAP_DIR}/${prog}\n@@ -64,7 +65,7 @@ script: |\n     for prog in ${FAKETIME_HOST_PROGS}; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n         chmod +x ${WRAP_DIR}/${i}-${prog}\n@@ -79,7 +80,7 @@ script: |\n     for prog in gcc g++; do\n         echo '#!/usr/bin/env bash' > ${WRAP_DIR}/${i}-${prog}\n         echo \"REAL=\\`which -a ${i}-${prog}-posix | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n+        echo \"export LD_PRELOAD='/usr/\\$LIB/faketime/libfaketime.so.1'\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export FAKETIME=\\\"$1\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n         echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}"
      }
    ]
  },
  {
    "sha": "d604b4cc8c112a38976c4662cbdc3217a0e5b370",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjA0YjRjYzhjMTEyYTM4OTc2YzQ2NjJjYmRjMzIxN2EwZTViMzcw",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-12T16:25:57Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-13T14:46:09Z"
      },
      "message": "tests: Update valgrind suppressions",
      "tree": {
        "sha": "537785027996bbf3700e14509821ec6cd264bc5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/537785027996bbf3700e14509821ec6cd264bc5c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d604b4cc8c112a38976c4662cbdc3217a0e5b370",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d604b4cc8c112a38976c4662cbdc3217a0e5b370",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d604b4cc8c112a38976c4662cbdc3217a0e5b370",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d604b4cc8c112a38976c4662cbdc3217a0e5b370/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89e93135aedf984f7a98771f047e2beb6cdbdb8e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89e93135aedf984f7a98771f047e2beb6cdbdb8e"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 70,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3c485c1df6e1e2ff9a4389038fce2f1bc95585af",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 70,
        "deletions": 1,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d604b4cc8c112a38976c4662cbdc3217a0e5b370/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d604b4cc8c112a38976c4662cbdc3217a0e5b370/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=d604b4cc8c112a38976c4662cbdc3217a0e5b370",
        "patch": "@@ -6,7 +6,14 @@\n # Example use:\n # $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n # $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n+#       --show-leak-kinds=all src/test/test_bitcoin\n+#\n+# To create suppressions for found issues, use the --gen-suppressions=all option:\n+# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n+#       --show-leak-kinds=all --gen-suppressions=all --show-reachable=yes \\\n+#       --error-limit=no src/test/test_bitcoin\n+#\n+# Note that suppressions may depend on OS and/or library versions.\n {\n    Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n    Memcheck:Leak\n@@ -26,6 +33,14 @@\n    obj:*/libdb_cxx-*.so\n    fun:__log_put_record\n }\n+{\n+   Suppress libdb warning\n+   Memcheck:Param\n+   pwrite64(buf)\n+   fun:pwrite\n+   fun:__os_io\n+   obj:*/libdb_cxx-*.so\n+}\n {\n    Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n    Memcheck:Leak\n@@ -41,3 +56,57 @@\n    ...\n    fun:_ZN7leveldbL14InitDefaultEnvEv\n }\n+{\n+   Suppress wcsnrtombs glibc SSE4 warning (could be related: https://stroika.atlassian.net/browse/STK-626)\n+   Memcheck:Addr16\n+   fun:__wcsnlen_sse4_1\n+   fun:wcsnrtombs\n+}\n+{\n+   Suppress boost::filesystem warning (fixed in boost 1.70: https://github.com/boostorg/filesystem/commit/bbe9d1771e5d679b3f10c42a58fc81f7e8c024a9)\n+   Memcheck:Cond\n+   fun:_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE\n+   fun:_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE\n+   obj:*/libboost_filesystem.so.*\n+}\n+{\n+   Suppress boost::filesystem warning (could be related: https://stackoverflow.com/questions/9830182/function-boostfilesystemcomplete-being-reported-as-possible-memory-leak-by-v)\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_ZN5boost10filesystem8absoluteERKNS0_4pathES3_\n+}\n+{\n+   Suppress boost still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_M_construct_aux<char*>\n+   fun:_M_construct<char*>\n+   fun:basic_string\n+   fun:path\n+}\n+{\n+   Suppress LogInstance still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_Z11LogInstancev\n+}\n+{\n+   Suppress secp256k1_context_create still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:secp256k1_context_create\n+}\n+{\n+   Suppress BCLog::Logger::StartLogging() still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:_ZN5BCLog6Logger12StartLoggingEv\n+}"
      }
    ]
  },
  {
    "sha": "40537f090907f81ba885edb7dff1558382976912",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MDUzN2YwOTA5MDdmODFiYTg4NWVkYjdkZmYxNTU4MzgyOTc2OTEy",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-23T17:13:55Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-13T17:54:39Z"
      },
      "message": "[wallet] ListCoins: include watch-only for wallets without private keys\n\nThis makes them available in GUI coin selection.",
      "tree": {
        "sha": "fbe1a0e7974afb8aeb9ce13dede8b1cf3b055271",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fbe1a0e7974afb8aeb9ce13dede8b1cf3b055271"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40537f090907f81ba885edb7dff1558382976912",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3MQ18ACgkQV/+b28ww\nEAmgug//adFdx3nA8dji27zWd2PkFcAA/ThfK+iiFuuHTlMNE5U5TU8NdalR7K78\nHSdqfW76vi7VzDahr5nNfKmFgbqgqdHkxcDF7lTJdVRN+SSiL33oTy2gM2u9UHGN\nICZJrMy64RnU8bJVMJY5hYfloPhshqBZoWFjR5odxJpVe596ajRtRNXN+GLg/49o\nautdV068trLAs1YqSY8aEMossyynLv0EjWhj2XnMKhlTHjP691NVn4sPUudoAufO\niyLYkR2cuL5lWp+k1nWXxZCcNnobyugdNsJnzRfTdzaYHs3EmUNI1Zv0YA+7OdQ8\nOFUzFXPb9s3vaFFj1gXRbCzVyFEan4qGV+JUejblqdIZsIQ+qwEAXLq/+puvJL2F\n2h1LxN35i57hqTfcgsCMVu5hXb2LDQmNw+8HGmO8M0eP+/DjkmjPm5BiXZm/pS4u\ni8jRICq3iYggY54aLTLCKkQ26W82QMNTB+8Y+3cuFppOJ2vka9/iLNZJjMtgEeG2\n9rVvV7blnKOA7Dk2vpC6ZtcoElqv69zPO9NScSLNUfzPO1WJ+CO3bAgPwL0VJ2C1\nQxU2Wlbc4jFZpHovBrN+N/faQhbXzWtRnNeHVwUs242HxV6Oq6+4O7zUxaj1AbFm\nGQHePXCnnLXTI1Pn/DfHTotX6pGtm757eJcq/syD78HWnFYt+BE=\n=RvAe\n-----END PGP SIGNATURE-----",
        "payload": "tree fbe1a0e7974afb8aeb9ce13dede8b1cf3b055271\nparent 8021392b825c74312173f15eb937ba6d4aec3841\nauthor Sjors Provoost <sjors@sprovoost.nl> 1569258835 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1573667679 +0100\n\n[wallet] ListCoins: include watch-only for wallets without private keys\n\nThis makes them available in GUI coin selection.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40537f090907f81ba885edb7dff1558382976912",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40537f090907f81ba885edb7dff1558382976912",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40537f090907f81ba885edb7dff1558382976912/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8021392b825c74312173f15eb937ba6d4aec3841",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8021392b825c74312173f15eb937ba6d4aec3841",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8021392b825c74312173f15eb937ba6d4aec3841"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "058b70d85253687fce6e30876fc3279a89cd4523",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40537f090907f81ba885edb7dff1558382976912/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40537f090907f81ba885edb7dff1558382976912/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=40537f090907f81ba885edb7dff1558382976912",
        "patch": "@@ -2160,20 +2160,24 @@ std::map<CTxDestination, std::vector<COutput>> CWallet::ListCoins(interfaces::Ch\n \n     for (const COutput& coin : availableCoins) {\n         CTxDestination address;\n-        if (coin.fSpendable &&\n+        if ((coin.fSpendable || (IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && coin.fSolvable)) &&\n             ExtractDestination(FindNonChangeParentOutput(*coin.tx->tx, coin.i).scriptPubKey, address)) {\n             result[address].emplace_back(std::move(coin));\n         }\n     }\n \n     std::vector<COutPoint> lockedCoins;\n     ListLockedCoins(lockedCoins);\n+    // Include watch-only for wallets without private keys\n+    const bool include_watch_only = IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n+    const isminetype is_mine_filter = include_watch_only ? ISMINE_WATCH_ONLY : ISMINE_SPENDABLE;\n     for (const COutPoint& output : lockedCoins) {\n         auto it = mapWallet.find(output.hash);\n         if (it != mapWallet.end()) {\n             int depth = it->second.GetDepthInMainChain();\n             if (depth >= 0 && output.n < it->second.tx->vout.size() &&\n-                IsMine(it->second.tx->vout[output.n]) == ISMINE_SPENDABLE) {\n+                IsMine(it->second.tx->vout[output.n]) == is_mine_filter\n+            ) {\n                 CTxDestination address;\n                 if (ExtractDestination(FindNonChangeParentOutput(*it->second.tx, output.n).scriptPubKey, address)) {\n                     result[address].emplace_back("
      }
    ]
  },
  {
    "sha": "848f88920853724511387ca0b7ef652fa14ced71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDhmODg5MjA4NTM3MjQ1MTEzODdjYTBiN2VmNjUyZmExNGNlZDcx",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-23T17:20:22Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-13T17:54:40Z"
      },
      "message": "[gui] send: include watch-only\n\nFor wallets with WALLET_FLAG_DISABLE_PRIVATE_KEYS.",
      "tree": {
        "sha": "32575f225ef34e3808a20d7dd1ec5fc8aef4fa66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32575f225ef34e3808a20d7dd1ec5fc8aef4fa66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/848f88920853724511387ca0b7ef652fa14ced71",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3MQ2AACgkQV/+b28ww\nEAnldxAApbXk+dbmLf7ZiWLzE8j3nDila/KHORLP5GGhTqZtx+Lzl/hlCJ91dtfH\n8ozcuax8snpeTPdCMEWg6Z8wol0veeuI1Iccu4R3HyLZWbWEqJ3SobfyuertaMqy\n5AvQzXZRrMW4r9sNjN0fRJu5t6PL1/4kFNxX3Qoqt6zUfCMKg/RaI1AvjBWFCFxN\nQA0B2mkcIxDlNsgBZcl8VKvM7n83sIMxfRaQ3LL/2PQKhB+HdvncnmCfhEouENHR\n2mEkL0Kh84eJRrJMr5ZL7cm6j5Fm/XbOujxZTqIQSXhk9EHqf/+HVMGXCnca8lYa\nb7nf+pEHf8qwAd7KiIcloQfMUE7P3fYcz0iLlukaReEKATevT8fwCZOseWQD2bHE\nBOpDQEqODVROR0XMGYQKE+fVCag4CjhQIsBeAQdt28t883TKdJDJZaoc0zE3ahrr\nZBBc+gLYaCsYvk7WTiFB5IGd3yAQIIvWQnUlqUGbQbJpl0uVEbBeP+6661Om+X+8\ngp3IQSYUviIJxPKAAjjvf4eJ2qhCqbtvtyPvMjiLtWTsgFHcEcC4ASeCiGba29WG\n8WcpN6W3lys7CWWXcRel5tb+CNFhqp0TpEbOzPRjeyZiMV/enI8RHPLAbNu38yxF\n8VTjgO5F7TmDFnqodss2Yc2AATY9nR3Dxr82dbO1VSThzP0IiB8=\n=nq3h\n-----END PGP SIGNATURE-----",
        "payload": "tree 32575f225ef34e3808a20d7dd1ec5fc8aef4fa66\nparent 40537f090907f81ba885edb7dff1558382976912\nauthor Sjors Provoost <sjors@sprovoost.nl> 1569259222 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1573667680 +0100\n\n[gui] send: include watch-only\n\nFor wallets with WALLET_FLAG_DISABLE_PRIVATE_KEYS.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/848f88920853724511387ca0b7ef652fa14ced71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/848f88920853724511387ca0b7ef652fa14ced71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/848f88920853724511387ca0b7ef652fa14ced71/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40537f090907f81ba885edb7dff1558382976912",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40537f090907f81ba885edb7dff1558382976912",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40537f090907f81ba885edb7dff1558382976912"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b1631b57c9ddcb3765e2fd37203109f4294200ea",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/848f88920853724511387ca0b7ef652fa14ced71/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/848f88920853724511387ca0b7ef652fa14ced71/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=848f88920853724511387ca0b7ef652fa14ced71",
        "patch": "@@ -611,6 +611,9 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n         coin_control = *CoinControlDialog::coinControl();\n     }\n \n+    // Include watch-only for wallets without private key\n+    coin_control.fAllowWatchOnly = model->privateKeysDisabled();\n+\n     // Calculate available amount to send.\n     CAmount amount = model->wallet().getAvailableBalance(coin_control);\n     for (int i = 0; i < ui->entries->count(); ++i) {\n@@ -663,6 +666,8 @@ void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n     // Either custom fee will be used or if not selected, the confirmation target from dropdown box\n     ctrl.m_confirm_target = getConfTargetForIndex(ui->confTargetSelector->currentIndex());\n     ctrl.m_signal_bip125_rbf = ui->optInRBF->isChecked();\n+    // Include watch-only for wallets without private key\n+    ctrl.fAllowWatchOnly = model->privateKeysDisabled();\n }\n \n void SendCoinsDialog::updateSmartFeeLabel()"
      }
    ]
  },
  {
    "sha": "39465d545d521e66bb3accfa788aa94bffaf47eb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTQ2NWQ1NDVkNTIxZTY2YmIzYWNjZmE3ODhhYTk0YmZmYWY0N2Vi",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-23T18:25:10Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-13T17:54:40Z"
      },
      "message": "[wallet] add fillPSBT to interface",
      "tree": {
        "sha": "015361db70b9270b5007d9a43f148052664ec9b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/015361db70b9270b5007d9a43f148052664ec9b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39465d545d521e66bb3accfa788aa94bffaf47eb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3MQ2AACgkQV/+b28ww\nEAk0lA//c2FmighnvH9A/lMf69pL1hlyKiBM0O0eAzRhTI5KmD5lQDVQ3F6lEmvH\nZETXYOqBNWvHsrkbRgOOaMr/7stJlsCE9Qnu898wGPJ0Ik0NB9PvmTrtpAW+8QCG\niyCedUBMcRH1A5ALulahSGqCTA7QQww9Y9o+PioMKmYe2nR5arXwyZx9hx/gZRIw\nZpHaQZpMrIZkBNjGGlEI8/r3L8TKAwFwMLlAIy98pDqYZs5aHosL09COKyPO7PNn\nIXFE97Tk85C0GfJJMZmamCR+CG4tTC919OjwVe/MwNcN9CDqmZWGxf1lFrY/fZip\nJfCQRt2QMRD1Tgi8YDJXDCJPy0IJp/jMF8gDORI9ADSuOxptlM4xvrb7IZQWfp9K\nNovK/plZfLROc69gsMiVcJw1XeQG6dVa3i92teee8uvrSAHpDacagbePmW0zNhrN\nxZ/R658BYYvoSkZcYo7AtZHZSamvG/fLLqFjzToHcfjDF/GBdQUw93bdFsbn8LzW\nNr/TJXB5MVT6VTNGkXPIIdjIOt3wNrvv8RZrhIuRPc9+1bRTULubfXO2aTgxfBTM\narlNmM70hUg3cM9+eAj5RU/lMKbYbG+yP+iCZgjONP+erEFfwZ50BCFkkh4yi5vY\nK75XQ2X7HS4JIfhgff0hZM9HjeBJowm2ZQiWR8Ua805DTe0TVk4=\n=OpeK\n-----END PGP SIGNATURE-----",
        "payload": "tree 015361db70b9270b5007d9a43f148052664ec9b0\nparent 848f88920853724511387ca0b7ef652fa14ced71\nauthor Sjors Provoost <sjors@sprovoost.nl> 1569263110 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1573667680 +0100\n\n[wallet] add fillPSBT to interface\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39465d545d521e66bb3accfa788aa94bffaf47eb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39465d545d521e66bb3accfa788aa94bffaf47eb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39465d545d521e66bb3accfa788aa94bffaf47eb/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "848f88920853724511387ca0b7ef652fa14ced71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/848f88920853724511387ca0b7ef652fa14ced71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/848f88920853724511387ca0b7ef652fa14ced71"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 18,
      "deletions": 1
    },
    "files": [
      {
        "sha": "008902e8a6516763cda40b29daab229ab73cc75c",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39465d545d521e66bb3accfa788aa94bffaf47eb/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39465d545d521e66bb3accfa788aa94bffaf47eb/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=39465d545d521e66bb3accfa788aa94bffaf47eb",
        "patch": "@@ -18,8 +18,9 @@\n #include <wallet/feebumper.h>\n #include <wallet/fees.h>\n #include <wallet/ismine.h>\n-#include <wallet/rpcwallet.h>\n #include <wallet/load.h>\n+#include <wallet/psbtwallet.h>\n+#include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n \n #include <memory>\n@@ -343,6 +344,14 @@ class WalletImpl : public Wallet\n         }\n         return {};\n     }\n+    TransactionError fillPSBT(PartiallySignedTransaction& psbtx,\n+        bool& complete,\n+        int sighash_type = 1 /* SIGHASH_ALL */,\n+        bool sign = true,\n+        bool bip32derivs = false) override\n+    {\n+        return FillPSBT(m_wallet.get(), psbtx, complete, sighash_type, sign, bip32derivs);\n+    }\n     WalletBalances getBalances() override\n     {\n         const auto bal = m_wallet->GetBalance();"
      },
      {
        "sha": "93d3970585c9431a47215267971c5e569d477b4b",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39465d545d521e66bb3accfa788aa94bffaf47eb/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39465d545d521e66bb3accfa788aa94bffaf47eb/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=39465d545d521e66bb3accfa788aa94bffaf47eb",
        "patch": "@@ -14,6 +14,7 @@\n #include <functional>\n #include <map>\n #include <memory>\n+#include <psbt.h>\n #include <stdint.h>\n #include <string>\n #include <tuple>\n@@ -194,6 +195,13 @@ class Wallet\n         bool& in_mempool,\n         int& num_blocks) = 0;\n \n+    //! Fill PSBT.\n+    virtual TransactionError fillPSBT(PartiallySignedTransaction& psbtx,\n+        bool& complete,\n+        int sighash_type = 1 /* SIGHASH_ALL */,\n+        bool sign = true,\n+        bool bip32derivs = false) = 0;\n+\n     //! Get balances.\n     virtual WalletBalances getBalances() = 0;\n "
      }
    ]
  },
  {
    "sha": "bc728d12a975934a1ef21e8d06612e157faaff6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzcyOGQxMmE5NzU5MzRhMWVmMjFlOGQwNjYxMmUxNTdmYWFmZjZh",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-11-13T18:12:01Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2019-11-13T18:12:01Z"
      },
      "message": "depends: qt: Fix C{,XX} pickup",
      "tree": {
        "sha": "48dc274309f55563bbb67c9cde34c51ca725de54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48dc274309f55563bbb67c9cde34c51ca725de54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc728d12a975934a1ef21e8d06612e157faaff6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEECc3SW1JEo3Z49u6oDMUhUxl5kaUFAl3MR3EACgkQDMUhUxl5\nkaXMZhAApryhu4Kdm4bAXZPMJu8scFe7Mb82VARmtJueXCZYu3tncBGuY0ABKO6o\nmMweLvvVJsdQPdlv07E8bNXkjhDtkXe+Mwas16ZtsvRiXwIVmrXreSzMXABAKUlk\n8c6Xm790wS/ZF+CWo9g1XWf8Hz78KPojbXAWMWR6mBHJL5pUedLvO03hVFej62Jq\nyGuoJyc6h0LqX3EiOf6gAqqlxFYY/0x71u8UdtQ8UWzOY+ZbncedIRtShBrTbq47\n5rXiYg09HrKeZ6X0Pyxk7oxlh2MK0jw55fRyb3ka884sMWtOPJ1jYzSGkHXvy1zD\nquiY9yf53avkaWnL3QFXNY2KqGNDcCwyZv2WAOlnddb97RkQHXIUy+oJ8VgiVelV\nLesoVz/0dYyCkQaxJ/GE6nwkgsE8OkgH97VG9z1j6PtOXOQ+eb9UHweC6hHZOEU3\nWy5QVWF5q14k6jWPz7oO348gdNgwyihyxmSBSAQerzYma7S6bcy2u5naLHRjDb63\n62rGqLIQL/ZLdqAfGNYS4RfODJWj3LUBgHBFjRZ3OZIUD78P05RgNp47dVvB+Fg5\nZsr0KPQkv/GnS+Gjz5zRvv/EFGgYhVGqbt3o2X7ZSVp+bFmVQBA01wT1cYvHtHZs\npBeZBelZNI838cpBJqdns3ooRRP/HCSu264HJV2SmcQveC2OwrU=\n=Bh4z\n-----END PGP SIGNATURE-----",
        "payload": "tree 48dc274309f55563bbb67c9cde34c51ca725de54\nparent cd6cb9745e13a62e130b11f78a13bcc1d424b05e\nauthor Carl Dong <contact@carldong.me> 1573668721 -0500\ncommitter Carl Dong <contact@carldong.me> 1573668721 -0500\n\ndepends: qt: Fix C{,XX} pickup\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc728d12a975934a1ef21e8d06612e157faaff6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc728d12a975934a1ef21e8d06612e157faaff6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc728d12a975934a1ef21e8d06612e157faaff6a/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6cb9745e13a62e130b11f78a13bcc1d424b05e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6ac6ba68388e6d591de9cdbd3458ac12579a5aaa",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc728d12a975934a1ef21e8d06612e157faaff6a/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc728d12a975934a1ef21e8d06612e157faaff6a/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=bc728d12a975934a1ef21e8d06612e157faaff6a",
        "patch": "@@ -202,6 +202,8 @@ define $(package)_preprocess_cmds\n   sed -i.old \"s|QMAKE_CFLAGS           += |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"s|QMAKE_CXXFLAGS         += |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"0,/^QMAKE_LFLAGS_/s|^QMAKE_LFLAGS_|!host_build: QMAKE_LFLAGS            = $($(package)_ldflags)\\n&|\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CC                = clang|QMAKE_CC                = $($(package)_cc)|\" qtbase/mkspecs/common/clang.conf && \\\n+  sed -i.old \"s|QMAKE_CXX               = clang++|QMAKE_CXX               = $($(package)_cxx)|\" qtbase/mkspecs/common/clang.conf && \\\n   sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n "
      }
    ]
  },
  {
    "sha": "c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNmRkNTY1Yzg4MjBhYThhOThiMTkwNjIxZTEwYzZlMjgyMWE5ZWNj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-09-26T09:31:49Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-13T19:03:42Z"
      },
      "message": "[gui] watch-only wallet: copy PSBT to clipboard",
      "tree": {
        "sha": "894f4cde23b01755a1d0300d1cdadbb31e10b8c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/894f4cde23b01755a1d0300d1cdadbb31e10b8c3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3MU5AACgkQV/+b28ww\nEAlAfhAAuYPhQvf98ebnIa8D9aj5pwEL8MfOzuZlcF91jpMTcF3ebisJB+6GPrkz\nNnc/gOHG08y7Ln9AQIEWFDrWKr50jJQnRzDMhXdcdPbJg+J5VEWgTVkUJMXhEo6I\nUrDGbTUgiSf2kvKce4r22MwqKSygmRId1LT23hGrnlI/EMi8dthIYgSFE2aeJHxU\n53RsfLGVWAYGVDMCXc3yPEBxu3sQgOeMaxTuAIzskxpicnlUdMUbGqN3plgid1ja\nDZN1BR6a2BpKEfz4eIPDdSY8sAfGTWe6Fes8d5w7zFBGhA7ZNNQfPIn7uth9YMEw\nqu6jZTBVYAAHfXIPbY7XtSqLHorwVGLMf59dHWtgyhTPKx0yX35Kh5/1Gqi5LMmz\nsPPxt4cN3rwWHO0QbxtniSA239yUQ33k754VKSFsZVdWHnj73XbVdZESTS9wmKtC\njV90XiCvSCxNpydI7XrccJO9sjaWUBYSNKcVkoCeBiP5kzRPpffCOdcwtddSdaz8\nZ/PHW5wjJ/q54C7KeEf4Nv2tzop91AfAJiqLmzl0GefuD9DITvYIAAfVKm7VEu2D\nfufpqNjYw/FlrEldN9TurODa9VswITmnQzSZdikYHXA0gf/MLlA66mz1S0bbpB56\nzZpyN2Zs1OACAtCnFjIykF2b1qA1o+B3P+/SOOR34kCz65+vSgQ=\n=Nw02\n-----END PGP SIGNATURE-----",
        "payload": "tree 894f4cde23b01755a1d0300d1cdadbb31e10b8c3\nparent 39465d545d521e66bb3accfa788aa94bffaf47eb\nauthor Sjors Provoost <sjors@sprovoost.nl> 1569490309 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1573671822 +0100\n\n[gui] watch-only wallet: copy PSBT to clipboard\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39465d545d521e66bb3accfa788aa94bffaf47eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39465d545d521e66bb3accfa788aa94bffaf47eb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39465d545d521e66bb3accfa788aa94bffaf47eb"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 56,
      "deletions": 20
    },
    "files": [
      {
        "sha": "c3d00fa38e7b202b0492ebbfe87133ff1538f1b9",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 53,
        "deletions": 18,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
        "patch": "@@ -21,11 +21,12 @@\n #include <chainparams.h>\n #include <interfaces/node.h>\n #include <key_io.h>\n-#include <wallet/coincontrol.h>\n-#include <ui_interface.h>\n-#include <txmempool.h>\n #include <policy/fees.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n+#include <wallet/psbtwallet.h>\n \n #include <QFontMetrics>\n #include <QScrollBar>\n@@ -186,6 +187,11 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         // set default rbf checkbox state\n         ui->optInRBF->setCheckState(Qt::Checked);\n \n+        if (model->privateKeysDisabled()) {\n+            ui->sendButton->setText(tr(\"Cr&eate Unsigned\"));\n+            ui->sendButton->setToolTip(tr(\"Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+        }\n+\n         // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n         QSettings settings;\n         if (settings.value(\"nSmartFeeSliderPosition\").toInt() != 0) {\n@@ -305,9 +311,19 @@ void SendCoinsDialog::on_sendButton_clicked()\n         formatted.append(recipientElement);\n     }\n \n-    QString questionString = tr(\"Are you sure you want to send?\");\n+    QString questionString;\n+    if (model->privateKeysDisabled()) {\n+        questionString.append(tr(\"Do you want to draft this transaction?\"));\n+    } else {\n+        questionString.append(tr(\"Are you sure you want to send?\"));\n+    }\n+\n     questionString.append(\"<br /><span style='font-size:10pt;'>\");\n-    questionString.append(tr(\"Please, review your transaction.\"));\n+    if (model->privateKeysDisabled()) {\n+        questionString.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+    } else {\n+        questionString.append(tr(\"Please, review your transaction.\"));\n+    }\n     questionString.append(\"</span>%1\");\n \n     if(txFee > 0)\n@@ -358,8 +374,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n     } else {\n         questionString = questionString.arg(\"<br /><br />\" + formatted.at(0));\n     }\n-\n-    SendConfirmationDialog confirmationDialog(tr(\"Confirm send coins\"), questionString, informative_text, detailed_text, SEND_CONFIRM_DELAY, this);\n+    const QString confirmation = model->privateKeysDisabled() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n+    const QString confirmButtonText = model->privateKeysDisabled() ? tr(\"Copy PSBT to clipboard\") : tr(\"Send\");\n+    SendConfirmationDialog confirmationDialog(confirmation, questionString, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n@@ -369,17 +386,35 @@ void SendCoinsDialog::on_sendButton_clicked()\n         return;\n     }\n \n-    // now send the prepared transaction\n-    WalletModel::SendCoinsReturn sendStatus = model->sendCoins(currentTransaction);\n-    // process sendStatus and on error generate message shown to user\n-    processSendCoinsReturn(sendStatus);\n+    bool send_failure = false;\n+    if (model->privateKeysDisabled()) {\n+        CMutableTransaction mtx = CMutableTransaction{*(currentTransaction.getWtx())};\n+        PartiallySignedTransaction psbtx(mtx);\n+        bool complete = false;\n+        const TransactionError err = model->wallet().fillPSBT(psbtx, complete, SIGHASH_ALL, false /* sign */, true /* bip32derivs */);\n+        assert(!complete);\n+        assert(err == TransactionError::OK);\n+        // Serialize the PSBT\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+        ssTx << psbtx;\n+        GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n+        Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n+    } else {\n+        // now send the prepared transaction\n+        WalletModel::SendCoinsReturn sendStatus = model->sendCoins(currentTransaction);\n+        // process sendStatus and on error generate message shown to user\n+        processSendCoinsReturn(sendStatus);\n \n-    if (sendStatus.status == WalletModel::OK)\n-    {\n+        if (sendStatus.status == WalletModel::OK) {\n+            Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n+        } else {\n+            send_failure = true;\n+        }\n+    }\n+    if (!send_failure) {\n         accept();\n         CoinControlDialog::coinControl()->UnSelectAll();\n         coinControlUpdateLabels();\n-        Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n     }\n     fNewRecipientAllowed = true;\n }\n@@ -875,8 +910,8 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n-SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, QWidget* parent)\n-    : QMessageBox(parent), secDelay(_secDelay)\n+SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, QWidget* parent)\n+    : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText)\n {\n     setIcon(QMessageBox::Question);\n     setWindowTitle(title); // On macOS, the window title is ignored (as required by the macOS Guidelines).\n@@ -913,11 +948,11 @@ void SendConfirmationDialog::updateYesButton()\n     if(secDelay > 0)\n     {\n         yesButton->setEnabled(false);\n-        yesButton->setText(tr(\"Send\") + \" (\" + QString::number(secDelay) + \")\");\n+        yesButton->setText(confirmButtonText + \" (\" + QString::number(secDelay) + \")\");\n     }\n     else\n     {\n         yesButton->setEnabled(true);\n-        yesButton->setText(tr(\"Send\"));\n+        yesButton->setText(confirmButtonText);\n     }\n }"
      },
      {
        "sha": "ccd84946136909c4e702ecf692911afccbdf845f",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
        "patch": "@@ -108,7 +108,7 @@ class SendConfirmationDialog : public QMessageBox\n     Q_OBJECT\n \n public:\n-    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, QWidget* parent = nullptr);\n+    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"Send\", QWidget* parent = nullptr);\n     int exec();\n \n private Q_SLOTS:\n@@ -119,6 +119,7 @@ private Q_SLOTS:\n     QAbstractButton *yesButton;\n     QTimer countDownTimer;\n     int secDelay;\n+    QString confirmButtonText;\n };\n \n #endif // BITCOIN_QT_SENDCOINSDIALOG_H"
      },
      {
        "sha": "fb92e29f21d8a68522040a5f07200a501852cb5d",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c6dd565c8820aa8a98b190621e10c6e2821a9ecc/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
        "patch": "@@ -183,7 +183,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         std::string strFailReason;\n \n         auto& newTx = transaction.getWtx();\n-        newTx = m_wallet->createTransaction(vecSend, coinControl, true /* sign */, nChangePosRet, nFeeRequired, strFailReason);\n+        newTx = m_wallet->createTransaction(vecSend, coinControl, !privateKeysDisabled() /* sign */, nChangePosRet, nFeeRequired, strFailReason);\n         transaction.setTransactionFee(nFeeRequired);\n         if (fSubtractFeeFromAmount && newTx)\n             transaction.reassignAmounts(nChangePosRet);"
      }
    ]
  },
  {
    "sha": "fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZlMDFiMmYzY2Q4NTIzYTk1YmQxOTA2YWM1ZTYyZWUzY2JmMzE5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-13T22:47:11Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-13T22:53:04Z"
      },
      "message": "ci: Use clang-8 for fuzzing to run on aarch64 ci systems",
      "tree": {
        "sha": "ab75a47e2f4f2ba5d93ec084918520f1a3a3554d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab75a47e2f4f2ba5d93ec084918520f1a3a3554d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgFuQwAuFrWn+H59myo8MNg4EIEZB9oCB9msEpU97eIDJt8H9AaSeFtPKaaHIub\nEqd7sEMct89RWHRpqgA+TC5KOFcqZw00JZotFhKdiXVIUi71s5qBjFZQgZny1a7m\nkojPFEkvUKrcGEP0er+iXfgEaFaVsO05OVZFO48MFU8LsQusdncK4wVM5QV5yvzA\nHDtU/mJ6+JNv9ZqcMMeF+ArkerHwTeUX+o0zIIRZWT2I96nRm+uXcmSj2O4rLsCM\napEB9IdFHJ1MPsWSdhct6F3FV8upv7jhyNBWA0Q1+0mtGSRsMjRN6g8oCnUX6x6V\nMdYdjuJB6Q7W93pfcKF/UWW16q9dF5zWVk2yEbegs6qzzoLxQigOBY93RV/zPjZP\nH1cs56i5YuOHQJ5ODETC2vwJmrQnwYDeEGBEdkLMJStbD7h1uWEIrMkvDOJlW/DO\nfqrjNkoaZrf+12lwP9eb1O8xuCH/GJqtatGYNgfBbZsm2hlyO4Ao+uz6D2aStdoW\nrzF56PX6\n=nVoh\n-----END PGP SIGNATURE-----",
        "payload": "tree ab75a47e2f4f2ba5d93ec084918520f1a3a3554d\nparent 8237889e8d0fb7542669a9098516c96da91913f0\nauthor MarcoFalke <falke.marco@gmail.com> 1573685231 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573685584 -0500\n\nci: Use clang-8 for fuzzing to run on aarch64 ci systems\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8237889e8d0fb7542669a9098516c96da91913f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8237889e8d0fb7542669a9098516c96da91913f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8237889e8d0fb7542669a9098516c96da91913f0"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ed331e5069111423124935dc70c7f74913f2f0b7",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
        "patch": "@@ -6,10 +6,11 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang-8 CXX=clang++-8\"\n+# Use clang-8, instead of default clang on bionic, which is clang-6 and does not come with libfuzzer on aarch64"
      }
    ]
  },
  {
    "sha": "fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWM5NDJjYTU3ZGNlNmNmYTU2NTVhM2FjODY2NGQ2YTA1MWJjMDFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-13T21:25:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-14T15:56:57Z"
      },
      "message": "test: Remove fragile assert_memory_usage_stable",
      "tree": {
        "sha": "95a4a04e8fd5fdfb360bf657b867749b03375285",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a4a04e8fd5fdfb360bf657b867749b03375285"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiZUQwAiJSo7BiMt2g325o32nDKMjnqE6QLaqWyxXbXsDeTAllLdhpN8DMeKeeV\nTEvlBxqZdhV0GLwfHDJVx6qBFWTVBlfOG6dSEp6R1idtuPdhXC4MQ18VM2DLmp5j\nBj5lrLVkQPbgHZEGatvVlmB3jmATURylAv2bqFuQwppAaqG6bEFn8N+5E0skgyO5\nYN5u1BsqhmF2daij1cPKzQATMO71a6rAaQehtRMVd3nz1YTML6n2VekdXe3VnU3T\noqa+5ltvf0Zjy/e7D24/Ccz73cEpucNHpgMxyYmlrgononMr4wFKDodLsE12ejsf\nlTYoBa5LZAbxhCZdEfJUUp8B/yKjTDWoyVJQBKPhtcXDEtMneEwV2PDoVun8+wc8\n/F2wliJ0ZppsHhoVAI2GvF5BR8IkNTDcAAomKlQE2lBr1948FpU8NZ8z93HLvGvO\nTw0njt3Up8l21Ss9LDFK0o94BI8cO0OaEFw8tpCYkNY/TawTXPCTw+GygWUtTgR/\nSkuPaegh\n=JMZb\n-----END PGP SIGNATURE-----",
        "payload": "tree 95a4a04e8fd5fdfb360bf657b867749b03375285\nparent 8237889e8d0fb7542669a9098516c96da91913f0\nauthor MarcoFalke <falke.marco@gmail.com> 1573680350 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573747017 -0500\n\ntest: Remove fragile assert_memory_usage_stable\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8237889e8d0fb7542669a9098516c96da91913f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8237889e8d0fb7542669a9098516c96da91913f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8237889e8d0fb7542669a9098516c96da91913f0"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 15,
      "deletions": 68
    },
    "files": [
      {
        "sha": "20864881c1658eedd12ad79b5cedeb69dcc0cdb0",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 15,
        "deletions": 22,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac942ca57dce6cfa5655a3ac8664d6a051bc01f/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac942ca57dce6cfa5655a3ac8664d6a051bc01f/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
        "patch": "@@ -4,7 +4,6 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n import asyncio\n-import os\n import struct\n import sys\n \n@@ -66,27 +65,21 @@ def run_test(self):\n         msg_at_size = msg_unrecognized(str_data=\"b\" * valid_data_limit)\n         assert len(msg_at_size.serialize()) == msg_limit\n \n-        increase_allowed = 0.5\n-        if [s for s in os.environ.get(\"BITCOIN_CONFIG\", \"\").split(\" \") if \"--with-sanitizers\" in s and \"address\" in s]:\n-            increase_allowed = 3.5\n-        with node.assert_memory_usage_stable(increase_allowed=increase_allowed):\n-            self.log.info(\n-                \"Sending a bunch of large, junk messages to test \"\n-                \"memory exhaustion. May take a bit...\")\n-\n-            # Run a bunch of times to test for memory exhaustion.\n-            for _ in range(80):\n-                node.p2p.send_message(msg_at_size)\n-\n-            # Check that, even though the node is being hammered by nonsense from one\n-            # connection, it can still service other peers in a timely way.\n-            for _ in range(20):\n-                conn2.sync_with_ping(timeout=2)\n-\n-            # Peer 1, despite serving up a bunch of nonsense, should still be connected.\n-            self.log.info(\"Waiting for node to drop junk messages.\")\n-            node.p2p.sync_with_ping(timeout=320)\n-            assert node.p2p.is_connected\n+        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n+\n+        # Run a bunch of times to test for memory exhaustion.\n+        for _ in range(80):\n+            node.p2p.send_message(msg_at_size)\n+\n+        # Check that, even though the node is being hammered by nonsense from one\n+        # connection, it can still service other peers in a timely way.\n+        for _ in range(20):\n+            conn2.sync_with_ping(timeout=2)\n+\n+        # Peer 1, despite serving up a bunch of nonsense, should still be connected.\n+        self.log.info(\"Waiting for node to drop junk messages.\")\n+        node.p2p.sync_with_ping(timeout=320)\n+        assert node.p2p.is_connected\n \n         #\n         # 1."
      },
      {
        "sha": "1c9628264f391ae73870e6a4596e976c39b77af8",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac942ca57dce6cfa5655a3ac8664d6a051bc01f/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac942ca57dce6cfa5655a3ac8664d6a051bc01f/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
        "patch": "@@ -135,25 +135,6 @@ def get_deterministic_priv_key(self):\n         assert len(self.PRIV_KEYS) == MAX_NODES\n         return self.PRIV_KEYS[self.index]\n \n-    def get_mem_rss_kilobytes(self):\n-        \"\"\"Get the memory usage (RSS) per `ps`.\n-\n-        Returns None if `ps` is unavailable.\n-        \"\"\"\n-        assert self.running\n-\n-        try:\n-            return int(subprocess.check_output(\n-                [\"ps\", \"h\", \"-o\", \"rss\", \"{}\".format(self.process.pid)],\n-                stderr=subprocess.DEVNULL).split()[-1])\n-\n-        # Avoid failing on platforms where ps isn't installed.\n-        #\n-        # We could later use something like `psutils` to work across platforms.\n-        except (FileNotFoundError, subprocess.SubprocessError):\n-            self.log.exception(\"Unable to get memory usage\")\n-            return None\n-\n     def _node_msg(self, msg: str) -> str:\n         \"\"\"Return a modified msg that identifies this node by its index as a debugging aid.\"\"\"\n         return \"[node %d] %s\" % (self.index, msg)\n@@ -332,33 +313,6 @@ def assert_debug_log(self, expected_msgs, timeout=2):\n             time.sleep(0.05)\n         self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n \n-    @contextlib.contextmanager\n-    def assert_memory_usage_stable(self, *, increase_allowed=0.03):\n-        \"\"\"Context manager that allows the user to assert that a node's memory usage (RSS)\n-        hasn't increased beyond some threshold percentage.\n-\n-        Args:\n-            increase_allowed (float): the fractional increase in memory allowed until failure;\n-                e.g. `0.12` for up to 12% increase allowed.\n-        \"\"\"\n-        before_memory_usage = self.get_mem_rss_kilobytes()\n-\n-        yield\n-\n-        after_memory_usage = self.get_mem_rss_kilobytes()\n-\n-        if not (before_memory_usage and after_memory_usage):\n-            self.log.warning(\"Unable to detect memory usage (RSS) - skipping memory check.\")\n-            return\n-\n-        perc_increase_memory_usage = (after_memory_usage / before_memory_usage) - 1\n-\n-        if perc_increase_memory_usage > increase_allowed:\n-            self._raise_assertion_error(\n-                \"Memory usage increased over threshold of {:.3f}% from {} to {} ({:.3f}%)\".format(\n-                    increase_allowed * 100, before_memory_usage, after_memory_usage,\n-                    perc_increase_memory_usage * 100))\n-\n     @contextlib.contextmanager\n     def profile_with_perf(self, profile_name):\n         \"\"\""
      }
    ]
  },
  {
    "sha": "fa2ec9f4518c1da3ab3592537c6cd204693a6069",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTJlYzlmNDUxOGMxZGEzYWIzNTkyNTM3YzZjZDIwNDY5M2E2MDY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-14T19:01:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-14T18:50:20Z"
      },
      "message": "fuzz: Bump timeout in test_runner to accomodate for slow arm64 CPUs",
      "tree": {
        "sha": "3f14cba908f6427d71412cb0f14e5f1f3c2e9ff8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f14cba908f6427d71412cb0f14e5f1f3c2e9ff8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2ec9f4518c1da3ab3592537c6cd204693a6069",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh19Av/QllRVkKFQEgBHU2Cu9to8ue88y15nfYhPifRXHTg6ZmXVUEqvZDaYGU4\nAC/dFOfwq6WVfE+LlZg1YXc8AtqXcO6+RD4LRMn4yTAWeLfMKYCxOOyuJsc9fh6t\nt8PkeUb5HkRRuQMtiw+YM2VpiXUxIvooaSB/CP9aVGjUJ2oNiYvqTmbviTVFP0iD\n3qWOsFo0u/aYE87ADbaU/6pdzoK0YXCjGoSDIaMWD2WdhAigR0usQgzhB+fAUsKz\nJgJmygAK/TIDM+R0/g29cDcrnnO3blss4rp6dArkaMYEndGdaSi/wA4+/p2uxC4R\n5RMUONHrjvPdMlGAudw3ftCUbSZO643K0oIG6NeQGxpI9mB985oHsViZOxm/BAyh\naHtZxu2QV/E1jCBPa9OK1+SgnLGCY5DzDnv75OgYRfcT64KiyW4ME7VtZK2ulfPJ\nQWc9hTg5pnuxjPZ5TURiR0+GVX2xO/fthvbFqC6b9QIU64xLsq8HLgDxnqDNnkfd\ndlleXU9Y\n=NxKe\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f14cba908f6427d71412cb0f14e5f1f3c2e9ff8\nparent fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319\nauthor MarcoFalke <falke.marco@gmail.com> 1573758065 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573757420 -0500\n\nfuzz: Bump timeout in test_runner to accomodate for slow arm64 CPUs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ec9f4518c1da3ab3592537c6cd204693a6069",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2ec9f4518c1da3ab3592537c6cd204693a6069",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ec9f4518c1da3ab3592537c6cd204693a6069/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fde99fe4965c30b06ff5c10f3ab18d5a24af86aa",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2ec9f4518c1da3ab3592537c6cd204693a6069/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2ec9f4518c1da3ab3592537c6cd204693a6069/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=fa2ec9f4518c1da3ab3592537c6cd204693a6069",
        "patch": "@@ -78,7 +78,7 @@ def main():\n                 os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n                 '-help=1',\n             ],\n-            timeout=1,\n+            timeout=10,\n             check=True,\n             stderr=subprocess.PIPE,\n             universal_newlines=True,"
      }
    ]
  },
  {
    "sha": "5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZThhNTYzNDhiNWUxMDI2ZTlkZGNhZTBiMmZhMmE2OGZhZjQ0Mzll",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-14T18:32:51Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-14T18:51:50Z"
      },
      "message": "test: add unit test for non-standard txs with too large scriptSig\n\nThe function IsStandardTx() returns rejection reason \"scriptsig-size\" if any\none the inputs' scriptSig is larger than 1650 bytes.",
      "tree": {
        "sha": "25ad0d4e28591a192a37157f0739d69701f5d2bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25ad0d4e28591a192a37157f0739d69701f5d2bc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6cb9745e13a62e130b11f78a13bcc1d424b05e"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eb0050a4a385185499a006e15494a998e21d798d",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
        "patch": "@@ -784,6 +784,19 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     reason.clear();\n     BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n     BOOST_CHECK_EQUAL(reason, \"multi-op-return\");\n+\n+    // Check large scriptSig (non-standard if size is >1650 bytes)\n+    t.vout.resize(1);\n+    t.vout[0].nValue = MAX_MONEY;\n+    t.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // OP_PUSHDATA2 with len (3 bytes) + data (1647 bytes) = 1650 bytes\n+    t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(1647, 0); // 1650\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(1648, 0); // 1651\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"scriptsig-size\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMWVlNjc2ZGQ2YTdkOTcwNDM2N2I2NDEyYmY4ZTFlNDQzZWMyYjVi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-14T18:42:24Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-14T18:53:51Z"
      },
      "message": "Merge #17449: fix uninitialized variable nMinerConfirmationWindow\n\nedb6b768a4185a4aaa6281ee50a6538f7426cb1e fix uninitialized variable nMinerConfirmationWindow (NullFunctor)\n\nPull request description:\n\n  It is used for the computation of `BIP9WarningHeight`, and by that time it isn't initialized.\n\nACKs for top commit:\n  jnewbery:\n    utACK edb6b768a\n  promag:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, commit description could be cleaned up though.\n  MarcoFalke:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, used python3 to do the addition locally \ud83d\udccd\n  practicalswift:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, used `clang++ -O2` on the previous version^W^W^W^W^W^W`bc` to verify the addition locally \ud83c\udfd3\n  Sjors:\n    Code review ACK  edb6b76. Nit: commit description has duplicate text.\n\nTree-SHA512: 6fa0be0ecfbfd5d537f2c5b4a9333c76530c1f3182f777330cc7939b0496e37b75d8f8810cdaf471a9bd3247b425f2e239578300dfa0d5a87cd14a6ccfafa619",
      "tree": {
        "sha": "1cc3d53b7245cfc7e0458006c7abef86ca177ece",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1cc3d53b7245cfc7e0458006c7abef86ca177ece"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Nor8ACgkQLuufXMCV\nJsGxGRAAghZ9S1nQXd79BWBpuY1lyzSablU+yrk0rXcilNt9e4Fhw3JoO6xqIM4v\neUAKVk8tpucjJwWaflqlnaJhWZ9xWbaK/Fgjl4wLsCn5ohfSAXw3qiFYr35w4qlF\n6P0IzL2AhBadBhbJDKCljPiGt6Mv40KfcXAu0TMUgPk7KzSUZjr5LIRh8gtf7mva\nTDcIZDi4qs10WSZlzmDb2kZzUjijKQUvUhqCD2xsUlpMu4HYU1aSv6LBwWi+thgg\n8KNUtIBd21Gy0zTsbQfWfs+7nIObATWLLXN88fnGZnmjbgMt7TVsmPBmEoyRREje\n9N4653KjMuCSQfYGUznJqfuonPv1scn62po/ga4ZHYU0+C0x11HL1YGGTXSW8+QK\nndYBqowAvICd+hlaUMT8M/Je6d1sJztVo6YhDlOSGq91ok+mD1rWeCfK1zqfx+uT\ngWKztnlRuq2ayBIEQGDsOs44lQaLRiHkcd7ve1r6ucoGSV78EbE7KouOtBQqDvpA\nt7IgHZAayrT4bbdsg3RfRV6PEzNRJXoFB/7tWU8asoFSq5NTyC0OXgwvv1+KQOhr\ngHZIEhrb2Enl+Vl4dLe1AEF6Ea+gy57v5b9MaX4ilwl3pFl+yUDw8oGIjUet0YvI\nEnUo7bX4u4jvFUSKRKBGt6J+4ap1hwshQNA8vcKq7vDPkLg4OoA=\n=Z82Y\n-----END PGP SIGNATURE-----",
        "payload": "tree 1cc3d53b7245cfc7e0458006c7abef86ca177ece\nparent cd6cb9745e13a62e130b11f78a13bcc1d424b05e\nparent edb6b768a4185a4aaa6281ee50a6538f7426cb1e\nauthor fanquake <fanquake@gmail.com> 1573756944 -0800\ncommitter fanquake <fanquake@gmail.com> 1573757631 -0800\n\nMerge #17449: fix uninitialized variable nMinerConfirmationWindow\n\nedb6b768a4185a4aaa6281ee50a6538f7426cb1e fix uninitialized variable nMinerConfirmationWindow (NullFunctor)\n\nPull request description:\n\n  It is used for the computation of `BIP9WarningHeight`, and by that time it isn't initialized.\n\nACKs for top commit:\n  jnewbery:\n    utACK edb6b768a\n  promag:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, commit description could be cleaned up though.\n  MarcoFalke:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, used python3 to do the addition locally \ud83d\udccd\n  practicalswift:\n    ACK edb6b768a4185a4aaa6281ee50a6538f7426cb1e, used `clang++ -O2` on the previous version^W^W^W^W^W^W`bc` to verify the addition locally \ud83c\udfd3\n  Sjors:\n    Code review ACK  edb6b76. Nit: commit description has duplicate text.\n\nTree-SHA512: 6fa0be0ecfbfd5d537f2c5b4a9333c76530c1f3182f777330cc7939b0496e37b75d8f8810cdaf471a9bd3247b425f2e239578300dfa0d5a87cd14a6ccfafa619\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd6cb9745e13a62e130b11f78a13bcc1d424b05e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd6cb9745e13a62e130b11f78a13bcc1d424b05e"
      },
      {
        "sha": "edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edb6b768a4185a4aaa6281ee50a6538f7426cb1e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edb6b768a4185a4aaa6281ee50a6538f7426cb1e"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0a1cb858ef566bb590467cfcffa0ede53fe9a451",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
        "patch": "@@ -71,7 +71,7 @@ class CMainParams : public CChainParams {\n         consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.CSVHeight = 419328; // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n         consensus.SegwitHeight = 481824; // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n-        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.MinBIP9WarningHeight = 483840; // segwit activation height + miner confirmation window\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -178,7 +178,7 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.CSVHeight = 770112; // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n         consensus.SegwitHeight = 834624; // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n-        consensus.MinBIP9WarningHeight = consensus.SegwitHeight + consensus.nMinerConfirmationWindow;\n+        consensus.MinBIP9WarningHeight = 836640; // segwit activation height + miner confirmation window\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;"
      }
    ]
  },
  {
    "sha": "18b18f8e813b332d0ce6b0af19c9cb265f043776",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOGIxOGY4ZTgxM2IzMzJkMGNlNmIwYWYxOWM5Y2IyNjVmMDQzNzc2",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-15T09:23:48Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-15T16:35:59Z"
      },
      "message": "[build] ./configure --enable-werror: add unused-variable\n\nTurn corresponding warning on by default (not always covered by -Wall).",
      "tree": {
        "sha": "410961b752f7b80f2b05cb25239e1b7fd46e93a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/410961b752f7b80f2b05cb25239e1b7fd46e93a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/18b18f8e813b332d0ce6b0af19c9cb265f043776",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3O1DgACgkQV/+b28ww\nEAnLWw/9G3j3E9wLl/cstL6jmdw/kMRzv4kftfjIask2WiTB+9EHiTcQsxfW60Q4\nDyTLn+VtE0MpYaueLxiybY5vG91Fe6fIEWLPHcd0TS+COq7vBfCNgn+J9iaGNxxV\nDbuGG/kpVtTCUD/7bCE8WjTqIWM11y1Sj2UWlMbwd4Aongejevi410SfJscE6j+r\nR49wZgiCZr6mWHZeeKrs2Ui2XB/wHdlHSdTkMBGegzbK1jxC45Kp7ddwuPG8PC8I\n4Ju29UqlSy0Z+FFHh8PWBz0Er0y/nHOUx0R5f27mr0qJqfZmdK/+V89NnFzDUEJD\nlAHPY6RN+zw7tnjJ9sdf1pgvcYAy3ymsSCtAnZpayU/XL0a3IAp0/Uk85lKZKUnP\nb4viTIXa5ioTPKx7EOskUx4+7jscfSWyk2m85OnbXiyGyh1Cbin90GLV8Nnd0UMZ\nNGfZCXFIchaZoQRgOLsR0nx+Tz/4cgNc99i8NVoKyJWJ7iu7obrTkDkz8/8MJs7v\nJj4URt6jrrkwhQZO6vajezz54XQL15uf6w5vLLGgaHnn4OApGfeZQJ+PFw9OyxcA\n4CCQeL8tLAmGzAGfgyn1IyBrgCRR7Vz+PlFDlIa6dWUfrBOVlpnfA3PME6nrn55F\nKldICkt7iX2TN1mMDMYmUsvsMLngVFjqwOh83TUKmvc/Z9Xv/+U=\n=lBOy\n-----END PGP SIGNATURE-----",
        "payload": "tree 410961b752f7b80f2b05cb25239e1b7fd46e93a9\nparent 21ee676dd6a7d9704367b6412bf8e1e443ec2b5b\nauthor Sjors Provoost <sjors@sprovoost.nl> 1573809828 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1573835759 +0100\n\n[build] ./configure --enable-werror: add unused-variable\n\nTurn corresponding warning on by default (not always covered by -Wall).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18b18f8e813b332d0ce6b0af19c9cb265f043776",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/18b18f8e813b332d0ce6b0af19c9cb265f043776",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18b18f8e813b332d0ce6b0af19c9cb265f043776/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "998c82916a34dfb6f121d07814215645b0fbdd8d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/18b18f8e813b332d0ce6b0af19c9cb265f043776/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/18b18f8e813b332d0ce6b0af19c9cb265f043776/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=18b18f8e813b332d0ce6b0af19c9cb265f043776",
        "patch": "@@ -329,6 +329,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -341,6 +342,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and"
      }
    ]
  },
  {
    "sha": "c7709cbf4c15123332dc37c70dc491422f81e080",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzcwOWNiZjRjMTUxMjMzMzJkYzM3YzcwZGM0OTE0MjJmODFlMDgw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T17:46:42Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T17:46:51Z"
      },
      "message": "Merge #17469: test: Remove fragile assert_memory_usage_stable\n\nfac942ca57dce6cfa5655a3ac8664d6a051bc01f test: Remove fragile assert_memory_usage_stable (MarcoFalke)\n\nPull request description:\n\n  This test fails on arm64 and a fuzz tests seems inappropriate for the functional test suite anyway, so remove it.\n\n  Example failures:\n\n  * https://travis-ci.org/bitcoin/bitcoin/jobs/611497963#L14517\n  * https://travis-ci.org/MarcoFalke/bitcoin-core/jobs/611029104#L3876\n\nACKs for top commit:\n  jamesob:\n    ACK https://github.com/bitcoin/bitcoin/pull/17469/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f\n\nTree-SHA512: 3577e7ce5891d221cb798454589ba796ed0c06621a26351bb919c23bc6bb46aafcd0b11cb02bbfde64b74d67cb2950da44959a7ecdc436491a34e8b045c1ccf4",
      "tree": {
        "sha": "0176095c84e031b948cf6dc6ecc796cc529fca58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0176095c84e031b948cf6dc6ecc796cc529fca58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7709cbf4c15123332dc37c70dc491422f81e080",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3O5IsACgkQ0upIUOdS\niyX5jg/+OyOTzCffbZxK5yJqrLy+4pGVlJM47Y5AMoVu+It7++AgOLsjnfM0oTM+\n1j4PkISrKMpenWaPVR8IrH94xGFSrw1u1DUs0hXiTY07Xv5rA7KyHg6vXkwA5yof\ncAWgIhl/YZuOnsdkUr1EzBBmqXZPLjwZDaAaSH/PdViENxYJbxjAivEYTmL2MmeD\nIlHfw73INTkDE2j4ihh1TFsZo/kdkUVNeoltT0q1CoBOxV0hTvhy8izKcBKDFPFP\nSUuAZubsUXx1UaTUSg0CSbWmHMxAD4FAJsh+cSXESuTXtWgPhi5EL1BZTuRHE70f\nQ1JwcHBfmkzzrhbF2KrV8DRykjIz2pX0qqTerRqdka2SUnBds3kgCrT3PegtVALR\niiSQaceQgVL9EXrMyGUfWGapCuWkScSzd4FGSKObtl/bHi6gMGmWZ0zsxB1RW0hW\ntnvCO4YFOgTUHIpI/sLBwjqNqCY84kNcS1D8gxL+BH+VJg86tJ5hoUxHssqVeKyo\nzzTHLKPoGjZpiTDgGIpEkEprBOoAcMKtbT14+wAYKFtkfDRuxjvjFoU4HF73hsV8\nVcTiiZsbpTY4KtphlsCO+8ueBiErtYNyj6Z7vnGsbql9pFOnrXOohl0I30NcToHl\n60UDBePQBcgO6Bg7cJHxDwb5if6p6oayHgE9tVtDh2JPkM7XWxE=\n=F4Sr\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKskvKMYD6Hn5T3aZg56ZomTzNM3CfMFJacZrqutfrVjCP/wEAc/HxCpJTVc\ndCpmYN+DayoI8QRdzuSP8Agh7hqbJDMu2wCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQIi9EDISZMaBC3Nv6\nynI0PQjxBF3O5I/wCBcMXZw8dZtVAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQI+ZJqYMLfhYihvvhKwW7FwjxBF3O\n5I7wCEODXEsdRYRBAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BCqTDeJ7qvdFntP6pLJRxr8CPEEXc7kjvAIggzEjaHBZYwAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0176095c84e031b948cf6dc6ecc796cc529fca58\nparent 21ee676dd6a7d9704367b6412bf8e1e443ec2b5b\nparent fac942ca57dce6cfa5655a3ac8664d6a051bc01f\nauthor MarcoFalke <falke.marco@gmail.com> 1573840002 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573840011 -0500\n\nMerge #17469: test: Remove fragile assert_memory_usage_stable\n\nfac942ca57dce6cfa5655a3ac8664d6a051bc01f test: Remove fragile assert_memory_usage_stable (MarcoFalke)\n\nPull request description:\n\n  This test fails on arm64 and a fuzz tests seems inappropriate for the functional test suite anyway, so remove it.\n\n  Example failures:\n\n  * https://travis-ci.org/bitcoin/bitcoin/jobs/611497963#L14517\n  * https://travis-ci.org/MarcoFalke/bitcoin-core/jobs/611029104#L3876\n\nACKs for top commit:\n  jamesob:\n    ACK https://github.com/bitcoin/bitcoin/pull/17469/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f\n\nTree-SHA512: 3577e7ce5891d221cb798454589ba796ed0c06621a26351bb919c23bc6bb46aafcd0b11cb02bbfde64b74d67cb2950da44959a7ecdc436491a34e8b045c1ccf4\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7709cbf4c15123332dc37c70dc491422f81e080",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7709cbf4c15123332dc37c70dc491422f81e080",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7709cbf4c15123332dc37c70dc491422f81e080/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b"
      },
      {
        "sha": "fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac942ca57dce6cfa5655a3ac8664d6a051bc01f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac942ca57dce6cfa5655a3ac8664d6a051bc01f"
      }
    ],
    "stats": {
      "total": 83,
      "additions": 15,
      "deletions": 68
    },
    "files": [
      {
        "sha": "20864881c1658eedd12ad79b5cedeb69dcc0cdb0",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 15,
        "deletions": 22,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7709cbf4c15123332dc37c70dc491422f81e080/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7709cbf4c15123332dc37c70dc491422f81e080/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=c7709cbf4c15123332dc37c70dc491422f81e080",
        "patch": "@@ -4,7 +4,6 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test node responses to invalid network messages.\"\"\"\n import asyncio\n-import os\n import struct\n import sys\n \n@@ -66,27 +65,21 @@ def run_test(self):\n         msg_at_size = msg_unrecognized(str_data=\"b\" * valid_data_limit)\n         assert len(msg_at_size.serialize()) == msg_limit\n \n-        increase_allowed = 0.5\n-        if [s for s in os.environ.get(\"BITCOIN_CONFIG\", \"\").split(\" \") if \"--with-sanitizers\" in s and \"address\" in s]:\n-            increase_allowed = 3.5\n-        with node.assert_memory_usage_stable(increase_allowed=increase_allowed):\n-            self.log.info(\n-                \"Sending a bunch of large, junk messages to test \"\n-                \"memory exhaustion. May take a bit...\")\n-\n-            # Run a bunch of times to test for memory exhaustion.\n-            for _ in range(80):\n-                node.p2p.send_message(msg_at_size)\n-\n-            # Check that, even though the node is being hammered by nonsense from one\n-            # connection, it can still service other peers in a timely way.\n-            for _ in range(20):\n-                conn2.sync_with_ping(timeout=2)\n-\n-            # Peer 1, despite serving up a bunch of nonsense, should still be connected.\n-            self.log.info(\"Waiting for node to drop junk messages.\")\n-            node.p2p.sync_with_ping(timeout=320)\n-            assert node.p2p.is_connected\n+        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n+\n+        # Run a bunch of times to test for memory exhaustion.\n+        for _ in range(80):\n+            node.p2p.send_message(msg_at_size)\n+\n+        # Check that, even though the node is being hammered by nonsense from one\n+        # connection, it can still service other peers in a timely way.\n+        for _ in range(20):\n+            conn2.sync_with_ping(timeout=2)\n+\n+        # Peer 1, despite serving up a bunch of nonsense, should still be connected.\n+        self.log.info(\"Waiting for node to drop junk messages.\")\n+        node.p2p.sync_with_ping(timeout=320)\n+        assert node.p2p.is_connected\n \n         #\n         # 1."
      },
      {
        "sha": "1c9628264f391ae73870e6a4596e976c39b77af8",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7709cbf4c15123332dc37c70dc491422f81e080/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7709cbf4c15123332dc37c70dc491422f81e080/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=c7709cbf4c15123332dc37c70dc491422f81e080",
        "patch": "@@ -135,25 +135,6 @@ def get_deterministic_priv_key(self):\n         assert len(self.PRIV_KEYS) == MAX_NODES\n         return self.PRIV_KEYS[self.index]\n \n-    def get_mem_rss_kilobytes(self):\n-        \"\"\"Get the memory usage (RSS) per `ps`.\n-\n-        Returns None if `ps` is unavailable.\n-        \"\"\"\n-        assert self.running\n-\n-        try:\n-            return int(subprocess.check_output(\n-                [\"ps\", \"h\", \"-o\", \"rss\", \"{}\".format(self.process.pid)],\n-                stderr=subprocess.DEVNULL).split()[-1])\n-\n-        # Avoid failing on platforms where ps isn't installed.\n-        #\n-        # We could later use something like `psutils` to work across platforms.\n-        except (FileNotFoundError, subprocess.SubprocessError):\n-            self.log.exception(\"Unable to get memory usage\")\n-            return None\n-\n     def _node_msg(self, msg: str) -> str:\n         \"\"\"Return a modified msg that identifies this node by its index as a debugging aid.\"\"\"\n         return \"[node %d] %s\" % (self.index, msg)\n@@ -332,33 +313,6 @@ def assert_debug_log(self, expected_msgs, timeout=2):\n             time.sleep(0.05)\n         self._raise_assertion_error('Expected messages \"{}\" does not partially match log:\\n\\n{}\\n\\n'.format(str(expected_msgs), print_log))\n \n-    @contextlib.contextmanager\n-    def assert_memory_usage_stable(self, *, increase_allowed=0.03):\n-        \"\"\"Context manager that allows the user to assert that a node's memory usage (RSS)\n-        hasn't increased beyond some threshold percentage.\n-\n-        Args:\n-            increase_allowed (float): the fractional increase in memory allowed until failure;\n-                e.g. `0.12` for up to 12% increase allowed.\n-        \"\"\"\n-        before_memory_usage = self.get_mem_rss_kilobytes()\n-\n-        yield\n-\n-        after_memory_usage = self.get_mem_rss_kilobytes()\n-\n-        if not (before_memory_usage and after_memory_usage):\n-            self.log.warning(\"Unable to detect memory usage (RSS) - skipping memory check.\")\n-            return\n-\n-        perc_increase_memory_usage = (after_memory_usage / before_memory_usage) - 1\n-\n-        if perc_increase_memory_usage > increase_allowed:\n-            self._raise_assertion_error(\n-                \"Memory usage increased over threshold of {:.3f}% from {} to {} ({:.3f}%)\".format(\n-                    increase_allowed * 100, before_memory_usage, after_memory_usage,\n-                    perc_increase_memory_usage * 100))\n-\n     @contextlib.contextmanager\n     def profile_with_perf(self, profile_name):\n         \"\"\""
      }
    ]
  },
  {
    "sha": "fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWMwN2YyMDM4YTNjY2Q1ZWRhZGM2ZTYxMjJjMDJmYTMwZTY5N2Jk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-08T15:29:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T18:40:00Z"
      },
      "message": "node: Add reference to mempool in NodeContext\n\nCurrently it is an alias to the global ::mempool and should be used as\nfollows.\n\n* Node code (validation and transaction relay) can use either ::mempool\n  or node.mempool, whichever seems a better fit.\n* RPC code should use the added convenience getter EnsureMempool, which\n  makes sure the mempool exists before use. This prepares the RPC code\n  to a future where the mempool might be disabled at runtime or compile\n  time.\n* Test code should use m_node.mempool directly, as the mempool is always\n  initialized for tests.",
      "tree": {
        "sha": "7f115cb94e2b7486efd531b48b6ce42a7b92a5a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f115cb94e2b7486efd531b48b6ce42a7b92a5a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiNDQv7BkmpFT1KTSfyWR85KqBsU0toiU/MUOUatLozJf07UssczcGsCU7eI91b\n9zPuqsEWPEaqi+FMbioZpeag0SBnT7gUc/IHjnTEAYklzCmKgI+1A7jOj3WlqaQE\nbsvZfcBgWVwFM6QDOvjlDdjx/9hLH2c/td3RyAmVnoUjGDhs3ZjkluP6nqd7IgW+\n9LdEzww+mXgZ98NtSNOwSYSj64tgYwvc1LcEIXRTDepxJhxMgJ9w7w0k1HGKfVfv\nfcEbyozOZI4lCsWj2ootomGlkWUwK54yUC7REYD88+SA6C8Qj2UwQLZS/0kka6hK\nM6iePHIzaYyAvhUAx0/LfOkWOLBRZ5nHMuWheFoTv3GxssYlNnVG+DFQWh1FNz8r\nYzV4ZbyFMnn1RnDMUkNyRY2GIDWJGwNpfyEjT09cPELKGzpkj6pkUNP42n43SowY\n23Tlvz/m8RCX22H6WbWTvY2PZNVmkArTtgn++2zBCEH5l2FtINEVsvX3tJiYFz0f\nc24IzTbf\n=wSA4\n-----END PGP SIGNATURE-----",
        "payload": "tree 7f115cb94e2b7486efd531b48b6ce42a7b92a5a7\nparent 270616228bc9a3856a0a82dea26ac3480b7585cd\nauthor MarcoFalke <falke.marco@gmail.com> 1573226981 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573843200 -0500\n\nnode: Add reference to mempool in NodeContext\n\nCurrently it is an alias to the global ::mempool and should be used as\nfollows.\n\n* Node code (validation and transaction relay) can use either ::mempool\n  or node.mempool, whichever seems a better fit.\n* RPC code should use the added convenience getter EnsureMempool, which\n  makes sure the mempool exists before use. This prepares the RPC code\n  to a future where the mempool might be disabled at runtime or compile\n  time.\n* Test code should use m_node.mempool directly, as the mempool is always\n  initialized for tests.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "270616228bc9a3856a0a82dea26ac3480b7585cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/270616228bc9a3856a0a82dea26ac3480b7585cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/270616228bc9a3856a0a82dea26ac3480b7585cd"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 28,
      "deletions": 5
    },
    "files": [
      {
        "sha": "013f0536b438feb6c85dcbb3f3832065c231f3de",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -284,6 +284,7 @@ void Shutdown(NodeContext& node)\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n     globalVerifyHandle.reset();\n     ECC_Stop();\n+    if (node.mempool) node.mempool = nullptr;\n     LogPrintf(\"%s: done\\n\", __func__);\n }\n \n@@ -1632,6 +1633,11 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // Now that the chain state is loaded, make mempool generally available in the node context. For example the\n+    // connection manager, wallet, or RPC threads, which are all started after this, may use it from the node context.\n+    assert(!node.mempool);\n+    node.mempool = &::mempool;\n+\n     fs::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n     CAutoFile est_filein(fsbridge::fopen(est_path, \"rb\"), SER_DISK, CLIENT_VERSION);\n     // Allowed to fail as this file IS missing on first startup."
      },
      {
        "sha": "dab5b5d048d4c8062905ae224484a9a9caade14b",
        "filename": "src/node/context.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -10,6 +10,7 @@\n \n class BanMan;\n class CConnman;\n+class CTxMemPool;\n class PeerLogicValidation;\n namespace interfaces {\n class Chain;\n@@ -22,13 +23,13 @@ class ChainClient;\n //! This is used by init, rpc, and test code to pass object references around\n //! without needing to declare the same variables and parameters repeatedly, or\n //! to use globals. More variables could be added to this struct (particularly\n-//! references to validation and mempool objects) to eliminate use of globals\n+//! references to validation objects) to eliminate use of globals\n //! and make code more modular and testable. The struct isn't intended to have\n //! any member functions. It should just be a collection of references that can\n //! be used without pulling in unwanted dependencies or functionality.\n-struct NodeContext\n-{\n+struct NodeContext {\n     std::unique_ptr<CConnman> connman;\n+    CTxMemPool* mempool{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n     std::unique_ptr<PeerLogicValidation> peer_logic;\n     std::unique_ptr<BanMan> banman;\n     std::unique_ptr<interfaces::Chain> chain;"
      },
      {
        "sha": "374fc9b59b2b4e1411d34108092db37f3bccaef0",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -32,7 +32,6 @@ void RPCNestedTests::rpcNestedTests()\n     // do some test setup\n     // could be moved to a more generic place when we add more tests on QT level\n     tableRPC.appendCommand(\"rpcNestedTest\", &vRPCCommands[0]);\n-    //mempool.setSanityCheck(1.0);\n \n     TestingSetup test;\n "
      },
      {
        "sha": "946152d9aa3836126fef879a1c3e0679eded2b60",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -15,6 +15,7 @@\n #include <hash.h>\n #include <index/blockfilterindex.h>\n #include <node/coinstats.h>\n+#include <node/context.h>\n #include <node/utxo_snapshot.h>\n #include <policy/feerate.h>\n #include <policy/policy.h>\n@@ -53,6 +54,15 @@ static Mutex cs_blockchange;\n static std::condition_variable cond_blockchange;\n static CUpdatedBlock latestblock;\n \n+CTxMemPool& EnsureMemPool()\n+{\n+    CHECK_NONFATAL(g_rpc_node);\n+    if (!g_rpc_node->mempool) {\n+        throw JSONRPCError(RPC_CLIENT_MEMPOOL_DISABLED, \"Mempool disabled or instance not found\");\n+    }\n+    return *g_rpc_node->mempool;\n+}\n+\n /* Calculate the difficulty for a given block index.\n  */\n double GetDifficulty(const CBlockIndex* blockindex)"
      },
      {
        "sha": "ccb3e3972248ff6231fb868075dc48b7504ef09d",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -52,4 +52,6 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n //! direct way to pass in state to RPC methods without globals.\n extern NodeContext* g_rpc_node;\n \n+CTxMemPool& EnsureMemPool();\n+\n #endif"
      },
      {
        "sha": "ca779497b9d816158238dad4c509a71853822dfd",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -63,6 +63,9 @@ enum RPCErrorCode\n     RPC_CLIENT_INVALID_IP_OR_SUBNET = -30, //!< Invalid IP/Subnet\n     RPC_CLIENT_P2P_DISABLED         = -31, //!< No valid connection manager instance found\n \n+    //! Chain errors\n+    RPC_CLIENT_MEMPOOL_DISABLED     = -33, //!< No mempool instance found\n+\n     //! Wallet errors\n     RPC_WALLET_ERROR                = -4,  //!< Unspecified problem with wallet (key not found etc.)\n     RPC_WALLET_INSUFFICIENT_FUNDS   = -6,  //!< Not enough funds in wallet or account"
      },
      {
        "sha": "86c355fdcd1dad3416cce6c125f21def373f2eaa",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fac07f2038a3ccd5edadc6e6122c02fa30e697bd/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "patch": "@@ -107,7 +107,6 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     threadGroup.create_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n \n-    mempool.setSanityCheck(1.0);\n     pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n     g_chainstate = MakeUnique<CChainState>();\n     ::ChainstateActive().InitCoinsDB(\n@@ -131,6 +130,8 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     }\n     g_parallel_script_checks = true;\n \n+    m_node.mempool = &::mempool;\n+    m_node.mempool->setSanityCheck(1.0);\n     m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n }\n@@ -144,6 +145,7 @@ TestingSetup::~TestingSetup()\n     g_rpc_node = nullptr;\n     m_node.connman.reset();\n     m_node.banman.reset();\n+    m_node.mempool = nullptr;\n     UnloadBlockIndex();\n     g_chainstate.reset();\n     pblocktree.reset();"
      }
    ]
  },
  {
    "sha": "8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODg4YWQwMmUyMDRiMGZhN2EyZWEyY2ZlZDJmYzNmMjk4Y2YxNjIz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-08T16:07:36Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T18:40:08Z"
      },
      "message": "test: Replace recursive lock with locking annotations\n\nAlso, use m_node.mempool instead of the global",
      "tree": {
        "sha": "7f8eb7835c9bd5452d655f8d77bf1d28c8a78442",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f8eb7835c9bd5452d655f8d77bf1d28c8a78442"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj4GQwAnc0ZttNuPQ8Vam0vRE8hHI8Vi8PPqw1+3meK3SW26R2cisWaNblIozfQ\nff2jEx7bQ0KmAjEDW8b11pqVjGUlOA4phozlinuhvMrSmj+pTzbxOhbaSMcPQ5Wd\nh1fjAQPR75ZeCidrJlYo9afe+WPskWLXAlHFGgGM9bHaFP1sEDRxPTiiUdRZUZRM\nxMq081pDchHZgaVrldre/ZaoV4QTbuoeQcW8uDnap3PR2kyjz0DWEPKtuXvwMn/J\nCYi0vvYg21GGeBsS+ou5oJfPbbQ404PZOHQ7Gahxk+4G2YTZSN2Q83aZh4HjnPUV\nIt6o2SpgR5VaI0IXnWI8Nn8i7/3dlBSs3d9f/qhM8XtN/BDpxLVwcgHA7DfIb4g2\ndob0AcWBKDKHX8EzBS74mag7I0dAdC5tEDM7rqHqIPemniMJlrUmLrQZSIm77sVi\nqJ81HjQPmzqjwT0f0zKg1H1FmcnyaZG6Uz4TtznbL7JeV66UKtvEKOSaH+OoZVjX\nD2hvPMo6\n=G3+f\n-----END PGP SIGNATURE-----",
        "payload": "tree 7f8eb7835c9bd5452d655f8d77bf1d28c8a78442\nparent fac07f2038a3ccd5edadc6e6122c02fa30e697bd\nauthor MarcoFalke <falke.marco@gmail.com> 1573229256 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573843208 -0500\n\ntest: Replace recursive lock with locking annotations\n\nAlso, use m_node.mempool instead of the global\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fac07f2038a3ccd5edadc6e6122c02fa30e697bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fac07f2038a3ccd5edadc6e6122c02fa30e697bd"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 20,
      "deletions": 18
    },
    "files": [
      {
        "sha": "5aae2cccd0dbb64a1be587d3b68a148d449a27b2",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
        "patch": "@@ -23,7 +23,17 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(miner_tests, TestingSetup)\n+namespace miner_tests {\n+struct MinerTestingSetup : public TestingSetup {\n+    void TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_node.mempool->cs);\n+    bool TestSequenceLocks(const CTransaction& tx, int flags) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_node.mempool->cs)\n+    {\n+        return CheckSequenceLocks(*m_node.mempool, tx, flags);\n+    }\n+};\n+} // namespace miner_tests\n+\n+BOOST_FIXTURE_TEST_SUITE(miner_tests, MinerTestingSetup)\n \n // BOOST_CHECK_EXCEPTION predicates to check the specific validation error\n class HasReason {\n@@ -89,16 +99,10 @@ static CBlockIndex CreateBlockIndex(int nHeight) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n     return index;\n }\n \n-static bool TestSequenceLocks(const CTransaction &tx, int flags) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n-{\n-    LOCK(::mempool.cs);\n-    return CheckSequenceLocks(::mempool, tx, flags);\n-}\n-\n // Test suite for ancestor feerate transaction selection.\n // Implemented as an additional function, rather than a separate test case,\n // to allow reusing the blockchain created in CreateNewBlock_validity.\n-static void TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs)\n+void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst)\n {\n     // Test the ancestor feerate transaction selection.\n     TestMemPoolEntryHelper entry;"
      },
      {
        "sha": "49aa344b3388d36ad150a464690532afa8785755",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 10,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
        "patch": "@@ -17,16 +17,6 @@ bool CheckInputs(const CTransaction& tx, TxValidationState &state, const CCoinsV\n \n BOOST_AUTO_TEST_SUITE(tx_validationcache_tests)\n \n-static bool\n-ToMemPool(const CMutableTransaction& tx)\n-{\n-    LOCK(cs_main);\n-\n-    TxValidationState state;\n-    return AcceptToMemoryPool(mempool, state, MakeTransactionRef(tx),\n-                              nullptr /* plTxnReplaced */, true /* bypass_limits */, 0 /* nAbsurdFee */);\n-}\n-\n BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n {\n     // Make sure skipping validation of transactions that were\n@@ -35,6 +25,14 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n \n     CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n \n+    const auto ToMemPool = [this](const CMutableTransaction& tx) {\n+        LOCK(cs_main);\n+\n+        TxValidationState state;\n+        return AcceptToMemoryPool(*m_node.mempool, state, MakeTransactionRef(tx),\n+            nullptr /* plTxnReplaced */, true /* bypass_limits */, 0 /* nAbsurdFee */);\n+    };\n+\n     // Create a double-spend of mature coinbase txn:\n     std::vector<CMutableTransaction> spends;\n     spends.resize(2);"
      }
    ]
  },
  {
    "sha": "fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTUzODgxM2IxYzM4MmNmMTM1Y2JmMmEwY2MzZmEwMWYzNjk2NGQ4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-08T16:10:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T18:40:14Z"
      },
      "message": "scripted-diff: Replace ::mempool with m_node.mempool in tests\n\n-BEGIN VERIFY SCRIPT-\n # tx pool member access (mempool followed by dot)\n sed --regexp-extended -i -e 's/(::)?\\<mempool\\>\\.([a-zA-Z])/m_node.mempool->\\2/g' $(git grep -l mempool ./src/test)\n # plain global (mempool not preceeded by dot, but followed by comma)\n sed --regexp-extended -i -e 's/([^\\.])(::)?\\<mempool\\>,/\\1*m_node.mempool,/g'     $(git grep -l mempool ./src/test)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "2263582cc4ae02e22ba28072a4f527842c54e39f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2263582cc4ae02e22ba28072a4f527842c54e39f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi12Qv+N3zV9hFUO+M3yrXABP4WGytAUqqmHWaRDJklTII9ZdrhUzn7GthJV1ij\nHDGbVRpXRQ3e2aJ1EvvZ0/fRY1/3+HqzX4srFSlj316KoVhP4ut3Zh3Dl3LQJUN6\nhrpeDlhQpxITx8IuQ/9eyQ9tqOZrdNPR9guvJBZOirJ6bvenJhw2qGaLrpT4oMr3\nhPLi7lYJrwrJfaXsnexHJhEztFRaNoA32+m1juAKLbL1oJxPeD0XUgrE99aOGMHa\nb+ytG1WcnQxUXRSrf6xn9vSIUrZNbbtfE0NLyJguaz0CyvlqrVCDjv8LIaDT0kqM\ngVvyESQ9ZhX0lwa1VtE/s65Jk2p8BEiscnxG3QA/65hny173DbLsZ3QkyEpok9H2\nrEWcLaQo7JEhqb7Oiuzbs9EQLAE7v2a2fJo/H6VT2/XsG8cf8rGrWPDeWkd8Ir+p\nZ0SvRUy79Z+UF71EAqIVmRaWtdsgdrMTiR3dgbh9J/1+JHrR47fTt2TUxXIHm7bz\n0R1Lt7wo\n=cwh7\n-----END PGP SIGNATURE-----",
        "payload": "tree 2263582cc4ae02e22ba28072a4f527842c54e39f\nparent 8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623\nauthor MarcoFalke <falke.marco@gmail.com> 1573229413 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573843214 -0500\n\nscripted-diff: Replace ::mempool with m_node.mempool in tests\n\n-BEGIN VERIFY SCRIPT-\n # tx pool member access (mempool followed by dot)\n sed --regexp-extended -i -e 's/(::)?\\<mempool\\>\\.([a-zA-Z])/m_node.mempool->\\2/g' $(git grep -l mempool ./src/test)\n # plain global (mempool not preceeded by dot, but followed by comma)\n sed --regexp-extended -i -e 's/([^\\.])(::)?\\<mempool\\>,/\\1*m_node.mempool,/g'     $(git grep -l mempool ./src/test)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 52,
      "deletions": 52
    },
    "files": [
      {
        "sha": "d79a598bf16239d0ed7620816a4f73ff4cbc1306",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 39,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "patch": "@@ -118,19 +118,19 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     tx.vout[0].nValue = 5000000000LL - 1000;\n     // This tx has a low fee: 1000 satoshis\n     uint256 hashParentTx = tx.GetHash(); // save this txid for later use\n-    mempool.addUnchecked(entry.Fee(1000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(1000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx has a medium fee: 10000 satoshis\n     tx.vin[0].prevout.hash = txFirst[1]->GetHash();\n     tx.vout[0].nValue = 5000000000LL - 10000;\n     uint256 hashMediumFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(10000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(10000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx has a high fee, but depends on the first transaction\n     tx.vin[0].prevout.hash = hashParentTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000; // 50k satoshi fee\n     uint256 hashHighFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n \n     std::unique_ptr<CBlockTemplate> pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[1]->GetHash() == hashParentTx);\n@@ -141,7 +141,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     tx.vin[0].prevout.hash = hashHighFeeTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000; // 0 fee\n     uint256 hashFreeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(0).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(0).FromTx(tx));\n     size_t freeTxSize = ::GetSerializeSize(tx, PROTOCOL_VERSION);\n \n     // Calculate a fee on child transaction that will put the package just\n@@ -151,7 +151,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     tx.vin[0].prevout.hash = hashFreeTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000 - feeToUse;\n     uint256 hashLowFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     // Verify that the free tx and the low fee tx didn't get selected\n     for (size_t i=0; i<pblocktemplate->block.vtx.size(); ++i) {\n@@ -162,10 +162,10 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     // Test that packages above the min relay fee do get included, even if one\n     // of the transactions is below the min relay fee\n     // Remove the low fee transaction and replace with a higher fee transaction\n-    mempool.removeRecursive(CTransaction(tx), MemPoolRemovalReason::REPLACED);\n+    m_node.mempool->removeRecursive(CTransaction(tx), MemPoolRemovalReason::REPLACED);\n     tx.vout[0].nValue -= 2; // Now we should be just over the min relay fee\n     hashLowFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse+2).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse+2).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[4]->GetHash() == hashFreeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[5]->GetHash() == hashLowFeeTx);\n@@ -178,15 +178,15 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     tx.vout[0].nValue = 5000000000LL - 100000000;\n     tx.vout[1].nValue = 100000000; // 1BTC output\n     uint256 hashFreeTx2 = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(0).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(0).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx can't be mined by itself\n     tx.vin[0].prevout.hash = hashFreeTx2;\n     tx.vout.resize(1);\n     feeToUse = blockMinFeeRate.GetFee(freeTxSize);\n     tx.vout[0].nValue = 5000000000LL - 100000000 - feeToUse;\n     uint256 hashLowFeeTx2 = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse).SpendsCoinbase(false).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n \n     // Verify that this tx isn't selected.\n@@ -199,7 +199,7 @@ void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, co\n     // as well.\n     tx.vin[0].prevout.n = 1;\n     tx.vout[0].nValue = 100000000 - 10000; // 10k satoshi fee\n-    mempool.addUnchecked(entry.Fee(10000).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(10000).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[8]->GetHash() == hashLowFeeTx2);\n }\n@@ -256,7 +256,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     }\n \n     LOCK(cs_main);\n-    LOCK(::mempool.cs);\n+    LOCK(m_node.mempool->cs);\n \n     // Just to make sure we can still make simple blocks\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n@@ -280,12 +280,12 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we don't set the # of sig ops in the CTxMemPoolEntry, template creation fails\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n \n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-blk-sigops\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vout[0].nValue = BLOCKSUBSIDY;\n@@ -295,11 +295,11 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we do set the # of sig ops in the CTxMemPoolEntry, template creation passes\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // block size > limit\n     tx.vin[0].scriptSig = CScript();\n@@ -315,59 +315,59 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         tx.vout[0].nValue -= LOWFEE;\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // orphan in mempool, template creation fails\n+    // orphan in *m_node.mempool, template creation fails\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).FromTx(tx));\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-txns-inputs-missingorspent\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // child with higher feerate than parent\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vin[0].prevout.hash = txFirst[1]->GetHash();\n     tx.vout[0].nValue = BLOCKSUBSIDY-HIGHFEE;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vin[0].prevout.hash = hash;\n     tx.vin.resize(2);\n     tx.vin[1].scriptSig = CScript() << OP_1;\n     tx.vin[1].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[1].prevout.n = 0;\n     tx.vout[0].nValue = tx.vout[0].nValue+BLOCKSUBSIDY-HIGHERFEE; //First txn output + fresh coinbase - new txn fee\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHERFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHERFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // coinbase in mempool, template creation fails\n+    // coinbase in *m_node.mempool, template creation fails\n     tx.vin.resize(1);\n     tx.vin[0].prevout.SetNull();\n     tx.vin[0].scriptSig = CScript() << OP_0 << OP_1;\n     tx.vout[0].nValue = 0;\n     hash = tx.GetHash();\n     // give it a fee so it'll get mined\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n     // Should throw bad-cb-multiple\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-cb-multiple\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // double spend txn pair in mempool, template creation fails\n+    // double spend txn pair in *m_node.mempool, template creation fails\n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vout[0].nValue = BLOCKSUBSIDY-HIGHFEE;\n     tx.vout[0].scriptPubKey = CScript() << OP_1;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vout[0].scriptPubKey = CScript() << OP_2;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-txns-inputs-missingorspent\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // subsidy changing\n     int nHeight = ::ChainActive().Height();\n@@ -396,23 +396,23 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n \n-    // invalid p2sh txn in mempool, template creation fails\n+    // invalid p2sh txn in *m_node.mempool, template creation fails\n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[0].prevout.n = 0;\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vout[0].nValue = BLOCKSUBSIDY-LOWFEE;\n     script = CScript() << OP_0;\n     tx.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(script));\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vin[0].prevout.hash = hash;\n     tx.vin[0].scriptSig = CScript() << std::vector<unsigned char>(script.begin(), script.end());\n     tx.vout[0].nValue -= LOWFEE;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n     // Should throw block-validation-failed\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"block-validation-failed\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // Delete the dummy blocks again.\n     while (::ChainActive().Tip()->nHeight > nHeight) {\n@@ -443,7 +443,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].scriptPubKey = CScript() << OP_1;\n     tx.nLockTime = 0;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK(CheckFinalTx(CTransaction(tx), flags)); // Locktime passes\n     BOOST_CHECK(!TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks fail\n     BOOST_CHECK(SequenceLocks(CTransaction(tx), flags, &prevheights, CreateBlockIndex(::ChainActive().Tip()->nHeight + 2))); // Sequence locks pass on 2nd block\n@@ -453,7 +453,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vin[0].nSequence = CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | (((::ChainActive().Tip()->GetMedianTimePast()+1-::ChainActive()[1]->GetMedianTimePast()) >> CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) + 1); // txFirst[1] is the 3rd block\n     prevheights[0] = baseheight + 2;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(CheckFinalTx(CTransaction(tx), flags)); // Locktime passes\n     BOOST_CHECK(!TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks fail\n \n@@ -469,7 +469,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     prevheights[0] = baseheight + 3;\n     tx.nLockTime = ::ChainActive().Tip()->nHeight + 1;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(!CheckFinalTx(CTransaction(tx), flags)); // Locktime fails\n     BOOST_CHECK(TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks pass\n     BOOST_CHECK(IsFinalTx(CTransaction(tx), ::ChainActive().Tip()->nHeight + 2, ::ChainActive().Tip()->GetMedianTimePast())); // Locktime passes on 2nd block\n@@ -480,7 +480,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     prevheights.resize(1);\n     prevheights[0] = baseheight + 4;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(!CheckFinalTx(CTransaction(tx), flags)); // Locktime fails\n     BOOST_CHECK(TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks pass\n     BOOST_CHECK(IsFinalTx(CTransaction(tx), ::ChainActive().Tip()->nHeight + 2, ::ChainActive().Tip()->GetMedianTimePast() + 1)); // Locktime passes 1 second later\n@@ -517,7 +517,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n \n     ::ChainActive().Tip()->nHeight--;\n     SetMockTime(0);\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     TestPackageSelection(chainparams, scriptPubKey, txFirst);\n "
      },
      {
        "sha": "cace75f0938c28296b294813b48b83664acecb47",
        "filename": "src/test/txvalidation_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/txvalidation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/txvalidation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidation_tests.cpp?ref=fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "patch": "@@ -34,17 +34,17 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n \n     LOCK(cs_main);\n \n-    unsigned int initialPoolSize = mempool.size();\n+    unsigned int initialPoolSize = m_node.mempool->size();\n \n     BOOST_CHECK_EQUAL(\n             false,\n-            AcceptToMemoryPool(mempool, state, MakeTransactionRef(coinbaseTx),\n+            AcceptToMemoryPool(*m_node.mempool, state, MakeTransactionRef(coinbaseTx),\n                 nullptr /* plTxnReplaced */,\n                 true /* bypass_limits */,\n                 0 /* nAbsurdFee */));\n \n     // Check that the transaction hasn't been added to mempool.\n-    BOOST_CHECK_EQUAL(mempool.size(), initialPoolSize);\n+    BOOST_CHECK_EQUAL(m_node.mempool->size(), initialPoolSize);\n \n     // Check that the validation state reflects the unsuccessful attempt.\n     BOOST_CHECK(state.IsInvalid());"
      },
      {
        "sha": "67f45c4ed46dbc581f8360f94784fde50fe83ec1",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "patch": "@@ -70,7 +70,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n         LOCK(cs_main);\n         BOOST_CHECK(::ChainActive().Tip()->GetBlockHash() != block.GetHash());\n     }\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // Test 3: ... and should be rejected if spend2 is in the memory pool\n     BOOST_CHECK(ToMemPool(spends[1]));\n@@ -79,9 +79,9 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n         LOCK(cs_main);\n         BOOST_CHECK(::ChainActive().Tip()->GetBlockHash() != block.GetHash());\n     }\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // Final sanity test: first spend in mempool, second in block, that's OK:\n+    // Final sanity test: first spend in *m_node.mempool, second in block, that's OK:\n     std::vector<CMutableTransaction> oneSpend;\n     oneSpend.push_back(spends[0]);\n     BOOST_CHECK(ToMemPool(spends[1]));\n@@ -92,7 +92,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n     }\n     // spends[1] should have been removed from the mempool when the\n     // block with spends[0] is accepted:\n-    BOOST_CHECK_EQUAL(mempool.size(), 0U);\n+    BOOST_CHECK_EQUAL(m_node.mempool->size(), 0U);\n }\n \n // Run CheckInputs (using CoinsTip()) on the given transaction, for all script"
      },
      {
        "sha": "3431eedff6425582397a0777af56e1aa3b8c7fd1",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa538813b1c382cf135cbf2a0cc3fa01f36964d8/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "patch": "@@ -278,7 +278,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n             std::list<CTransactionRef> plTxnReplaced;\n             for (const auto& tx : txs) {\n                 BOOST_REQUIRE(AcceptToMemoryPool(\n-                    ::mempool,\n+                    *m_node.mempool,\n                     state,\n                     tx,\n                     &plTxnReplaced,\n@@ -289,8 +289,8 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n \n         // Check that all txs are in the pool\n         {\n-            LOCK(::mempool.cs);\n-            BOOST_CHECK_EQUAL(::mempool.mapTx.size(), txs.size());\n+            LOCK(m_node.mempool->cs);\n+            BOOST_CHECK_EQUAL(m_node.mempool->mapTx.size(), txs.size());\n         }\n \n         // Run a thread that simulates an RPC caller that is polling while\n@@ -300,8 +300,8 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n             // the transactions invalidated by the reorg, or none of them, and\n             // not some intermediate amount.\n             while (true) {\n-                LOCK(::mempool.cs);\n-                if (::mempool.mapTx.size() == 0) {\n+                LOCK(m_node.mempool->cs);\n+                if (m_node.mempool->mapTx.size() == 0) {\n                     // We are done with the reorg\n                     break;\n                 }\n@@ -310,7 +310,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n                 // be atomic. So the caller assumes that the returned mempool\n                 // is consistent. That is, it has all txs that were there\n                 // before the reorg.\n-                assert(::mempool.mapTx.size() == txs.size());\n+                assert(m_node.mempool->mapTx.size() == txs.size());\n                 continue;\n             }\n             LOCK(cs_main);"
      }
    ]
  },
  {
    "sha": "38516f9078497d3e8456d48300eca40c35a281f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODUxNmY5MDc4NDk3ZDNlODQ1NmQ0ODMwMGVjYTQwYzM1YTI4MWYy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-10-30T16:59:50Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-11-15T18:58:51Z"
      },
      "message": "Fix input size assertion in wallet_bumpfee.py",
      "tree": {
        "sha": "23048594be3c26d9a743ecefad572596f5dd0e8a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23048594be3c26d9a743ecefad572596f5dd0e8a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38516f9078497d3e8456d48300eca40c35a281f2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38516f9078497d3e8456d48300eca40c35a281f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38516f9078497d3e8456d48300eca40c35a281f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38516f9078497d3e8456d48300eca40c35a281f2/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "693e40090ae7af52585ce1a6136a4bd56318fac7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/693e40090ae7af52585ce1a6136a4bd56318fac7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/693e40090ae7af52585ce1a6136a4bd56318fac7"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c9b1603d5b11b95493b6f73a8d0981b3948b3645",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38516f9078497d3e8456d48300eca40c35a281f2/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38516f9078497d3e8456d48300eca40c35a281f2/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=38516f9078497d3e8456d48300eca40c35a281f2",
        "patch": "@@ -211,15 +211,15 @@ def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n     # Make sure additional inputs exist\n     rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n     rbfid = spend_one_input(rbf_node, dest_address)\n-    original_input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n-    assert_equal(len(original_input_list), 1)\n-    original_txin = original_input_list[0]\n+    input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n+    assert_equal(len(input_list), 1)\n+    original_txin = input_list[0]\n     # Keep bumping until we out-spend change output\n     tx_fee = 0\n     while tx_fee < Decimal(\"0.0005\"):\n-        new_input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n-        new_item = list(new_input_list)[0]\n-        assert_equal(len(original_input_list), 1)\n+        input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n+        new_item = list(input_list)[0]\n+        assert_equal(len(input_list), 1)\n         assert_equal(original_txin[\"txid\"], new_item[\"txid\"])\n         assert_equal(original_txin[\"vout\"], new_item[\"vout\"])\n         rbfid_new_details = rbf_node.bumpfee(rbfid)"
      }
    ]
  },
  {
    "sha": "422ec33d45ed1ab90031a587b34005c16c1a8796",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MjJlYzMzZDQ1ZWQxYWI5MDAzMWE1ODdiMzQwMDVjMTZjMWE4Nzk2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:01:59Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:02:01Z"
      },
      "message": "Merge #17322: Fix input size assertion in wallet_bumpfee.py\n\n38516f9078497d3e8456d48300eca40c35a281f2 Fix input size assertion in wallet_bumpfee.py (Gregory Sanders)\n\nPull request description:\n\n  I was investigating a curious error for https://github.com/bitcoin/bitcoin/pull/17290 and realized that this check should have caught that error earlier in the test.\n\n  The loop is intended to ensure that only a single input exists the entire time until the change output disappears, a single additional bump occurs, then it leaves the loop.\n\nTop commit has no ACKs.\n\nTree-SHA512: 1d2d6ef535ec2c55f516ee5de11352386ceac6bedaabc6842229a486d9f28d35310ad5f57bfcc1f1e654fc397ecff29ec33256f9b3da897500b7e1635004b63a",
      "tree": {
        "sha": "1e8cb85ca7d05dda1f46b88eaea448f610d1dce9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e8cb85ca7d05dda1f46b88eaea448f610d1dce9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/422ec33d45ed1ab90031a587b34005c16c1a8796",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3O9ioACgkQ0upIUOdS\niyUH5xAAqUJoLgPSYfArIxeyGLRY2e6vhA9lUV5qGO6DCfpusZrOj5YilpDcICBt\nX4QlW85iGLqJt9fHjhpNRMECGd+uZZT3NONljEp9Dw6h20lBE4NLqKMp934+PJHo\neRcJKTV/Z5nnGXyAv1luh0hW1CoLZqvK0TmMG8hJOr97dceFsCVQHisnI2HvOee0\nbNRstrKITuzWiH0qvTpk53AZS3e29i5sKpRlkhCzu20rZtB13jtowtt5emlhw1cu\nSw0oktaUDsuhLIQdjjp19RPgwQMhNUWStsl8IjpUcyE9sw+yx96mXgZ/UgIVuMWq\nZjZyzOVZSmunuynEjRT3C7e6u/QccFXaozZJG4w5fBYOR7j8RQNRYYUPKSD3HHtr\nsiClnWoNd13VG0VLRhHFPn3S7BVdqvEA0H4fhTTWupRAqf+1D+Jim/Mc9o/HHEA4\n2ZHKsugM8FlcTiFIrr9aUOQo6jBnAsqwoWQKmcAuhBhYCe5fg7dQy6GNFvxvnqpI\nKirkBZi0vbCT/ybZFT6e81kEsvsfeh6MaiRYvEX8th4IJKiPyACVOq/S8okpmmEu\nB3tOQB/XotxQ/sndQRkX9EsB6qkqpHzJ01PHQusiR14a+t3BenemBm2SF7w8dhds\nTZ2jLXr/wDWJiCaLjz4VrDCraQA4B/VuuY5QkLcZokuUg7yc/bk=\n=eiIE\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMD7SaQDj0R2Jlq36m9W4ZFy7wU9H73bobuk/CstLFSPCP/wEBqEqSiW5KLj\nxwbhNK/2vCQI8QRdzvYt8AiuffQSi0k3/ACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQq91uP665CaFZPkFP\nNnuUKQjxBF3O9i3wCOI1QqVqJw2GAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQw7WNJsv7IDwoNvAYuPIYqQjx\nBF3O9i3wCEyKQhbTSZnwAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDFk/WOcSW5n+YAcHLcNIOLCPEEXc72LPAIytnv\nDpASx0kAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 1e8cb85ca7d05dda1f46b88eaea448f610d1dce9\nparent c7709cbf4c15123332dc37c70dc491422f81e080\nparent 38516f9078497d3e8456d48300eca40c35a281f2\nauthor MarcoFalke <falke.marco@gmail.com> 1573844519 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573844521 -0500\n\nMerge #17322: Fix input size assertion in wallet_bumpfee.py\n\n38516f9078497d3e8456d48300eca40c35a281f2 Fix input size assertion in wallet_bumpfee.py (Gregory Sanders)\n\nPull request description:\n\n  I was investigating a curious error for https://github.com/bitcoin/bitcoin/pull/17290 and realized that this check should have caught that error earlier in the test.\n\n  The loop is intended to ensure that only a single input exists the entire time until the change output disappears, a single additional bump occurs, then it leaves the loop.\n\nTop commit has no ACKs.\n\nTree-SHA512: 1d2d6ef535ec2c55f516ee5de11352386ceac6bedaabc6842229a486d9f28d35310ad5f57bfcc1f1e654fc397ecff29ec33256f9b3da897500b7e1635004b63a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/422ec33d45ed1ab90031a587b34005c16c1a8796",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/422ec33d45ed1ab90031a587b34005c16c1a8796",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/422ec33d45ed1ab90031a587b34005c16c1a8796/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7709cbf4c15123332dc37c70dc491422f81e080",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7709cbf4c15123332dc37c70dc491422f81e080",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7709cbf4c15123332dc37c70dc491422f81e080"
      },
      {
        "sha": "38516f9078497d3e8456d48300eca40c35a281f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38516f9078497d3e8456d48300eca40c35a281f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38516f9078497d3e8456d48300eca40c35a281f2"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "9d6aa36c355cf0f8db5b439059d8a6aad47d52b5",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/422ec33d45ed1ab90031a587b34005c16c1a8796/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/422ec33d45ed1ab90031a587b34005c16c1a8796/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=422ec33d45ed1ab90031a587b34005c16c1a8796",
        "patch": "@@ -211,15 +211,15 @@ def test_small_output_with_feerate_succeeds(rbf_node, dest_address):\n     # Make sure additional inputs exist\n     rbf_node.generatetoaddress(101, rbf_node.getnewaddress())\n     rbfid = spend_one_input(rbf_node, dest_address)\n-    original_input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n-    assert_equal(len(original_input_list), 1)\n-    original_txin = original_input_list[0]\n+    input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n+    assert_equal(len(input_list), 1)\n+    original_txin = input_list[0]\n     # Keep bumping until we out-spend change output\n     tx_fee = 0\n     while tx_fee < Decimal(\"0.0005\"):\n-        new_input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n-        new_item = list(new_input_list)[0]\n-        assert_equal(len(original_input_list), 1)\n+        input_list = rbf_node.getrawtransaction(rbfid, 1)[\"vin\"]\n+        new_item = list(input_list)[0]\n+        assert_equal(len(input_list), 1)\n         assert_equal(original_txin[\"txid\"], new_item[\"txid\"])\n         assert_equal(original_txin[\"vout\"], new_item[\"vout\"])\n         rbfid_new_details = rbf_node.bumpfee(rbfid)"
      }
    ]
  },
  {
    "sha": "f92e750eb4eb275b30940a149568e094f0f9523d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTJlNzUwZWI0ZWIyNzViMzA5NDBhMTQ5NTY4ZTA5NGYwZjk1MjNk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:03:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:03:56Z"
      },
      "message": "Merge #17480: test: add unit test for non-standard txs with too large scriptSig\n\n5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e test: add unit test for non-standard txs with too large scriptSig (Sebastian Falbesoner)\n\nPull request description:\n\n  Approaches the first missing test of issue #17394: Checks that the function `IsStandardTx()` returns rejection reason `\"scriptsig-size\"` if any one the inputs' scriptSig is larger than 1650 bytes.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e\n\nTree-SHA512: 79977b12ddea9438a37cefdbb48cc551e4ad02a8ccfaa2d2837ced9f3a185e2e07cc366c243b9e3c7736245e90e315d7b4110efc6b440c63dbef7ee2c9d78a73",
      "tree": {
        "sha": "74408007a2d8b430d90c5d83f11eec969c93e4b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/74408007a2d8b430d90c5d83f11eec969c93e4b2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f92e750eb4eb275b30940a149568e094f0f9523d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3O9pwACgkQ0upIUOdS\niyWwWxAAtwT8S2tGjHnG5WtfdTChr5ARxl0ert4h43Uts5nYZ1CO3SUS+1vYndgf\n6P70CaMsYeKYK3JcJ17dTR3WeFMr8FvjgKKmndmJIeJwx1AG6qydxw8LO6jEOYmV\nl43M5ZB7ceK7PqHWZtUOsJzVQcdcgyvHQFYOEh3lK6NZB6kw3mhvLLEDxIafJI9S\nLLbDiiVg0Mitb4efI5nl7GYov2J7jG6QaHq0jy2xbR1nol+ONnDeQjauLxpT7Qtn\nQSu33xaFMKxGm9ZV5GKrGxC92j/bdkk1PVRjBgZXL78sVO4ltt9YL/Giezs6rWfO\nnFa0SvYXVr8tAC7wEGUQmove/8zOXnHAfl5NqjdmbF3aWl8/9UYqDOhtEe0oLDV1\nxkGGLvEqm4RigeCxrRytjjAUuX09nJeeHFnf64j1wkUWjoRiSwwyq0RtbiLWjnow\nXzGam21MrP33bH67EQ1Za+cjzMhvYEfu3YOwVwcKeTjxnh0YjoVDpsXN0FzFW5nI\nQid3BV7AqkwLKumAwbmGyvx17JUqc/GP13lzHloRmVsZcA3sIYUA7KbNJjXcVaMG\nrTJGnkMyhqdgQ0z+nN/MiKAKBpr8BlRZh1u7r7cU0fvehmkB+ZKFBRUTP9UCkBNn\neJ9U3lYE9zCzvYgpM0Jz5hTRht377qSaiSYV1vcFb32HZJta8oY=\n=Vysq\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEAJc5JAitMn9uJyN8/WS6yCQaOoiB7l3Lwc3HwT7EmxCP/wEAODisaPRcMR\nv9ULJOqBDuEI8QRdzvad8AjhkMFoEUzEXQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wECFuIIW6HM37qsWTEubmNSAI8QRdzvad\n8Aji3cnTeTr4BACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQodkC52wo8/TytyZaaeyqxQjxILaUtXhdBsEE\nTS3VgCd0pJNaUG5j3+tsnCpGTorN7BpoCPEEXc72nfAIlLEpHCU5BBsAg9/jDS75\nDI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb23wEPS9\n6v3bT7EUq4SwpfoMdd0I8SAxS/flrHOs5dU++SjfbFL66LO2mcb7rI1Q1b9uN4/+\nTAjxBF3O9p3wCJvH3KkM+6rOAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 74408007a2d8b430d90c5d83f11eec969c93e4b2\nparent 422ec33d45ed1ab90031a587b34005c16c1a8796\nparent 5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e\nauthor MarcoFalke <falke.marco@gmail.com> 1573844634 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573844636 -0500\n\nMerge #17480: test: add unit test for non-standard txs with too large scriptSig\n\n5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e test: add unit test for non-standard txs with too large scriptSig (Sebastian Falbesoner)\n\nPull request description:\n\n  Approaches the first missing test of issue #17394: Checks that the function `IsStandardTx()` returns rejection reason `\"scriptsig-size\"` if any one the inputs' scriptSig is larger than 1650 bytes.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e\n\nTree-SHA512: 79977b12ddea9438a37cefdbb48cc551e4ad02a8ccfaa2d2837ced9f3a185e2e07cc366c243b9e3c7736245e90e315d7b4110efc6b440c63dbef7ee2c9d78a73\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f92e750eb4eb275b30940a149568e094f0f9523d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f92e750eb4eb275b30940a149568e094f0f9523d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f92e750eb4eb275b30940a149568e094f0f9523d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "422ec33d45ed1ab90031a587b34005c16c1a8796",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/422ec33d45ed1ab90031a587b34005c16c1a8796",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/422ec33d45ed1ab90031a587b34005c16c1a8796"
      },
      {
        "sha": "5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eb0050a4a385185499a006e15494a998e21d798d",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f92e750eb4eb275b30940a149568e094f0f9523d/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f92e750eb4eb275b30940a149568e094f0f9523d/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=f92e750eb4eb275b30940a149568e094f0f9523d",
        "patch": "@@ -784,6 +784,19 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     reason.clear();\n     BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n     BOOST_CHECK_EQUAL(reason, \"multi-op-return\");\n+\n+    // Check large scriptSig (non-standard if size is >1650 bytes)\n+    t.vout.resize(1);\n+    t.vout[0].nValue = MAX_MONEY;\n+    t.vout[0].scriptPubKey = GetScriptForDestination(PKHash(key.GetPubKey()));\n+    // OP_PUSHDATA2 with len (3 bytes) + data (1647 bytes) = 1650 bytes\n+    t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(1647, 0); // 1650\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(1648, 0); // 1651\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"scriptsig-size\");\n }\n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZWQzZTA3MWRmZWFlY2VhYjUyMjhmOGRkYTBlZDZiNGQ1NjBjYzJk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:43:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T19:43:50Z"
      },
      "message": "Merge #17455: tests: Update valgrind suppressions\n\nd604b4cc8c112a38976c4662cbdc3217a0e5b370 tests: Update valgrind suppressions (practicalswift)\n\nPull request description:\n\n  Update `valgrind` suppressions.\n\n  To test this PR:\n\n  ```\n  $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n  $ valgrind --suppressions=contrib/valgrind.supp src/bench/bench_bitcoin -evals=1 \\\n        -scaling=0.0\n  ```\n\nTop commit has no ACKs.\n\nTree-SHA512: 79cb318b5b9171e74d0bd0b89cc688ad4531b134182b06c2942c46058c19b45723c391b781e8ccd157a14fbf6a14588764c7728c5506c73ae237dde9f44db2f6",
      "tree": {
        "sha": "c08605cb92d11eab995ff3940d6c71cf2367759b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c08605cb92d11eab995ff3940d6c71cf2367759b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3O//YACgkQ0upIUOdS\niyVVqg/+LxVkXz58XvA9dSkDNY7PnNDpyZH2Sn1GHoiSauKlqY3Ln7nfWRLAeuOI\nUd4qb2m0xODxeQNBbW2shv302AbDTNhthzsBu2g6uxLGXwDhEGHDoNkWfedDeJPB\n1hfzlRyPHZT5cQ0UMIwgy+JHNZiH36Kl2XjYQMDRTz9f76lqcZR7RG3LA+ds5u5i\nxWddkjqv605TY6W8gVPtl7cRQBsdXJ8nTlfCMPkgtrh+NR2EUuyfyxWcKZXaxSe/\nz1AY3TZkxhMD9n6r3R++K4wA53Y9t/Yc/lXqAyff9jPv/hsC3mQS/EEJ0KqVYPjp\n4l2xFM7xX1BEGgB5z0PYeCdRjOgkXdIYX6UkC5EaJxIKonW+pNkHhTcKw4YwySv7\nW+sLE7rX0e+M7171cTLWWSfM/Sm/BvsB+xy0MD20w9bZ3GC9Jcl4+B3+sLy3Kd+N\nw1HKCFM7/KRuiV3r0U5yg2PeEsjfZosULhrrwHXA/+Z3Z73997mY5rTLAaL7Gs7T\n0OX0Cw4jug8xtfFhTfmHosm7H7SjGf9p3ux8oc5W+7TFRgAFqxMBf9ygsKwUI5Bk\nJ4EaqrJFaak/TL3tP/rrBcyZCWvgQWsZqE9Rau7/3/rAhBYHEgZWCIqoKMmDBT56\nxVXHIEHUzTVf8jzWX+uacd/J9VVN3rB/Ujv7v89rWFlfmzcEge8=\n=s/bL\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHuskWqGkVi/NgaI1R3NznqjZYN+U/xJxf9b8ZISaXxXCP/wEEeWdzhdgMgv\nvQ7VgWpaMhkI8QRdzv/48AjyLTnr20ASXgCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQqSymALnSI7JMI8Gb\nd3ck1AjxBF3O//jwCAN8BZCFsQ+uAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQrLjco30Hj9bzr4pTrJpYwAjx\nBF3O//jwCK9QrgDMoa+7AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BD3+m1ijh3U3vqlJKSkq56MCPEEXc7/+PAI7MMz\nfc8HAygAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree c08605cb92d11eab995ff3940d6c71cf2367759b\nparent f92e750eb4eb275b30940a149568e094f0f9523d\nparent d604b4cc8c112a38976c4662cbdc3217a0e5b370\nauthor MarcoFalke <falke.marco@gmail.com> 1573847023 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573847030 -0500\n\nMerge #17455: tests: Update valgrind suppressions\n\nd604b4cc8c112a38976c4662cbdc3217a0e5b370 tests: Update valgrind suppressions (practicalswift)\n\nPull request description:\n\n  Update `valgrind` suppressions.\n\n  To test this PR:\n\n  ```\n  $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n  $ valgrind --suppressions=contrib/valgrind.supp src/bench/bench_bitcoin -evals=1 \\\n        -scaling=0.0\n  ```\n\nTop commit has no ACKs.\n\nTree-SHA512: 79cb318b5b9171e74d0bd0b89cc688ad4531b134182b06c2942c46058c19b45723c391b781e8ccd157a14fbf6a14588764c7728c5506c73ae237dde9f44db2f6\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f92e750eb4eb275b30940a149568e094f0f9523d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f92e750eb4eb275b30940a149568e094f0f9523d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f92e750eb4eb275b30940a149568e094f0f9523d"
      },
      {
        "sha": "d604b4cc8c112a38976c4662cbdc3217a0e5b370",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d604b4cc8c112a38976c4662cbdc3217a0e5b370",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d604b4cc8c112a38976c4662cbdc3217a0e5b370"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 70,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3c485c1df6e1e2ff9a4389038fce2f1bc95585af",
        "filename": "contrib/valgrind.supp",
        "status": "modified",
        "additions": 70,
        "deletions": 1,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d/contrib/valgrind.supp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d/contrib/valgrind.supp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/valgrind.supp?ref=1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
        "patch": "@@ -6,7 +6,14 @@\n # Example use:\n # $ valgrind --suppressions=contrib/valgrind.supp src/test/test_bitcoin\n # $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n-#       --show-leak-kinds=all src/test/test_bitcoin --log_level=test_suite\n+#       --show-leak-kinds=all src/test/test_bitcoin\n+#\n+# To create suppressions for found issues, use the --gen-suppressions=all option:\n+# $ valgrind --suppressions=contrib/valgrind.supp --leak-check=full \\\n+#       --show-leak-kinds=all --gen-suppressions=all --show-reachable=yes \\\n+#       --error-limit=no src/test/test_bitcoin\n+#\n+# Note that suppressions may depend on OS and/or library versions.\n {\n    Suppress libstdc++ warning - https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65434\n    Memcheck:Leak\n@@ -26,6 +33,14 @@\n    obj:*/libdb_cxx-*.so\n    fun:__log_put_record\n }\n+{\n+   Suppress libdb warning\n+   Memcheck:Param\n+   pwrite64(buf)\n+   fun:pwrite\n+   fun:__os_io\n+   obj:*/libdb_cxx-*.so\n+}\n {\n    Suppress leveldb warning (leveldb::InitModule()) - https://github.com/google/leveldb/issues/113\n    Memcheck:Leak\n@@ -41,3 +56,57 @@\n    ...\n    fun:_ZN7leveldbL14InitDefaultEnvEv\n }\n+{\n+   Suppress wcsnrtombs glibc SSE4 warning (could be related: https://stroika.atlassian.net/browse/STK-626)\n+   Memcheck:Addr16\n+   fun:__wcsnlen_sse4_1\n+   fun:wcsnrtombs\n+}\n+{\n+   Suppress boost::filesystem warning (fixed in boost 1.70: https://github.com/boostorg/filesystem/commit/bbe9d1771e5d679b3f10c42a58fc81f7e8c024a9)\n+   Memcheck:Cond\n+   fun:_ZN5boost10filesystem6detail28directory_iterator_incrementERNS0_18directory_iteratorEPNS_6system10error_codeE\n+   fun:_ZN5boost10filesystem6detail28directory_iterator_constructERNS0_18directory_iteratorERKNS0_4pathEPNS_6system10error_codeE\n+   obj:*/libboost_filesystem.so.*\n+}\n+{\n+   Suppress boost::filesystem warning (could be related: https://stackoverflow.com/questions/9830182/function-boostfilesystemcomplete-being-reported-as-possible-memory-leak-by-v)\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_ZN5boost10filesystem8absoluteERKNS0_4pathES3_\n+}\n+{\n+   Suppress boost still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   ...\n+   fun:_M_construct_aux<char*>\n+   fun:_M_construct<char*>\n+   fun:basic_string\n+   fun:path\n+}\n+{\n+   Suppress LogInstance still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:_Znwm\n+   fun:_Z11LogInstancev\n+}\n+{\n+   Suppress secp256k1_context_create still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:secp256k1_context_create\n+}\n+{\n+   Suppress BCLog::Logger::StartLogging() still reachable memory warning\n+   Memcheck:Leak\n+   match-leak-kinds: reachable\n+   fun:malloc\n+   ...\n+   fun:_ZN5BCLog6Logger12StartLoggingEv\n+}"
      }
    ]
  },
  {
    "sha": "b90dad5143993d266cdfeece898164d648bbbd78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTBkYWQ1MTQzOTkzZDI2NmNkZmVlY2U4OTgxNjRkNjQ4YmJiZDc4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T20:09:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-15T20:09:28Z"
      },
      "message": "Merge #17486: build: make Travis catch unused variables\n\n18b18f8e813b332d0ce6b0af19c9cb265f043776 [build] ./configure --enable-werror: add unused-variable (Sjors Provoost)\n\nPull request description:\n\n  The two macOS Travis machines run with `--enable-werror`. This PR adds `-Werror=unused-variable` to the existing `vla`, `switch` and `thread-safety-analysis` checks. This should prevent the need for fixes like b07b07cd8779355ba1dd16e7eb4af42e0ae1c587, 26a93bce29fd813e1402b013f402869c25b656d1, dd777f3e1220dd1a76e8a29cafdd4fe6244c5c0f, 99be644966c63e9917161f97574905551e44360f, fa39f674aed8f2dc5a9bde6a84b0ec52fc49e695, 16bcc1b8237698c96b8ced2fa7eb76388c7ba85e, bb079a0e2c20beb22456c91ad9e11beeae7cdc34, bdaed4755846e8b1e533c14485faa5f9fd1cf18b and ecf9b25a03d8a29f16005ca4485b6533db6efc82 with minimal nuisance.\n\n  Thoughts for followups:\n  * Travis starts these macOS machines fairly late, so we should consider setting `--enable-werror` on earlier machines as well.\n  * We should encourage the use of `--enable-werror` by developers. Maybe switch it on by default for `--enable-debug`?\n  * See practicalswift's overview of other checks to consider in #17344\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 18b18f8e813b332d0ce6b0af19c9cb265f043776\n  practicalswift:\n    ACK 18b18f8e813b332d0ce6b0af19c9cb265f043776 -- nice!\n\nTree-SHA512: 892b471ca5ea547f3c952ac88190cbebf8110cb7aec6f20466aeb312aeb0910bfe990f914e153c40ecb55709c03775ef30770412ad76f9d532ca77055596c582",
      "tree": {
        "sha": "b3742ee2f1785a773a57b2c73e83546a81107f9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3742ee2f1785a773a57b2c73e83546a81107f9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b90dad5143993d266cdfeece898164d648bbbd78",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3PBfgACgkQ0upIUOdS\niyX0Jw//TWLiNRIILL9NmHCvrAxQA6EKcqUue7rot9Gq3xVYxG4riueoe1iBop6s\ntcLTtJh5Z55tf0mn+UlyO9J+bDUHZvhHgmsuRcUXpWnA0Ij8m+oWvwrZc6IqByLq\nPQx0t+sU1sn1jm7W12ECgAsipDoSIt1zp/asanOvXEHoHdhGXKC9VAYsY1CnKIa3\nJQROmb2lbwlVQhF2W1HUfgLA4dUjPVuX4K4tgJM3ZdlUI+2PdU9ZC99a/HNKsTJy\nkg1VpTG+ljAllbvm+dBDNnybWJ68RA96g6KhAAQNuA0333pd1vKEP/ckqjYVzFoN\ncZXBP6eCPweYB0+hb4o6JAZlG+dCiVxXAARoKpYqbBMCzao7Bxg4FHdC4HJOBTZs\n6Tk/GrXMWysU1IfOnmKfRNeT3lddYFyZVDWQM39LQY9mCsWMns/5hfpSaPxsCrAG\nI5Y2BNF17miP0FCWu5ODMf9R0+5PUYAxQsT/6Tsio46PPJC+tVpaCgGh9qE6xusy\nVocABg5u2KaGAm3PPsgDialfeKQFRkFU/cacRM3Yyc+DZjdEg+t8hF0+ajZ/bF80\nGGGjD0V69G9ckHoTSRzKuJ+8phwXDadtxSnCcrg86BMnaFl/STui0gCzl85jhuY1\nHSQYDvGSg5bEPi65cWM5KmLbNxEIzSWVNT93/ZuqxYR8HlkJoIE=\n=g5vB\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIC/JJUZ5daPUlvsps+0pi5anMh2xzpF5zfo8nAkpOWh6CP/wEBODV5qg0lre\ntHKdcmY6eA0I8QRdzwX68AgO5zSnhH02LwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEGWFufNK2kYc1YGRyITJ\nBhQI8QRdzwX68AhifxmK7+vGeQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEI+0eMApHu0JmZvuaaNb34sI8QRdzwX68AjKSsw+\n5C9KQgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BD4xdOLognOq8QzdlCRqwKeCPEEXc8F+/AI90CKTbSeSUQA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b3742ee2f1785a773a57b2c73e83546a81107f9d\nparent 1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d\nparent 18b18f8e813b332d0ce6b0af19c9cb265f043776\nauthor MarcoFalke <falke.marco@gmail.com> 1573848565 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1573848568 -0500\n\nMerge #17486: build: make Travis catch unused variables\n\n18b18f8e813b332d0ce6b0af19c9cb265f043776 [build] ./configure --enable-werror: add unused-variable (Sjors Provoost)\n\nPull request description:\n\n  The two macOS Travis machines run with `--enable-werror`. This PR adds `-Werror=unused-variable` to the existing `vla`, `switch` and `thread-safety-analysis` checks. This should prevent the need for fixes like b07b07cd8779355ba1dd16e7eb4af42e0ae1c587, 26a93bce29fd813e1402b013f402869c25b656d1, dd777f3e1220dd1a76e8a29cafdd4fe6244c5c0f, 99be644966c63e9917161f97574905551e44360f, fa39f674aed8f2dc5a9bde6a84b0ec52fc49e695, 16bcc1b8237698c96b8ced2fa7eb76388c7ba85e, bb079a0e2c20beb22456c91ad9e11beeae7cdc34, bdaed4755846e8b1e533c14485faa5f9fd1cf18b and ecf9b25a03d8a29f16005ca4485b6533db6efc82 with minimal nuisance.\n\n  Thoughts for followups:\n  * Travis starts these macOS machines fairly late, so we should consider setting `--enable-werror` on earlier machines as well.\n  * We should encourage the use of `--enable-werror` by developers. Maybe switch it on by default for `--enable-debug`?\n  * See practicalswift's overview of other checks to consider in #17344\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 18b18f8e813b332d0ce6b0af19c9cb265f043776\n  practicalswift:\n    ACK 18b18f8e813b332d0ce6b0af19c9cb265f043776 -- nice!\n\nTree-SHA512: 892b471ca5ea547f3c952ac88190cbebf8110cb7aec6f20466aeb312aeb0910bfe990f914e153c40ecb55709c03775ef30770412ad76f9d532ca77055596c582\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b90dad5143993d266cdfeece898164d648bbbd78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1ed3e071dfeaeceab5228f8dda0ed6b4d560cc2d"
      },
      {
        "sha": "18b18f8e813b332d0ce6b0af19c9cb265f043776",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/18b18f8e813b332d0ce6b0af19c9cb265f043776",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/18b18f8e813b332d0ce6b0af19c9cb265f043776"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "998c82916a34dfb6f121d07814215645b0fbdd8d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b90dad5143993d266cdfeece898164d648bbbd78/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b90dad5143993d266cdfeece898164d648bbbd78/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=b90dad5143993d266cdfeece898164d648bbbd78",
        "patch": "@@ -329,6 +329,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n fi\n \n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n@@ -341,6 +342,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\n   ## unknown options if any other warning is produced. Test the -Wfoo case, and"
      }
    ]
  },
  {
    "sha": "1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzIzZWE1ZmU2N2I4OGZkNzJhMWZmNjQwZGQxYmJiMjFhMzRmYmY0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-15T16:38:27Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-15T21:03:47Z"
      },
      "message": "test: fix bitcoind already running warnings on macOS\n\nOn macOS, pidof installed via brew returns b'' rather than None.\nAccount for this, to remove spurious warnings from the test_runner.",
      "tree": {
        "sha": "e10cbd8a0a19cb87fef1506e7d18dde9f1b38b61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e10cbd8a0a19cb87fef1506e7d18dde9f1b38b61"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3PErMACgkQLuufXMCV\nJsE+cg//aIwUo8cVoo7aiPiMKtCNSBNm+kguEEx87ofAVilV6a+BQYFNMLwQA2e0\n4LyyFLyeezF2BxZe5g3qwQbkgJSMMmOejQ6Z+CEopg3ImXJ1dJOeRyIkY3Shqjp8\nyrV88anEhazEMLS+vlJENkZ/b9SHqEya4L6UTyYO0Lk14KfWE5bPMLlLlUMMK7H4\nPf1166XXN+uu0lSicOHHGkPsry2RNYskDZg/5o9Kxii4/EYiv+4K/pfOMywSzzjA\n5v44Wl/Gn1IxyCQ19uYjifio0bDLCXeDEp54QwNMIUtIJVCSJP6y2jwI7iaHehh2\n2Db1tBdsPYkzWPxOs+ZwQLedS41zuK6BfjhhXWQvkE8dM8stUANXmb/QSRdvjVZN\nz0gOlV5tMtjtkNdyJ+Ai4aLVuRN1Kq3s690krAccf7lHwVUyYR9q34ErQSb1ctVz\ncMvM2xCAG3WAsXRFFBWGXtWjC1QXW0V3uAYJ9malXIoxSjhIhtcGa2yyvdcMX8rn\nxOD5UwtvJofebimFEl7c/Kk9zqcNjErXI3OGYWcA65DYsE0EwF/H5Jl5tmEyZhVw\nTxRiCVegP49YyOCRZ44vGTGqQo8NXIkzRszHHbEVJg+5b6vfpt0oIhViGqgRmOR3\n0xibE/cz2rrbuyv060t/zkYMt/l2JAThpRk3RqsVugGG8S/7Vds=\n=Vk/+\n-----END PGP SIGNATURE-----",
        "payload": "tree e10cbd8a0a19cb87fef1506e7d18dde9f1b38b61\nparent b90dad5143993d266cdfeece898164d648bbbd78\nauthor fanquake <fanquake@gmail.com> 1573835907 -0500\ncommitter fanquake <fanquake@gmail.com> 1573851827 -0500\n\ntest: fix bitcoind already running warnings on macOS\n\nOn macOS, pidof installed via brew returns b'' rather than None.\nAccount for this, to remove spurious warnings from the test_runner.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b90dad5143993d266cdfeece898164d648bbbd78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b90dad5143993d266cdfeece898164d648bbbd78"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4156e22720f5d812154c3fea82f7d54b08794fd0",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
        "patch": "@@ -364,9 +364,10 @@ def main():\n def run_tests(*, test_list, src_dir, build_dir, tmpdir, jobs=1, enable_coverage=False, args=None, combined_logs_len=0, failfast=False, runs_ci, use_term_control):\n     args = args or []\n \n-    # Warn if bitcoind is already running (unix only)\n+    # Warn if bitcoind is already running\n+    # pidof might fail or return an empty string if bitcoind is not running\n     try:\n-        if subprocess.check_output([\"pidof\", \"bitcoind\"]) is not None:\n+        if subprocess.check_output([\"pidof\", \"bitcoind\"]) not in [b'']:\n             print(\"%sWARNING!%s There is already a bitcoind process running on this system. Tests may fail unexpectedly due to resource contention!\" % (BOLD[1], BOLD[0]))\n     except (OSError, subprocess.SubprocessError):\n         pass"
      }
    ]
  },
  {
    "sha": "ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDcxNTQ4ODIyMmYyZjJjZTJlMmNmZjYzMmVhZTk0ZmQ0OWVhOWM1",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-06-06T20:50:17Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-11-16T16:44:42Z"
      },
      "message": "Fix compilation errors in support/lockedpool.cpp\n\nChanges in #12048 cause a compilation error in Arena::walk() when\nARENA_DEBUG is defined. Specifically, Arena's chunks_free map was\nchanged to have a different value type.\n\nAdditionally, missing includes cause other compilation errors when\nARENA_DEBUG is defined.\n\nReproduced with:\n\nmake CPPFLAGS=-DARENA_DEBUG",
      "tree": {
        "sha": "b34b5e80a2f2fd74d4325fcca3ae8ddcb4480a6e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b34b5e80a2f2fd74d4325fcca3ae8ddcb4480a6e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad715488222f2f2ce2e2cff632eae94fd49ea9c5/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80fdb6fad132166b10fbeb8615e3c5c591209e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/80fdb6fad132166b10fbeb8615e3c5c591209e0b"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a9541a9cac24dd428e14ed2ac61f73f31ff45082",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad715488222f2f2ce2e2cff632eae94fd49ea9c5/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad715488222f2f2ce2e2cff632eae94fd49ea9c5/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
        "patch": "@@ -23,6 +23,10 @@\n #endif\n \n #include <algorithm>\n+#ifdef ARENA_DEBUG\n+#include <iomanip>\n+#include <iostream>\n+#endif\n \n LockedPoolManager* LockedPoolManager::_instance = nullptr;\n std::once_flag LockedPoolManager::init_flag;\n@@ -149,7 +153,7 @@ void Arena::walk() const\n         printchunk(chunk.first, chunk.second, true);\n     std::cout << std::endl;\n     for (const auto& chunk: chunks_free)\n-        printchunk(chunk.first, chunk.second, false);\n+        printchunk(chunk.first, chunk.second->first, false);\n     std::cout << std::endl;\n }\n #endif"
      }
    ]
  },
  {
    "sha": "15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNWM4NGY1M2Y0N2JmNmU2YTljNGM5ZGZlNTBjNzhkOThmN2VjMDdm",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-06-10T21:55:12Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-11-16T16:45:21Z"
      },
      "message": "Define ARENA_DEBUG in Travis test runs\n\nThe definition and uses of Arena::walk() are compiled only if\nARENA_DEBUG is defined. Configure Travis to define ARENA_DEBUG so\ncompilation errors do not go unnoticed.",
      "tree": {
        "sha": "5f05dabc2358699e3e77ddf1d3d1742e880ee3dc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f05dabc2358699e3e77ddf1d3d1742e880ee3dc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad715488222f2f2ce2e2cff632eae94fd49ea9c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad715488222f2f2ce2e2cff632eae94fd49ea9c5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "815590b1636106a728d08e41b84fbbd842535369",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
        "patch": "@@ -9,4 +9,4 @@ export LC_ALL=C.UTF-8\n export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "0e12e97d2e41bc9d1d9c7334f674a0e12890b0df",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
        "patch": "@@ -10,4 +10,4 @@ export DOCKER_NAME_TAG=ubuntu:16.04\n export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      }
    ]
  },
  {
    "sha": "30fb598737f6efb7802d707a1fa989872e7f8b7b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGZiNTk4NzM3ZjZlZmI3ODAyZDcwN2ExZmE5ODk4NzJlN2Y4Yjdi",
    "commit": {
      "author": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-11-16T18:40:16Z"
      },
      "committer": {
        "name": "Jeffrey Czyz",
        "email": "jkczyz@gmail.com",
        "date": "2019-11-16T18:43:37Z"
      },
      "message": "Fix segfault in allocator_tests/arena_tests\n\nThe test uses reinterpret_cast<void*> on unallocated memory. Using this\nmemory in printchunk as char* causes a segfault, so have printchunk take\nvoid* instead.",
      "tree": {
        "sha": "8e63489b927987f04afcb3a55d4862ee008a3083",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e63489b927987f04afcb3a55d4862ee008a3083"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30fb598737f6efb7802d707a1fa989872e7f8b7b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fb598737f6efb7802d707a1fa989872e7f8b7b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30fb598737f6efb7802d707a1fa989872e7f8b7b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fb598737f6efb7802d707a1fa989872e7f8b7b/comments",
    "author": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jkczyz",
      "id": 4015903,
      "node_id": "MDQ6VXNlcjQwMTU5MDM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4015903?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jkczyz",
      "html_url": "https://github.com/jkczyz",
      "followers_url": "https://api.github.com/users/jkczyz/followers",
      "following_url": "https://api.github.com/users/jkczyz/following{/other_user}",
      "gists_url": "https://api.github.com/users/jkczyz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jkczyz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jkczyz/subscriptions",
      "organizations_url": "https://api.github.com/users/jkczyz/orgs",
      "repos_url": "https://api.github.com/users/jkczyz/repos",
      "events_url": "https://api.github.com/users/jkczyz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jkczyz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "85e3351e72576192af7733cb5ced6fcac609fee3",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30fb598737f6efb7802d707a1fa989872e7f8b7b/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30fb598737f6efb7802d707a1fa989872e7f8b7b/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=30fb598737f6efb7802d707a1fa989872e7f8b7b",
        "patch": "@@ -141,7 +141,7 @@ Arena::Stats Arena::stats() const\n }\n \n #ifdef ARENA_DEBUG\n-static void printchunk(char* base, size_t sz, bool used) {\n+static void printchunk(void* base, size_t sz, bool used) {\n     std::cout <<\n         \"0x\" << std::hex << std::setw(16) << std::setfill('0') << base <<\n         \" 0x\" << std::hex << std::setw(16) << std::setfill('0') << sz <<"
      }
    ]
  },
  {
    "sha": "5fa28e99033c79d50188ee47d9f09d6ade595d71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmEyOGU5OTAzM2M3OWQ1MDE4OGVlNDdkOWYwOWQ2YWRlNTk1ZDcx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-17T03:45:07Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-17T03:45:07Z"
      },
      "message": "refactor: Remove unused signal",
      "tree": {
        "sha": "bb585c3358931f57e6d9978ee4af6de0df086e2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb585c3358931f57e6d9978ee4af6de0df086e2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5fa28e99033c79d50188ee47d9f09d6ade595d71",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3QwkMACgkQQQEIES5+\nqB/1uw//RV/N0YO5shu/5nVU7H5tttC5DKptc8q3hQMzSa2it4dRjD9fJS4k2UhW\nP6EKLBBK76ypohabaEKVtgPBhpid7Zdhmv7tqkphC3mLqJR9WkzR9vAk8dHa/ZDi\nZ+Lwr5ye7mu+KaBaqgwry8ST7tqHQYMzgR9XbqoFIUvag6ogc2IXn3TVIJy2/wO3\noKcf7oOTdJBv5DDvw/TLSnZpHx4bB57LZf3qRh0YS1+W7o6VInjiIvB4eFn5q4q0\nwjbWheaEFa2HxFnc1HDHUN4sJ7KNakBWlZy0sma98Nlu0QuKEjQcA3rrobNSv8xV\nDEMhw0CuIJeEg/UT7VgnbBAp1b2eVti8Tc5YlgpRkXXKFNLTKWkS9k8WJzPBltO9\nn5g8MmakImhatWHPFUmpN2yz6m598LMqd/9XSWrJ3MBoCrNmOjwk/RtzV5kDokrJ\nMIHQmk35EulkQuAcfO6Wg5aPpA+9B9kBlWKEGaR85gWovgT7nI4F3W94fwXtuiz9\nBS0V7dYfiwFoRtRODCXjO1oA6c6g8KRABfyd3keeDwL8oYFYifzqXeYvE2zZq8fS\npgxEMCELVJ171uhDpC6XQFvTbAWqxQIdhl3bYdOQW4ITvy5qAkxDBQNw3uIePFym\n/3CXu4SpeUPGSe2flZEcixG07JWSUUrBC2hIh0QGu60UUSfD77c=\n=lm/c\n-----END PGP SIGNATURE-----",
        "payload": "tree bb585c3358931f57e6d9978ee4af6de0df086e2d\nparent b90dad5143993d266cdfeece898164d648bbbd78\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573962307 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1573962307 +0200\n\nrefactor: Remove unused signal\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fa28e99033c79d50188ee47d9f09d6ade595d71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5fa28e99033c79d50188ee47d9f09d6ade595d71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fa28e99033c79d50188ee47d9f09d6ade595d71/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b90dad5143993d266cdfeece898164d648bbbd78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b90dad5143993d266cdfeece898164d648bbbd78"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 0,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4b2b475883618ac7e82d7a4aea46b6e06f074f86",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fa28e99033c79d50188ee47d9f09d6ade595d71/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fa28e99033c79d50188ee47d9f09d6ade595d71/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=5fa28e99033c79d50188ee47d9f09d6ade595d71",
        "patch": "@@ -61,11 +61,6 @@ void WalletFrame::addWallet(WalletModel *walletModel)\n     walletStack->addWidget(walletView);\n     mapWalletViews[walletModel] = walletView;\n \n-    // Ensure a walletView is able to show the main window\n-    connect(walletView, &WalletView::showNormalIfMinimized, [this]{\n-      gui->showNormalIfMinimized();\n-    });\n-\n     connect(walletView, &WalletView::outOfSyncWarningClicked, this, &WalletFrame::outOfSyncWarningClicked);\n }\n "
      },
      {
        "sha": "8d5a301cdbf52bed36a2080375db2bc093bd98ce",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5fa28e99033c79d50188ee47d9f09d6ade595d71/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5fa28e99033c79d50188ee47d9f09d6ade595d71/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=5fa28e99033c79d50188ee47d9f09d6ade595d71",
        "patch": "@@ -115,8 +115,6 @@ public Q_SLOTS:\n     void requestedSyncWarningInfo();\n \n Q_SIGNALS:\n-    /** Signal that we want to show the main window */\n-    void showNormalIfMinimized();\n     /**  Fired when a message should be reported to the user */\n     void message(const QString &title, const QString &message, unsigned int style);\n     /** Encryption status of wallet changed */"
      }
    ]
  },
  {
    "sha": "8944c1d340ac2be45b505ada7e187b770b0b036f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTQ0YzFkMzQwYWMyYmU0NWI1MDVhZGE3ZTE4N2I3NzBiMGIwMzZm",
    "commit": {
      "author": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-11-11T22:28:37Z"
      },
      "committer": {
        "name": "dannmat",
        "email": "mattwardiom",
        "date": "2019-11-17T12:00:06Z"
      },
      "message": "Changed tooltips of receive form to highlight difference between Label and Message",
      "tree": {
        "sha": "7c5947b3c260d5a685fd6f5ddbf99772152e35a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c5947b3c260d5a685fd6f5ddbf99772152e35a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8944c1d340ac2be45b505ada7e187b770b0b036f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8944c1d340ac2be45b505ada7e187b770b0b036f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8944c1d340ac2be45b505ada7e187b770b0b036f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8944c1d340ac2be45b505ada7e187b770b0b036f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "eb292af309aa57f3d7998b01307dd4cb91702908",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb292af309aa57f3d7998b01307dd4cb91702908",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb292af309aa57f3d7998b01307dd4cb91702908"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "64f52fcf45a965c5b6bcd7682bfabef703d0857f",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8944c1d340ac2be45b505ada7e187b770b0b036f/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8944c1d340ac2be45b505ada7e187b770b0b036f/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=8944c1d340ac2be45b505ada7e187b770b0b036f",
        "patch": "@@ -63,7 +63,7 @@\n         <item row=\"4\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqLabel\">\n           <property name=\"toolTip\">\n-           <string>An optional label to associate with the new receiving address.</string>\n+           <string>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</string>\n           </property>\n          </widget>\n         </item>\n@@ -93,7 +93,7 @@\n         <item row=\"6\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqMessage\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message that is attached to the payment request and may be displayed to the sender.</string>\n           </property>\n          </widget>\n         </item>"
      }
    ]
  },
  {
    "sha": "7dbc33f6176443fafdefadebd62438a69ad79a32",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZGJjMzNmNjE3NjQ0M2ZhZmRlZmFkZWJkNjI0MzhhNjlhZDc5YTMy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-11-17T20:36:22Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2019-11-17T20:36:44Z"
      },
      "message": "Merge #17499: refactor, qt: Remove unused signal from WalletView class\n\n5fa28e99033c79d50188ee47d9f09d6ade595d71 refactor: Remove unused signal (Hennadii Stepanov)\n\nPull request description:\n\n  `WalletView::showNormalIfMinimized()` signal was introduced in #2872 (dbc0a6aba2cf94aa1b167145a18e0b9c671aef5b).\n\n  The only signal emit command was removed in #3144 (2384a2864b6a0b29eec6410057aefe1fd8e7e585)\n\nACKs for top commit:\n  promag:\n    ACK 5fa28e99033c79d50188ee47d9f09d6ade595d71.\n  practicalswift:\n    ACK 5fa28e99033c79d50188ee47d9f09d6ade595d71: nice find\n  emilengler:\n    ACK 5fa28e9\n  jonasschnelli:\n    utACK 5fa28e99033c79d50188ee47d9f09d6ade595d71\n\nTree-SHA512: 4714acf8c683594d3c00523c7b14bc6b94d469418f0cebe4f4b5266ca0e4c45c80d4caf358739eae9231ee4a69c9c902caeb35f3866b99443cf653f89d6d825b",
      "tree": {
        "sha": "bb585c3358931f57e6d9978ee4af6de0df086e2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb585c3358931f57e6d9978ee4af6de0df086e2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7dbc33f6176443fafdefadebd62438a69ad79a32",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEyhopCNzi8TB0xizeHrd2uwPHki0FAl3Rr10ACgkQHrd2uwPH\nki14fQ/+J+ZtIVLmzvTx5j8//SCoMIGbzsXqzIdWDnwanHUVp4lkNIxbJdCc22tZ\nfbkQrg1zMnEwkwBWAeVIKISb9fNiLA+gSODbVpdhw9AlzZQsyj47FCxEM3MBUmZs\nwDKu43hHxkJYTgi2Si5lfqY2gmK9/coNsWGiqaqvJN2ZQVgLhmpVlvt+wi7mCk6l\nlh9bARXTxB/XyjRsqUw9iv7bxpYSPO+7Ve993om4gflgELZozV/ME8zUhdIzCHq5\n2oIW3UdZUiHqffDoGUfi72IlcBAA13/tTTRpq/7t5jTsxCIp/rJ15WE4ErWArkdc\nBzWG4xgYnyrRpD+uVv2w31eNtATClFlQnmqgLf3DRhTwku2AdqdmAh16/lEIMhwk\nva2YU+7UVc7tafBGA5fLclA+B9vvvEADIWZtXiRl1DTMWaqQPu8TjFTZP4RyLqKL\nXsBHnUQezte2PoU5WNOjkQFF5lMbd4p4N7rfBXK4eh4mDAPGcL6Y3vZD504gIbQm\niWRsBifNXrSdzv8VHRHcaOdpg0LGo5hbycVC01WuV+eUO8NMJrTqpsU7XtO+uwcS\nZiPWJYwDApM3BmTX/atOgT/7hKhkgs03mkSod6HsQ0MD2U4npIFsMyc4+tys9OGh\nmFeM6MgPET6q5WU/rZcKdTOSP7lOPspyTx9RbqyXwGjtEa/D4X4=\n=JprZ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIO0tcjNhyZLrzUhVCtNMktUEEsA0Neu5D03+i/BqyxdpCP/wEEb2q8ypfXDo\nRbC5DimbAxkI8QRd0a9h8AhGfA9FKc52awCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQkiZmfMe6+DurdKdG\nK0521wjxBF3Rr2HwCBXkqHskjAG+AIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxl\nbmRhci5jYXRhbGxheHkuY29t//AQnBvxl3c4W7lrLu2riuIiuwjxBF3Rr2HwCPzb\nFAk08+53AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BDABaLOHF+/q3Et9DM2nbNnCPAgNGdnf4OpdBtTPYPEg9I6FnWy\nosxZgu9shBk4G/QFOuEI8QRd0a9h8AjFrVFrCwRf0ACD3+MNLvkMjiwraHR0cHM6\nLy9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree bb585c3358931f57e6d9978ee4af6de0df086e2d\nparent b90dad5143993d266cdfeece898164d648bbbd78\nparent 5fa28e99033c79d50188ee47d9f09d6ade595d71\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1574022982 -1000\ncommitter Jonas Schnelli <dev@jonasschnelli.ch> 1574023004 -1000\n\nMerge #17499: refactor, qt: Remove unused signal from WalletView class\n\n5fa28e99033c79d50188ee47d9f09d6ade595d71 refactor: Remove unused signal (Hennadii Stepanov)\n\nPull request description:\n\n  `WalletView::showNormalIfMinimized()` signal was introduced in #2872 (dbc0a6aba2cf94aa1b167145a18e0b9c671aef5b).\n\n  The only signal emit command was removed in #3144 (2384a2864b6a0b29eec6410057aefe1fd8e7e585)\n\nACKs for top commit:\n  promag:\n    ACK 5fa28e99033c79d50188ee47d9f09d6ade595d71.\n  practicalswift:\n    ACK 5fa28e99033c79d50188ee47d9f09d6ade595d71: nice find\n  emilengler:\n    ACK 5fa28e9\n  jonasschnelli:\n    utACK 5fa28e99033c79d50188ee47d9f09d6ade595d71\n\nTree-SHA512: 4714acf8c683594d3c00523c7b14bc6b94d469418f0cebe4f4b5266ca0e4c45c80d4caf358739eae9231ee4a69c9c902caeb35f3866b99443cf653f89d6d825b\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dbc33f6176443fafdefadebd62438a69ad79a32",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7dbc33f6176443fafdefadebd62438a69ad79a32",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dbc33f6176443fafdefadebd62438a69ad79a32/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b90dad5143993d266cdfeece898164d648bbbd78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b90dad5143993d266cdfeece898164d648bbbd78"
      },
      {
        "sha": "5fa28e99033c79d50188ee47d9f09d6ade595d71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5fa28e99033c79d50188ee47d9f09d6ade595d71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5fa28e99033c79d50188ee47d9f09d6ade595d71"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 0,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4b2b475883618ac7e82d7a4aea46b6e06f074f86",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dbc33f6176443fafdefadebd62438a69ad79a32/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dbc33f6176443fafdefadebd62438a69ad79a32/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=7dbc33f6176443fafdefadebd62438a69ad79a32",
        "patch": "@@ -61,11 +61,6 @@ void WalletFrame::addWallet(WalletModel *walletModel)\n     walletStack->addWidget(walletView);\n     mapWalletViews[walletModel] = walletView;\n \n-    // Ensure a walletView is able to show the main window\n-    connect(walletView, &WalletView::showNormalIfMinimized, [this]{\n-      gui->showNormalIfMinimized();\n-    });\n-\n     connect(walletView, &WalletView::outOfSyncWarningClicked, this, &WalletFrame::outOfSyncWarningClicked);\n }\n "
      },
      {
        "sha": "8d5a301cdbf52bed36a2080375db2bc093bd98ce",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7dbc33f6176443fafdefadebd62438a69ad79a32/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7dbc33f6176443fafdefadebd62438a69ad79a32/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=7dbc33f6176443fafdefadebd62438a69ad79a32",
        "patch": "@@ -115,8 +115,6 @@ public Q_SLOTS:\n     void requestedSyncWarningInfo();\n \n Q_SIGNALS:\n-    /** Signal that we want to show the main window */\n-    void showNormalIfMinimized();\n     /**  Fired when a message should be reported to the user */\n     void message(const QString &title, const QString &message, unsigned int style);\n     /** Encryption status of wallet changed */"
      }
    ]
  },
  {
    "sha": "94f0749f9130ea925e2b064d9275f23269eaf24b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NGYwNzQ5ZjkxMzBlYTkyNWUyYjA2NGQ5Mjc1ZjIzMjY5ZWFmMjRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T09:54:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T09:54:49Z"
      },
      "message": "Merge #17436: Add TheCharlatan's pgp key\n\n0ec967164f30d313e7c54879d1c6565ad75689af Add TheCharlatan's pgp key (TheCharlatan)\n\nPull request description:\n\n  Since I have submitted my pair of signed gitian assertions, I am now adding my key's fingerprint to the gitian keys list.\n\nACKs for top commit:\n  jonasschnelli:\n    ACK 0ec967164f30d313e7c54879d1c6565ad75689af - confirm key A8FC55F3B04BA3146F3492E79303B33A305224CB\n\nTree-SHA512: bbd5e637186ed1659432e4fcc96bdc57fdbdb608325805701e06a51689726e722d7abeb11b5c9de723d051976d9d7ac23602316403fa74029dceb3cf1e837aea",
      "tree": {
        "sha": "1f8a7ff9cc615a26c3cd766799f6faa6eee54fe3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1f8a7ff9cc615a26c3cd766799f6faa6eee54fe3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/94f0749f9130ea925e2b064d9275f23269eaf24b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3SamkACgkQHkrtYphs\n0l1WpAf/XyCE1u2dUl7sgDztbU3am+SNpPRtKQcWjG3yIT5TfljoPzVNPVQ4M/K/\nWs337DbIJWGI33lmV2YDe8D0c0vb1sDowXO3/83O4AgtulnMYSFX5xnSfq4Vlobu\n5avLZgeX6TaEY1AwgFxZt+qj9toRUNKsUMzqB3Ez/wVc8jyKq8XuB1p/vuxuQC2k\nuGS71irsFO89cZqrOXUDSAExGz+K4sVWA1NMPgUD1+9Oh9ENqMrYV5DcW9phHsG5\nQSTFs5cnDkBMiTlg2okTwvabT+gm1fiPaK9vFQ/3LX9q2n/KISEG28LGRDyMNru2\nY7vexMTkj3OlEJkYiDsYazktqLe64g==\n=abaI\n-----END PGP SIGNATURE-----",
        "payload": "tree 1f8a7ff9cc615a26c3cd766799f6faa6eee54fe3\nparent 7dbc33f6176443fafdefadebd62438a69ad79a32\nparent 0ec967164f30d313e7c54879d1c6565ad75689af\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574070856 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574070889 +0100\n\nMerge #17436: Add TheCharlatan's pgp key\n\n0ec967164f30d313e7c54879d1c6565ad75689af Add TheCharlatan's pgp key (TheCharlatan)\n\nPull request description:\n\n  Since I have submitted my pair of signed gitian assertions, I am now adding my key's fingerprint to the gitian keys list.\n\nACKs for top commit:\n  jonasschnelli:\n    ACK 0ec967164f30d313e7c54879d1c6565ad75689af - confirm key A8FC55F3B04BA3146F3492E79303B33A305224CB\n\nTree-SHA512: bbd5e637186ed1659432e4fcc96bdc57fdbdb608325805701e06a51689726e722d7abeb11b5c9de723d051976d9d7ac23602316403fa74029dceb3cf1e837aea\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f0749f9130ea925e2b064d9275f23269eaf24b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/94f0749f9130ea925e2b064d9275f23269eaf24b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f0749f9130ea925e2b064d9275f23269eaf24b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7dbc33f6176443fafdefadebd62438a69ad79a32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7dbc33f6176443fafdefadebd62438a69ad79a32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7dbc33f6176443fafdefadebd62438a69ad79a32"
      },
      {
        "sha": "0ec967164f30d313e7c54879d1c6565ad75689af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ec967164f30d313e7c54879d1c6565ad75689af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ec967164f30d313e7c54879d1c6565ad75689af"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ba3036a89f77e465d287a98137c5e6cb1cef2f89",
        "filename": "contrib/gitian-keys/keys.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/94f0749f9130ea925e2b064d9275f23269eaf24b/contrib/gitian-keys/keys.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/94f0749f9130ea925e2b064d9275f23269eaf24b/contrib/gitian-keys/keys.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-keys/keys.txt?ref=94f0749f9130ea925e2b064d9275f23269eaf24b",
        "patch": "@@ -27,6 +27,7 @@ D62A803E27E7F43486035ADBBCD04D8E9CCCAC2A Paul Rabahy\n 37EC7D7B0A217CDB4B4E007E7FAB114267E4FA04 Peter Todd\n D762373D24904A3E42F33B08B9A408E71DAAC974 Pieter Wuille (Location: Leuven, Belgium)\n 133EAC179436F14A5CF1B794860FEB804E669320 Pieter Wuille\n+A8FC55F3B04BA3146F3492E79303B33A305224CB Sebastian Kung (TheCharlatan)\n ED9BDF7AD6A55E232E84524257FF9BDBCC301009 Sjors Provoost\n AEC1884398647C47413C1C3FB1179EB7347DC10D Warren Togami\n 79D00BAC68B56D422F945A8F8E3A8F3247DBCBBF Willy Ko"
      }
    ]
  },
  {
    "sha": "e161bc74d24a381c313aecb950d3b8411e0ed19d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTYxYmM3NGQyNGEzODFjMzEzYWVjYjk1MGQzYjg0MTFlMGVkMTlk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T10:41:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T10:44:51Z"
      },
      "message": "doc: Remove bitness from bitcoin-qt help message and manpage\n\nRemove the `(64-bit)` from the bitcoin-qt help message.\n\nSince removing the Windows 32-bit builds, it is no longer information\nthat is often useful for troubleshooting. This never worked for other\narchitectures than x86, and the only 32-bit x86 build left is the Linux\none. Linux users tend to know what architecture they are using.\n\nIt also accidentally ends up in the bitcoin-qt manpage.",
      "tree": {
        "sha": "5512e48a3cda5c39af66b929034f89f26dd62293",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5512e48a3cda5c39af66b929034f89f26dd62293"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e161bc74d24a381c313aecb950d3b8411e0ed19d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e161bc74d24a381c313aecb950d3b8411e0ed19d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e161bc74d24a381c313aecb950d3b8411e0ed19d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e161bc74d24a381c313aecb950d3b8411e0ed19d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94f0749f9130ea925e2b064d9275f23269eaf24b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f0749f9130ea925e2b064d9275f23269eaf24b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94f0749f9130ea925e2b064d9275f23269eaf24b"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "220e41b383e33b3db2ddcc17b60bd951400efbb7",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e161bc74d24a381c313aecb950d3b8411e0ed19d/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e161bc74d24a381c313aecb950d3b8411e0ed19d/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=e161bc74d24a381c313aecb950d3b8411e0ed19d",
        "patch": "@@ -34,14 +34,6 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n     ui->setupUi(this);\n \n     QString version = QString{PACKAGE_NAME} + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n-    /* On x86 add a bit specifier to the version so that users can distinguish between\n-     * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambiguous.\n-     */\n-#if defined(__x86_64__)\n-    version += \" \" + tr(\"(%1-bit)\").arg(64);\n-#elif defined(__i386__ )\n-    version += \" \" + tr(\"(%1-bit)\").arg(32);\n-#endif\n \n     if (about)\n     {"
      }
    ]
  },
  {
    "sha": "1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYmFmN2QxODE5MzE3ZTRmNGFlZWFiYTJmOWQ3MjA1N2U2M2IxZmVh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T11:11:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T11:11:28Z"
      },
      "message": "Merge #17466: depends: qt: Fix C{,XX} pickup\n\nbc728d12a975934a1ef21e8d06612e157faaff6a depends: qt: Fix C{,XX} pickup (Carl Dong)\n\nPull request description:\n\n  QT LOVES to do things its own way and simply ignore all environment variables. Even listing `QMAKE_CC=...` in `./configure` flags does't work reliably. This is why we gotta literally edit their config files for them. Thanks QT.\n\nACKs for top commit:\n  laanwj:\n    ACK bc728d12a975934a1ef21e8d06612e157faaff6a\n\nTree-SHA512: 3d6a0535174d70937d11b8f44ac2ab720870345a2d5a541c3e0181163ffa1988ab4f934788e9c841b646d6f53c6dc51a4fe39b294dd042c38976091c0fb96c96",
      "tree": {
        "sha": "f7e809bb36b0e05294f716818a16d170b91f49a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7e809bb36b0e05294f716818a16d170b91f49a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3SfGAACgkQHkrtYphs\n0l2I+Af/ZwhQAJ39d6slC0Q4+6M4o2dml5loksXy9dTFIQ4VDXC6hPNIysYxSWMP\n5tQjqsUzOFgevQP79akEpjOb1+qdgTvf75YSelXJodzLNj2Be2IDPup7L2rBbs0L\nWwT/8lq52af8q/ZK/EpHuGhATMXOEw0SNR//aOSQn55LKxlIyJyAuE7Ju3VnpvFW\n2y+17QITyO4Atf6llsgjx6bQEgTqG78tw79Ape+dejItyyoYWr5z5pPovtJFih2f\nOREsHSHrWJU7VlN5IQpfvex20QsNIFCx49f2nzH0/6Sg18/TFctG2mlINpo+Xm9O\nc42s/mp14zW6M4S31hJ8hhW/i4HuDA==\n=jfZ1\n-----END PGP SIGNATURE-----",
        "payload": "tree f7e809bb36b0e05294f716818a16d170b91f49a0\nparent 94f0749f9130ea925e2b064d9275f23269eaf24b\nparent bc728d12a975934a1ef21e8d06612e157faaff6a\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574075470 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574075488 +0100\n\nMerge #17466: depends: qt: Fix C{,XX} pickup\n\nbc728d12a975934a1ef21e8d06612e157faaff6a depends: qt: Fix C{,XX} pickup (Carl Dong)\n\nPull request description:\n\n  QT LOVES to do things its own way and simply ignore all environment variables. Even listing `QMAKE_CC=...` in `./configure` flags does't work reliably. This is why we gotta literally edit their config files for them. Thanks QT.\n\nACKs for top commit:\n  laanwj:\n    ACK bc728d12a975934a1ef21e8d06612e157faaff6a\n\nTree-SHA512: 3d6a0535174d70937d11b8f44ac2ab720870345a2d5a541c3e0181163ffa1988ab4f934788e9c841b646d6f53c6dc51a4fe39b294dd042c38976091c0fb96c96\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "94f0749f9130ea925e2b064d9275f23269eaf24b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/94f0749f9130ea925e2b064d9275f23269eaf24b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/94f0749f9130ea925e2b064d9275f23269eaf24b"
      },
      {
        "sha": "bc728d12a975934a1ef21e8d06612e157faaff6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc728d12a975934a1ef21e8d06612e157faaff6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc728d12a975934a1ef21e8d06612e157faaff6a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6ac6ba68388e6d591de9cdbd3458ac12579a5aaa",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
        "patch": "@@ -202,6 +202,8 @@ define $(package)_preprocess_cmds\n   sed -i.old \"s|QMAKE_CFLAGS           += |!host_build: QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"s|QMAKE_CXXFLAGS         += |!host_build: QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n   sed -i.old \"0,/^QMAKE_LFLAGS_/s|^QMAKE_LFLAGS_|!host_build: QMAKE_LFLAGS            = $($(package)_ldflags)\\n&|\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n+  sed -i.old \"s|QMAKE_CC                = clang|QMAKE_CC                = $($(package)_cc)|\" qtbase/mkspecs/common/clang.conf && \\\n+  sed -i.old \"s|QMAKE_CXX               = clang++|QMAKE_CXX               = $($(package)_cxx)|\" qtbase/mkspecs/common/clang.conf && \\\n   sed -i.old \"s/LIBRARY_PATH/(CROSS_)?\\0/g\" qtbase/mkspecs/features/toolchain.prf\n endef\n "
      }
    ]
  },
  {
    "sha": "0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYmIzN2U0MzdlOWNiNGEyOTQ3NmVkYzlmYTQyZjNlMDNjOGJkNzk3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T12:18:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T12:33:43Z"
      },
      "message": "Merge #17270: Feed environment data into RNG initializers\n\nd1c02775aa74a0610809ac54bb241ddad61d2d8c Report amount of data gathered from environment (Pieter Wuille)\n64e1e022cedf6776c5dffd488ca2e766adca5dc3 Use thread-safe atomic in perfmon seeder (Pieter Wuille)\nd61f2bb076d8f17840a8e79f1583d7f6e3e6d09a Run background seeding periodically instead of unpredictably (Pieter Wuille)\n483b94292e89587e5ab40a30b8a90e2f56e847f3 Add information gathered through getauxval() (Pieter Wuille)\n11793ea22e1298fa7d3b44a5b6d20830248d8cf4 Feed CPUID data into RNG (Pieter Wuille)\na81c494b4c9a8c2f1a319a03375826f12863706f Use sysctl for seeding on MacOS/BSD (Pieter Wuille)\n2554c1b81bb8c40e1989025c6f18e7935720b156 Gather additional entropy from the environment (Pieter Wuille)\nc2a262a78c3bcc4d5e13612ab0214874abe15de0 Seed randomness with process id / thread id / various clocks (Pieter Wuille)\n723c79666770b30cce9f962bed5ece8cc7d74580 [MOVEONLY] Move cpuid code from random & sha256 to compat/cpuid (Pieter Wuille)\ncea3902015185adc88adbd031d919f91bc844fd7 [MOVEONLY] Move perfmon data gathering to new randomenv module (Pieter Wuille)\nb51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a doc: minor corrections in random.cpp (fanquake)\n\nPull request description:\n\n  This introduces a new `randomenv` module that queries varies non-cryptographic (and non-RNG) sources of entropy available on the system; things like user IDs, system configuration, time, statistics, CPUID data.\n\n  The idea is that these provide a fallback in scenarios where system entropy is somehow broken (note that if system entropy *fails* we will abort regardless; this is only meant to function as a last resort against undetected failure). It includes some data sources OpenSSL currently uses, and more.\n\n  The separation between random and randomenv is a bit arbitrary, but I felt that all this \"non-essential\" functionality deserved to be separated from the core random module.\n\nACKs for top commit:\n  TheBlueMatt:\n    utACK d1c02775aa74a0610809ac54bb241ddad61d2d8c. Certainly no longer measuring the time elapsed between a 1ms sleep (which got removed in the latest change) is a fair tradeoff for adding about 2 million other actually-higher-entropy bits :).\n  laanwj:\n    ACK d1c02775aa74a0610809ac54bb241ddad61d2d8c\n\nTree-SHA512: d290a8db6538a164348118ee02079e4f4c8551749ea78fa44b2aad57f5df2ccbc2a12dc7d80d8f3e916d68cdd8e204faf9e1bcbec15f9054eba6b22f17c66ae3",
      "tree": {
        "sha": "bf03806b309a3f19161b706898788787f4988460",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf03806b309a3f19161b706898788787f4988460"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3Sj6cACgkQHkrtYphs\n0l2zoQf9HoGamnxXIMolhWMsbprhjoS8PyUVgWIw2/kUIv56Z8BwD6n2dZLGVBDy\naiAAYw/PoKi7EpQFsbbykMTe7Wjxlvvss80RdV79YLvDKQNObX0ZGyzB2ndu01ie\n9SmM/6GH5SuxABN/2FDDspXxLd7IKJNspLBKzlaO57CY+AFn8OY9RFY7WUVkWK/x\nxjY5Q01kO62Vh0V5i4mpW0Ko3fcID5WGkQs/emknaBjDeY1dNukHyy14IUfmM0Hz\nQhB5xhlO9dcJ08W6gneMbVCeJGq/MfkqcCjUYXfNINoQxakYl043tBf8zMNQgCFI\nVpxFjK/zG9IiM7Xe0WKh3cVnDO8O8w==\n=79qB\n-----END PGP SIGNATURE-----",
        "payload": "tree bf03806b309a3f19161b706898788787f4988460\nparent 1baf7d1819317e4f4aeeaba2f9d72057e63b1fea\nparent d1c02775aa74a0610809ac54bb241ddad61d2d8c\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574079490 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574080423 +0100\n\nMerge #17270: Feed environment data into RNG initializers\n\nd1c02775aa74a0610809ac54bb241ddad61d2d8c Report amount of data gathered from environment (Pieter Wuille)\n64e1e022cedf6776c5dffd488ca2e766adca5dc3 Use thread-safe atomic in perfmon seeder (Pieter Wuille)\nd61f2bb076d8f17840a8e79f1583d7f6e3e6d09a Run background seeding periodically instead of unpredictably (Pieter Wuille)\n483b94292e89587e5ab40a30b8a90e2f56e847f3 Add information gathered through getauxval() (Pieter Wuille)\n11793ea22e1298fa7d3b44a5b6d20830248d8cf4 Feed CPUID data into RNG (Pieter Wuille)\na81c494b4c9a8c2f1a319a03375826f12863706f Use sysctl for seeding on MacOS/BSD (Pieter Wuille)\n2554c1b81bb8c40e1989025c6f18e7935720b156 Gather additional entropy from the environment (Pieter Wuille)\nc2a262a78c3bcc4d5e13612ab0214874abe15de0 Seed randomness with process id / thread id / various clocks (Pieter Wuille)\n723c79666770b30cce9f962bed5ece8cc7d74580 [MOVEONLY] Move cpuid code from random & sha256 to compat/cpuid (Pieter Wuille)\ncea3902015185adc88adbd031d919f91bc844fd7 [MOVEONLY] Move perfmon data gathering to new randomenv module (Pieter Wuille)\nb51bae1a5a4fa8ef7825dd1bb09e3f47f96d7a5a doc: minor corrections in random.cpp (fanquake)\n\nPull request description:\n\n  This introduces a new `randomenv` module that queries varies non-cryptographic (and non-RNG) sources of entropy available on the system; things like user IDs, system configuration, time, statistics, CPUID data.\n\n  The idea is that these provide a fallback in scenarios where system entropy is somehow broken (note that if system entropy *fails* we will abort regardless; this is only meant to function as a last resort against undetected failure). It includes some data sources OpenSSL currently uses, and more.\n\n  The separation between random and randomenv is a bit arbitrary, but I felt that all this \"non-essential\" functionality deserved to be separated from the core random module.\n\nACKs for top commit:\n  TheBlueMatt:\n    utACK d1c02775aa74a0610809ac54bb241ddad61d2d8c. Certainly no longer measuring the time elapsed between a 1ms sleep (which got removed in the latest change) is a fair tradeoff for adding about 2 million other actually-higher-entropy bits :).\n  laanwj:\n    ACK d1c02775aa74a0610809ac54bb241ddad61d2d8c\n\nTree-SHA512: d290a8db6538a164348118ee02079e4f4c8551749ea78fa44b2aad57f5df2ccbc2a12dc7d80d8f3e916d68cdd8e204faf9e1bcbec15f9054eba6b22f17c66ae3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1baf7d1819317e4f4aeeaba2f9d72057e63b1fea"
      },
      {
        "sha": "d1c02775aa74a0610809ac54bb241ddad61d2d8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1c02775aa74a0610809ac54bb241ddad61d2d8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1c02775aa74a0610809ac54bb241ddad61d2d8c"
      }
    ],
    "stats": {
      "total": 719,
      "additions": 611,
      "deletions": 108
    },
    "files": [
      {
        "sha": "0f31bbaee57cc663b1dce099f76de7fbfff716c0",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -790,7 +790,7 @@ if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n fi\n \n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n+AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])\n \n # FD_ZERO may be dependent on a declaration of memcpy, e.g. in SmartOS\n # check that it fails to build without memcpy, then that it builds with\n@@ -950,6 +950,18 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n  [ AC_MSG_RESULT(no)]\n )\n \n+AC_MSG_CHECKING(for sysctl)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_VERSION};\n+    #ifdef __linux__\n+    #error \"Don't use sysctl on Linux, it's deprecated even when it works\"\n+    #endif\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL, 1,[Define this symbol if the BSD sysctl() is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING(for sysctl KERN_ARND)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n   #include <sys/sysctl.h>]],"
      },
      {
        "sha": "cbe5479956e2a74b2fc691f546198bacd0d83832",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -119,6 +119,7 @@ BITCOIN_CORE_H = \\\n   compat.h \\\n   compat/assumptions.h \\\n   compat/byteswap.h \\\n+  compat/cpuid.h \\\n   compat/endian.h \\\n   compat/sanity.h \\\n   compressor.h \\\n@@ -175,6 +176,7 @@ BITCOIN_CORE_H = \\\n   protocol.h \\\n   psbt.h \\\n   random.h \\\n+  randomenv.h \\\n   reverse_iterator.h \\\n   reverselock.h \\\n   rpc/blockchain.h \\\n@@ -503,6 +505,7 @@ libbitcoin_util_a_SOURCES = \\\n   interfaces/handler.cpp \\\n   logging.cpp \\\n   random.cpp \\\n+  randomenv.cpp \\\n   rpc/request.cpp \\\n   support/cleanse.cpp \\\n   sync.cpp \\"
      },
      {
        "sha": "0877ad47d302ba56594673a84b5e43b70ed676a7",
        "filename": "src/compat/cpuid.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/compat/cpuid.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/compat/cpuid.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/cpuid.h?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2017-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMPAT_CPUID_H\n+#define BITCOIN_COMPAT_CPUID_H\n+\n+#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#define HAVE_GETCPUID\n+\n+#include <cpuid.h>\n+\n+// We can't use cpuid.h's __get_cpuid as it does not support subleafs.\n+void static inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n+{\n+#ifdef __GNUC__\n+    __cpuid_count(leaf, subleaf, a, b, c, d);\n+#else\n+  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n+#endif\n+}\n+\n+#endif // defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#endif // BITCOIN_COMPAT_CPUID_H"
      },
      {
        "sha": "dda7e5230fe8fbdc1b7ca581424ea3d64dde5373",
        "filename": "src/crypto/sha256.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/crypto/sha256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/crypto/sha256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha256.cpp?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -8,9 +8,10 @@\n #include <assert.h>\n #include <string.h>\n \n+#include <compat/cpuid.h>\n+\n #if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n #if defined(USE_ASM)\n-#include <cpuid.h>\n namespace sha256_sse4\n {\n void Transform(uint32_t* s, const unsigned char* chunk, size_t blocks);\n@@ -546,18 +547,7 @@ bool SelfTest() {\n     return true;\n }\n \n-\n #if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__) || defined(__i386__))\n-// We can't use cpuid.h's __get_cpuid as it does not support subleafs.\n-void inline cpuid(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n-{\n-#ifdef __GNUC__\n-    __cpuid_count(leaf, subleaf, a, b, c, d);\n-#else\n-  __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n-#endif\n-}\n-\n /** Check whether the OS has enabled AVX registers. */\n bool AVXEnabled()\n {\n@@ -572,7 +562,7 @@ bool AVXEnabled()\n std::string SHA256AutoDetect()\n {\n     std::string ret = \"standard\";\n-#if defined(USE_ASM) && (defined(__x86_64__) || defined(__amd64__) || defined(__i386__))\n+#if defined(USE_ASM) && defined(HAVE_GETCPUID)\n     bool have_sse4 = false;\n     bool have_xsave = false;\n     bool have_avx = false;\n@@ -589,15 +579,15 @@ std::string SHA256AutoDetect()\n     (void)enabled_avx;\n \n     uint32_t eax, ebx, ecx, edx;\n-    cpuid(1, 0, eax, ebx, ecx, edx);\n+    GetCPUID(1, 0, eax, ebx, ecx, edx);\n     have_sse4 = (ecx >> 19) & 1;\n     have_xsave = (ecx >> 27) & 1;\n     have_avx = (ecx >> 28) & 1;\n     if (have_xsave && have_avx) {\n         enabled_avx = AVXEnabled();\n     }\n     if (have_sse4) {\n-        cpuid(7, 0, eax, ebx, ecx, edx);\n+        GetCPUID(7, 0, eax, ebx, ecx, edx);\n         have_avx2 = (ebx >> 5) & 1;\n         have_shani = (ebx >> 29) & 1;\n     }"
      },
      {
        "sha": "fc7dd1b87eaae4f37a733379d12250f2f5b1fc77",
        "filename": "src/crypto/sha512.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/crypto/sha512.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/crypto/sha512.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/sha512.h?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -23,6 +23,7 @@ class CSHA512\n     CSHA512& Write(const unsigned char* data, size_t len);\n     void Finalize(unsigned char hash[OUTPUT_SIZE]);\n     CSHA512& Reset();\n+    uint64_t Size() const { return bytes; }\n };\n \n #endif // BITCOIN_CRYPTO_SHA512_H"
      },
      {
        "sha": "2abdf7dbc404f3d30201ce0672146319da49d285",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -1258,6 +1258,11 @@ bool AppInitMain(NodeContext& node)\n     CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(std::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n+    // Gather some entropy once per minute.\n+    scheduler.scheduleEvery([]{\n+        RandAddPeriodic();\n+    }, 60000);\n+\n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n     GetMainSignals().RegisterWithMempoolSignals(mempool);\n "
      },
      {
        "sha": "3e6398f7b49e3b580cd8e3e9631762d7a23fe226",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 87,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -5,19 +5,22 @@\n \n #include <random.h>\n \n+#include <compat/cpuid.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n #include <compat.h> // for Windows API\n #include <wincrypt.h>\n #endif\n-#include <logging.h>  // for LogPrint()\n-#include <sync.h>     // for WAIT_LOCK\n+#include <logging.h>  // for LogPrintf()\n+#include <sync.h>     // for Mutex\n #include <util/time.h> // for GetTime()\n \n #include <stdlib.h>\n #include <thread>\n \n+#include <randomenv.h>\n+\n #include <support/allocators/secure.h>\n \n #ifndef WIN32\n@@ -40,11 +43,6 @@\n #include <sys/sysctl.h>\n #endif\n \n-\n-#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n-#include <cpuid.h>\n-#endif\n-\n #include <openssl/err.h>\n #include <openssl/rand.h>\n #include <openssl/conf.h>\n@@ -75,7 +73,7 @@ static inline int64_t GetPerformanceCounter() noexcept\n #endif\n }\n \n-#if defined(__x86_64__) || defined(__amd64__) || defined(__i386__)\n+#ifdef HAVE_GETCPUID\n static bool g_rdrand_supported = false;\n static bool g_rdseed_supported = false;\n static constexpr uint32_t CPUID_F1_ECX_RDRAND = 0x40000000;\n@@ -86,15 +84,6 @@ static_assert(CPUID_F1_ECX_RDRAND == bit_RDRND, \"Unexpected value for bit_RDRND\"\n #ifdef bit_RDSEED\n static_assert(CPUID_F7_EBX_RDSEED == bit_RDSEED, \"Unexpected value for bit_RDSEED\");\n #endif\n-static void inline GetCPUID(uint32_t leaf, uint32_t subleaf, uint32_t& a, uint32_t& b, uint32_t& c, uint32_t& d)\n-{\n-    // We can't use __get_cpuid as it doesn't support subleafs.\n-#ifdef __GNUC__\n-    __cpuid_count(leaf, subleaf, a, b, c, d);\n-#else\n-    __asm__ (\"cpuid\" : \"=a\"(a), \"=b\"(b), \"=c\"(c), \"=d\"(d) : \"0\"(leaf), \"2\"(subleaf));\n-#endif\n-}\n \n static void InitHardwareRand()\n {\n@@ -263,44 +252,6 @@ static void Strengthen(const unsigned char (&seed)[32], int microseconds, CSHA51\n     memory_cleanse(buffer, sizeof(buffer));\n }\n \n-static void RandAddSeedPerfmon(CSHA512& hasher)\n-{\n-#ifdef WIN32\n-    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n-    // Seed with the entire set of perfmon data\n-\n-    // This can take up to 2 seconds, so only do it every 10 minutes\n-    static int64_t nLastPerfmon;\n-    if (GetTime() < nLastPerfmon + 10 * 60)\n-        return;\n-    nLastPerfmon = GetTime();\n-\n-    std::vector<unsigned char> vData(250000, 0);\n-    long ret = 0;\n-    unsigned long nSize = 0;\n-    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n-    while (true) {\n-        nSize = vData.size();\n-        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n-        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n-            break;\n-        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n-    }\n-    RegCloseKey(HKEY_PERFORMANCE_DATA);\n-    if (ret == ERROR_SUCCESS) {\n-        hasher.Write(vData.data(), nSize);\n-        memory_cleanse(vData.data(), nSize);\n-    } else {\n-        // Performance data is only a best-effort attempt at improving the\n-        // situation when the OS randomness (and other sources) aren't\n-        // adequate. As a result, failure to read it is isn't considered critical,\n-        // so we don't call RandFailure().\n-        // TODO: Add logging when the logger is made functional before global\n-        // constructors have been invoked.\n-    }\n-#endif\n-}\n-\n #ifndef WIN32\n /** Fallback: get 32 bytes of system entropy from /dev/urandom. The most\n  * compatible way to get cryptographic randomness on UNIX-ish platforms.\n@@ -556,40 +507,30 @@ static void SeedSlow(CSHA512& hasher) noexcept\n }\n \n /** Extract entropy from rng, strengthen it, and feed it into hasher. */\n-static void SeedStrengthen(CSHA512& hasher, RNGState& rng) noexcept\n+static void SeedStrengthen(CSHA512& hasher, RNGState& rng, int microseconds) noexcept\n {\n-    static std::atomic<int64_t> last_strengthen{0};\n-    int64_t last_time = last_strengthen.load();\n-    int64_t current_time = GetTimeMicros();\n-    if (current_time > last_time + 60000000) { // Only run once a minute\n-        // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n-        unsigned char strengthen_seed[32];\n-        rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n-        // Strengthen it for 10ms (100ms on first run), and feed it into hasher.\n-        Strengthen(strengthen_seed, last_time == 0 ? 100000 : 10000, hasher);\n-        last_strengthen = current_time;\n-    }\n+    // Generate 32 bytes of entropy from the RNG, and a copy of the entropy already in hasher.\n+    unsigned char strengthen_seed[32];\n+    rng.MixExtract(strengthen_seed, sizeof(strengthen_seed), CSHA512(hasher), false);\n+    // Strengthen the seed, and feed it into hasher.\n+    Strengthen(strengthen_seed, microseconds, hasher);\n }\n \n-static void SeedSleep(CSHA512& hasher, RNGState& rng)\n+static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n {\n     // Everything that the 'fast' seeder includes\n     SeedFast(hasher);\n \n     // High-precision timestamp\n     SeedTimestamp(hasher);\n \n-    // Sleep for 1ms\n-    MilliSleep(1);\n-\n-    // High-precision timestamp after sleeping (as we commit to both the time before and after, this measures the delay)\n-    SeedTimestamp(hasher);\n-\n-    // Windows performance monitor data (once every 10 minutes)\n-    RandAddSeedPerfmon(hasher);\n+    // Dynamic environment data (performance monitoring, ...)\n+    auto old_size = hasher.Size();\n+    RandAddDynamicEnv(hasher);\n+    LogPrintf(\"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n \n-    // Strengthen every minute\n-    SeedStrengthen(hasher, rng);\n+    // Strengthen for 10 ms\n+    SeedStrengthen(hasher, rng, 10000);\n }\n \n static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n@@ -600,17 +541,22 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     // Everything that the 'slow' seeder includes.\n     SeedSlow(hasher);\n \n-    // Windows performance monitor data.\n-    RandAddSeedPerfmon(hasher);\n+    // Dynamic environment data (performance monitoring, ...)\n+    auto old_size = hasher.Size();\n+    RandAddDynamicEnv(hasher);\n+\n+    // Static environment data\n+    RandAddStaticEnv(hasher);\n+    LogPrintf(\"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n \n-    // Strengthen\n-    SeedStrengthen(hasher, rng);\n+    // Strengthen for 100 ms\n+    SeedStrengthen(hasher, rng, 100000);\n }\n \n enum class RNGLevel {\n     FAST, //!< Automatically called by GetRandBytes\n     SLOW, //!< Automatically called by GetStrongRandBytes\n-    SLEEP, //!< Called by RandAddSeedSleep()\n+    PERIODIC, //!< Called by RandAddPeriodic()\n };\n \n static void ProcRand(unsigned char* out, int num, RNGLevel level)\n@@ -628,8 +574,8 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n     case RNGLevel::SLOW:\n         SeedSlow(hasher);\n         break;\n-    case RNGLevel::SLEEP:\n-        SeedSleep(hasher, rng);\n+    case RNGLevel::PERIODIC:\n+        SeedPeriodic(hasher, rng);\n         break;\n     }\n \n@@ -652,7 +598,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n-void RandAddSeedSleep() { ProcRand(nullptr, 0, RNGLevel::SLEEP); }\n+void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n bool g_mock_deterministic_tests{false};\n \n@@ -716,7 +662,7 @@ bool Random_SanityCheck()\n     uint64_t start = GetPerformanceCounter();\n \n     /* This does not measure the quality of randomness, but it does test that\n-     * OSRandom() overwrites all 32 bytes of the output given a maximum\n+     * GetOSRand() overwrites all 32 bytes of the output given a maximum\n      * number of tries.\n      */\n     static const ssize_t MAX_TRIES = 1024;"
      },
      {
        "sha": "7768f9d3c50ac19eff8e32fbcbf3316bf508a998",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -52,7 +52,6 @@\n  * sources used in the 'slow' seeder are included, but also:\n  * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n  * - (On Windows) Performance monitoring data from the OS.\n- * - (On Windows) Through OpenSSL, the screen contents.\n  * - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n@@ -85,11 +84,11 @@ uint256 GetRandHash() noexcept;\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n \n /**\n- * Sleep for 1ms, gather entropy from various sources, and feed them to the PRNG state.\n+ * Gather entropy from various expensive sources, and feed them to the PRNG state.\n  *\n  * Thread-safe.\n  */\n-void RandAddSeedSleep();\n+void RandAddPeriodic();\n \n /**\n  * Fast randomness source. This is seeded once with secure random data, but"
      },
      {
        "sha": "603c88eaabe1333e4418e2296d4e8f4a363d44fd",
        "filename": "src/randomenv.cpp",
        "status": "added",
        "additions": 508,
        "deletions": 0,
        "changes": 508,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -0,0 +1,508 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <randomenv.h>\n+\n+#include <clientversion.h>\n+#include <compat/cpuid.h>\n+#include <crypto/sha512.h>\n+#include <support/cleanse.h>\n+#include <util/time.h> // for GetTime()\n+#ifdef WIN32\n+#include <compat.h> // for Windows API\n+#endif\n+\n+#include <algorithm>\n+#include <atomic>\n+#include <chrono>\n+#include <climits>\n+#include <thread>\n+#include <vector>\n+\n+#include <stdint.h>\n+#include <string.h>\n+#ifndef WIN32\n+#include <sys/types.h> // must go before a number of other headers\n+#include <fcntl.h>\n+#include <netinet/in.h>\n+#include <sys/resource.h>\n+#include <sys/socket.h>\n+#include <sys/stat.h>\n+#include <sys/time.h>\n+#include <sys/utsname.h>\n+#include <unistd.h>\n+#endif\n+#ifdef __MACH__\n+#include <mach/clock.h>\n+#include <mach/mach.h>\n+#include <mach/mach_time.h>\n+#endif\n+#if HAVE_DECL_GETIFADDRS\n+#include <ifaddrs.h>\n+#endif\n+#if HAVE_SYSCTL\n+#include <sys/sysctl.h>\n+#if HAVE_VM_VM_PARAM_H\n+#include <vm/vm_param.h>\n+#endif\n+#if HAVE_SYS_RESOURCES_H\n+#include <sys/resources.h>\n+#endif\n+#if HAVE_SYS_VMMETER_H\n+#include <sys/vmmeter.h>\n+#endif\n+#endif\n+#ifdef __linux__\n+#include <sys/auxv.h>\n+#endif\n+\n+//! Necessary on some platforms\n+extern char** environ;\n+\n+namespace {\n+\n+void RandAddSeedPerfmon(CSHA512& hasher)\n+{\n+#ifdef WIN32\n+    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n+    // Seed with the entire set of perfmon data\n+\n+    // This can take up to 2 seconds, so only do it every 10 minutes\n+    static std::atomic<std::chrono::seconds> last_perfmon{std::chrono::seconds{0}};\n+    auto last_time = last_perfmon.load();\n+    auto current_time = GetTime<std::chrono::seconds>();\n+    if (current_time < last_time + std::chrono::minutes{10}) return;\n+    last_perfmon = current_time;\n+\n+    std::vector<unsigned char> vData(250000, 0);\n+    long ret = 0;\n+    unsigned long nSize = 0;\n+    const size_t nMaxSize = 10000000; // Bail out at more than 10MB of performance data\n+    while (true) {\n+        nSize = vData.size();\n+        ret = RegQueryValueExA(HKEY_PERFORMANCE_DATA, \"Global\", nullptr, nullptr, vData.data(), &nSize);\n+        if (ret != ERROR_MORE_DATA || vData.size() >= nMaxSize)\n+            break;\n+        vData.resize(std::max((vData.size() * 3) / 2, nMaxSize)); // Grow size of buffer exponentially\n+    }\n+    RegCloseKey(HKEY_PERFORMANCE_DATA);\n+    if (ret == ERROR_SUCCESS) {\n+        hasher.Write(vData.data(), nSize);\n+        memory_cleanse(vData.data(), nSize);\n+    } else {\n+        // Performance data is only a best-effort attempt at improving the\n+        // situation when the OS randomness (and other sources) aren't\n+        // adequate. As a result, failure to read it is isn't considered critical,\n+        // so we don't call RandFailure().\n+        // TODO: Add logging when the logger is made functional before global\n+        // constructors have been invoked.\n+    }\n+#endif\n+}\n+\n+/** Helper to easily feed data into a CSHA512.\n+ *\n+ * Note that this does not serialize the passed object (like stream.h's << operators do).\n+ * Its raw memory representation is used directly.\n+ */\n+template<typename T>\n+CSHA512& operator<<(CSHA512& hasher, const T& data) {\n+    static_assert(!std::is_same<typename std::decay<T>::type, char*>::value, \"Calling operator<<(CSHA512, char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, unsigned char*>::value, \"Calling operator<<(CSHA512, unsigned char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, const char*>::value, \"Calling operator<<(CSHA512, const char*) is probably not what you want\");\n+    static_assert(!std::is_same<typename std::decay<T>::type, const unsigned char*>::value, \"Calling operator<<(CSHA512, const unsigned char*) is probably not what you want\");\n+    hasher.Write((const unsigned char*)&data, sizeof(data));\n+    return hasher;\n+}\n+\n+#ifndef WIN32\n+void AddSockaddr(CSHA512& hasher, const struct sockaddr *addr)\n+{\n+    if (addr == nullptr) return;\n+    switch (addr->sa_family) {\n+    case AF_INET:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in));\n+        break;\n+    case AF_INET6:\n+        hasher.Write((const unsigned char*)addr, sizeof(sockaddr_in6));\n+        break;\n+    default:\n+        hasher.Write((const unsigned char*)&addr->sa_family, sizeof(addr->sa_family));\n+    }\n+}\n+\n+void AddFile(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb = {};\n+    int f = open(path, O_RDONLY);\n+    size_t total = 0;\n+    if (f != -1) {\n+        unsigned char fbuf[4096];\n+        int n;\n+        hasher.Write((const unsigned char*)&f, sizeof(f));\n+        if (fstat(f, &sb) == 0) hasher << sb;\n+        do {\n+            n = read(f, fbuf, sizeof(fbuf));\n+            if (n > 0) hasher.Write(fbuf, n);\n+            total += n;\n+            /* not bothering with EINTR handling. */\n+        } while (n == sizeof(fbuf) && total < 1048576); // Read only the first 1 Mbyte\n+        close(f);\n+    }\n+}\n+\n+void AddPath(CSHA512& hasher, const char *path)\n+{\n+    struct stat sb = {};\n+    if (stat(path, &sb) == 0) {\n+        hasher.Write((const unsigned char*)path, strlen(path) + 1);\n+        hasher << sb;\n+    }\n+}\n+#endif\n+\n+#if HAVE_SYSCTL\n+template<int... S>\n+void AddSysctl(CSHA512& hasher)\n+{\n+    int CTL[sizeof...(S)] = {S...};\n+    unsigned char buffer[65536];\n+    size_t siz = 65536;\n+    int ret = sysctl(CTL, sizeof...(S), buffer, &siz, nullptr, 0);\n+    if (ret == 0 || (ret == -1 && errno == ENOMEM)) {\n+        hasher << sizeof(CTL);\n+        hasher.Write((const unsigned char*)CTL, sizeof(CTL));\n+        if (siz > sizeof(buffer)) siz = sizeof(buffer);\n+        hasher << siz;\n+        hasher.Write(buffer, siz);\n+    }\n+}\n+#endif\n+\n+#ifdef HAVE_GETCPUID\n+void inline AddCPUID(CSHA512& hasher, uint32_t leaf, uint32_t subleaf, uint32_t& ax, uint32_t& bx, uint32_t& cx, uint32_t& dx)\n+{\n+    GetCPUID(leaf, subleaf, ax, bx, cx, dx);\n+    hasher << leaf << subleaf << ax << bx << cx << dx;\n+}\n+\n+void AddAllCPUID(CSHA512& hasher)\n+{\n+    uint32_t ax, bx, cx, dx;\n+    // Iterate over all standard leaves\n+    AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n+    uint32_t max = ax;\n+    for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        for (uint32_t subleaf = 0;; ++subleaf) {\n+            AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n+            // Iterate over subleaves for leaf 4, 11, 13\n+            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n+            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n+            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+        }\n+    }\n+    // Iterate over all extended leaves\n+    AddCPUID(hasher, 0x80000000, 0, ax, bx, cx, dx); // Returns max extended leaf in ax\n+    uint32_t ext_max = ax;\n+    for (uint32_t leaf = 0x80000001; leaf <= ext_max; ++leaf) {\n+        AddCPUID(hasher, leaf, 0, ax, bx, cx, dx);\n+    }\n+}\n+#endif\n+} // namespace\n+\n+void RandAddDynamicEnv(CSHA512& hasher)\n+{\n+    RandAddSeedPerfmon(hasher);\n+\n+    // Various clocks\n+#ifdef WIN32\n+    FILETIME ftime;\n+    GetSystemTimeAsFileTime(&ftime);\n+    hasher << ftime;\n+#else\n+#  ifndef __MACH__\n+    // On non-MacOS systems, use various clock_gettime() calls.\n+    struct timespec ts = {};\n+#    ifdef CLOCK_MONOTONIC\n+    clock_gettime(CLOCK_MONOTONIC, &ts);\n+    hasher << ts;\n+#    endif\n+#    ifdef CLOCK_REALTIME\n+    clock_gettime(CLOCK_REALTIME, &ts);\n+    hasher << ts;\n+#    endif\n+#    ifdef CLOCK_BOOTTIME\n+    clock_gettime(CLOCK_BOOTTIME, &ts);\n+    hasher << ts;\n+#    endif\n+#  else\n+    // On MacOS use mach_absolute_time (number of CPU ticks since boot) as a replacement for CLOCK_MONOTONIC,\n+    // and clock_get_time for CALENDAR_CLOCK as a replacement for CLOCK_REALTIME.\n+    hasher << mach_absolute_time();\n+    // From https://gist.github.com/jbenet/1087739\n+    clock_serv_t cclock;\n+    mach_timespec_t mts = {};\n+    if (host_get_clock_service(mach_host_self(), CALENDAR_CLOCK, &cclock) == KERN_SUCCESS && clock_get_time(cclock, &mts) == KERN_SUCCESS) {\n+        hasher << mts;\n+        mach_port_deallocate(mach_task_self(), cclock);\n+    }\n+#  endif\n+    // gettimeofday is available on all UNIX systems, but only has microsecond precision.\n+    struct timeval tv = {};\n+    gettimeofday(&tv, nullptr);\n+    hasher << tv;\n+#endif\n+    // Probably redundant, but also use all the clocks C++11 provides:\n+    hasher << std::chrono::system_clock::now().time_since_epoch().count();\n+    hasher << std::chrono::steady_clock::now().time_since_epoch().count();\n+    hasher << std::chrono::high_resolution_clock::now().time_since_epoch().count();\n+\n+#ifndef WIN32\n+    // Current resource usage.\n+    struct rusage usage = {};\n+    if (getrusage(RUSAGE_SELF, &usage) == 0) hasher << usage;\n+#endif\n+\n+#ifdef __linux__\n+    AddFile(hasher, \"/proc/diskstats\");\n+    AddFile(hasher, \"/proc/vmstat\");\n+    AddFile(hasher, \"/proc/schedstat\");\n+    AddFile(hasher, \"/proc/zoneinfo\");\n+    AddFile(hasher, \"/proc/meminfo\");\n+    AddFile(hasher, \"/proc/softirqs\");\n+    AddFile(hasher, \"/proc/stat\");\n+    AddFile(hasher, \"/proc/self/schedstat\");\n+    AddFile(hasher, \"/proc/self/status\");\n+#endif\n+\n+#if HAVE_SYSCTL\n+#  ifdef CTL_KERN\n+#    if defined(KERN_PROC) && defined(KERN_PROC_ALL)\n+    AddSysctl<CTL_KERN, KERN_PROC, KERN_PROC_ALL>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_HW\n+#    ifdef HW_DISKSTATS\n+    AddSysctl<CTL_HW, HW_DISKSTATS>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_VM\n+#    ifdef VM_LOADAVG\n+    AddSysctl<CTL_VM, VM_LOADAVG>(hasher);\n+#    endif\n+#    ifdef VM_TOTAL\n+    AddSysctl<CTL_VM, VM_TOTAL>(hasher);\n+#    endif\n+#    ifdef VM_METER\n+    AddSysctl<CTL_VM, VM_METER>(hasher);\n+#    endif\n+#  endif\n+#endif\n+\n+    // Stack and heap location\n+    void* addr = malloc(4097);\n+    hasher << &addr << addr;\n+    free(addr);\n+}\n+\n+void RandAddStaticEnv(CSHA512& hasher)\n+{\n+    // Some compile-time static properties\n+    hasher << (CHAR_MIN < 0) << sizeof(void*) << sizeof(long) << sizeof(int);\n+#if defined(__GNUC__) && defined(__GNUC_MINOR__) && defined(__GNUC_PATCHLEVEL__)\n+    hasher << __GNUC__ << __GNUC_MINOR__ << __GNUC_PATCHLEVEL__;\n+#endif\n+#ifdef _MSC_VER\n+    hasher << _MSC_VER;\n+#endif\n+    hasher << __cplusplus;\n+#ifdef _XOPEN_VERSION\n+    hasher << _XOPEN_VERSION;\n+#endif\n+#ifdef __VERSION__\n+    const char* COMPILER_VERSION = __VERSION__;\n+    hasher.Write((const unsigned char*)COMPILER_VERSION, strlen(COMPILER_VERSION) + 1);\n+#endif\n+\n+    // Bitcoin client version\n+    hasher << CLIENT_VERSION;\n+\n+#ifdef __linux__\n+    // Information available through getauxval()\n+#  ifdef AT_HWCAP\n+    hasher << getauxval(AT_HWCAP);\n+#  endif\n+#  ifdef AT_HWCAP2\n+    hasher << getauxval(AT_HWCAP2);\n+#  endif\n+#  ifdef AT_RANDOM\n+    const unsigned char* random_aux = (const unsigned char*)getauxval(AT_RANDOM);\n+    if (random_aux) hasher.Write(random_aux, 16);\n+#  endif\n+#  ifdef AT_PLATFORM\n+    const char* platform_str = (const char*)getauxval(AT_PLATFORM);\n+    if (platform_str) hasher.Write((const unsigned char*)platform_str, strlen(platform_str) + 1);\n+#  endif\n+#  ifdef AT_EXECFN\n+    const char* exec_str = (const char*)getauxval(AT_EXECFN);\n+    if (exec_str) hasher.Write((const unsigned char*)exec_str, strlen(exec_str) + 1);\n+#  endif\n+#endif // __linux__\n+\n+#ifdef HAVE_GETCPUID\n+    AddAllCPUID(hasher);\n+#endif\n+\n+    // Memory locations\n+    hasher << &hasher << &RandAddStaticEnv << &malloc << &errno << &environ;\n+\n+    // Hostname\n+    char hname[256];\n+    if (gethostname(hname, 256) == 0) {\n+        hasher.Write((const unsigned char*)hname, strnlen(hname, 256));\n+    }\n+\n+#if HAVE_DECL_GETIFADDRS\n+    // Network interfaces\n+    struct ifaddrs *ifad = NULL;\n+    getifaddrs(&ifad);\n+    struct ifaddrs *ifit = ifad;\n+    while (ifit != NULL) {\n+        hasher.Write((const unsigned char*)&ifit, sizeof(ifit));\n+        hasher.Write((const unsigned char*)ifit->ifa_name, strlen(ifit->ifa_name) + 1);\n+        hasher.Write((const unsigned char*)&ifit->ifa_flags, sizeof(ifit->ifa_flags));\n+        AddSockaddr(hasher, ifit->ifa_addr);\n+        AddSockaddr(hasher, ifit->ifa_netmask);\n+        AddSockaddr(hasher, ifit->ifa_dstaddr);\n+        ifit = ifit->ifa_next;\n+    }\n+    freeifaddrs(ifad);\n+#endif\n+\n+#ifndef WIN32\n+    // UNIX kernel information\n+    struct utsname name;\n+    if (uname(&name) != -1) {\n+        hasher.Write((const unsigned char*)&name.sysname, strlen(name.sysname) + 1);\n+        hasher.Write((const unsigned char*)&name.nodename, strlen(name.nodename) + 1);\n+        hasher.Write((const unsigned char*)&name.release, strlen(name.release) + 1);\n+        hasher.Write((const unsigned char*)&name.version, strlen(name.version) + 1);\n+        hasher.Write((const unsigned char*)&name.machine, strlen(name.machine) + 1);\n+    }\n+\n+    /* Path and filesystem provided data */\n+    AddPath(hasher, \"/\");\n+    AddPath(hasher, \".\");\n+    AddPath(hasher, \"/tmp\");\n+    AddPath(hasher, \"/home\");\n+    AddPath(hasher, \"/proc\");\n+#ifdef __linux__\n+    AddFile(hasher, \"/proc/cmdline\");\n+    AddFile(hasher, \"/proc/cpuinfo\");\n+    AddFile(hasher, \"/proc/version\");\n+#endif\n+    AddFile(hasher, \"/etc/passwd\");\n+    AddFile(hasher, \"/etc/group\");\n+    AddFile(hasher, \"/etc/hosts\");\n+    AddFile(hasher, \"/etc/resolv.conf\");\n+    AddFile(hasher, \"/etc/timezone\");\n+    AddFile(hasher, \"/etc/localtime\");\n+#endif\n+\n+    // For MacOS/BSDs, gather data through sysctl instead of /proc. Not all of these\n+    // will exist on every system.\n+#if HAVE_SYSCTL\n+#  ifdef CTL_HW\n+#    ifdef HW_MACHINE\n+    AddSysctl<CTL_HW, HW_MACHINE>(hasher);\n+#    endif\n+#    ifdef HW_MODEL\n+    AddSysctl<CTL_HW, HW_MODEL>(hasher);\n+#    endif\n+#    ifdef HW_NCPU\n+    AddSysctl<CTL_HW, HW_NCPU>(hasher);\n+#    endif\n+#    ifdef HW_PHYSMEM\n+    AddSysctl<CTL_HW, HW_PHYSMEM>(hasher);\n+#    endif\n+#    ifdef HW_USERMEM\n+    AddSysctl<CTL_HW, HW_USERMEM>(hasher);\n+#    endif\n+#    ifdef HW_MACHINE_ARCH\n+    AddSysctl<CTL_HW, HW_MACHINE_ARCH>(hasher);\n+#    endif\n+#    ifdef HW_REALMEM\n+    AddSysctl<CTL_HW, HW_REALMEM>(hasher);\n+#    endif\n+#    ifdef HW_CPU_FREQ\n+    AddSysctl<CTL_HW, HW_CPU_FREQ>(hasher);\n+#    endif\n+#    ifdef HW_BUS_FREQ\n+    AddSysctl<CTL_HW, HW_BUS_FREQ>(hasher);\n+#    endif\n+#    ifdef HW_CACHELINE\n+    AddSysctl<CTL_HW, HW_CACHELINE>(hasher);\n+#    endif\n+#  endif\n+#  ifdef CTL_KERN\n+#    ifdef KERN_BOOTFILE\n+     AddSysctl<CTL_KERN, KERN_BOOTFILE>(hasher);\n+#    endif\n+#    ifdef KERN_BOOTTIME\n+     AddSysctl<CTL_KERN, KERN_BOOTTIME>(hasher);\n+#    endif\n+#    ifdef KERN_CLOCKRATE\n+     AddSysctl<CTL_KERN, KERN_CLOCKRATE>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTID\n+     AddSysctl<CTL_KERN, KERN_HOSTID>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTUUID\n+     AddSysctl<CTL_KERN, KERN_HOSTUUID>(hasher);\n+#    endif\n+#    ifdef KERN_HOSTNAME\n+     AddSysctl<CTL_KERN, KERN_HOSTNAME>(hasher);\n+#    endif\n+#    ifdef KERN_OSRELDATE\n+     AddSysctl<CTL_KERN, KERN_OSRELDATE>(hasher);\n+#    endif\n+#    ifdef KERN_OSRELEASE\n+     AddSysctl<CTL_KERN, KERN_OSRELEASE>(hasher);\n+#    endif\n+#    ifdef KERN_OSREV\n+     AddSysctl<CTL_KERN, KERN_OSREV>(hasher);\n+#    endif\n+#    ifdef KERN_OSTYPE\n+     AddSysctl<CTL_KERN, KERN_OSTYPE>(hasher);\n+#    endif\n+#    ifdef KERN_POSIX1\n+     AddSysctl<CTL_KERN, KERN_OSREV>(hasher);\n+#    endif\n+#    ifdef KERN_VERSION\n+     AddSysctl<CTL_KERN, KERN_VERSION>(hasher);\n+#    endif\n+#  endif\n+#endif\n+\n+    // Env variables\n+    if (environ) {\n+        for (size_t i = 0; environ[i]; ++i) {\n+            hasher.Write((const unsigned char*)environ[i], strlen(environ[i]));\n+        }\n+    }\n+\n+    // Process, thread, user, session, group, ... ids.\n+#ifdef WIN32\n+    hasher << GetCurrentProcessId() << GetCurrentThreadId();\n+#else\n+    hasher << getpid() << getppid() << getsid(0) << getpgid(0) << getuid() << geteuid() << getgid() << getegid();\n+#endif\n+    hasher << std::this_thread::get_id();\n+}"
      },
      {
        "sha": "46cea6f6f281bcedbfd793919f828f01890fb263",
        "filename": "src/randomenv.h",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/randomenv.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/randomenv.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.h?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -0,0 +1,17 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RANDOMENV_H\n+#define BITCOIN_RANDOMENV_H\n+\n+#include <crypto/sha512.h>\n+\n+/** Gather non-cryptographic environment data that changes over time. */\n+void RandAddDynamicEnv(CSHA512& hasher);\n+\n+/** Gather non-cryptographic environment data that does not change over time. */\n+void RandAddStaticEnv(CSHA512& hasher);\n+\n+#endif"
      },
      {
        "sha": "07a54335ac8991cb09e446467d583665aa4f4805",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "patch": "@@ -41,8 +41,6 @@ void CScheduler::serviceQueue()\n         try {\n             if (!shouldStop() && taskQueue.empty()) {\n                 reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n-                // Use this chance to get more entropy\n-                RandAddSeedSleep();\n             }\n             while (!shouldStop() && taskQueue.empty()) {\n                 // Wait until there is something to do."
      }
    ]
  },
  {
    "sha": "24647a09e710732376bfd202df0f7566861edb4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNDY0N2EwOWU3MTA3MzIzNzZiZmQyMDJkZjBmNzU2Njg2MWVkYjRi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:02:01Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:02:04Z"
      },
      "message": "Merge #17470: ci: Use clang-8 for fuzzing to run on aarch64 ci systems\n\nfa2ec9f4518c1da3ab3592537c6cd204693a6069 fuzz: Bump timeout in test_runner to accomodate for slow arm64 CPUs (MarcoFalke)\nfa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319 ci: Use clang-8 for fuzzing to run on aarch64 ci systems (MarcoFalke)\n\nPull request description:\n\n  Ubuntu bionic clang is clang version 6, which does not come with libfuzzer. So the ci system breaks down when run on aarch64.\n\n  Fix that by using clang-8\n\n  For reference, the previous error on my ci system was:\n\n  ```\n  /usr/bin/ld: cannot find /usr/lib/llvm-6.0/lib/clang/6.0.0/lib/linux/libclang_rt.fuzzer-aarch64.a: No such file or directory\n\nACKs for top commit:\n  laanwj:\n    ACK fa2ec9f4518c1da3ab3592537c6cd204693a6069\n\nTree-SHA512: 4954dbc36c444d1ae145290115eea6291753c9810c92003ab8d75433c3fe3bfee439d3a99dc394418275527157a8b89f04038c8b16e08c69ec9ded50fb869e70",
      "tree": {
        "sha": "40b681f2d8036aa74d25338f50abcf4d5169294f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40b681f2d8036aa74d25338f50abcf4d5169294f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24647a09e710732376bfd202df0f7566861edb4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3SlkwACgkQHkrtYphs\n0l1TgggAlt0XjazqwnaD0rXccMpJEkBJ1ruteEwDD4rxGzKphz3mS1DO77J6frzA\niBAqKxtXoz9gXUlkBGGEZFg4YKSeQhq0tmfmHGRvXQIZADOgs5KFcsvMT6uGhJDu\n6ZClqZUMhtUYKl0hwX4haN43g9EDCrSso92Kb16uq6eOfMMEjNSA9jdaOIxk3LKb\nOD5DNXmgZKuEHHvn4noPZh4nfnFBspT1IZkagM6GO2vPN7eNRUy8X1ha8bLLK8Le\nvu1Sz58a+tci7pCQ1JdfHOyvuyWIzP7vdVVTiXqziS2rEdOiPHLlFAp0qkNyJkA2\n2SecXNeXrOk6haHieAqnmFbo3F8wKA==\n=H1Jk\n-----END PGP SIGNATURE-----",
        "payload": "tree 40b681f2d8036aa74d25338f50abcf4d5169294f\nparent 0bb37e437e9cb4a29476edc9fa42f3e03c8bd797\nparent fa2ec9f4518c1da3ab3592537c6cd204693a6069\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574082121 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574082124 +0100\n\nMerge #17470: ci: Use clang-8 for fuzzing to run on aarch64 ci systems\n\nfa2ec9f4518c1da3ab3592537c6cd204693a6069 fuzz: Bump timeout in test_runner to accomodate for slow arm64 CPUs (MarcoFalke)\nfa6e01b2f3cd8523a95bd1906ac5e62ee3cbf319 ci: Use clang-8 for fuzzing to run on aarch64 ci systems (MarcoFalke)\n\nPull request description:\n\n  Ubuntu bionic clang is clang version 6, which does not come with libfuzzer. So the ci system breaks down when run on aarch64.\n\n  Fix that by using clang-8\n\n  For reference, the previous error on my ci system was:\n\n  ```\n  /usr/bin/ld: cannot find /usr/lib/llvm-6.0/lib/clang/6.0.0/lib/linux/libclang_rt.fuzzer-aarch64.a: No such file or directory\n\nACKs for top commit:\n  laanwj:\n    ACK fa2ec9f4518c1da3ab3592537c6cd204693a6069\n\nTree-SHA512: 4954dbc36c444d1ae145290115eea6291753c9810c92003ab8d75433c3fe3bfee439d3a99dc394418275527157a8b89f04038c8b16e08c69ec9ded50fb869e70\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24647a09e710732376bfd202df0f7566861edb4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24647a09e710732376bfd202df0f7566861edb4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24647a09e710732376bfd202df0f7566861edb4b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0bb37e437e9cb4a29476edc9fa42f3e03c8bd797"
      },
      {
        "sha": "fa2ec9f4518c1da3ab3592537c6cd204693a6069",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2ec9f4518c1da3ab3592537c6cd204693a6069",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2ec9f4518c1da3ab3592537c6cd204693a6069"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ed331e5069111423124935dc70c7f74913f2f0b7",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24647a09e710732376bfd202df0f7566861edb4b/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24647a09e710732376bfd202df0f7566861edb4b/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=24647a09e710732376bfd202df0f7566861edb4b",
        "patch": "@@ -6,10 +6,11 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false\n export RUN_FUZZ_TESTS=true\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-fuzz --with-sanitizers=fuzzer,address,undefined CC=clang-8 CXX=clang++-8\"\n+# Use clang-8, instead of default clang on bionic, which is clang-6 and does not come with libfuzzer on aarch64"
      },
      {
        "sha": "fde99fe4965c30b06ff5c10f3ab18d5a24af86aa",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24647a09e710732376bfd202df0f7566861edb4b/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24647a09e710732376bfd202df0f7566861edb4b/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=24647a09e710732376bfd202df0f7566861edb4b",
        "patch": "@@ -78,7 +78,7 @@ def main():\n                 os.path.join(config[\"environment\"][\"BUILDDIR\"], 'src', 'test', 'fuzz', test_list_selection[0]),\n                 '-help=1',\n             ],\n-            timeout=1,\n+            timeout=10,\n             check=True,\n             stderr=subprocess.PIPE,\n             universal_newlines=True,"
      }
    ]
  },
  {
    "sha": "63fac52f31ea37e5c71a64198c76484bc87dc11d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2ZhYzUyZjMxZWEzN2U1YzcxYTY0MTk4Yzc2NDg0YmM4N2RjMTFk",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:13:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:14:03Z"
      },
      "message": "Merge #17328: GuessVerificationProgress: cap the ratio to 1\n\n2f5f7d6b135e4eab368bbafd9e6e979aa72398de GuessVerificationProgress: cap the ratio to 1 (darosior)\n\nPull request description:\n\n  Noticed `getblockchaininfo` would return a `verificationprogress` > 1, especially while generating. This caps the verification progress to `1`.\n\n  Tried to append a check to functional tests but this would pass even without the patch, so it seems better to not add a superfluous check (but this can easily be reproduced by trying to generate blocks in the background and `watch`ing `getblockchainfo`).\n\nACKs for top commit:\n  laanwj:\n    ACK 2f5f7d6b135e4eab368bbafd9e6e979aa72398de\n  promag:\n    ACK 2f5f7d6b135e4eab368bbafd9e6e979aa72398de.\n\nTree-SHA512: fa3aca12acab9c14dab3b2cc94351082f548ea6e6c588987cd86e928a00feb023e8112433658a0e85084e294bfd940eaafa33fb46c4add94146a0901bc1c4f80",
      "tree": {
        "sha": "1a60d7067dcec1bbb941a2264619cfb39018ac44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a60d7067dcec1bbb941a2264619cfb39018ac44"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63fac52f31ea37e5c71a64198c76484bc87dc11d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3SmRsACgkQHkrtYphs\n0l2PGgf9EoxtHBNkVM5Im6nnkGv0NlMC8QjR8rWXgjgUECA6fLtiMJJ20CEs7cIn\nvOBFSetwA13B4lpciW0pR19IBTAHRb7xLl7fcPfDjXDQJaimC2Sj1oLPrPtgtSkP\nLCm6vRaETvceWsKfWH3/OKMIuFBRtqDa3Ut7C/vaR5oEoiYVOJObIRY4bO6LvsT8\noGVu7/vAQaKBnyO88lUVzGcorIP+gOg8osSnaKUEY1P3OYSVQALhEmA3YUwQMJLq\nhZd/ZzY0JAn9pfnapj5A86CTeQ6gLVZga1a8aFnXyXTGUU2YkY7yy1VWjl7v89bI\n+D473ZrvCyeig7BVbIjKknqefdg7MA==\n=5zyu\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a60d7067dcec1bbb941a2264619cfb39018ac44\nparent 24647a09e710732376bfd202df0f7566861edb4b\nparent 2f5f7d6b135e4eab368bbafd9e6e979aa72398de\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574082806 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574082843 +0100\n\nMerge #17328: GuessVerificationProgress: cap the ratio to 1\n\n2f5f7d6b135e4eab368bbafd9e6e979aa72398de GuessVerificationProgress: cap the ratio to 1 (darosior)\n\nPull request description:\n\n  Noticed `getblockchaininfo` would return a `verificationprogress` > 1, especially while generating. This caps the verification progress to `1`.\n\n  Tried to append a check to functional tests but this would pass even without the patch, so it seems better to not add a superfluous check (but this can easily be reproduced by trying to generate blocks in the background and `watch`ing `getblockchainfo`).\n\nACKs for top commit:\n  laanwj:\n    ACK 2f5f7d6b135e4eab368bbafd9e6e979aa72398de\n  promag:\n    ACK 2f5f7d6b135e4eab368bbafd9e6e979aa72398de.\n\nTree-SHA512: fa3aca12acab9c14dab3b2cc94351082f548ea6e6c588987cd86e928a00feb023e8112433658a0e85084e294bfd940eaafa33fb46c4add94146a0901bc1c4f80\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fac52f31ea37e5c71a64198c76484bc87dc11d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63fac52f31ea37e5c71a64198c76484bc87dc11d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fac52f31ea37e5c71a64198c76484bc87dc11d/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24647a09e710732376bfd202df0f7566861edb4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24647a09e710732376bfd202df0f7566861edb4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24647a09e710732376bfd202df0f7566861edb4b"
      },
      {
        "sha": "2f5f7d6b135e4eab368bbafd9e6e979aa72398de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2f5f7d6b135e4eab368bbafd9e6e979aa72398de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2f5f7d6b135e4eab368bbafd9e6e979aa72398de"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e74411037101435b569f6d03f49a47785a4a9850",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63fac52f31ea37e5c71a64198c76484bc87dc11d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63fac52f31ea37e5c71a64198c76484bc87dc11d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=63fac52f31ea37e5c71a64198c76484bc87dc11d",
        "patch": "@@ -5089,7 +5089,7 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n         fTxTotal = pindex->nChainTx + (nNow - pindex->GetBlockTime()) * data.dTxRate;\n     }\n \n-    return pindex->nChainTx / fTxTotal;\n+    return std::min<double>(pindex->nChainTx / fTxTotal, 1.0);\n }\n \n class CMainCleanup"
      }
    ]
  },
  {
    "sha": "ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYTFlZWJhMGIwNTg2ZmJhOWRmOWQxNzllYjM4ODRlYjdmNzRmOTE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:23:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:23:41Z"
      },
      "message": "Merge #17488: test: fix \"bitcoind already running\" warnings on macOS\n\n1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4 test: fix bitcoind already running warnings on macOS (fanquake)\n\nPull request description:\n\n  On macOS, `pidof` installed via brew returns b'' rather than None.\n  Account for this, to remove spurious warnings from the test_runner.\n\nACKs for top commit:\n  laanwj:\n    ACK 1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4\n\nTree-SHA512: 640f4323d4105eac5c7abb52daf80486d5d3b4a074720490ceeb97c3dd8d73a3de9a988d2550f1e2076c620bb10d452b2959d8b723d2ee64f499878909824e31",
      "tree": {
        "sha": "ab024de3b71042876cb47c7125a1c3cfd2752bf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab024de3b71042876cb47c7125a1c3cfd2752bf4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3Sm10ACgkQHkrtYphs\n0l1NQwf/SKuf0fY8hWeAZ1oibopXz7mj3GoHv+3xOKV24cYxUnsJX1NaL4xRJUUd\ngjhL0C/DNtU9JxYxU8TcggBIVPuxTd2WyvKu55LHoToinHBM8g0hCddQF2SJxpna\nz9eQVmXq9how/BnnARatINvYkQVnRf1H7j5eQ5X2DdFBsF4OjIBkfwmP4fyKMaLr\n5VHUMJgmoFHK3Bk0wlQZyU5ZCLMUBg7SiDzxLRhSNguVxdrfRH44NWMGp4AZZZIu\nfZUdmP4XrBOfIbK1v4TitS05dJ3wylWOtFVm9HtQpVl8lWrleCUwpC7MhpgaUlkk\nsmrll3UcIZZbZFoEl4BTPiM2rg73aQ==\n=PTiL\n-----END PGP SIGNATURE-----",
        "payload": "tree ab024de3b71042876cb47c7125a1c3cfd2752bf4\nparent 63fac52f31ea37e5c71a64198c76484bc87dc11d\nparent 1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574083413 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574083421 +0100\n\nMerge #17488: test: fix \"bitcoind already running\" warnings on macOS\n\n1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4 test: fix bitcoind already running warnings on macOS (fanquake)\n\nPull request description:\n\n  On macOS, `pidof` installed via brew returns b'' rather than None.\n  Account for this, to remove spurious warnings from the test_runner.\n\nACKs for top commit:\n  laanwj:\n    ACK 1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4\n\nTree-SHA512: 640f4323d4105eac5c7abb52daf80486d5d3b4a074720490ceeb97c3dd8d73a3de9a988d2550f1e2076c620bb10d452b2959d8b723d2ee64f499878909824e31\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca1eeba0b0586fba9df9d179eb3884eb7f74f919/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63fac52f31ea37e5c71a64198c76484bc87dc11d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63fac52f31ea37e5c71a64198c76484bc87dc11d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63fac52f31ea37e5c71a64198c76484bc87dc11d"
      },
      {
        "sha": "1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1c23ea5fe67b88fd72a1ff640dd1bbb21a34fbf4"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4156e22720f5d812154c3fea82f7d54b08794fd0",
        "filename": "test/functional/test_runner.py",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ca1eeba0b0586fba9df9d179eb3884eb7f74f919/test/functional/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ca1eeba0b0586fba9df9d179eb3884eb7f74f919/test/functional/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_runner.py?ref=ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
        "patch": "@@ -364,9 +364,10 @@ def main():\n def run_tests(*, test_list, src_dir, build_dir, tmpdir, jobs=1, enable_coverage=False, args=None, combined_logs_len=0, failfast=False, runs_ci, use_term_control):\n     args = args or []\n \n-    # Warn if bitcoind is already running (unix only)\n+    # Warn if bitcoind is already running\n+    # pidof might fail or return an empty string if bitcoind is not running\n     try:\n-        if subprocess.check_output([\"pidof\", \"bitcoind\"]) is not None:\n+        if subprocess.check_output([\"pidof\", \"bitcoind\"]) not in [b'']:\n             print(\"%sWARNING!%s There is already a bitcoind process running on this system. Tests may fail unexpectedly due to resource contention!\" % (BOLD[1], BOLD[0]))\n     except (OSError, subprocess.SubprocessError):\n         pass"
      }
    ]
  },
  {
    "sha": "6fde676f647e3b43cf0f5b242a00896f361ea385",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmRlNjc2ZjY0N2UzYjQzY2YwZjViMjQyYTAwODk2ZjM2MWVhMzg1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:39:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-18T13:39:19Z"
      },
      "message": "Merge #16669: build: use new fork of osslsigncode for windows gitian signing\n\nfeb507577797518d0bee1774327d215e19d1ba34 build: use osslsigncode 2.0 in gitian (fanquake)\n\nPull request description:\n\n  The original osslsigncode project, https://sourceforge.net/projects/osslsigncode, has been marked as abandonware:\n  > This is now - and has been for a long while - abandonware. Feel free to create your own forks etc.\".\n\n  However, a fork has emerged, https://github.com/mtrojnar/osslsigncode, that has incorporated\n  theuni's patches ([add the -pem option in extract-signature mode ](https://github.com/mtrojnar/osslsigncode/commit/36715c11836d07709aff822154a0eed2c43ed5a5) & [add the attach-signature command](https://github.com/mtrojnar/osslsigncode/commit/3be7eb1676a8af8afd9e0aa03e4cac651da14c23)) as well as updated the tool to work with OpenSSL 1.1 and other improvements.\n\n  This commit switches the windows signer descriptor to use this new version of `osslsigncode`.\n\n  I've tested using this new version of `osslsigncode` while doing a 0.18.1 gitian build, and it \"seems\" to work. However this needs a look over from Cory, to check if the tool is still compatible with his usage in the [`detached-sig-create.sh`](https://github.com/bitcoin/bitcoin/blob/master/contrib/windeploy/detached-sig-create.sh) script, as well as some review of the changes to `osslsigncode` itself. Hence WIP and chasing Concept ACKs / NACKs.\n\nACKs for top commit:\n  MarcoFalke:\n    Concept ACK feb507577797518d0bee1774327d215e19d1ba34 given that this upstream is now used in Ubuntu and Debian\n  laanwj:\n    ACK feb507577797518d0bee1774327d215e19d1ba34\n\nTree-SHA512: c48de6dc32751d96dd04b920bfacca40af47a2883330ba0700371d56c580a7e45cedd8d8a913709d56be036762b63cb1825a98cff7aa77b6d7804fab11220850",
      "tree": {
        "sha": "fec56c11069779ce3c79741f05fd0e1bed0b045e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fec56c11069779ce3c79741f05fd0e1bed0b045e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fde676f647e3b43cf0f5b242a00896f361ea385",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3SnwcACgkQHkrtYphs\n0l1xDwf/ZQUbMuwymIYBWwjlQ8TXJSj5NpmbkII7trGY2jVAxdlw7fj+xyFMNns4\nqEqeQZpA336UHQreLaQ0d2iwF3x2LOlFk+mq5s9el1y913IDTMeGSVgES98kLI/b\nymKrMpRado6oFxSqk8MLxhXtclxNZ9rCSth2n520U4KQwjLy0T7vieNx3MuPMZhw\nHuiFu7Kof5RkdBro7aVFgC07d5F5u9iWfgLnPup0iE1bjik1kFE3SPRVi9UdTRE7\nvXGjV3Uzfnv6PGUJVmUVhbeQTGTCjCUkzAJuEEhQiwHgT38kh+eekeh8u9jbIkTw\n1YWD4bn6qdRg148stTXVQG4+DnNHdA==\n=FDwF\n-----END PGP SIGNATURE-----",
        "payload": "tree fec56c11069779ce3c79741f05fd0e1bed0b045e\nparent ca1eeba0b0586fba9df9d179eb3884eb7f74f919\nparent feb507577797518d0bee1774327d215e19d1ba34\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574084351 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574084359 +0100\n\nMerge #16669: build: use new fork of osslsigncode for windows gitian signing\n\nfeb507577797518d0bee1774327d215e19d1ba34 build: use osslsigncode 2.0 in gitian (fanquake)\n\nPull request description:\n\n  The original osslsigncode project, https://sourceforge.net/projects/osslsigncode, has been marked as abandonware:\n  > This is now - and has been for a long while - abandonware. Feel free to create your own forks etc.\".\n\n  However, a fork has emerged, https://github.com/mtrojnar/osslsigncode, that has incorporated\n  theuni's patches ([add the -pem option in extract-signature mode ](https://github.com/mtrojnar/osslsigncode/commit/36715c11836d07709aff822154a0eed2c43ed5a5) & [add the attach-signature command](https://github.com/mtrojnar/osslsigncode/commit/3be7eb1676a8af8afd9e0aa03e4cac651da14c23)) as well as updated the tool to work with OpenSSL 1.1 and other improvements.\n\n  This commit switches the windows signer descriptor to use this new version of `osslsigncode`.\n\n  I've tested using this new version of `osslsigncode` while doing a 0.18.1 gitian build, and it \"seems\" to work. However this needs a look over from Cory, to check if the tool is still compatible with his usage in the [`detached-sig-create.sh`](https://github.com/bitcoin/bitcoin/blob/master/contrib/windeploy/detached-sig-create.sh) script, as well as some review of the changes to `osslsigncode` itself. Hence WIP and chasing Concept ACKs / NACKs.\n\nACKs for top commit:\n  MarcoFalke:\n    Concept ACK feb507577797518d0bee1774327d215e19d1ba34 given that this upstream is now used in Ubuntu and Debian\n  laanwj:\n    ACK feb507577797518d0bee1774327d215e19d1ba34\n\nTree-SHA512: c48de6dc32751d96dd04b920bfacca40af47a2883330ba0700371d56c580a7e45cedd8d8a913709d56be036762b63cb1825a98cff7aa77b6d7804fab11220850\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fde676f647e3b43cf0f5b242a00896f361ea385",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fde676f647e3b43cf0f5b242a00896f361ea385",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fde676f647e3b43cf0f5b242a00896f361ea385/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ca1eeba0b0586fba9df9d179eb3884eb7f74f919",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ca1eeba0b0586fba9df9d179eb3884eb7f74f919"
      },
      {
        "sha": "feb507577797518d0bee1774327d215e19d1ba34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/feb507577797518d0bee1774327d215e19d1ba34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/feb507577797518d0bee1774327d215e19d1ba34"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 12,
      "deletions": 17
    },
    "files": [
      {
        "sha": "712352d6b791b26d7b45860ce3e12772a5013187",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fde676f647e3b43cf0f5b242a00896f361ea385/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fde676f647e3b43cf0f5b242a00896f361ea385/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=6fde676f647e3b43cf0f5b242a00896f361ea385",
        "patch": "@@ -51,10 +51,8 @@ def build():\n     os.chdir('gitian-builder')\n     os.makedirs('inputs', exist_ok=True)\n \n-    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'https://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz'])\n-    subprocess.check_call(['wget', '-N', '-P', 'inputs', 'https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch'])\n-    subprocess.check_call([\"echo 'a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911 inputs/osslsigncode-Backports-to-1.7.1.patch' | sha256sum -c\"], shell=True)\n-    subprocess.check_call([\"echo 'f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9 inputs/osslsigncode-1.7.1.tar.gz' | sha256sum -c\"], shell=True)\n+    subprocess.check_call(['wget', '-O' 'osslsigncode-2.0.tar.gz' '-N', '-P', 'inputs', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n     subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n \n     if args.linux:"
      },
      {
        "sha": "1f5b9d45077e8f8232b94fdec33b048edb3878e6",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 9,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fde676f647e3b43cf0f5b242a00896f361ea385/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fde676f647e3b43cf0f5b242a00896f361ea385/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=6fde676f647e3b43cf0f5b242a00896f361ea385",
        "patch": "@@ -6,15 +6,15 @@ suites:\n architectures:\n - \"linux64\"\n packages:\n-# Once osslsigncode supports openssl 1.1, we can change this back to libssl-dev\n-- \"libssl1.0-dev\"\n+- \"libssl-dev\"\n - \"autoconf\"\n+- \"libtool\"\n+- \"pkg-config\"\n remotes:\n - \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n+- \"osslsigncode-2.0.tar.gz\"\n - \"bitcoin-win-unsigned.tar.gz\"\n script: |\n   set -e -o pipefail\n@@ -23,16 +23,15 @@ script: |\n   SIGDIR=${BUILD_DIR}/signature/win\n   UNSIGNED_DIR=${BUILD_DIR}/unsigned\n \n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n+  echo \"5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f  osslsigncode-2.0.tar.gz\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n   tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n \n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n+  tar xf osslsigncode-2.0.tar.gz\n+  cd osslsigncode-2.0\n \n+  ./autogen.sh\n   ./configure --without-gsf --without-curl --disable-dependency-tracking\n   make\n   find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do"
      },
      {
        "sha": "6d1e7c69e99ac78da4ccfca4ed3816791d947087",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fde676f647e3b43cf0f5b242a00896f361ea385/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fde676f647e3b43cf0f5b242a00896f361ea385/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=6fde676f647e3b43cf0f5b242a00896f361ea385",
        "patch": "@@ -116,10 +116,8 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n-    echo 'a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911 inputs/osslsigncode-Backports-to-1.7.1.patch' | sha256sum -c\n-    wget -P inputs https://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-    echo 'f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9 inputs/osslsigncode-1.7.1.tar.gz' | sha256sum -c\n+    wget -O osslsigncode-2.0.tar.gz -P inputs https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n+    echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\n     popd\n \n Create the macOS SDK tarball, see the [macOS build instructions](build-osx.md#deterministic-macos-dmg-notes) for details, and copy it into the inputs directory."
      }
    ]
  },
  {
    "sha": "5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjI0YWIwYjRmODQ0ZGM3YzE3YWViMWIwMDlmMDAyYzMzYzM4ZmIz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T12:15:43Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:48:39Z"
      },
      "message": "random: stop feeding RNG output back into OpenSSL\n\nOn the ::SLOW or ::SLEEP paths, we would feed our RNG output back into\nOpenSSL using RAND_add. This commit removes that functionality.\n\nRAND_add(): https://www.openssl.org/docs/manmaster/man3/RAND_add.html\n\nRAND_add() mixes the num bytes at buf into the internal state of the\nrandom generator. This function will not normally be needed, as\nmentioned above. The randomness argument is an estimate of how much\nrandomness is contained in buf, in bytes, and should be a number\nbetween zero and num.",
      "tree": {
        "sha": "e3c2bb4b0d2dcfafdbf52d2e6dc908f2fd7c9850",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3c2bb4b0d2dcfafdbf52d2e6dc908f2fd7c9850"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3SoTcACgkQLuufXMCV\nJsGA8Q//SMIrGgv9519+mZzhdLLF2h++I0z4wueaqkwdfPu1FX1syx/JMGCzfRHm\nMCCTWuANq5OT/fnQA/0R+u4U3xP9q6QSBBhmnOuYDK6+hE88yiiEZ2tilluOoNU3\n0PRHtafCj/NqB3amPxE1LM3Pr3rm4LXiJ1t1Z2E8m6TQ6pXkwTb69zxNj7aCVTOU\nPP5N/VPEfP8OIcn5qUHE+QSCRm2dErUCibriJPvwvt0zqH5X9ANxCrlapZSoHNVq\nfP8HlMjF75EgN1w+PXEmUUYpa7laNp/nDNo851lRtuHQIHVa/f/Doo2t4eGq2elc\nufWtFSULrhURkYFqHolU/qmcFLrGJR0I0WemG+BoVNdQ+dE+rMeCFHhDkP9TPZt+\nbj35Aq0iv8d7XYitK1SvLoYFgXN6iziXIViSDBl8R+39J+r2SYh2msmA+dFXKUdj\njqZjOhyClb3N3Y3rETkt6L1B9rJZd/QVlP4sjWlqDe+x/+Y7JMlPb7yR03k3s9UN\n+neHjLWg/wFsgAdQUL+5hkY4vmeD1APhu76/MAAHxG3EiEqVi02/K9uxCxc4eeZy\no5TJnanKYSAUiqOXl0jdCTTUBBkUGc1/j86qRC217cDm/HJWlyzanDgsDsB2AVQE\n91Tw8TpE0U3w21nwSQtK48SF3eZHZ3jJa0yXjdUwLHeIepqSWZA=\n=Pebb\n-----END PGP SIGNATURE-----",
        "payload": "tree e3c2bb4b0d2dcfafdbf52d2e6dc908f2fd7c9850\nparent 6fde676f647e3b43cf0f5b242a00896f361ea385\nauthor fanquake <fanquake@gmail.com> 1572092143 -0400\ncommitter fanquake <fanquake@gmail.com> 1574084919 -0500\n\nrandom: stop feeding RNG output back into OpenSSL\n\nOn the ::SLOW or ::SLEEP paths, we would feed our RNG output back into\nOpenSSL using RAND_add. This commit removes that functionality.\n\nRAND_add(): https://www.openssl.org/docs/manmaster/man3/RAND_add.html\n\nRAND_add() mixes the num bytes at buf into the internal state of the\nrandom generator. This function will not normally be needed, as\nmentioned above. The randomness argument is an estimate of how much\nrandomness is contained in buf, in bytes, and should be a number\nbetween zero and num.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fde676f647e3b43cf0f5b242a00896f361ea385",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fde676f647e3b43cf0f5b242a00896f361ea385",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fde676f647e3b43cf0f5b242a00896f361ea385"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "8bdf45ef67d91e7d313cba82c083df444f374a67",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
        "patch": "@@ -586,14 +586,6 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n         SeedStartup(startup_hasher, rng);\n         rng.MixExtract(out, num, std::move(startup_hasher), true);\n     }\n-\n-    // For anything but the 'fast' level, feed the resulting RNG output (after an additional hashing step) back into OpenSSL.\n-    if (level != RNGLevel::FAST) {\n-        unsigned char buf[64];\n-        CSHA512().Write(out, num).Finalize(buf);\n-        RAND_add(buf, sizeof(buf), num);\n-        memory_cleanse(buf, 64);\n-    }\n }\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }"
      }
    ]
  },
  {
    "sha": "4fcfcc294e7cb17956e283d09050cb997093a35d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmNmY2MyOTRlN2NiMTc5NTZlMjgzZDA5MDUwY2I5OTcwOTNhMzVk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T12:22:11Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:40Z"
      },
      "message": "random: stop retrieving random bytes from OpenSSL\n\nOn the ::SLOW path we would use OpenSSL as an additional source of\nrandom bytes. This commit removes that functionality. Note that this was\nalways only an additional source, and that we never checked the return\nvalue\n\nRAND_bytes(): https://www.openssl.org/docs/manmaster/man3/RAND_bytes.html\n\nRAND_bytes() puts num cryptographically strong pseudo-random bytes into buf.",
      "tree": {
        "sha": "231dd1b4fb78e155295388e987bdf9d5b0d9b315",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/231dd1b4fb78e155295388e987bdf9d5b0d9b315"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fcfcc294e7cb17956e283d09050cb997093a35d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3SoxoACgkQLuufXMCV\nJsGzNhAAglRYy5/AfRAkKu0aR3srJFR4b3j4T/4D4DK/rgt1FvAUjEGe0XSZyWck\nlsFTJYI7ZmX4vU3N1ADMrPUTFOZUaFfXCpP6afihJCwEn6FphUn+ivzxsH7A5UmI\ncEEW403WaN5EAEC1iQFEZnooOwglrm2Afb1aA8no/mVHRhohdLwzRjdJlzuQV5Y6\nndvxvK27IHfuPO5pCg9S6YtaI/ZIvDd/RT515lPiEOWtidCfVeVYy9jbIwcmQKhW\nq7YPSEXcSxT5qr+AtXkQhJx+nL41COxGQwKt0x9BOD8RFeKvUdz/llEQFCaCXK4P\n3LjBRbbIi+xLuxvIGbCi6Wb2gxKbo06MCfP3BZYvMvXYPRrV5o0SA1UXlKCJ2Bis\ne8tGoTPf11s8loskn9bnGqFjIENedVmsy2Dk5y9YH2ORM8ykK1KCPSlqFjVx2zam\nAsPIK3u2r7NPJ8xvIalMWYVP94iv/E/j/ThxRP0cJUeYEUlKs9gnqUY7wG3MqRK2\n5ZHuL1k+POmWuPnRfAq/XRTR3xsimHMgAxbRlEQBI7MxTDngawEwAkpwJHkrYixf\nhQZ7NhpAdYI3QPHdCsxEfpNC3ks1Hr19msHqTY1aKj+Urhxpjpyas+77WkgWbnnM\nv77Op0FIogobZE+dorXACJ8nJXMalcUFQ/FfjnwuPj52qiPXE8w=\n=HxXs\n-----END PGP SIGNATURE-----",
        "payload": "tree 231dd1b4fb78e155295388e987bdf9d5b0d9b315\nparent 5624ab0b4f844dc7c17aeb1b009f002c33c38fb3\nauthor fanquake <fanquake@gmail.com> 1572092531 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085400 -0500\n\nrandom: stop retrieving random bytes from OpenSSL\n\nOn the ::SLOW path we would use OpenSSL as an additional source of\nrandom bytes. This commit removes that functionality. Note that this was\nalways only an additional source, and that we never checked the return\nvalue\n\nRAND_bytes(): https://www.openssl.org/docs/manmaster/man3/RAND_bytes.html\n\nRAND_bytes() puts num cryptographically strong pseudo-random bytes into buf.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcfcc294e7cb17956e283d09050cb997093a35d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcfcc294e7cb17956e283d09050cb997093a35d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcfcc294e7cb17956e283d09050cb997093a35d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5624ab0b4f844dc7c17aeb1b009f002c33c38fb3"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "d41874081395c99f5e386c47ebd2a3c41a0e0ece",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcfcc294e7cb17956e283d09050cb997093a35d/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcfcc294e7cb17956e283d09050cb997093a35d/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=4fcfcc294e7cb17956e283d09050cb997093a35d",
        "patch": "@@ -495,10 +495,6 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     GetOSRand(buffer);\n     hasher.Write(buffer, sizeof(buffer));\n \n-    // OpenSSL RNG (for now)\n-    RAND_bytes(buffer, sizeof(buffer));\n-    hasher.Write(buffer, sizeof(buffer));\n-\n     // High-precision timestamp.\n     //\n     // Note that we also commit to a timestamp in the Fast seeder, so we indirectly commit to a"
      },
      {
        "sha": "2d8ab085e3a0fad6faf73baea44d960a3d270af5",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcfcc294e7cb17956e283d09050cb997093a35d/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcfcc294e7cb17956e283d09050cb997093a35d/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=4fcfcc294e7cb17956e283d09050cb997093a35d",
        "patch": "@@ -35,7 +35,6 @@\n  *   that fast seeding includes, but additionally:\n  *   - OS entropy (/dev/urandom, getrandom(), ...). The application will terminate if\n  *     this entropy source fails.\n- *   - Bytes from OpenSSL's RNG (which itself may be seeded from various sources)\n  *   - Another high-precision timestamp (indirectly committing to a benchmark of all the\n  *     previous sources).\n  *   These entropy sources are slower, but designed to make sure the RNG state contains"
      },
      {
        "sha": "ec42ddabc328006c2fe3ab229951e8d3bc47eaff",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fcfcc294e7cb17956e283d09050cb997093a35d/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fcfcc294e7cb17956e283d09050cb997093a35d/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=4fcfcc294e7cb17956e283d09050cb997093a35d",
        "patch": "@@ -70,7 +70,6 @@ namespace {\n void RandAddSeedPerfmon(CSHA512& hasher)\n {\n #ifdef WIN32\n-    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n     // Seed with the entire set of perfmon data\n \n     // This can take up to 2 seconds, so only do it every 10 minutes"
      }
    ]
  },
  {
    "sha": "b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDliNmIwZjcwOTBjYzE1ODYwZDgxNWZiMGVmMzA2ZGRmYzcxOGJh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T12:41:58Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:47Z"
      },
      "message": "random: Remove remaining OpenSSL calls and locking infrastructure",
      "tree": {
        "sha": "92f2127c8e9a7a9da5bc51c96b273f195e5e9c4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92f2127c8e9a7a9da5bc51c96b273f195e5e9c4f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Sox8ACgkQLuufXMCV\nJsHXrw//QTQiWetIrG4YhJnHwAUDc4BZ49AWJk7N17EFu/FFStr9C8yHhXiy9knb\nKRk0LIVvT/AcPGV10RmWZfvCfYcP8ELHRAq2RAPloBFen2gt/aSTn4SklNEUZ8y1\nXgFINiSZUyKeqJbsJEF8TlcfbD18AIid887YWfaZteqRi7a+rOOxcrmZxdaHYp2t\nN+OsWbNTXzlmxx4+NAvGfTcIN5odp+c8YaQD09xdJXv50BUx05TDngyScf2varqU\nPDdM6LXsYNl32pJ3ccGW/raxaBPt4klGKv2TeNGI9Lalne1l05I9zqh+y4AxlTA9\n+T05gLRxBgCN+oW6FYRJQMcvL3VCE5bjRUjkzJKFPl6B4f3U5LSzX/bFsr4TBFC0\n+0m05cfq4Y79x+WGI8qFMVVvWBoWr3YtZtH6FSqSLhe5kWM/wNf4ia/HJY1cWdVG\nELt6tXdemOPpORy29qfyNNO2hDM6C3IV6XMCbyiIWS9gPnYtPd07UOJB2T8ixCpw\nAKpPFPeM8erQ/BW2hI2veCXo+iw7z5xxciGoegcvsJpBQAle7paZ3S5Kd5agsnPg\n1g6686gWG0o2xzQsgbBSI+LZgI0lNxUpSAO4o1wwLG0PAG8y2iJqGl/NsHZ2p48p\n9liAm476+ea5Ll0gjoS9chfBvPUFS6AssfgcTDxTGZWJhovf5mo=\n=V5Wh\n-----END PGP SIGNATURE-----",
        "payload": "tree 92f2127c8e9a7a9da5bc51c96b273f195e5e9c4f\nparent 4fcfcc294e7cb17956e283d09050cb997093a35d\nauthor fanquake <fanquake@gmail.com> 1572093718 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085407 -0500\n\nrandom: Remove remaining OpenSSL calls and locking infrastructure\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b49b6b0f7090cc15860d815fb0ef306ddfc718ba/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fcfcc294e7cb17956e283d09050cb997093a35d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fcfcc294e7cb17956e283d09050cb997093a35d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fcfcc294e7cb17956e283d09050cb997093a35d"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 0,
      "deletions": 35
    },
    "files": [
      {
        "sha": "47d76d870077da5667be8035618b0b2f755d8dca",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b49b6b0f7090cc15860d815fb0ef306ddfc718ba/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b49b6b0f7090cc15860d815fb0ef306ddfc718ba/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
        "patch": "@@ -43,10 +43,6 @@\n #include <sys/sysctl.h>\n #endif\n \n-#include <openssl/err.h>\n-#include <openssl/rand.h>\n-#include <openssl/conf.h>\n-\n [[noreturn]] static void RandFailure()\n {\n     LogPrintf(\"Failed to read randomness, aborting\\n\");\n@@ -347,8 +343,6 @@ void GetOSRand(unsigned char *ent32)\n #endif\n }\n \n-void LockingCallbackOpenSSL(int mode, int i, const char* file, int line);\n-\n namespace {\n \n class RNGState {\n@@ -364,31 +358,15 @@ class RNGState {\n     unsigned char m_state[32] GUARDED_BY(m_mutex) = {0};\n     uint64_t m_counter GUARDED_BY(m_mutex) = 0;\n     bool m_strongly_seeded GUARDED_BY(m_mutex) = false;\n-    std::unique_ptr<Mutex[]> m_mutex_openssl;\n \n public:\n     RNGState() noexcept\n     {\n         InitHardwareRand();\n-\n-        // Init OpenSSL library multithreading support\n-        m_mutex_openssl.reset(new Mutex[CRYPTO_num_locks()]);\n-        CRYPTO_set_locking_callback(LockingCallbackOpenSSL);\n-\n-        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n-        // We don't use them so we don't require the config. However some of our libs may call functions\n-        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n-        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n-        // that the config appears to have been loaded and there are no modules/engines available.\n-        OPENSSL_no_config();\n     }\n \n     ~RNGState()\n     {\n-        // Securely erase the memory used by the OpenSSL PRNG\n-        RAND_cleanup();\n-        // Shutdown OpenSSL library multithreading support\n-        CRYPTO_set_locking_callback(nullptr);\n     }\n \n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n@@ -424,8 +402,6 @@ class RNGState {\n         memory_cleanse(buf, 64);\n         return ret;\n     }\n-\n-    Mutex& GetOpenSSLMutex(int i) { return m_mutex_openssl[i]; }\n };\n \n RNGState& GetRNGState() noexcept\n@@ -437,17 +413,6 @@ RNGState& GetRNGState() noexcept\n }\n }\n \n-void LockingCallbackOpenSSL(int mode, int i, const char* file, int line) NO_THREAD_SAFETY_ANALYSIS\n-{\n-    RNGState& rng = GetRNGState();\n-\n-    if (mode & CRYPTO_LOCK) {\n-        rng.GetOpenSSLMutex(i).lock();\n-    } else {\n-        rng.GetOpenSSLMutex(i).unlock();\n-    }\n-}\n-\n /* A note on the use of noexcept in the seeding functions below:\n  *\n  * None of the RNG code should ever throw any exception, with the sole exception"
      }
    ]
  },
  {
    "sha": "8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTgzZWUzZTZkZDhhYjY1OGJkMmNhZjk3YzMyNmNjNTNlYTUwODE4",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T13:09:25Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:47Z"
      },
      "message": "build: remove OpenSSL detection and libs",
      "tree": {
        "sha": "8c3e009c029dfcfe8269f54663118ac33ecc7185",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c3e009c029dfcfe8269f54663118ac33ecc7185"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Sox8ACgkQLuufXMCV\nJsEFsRAAuj3vejWNzUGZ3Aa8exO/xIQd6ol33BZzlzuYEngPH67mdLoeRlfzGzwb\n/CDeRqR2lbVWeqat3ZGiPayCl6cVHxzkNQyWr7sFxxRj3mP4TWhnHWHwohTc2A6D\n86SzhoiHElYiCBG5E4K5k9fiMDNwtUsiFMS9HRFiRgxDN8aFtD0eXk7beaB4XVwt\no3vmGRng1UdS9aAEI0042tH/a+eX42UCGwWj6vp1KRrMm1/zMf7hYSw4ysT3AeaV\n+91JsvkYEPa8RFCXLAwvpeBl243jGUfuTyxUhctQY3qcQ+VdjdvMP4Xp6J9ieXtz\nbLjQW/oIO3J7g07l/0za6pHrPaKmCnkUj6qA6BcDZGUvsZ2xlUoWrz/mqxAKB4vt\nlwvR158prOjMIikN3cSUIfMAuTW450pFSkDur0X+XDCp2EkblbS8514aFmhJe0qn\nmoGZKTaaz5WeAwivkS+nsqFG+6jXEmo/R8kzLaqlhL6sTWcn77XpSvymFh+iRiIv\n56PGS2ThpAN89GxJPLOe3KHIvQoabpjdIFrxgK4Q/H4332ZqFZ/7fq7zq1g0a18G\nA0hSO8FtCGBw3edBykiDSruczk0ySvBv5wjjtzaWgZbjLRjlOApxse38ALenteNj\nXDq5w0HQDsKvrCq4potO6gPFj61vmD6MsAxE1hUULt+H1Ll3P+Y=\n=cPEC\n-----END PGP SIGNATURE-----",
        "payload": "tree 8c3e009c029dfcfe8269f54663118ac33ecc7185\nparent b49b6b0f7090cc15860d815fb0ef306ddfc718ba\nauthor fanquake <fanquake@gmail.com> 1572095365 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085407 -0500\n\nbuild: remove OpenSSL detection and libs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b49b6b0f7090cc15860d815fb0ef306ddfc718ba",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b49b6b0f7090cc15860d815fb0ef306ddfc718ba"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 8,
      "deletions": 19
    },
    "files": [
      {
        "sha": "2025037bd466d7bb0c68e235b63ce5d5b8d6289f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -555,13 +555,8 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n          bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n          qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n          if test x$bdb_prefix != x; then\n            CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n            LIBS=\"$LIBS -L$bdb_prefix/lib\"\n@@ -1255,7 +1250,6 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n@@ -1278,8 +1272,6 @@ if test x$use_pkgconfig = xyes; then\n     ]\n   )\n else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n@@ -1599,7 +1591,6 @@ AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)"
      },
      {
        "sha": "ffb97f26d7043d117127c09a874a8424a8ddd6ce",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -19,7 +19,7 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n@@ -571,7 +571,7 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -589,7 +589,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n@@ -610,7 +610,7 @@ bitcoin_tx_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+bitcoin_tx_LDADD += $(BOOST_LIBS)\n #\n \n # bitcoin-wallet binary #\n@@ -637,7 +637,7 @@ bitcoin_wallet_LDADD = \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n-bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n+bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n #\n \n # bitcoinconsensus library #"
      },
      {
        "sha": "acd712c8a2ca369a8c580ba520a848034768f06f",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -76,7 +76,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "93e60ff83224f9c4fc48b6b9580c019b573c44bb",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -314,7 +314,6 @@ endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n "
      },
      {
        "sha": "37e1da2a7856ff6355a3c8afeffa9fcf0bee14dc",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -63,7 +63,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "d2d897af2f7fea190f39d8b580faf36bc9b2c995",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -91,7 +91,6 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(LIBMEMENV) \\\n  $(LIBSECP256K1) \\\n  $(EVENT_LIBS) \\\n- $(CRYPTO_LIBS) \\\n  $(EVENT_PTHREADS_LIBS)\n \n # test_bitcoin binary #\n@@ -207,7 +206,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ"
      }
    ]
  },
  {
    "sha": "648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDhiMmUzYzMyODhlZTBiODNkNDA4OWQyN2ZhN2Y4NGE3M2QxMThl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T13:09:50Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:47Z"
      },
      "message": "depends: remove OpenSSL package",
      "tree": {
        "sha": "197113a25805e5d860ded5b0846be70795ac6064",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/197113a25805e5d860ded5b0846be70795ac6064"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Sox8ACgkQLuufXMCV\nJsE4Ug//YWL/l0iEZ9bFY+G++QzgRSKeVw6/Av0ZejtOIybFi/+e1zv3AxwDH2NS\nr8NigQ+u51s737+KcF22KZbK1sCkNpnoy89NlxoFKSCNgqQkEAgHpBXcjQdbXgCE\nzVomRYhCXAXH/toGeb9gok9g2RJS1wY/n9H5uEOOt+iKt32KA6QNQqwVzeFHVr5g\njJzDQK9Y6bb3a2Syckd76tthLju/GesZ6tWgpUctBG2KMPYNuH8A9wS8yYyrDoXN\nWIn838pG/rJPBaSWaZOCrgH2tDo8xfpTZoFT9CkSFtCqd1aU7um+drzjsY2UFNdK\naJh50ncYaNX63XqSkXNo1fxnZd+tf8QXLpRMt3AQ/TswCI3WsvEDqFIu1mpo0g97\nfxd/DxenrnAx3yNaIaxJBAnAQyr40Pt3hqAv5sLiux2ks0mCQ2HvJ3apM9vbaOtG\nHAsRyiOFQ1TLBgUZg7C5kzErWSMlxU/BvQFznsYNJO588dVpOMEeKO3D9GlOd5r6\nhZu25TriqL/oQ96mwdB1j/Bo4QbXefxn0dAdURwJJ7ZPRnpsfht3zzS9Tfejv7Uu\ntFMBQqxENSBR9Hua3d0+dDYtB9DvMdNEFuvLrpcRb63fnWl5yMDsvCJNgrfbEoFb\nbTMa9DrgZclcjd0wY1sNF/jMzzgotKEZ/98TEO9sf9CjT1l6QDc=\n=b0g7\n-----END PGP SIGNATURE-----",
        "payload": "tree 197113a25805e5d860ded5b0846be70795ac6064\nparent 8983ee3e6dd8ab658bd2caf97c326cc53ea50818\nauthor fanquake <fanquake@gmail.com> 1572095390 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085407 -0500\n\ndepends: remove OpenSSL package\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/648b2e3c3288ee0b83d4089d27fa7f84a73d118e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8983ee3e6dd8ab658bd2caf97c326cc53ea50818"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 1,
      "deletions": 106
    },
    "files": [
      {
        "sha": "e3b3647dd9a95019b01925f319ff77d7abbacd5d",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -1,88 +0,0 @@\n-package=openssl\n-$(package)_version=1.0.1k\n-$(package)_download_path=https://www.openssl.org/source\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n-$(package)_patches=0001-Add-OpenSSL-termios-fix-for-musl-libc.patch\n-\n-define $(package)_set_vars\n-$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n-$(package)_config_opts+=no-camellia\n-$(package)_config_opts+=no-capieng\n-$(package)_config_opts+=no-cast\n-$(package)_config_opts+=no-comp\n-$(package)_config_opts+=no-dso\n-$(package)_config_opts+=no-dtls1\n-$(package)_config_opts+=no-ec_nistp_64_gcc_128\n-$(package)_config_opts+=no-gost\n-$(package)_config_opts+=no-gmp\n-$(package)_config_opts+=no-heartbeats\n-$(package)_config_opts+=no-idea\n-$(package)_config_opts+=no-jpake\n-$(package)_config_opts+=no-krb5\n-$(package)_config_opts+=no-libunbound\n-$(package)_config_opts+=no-md2\n-$(package)_config_opts+=no-mdc2\n-$(package)_config_opts+=no-rc4\n-$(package)_config_opts+=no-rc5\n-$(package)_config_opts+=no-rdrand\n-$(package)_config_opts+=no-rfc3779\n-$(package)_config_opts+=no-rsax\n-$(package)_config_opts+=no-sctp\n-$(package)_config_opts+=no-seed\n-$(package)_config_opts+=no-sha0\n-$(package)_config_opts+=no-shared\n-$(package)_config_opts+=no-ssl-trace\n-$(package)_config_opts+=no-ssl2\n-$(package)_config_opts+=no-ssl3\n-$(package)_config_opts+=no-static_engine\n-$(package)_config_opts+=no-store\n-$(package)_config_opts+=no-unit-test\n-$(package)_config_opts+=no-weak-ssl-ciphers\n-$(package)_config_opts+=no-whirlpool\n-$(package)_config_opts+=no-zlib\n-$(package)_config_opts+=no-zlib-dynamic\n-$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n-$(package)_config_opts_x86_64_linux=linux-x86_64\n-$(package)_config_opts_i686_linux=linux-generic32\n-$(package)_config_opts_arm_linux=linux-generic32\n-$(package)_config_opts_armv7l_linux=linux-generic32\n-$(package)_config_opts_aarch64_linux=linux-generic64\n-$(package)_config_opts_mipsel_linux=linux-generic32\n-$(package)_config_opts_mips_linux=linux-generic32\n-$(package)_config_opts_powerpc_linux=linux-generic32\n-$(package)_config_opts_riscv32_linux=linux-generic32\n-$(package)_config_opts_riscv64_linux=linux-generic64\n-$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n-$(package)_config_opts_x86_64_mingw32=mingw64\n-$(package)_config_opts_i686_mingw32=mingw\n-$(package)_config_opts_android=-fPIC\n-$(package)_config_opts_aarch64_android=linux-generic64\n-$(package)_config_opts_x86_64_android=linux-generic64\n-$(package)_config_opts_armv7a_android=linux-generic32\n-$(package)_config_opts_i686_android=linux-generic32\n-endef\n-\n-define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch && \\\n-  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n-  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n-endef\n-\n-define $(package)_config_cmds\n-  ./Configure $($(package)_config_opts)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -j1 build_crypto libcrypto.pc libssl.pc openssl.pc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf share bin etc\n-endef"
      },
      {
        "sha": "09f3187ac4b1038979c59a75bee8b9431341f996",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/648b2e3c3288ee0b83d4089d27fa7f84a73d118e/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/648b2e3c3288ee0b83d4089d27fa7f84a73d118e/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost openssl libevent\n+packages:=boost libevent\n \n qt_packages = qrencode zlib\n "
      },
      {
        "sha": "003099bdc20095d4050287d4457b8369b630fd62",
        "filename": "depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8983ee3e6dd8ab658bd2caf97c326cc53ea50818/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch?ref=8983ee3e6dd8ab658bd2caf97c326cc53ea50818",
        "patch": "@@ -1,17 +0,0 @@\n-diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c\n-index a38c758..d99edc2 100644\n---- a/crypto/ui/ui_openssl.c\n-+++ b/crypto/ui/ui_openssl.c\n-@@ -190,9 +190,9 @@\n- # undef  SGTTY\n- #endif\n- \n--#if defined(linux) && !defined(TERMIO)\n--# undef  TERMIOS\n--# define TERMIO\n-+#if defined(linux)\n-+# define TERMIOS\n-+# undef  TERMIO\n- # undef  SGTTY\n- #endif\n- "
      }
    ]
  },
  {
    "sha": "a4eb83961965347792e9ac75928aae359d5f7405",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNGViODM5NjE5NjUzNDc3OTJlOWFjNzU5MjhhYWUzNTlkNWY3NDA1",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T13:14:14Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:48Z"
      },
      "message": "doc: remove OpenSSL from build instructions and licensing info",
      "tree": {
        "sha": "b6493ff11b9987c71b79db0095e0ed5bf1f26bd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6493ff11b9987c71b79db0095e0ed5bf1f26bd1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4eb83961965347792e9ac75928aae359d5f7405",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3SoyAACgkQLuufXMCV\nJsHpaRAAt4wuYbJd30nCqE1z0ZeA7IiisXKSYBAZQKdmT9sQU8AcKTWSCZJ3k4Nb\nu+vopA9cyUXsW/WVHKOFKOi9Fx+J1+T6n8EdLreRmbUH3yJHNDZV3Oqg/STuoBaY\nryFM5nIrOcc6YIioM/jwGY5ZbSLZ7j2O84LiM3Y+u3mZLOPqgSI1BrsUFsE7X7pS\nNGTpYcmkSnnOxoZ4hjyBntXVR7zHMsTQkYkDAcbZkkX/FU4YP+8L52wJ4b61/8V+\nn9GQnapgAb+T3+A5McwtjU9LKzLvpU7ydpDXdqzH0t7JZK+J7ZYqZAO9rBBh3Swc\n0VoKloWUQ+J9iFg8bSRmZiL2YsyYfYRqF84rHtXjZWWIyXZq2r/dk8AUi61Ic3Zy\n9DjgHAZwR9AR3ZVAODnOyhTBvfE7vN/IxyQTsyiIHeaefhmzkPNswWFCAU/Rp4Qb\nkflDyofckXueQvn03ChWopjzQm7KBZiAZ6c/IeCvj2t6ILDMFqsvvAaRw5VRQTyM\nLB3IP1Amt0/fJi25xmwfqHsfvipXwZ2ppWQyl7YTGKxtsUuq3WOKRy2AO3g8qELT\nMqQ5G2Bqx5rLUswybbmO7fDZ5IVUtoYAzG1JzmVLvMDDMTfBmw1AP+jOX3TEm1ye\npUb+WcrribphQAinP9uxecB4nW1xr3A9jZGwnF5J6/6brj4ltsw=\n=fbKJ\n-----END PGP SIGNATURE-----",
        "payload": "tree b6493ff11b9987c71b79db0095e0ed5bf1f26bd1\nparent 648b2e3c3288ee0b83d4089d27fa7f84a73d118e\nauthor fanquake <fanquake@gmail.com> 1572095654 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085408 -0500\n\ndoc: remove OpenSSL from build instructions and licensing info\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4eb83961965347792e9ac75928aae359d5f7405",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4eb83961965347792e9ac75928aae359d5f7405",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4eb83961965347792e9ac75928aae359d5f7405/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/648b2e3c3288ee0b83d4089d27fa7f84a73d118e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/648b2e3c3288ee0b83d4089d27fa7f84a73d118e"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 5,
      "deletions": 31
    },
    "files": [
      {
        "sha": "704470cac8a25c8a9df958aeed694244aabe7846",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -12,7 +12,7 @@ Quick Start\n The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n \n ```\n-vcpkg install --triplet x64-windows-static boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl zeromq berkeleydb rapidcheck double-conversion\n+vcpkg install --triplet x64-windows-static boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent zeromq berkeleydb rapidcheck double-conversion\n py -3 build_msvc\\msvc-autogen.py\n msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n@@ -33,7 +33,6 @@ The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/d\n - Boost\n - DoubleConversion\n - libevent\n-- OpenSSL\n - Qt5\n - RapidCheck\n - ZeroMQ"
      },
      {
        "sha": "46b311b251c6f1af7b87a38c0c52be1ad337d183",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -84,5 +84,3 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n License\n ---------------------\n Distributed under the [MIT software license](/COPYING).\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "48316235049edffc07887fe49ee5c9e778451c75",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -11,7 +11,7 @@ This guide does not contain instructions for building the GUI.\n You will need the following dependencies, which can be installed as root via pkg:\n \n ```shell\n-pkg install autoconf automake boost-libs git gmake libevent libtool openssl pkgconf\n+pkg install autoconf automake boost-libs git gmake libevent libtool pkgconf\n \n git clone https://github.com/bitcoin/bitcoin.git\n ```"
      },
      {
        "sha": "e435798e95896f4cb8111142fe9f43678c045cfa",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config python qt libevent qrencode\n+brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode\n ```\n \n See [dependencies.md](dependencies.md) for a complete overview."
      },
      {
        "sha": "10c557569c05e0908bce3d032b22f0d3b5dbe0a5",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -127,7 +127,7 @@ built by default.\n \n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n "
      },
      {
        "sha": "bfb663866df52eb9e2e7b6cc9a26246c2cf9d29d",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -17,7 +17,6 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n | MiniUPnPc | [2.0.20180203](http://miniupnp.free.fr/files) |  | No |  |  |\n-| OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n | PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | Python (tests) |  | [3.5](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -113,7 +113,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -608,7 +608,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -114,7 +114,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -61,7 +61,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -581,7 +581,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "421768441e74c32acbada9bf962db593de0a8011",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4eb83961965347792e9ac75928aae359d5f7405/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4eb83961965347792e9ac75928aae359d5f7405/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a4eb83961965347792e9ac75928aae359d5f7405",
        "patch": "@@ -563,9 +563,7 @@ std::string LicenseInfo()\n            \"\\n\" +\n            \"\\n\" +\n            _(\"This is experimental software.\").translated + \"\\n\" +\n-           strprintf(_(\"Distributed under the MIT software license, see the accompanying file %s or %s\").translated, \"COPYING\", \"<https://opensource.org/licenses/MIT>\") + \"\\n\" +\n-           \"\\n\" +\n-           strprintf(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\").translated, \"<https://www.openssl.org>\") +\n+           strprintf(_(\"Distributed under the MIT software license, see the accompanying file %s or %s\").translated, \"COPYING\", \"<https://opensource.org/licenses/MIT>\") +\n            \"\\n\";\n }\n "
      }
    ]
  },
  {
    "sha": "397dbae070dca9a635ff3d1d61add09db004661e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTdkYmFlMDcwZGNhOWE2MzVmZjNkMWQ2MWFkZDA5ZGIwMDQ2NjFl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-10-26T13:16:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T13:56:48Z"
      },
      "message": "ci: remove OpenSSL installation",
      "tree": {
        "sha": "dfc43d14a7b19d8b23c05dc5f98a550be82144ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfc43d14a7b19d8b23c05dc5f98a550be82144ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397dbae070dca9a635ff3d1d61add09db004661e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3SoyAACgkQLuufXMCV\nJsFMEg//d+BZAUPy1usKjl7kvUCOTL7PeNlAGk1pSQ+zHru7T6cw+FTgSqM66iy0\nBsAnSQsPPtSCzvOAnqJXkLWHzMmUkoqriV28dolFoAwo7RzFfPcn9/f2AX7RsmN2\n0LgmwyEWdZQzAhTvA2vpJtiRzPXpaWkAfza7qyDtO6OoRYQ0NIWLh2y56VDPZmli\npYXw41xPLMqpTne/hMdSr7jOS2eWsHb5x8VVzyVLbgYOzce1OWkRrWwF1qyNpslK\nVZ96v/1p3M5k+3EpzYCn7t4DzGS10Eh8SHNHeXv+rQMxZiQW8o22FM6GqhU6mklz\n5rsKddMIOMgNRrsusoD8QwZJeBuKDMCQiqR8w0/3y3a4KytSqrx0Qfv28Wjgny4y\njWZYOGGvomi+26c54PdYbebnJu0q4YLWXAn4VUMhECl0QP8zN3z/LQNB/W9RRepk\n7XYQ4hnM5XlnLQzO2PJhQXfgOHabOgimDRrM+fhO0Src0PkvKdfxhw5RdLU74HiM\nKFNTnrpl7fRA88AmsKrbi2XWrxSo9OdllV2KSuUTBS4nD7w5kQOug5tBX7Bm0HYx\nR+3QKd9/3SJD+K5iJbs88a9QtePH9DrVFt/PsIP8Z/kvlSIF+lrEXYB2eLHE+SQw\nRG4DpJOKQXxBKKQf84REqlzE6oYYpgt1+aywliJQZp4dMD+XcYY=\n=8rXQ\n-----END PGP SIGNATURE-----",
        "payload": "tree dfc43d14a7b19d8b23c05dc5f98a550be82144ad\nparent a4eb83961965347792e9ac75928aae359d5f7405\nauthor fanquake <fanquake@gmail.com> 1572095815 -0400\ncommitter fanquake <fanquake@gmail.com> 1574085408 -0500\n\nci: remove OpenSSL installation\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397dbae070dca9a635ff3d1d61add09db004661e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/397dbae070dca9a635ff3d1d61add09db004661e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397dbae070dca9a635ff3d1d61add09db004661e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a4eb83961965347792e9ac75928aae359d5f7405",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4eb83961965347792e9ac75928aae359d5f7405",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a4eb83961965347792e9ac75928aae359d5f7405"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 2,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f4a3878ed8058bbc999a99a83c6873d82d5f3753",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/397dbae070dca9a635ff3d1d61add09db004661e/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/397dbae070dca9a635ff3d1d61add09db004661e/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=397dbae070dca9a635ff3d1d61add09db004661e",
        "patch": "@@ -16,7 +16,7 @@ task:\n   ccache_cache:\n     folder: \"/tmp/ccache_dir\"\n   install_script:\n-    - pkg install -y autoconf automake boost-libs git gmake libevent libtool openssl pkgconf python3 ccache\n+    - pkg install -y autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache\n     - ./contrib/install_db4.sh $(pwd)\n     - ccache --max-size=${CCACHE_SIZE}\n   configure_script:"
      },
      {
        "sha": "d63636259d1588377080b8e0304c147468f1b138",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/397dbae070dca9a635ff3d1d61add09db004661e/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/397dbae070dca9a635ff3d1d61add09db004661e/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=397dbae070dca9a635ff3d1d61add09db004661e",
        "patch": "@@ -1 +1 @@\n-berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl rapidcheck zeromq double-conversion\n\\ No newline at end of file\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      },
      {
        "sha": "e70a8a9ea9e89228e9698ce94f6c92c73dd44c0d",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/397dbae070dca9a635ff3d1d61add09db004661e/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/397dbae070dca9a635ff3d1d61add09db004661e/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=397dbae070dca9a635ff3d1d61add09db004661e",
        "patch": "@@ -25,8 +25,6 @@ if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n   done\n \n   export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n-  OPENSSL_PKG_CONFIG_PATH=\"/usr/local/opt/openssl@1.1/lib/pkgconfig\"\n-  export PKG_CONFIG_PATH=$OPENSSL_PKG_CONFIG_PATH:$PKG_CONFIG_PATH\n \n   ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n "
      }
    ]
  },
  {
    "sha": "e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNWEwYmVjZTZlODQ0MDJmY2IxZmU0ZjI1ZmQyNGRhMWQyMWVjMDc3",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T14:19:04Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T14:19:04Z"
      },
      "message": "doc: add OpenSSL removal to release-notes.md",
      "tree": {
        "sha": "fc13ae532de310c0b489404f8ca53f5f4279c770",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fc13ae532de310c0b489404f8ca53f5f4279c770"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3SqFgACgkQLuufXMCV\nJsHS+RAApTnbGpaAQuveRIBWelcI+oVWB8EAh3dRYMmqS93JiVm/whqoJaBF95Bs\ntRimuNdg3iEigDLS0dhMU4hak/s5o7PZuqMWpPwi6z18rFhKeks/7mSSQzKItBcf\no98ueszmFpfGi0LoQgTulBzAKe2H5+hBeSGKHrpx2sh75i8k9mAFt6CeQhPWPc8e\nMlcHvFeLU371qCqgWwHS6utAOyrhb96rghheB+Mejoid/uSE42sdaBjypke/O2Uu\nVXchw4wXRG2pQE/OYRj4g1hpFBnjnWUwQ8UDBVLWcXbaKmGElnpAWrpoWyx6FLpb\nAxOPIICR9wdjDhEwAp+228NETnLfVoK68loJYGTrcxqEYegDi3e5e3OH9EhG7mEa\n3LEJH8y2572xdFCGroOtpHYfQ16W6XdMMlcpapkAcyqWKOuVgGCMVy7+rDRMKWKg\nSIQTKLqsDV0tyCJLCh77M3pj4nI9Gj2CjBpi64vQkGFZCfqqI58TdJVOShGuZADA\nTHDRyLRKwtYFphaU0vmtgiWL8ZCtgfWB+aObxs1owXDdJpzQ7mgIUJg7tL1O1JO7\n4kG5rXB6O+kFk9TXJg3s1LTzp82pzlf/62EYyB9gqkW7TcdAsGQiwLTul5oQMECj\nWAPf8E3GvIUueszYKF7qIo34aQ2lvnIooG7XV8MvsG2cbFaGRa4=\n=dnGJ\n-----END PGP SIGNATURE-----",
        "payload": "tree fc13ae532de310c0b489404f8ca53f5f4279c770\nparent 397dbae070dca9a635ff3d1d61add09db004661e\nauthor fanquake <fanquake@gmail.com> 1574086744 -0500\ncommitter fanquake <fanquake@gmail.com> 1574086744 -0500\n\ndoc: add OpenSSL removal to release-notes.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "397dbae070dca9a635ff3d1d61add09db004661e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397dbae070dca9a635ff3d1d61add09db004661e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/397dbae070dca9a635ff3d1d61add09db004661e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "33a127e0d0c45334a5ff704c6de76f8958a80804",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
        "patch": "@@ -63,6 +63,12 @@ distribution provides binaries for the RISC-V platform.\n Notable changes\n ===============\n \n+Build System\n+------------\n+\n+- OpenSSL is no longer used by Bitcoin Core. The last usage of the library\n+was removed in #17265.\n+\n New RPCs\n --------\n "
      }
    ]
  },
  {
    "sha": "397c6d32c8f8a20a3605ef0d51d159adc21fd125",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTdjNmQzMmM4ZjhhMjBhMzYwNWVmMGQ1MWQxNTlhZGMyMWZkMTI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-18T14:35:04Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-18T14:35:07Z"
      },
      "message": "Merge #17503: doc: Remove bitness from bitcoin-qt help message and manpage\n\ne161bc74d24a381c313aecb950d3b8411e0ed19d doc: Remove bitness from bitcoin-qt help message and manpage (Wladimir J. van der Laan)\n\nPull request description:\n\n  Remove the `(64-bit)` from the bitcoin-qt help message.\n\n  Since removing the Windows 32-bit builds, it is no longer information that is often useful for troubleshooting. This never worked for other architectures than x86, and the only 32-bit x86 build left is the Linux one. Linux users tend to know what architecture they are using.\n\n  It also accidentally ends up in the bitcoin-qt manpage (if you happen to be generating them on a x86 machine), which gets checked in. See for example https://github.com/bitcoin/bitcoin/commit/1bc9988993ee84bc814e5a7f33cc90f670a19f6a#diff-e4b84be382c8ea33b83203ceb8c85296\n\nACKs for top commit:\n  practicalswift:\n    ACK e161bc74d24a381c313aecb950d3b8411e0ed19d -- rationale makes sense and diff looks correct :)\n  MarcoFalke:\n    Tested ACK e161bc74d24a381c313aecb950d3b8411e0ed19d \ud83d\udd2e\n\nTree-SHA512: d38754903252896dc86fac6c12ad6615d322c2744db7c02b18574a08c69e8876b2c905e1f09b324002236b111ee93479f89769c562e7b3b2e6eb2992d76464ef",
      "tree": {
        "sha": "023dda15033bf1c7c5c4cb5b0b1d69fc0d477cf2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/023dda15033bf1c7c5c4cb5b0b1d69fc0d477cf2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/397c6d32c8f8a20a3605ef0d51d159adc21fd125",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3SrBwACgkQ0upIUOdS\niyVLNA/9Esy1IrjQ6Hxn3odohL6XYQHwtLFRkdO8sxOBmF8dyn5eLaXxXilgOFbs\njUh08oGwHd16VADTDkeNJoYcM7PRO/BwzeHmaHtROThR4d1v1K1uLTaVzSIkGCiE\nd3QcDdiVZbuLdcDMLEtyflcSn4WQkduIT4cvUL1terYilJS8GbRP5Jroec+eq84o\nZmM9bE5fo66ygR4shvk/FocZO0w6tRKcARjzlsFhDT+M47+b22cimtZba8ZSgPk3\nZ8VDSekmMVy48ldO4+ts/sYi6hqbGmsPK5l9r19saEapMW65SX2bOOKjKHV8rhyh\n7ZW/BRTAAfQQQjbLtl7vmd5GEdZI4K0eDMVfhgLhZQqe/YrQHPW3Cw/tDR4RrHGG\nbqLBmzJf5rWGLuQU272W8w8tD2bv5wvdwU7NAOVygN0R6xPVmlGwqFr7NwfYKDfb\nsRymc7BJC6olLGXb/EL8mghMdK5aDy9Yk+o/YQbigaYLjj2eqwk8SygMXOezpdE1\nJ06GMVmTR5XHHkSWJg7yjSLAkCOBS8wc3GcQidao9wUjvTDZLGtNKPq1MAfAW9JF\nw0N5b2JemwRQXAyeSUywcAgeiRrXDbMuV8QodCBslcEwJrpMJXdQ8owzcEbja3TR\nhlVXf6WK1zXcvnbsOa9X5/V9H+VxWGsdnkVJcrTl6hUMxJtheHI=\n=4IIw\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIcDOQmeNOjrYvO2e2goCxSXvZBaB149wxpGSB4Wo8pVCP/wEHHfpTj4f88X\nm4+DsXPl54oI8QRd0qwd8AiI8/a9vmRL/wCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQiYHMvL3XBtpjhp0B\nAtXCjQjxBF3SrB7wCKnMRw6F1kjFAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQsPNAWJHxhVGX8C7hE5RPBwjxBF3S\nrB7wCGVd7XzwC0eNAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BDA+bbWe3PfD/OGcd7hCbkFCPEEXdKsHvAI1gS3B/Iq0DgAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 023dda15033bf1c7c5c4cb5b0b1d69fc0d477cf2\nparent 6fde676f647e3b43cf0f5b242a00896f361ea385\nparent e161bc74d24a381c313aecb950d3b8411e0ed19d\nauthor MarcoFalke <falke.marco@gmail.com> 1574087704 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574087707 -0500\n\nMerge #17503: doc: Remove bitness from bitcoin-qt help message and manpage\n\ne161bc74d24a381c313aecb950d3b8411e0ed19d doc: Remove bitness from bitcoin-qt help message and manpage (Wladimir J. van der Laan)\n\nPull request description:\n\n  Remove the `(64-bit)` from the bitcoin-qt help message.\n\n  Since removing the Windows 32-bit builds, it is no longer information that is often useful for troubleshooting. This never worked for other architectures than x86, and the only 32-bit x86 build left is the Linux one. Linux users tend to know what architecture they are using.\n\n  It also accidentally ends up in the bitcoin-qt manpage (if you happen to be generating them on a x86 machine), which gets checked in. See for example https://github.com/bitcoin/bitcoin/commit/1bc9988993ee84bc814e5a7f33cc90f670a19f6a#diff-e4b84be382c8ea33b83203ceb8c85296\n\nACKs for top commit:\n  practicalswift:\n    ACK e161bc74d24a381c313aecb950d3b8411e0ed19d -- rationale makes sense and diff looks correct :)\n  MarcoFalke:\n    Tested ACK e161bc74d24a381c313aecb950d3b8411e0ed19d \ud83d\udd2e\n\nTree-SHA512: d38754903252896dc86fac6c12ad6615d322c2744db7c02b18574a08c69e8876b2c905e1f09b324002236b111ee93479f89769c562e7b3b2e6eb2992d76464ef\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397c6d32c8f8a20a3605ef0d51d159adc21fd125",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/397c6d32c8f8a20a3605ef0d51d159adc21fd125",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397c6d32c8f8a20a3605ef0d51d159adc21fd125/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fde676f647e3b43cf0f5b242a00896f361ea385",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fde676f647e3b43cf0f5b242a00896f361ea385",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fde676f647e3b43cf0f5b242a00896f361ea385"
      },
      {
        "sha": "e161bc74d24a381c313aecb950d3b8411e0ed19d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e161bc74d24a381c313aecb950d3b8411e0ed19d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e161bc74d24a381c313aecb950d3b8411e0ed19d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 0,
      "deletions": 8
    },
    "files": [
      {
        "sha": "220e41b383e33b3db2ddcc17b60bd951400efbb7",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/397c6d32c8f8a20a3605ef0d51d159adc21fd125/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/397c6d32c8f8a20a3605ef0d51d159adc21fd125/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=397c6d32c8f8a20a3605ef0d51d159adc21fd125",
        "patch": "@@ -34,14 +34,6 @@ HelpMessageDialog::HelpMessageDialog(interfaces::Node& node, QWidget *parent, bo\n     ui->setupUi(this);\n \n     QString version = QString{PACKAGE_NAME} + \" \" + tr(\"version\") + \" \" + QString::fromStdString(FormatFullVersion());\n-    /* On x86 add a bit specifier to the version so that users can distinguish between\n-     * 32 and 64 bit builds. On other architectures, 32/64 bit may be more ambiguous.\n-     */\n-#if defined(__x86_64__)\n-    version += \" \" + tr(\"(%1-bit)\").arg(64);\n-#elif defined(__i386__ )\n-    version += \" \" + tr(\"(%1-bit)\").arg(32);\n-#endif\n \n     if (about)\n     {"
      }
    ]
  },
  {
    "sha": "461e547877da0c04db69e067c923cc4540aab03a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjFlNTQ3ODc3ZGEwYzA0ZGI2OWUwNjdjOTIzY2M0NTQwYWFiMDNh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T14:58:10Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T15:22:08Z"
      },
      "message": "doc: correct random.h docs after #17270",
      "tree": {
        "sha": "9fc7a9230c7dac91475ac98b91f614f6d4a9c1f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fc7a9230c7dac91475ac98b91f614f6d4a9c1f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/461e547877da0c04db69e067c923cc4540aab03a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3StyMACgkQLuufXMCV\nJsGvVhAAradxTXo6vhrvwNrwYRtMETrNbuj+mr4zYL1gWs2OnHLH1m7gP6Vekja/\nVJLkM9D8ghSm2Ah3KUVl9ITPLqdHuznT/tiyYsrCk+Xt2G9e3lo0BqTHgsueO98Q\nk5MS+pMJd3Sz1m5MTKYub4f9dXNOc5oTJVlH3Fu0vpK3OZ1peyCiR731nUvC1SRm\nmfUMbJO4GDxRVa1n0iNhAUWrinqcEmOzk53sNT/yqGAnmwe2oCvIULxcQpettqD2\nHo3V9z/6W+8CT2Ltg9EAU26vgtzGpvmIiUkMqr8yaR7tJ78lOPv1ASiYf8pASi2e\n8RnKnnbSr57u3DKSIB3iHt7PgZiAyYqvEsRa5tA2d3xPDoZsR4HeAiJkYuzdEZeH\nd241Hy920N+91Mqw4JysmZVPqoC2kojjEUjAe5IFo68WHa0LR2C232Dq5YqSMUpf\nQumzdjPm1IRlZ1RNSeurnDoch0atjRC2AX1nQplJMy0JZ+hIJSWLE1NPgV12yEAW\nATuN2lEEqQOCXhhJ8MLFAv09nwKxFkhgVi7a+wWrmY3uCKcZHHGREWTs+tkU892O\nRGGFKQXD1tCFF45ND3udmhPYyzNh6jnbRtmtKQAT8eJN06m6/2X7lQ22g0nIE3/D\nPbpEQPq4OHTsw5zg7J7g8jCVUq360nOZGEw6WnSzf+NqSCBrRbQ=\n=FXWV\n-----END PGP SIGNATURE-----",
        "payload": "tree 9fc7a9230c7dac91475ac98b91f614f6d4a9c1f5\nparent 6fde676f647e3b43cf0f5b242a00896f361ea385\nauthor fanquake <fanquake@gmail.com> 1574089090 -0500\ncommitter fanquake <fanquake@gmail.com> 1574090528 -0500\n\ndoc: correct random.h docs after #17270\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461e547877da0c04db69e067c923cc4540aab03a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/461e547877da0c04db69e067c923cc4540aab03a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461e547877da0c04db69e067c923cc4540aab03a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fde676f647e3b43cf0f5b242a00896f361ea385",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fde676f647e3b43cf0f5b242a00896f361ea385",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fde676f647e3b43cf0f5b242a00896f361ea385"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "c78a34ea45e89b729b95533a94c4ca3463d051e3",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461e547877da0c04db69e067c923cc4540aab03a/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461e547877da0c04db69e067c923cc4540aab03a/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=461e547877da0c04db69e067c923cc4540aab03a",
        "patch": "@@ -182,7 +182,7 @@ static uint64_t GetRdSeed() noexcept\n /* Access to other hardware random number generators could be added here later,\n  * assuming it is sufficiently fast (in the order of a few hundred CPU cycles).\n  * Slower sources should probably be invoked separately, and/or only from\n- * RandAddSeedSleep (which is called during idle background operation).\n+ * RandAddPeriodic (which is called once a minute).\n  */\n static void InitHardwareRand() {}\n static void ReportHardwareRand() {}"
      },
      {
        "sha": "76b3493c5dcf5f0406b725ea4f3ae971b4e173be",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/461e547877da0c04db69e067c923cc4540aab03a/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/461e547877da0c04db69e067c923cc4540aab03a/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=461e547877da0c04db69e067c923cc4540aab03a",
        "patch": "@@ -41,17 +41,17 @@\n  *   These entropy sources are slower, but designed to make sure the RNG state contains\n  *   fresh data that is unpredictable to attackers.\n  *\n- * - RandAddSeedSleep() seeds everything that fast seeding includes, but additionally:\n- *   - A high-precision timestamp before and after sleeping 1ms.\n- *   - (On Windows) Once every 10 minutes, performance monitoring data from the OS.\n- -   - Once every minute, strengthen the entropy for 10 ms using repeated SHA512.\n- *   These just exploit the fact the system is idle to improve the quality of the RNG\n- *   slightly.\n+ * - RandAddPeriodic() seeds everything that fast seeding includes, but additionally:\n+ *   - A high-precision timestamp\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Strengthen the entropy for 10 ms using repeated SHA512.\n+ *   This is run once every minute.\n  *\n  * On first use of the RNG (regardless of what function is called first), all entropy\n  * sources used in the 'slow' seeder are included, but also:\n  * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - (On Windows) Performance monitoring data from the OS.\n+ * - Dynamic environment data (performance monitoring, ...)\n+ * - Static environment data\n  * - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and"
      }
    ]
  },
  {
    "sha": "55b2cb199c276781b6daa5438af2da57dea3ac52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWIyY2IxOTljMjc2NzgxYjZkYWE1NDM4YWYyZGE1N2RlYTNhYzUy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T15:21:28Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T15:22:17Z"
      },
      "message": "random: mark RandAddPeriodic and SeedPeriodic as noexcept\n\nThe usage of MilliSleep() in SeedPeriodic (previously SeedSleep) was\nremoved in #17270, meaning it, and its users can now be marked noexcept.",
      "tree": {
        "sha": "9569dd0449461ac6ffa5cd3b05d3bf5a07b0cc43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9569dd0449461ac6ffa5cd3b05d3bf5a07b0cc43"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55b2cb199c276781b6daa5438af2da57dea3ac52",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3StykACgkQLuufXMCV\nJsEkQw//YQ9iK5MVMuu+wIXqpnfmPaRFCOlrIy2exZDuf4aTAHXpRsxKBS2UcCuj\nkNRZfuwcP8ux9nkf2KovWB4iQMp+jBG2DixSlOuT1t8MHCj8ULml9sbYT6gRsrGw\nkOBdvuUVoFVS7vo/FqLS/D8DV4edrSx43dnR+t3gKnDb/unaEm0BUN8titQaErIP\nz5aJa8JQFcVab701gLsefqIoIbGM67Qt/80XzR8gNb0sjisbuVZRmkv7l2TQCUBU\nC6rpmBTmTZOYQyTD7o2MTYS69NLOQ7Zoru5s5Q9QpXUTNWGw9PccRqtJBaVRhdTt\n4QHO5T6cwszKoBe4Md9L9WhA7PVh3q29znjSY7sW5H4+GAdTCbENAqadTwfa+Y7q\nPWRP6hF3KoxhPmMloSyG6U/StGUFSxclBO/ZikCy8Fu115ePo77wLI6RlrMUQeQR\nsEm5UwTggCsWacjhn9+7sgMJi+5z6bLgwDgerFBrcNO4ZjSnEVYte46vPTlRUVH7\ns/s/YwaoH+VYf1wwz0LOs1DczIWEnId0JKiLYsNOy13Fze7xcU3te7J9qaCi5FB1\np/NiWJQTFJzcWYEdvBGv1ezGULyWF3g+0I9oxK7E9Ju2TFW4qBTFyuYoplRV0hMs\n3ZnhEweLEzs9F/qA/yQtCJPNmiywFqnaxImqBZJKyFtOhIyZ4Aw=\n=kiFS\n-----END PGP SIGNATURE-----",
        "payload": "tree 9569dd0449461ac6ffa5cd3b05d3bf5a07b0cc43\nparent 461e547877da0c04db69e067c923cc4540aab03a\nauthor fanquake <fanquake@gmail.com> 1574090488 -0500\ncommitter fanquake <fanquake@gmail.com> 1574090537 -0500\n\nrandom: mark RandAddPeriodic and SeedPeriodic as noexcept\n\nThe usage of MilliSleep() in SeedPeriodic (previously SeedSleep) was\nremoved in #17270, meaning it, and its users can now be marked noexcept.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55b2cb199c276781b6daa5438af2da57dea3ac52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55b2cb199c276781b6daa5438af2da57dea3ac52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55b2cb199c276781b6daa5438af2da57dea3ac52/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "461e547877da0c04db69e067c923cc4540aab03a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/461e547877da0c04db69e067c923cc4540aab03a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/461e547877da0c04db69e067c923cc4540aab03a"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 4,
      "deletions": 14
    },
    "files": [
      {
        "sha": "8c33e1260bd2960f17fe729990cd07ed3a6fceb9",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55b2cb199c276781b6daa5438af2da57dea3ac52/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55b2cb199c276781b6daa5438af2da57dea3ac52/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=55b2cb199c276781b6daa5438af2da57dea3ac52",
        "patch": "@@ -450,17 +450,7 @@ void LockingCallbackOpenSSL(int mode, int i, const char* file, int line) NO_THRE\n \n /* A note on the use of noexcept in the seeding functions below:\n  *\n- * None of the RNG code should ever throw any exception, with the sole exception\n- * of MilliSleep in SeedSleep, which can (and does) support interruptions which\n- * cause a boost::thread_interrupted to be thrown.\n- *\n- * This means that SeedSleep, and all functions that invoke it are throwing.\n- * However, we know that GetRandBytes() and GetStrongRandBytes() never trigger\n- * this sleeping logic, so they are noexcept. The same is true for all the\n- * GetRand*() functions that use GetRandBytes() indirectly.\n- *\n- * TODO: After moving away from interruptible boost-based thread management,\n- * everything can become noexcept here.\n+ * None of the RNG code should ever throw any exception.\n  */\n \n static void SeedTimestamp(CSHA512& hasher) noexcept\n@@ -516,7 +506,7 @@ static void SeedStrengthen(CSHA512& hasher, RNGState& rng, int microseconds) noe\n     Strengthen(strengthen_seed, microseconds, hasher);\n }\n \n-static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n+static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n {\n     // Everything that the 'fast' seeder includes\n     SeedFast(hasher);\n@@ -598,7 +588,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n-void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n+void RandAddPeriodic() noexcept { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n bool g_mock_deterministic_tests{false};\n "
      },
      {
        "sha": "8af616f8ea4b3013480f50e3f8a51b18220dce8b",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55b2cb199c276781b6daa5438af2da57dea3ac52/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55b2cb199c276781b6daa5438af2da57dea3ac52/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=55b2cb199c276781b6daa5438af2da57dea3ac52",
        "patch": "@@ -88,7 +88,7 @@ void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic();\n+void RandAddPeriodic() noexcept;\n \n /**\n  * Fast randomness source. This is seeded once with secure random data, but"
      }
    ]
  },
  {
    "sha": "49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWY0YzdmMDY5OWU1ZTE5YWM2ZTQxZWY1YjYwNzM5MmRkN2EyOTgz",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-14T11:49:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-18T16:52:56Z"
      },
      "message": "tests: Add fuzzing harness for various PSBT related functions",
      "tree": {
        "sha": "45ae6b68b3072d50390446188d4f715d7bb09302",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45ae6b68b3072d50390446188d4f715d7bb09302"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08e29473126d5cc4df6d2b3f368c6f6f641c0bd8"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "df49cc1f5e8eea797a54bb0df16eebcafff8a6a9",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "patch": "@@ -23,6 +23,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/parse_iso8601 \\\n+  test/fuzz/psbt \\\n   test/fuzz/script \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n@@ -276,6 +277,12 @@ test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_psbt_SOURCES = $(FUZZ_SUITE) test/fuzz/psbt.cpp\n+test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_script_SOURCES = $(FUZZ_SUITE) test/fuzz/script.cpp\n test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "1ce28f9a6dfc8ee2ea774c1a87c011198ed7a246",
        "filename": "src/test/fuzz/psbt.cpp",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/test/fuzz/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983/src/test/fuzz/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/psbt.cpp?ref=49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "patch": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+\n+#include <node/psbt.h>\n+#include <optional.h>\n+#include <psbt.h>\n+#include <pubkey.h>\n+#include <script/script.h>\n+#include <streams.h>\n+#include <util/memory.h>\n+#include <version.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    PartiallySignedTransaction psbt_mut;\n+    const std::string raw_psbt{buffer.begin(), buffer.end()};\n+    std::string error;\n+    if (!DecodeRawPSBT(psbt_mut, raw_psbt, error)) {\n+        return;\n+    }\n+    const PartiallySignedTransaction psbt = psbt_mut;\n+\n+    const PSBTAnalysis analysis = AnalyzePSBT(psbt);\n+    (void)PSBTRoleName(analysis.next);\n+    for (const PSBTInputAnalysis& input_analysis : analysis.inputs) {\n+        (void)PSBTRoleName(input_analysis.next);\n+    }\n+\n+    (void)psbt.IsNull();\n+    (void)psbt.IsSane();\n+\n+    Optional<CMutableTransaction> tx = psbt.tx;\n+    if (tx) {\n+        const CMutableTransaction& mtx = *tx;\n+        const PartiallySignedTransaction psbt_from_tx{mtx};\n+    }\n+\n+    for (const PSBTInput& input : psbt.inputs) {\n+        (void)PSBTInputSigned(input);\n+        (void)input.IsNull();\n+        (void)input.IsSane();\n+    }\n+\n+    for (const PSBTOutput& output : psbt.outputs) {\n+        (void)output.IsNull();\n+    }\n+\n+    for (size_t i = 0; i < psbt.tx->vin.size(); ++i) {\n+        CTxOut tx_out;\n+        if (psbt.GetInputUTXO(tx_out, i)) {\n+            (void)tx_out.IsNull();\n+            (void)tx_out.ToString();\n+        }\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)FinalizePSBT(psbt_mut);\n+\n+    psbt_mut = psbt;\n+    CMutableTransaction result;\n+    if (FinalizeAndExtractPSBT(psbt_mut, result)) {\n+        const PartiallySignedTransaction psbt_from_tx{result};\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)psbt_mut.Merge(psbt);\n+}"
      }
    ]
  },
  {
    "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMDUyMTMwMmY5MGU0ODU2YTc1MTY4NjdiMzJhNDU3NmZhNmQ5OGIz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-18T17:17:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-18T17:17:08Z"
      },
      "message": "Merge #17136: tests: Add fuzzing harness for various PSBT related functions\n\n49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 tests: Add fuzzing harness for various PSBT related functions (practicalswift)\n\nPull request description:\n\n  Add fuzzing harness for various PSBT related functions.\n\n  **Testing this PR**\n\n  Run:\n\n  ```\n  $ CC=clang CXX=clang++ ./configure --enable-fuzz \\\n        --with-sanitizers=address,fuzzer,undefined\n  $ make\n  $ src/test/fuzz/psbt\n  ```\n\nACKs for top commit:\n  MarcoFalke:\n    re-ACK 49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 \ud83d\udc1f\n\nTree-SHA512: 4cebe62bd8c244ee40a43e829f5bd175ab40e1dfbbab1affb1529374858225820d6c9fa9ba45862bf56c1522845422fd96d620cedbdec52a67ac1449dec4e1b2",
      "tree": {
        "sha": "e986f02858c30b832f41dee6dfe148ebbd487a6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e986f02858c30b832f41dee6dfe148ebbd487a6b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3S0hUACgkQ0upIUOdS\niyUNJBAAgF16dx1Bouf9VhNfn5mPQoPHQHl6vVR+XJidtINRpqiDqgYBYaGkV0Py\nGkxvvcxn5G7poOzAlxk7uvZ98Qw80gpB6DQmFI+DO0k6mcQrUPotJ+YseiiCphSq\nhw5tsGlgQfFzpLMlIDqcIBFhNjBahE9R4FN+lrn6PKWpWPgEOZl7LwonIyjWr5/2\nGTHvyQWli1hvye/onumwJ3HFll21SBAf4zTMLHLXqwPlRchQERO5xbGcoNzBLssO\n/Wsn0ArIUNF6sxrX+LnzUJz7h235Z04QOwpIL4llSqaBQqnSdR1zKBAnqHGJMEuZ\n4RiSKX77h+78ufCRq0Nop9C/WO7AiKCnL2SpkADby7J/Jj55Dm0K3ZYLIhxOqGqA\n9L6Uee7s5fkJ/F6c+M5iF3YgF7MOk8i4op0UfeFMd2v6Sahdt46HpBBh1Czj3Rp6\nBMuBgPNDLYb5oZ6f563QikCndFpAM0317DPmlDHJ2euMfHgIfOJMtb1DAiONKpXc\nFrWnEyOJku/yXddcer35L5/juKoe4RO8aFPNVuiB6r8xGHJrdHbotIgO5+5I/xIH\nAasjX7vKDpZ5u/DZ0mPnMfrqwgCeVYL0VhqsDiuqLpk2snRrOjIw1PffpSGiVJpA\nvcnc23IiR/soaDAPXULMKv3FTNvh1Bng2TnH9M7+HdVhVo9yJgg=\n=vFaq\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMvknS1VHo0GxMnOH+uJcp+Cyk0l7cbRvl5UJVENis8oCP/wEBggSgDnUhsM\nQf+siPAnm3QI8SACD5QqarwXuBp85+xvYtvkfZCezbiVYeVi+7JwWT15SgjxBF3S\n0hbwCHtHRcWotoClAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BAiA+I9lbOrpKRQA4K35rjaCPAgjTFkgd+q\nW4Sg4O28WDxufdchv9+pjU3ZGmGy7e8PBdoI8QRd0tIX8Ai2wl7Y/nxnkwCD3+MN\nLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEN7vl2P4\nRVopN+Gg04C0IogI8SDa1dtOkZl5ZOWxf86F0RlVSM1JFFI+tB9PSTGGqDsUDQjx\nBF3S0hfwCOfMMXLY0DuEAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDs+/3HNtcue+5B1kbe9Ks/CPEg+nBEUyKaO9eR\n/NxGjEoPwHxtVoUTcSdtkWcKd5g3HbgI8QRd0tIX8AiTQb7rbcIqSwCD3+MNLvkM\njiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e986f02858c30b832f41dee6dfe148ebbd487a6b\nparent 397c6d32c8f8a20a3605ef0d51d159adc21fd125\nparent 49f4c7f0699e5e19ac6e41ef5b607392dd7a2983\nauthor MarcoFalke <falke.marco@gmail.com> 1574097421 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574097428 -0500\n\nMerge #17136: tests: Add fuzzing harness for various PSBT related functions\n\n49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 tests: Add fuzzing harness for various PSBT related functions (practicalswift)\n\nPull request description:\n\n  Add fuzzing harness for various PSBT related functions.\n\n  **Testing this PR**\n\n  Run:\n\n  ```\n  $ CC=clang CXX=clang++ ./configure --enable-fuzz \\\n        --with-sanitizers=address,fuzzer,undefined\n  $ make\n  $ src/test/fuzz/psbt\n  ```\n\nACKs for top commit:\n  MarcoFalke:\n    re-ACK 49f4c7f0699e5e19ac6e41ef5b607392dd7a2983 \ud83d\udc1f\n\nTree-SHA512: 4cebe62bd8c244ee40a43e829f5bd175ab40e1dfbbab1affb1529374858225820d6c9fa9ba45862bf56c1522845422fd96d620cedbdec52a67ac1449dec4e1b2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "397c6d32c8f8a20a3605ef0d51d159adc21fd125",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/397c6d32c8f8a20a3605ef0d51d159adc21fd125",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/397c6d32c8f8a20a3605ef0d51d159adc21fd125"
      },
      {
        "sha": "49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49f4c7f0699e5e19ac6e41ef5b607392dd7a2983"
      }
    ],
    "stats": {
      "total": 86,
      "additions": 86,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c5353c65543400a0922d60e5630bd5f184a74220",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30521302f90e4856a7516867b32a4576fa6d98b3/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30521302f90e4856a7516867b32a4576fa6d98b3/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=30521302f90e4856a7516867b32a4576fa6d98b3",
        "patch": "@@ -24,6 +24,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n   test/fuzz/parse_iso8601 \\\n+  test/fuzz/psbt \\\n   test/fuzz/script \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n@@ -293,6 +294,12 @@ test_fuzz_parse_iso8601_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_parse_iso8601_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_parse_iso8601_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_psbt_SOURCES = $(FUZZ_SUITE) test/fuzz/psbt.cpp\n+test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n test_fuzz_script_SOURCES = $(FUZZ_SUITE) test/fuzz/script.cpp\n test_fuzz_script_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_script_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)"
      },
      {
        "sha": "1ce28f9a6dfc8ee2ea774c1a87c011198ed7a246",
        "filename": "src/test/fuzz/psbt.cpp",
        "status": "added",
        "additions": 79,
        "deletions": 0,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30521302f90e4856a7516867b32a4576fa6d98b3/src/test/fuzz/psbt.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30521302f90e4856a7516867b32a4576fa6d98b3/src/test/fuzz/psbt.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/psbt.cpp?ref=30521302f90e4856a7516867b32a4576fa6d98b3",
        "patch": "@@ -0,0 +1,79 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/fuzz.h>\n+\n+#include <node/psbt.h>\n+#include <optional.h>\n+#include <psbt.h>\n+#include <pubkey.h>\n+#include <script/script.h>\n+#include <streams.h>\n+#include <util/memory.h>\n+#include <version.h>\n+\n+#include <cstdint>\n+#include <string>\n+#include <vector>\n+\n+void initialize()\n+{\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n+}\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    PartiallySignedTransaction psbt_mut;\n+    const std::string raw_psbt{buffer.begin(), buffer.end()};\n+    std::string error;\n+    if (!DecodeRawPSBT(psbt_mut, raw_psbt, error)) {\n+        return;\n+    }\n+    const PartiallySignedTransaction psbt = psbt_mut;\n+\n+    const PSBTAnalysis analysis = AnalyzePSBT(psbt);\n+    (void)PSBTRoleName(analysis.next);\n+    for (const PSBTInputAnalysis& input_analysis : analysis.inputs) {\n+        (void)PSBTRoleName(input_analysis.next);\n+    }\n+\n+    (void)psbt.IsNull();\n+    (void)psbt.IsSane();\n+\n+    Optional<CMutableTransaction> tx = psbt.tx;\n+    if (tx) {\n+        const CMutableTransaction& mtx = *tx;\n+        const PartiallySignedTransaction psbt_from_tx{mtx};\n+    }\n+\n+    for (const PSBTInput& input : psbt.inputs) {\n+        (void)PSBTInputSigned(input);\n+        (void)input.IsNull();\n+        (void)input.IsSane();\n+    }\n+\n+    for (const PSBTOutput& output : psbt.outputs) {\n+        (void)output.IsNull();\n+    }\n+\n+    for (size_t i = 0; i < psbt.tx->vin.size(); ++i) {\n+        CTxOut tx_out;\n+        if (psbt.GetInputUTXO(tx_out, i)) {\n+            (void)tx_out.IsNull();\n+            (void)tx_out.ToString();\n+        }\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)FinalizePSBT(psbt_mut);\n+\n+    psbt_mut = psbt;\n+    CMutableTransaction result;\n+    if (FinalizeAndExtractPSBT(psbt_mut, result)) {\n+        const PartiallySignedTransaction psbt_from_tx{result};\n+    }\n+\n+    psbt_mut = psbt;\n+    (void)psbt_mut.Merge(psbt);\n+}"
      }
    ]
  },
  {
    "sha": "4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjBjNzE4ZjhmNDhjNjc4Y2JlNDU3NWU5YTljZjllNjJhMzBmMGRh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-18T19:56:52Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-18T20:28:15Z"
      },
      "message": "Accumulate result UniValue in SignTransaction\n\nSignTransaction will be called multiple times in the future. Pass\nit a result UniValue so that it can accumulate the results of multiple\nSignTransaction passes.",
      "tree": {
        "sha": "572d2fd66b58da28d4adab0f32adefdf1b21ae15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/572d2fd66b58da28d4adab0f32adefdf1b21ae15"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc38bb9a6036d73f507e66a2f588547f3f17e4b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc38bb9a6036d73f507e66a2f588547f3f17e4b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc38bb9a6036d73f507e66a2f588547f3f17e4b1"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "6f24caee21adf0ab7b58ee5dc564c65cb4a28d8c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "patch": "@@ -763,7 +763,9 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n     // Parse the prevtxs array\n     ParsePrevouts(request.params[2], &keystore, coins);\n \n-    return SignTransaction(mtx, &keystore, coins, request.params[3]);\n+    UniValue result(UniValue::VOBJ);\n+    SignTransaction(mtx, &keystore, coins, request.params[3], result);\n+    return result;\n }\n \n static UniValue sendrawtransaction(const JSONRPCRequest& request)"
      },
      {
        "sha": "40334883c5970c01ccd9cfc6b7973c3399305220",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "patch": "@@ -268,7 +268,7 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n     }\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType)\n+void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result)\n {\n     int nHashType = ParseSighashString(hashType);\n \n@@ -319,12 +319,12 @@ UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keysto\n     }\n     bool fComplete = vErrors.empty();\n \n-    UniValue result(UniValue::VOBJ);\n     result.pushKV(\"hex\", EncodeHexTx(CTransaction(mtx)));\n     result.pushKV(\"complete\", fComplete);\n     if (!vErrors.empty()) {\n+        if (result.exists(\"errors\")) {\n+            vErrors.push_backV(result[\"errors\"].getValues());\n+        }\n         result.pushKV(\"errors\", vErrors);\n     }\n-\n-    return result;\n }"
      },
      {
        "sha": "0b7712b83ccce6912b6843e1b2de49ff428d2abd",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "patch": "@@ -21,9 +21,9 @@ class SigningProvider;\n  * @param  keystore      Temporary keystore containing signing keys\n  * @param  coins         Map of unspent outputs\n  * @param  hashType      The signature hash type\n- * @returns JSON object with details of signed transaction\n+ * @param result         JSON object where signed transaction results accumulate\n  */\n-UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType);\n+void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n \n /**\n   * Parse a prevtxs UniValue array and get the map of coins from it"
      },
      {
        "sha": "939e1fddfb56e8f580541a03255096c0d4716c65",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "patch": "@@ -3281,7 +3281,9 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     // Parse the prevtxs array\n     ParsePrevouts(request.params[1], nullptr, coins);\n \n-    return SignTransaction(mtx, &*pwallet->GetLegacyScriptPubKeyMan(), coins, request.params[2]);\n+    UniValue result(UniValue::VOBJ);\n+    SignTransaction(mtx, &*pwallet->GetLegacyScriptPubKeyMan(), coins, request.params[2], result);\n+    return result;\n }\n \n static UniValue bumpfee(const JSONRPCRequest& request)"
      }
    ]
  },
  {
    "sha": "d0dab897afaac0a18aa47d3ce673a4a43a69178a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMGRhYjg5N2FmYWFjMGExOGFhNDdkM2NlNjczYTRhNDNhNjkxNzhh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-18T20:42:01Z"
      },
      "message": "Refactor: Require scriptPubKey to get wallet SigningProvider\n\nEasier to review ignoring whitespace:\n\n    git log -p -n1 -w\n\nThis commit does not change behavior. It passes new CScript arguments to\nsigning functions, but the arguments aren't currently used.",
      "tree": {
        "sha": "1a943d1084bb9fb2d9c5a18aa0d48726540c11f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a943d1084bb9fb2d9c5a18aa0d48726540c11f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d0dab897afaac0a18aa47d3ce673a4a43a69178a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da"
      }
    ],
    "stats": {
      "total": 178,
      "additions": 127,
      "deletions": 51
    },
    "files": [
      {
        "sha": "f25ac5df0b9481a8416f9076c796a8b074adb284",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -117,8 +117,22 @@ class WalletImpl : public Wallet\n         std::string error;\n         return m_wallet->GetNewDestination(type, label, dest, error);\n     }\n-    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetPubKey(address, pub_key); }\n-    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetKey(address, key); }\n+    bool getPubKey(const CScript& script, const CKeyID& address, CPubKey& pub_key) override\n+    {\n+        const SigningProvider* provider = m_wallet->GetSigningProvider(script);\n+        if (provider) {\n+            return provider->GetPubKey(address, pub_key);\n+        }\n+        return false;\n+    }\n+    bool getPrivKey(const CScript& script, const CKeyID& address, CKey& key) override\n+    {\n+        const SigningProvider* provider = m_wallet->GetSigningProvider(script);\n+        if (provider) {\n+            return provider->GetKey(address, key);\n+        }\n+        return false;\n+    }\n     bool isSpendable(const CTxDestination& dest) override { return m_wallet->IsMine(dest) & ISMINE_SPENDABLE; }\n     bool haveWatchOnly() override\n     {"
      },
      {
        "sha": "b7cf9f2111b7acbf03165ddee27b759cda91693e",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -81,10 +81,10 @@ class Wallet\n     virtual bool getNewDestination(const OutputType type, const std::string label, CTxDestination& dest) = 0;\n \n     //! Get public key.\n-    virtual bool getPubKey(const CKeyID& address, CPubKey& pub_key) = 0;\n+    virtual bool getPubKey(const CScript& script, const CKeyID& address, CPubKey& pub_key) = 0;\n \n     //! Get private key.\n-    virtual bool getPrivKey(const CKeyID& address, CKey& key) = 0;\n+    virtual bool getPrivKey(const CScript& script, const CKeyID& address, CKey& key) = 0;\n \n     //! Return whether wallet has private key.\n     virtual bool isSpendable(const CTxDestination& dest) = 0;"
      },
      {
        "sha": "3302dde4ed1431c5997ae60e16dc2b9aa0fa1fa5",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -468,7 +468,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             CPubKey pubkey;\n             PKHash *pkhash = boost::get<PKHash>(&address);\n-            if (pkhash && model->wallet().getPubKey(CKeyID(*pkhash), pubkey))\n+            if (pkhash && model->wallet().getPubKey(out.txout.scriptPubKey, CKeyID(*pkhash), pubkey))\n             {\n                 nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n             }"
      },
      {
        "sha": "9d250bcb8334d3e4cf476a469eabe55f159369cf",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -136,7 +136,7 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n     }\n \n     CKey key;\n-    if (!model->wallet().getPrivKey(CKeyID(*pkhash), key))\n+    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n     {\n         ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n         ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));"
      },
      {
        "sha": "96c1ad8d3f818891de090ae51bc23be21932d32d",
        "filename": "src/wallet/psbtwallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 2,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/psbtwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/psbtwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/psbtwallet.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -39,12 +39,35 @@ TransactionError FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& ps\n             return TransactionError::SIGHASH_MISMATCH;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(pwallet->GetSigningProvider(), !sign, !bip32derivs), psbtx, i, sighash_type);\n+        // Get the scriptPubKey to know which SigningProvider to use\n+        CScript script;\n+        if (!input.witness_utxo.IsNull()) {\n+            script = input.witness_utxo.scriptPubKey;\n+        } else if (input.non_witness_utxo) {\n+            script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n+        } else {\n+            // There's no UTXO so we can just skip this now\n+            complete = false;\n+            continue;\n+        }\n+        SignatureData sigdata;\n+        input.FillSignatureData(sigdata);\n+        const SigningProvider* provider = pwallet->GetSigningProvider(script, sigdata);\n+        if (!provider) {\n+            complete = false;\n+            continue;\n+        }\n+\n+        complete &= SignPSBTInput(HidingSigningProvider(provider, !sign, !bip32derivs), psbtx, i, sighash_type);\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n     for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n-        UpdatePSBTOutput(HidingSigningProvider(pwallet->GetSigningProvider(), true, !bip32derivs), psbtx, i);\n+        const CTxOut& out = psbtx.tx->vout.at(i);\n+        const SigningProvider* provider = pwallet->GetSigningProvider(out.scriptPubKey);\n+        if (provider) {\n+            UpdatePSBTOutput(HidingSigningProvider(provider, true, !bip32derivs), psbtx, i);\n+        }\n     }\n \n     return TransactionError::OK;"
      },
      {
        "sha": "a3611a4ae568d001ca345117d5b8ebdbe858c5c9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 35,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -550,7 +550,11 @@ static UniValue signmessage(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n     }\n \n-    const SigningProvider* provider = pwallet->GetSigningProvider();\n+    CScript script_pub_key = GetScriptForDestination(*pkhash);\n+    const SigningProvider* provider = pwallet->GetSigningProvider(script_pub_key);\n+    if (!provider) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Private key not available\");\n+    }\n \n     CKey key;\n     CKeyID keyID(*pkhash);\n@@ -2933,34 +2937,36 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                 entry.pushKV(\"label\", i->second.name);\n             }\n \n-            const SigningProvider* provider = pwallet->GetSigningProvider();\n-            if (scriptPubKey.IsPayToScriptHash()) {\n-                const CScriptID& hash = CScriptID(boost::get<ScriptHash>(address));\n-                CScript redeemScript;\n-                if (provider->GetCScript(hash, redeemScript)) {\n-                    entry.pushKV(\"redeemScript\", HexStr(redeemScript.begin(), redeemScript.end()));\n-                    // Now check if the redeemScript is actually a P2WSH script\n-                    CTxDestination witness_destination;\n-                    if (redeemScript.IsPayToWitnessScriptHash()) {\n-                        bool extracted = ExtractDestination(redeemScript, witness_destination);\n-                        CHECK_NONFATAL(extracted);\n-                        // Also return the witness script\n-                        const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(witness_destination);\n-                        CScriptID id;\n-                        CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n-                        CScript witnessScript;\n-                        if (provider->GetCScript(id, witnessScript)) {\n-                            entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+            const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n+            if (provider) {\n+                if (scriptPubKey.IsPayToScriptHash()) {\n+                    const CScriptID& hash = CScriptID(boost::get<ScriptHash>(address));\n+                    CScript redeemScript;\n+                    if (provider->GetCScript(hash, redeemScript)) {\n+                        entry.pushKV(\"redeemScript\", HexStr(redeemScript.begin(), redeemScript.end()));\n+                        // Now check if the redeemScript is actually a P2WSH script\n+                        CTxDestination witness_destination;\n+                        if (redeemScript.IsPayToWitnessScriptHash()) {\n+                            bool extracted = ExtractDestination(redeemScript, witness_destination);\n+                            CHECK_NONFATAL(extracted);\n+                            // Also return the witness script\n+                            const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(witness_destination);\n+                            CScriptID id;\n+                            CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n+                            CScript witnessScript;\n+                            if (provider->GetCScript(id, witnessScript)) {\n+                                entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                            }\n                         }\n                     }\n-                }\n-            } else if (scriptPubKey.IsPayToWitnessScriptHash()) {\n-                const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(address);\n-                CScriptID id;\n-                CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n-                CScript witnessScript;\n-                if (provider->GetCScript(id, witnessScript)) {\n-                    entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                } else if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+                    const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(address);\n+                    CScriptID id;\n+                    CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n+                    CScript witnessScript;\n+                    if (provider->GetCScript(id, witnessScript)) {\n+                        entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                    }\n                 }\n             }\n         }\n@@ -2971,8 +2977,11 @@ static UniValue listunspent(const JSONRPCRequest& request)\n         entry.pushKV(\"spendable\", out.fSpendable);\n         entry.pushKV(\"solvable\", out.fSolvable);\n         if (out.fSolvable) {\n-            auto descriptor = InferDescriptor(scriptPubKey, *pwallet->GetLegacyScriptPubKeyMan());\n-            entry.pushKV(\"desc\", descriptor->ToString());\n+            const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n+            if (provider) {\n+                auto descriptor = InferDescriptor(scriptPubKey, *provider);\n+                entry.pushKV(\"desc\", descriptor->ToString());\n+            }\n         }\n         if (avoid_reuse) entry.pushKV(\"reused\", reused);\n         entry.pushKV(\"safe\", out.fSafe);\n@@ -3281,9 +3290,23 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     // Parse the prevtxs array\n     ParsePrevouts(request.params[1], nullptr, coins);\n \n+    std::set<const SigningProvider*> providers;\n+    for (const std::pair<COutPoint, Coin> coin_pair : coins) {\n+        const SigningProvider* provider = pwallet->GetSigningProvider(coin_pair.second.out.scriptPubKey);\n+        if (provider) {\n+            providers.insert(std::move(provider));\n+        }\n+    }\n+    if (providers.size() == 0) {\n+        // When there are no available providers, use DUMMY_SIGNING_PROVIDER so we can check if the tx is complete\n+        providers.insert(&DUMMY_SIGNING_PROVIDER);\n+    }\n+\n     UniValue result(UniValue::VOBJ);\n-    SignTransaction(mtx, &*pwallet->GetLegacyScriptPubKeyMan(), coins, request.params[2], result);\n-    return result;\n+    for (const SigningProvider* provider : providers) {\n+        SignTransaction(mtx, provider, coins, request.params[2], result);\n+    }\n+     return result;\n }\n \n static UniValue bumpfee(const JSONRPCRequest& request)\n@@ -3648,9 +3671,10 @@ static UniValue DescribeWalletAddress(CWallet* pwallet, const CTxDestination& de\n {\n     UniValue ret(UniValue::VOBJ);\n     UniValue detail = DescribeAddress(dest);\n+    CScript script = GetScriptForDestination(dest);\n     const SigningProvider* provider = nullptr;\n     if (pwallet) {\n-        provider = pwallet->GetSigningProvider();\n+        provider = pwallet->GetSigningProvider(script);\n     }\n     ret.pushKVs(detail);\n     ret.pushKVs(boost::apply_visitor(DescribeWalletAddressVisitor(provider), dest));\n@@ -3742,11 +3766,11 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     CScript scriptPubKey = GetScriptForDestination(dest);\n     ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n-    const SigningProvider* provider = pwallet->GetSigningProvider();\n+    const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n \n     isminetype mine = pwallet->IsMine(dest);\n     ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n-    bool solvable = IsSolvable(*provider, scriptPubKey);\n+    bool solvable = provider && IsSolvable(*provider, scriptPubKey);\n     ret.pushKV(\"solvable\", solvable);\n     if (solvable) {\n        ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *provider)->ToString());\n@@ -3759,7 +3783,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     }\n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n \n-    ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan();\n+    ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan(scriptPubKey);\n     if (spk_man) {\n         CKeyID key_id = GetKeyForDestination(*provider, dest);\n         const CKeyMetadata* meta = nullptr;"
      },
      {
        "sha": "30b7b634fec505d00449d5e1be5c7162669e4554",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -1342,7 +1342,11 @@ bool CWallet::DummySignInput(CTxIn &tx_in, const CTxOut &txout, bool use_max_sig\n     const CScript& scriptPubKey = txout.scriptPubKey;\n     SignatureData sigdata;\n \n-    const SigningProvider* provider = GetSigningProvider();\n+    const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n+    if (!provider) {\n+        // We don't know about this scriptpbuKey;\n+        return false;\n+    }\n \n     if (!ProduceSignature(*provider, use_max_sig ? DUMMY_MAXIMUM_SIGNATURE_CREATOR : DUMMY_SIGNATURE_CREATOR, scriptPubKey, sigdata)) {\n         return false;\n@@ -2096,7 +2100,7 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n                 continue;\n             }\n \n-            const SigningProvider* provider = GetSigningProvider();\n+            const SigningProvider* provider = GetSigningProvider(wtx.tx->vout[i].scriptPubKey);\n \n             bool solvable = provider ? IsSolvable(*provider, wtx.tx->vout[i].scriptPubKey) : false;\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n@@ -2333,8 +2337,9 @@ bool CWallet::SignTransaction(CMutableTransaction& tx)\n         const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n         SignatureData sigdata;\n \n-        const SigningProvider* provider = GetSigningProvider();\n+        const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n         if (!provider) {\n+            // We don't know about this scriptpbuKey;\n             return false;\n         }\n \n@@ -2796,7 +2801,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 const CScript& scriptPubKey = coin.txout.scriptPubKey;\n                 SignatureData sigdata;\n \n-                const SigningProvider* provider = GetSigningProvider();\n+                const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n                 if (!provider || !ProduceSignature(*provider, MutableTransactionSignatureCreator(&txNew, nIn, coin.txout.nValue, SIGHASH_ALL), scriptPubKey, sigdata))\n                 {\n                     strFailReason = _(\"Signing transaction failed\").translated;\n@@ -4002,12 +4007,17 @@ bool CWallet::Lock()\n     return true;\n }\n \n-ScriptPubKeyMan* CWallet::GetScriptPubKeyMan() const\n+ScriptPubKeyMan* CWallet::GetScriptPubKeyMan(const CScript& script) const\n+{\n+    return m_spk_man.get();\n+}\n+\n+const SigningProvider* CWallet::GetSigningProvider(const CScript& script) const\n {\n     return m_spk_man.get();\n }\n \n-const SigningProvider* CWallet::GetSigningProvider() const\n+const SigningProvider* CWallet::GetSigningProvider(const CScript& script, SignatureData& sigdata) const\n {\n     return m_spk_man.get();\n }"
      },
      {
        "sha": "bc6a4a18886a0ca2f2f4445dde0a268702cca5f9",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d0dab897afaac0a18aa47d3ce673a4a43a69178a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "patch": "@@ -1113,8 +1113,13 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         LogPrintf((\"%s \" + fmt).c_str(), GetDisplayName(), parameters...);\n     };\n \n-    ScriptPubKeyMan* GetScriptPubKeyMan() const;\n-    const SigningProvider* GetSigningProvider() const;\n+    //! Get the ScriptPubKeyMan for a script\n+    ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script) const;\n+\n+    //! Get the SigningProvider for a script\n+    const SigningProvider* GetSigningProvider(const CScript& script) const;\n+    const SigningProvider* GetSigningProvider(const CScript& script, SignatureData& sigdata) const;\n+\n     LegacyScriptPubKeyMan* GetLegacyScriptPubKeyMan() const;\n \n     // Temporary LegacyScriptPubKeyMan accessors and aliases."
      }
    ]
  },
  {
    "sha": "621d398750d9f5ce3e7ec75ccb160b3534dcc436",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjFkMzk4NzUwZDlmNWNlM2U3ZWM3NWNjYjE2MGIzNTM0ZGNjNDM2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-17T01:59:03Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T21:19:15Z"
      },
      "message": "test: skip bitcoin_cli test when the cli isn't compiled",
      "tree": {
        "sha": "88213d1f095dd60b9db3c3bca73ba246b639642a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/88213d1f095dd60b9db3c3bca73ba246b639642a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/621d398750d9f5ce3e7ec75ccb160b3534dcc436",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3TCtMACgkQLuufXMCV\nJsEkXA//XOkDm8ZPeIQ2ZzNZVnH/znqMT3IzJJ3nJcDXgbYjNaXSZoe1E4pYpTWp\n+5rs/zlhzpfw7ZC857GGTsoMvhvC2e+7VxH9x2DiVq5nI+Z08nDMAM3iqgatIVcH\nnO2agRT4ADvA2Aozi0CApQieUIDbb/DG8A/2C4wg0v1eMaLgYOB13gDoXdEUIQyw\nlKCVIMOQ72a2R10OcGm8ieCo7jyIYXN247kCNqfdBelSK5DKxPJYCScmnFWFddne\nhdspN6X1mY5p44twL881LIA3Kl8V3v+rQWoNXDkC945u66ZUe7gs5Kh+rPFK6KR/\nCpUyquuRTTZqb6GyVGPihB2kyB9km9/gMK9bmXf3qWL84tw/hX2lDINUGVipP1XK\nezkIKXZ37X7ys4thbkBCmzjlU2qZyet6sTZC7GX4sWSCRZNTecIbIspakXxzHna4\ntQTfRRoxDKCp5HxMrct5Ze+twoEr7pK9jBTM+ZZXDfQglOBsS7ds23lvvffBOVYR\nN7aBKOBonY+VNcVqOylMAP9BXs3s2poNw6F9U8esgN5VhB2fsU82ltAeD4L2C43J\nSYGY6GVtPFqDzWlUrGeUsE1rQ5vC5nlMXkQxOw5y5JnN/mDe+ZWEkrCHEwUE0d8y\nt2bVkPARIB2dyvU7/M5vapuo2YXyAqQrjutGLzpK7Y1jVMTWiGs=\n=GU2r\n-----END PGP SIGNATURE-----",
        "payload": "tree 88213d1f095dd60b9db3c3bca73ba246b639642a\nparent 30521302f90e4856a7516867b32a4576fa6d98b3\nauthor fanquake <fanquake@gmail.com> 1573955943 -0500\ncommitter fanquake <fanquake@gmail.com> 1574111955 -0500\n\ntest: skip bitcoin_cli test when the cli isn't compiled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/621d398750d9f5ce3e7ec75ccb160b3534dcc436",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/621d398750d9f5ce3e7ec75ccb160b3534dcc436",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/621d398750d9f5ce3e7ec75ccb160b3534dcc436/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ec1c88ed53e86493b97e0556546cef65ffe03404",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/621d398750d9f5ce3e7ec75ccb160b3534dcc436/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/621d398750d9f5ce3e7ec75ccb160b3534dcc436/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=621d398750d9f5ce3e7ec75ccb160b3534dcc436",
        "patch": "@@ -12,6 +12,9 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n \n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+\n     def run_test(self):\n         \"\"\"Main test logic\"\"\"\n "
      }
    ]
  },
  {
    "sha": "e9277baed64e1d4054a102e40b39a9aed7839c2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTI3N2JhZWQ2NGUxZDQwNTRhMTAyZTQwYjM5YTlhZWQ3ODM5YzJm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T21:47:41Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T21:47:41Z"
      },
      "message": "test: skip wallet_listreceivedby test when the cli isn't compiled",
      "tree": {
        "sha": "48e87e22d0609788cc468c546eea4cf282dde304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48e87e22d0609788cc468c546eea4cf282dde304"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9277baed64e1d4054a102e40b39a9aed7839c2f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3TEX0ACgkQLuufXMCV\nJsE4kw//cl/QVywS/ExoRELcZkobpjVJ5mulJ2GIHRj2UEuEZDIonOH78Cbecc4n\n6VJs0snvpHdRlZJR1Cx+4iEPXyTaIuVKtq6sQq/pJeWuFJkXiu1mzgvqOHifDaL1\ni/f49Ga6JM9hYSjKTYF5snT7tT8Nbqjfc4/daM8a1N5yKaX9S36Fk6whmEiJV2zG\nVR2kgijQm3LR2l9xaBeiEmBgRN2t+4/R0SiaKjGjPqphMRZQ5m6P8NKYzRpD+pDz\n3U+yVOjw+9uMtK5BA0AqjZQ2ek77XFiYTiqRaiNaQP+46/mk7pxbHdnOXCp1Adiq\nWWItVpg/9ZtN1Y5gWZEZ4HOT9seD+Y2A/xBbV3H6yZjqLhjGkJQyVB9WasTctjzr\ndpNJDr0GPI+oiojU/mT7rf4LBsixh+E7ad8mhaeqoMD41R+jdUJcpOSnlw6+On3a\nXuGR3tmshvdYF7jwds2/IXzZC4wEsK/jITsta2r2do8pmiO6vn1gHRqJjlgVmZ+y\nr700x67eH4Ks6jFoWKceMa98JbThLVcPCMPwHX+Zan7p7A1SJ89bq11Rais8wB/L\n4gN3E1KAbAXB4kjAIOCSVlJQccAqPxW4uRywWlW7BnT2OlheZvGwMU4XSRWhehNb\nkBk1J6xSplWk83gTZifzEIR3s5kBfaXIJAwYrlIKipk5I5AQ4y8=\n=FStv\n-----END PGP SIGNATURE-----",
        "payload": "tree 48e87e22d0609788cc468c546eea4cf282dde304\nparent 621d398750d9f5ce3e7ec75ccb160b3534dcc436\nauthor fanquake <fanquake@gmail.com> 1574113661 -0500\ncommitter fanquake <fanquake@gmail.com> 1574113661 -0500\n\ntest: skip wallet_listreceivedby test when the cli isn't compiled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9277baed64e1d4054a102e40b39a9aed7839c2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9277baed64e1d4054a102e40b39a9aed7839c2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9277baed64e1d4054a102e40b39a9aed7839c2f/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "621d398750d9f5ce3e7ec75ccb160b3534dcc436",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/621d398750d9f5ce3e7ec75ccb160b3534dcc436",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/621d398750d9f5ce3e7ec75ccb160b3534dcc436"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "efa6a199ad5e669ced087cfeb0aed3829159022d",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9277baed64e1d4054a102e40b39a9aed7839c2f/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9277baed64e1d4054a102e40b39a9aed7839c2f/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=e9277baed64e1d4054a102e40b39a9aed7839c2f",
        "patch": "@@ -19,6 +19,7 @@ def set_test_params(self):\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n+        self.skip_if_no_cli()\n \n     def run_test(self):\n         # Generate block to get out of IBD"
      }
    ]
  },
  {
    "sha": "a67352161c68fea9764cc31aff199f112d8572c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNjczNTIxNjFjNjhmZWE5NzY0Y2MzMWFmZjE5OWYxMTJkODU3MmM2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T21:48:52Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-18T21:48:52Z"
      },
      "message": "test: skip tool_wallet test when bitcoin-wallet isn't compiled",
      "tree": {
        "sha": "b54ead937c7370057c79a7d5407a8d445ed3428e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b54ead937c7370057c79a7d5407a8d445ed3428e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a67352161c68fea9764cc31aff199f112d8572c6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3TEcQACgkQLuufXMCV\nJsF0dw/7BNYzBGqnp8/rgEI3RjAp79UbbOsd+9UsE+k5qZA5NNQej4C4ClFxx6ar\nJOIdnkdpou9PSJMeJyy9OttcZeirqKZs4EEi2wEpoHoMv0bVRLhMn+VP+iJNh0wp\nZHIAor1sKb92e4Oynr0XoJTq3tIP6zjghOYzy++/a3w/bgBXurabpdmVh0sC9o4C\nbvWpAykx3VTPtrzi6S7N2Dh1VGK1y7IqWaFLrTCzQVNBiOf7mW0UHfxWcOD6jPd8\nw5B13t3+US/pZ6ForLhnxbUlkmw3zX0VUKRTq2WgVm1z/qWublPTVTKdrRZPujTa\nHRGfwzgmGVbpXA37UgM/m4b3DOmP3ZiGDbvJtzYdgD6W9kGzC3lk3D5iQDRjpWBm\nf26Nu1Kz2vUE7eqWSBf7Aosjr1F7u6hx+PH0dZVHZ03AjMfgLq8Frgoe0FmBjZnS\nquQEbmUzGd1RBBRQ790eJn2mLD9uxl6VaTBnjqna792IsCXBMN9/SpG4bFbFUCxF\nkhUYlVBK+eT6ZzjEcy/J+JAkdDjlP7T0omBXTQ/LdH1Vi7b8u2+tIMMu+aiiUyjk\nhLidjqi4PxuAPrDgEXOSODYLMd91lIp4r2AfjCR5X06NAFhY1t5aVrpmYFuNJWGh\nif1GuPwlNi/Zvk/DBotPPTuuBVIEc1xG2Q/gHysjD/PuyaOlUYM=\n=TNhi\n-----END PGP SIGNATURE-----",
        "payload": "tree b54ead937c7370057c79a7d5407a8d445ed3428e\nparent e9277baed64e1d4054a102e40b39a9aed7839c2f\nauthor fanquake <fanquake@gmail.com> 1574113732 -0500\ncommitter fanquake <fanquake@gmail.com> 1574113732 -0500\n\ntest: skip tool_wallet test when bitcoin-wallet isn't compiled\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67352161c68fea9764cc31aff199f112d8572c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a67352161c68fea9764cc31aff199f112d8572c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67352161c68fea9764cc31aff199f112d8572c6/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9277baed64e1d4054a102e40b39a9aed7839c2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9277baed64e1d4054a102e40b39a9aed7839c2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9277baed64e1d4054a102e40b39a9aed7839c2f"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9687206ee18cd6cd7cb867bab05b1df5654aa33f",
        "filename": "test/config.ini.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67352161c68fea9764cc31aff199f112d8572c6/test/config.ini.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67352161c68fea9764cc31aff199f112d8572c6/test/config.ini.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/config.ini.in?ref=a67352161c68fea9764cc31aff199f112d8572c6",
        "patch": "@@ -16,6 +16,7 @@ RPCAUTH=@abs_top_srcdir@/share/rpcauth/rpcauth.py\n # Which components are enabled. These are commented out by `configure` if they were disabled when running config.\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=true\n @BUILD_BITCOIN_CLI_TRUE@ENABLE_CLI=true\n+@BUILD_BITCOIN_WALLET_TRUE@ENABLE_WALLET_TOOL=true\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=true\n @ENABLE_FUZZ_TRUE@ENABLE_FUZZ=true\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=true"
      },
      {
        "sha": "6b6bbfd1f9d3f1e8e4dde0c6b3529cc7e9d687d6",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67352161c68fea9764cc31aff199f112d8572c6/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67352161c68fea9764cc31aff199f112d8572c6/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=a67352161c68fea9764cc31aff199f112d8572c6",
        "patch": "@@ -596,6 +596,11 @@ def skip_if_no_wallet(self):\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n \n+    def skip_if_no_wallet_tool(self):\n+        \"\"\"Skip the running test if bitcoin-wallet has not been compiled.\"\"\"\n+        if not self.is_wallet_tool_compiled():\n+            raise SkipTest(\"bitcoin-wallet has not been compiled\")\n+\n     def skip_if_no_cli(self):\n         \"\"\"Skip the running test if bitcoin-cli has not been compiled.\"\"\"\n         if not self.is_cli_compiled():\n@@ -609,6 +614,10 @@ def is_wallet_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_WALLET\")\n \n+    def is_wallet_tool_compiled(self):\n+        \"\"\"Checks whether bitcoin-wallet was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"ENABLE_WALLET_TOOL\")\n+\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")"
      },
      {
        "sha": "32ef25745621ede5b00a81b5ee5ad2a109731581",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a67352161c68fea9764cc31aff199f112d8572c6/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a67352161c68fea9764cc31aff199f112d8572c6/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=a67352161c68fea9764cc31aff199f112d8572c6",
        "patch": "@@ -23,6 +23,7 @@ def set_test_params(self):\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n+        self.skip_if_no_wallet_tool()\n \n     def bitcoin_wallet_process(self, *args):\n         binary = self.config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoin-wallet' + self.config[\"environment\"][\"EXEEXT\"]"
      }
    ]
  },
  {
    "sha": "2065ef66ee6fb2b7bb442274f860813cad85b08c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMDY1ZWY2NmVlNmZiMmI3YmI0NDIyNzRmODYwODEzY2FkODViMDhj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T08:04:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T08:26:13Z"
      },
      "message": "Merge #17265: Remove OpenSSL\n\ne5a0bece6e84402fcb1fe4f25fd24da1d21ec077 doc: add OpenSSL removal to release-notes.md (fanquake)\n397dbae070dca9a635ff3d1d61add09db004661e ci: remove OpenSSL installation (fanquake)\na4eb83961965347792e9ac75928aae359d5f7405 doc: remove OpenSSL from build instructions and licensing info (fanquake)\n648b2e3c3288ee0b83d4089d27fa7f84a73d118e depends: remove OpenSSL package (fanquake)\n8983ee3e6dd8ab658bd2caf97c326cc53ea50818 build: remove OpenSSL detection and libs (fanquake)\nb49b6b0f7090cc15860d815fb0ef306ddfc718ba random: Remove remaining OpenSSL calls and locking infrastructure (fanquake)\n4fcfcc294e7cb17956e283d09050cb997093a35d random: stop retrieving random bytes from OpenSSL (fanquake)\n5624ab0b4f844dc7c17aeb1b009f002c33c38fb3 random: stop feeding RNG output back into OpenSSL (fanquake)\n\nPull request description:\n\n  Now that #17165 has been merged, removing our remaining OpenSSL usage is possible.\n\n  That remaining usage was a call to [`RAND_bytes`](https://www.openssl.org/docs/manmaster/man3/RAND_bytes.html) during the ::SLOW path of [ProcRand](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L616). As well as feeding output from our RNG back into OpenSSL via [`RAND_add`](https://www.openssl.org/docs/manmaster/man3/RAND_add.html) during the ::SLOW and ::SLEEP paths.\n\n  Optimistically tagged for `0.20.0`. Needs discussion, potentially in an upcoming weekly meeting?\n\n  Closes #12530.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK e5a0bece6e84402fcb1fe4f25fd24da1d21ec077\n  laanwj:\n    ACK e5a0bece6e84402fcb1fe4f25fd24da1d21ec077\n\nTree-SHA512: 02fce08ec91d20e0da51e9314eec53dcf8699cded02f0a005417d627520c20b826332cb42bdae132af283d4903aa3088a9f613f3aea915d655a51532a4d4796c",
      "tree": {
        "sha": "cb849f4d3e24a25576e873ad9237fb77d8eca69f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb849f4d3e24a25576e873ad9237fb77d8eca69f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2065ef66ee6fb2b7bb442274f860813cad85b08c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3TpyUACgkQHkrtYphs\n0l3kzAgAk2NsAsya5UZbJwstWYjdaftTV+b0qw905EDSEr9Dav7tR+Um1rCbdupd\ngO5HF6bCJrFAdYOiBosd58AGo7mjlHlpeSKk0CR7sv6qEwg3BA8kbyTnUyB4HpDL\nhj/ek/b/kpTCOPXFRII5HMVGrD6s74Emu7gkdUUV6ZrhkI+nvS7oPLHvOL3wH2hX\nFuayw5eWaHDQhSvVReBUtpU97nkx5UYDLHGZ7m2D3ibzh6uIva5X6JH1XADgN3Mt\n6NYMwX8pfjjGDr5C8ueA6Qa5qFAWXhk4bd3SI5yKR/6mFZuPqqGF3NAIsG1Dt6fW\nwsf5/ghm69v3Pu1kWEIEZujBU3/Ohg==\n=KX/+\n-----END PGP SIGNATURE-----",
        "payload": "tree cb849f4d3e24a25576e873ad9237fb77d8eca69f\nparent 30521302f90e4856a7516867b32a4576fa6d98b3\nparent e5a0bece6e84402fcb1fe4f25fd24da1d21ec077\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574150692 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574151973 +0100\n\nMerge #17265: Remove OpenSSL\n\ne5a0bece6e84402fcb1fe4f25fd24da1d21ec077 doc: add OpenSSL removal to release-notes.md (fanquake)\n397dbae070dca9a635ff3d1d61add09db004661e ci: remove OpenSSL installation (fanquake)\na4eb83961965347792e9ac75928aae359d5f7405 doc: remove OpenSSL from build instructions and licensing info (fanquake)\n648b2e3c3288ee0b83d4089d27fa7f84a73d118e depends: remove OpenSSL package (fanquake)\n8983ee3e6dd8ab658bd2caf97c326cc53ea50818 build: remove OpenSSL detection and libs (fanquake)\nb49b6b0f7090cc15860d815fb0ef306ddfc718ba random: Remove remaining OpenSSL calls and locking infrastructure (fanquake)\n4fcfcc294e7cb17956e283d09050cb997093a35d random: stop retrieving random bytes from OpenSSL (fanquake)\n5624ab0b4f844dc7c17aeb1b009f002c33c38fb3 random: stop feeding RNG output back into OpenSSL (fanquake)\n\nPull request description:\n\n  Now that #17165 has been merged, removing our remaining OpenSSL usage is possible.\n\n  That remaining usage was a call to [`RAND_bytes`](https://www.openssl.org/docs/manmaster/man3/RAND_bytes.html) during the ::SLOW path of [ProcRand](https://github.com/bitcoin/bitcoin/blob/master/src/random.cpp#L616). As well as feeding output from our RNG back into OpenSSL via [`RAND_add`](https://www.openssl.org/docs/manmaster/man3/RAND_add.html) during the ::SLOW and ::SLEEP paths.\n\n  Optimistically tagged for `0.20.0`. Needs discussion, potentially in an upcoming weekly meeting?\n\n  Closes #12530.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK e5a0bece6e84402fcb1fe4f25fd24da1d21ec077\n  laanwj:\n    ACK e5a0bece6e84402fcb1fe4f25fd24da1d21ec077\n\nTree-SHA512: 02fce08ec91d20e0da51e9314eec53dcf8699cded02f0a005417d627520c20b826332cb42bdae132af283d4903aa3088a9f613f3aea915d655a51532a4d4796c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2065ef66ee6fb2b7bb442274f860813cad85b08c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2065ef66ee6fb2b7bb442274f860813cad85b08c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2065ef66ee6fb2b7bb442274f860813cad85b08c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3"
      },
      {
        "sha": "e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e5a0bece6e84402fcb1fe4f25fd24da1d21ec077"
      }
    ],
    "stats": {
      "total": 231,
      "additions": 22,
      "deletions": 209
    },
    "files": [
      {
        "sha": "f4a3878ed8058bbc999a99a83c6873d82d5f3753",
        "filename": ".cirrus.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/.cirrus.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/.cirrus.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.cirrus.yml?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -16,7 +16,7 @@ task:\n   ccache_cache:\n     folder: \"/tmp/ccache_dir\"\n   install_script:\n-    - pkg install -y autoconf automake boost-libs git gmake libevent libtool openssl pkgconf python3 ccache\n+    - pkg install -y autoconf automake boost-libs git gmake libevent libtool pkgconf python3 ccache\n     - ./contrib/install_db4.sh $(pwd)\n     - ccache --max-size=${CCACHE_SIZE}\n   configure_script:"
      },
      {
        "sha": "704470cac8a25c8a9df958aeed694244aabe7846",
        "filename": "build_msvc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/build_msvc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/build_msvc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/README.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -12,7 +12,7 @@ Quick Start\n The minimal steps required to build Bitcoin Core with the msbuild toolchain are below. More detailed instructions are contained in the following sections.\n \n ```\n-vcpkg install --triplet x64-windows-static boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl zeromq berkeleydb rapidcheck double-conversion\n+vcpkg install --triplet x64-windows-static boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent zeromq berkeleydb rapidcheck double-conversion\n py -3 build_msvc\\msvc-autogen.py\n msbuild /m build_msvc\\bitcoin.sln /p:Platform=x64 /p:Configuration=Release /t:build\n ```\n@@ -33,7 +33,6 @@ The [external dependencies](https://github.com/bitcoin/bitcoin/blob/master/doc/d\n - Boost\n - DoubleConversion\n - libevent\n-- OpenSSL\n - Qt5\n - RapidCheck\n - ZeroMQ"
      },
      {
        "sha": "d63636259d1588377080b8e0304c147468f1b138",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -1 +1 @@\n-berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent openssl rapidcheck zeromq double-conversion\n\\ No newline at end of file\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      },
      {
        "sha": "e70a8a9ea9e89228e9698ce94f6c92c73dd44c0d",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -25,8 +25,6 @@ if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n   done\n \n   export PATH=\"/usr/local/opt/ccache/libexec:$PATH\"\n-  OPENSSL_PKG_CONFIG_PATH=\"/usr/local/opt/openssl@1.1/lib/pkgconfig\"\n-  export PKG_CONFIG_PATH=$OPENSSL_PKG_CONFIG_PATH:$PKG_CONFIG_PATH\n \n   ${CI_RETRY_EXE} pip3 install $PIP_PACKAGES\n "
      },
      {
        "sha": "2025037bd466d7bb0c68e235b63ce5d5b8d6289f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -555,13 +555,8 @@ case $host in\n          dnl It's safe to add these paths even if the functionality is disabled by\n          dnl the user (--without-wallet or --without-gui for example).\n \n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n          bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n          qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n          if test x$bdb_prefix != x; then\n            CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n            LIBS=\"$LIBS -L$bdb_prefix/lib\"\n@@ -1255,7 +1250,6 @@ if test x$use_pkgconfig = xyes; then\n   m4_ifdef(\n     [PKG_CHECK_MODULES],\n     [\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto not found.)])\n       if test x$use_qr != xno; then\n         BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n@@ -1278,8 +1272,6 @@ if test x$use_pkgconfig = xyes; then\n     ]\n   )\n else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n \n   if test x$build_bitcoin_cli$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n@@ -1599,7 +1591,6 @@ AC_SUBST(TESTDEFS)\n AC_SUBST(LEVELDB_TARGET_FLAGS)\n AC_SUBST(MINIUPNPC_CPPFLAGS)\n AC_SUBST(MINIUPNPC_LIBS)\n-AC_SUBST(CRYPTO_LIBS)\n AC_SUBST(EVENT_LIBS)\n AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)"
      },
      {
        "sha": "e3b3647dd9a95019b01925f319ff77d7abbacd5d",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 88,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30521302f90e4856a7516867b32a4576fa6d98b3/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30521302f90e4856a7516867b32a4576fa6d98b3/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=30521302f90e4856a7516867b32a4576fa6d98b3",
        "patch": "@@ -1,88 +0,0 @@\n-package=openssl\n-$(package)_version=1.0.1k\n-$(package)_download_path=https://www.openssl.org/source\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n-$(package)_patches=0001-Add-OpenSSL-termios-fix-for-musl-libc.patch\n-\n-define $(package)_set_vars\n-$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl\n-$(package)_config_opts+=no-camellia\n-$(package)_config_opts+=no-capieng\n-$(package)_config_opts+=no-cast\n-$(package)_config_opts+=no-comp\n-$(package)_config_opts+=no-dso\n-$(package)_config_opts+=no-dtls1\n-$(package)_config_opts+=no-ec_nistp_64_gcc_128\n-$(package)_config_opts+=no-gost\n-$(package)_config_opts+=no-gmp\n-$(package)_config_opts+=no-heartbeats\n-$(package)_config_opts+=no-idea\n-$(package)_config_opts+=no-jpake\n-$(package)_config_opts+=no-krb5\n-$(package)_config_opts+=no-libunbound\n-$(package)_config_opts+=no-md2\n-$(package)_config_opts+=no-mdc2\n-$(package)_config_opts+=no-rc4\n-$(package)_config_opts+=no-rc5\n-$(package)_config_opts+=no-rdrand\n-$(package)_config_opts+=no-rfc3779\n-$(package)_config_opts+=no-rsax\n-$(package)_config_opts+=no-sctp\n-$(package)_config_opts+=no-seed\n-$(package)_config_opts+=no-sha0\n-$(package)_config_opts+=no-shared\n-$(package)_config_opts+=no-ssl-trace\n-$(package)_config_opts+=no-ssl2\n-$(package)_config_opts+=no-ssl3\n-$(package)_config_opts+=no-static_engine\n-$(package)_config_opts+=no-store\n-$(package)_config_opts+=no-unit-test\n-$(package)_config_opts+=no-weak-ssl-ciphers\n-$(package)_config_opts+=no-whirlpool\n-$(package)_config_opts+=no-zlib\n-$(package)_config_opts+=no-zlib-dynamic\n-$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n-$(package)_config_opts_x86_64_linux=linux-x86_64\n-$(package)_config_opts_i686_linux=linux-generic32\n-$(package)_config_opts_arm_linux=linux-generic32\n-$(package)_config_opts_armv7l_linux=linux-generic32\n-$(package)_config_opts_aarch64_linux=linux-generic64\n-$(package)_config_opts_mipsel_linux=linux-generic32\n-$(package)_config_opts_mips_linux=linux-generic32\n-$(package)_config_opts_powerpc_linux=linux-generic32\n-$(package)_config_opts_riscv32_linux=linux-generic32\n-$(package)_config_opts_riscv64_linux=linux-generic64\n-$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n-$(package)_config_opts_x86_64_mingw32=mingw64\n-$(package)_config_opts_i686_mingw32=mingw\n-$(package)_config_opts_android=-fPIC\n-$(package)_config_opts_aarch64_android=linux-generic64\n-$(package)_config_opts_x86_64_android=linux-generic64\n-$(package)_config_opts_armv7a_android=linux-generic32\n-$(package)_config_opts_i686_android=linux-generic32\n-endef\n-\n-define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch && \\\n-  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n-  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n-endef\n-\n-define $(package)_config_cmds\n-  ./Configure $($(package)_config_opts)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -j1 build_crypto libcrypto.pc libssl.pc openssl.pc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf share bin etc\n-endef"
      },
      {
        "sha": "09f3187ac4b1038979c59a75bee8b9431341f996",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -1,4 +1,4 @@\n-packages:=boost openssl libevent\n+packages:=boost libevent\n \n qt_packages = qrencode zlib\n "
      },
      {
        "sha": "003099bdc20095d4050287d4457b8369b630fd62",
        "filename": "depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30521302f90e4856a7516867b32a4576fa6d98b3/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30521302f90e4856a7516867b32a4576fa6d98b3/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/openssl/0001-Add-OpenSSL-termios-fix-for-musl-libc.patch?ref=30521302f90e4856a7516867b32a4576fa6d98b3",
        "patch": "@@ -1,17 +0,0 @@\n-diff --git a/crypto/ui/ui_openssl.c b/crypto/ui/ui_openssl.c\n-index a38c758..d99edc2 100644\n---- a/crypto/ui/ui_openssl.c\n-+++ b/crypto/ui/ui_openssl.c\n-@@ -190,9 +190,9 @@\n- # undef  SGTTY\n- #endif\n- \n--#if defined(linux) && !defined(TERMIO)\n--# undef  TERMIOS\n--# define TERMIO\n-+#if defined(linux)\n-+# define TERMIOS\n-+# undef  TERMIO\n- # undef  SGTTY\n- #endif\n- "
      },
      {
        "sha": "46b311b251c6f1af7b87a38c0c52be1ad337d183",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -84,5 +84,3 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n License\n ---------------------\n Distributed under the [MIT software license](/COPYING).\n-This product includes software developed by the OpenSSL Project for use in the [OpenSSL Toolkit](https://www.openssl.org/). This product includes\n-cryptographic software written by Eric Young ([eay@cryptsoft.com](mailto:eay@cryptsoft.com)), and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "48316235049edffc07887fe49ee5c9e778451c75",
        "filename": "doc/build-freebsd.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-freebsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-freebsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-freebsd.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -11,7 +11,7 @@ This guide does not contain instructions for building the GUI.\n You will need the following dependencies, which can be installed as root via pkg:\n \n ```shell\n-pkg install autoconf automake boost-libs git gmake libevent libtool openssl pkgconf\n+pkg install autoconf automake boost-libs git gmake libevent libtool pkgconf\n \n git clone https://github.com/bitcoin/bitcoin.git\n ```"
      },
      {
        "sha": "e435798e95896f4cb8111142fe9f43678c045cfa",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -19,7 +19,7 @@ Then install [Homebrew](https://brew.sh).\n \n ## Dependencies\n ```shell\n-brew install automake berkeley-db4 libtool boost miniupnpc openssl pkg-config python qt libevent qrencode\n+brew install automake berkeley-db4 libtool boost miniupnpc pkg-config python qt libevent qrencode\n ```\n \n See [dependencies.md](dependencies.md) for a complete overview."
      },
      {
        "sha": "10c557569c05e0908bce3d032b22f0d3b5dbe0a5",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -127,7 +127,7 @@ built by default.\n \n Build requirements:\n \n-    sudo dnf install gcc-c++ libtool make autoconf automake openssl-devel libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n+    sudo dnf install gcc-c++ libtool make autoconf automake libevent-devel boost-devel libdb4-devel libdb4-cxx-devel python3\n \n Optional (see `--with-miniupnpc` and `--enable-upnp-default`):\n "
      },
      {
        "sha": "bfb663866df52eb9e2e7b6cc9a26246c2cf9d29d",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -17,7 +17,6 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n | MiniUPnPc | [2.0.20180203](http://miniupnp.free.fr/files) |  | No |  |  |\n-| OpenSSL | [1.0.1k](https://www.openssl.org/source) |  | Yes |  |  |\n | PCRE |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | Python (tests) |  | [3.5](https://www.python.org/downloads) |  |  |  |\n | qrencode | [3.4.4](https://fukuchi.org/works/qrencode) |  | No |  |  |"
      },
      {
        "sha": "129651d8e9f2f0795ca484af84518feef4faf3ad",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -113,7 +113,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "f68be21e8d9045094871c2025bc8f82526e49471",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -608,7 +608,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "b4c769889637e51971118e1e3c3dbcf2c9336283",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -114,7 +114,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "aadea09a2b82382fd7f806262a6ef1d9f529da91",
        "filename": "doc/man/bitcoin-wallet.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-wallet.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoin-wallet.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-wallet.1?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -61,7 +61,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "211ba10285d3dffb0580a6b1a438495bac19c566",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -581,7 +581,3 @@ The source code is available from <https://github.com/bitcoin/bitcoin>.\n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n or <https://opensource.org/licenses/MIT>\n-\n-This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n-Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "33a127e0d0c45334a5ff704c6de76f8958a80804",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -63,6 +63,12 @@ distribution provides binaries for the RISC-V platform.\n Notable changes\n ===============\n \n+Build System\n+------------\n+\n+- OpenSSL is no longer used by Bitcoin Core. The last usage of the library\n+was removed in #17265.\n+\n New RPCs\n --------\n "
      },
      {
        "sha": "ffb97f26d7043d117127c09a874a8424a8ddd6ce",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -19,7 +19,7 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS)\n+BITCOIN_INCLUDES=-I$(builddir) $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS)\n \n BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n@@ -571,7 +571,7 @@ bitcoind_LDADD = \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n # bitcoin-cli binary #\n bitcoin_cli_SOURCES = bitcoin-cli.cpp\n@@ -589,7 +589,7 @@ bitcoin_cli_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+bitcoin_cli_LDADD += $(BOOST_LIBS) $(EVENT_LIBS)\n #\n \n # bitcoin-tx binary #\n@@ -610,7 +610,7 @@ bitcoin_tx_LDADD = \\\n   $(LIBBITCOIN_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+bitcoin_tx_LDADD += $(BOOST_LIBS)\n #\n \n # bitcoin-wallet binary #\n@@ -637,7 +637,7 @@ bitcoin_wallet_LDADD = \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n-bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n+bitcoin_wallet_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS) $(ZMQ_LIBS)\n #\n \n # bitcoinconsensus library #"
      },
      {
        "sha": "acd712c8a2ca369a8c580ba520a848034768f06f",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -76,7 +76,7 @@ bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n bench_bench_bitcoin_SOURCES += bench/wallet_balance.cpp\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n+bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(MINIUPNPC_LIBS)\n bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_BENCH_FILES)"
      },
      {
        "sha": "93e60ff83224f9c4fc48b6b9580c019b573c44bb",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -314,7 +314,6 @@ endif\n qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDADD += $(CRYPTO_LIBS)\n qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_bitcoin_qt_LIBTOOLFLAGS = $(AM_LIBTOOLFLAGS) --tag CXX\n "
      },
      {
        "sha": "37e1da2a7856ff6355a3c8afeffa9fcf0bee14dc",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -63,7 +63,7 @@ qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n endif\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n-  $(QR_LIBS) $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n+  $(QR_LIBS) $(BDB_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)"
      },
      {
        "sha": "a2c76df91c5fc6620e99bf0656045c4a79c792a6",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -92,7 +92,6 @@ FUZZ_SUITE_LD_COMMON = \\\n  $(LIBMEMENV) \\\n  $(LIBSECP256K1) \\\n  $(EVENT_LIBS) \\\n- $(CRYPTO_LIBS) \\\n  $(EVENT_PTHREADS_LIBS)\n \n # test_bitcoin binary #\n@@ -208,7 +207,7 @@ test_test_bitcoin_LDADD += $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_C\n   $(LIBLEVELDB) $(LIBLEVELDB_SSE42) $(LIBMEMENV) $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n-test_test_bitcoin_LDADD += $(BDB_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n+test_test_bitcoin_LDADD += $(BDB_LIBS) $(MINIUPNPC_LIBS) $(RAPIDCHECK_LIBS)\n test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ"
      },
      {
        "sha": "421768441e74c32acbada9bf962db593de0a8011",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -563,9 +563,7 @@ std::string LicenseInfo()\n            \"\\n\" +\n            \"\\n\" +\n            _(\"This is experimental software.\").translated + \"\\n\" +\n-           strprintf(_(\"Distributed under the MIT software license, see the accompanying file %s or %s\").translated, \"COPYING\", \"<https://opensource.org/licenses/MIT>\") + \"\\n\" +\n-           \"\\n\" +\n-           strprintf(_(\"This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.\").translated, \"<https://www.openssl.org>\") +\n+           strprintf(_(\"Distributed under the MIT software license, see the accompanying file %s or %s\").translated, \"COPYING\", \"<https://opensource.org/licenses/MIT>\") +\n            \"\\n\";\n }\n "
      },
      {
        "sha": "47d76d870077da5667be8035618b0b2f755d8dca",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -43,10 +43,6 @@\n #include <sys/sysctl.h>\n #endif\n \n-#include <openssl/err.h>\n-#include <openssl/rand.h>\n-#include <openssl/conf.h>\n-\n [[noreturn]] static void RandFailure()\n {\n     LogPrintf(\"Failed to read randomness, aborting\\n\");\n@@ -347,8 +343,6 @@ void GetOSRand(unsigned char *ent32)\n #endif\n }\n \n-void LockingCallbackOpenSSL(int mode, int i, const char* file, int line);\n-\n namespace {\n \n class RNGState {\n@@ -364,31 +358,15 @@ class RNGState {\n     unsigned char m_state[32] GUARDED_BY(m_mutex) = {0};\n     uint64_t m_counter GUARDED_BY(m_mutex) = 0;\n     bool m_strongly_seeded GUARDED_BY(m_mutex) = false;\n-    std::unique_ptr<Mutex[]> m_mutex_openssl;\n \n public:\n     RNGState() noexcept\n     {\n         InitHardwareRand();\n-\n-        // Init OpenSSL library multithreading support\n-        m_mutex_openssl.reset(new Mutex[CRYPTO_num_locks()]);\n-        CRYPTO_set_locking_callback(LockingCallbackOpenSSL);\n-\n-        // OpenSSL can optionally load a config file which lists optional loadable modules and engines.\n-        // We don't use them so we don't require the config. However some of our libs may call functions\n-        // which attempt to load the config file, possibly resulting in an exit() or crash if it is missing\n-        // or corrupt. Explicitly tell OpenSSL not to try to load the file. The result for our libs will be\n-        // that the config appears to have been loaded and there are no modules/engines available.\n-        OPENSSL_no_config();\n     }\n \n     ~RNGState()\n     {\n-        // Securely erase the memory used by the OpenSSL PRNG\n-        RAND_cleanup();\n-        // Shutdown OpenSSL library multithreading support\n-        CRYPTO_set_locking_callback(nullptr);\n     }\n \n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n@@ -424,8 +402,6 @@ class RNGState {\n         memory_cleanse(buf, 64);\n         return ret;\n     }\n-\n-    Mutex& GetOpenSSLMutex(int i) { return m_mutex_openssl[i]; }\n };\n \n RNGState& GetRNGState() noexcept\n@@ -437,17 +413,6 @@ RNGState& GetRNGState() noexcept\n }\n }\n \n-void LockingCallbackOpenSSL(int mode, int i, const char* file, int line) NO_THREAD_SAFETY_ANALYSIS\n-{\n-    RNGState& rng = GetRNGState();\n-\n-    if (mode & CRYPTO_LOCK) {\n-        rng.GetOpenSSLMutex(i).lock();\n-    } else {\n-        rng.GetOpenSSLMutex(i).unlock();\n-    }\n-}\n-\n /* A note on the use of noexcept in the seeding functions below:\n  *\n  * None of the RNG code should ever throw any exception, with the sole exception\n@@ -495,10 +460,6 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     GetOSRand(buffer);\n     hasher.Write(buffer, sizeof(buffer));\n \n-    // OpenSSL RNG (for now)\n-    RAND_bytes(buffer, sizeof(buffer));\n-    hasher.Write(buffer, sizeof(buffer));\n-\n     // High-precision timestamp.\n     //\n     // Note that we also commit to a timestamp in the Fast seeder, so we indirectly commit to a\n@@ -586,14 +547,6 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n         SeedStartup(startup_hasher, rng);\n         rng.MixExtract(out, num, std::move(startup_hasher), true);\n     }\n-\n-    // For anything but the 'fast' level, feed the resulting RNG output (after an additional hashing step) back into OpenSSL.\n-    if (level != RNGLevel::FAST) {\n-        unsigned char buf[64];\n-        CSHA512().Write(out, num).Finalize(buf);\n-        RAND_add(buf, sizeof(buf), num);\n-        memory_cleanse(buf, 64);\n-    }\n }\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }"
      },
      {
        "sha": "2d8ab085e3a0fad6faf73baea44d960a3d270af5",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -35,7 +35,6 @@\n  *   that fast seeding includes, but additionally:\n  *   - OS entropy (/dev/urandom, getrandom(), ...). The application will terminate if\n  *     this entropy source fails.\n- *   - Bytes from OpenSSL's RNG (which itself may be seeded from various sources)\n  *   - Another high-precision timestamp (indirectly committing to a benchmark of all the\n  *     previous sources).\n  *   These entropy sources are slower, but designed to make sure the RNG state contains"
      },
      {
        "sha": "ec42ddabc328006c2fe3ab229951e8d3bc47eaff",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2065ef66ee6fb2b7bb442274f860813cad85b08c/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "patch": "@@ -70,7 +70,6 @@ namespace {\n void RandAddSeedPerfmon(CSHA512& hasher)\n {\n #ifdef WIN32\n-    // Don't need this on Linux, OpenSSL automatically uses /dev/urandom\n     // Seed with the entire set of perfmon data\n \n     // This can take up to 2 seconds, so only do it every 10 minutes"
      }
    ]
  },
  {
    "sha": "278751ea11f2cfe68b0c98f504f65586720cb5a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzg3NTFlYTExZjJjZmU2OGIwYzk4ZjUwNGY2NTU4NjcyMGNiNWE0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:02:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:03:44Z"
      },
      "message": "doc: Remove ssl as a required dependency from build-unix",
      "tree": {
        "sha": "fa8038b814093374a23abf2f3e5c73c6301be63b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa8038b814093374a23abf2f3e5c73c6301be63b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/278751ea11f2cfe68b0c98f504f65586720cb5a4",
      "comment_count": 3,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/278751ea11f2cfe68b0c98f504f65586720cb5a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/278751ea11f2cfe68b0c98f504f65586720cb5a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/278751ea11f2cfe68b0c98f504f65586720cb5a4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2065ef66ee6fb2b7bb442274f860813cad85b08c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e799e709fa67cfadc1ce417e694d8a35f1474304",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/278751ea11f2cfe68b0c98f504f65586720cb5a4/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/278751ea11f2cfe68b0c98f504f65586720cb5a4/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=278751ea11f2cfe68b0c98f504f65586720cb5a4",
        "patch": "@@ -33,7 +33,6 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n  libboost    | Utility          | Library for threading, data structures, etc\n  libevent    | Networking       | OS independent asynchronous networking\n \n@@ -81,7 +80,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n \n BerkeleyDB is required for the wallet.\n "
      }
    ]
  },
  {
    "sha": "2d7066527a456f8e1f4f603fe104b0bd9d864559",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZDcwNjY1MjdhNDU2ZjhlMWY0ZjYwM2ZlMTA0YjBiZDlkODY0NTU5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:02:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:03:44Z"
      },
      "message": "build: remove libcrypto as internal dependency in libbitcoinconsensus.pc",
      "tree": {
        "sha": "3a900247883f82038ca0233656a5b05d48804303",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a900247883f82038ca0233656a5b05d48804303"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2d7066527a456f8e1f4f603fe104b0bd9d864559",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d7066527a456f8e1f4f603fe104b0bd9d864559",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2d7066527a456f8e1f4f603fe104b0bd9d864559",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d7066527a456f8e1f4f603fe104b0bd9d864559/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "278751ea11f2cfe68b0c98f504f65586720cb5a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/278751ea11f2cfe68b0c98f504f65586720cb5a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/278751ea11f2cfe68b0c98f504f65586720cb5a4"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1ceab280bb114edd8e348dfa4821943f580e3805",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2d7066527a456f8e1f4f603fe104b0bd9d864559/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2d7066527a456f8e1f4f603fe104b0bd9d864559/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=2d7066527a456f8e1f4f603fe104b0bd9d864559",
        "patch": "@@ -8,4 +8,3 @@ Description: Library for the Bitcoin consensus protocol.\n Version: @PACKAGE_VERSION@\n Libs: -L${libdir} -lbitcoinconsensus\n Cflags: -I${includedir}\n-Requires.private: libcrypto"
      }
    ]
  },
  {
    "sha": "7ea55264b9d60325bc7a5c15d78e9063de145970",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWE1NTI2NGI5ZDYwMzI1YmM3YTVjMTVkNzhlOTA2M2RlMTQ1OTcw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:03:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:03:44Z"
      },
      "message": "test: remove lsan suppression for libcrypto",
      "tree": {
        "sha": "1d6a3b8c3c7fb937ef55d496d799cd2c6ca499e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1d6a3b8c3c7fb937ef55d496d799cd2c6ca499e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ea55264b9d60325bc7a5c15d78e9063de145970",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ea55264b9d60325bc7a5c15d78e9063de145970",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ea55264b9d60325bc7a5c15d78e9063de145970",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ea55264b9d60325bc7a5c15d78e9063de145970/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d7066527a456f8e1f4f603fe104b0bd9d864559",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d7066527a456f8e1f4f603fe104b0bd9d864559",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d7066527a456f8e1f4f603fe104b0bd9d864559"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d2cb618d4e6f632ce078146dde552ed3234e7d4d",
        "filename": "test/sanitizer_suppressions/lsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ea55264b9d60325bc7a5c15d78e9063de145970/test/sanitizer_suppressions/lsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ea55264b9d60325bc7a5c15d78e9063de145970/test/sanitizer_suppressions/lsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/lsan?ref=7ea55264b9d60325bc7a5c15d78e9063de145970",
        "patch": "@@ -1,5 +1,4 @@\n # Suppress warnings triggered in dependencies\n-leak:libcrypto\n leak:libqminimal\n leak:libQt5Core\n leak:libQt5Gui"
      }
    ]
  },
  {
    "sha": "ea3c7e585c382998212fd7f41114462a8168a734",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTNjN2U1ODVjMzgyOTk4MjEyZmQ3ZjQxMTE0NDYyYTgxNjhhNzM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:04:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:04:43Z"
      },
      "message": "test: Remove libssl-dev packages from CI scripts",
      "tree": {
        "sha": "4f6bcd4ce2e3b32c5ebe4536dfbbd43d2f9f9f6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f6bcd4ce2e3b32c5ebe4536dfbbd43d2f9f9f6d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea3c7e585c382998212fd7f41114462a8168a734",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea3c7e585c382998212fd7f41114462a8168a734",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea3c7e585c382998212fd7f41114462a8168a734",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea3c7e585c382998212fd7f41114462a8168a734/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ea55264b9d60325bc7a5c15d78e9063de145970",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ea55264b9d60325bc7a5c15d78e9063de145970",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ea55264b9d60325bc7a5c15d78e9063de145970"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "38e5e6871b72740ae6e85cf580c60f74c0be9d8e",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=ea3c7e585c382998212fd7f41114462a8168a734",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "b0405bb7623f3f054a2ac33812f6a53c8f7f6f94",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=ea3c7e585c382998212fd7f41114462a8168a734",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang-8 llvm-8 python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "893c1f6b53c72a7f2ba9712d5e3c16fd6e8475b7",
        "filename": "ci/test/00_setup_env_native_trusty.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_trusty.sh?ref=ea3c7e585c382998212fd7f41114462a8168a734",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=ubuntu:14.04\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"install\""
      },
      {
        "sha": "9c38e87b48bd8dbcd6d001953284d9c400adc7c2",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea3c7e585c382998212fd7f41114462a8168a734/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=ea3c7e585c382998212fd7f41114462a8168a734",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=ubuntu:16.04\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      }
    ]
  },
  {
    "sha": "adbe15504713ddba6e9c024c59d977675d49e350",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGJlMTU1MDQ3MTNkZGJhNmU5YzAyNGM1OWQ5Nzc2NzVkNDllMzUw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-08T07:33:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:13:57Z"
      },
      "message": "doc: Add some better examples for scripted diff\n\nThe current example isn't too great, for example it uses `find` instead\nof `git ls-files`. Add a subsection with suggestions and examples.",
      "tree": {
        "sha": "83a4966da20fd8e58ce81de1f5e616a0eb2efde8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83a4966da20fd8e58ce81de1f5e616a0eb2efde8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adbe15504713ddba6e9c024c59d977675d49e350",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adbe15504713ddba6e9c024c59d977675d49e350",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/adbe15504713ddba6e9c024c59d977675d49e350",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adbe15504713ddba6e9c024c59d977675d49e350/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e65b4160e99fa86d6d840dce75cae29334afd1f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e65b4160e99fa86d6d840dce75cae29334afd1f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e65b4160e99fa86d6d840dce75cae29334afd1f2"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 31,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f9c18f2f54217306b1be5ce9664fb0a4bc87311",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 31,
        "deletions": 2,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adbe15504713ddba6e9c024c59d977675d49e350/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adbe15504713ddba6e9c024c59d977675d49e350/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=adbe15504713ddba6e9c024c59d977675d49e350",
        "patch": "@@ -35,6 +35,7 @@ Developer Notes\n     - [GUI](#gui)\n     - [Subtrees](#subtrees)\n     - [Scripted diffs](#scripted-diffs)\n+        - [Suggestions and examples](#suggestions-and-examples)\n     - [Release notes](#release-notes)\n     - [RPC interface guidelines](#rpc-interface-guidelines)\n \n@@ -889,7 +890,7 @@ Scripted diffs\n For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n-does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n+does exactly what it is supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n on the new master commit).\n \n To create a scripted-diff:\n@@ -910,7 +911,35 @@ For development, it might be more convenient to verify all scripted-diffs in a r\n test/lint/commit-script-check.sh origin/master..HEAD\n ```\n \n-Commit [`bb81e173`](https://github.com/bitcoin/bitcoin/commit/bb81e173) is an example of a scripted-diff.\n+### Suggestions and examples\n+\n+If you need to replace in multiple files, prefer `git ls-files` to `find` or globbing, and `git grep` to `grep`, to\n+avoid changing files that are not under version control.\n+\n+For efficient replacement scripts, reduce the selection to the files that potentially need to be modified, so for\n+example, instead of a blanket `git ls-files src | xargs sed -i s/apple/orange/`, use\n+`git grep -l apple src | xargs sed -i s/apple/orange/`.\n+\n+Also, it is good to keep the selection of files as specific as possible \u2014 for example, replace only in directories where\n+you expect replacements \u2014 because it reduces the risk that a rebase of your commit by re-running the script will\n+introduce accidental changes.\n+\n+Some good examples of scripted-diff:\n+\n+- [scripted-diff: Rename InitInterfaces to NodeContext](https://github.com/bitcoin/bitcoin/commit/301bd41a2e6765b185bd55f4c541f9e27aeea29d)\n+uses an elegant script to replace occurences of multiple terms in all source files.\n+\n+- [scripted-diff: Remove g_connman, g_banman globals](https://github.com/bitcoin/bitcoin/commit/301bd41a2e6765b185bd55f4c541f9e27aeea29d)\n+replaces specific terms in a list of specific source files.\n+\n+- [scripted-diff: Replace fprintf with tfm::format](https://github.com/bitcoin/bitcoin/commit/fac03ec43a15ad547161e37e53ea82482cc508f9)\n+does a global replacement but excludes certain directories.\n+\n+To find all previous uses of scripted diffs in the repository, do:\n+\n+```\n+git log --grep=\"-BEGIN VERIFY SCRIPT-\"\n+```\n \n Release notes\n -------------"
      }
    ]
  },
  {
    "sha": "92db280817c5fa15f57db7ca361d51811f33a218",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MmRiMjgwODE3YzVmYTE1ZjU3ZGI3Y2EzNjFkNTE4MTFmMzNhMjE4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:21:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-19T14:21:37Z"
      },
      "message": "Merge #17411: doc: Add some better examples for scripted diff\n\nadbe15504713ddba6e9c024c59d977675d49e350 doc: Add some better examples for scripted diff (Wladimir J. van der Laan)\n\nPull request description:\n\n  The current example isn't too great, for example it uses `find` instead of `git ls-files`. Add a subsection with suggestions and examples.\n\n  Feel free to propose some other great examples to add.\n\nACKs for top commit:\n  hebasto:\n    re-ACK adbe15504713ddba6e9c024c59d977675d49e350\n\nTree-SHA512: 38f03716a122a1791c93abc052ea7572a3d2108b3d0d93dc95d3c4a7eb190c6b639d1cc66e4f74d378c4b11d6951dbd901d0973792f8f13cbeb9d9dcf4f8e037",
      "tree": {
        "sha": "cbd78a0882d42e84b6fb86509a0c4be6d62bc440",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cbd78a0882d42e84b6fb86509a0c4be6d62bc440"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/92db280817c5fa15f57db7ca361d51811f33a218",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3T+nEACgkQHkrtYphs\n0l1WuQgAouREyUtkJmJ4Qn3fo5LZutejHBP1frNUm9Mkh5VuxIJgj398M2DB7DxB\nIr+h+O4YeWXrDliQujlYxy3RCYkEeV/eOlbHVIJ+3zZrRtSKsC0hc+Zf8GcOCt97\n5/WtWSrO2qUqmXk6keoeXorojOPqmIf4FwUwoX7T44qBd6QqLKRTTU0xtoP92Ae5\n2DVniWkHpzbu9X7IepnBaBcaX73WV6e7x4fc8RdZ1eGIcTzdhYBVR2eEiHxLd1k6\nQNTQhEL3TvxhV/X77JxgdzsF5W1RFdyT+2at5AUoP71jjpA/jDVHTjGuC/fQlKxS\nVKmXyrGTyC8VJM9Pd9mfHC0VKgKLMw==\n=5KTW\n-----END PGP SIGNATURE-----",
        "payload": "tree cbd78a0882d42e84b6fb86509a0c4be6d62bc440\nparent 2065ef66ee6fb2b7bb442274f860813cad85b08c\nparent adbe15504713ddba6e9c024c59d977675d49e350\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574173291 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574173297 +0100\n\nMerge #17411: doc: Add some better examples for scripted diff\n\nadbe15504713ddba6e9c024c59d977675d49e350 doc: Add some better examples for scripted diff (Wladimir J. van der Laan)\n\nPull request description:\n\n  The current example isn't too great, for example it uses `find` instead of `git ls-files`. Add a subsection with suggestions and examples.\n\n  Feel free to propose some other great examples to add.\n\nACKs for top commit:\n  hebasto:\n    re-ACK adbe15504713ddba6e9c024c59d977675d49e350\n\nTree-SHA512: 38f03716a122a1791c93abc052ea7572a3d2108b3d0d93dc95d3c4a7eb190c6b639d1cc66e4f74d378c4b11d6951dbd901d0973792f8f13cbeb9d9dcf4f8e037\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92db280817c5fa15f57db7ca361d51811f33a218",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/92db280817c5fa15f57db7ca361d51811f33a218",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92db280817c5fa15f57db7ca361d51811f33a218/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2065ef66ee6fb2b7bb442274f860813cad85b08c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2065ef66ee6fb2b7bb442274f860813cad85b08c"
      },
      {
        "sha": "adbe15504713ddba6e9c024c59d977675d49e350",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adbe15504713ddba6e9c024c59d977675d49e350",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/adbe15504713ddba6e9c024c59d977675d49e350"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 31,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5f9c18f2f54217306b1be5ce9664fb0a4bc87311",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 31,
        "deletions": 2,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/92db280817c5fa15f57db7ca361d51811f33a218/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/92db280817c5fa15f57db7ca361d51811f33a218/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=92db280817c5fa15f57db7ca361d51811f33a218",
        "patch": "@@ -35,6 +35,7 @@ Developer Notes\n     - [GUI](#gui)\n     - [Subtrees](#subtrees)\n     - [Scripted diffs](#scripted-diffs)\n+        - [Suggestions and examples](#suggestions-and-examples)\n     - [Release notes](#release-notes)\n     - [RPC interface guidelines](#rpc-interface-guidelines)\n \n@@ -889,7 +890,7 @@ Scripted diffs\n For reformatting and refactoring commits where the changes can be easily automated using a bash script, we use\n scripted-diff commits. The bash script is included in the commit message and our Travis CI job checks that\n the result of the script is identical to the commit. This aids reviewers since they can verify that the script\n-does exactly what it's supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n+does exactly what it is supposed to do. It is also helpful for rebasing (since the same script can just be re-run\n on the new master commit).\n \n To create a scripted-diff:\n@@ -910,7 +911,35 @@ For development, it might be more convenient to verify all scripted-diffs in a r\n test/lint/commit-script-check.sh origin/master..HEAD\n ```\n \n-Commit [`bb81e173`](https://github.com/bitcoin/bitcoin/commit/bb81e173) is an example of a scripted-diff.\n+### Suggestions and examples\n+\n+If you need to replace in multiple files, prefer `git ls-files` to `find` or globbing, and `git grep` to `grep`, to\n+avoid changing files that are not under version control.\n+\n+For efficient replacement scripts, reduce the selection to the files that potentially need to be modified, so for\n+example, instead of a blanket `git ls-files src | xargs sed -i s/apple/orange/`, use\n+`git grep -l apple src | xargs sed -i s/apple/orange/`.\n+\n+Also, it is good to keep the selection of files as specific as possible \u2014 for example, replace only in directories where\n+you expect replacements \u2014 because it reduces the risk that a rebase of your commit by re-running the script will\n+introduce accidental changes.\n+\n+Some good examples of scripted-diff:\n+\n+- [scripted-diff: Rename InitInterfaces to NodeContext](https://github.com/bitcoin/bitcoin/commit/301bd41a2e6765b185bd55f4c541f9e27aeea29d)\n+uses an elegant script to replace occurences of multiple terms in all source files.\n+\n+- [scripted-diff: Remove g_connman, g_banman globals](https://github.com/bitcoin/bitcoin/commit/301bd41a2e6765b185bd55f4c541f9e27aeea29d)\n+replaces specific terms in a list of specific source files.\n+\n+- [scripted-diff: Replace fprintf with tfm::format](https://github.com/bitcoin/bitcoin/commit/fac03ec43a15ad547161e37e53ea82482cc508f9)\n+does a global replacement but excludes certain directories.\n+\n+To find all previous uses of scripted diffs in the repository, do:\n+\n+```\n+git log --grep=\"-BEGIN VERIFY SCRIPT-\"\n+```\n \n Release notes\n -------------"
      }
    ]
  },
  {
    "sha": "73b5505cfe0a8583718c708f7a99762c29d81274",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2I1NTA1Y2ZlMGE4NTgzNzE4YzcwOGY3YTk5NzYyYzI5ZDgxMjc0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T09:10:40Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T15:05:35Z"
      },
      "message": "refactor: Move SendCoinsRecipient in own header\n\nCo-authored-by: Gregory Sanders <gsanders87@gmail.com>",
      "tree": {
        "sha": "4e52770357dcf47920acfbd27535f4c8b78877d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e52770357dcf47920acfbd27535f4c8b78877d1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73b5505cfe0a8583718c708f7a99762c29d81274",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3UBSUACgkQQQEIES5+\nqB+hMg//W4ltFpQqN3DNRIXnqqLJYKNejqd+UFPwkMUggdBYgVq6Vn8LzhiqHSYR\nkRgIK3LDSRTePSLHWFzrmhAIKsjiZke2NK0NN+JHUPsgT2clcKDvG7DiWsAidZnP\nNuLOYyNxnHx8sGIWI3dIML5MAij1f/GqOdMHRGX6ujVJtKnpBgdVbnCf3OMDeFwV\ntb+yTs+oYvQZfbeHpoHPYOhQBKvlVwZDoFDJb48CFX82MmCuc4NW0dlE/NyEZMD/\nqtxwmfB5L8LvhixYi5T+U6QKUGyMFcVtMfXMNikd5SP0yR1esQu9sC2b2kRK4/AC\nYArK9pLAE8RfNje+vOOd21JrodkGq5b/dWyKcObVD26TK/W7fmxdBwpPailbD4yL\nD3VrCY9EYfCp/YyAzyC/wuZ7j1flECuFR0PsgIe1snBLvAIw3z509tguUMVsgJSE\ncImEpt29pZOHkgC7HVk8JE9NJwghk9zzLkgemh7TXxbnHTiIFApK5lpsETKKCI3i\nc3CkutmGsJC0gHvJz3C1mu62k+AgOEZ1Ttd2iTtiX0iK3MsKAtPayk/r91HU0pYz\nUz1JjLZ+9hwSBFPoCA3Ue0LL8NECAZN16prDKrikWuU5F2CKAUZFQjea+eIaFVNN\n7PScfIOnhRySDp+Q1No8yQfZpYGx5WFjT+zrNmT59xGi0YTCQK8=\n=LNY8\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e52770357dcf47920acfbd27535f4c8b78877d1\nparent 30521302f90e4856a7516867b32a4576fa6d98b3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574154640 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574175935 +0200\n\nrefactor: Move SendCoinsRecipient in own header\n\nCo-authored-by: Gregory Sanders <gsanders87@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b5505cfe0a8583718c708f7a99762c29d81274",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73b5505cfe0a8583718c708f7a99762c29d81274",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b5505cfe0a8583718c708f7a99762c29d81274/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3"
      }
    ],
    "stats": {
      "total": 141,
      "additions": 84,
      "deletions": 57
    },
    "files": [
      {
        "sha": "310e1b87c9c8e6efee0fc53aad1e0f3ee6d716e6",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -136,6 +136,7 @@ BITCOIN_QT_H = \\\n   qt/rpcconsole.h \\\n   qt/sendcoinsdialog.h \\\n   qt/sendcoinsentry.h \\\n+  qt/sendcoinsrecipient.h \\\n   qt/signverifymessagedialog.h \\\n   qt/splashscreen.h \\\n   qt/trafficgraphwidget.h \\"
      },
      {
        "sha": "20f5e2410c59a76575f12299e4e9775ac35e64ba",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -7,6 +7,7 @@\n #include <qt/bitcoinaddressvalidator.h>\n #include <qt/bitcoinunits.h>\n #include <qt/qvalidatedlineedit.h>\n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <base58.h>"
      },
      {
        "sha": "d9ed498d7cb8d2fec76435d3d41388c3826040a8",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -6,6 +6,7 @@\n #include <qt/forms/ui_openuridialog.h>\n \n #include <qt/guiutil.h>\n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <QUrl>"
      },
      {
        "sha": "f4cb995e4ad2b7929a59cfd6a968e4c64c52a912",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -36,6 +36,7 @@\n #include <config/bitcoin-config.h>\n #endif\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <QObject>"
      },
      {
        "sha": "ece1e2e9de51c6a14340b8c6e1d016dd5903aeaa",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_QT_RECEIVEREQUESTDIALOG_H\n #define BITCOIN_QT_RECEIVEREQUESTDIALOG_H\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <QDialog>"
      },
      {
        "sha": "a772db293d478ff1f5e1fc9d6ba750ad365b637d",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H\n #define BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <QAbstractTableModel>"
      },
      {
        "sha": "7b4b2120ef340ecb4349bc284b4d5da84c7c171f",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_QT_SENDCOINSENTRY_H\n #define BITCOIN_QT_SENDCOINSENTRY_H\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <QStackedWidget>"
      },
      {
        "sha": "12279fab64f88bf3e55c7b8595a62c9bb006d312",
        "filename": "src/qt/sendcoinsrecipient.h",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/sendcoinsrecipient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/sendcoinsrecipient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsrecipient.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_SENDCOINSRECIPIENT_H\n+#define BITCOIN_QT_SENDCOINSRECIPIENT_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <amount.h>\n+#include <serialize.h>\n+\n+#include <string>\n+\n+#include <QString>\n+\n+class SendCoinsRecipient\n+{\n+public:\n+    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n+    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n+        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n+\n+    // If from an unauthenticated payment request, this is used for storing\n+    // the addresses, e.g. address-A<br />address-B<br />address-C.\n+    // Info: As we don't need to process addresses in here when using\n+    // payment requests, we can abuse it for displaying an address list.\n+    // Todo: This is a hack, should be replaced with a cleaner solution!\n+    QString address;\n+    QString label;\n+    CAmount amount;\n+    // If from a payment request, this is used for storing the memo\n+    QString message;\n+    // Keep the payment request around as a serialized string to ensure\n+    // load/store is lossless.\n+    std::string sPaymentRequest;\n+    // Empty if no authentication or invalid signature/cert/etc.\n+    QString authenticatedMerchant;\n+\n+    bool fSubtractFeeFromAmount; // memory only\n+\n+    static const int CURRENT_VERSION = 1;\n+    int nVersion;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        std::string sAddress = address.toStdString();\n+        std::string sLabel = label.toStdString();\n+        std::string sMessage = message.toStdString();\n+        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n+\n+        READWRITE(this->nVersion);\n+        READWRITE(sAddress);\n+        READWRITE(sLabel);\n+        READWRITE(amount);\n+        READWRITE(sMessage);\n+        READWRITE(sPaymentRequest);\n+        READWRITE(sAuthenticatedMerchant);\n+\n+        if (ser_action.ForRead())\n+        {\n+            address = QString::fromStdString(sAddress);\n+            label = QString::fromStdString(sLabel);\n+            message = QString::fromStdString(sMessage);\n+            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n+        }\n+    }\n+};\n+\n+#endif // BITCOIN_QT_SENDCOINSRECIPIENT_H"
      },
      {
        "sha": "2c5783c09418980afbcfd1a216b05984b98a4e95",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_QT_WALLETCONTROLLER_H\n #define BITCOIN_QT_WALLETCONTROLLER_H\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n #include <support/allocators/secure.h>\n #include <sync.h>"
      },
      {
        "sha": "8087356f5ef7ce8533e736783b4f3fd974231787",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 57,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -9,9 +9,7 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <amount.h>\n #include <key.h>\n-#include <serialize.h>\n #include <script/standard.h>\n \n #include <qt/walletmodeltransaction.h>\n@@ -29,6 +27,7 @@ class AddressTableModel;\n class OptionsModel;\n class PlatformStyle;\n class RecentRequestsTableModel;\n+class SendCoinsRecipient;\n class TransactionTableModel;\n class WalletModelTransaction;\n \n@@ -47,61 +46,6 @@ QT_BEGIN_NAMESPACE\n class QTimer;\n QT_END_NAMESPACE\n \n-class SendCoinsRecipient\n-{\n-public:\n-    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n-    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n-        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n-\n-    // If from an unauthenticated payment request, this is used for storing\n-    // the addresses, e.g. address-A<br />address-B<br />address-C.\n-    // Info: As we don't need to process addresses in here when using\n-    // payment requests, we can abuse it for displaying an address list.\n-    // Todo: This is a hack, should be replaced with a cleaner solution!\n-    QString address;\n-    QString label;\n-    CAmount amount;\n-    // If from a payment request, this is used for storing the memo\n-    QString message;\n-    // Keep the payment request around as a serialized string to ensure\n-    // load/store is lossless.\n-    std::string sPaymentRequest;\n-    // Empty if no authentication or invalid signature/cert/etc.\n-    QString authenticatedMerchant;\n-\n-    bool fSubtractFeeFromAmount; // memory only\n-\n-    static const int CURRENT_VERSION = 1;\n-    int nVersion;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        std::string sAddress = address.toStdString();\n-        std::string sLabel = label.toStdString();\n-        std::string sMessage = message.toStdString();\n-        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n-\n-        READWRITE(this->nVersion);\n-        READWRITE(sAddress);\n-        READWRITE(sLabel);\n-        READWRITE(amount);\n-        READWRITE(sMessage);\n-        READWRITE(sPaymentRequest);\n-        READWRITE(sAuthenticatedMerchant);\n-\n-        if (ser_action.ForRead())\n-        {\n-            address = QString::fromStdString(sAddress);\n-            label = QString::fromStdString(sLabel);\n-            message = QString::fromStdString(sMessage);\n-            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n-        }\n-    }\n-};\n-\n /** Interface to Bitcoin wallet from Qt view code. */\n class WalletModel : public QObject\n {"
      },
      {
        "sha": "73c639d27cd019d213854c15539d73753d452039",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b5505cfe0a8583718c708f7a99762c29d81274/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=73b5505cfe0a8583718c708f7a99762c29d81274",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_QT_WALLETMODELTRANSACTION_H\n #define BITCOIN_QT_WALLETMODELTRANSACTION_H\n \n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodel.h>\n \n #include <amount.h>"
      }
    ]
  },
  {
    "sha": "a53e9895db7617c879858ca27e38e6aaf35f6075",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTNlOTg5NWRiNzYxN2M4Nzk4NThjYTI3ZTM4ZTZhYWYzNWY2MDc1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T10:08:01Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T15:05:35Z"
      },
      "message": "refactor: Nuke walletmodel circular dependency",
      "tree": {
        "sha": "f5680d13d73889e873934c7041add7266a8824bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5680d13d73889e873934c7041add7266a8824bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a53e9895db7617c879858ca27e38e6aaf35f6075",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3UBS0ACgkQQQEIES5+\nqB98mw//UUobXpDDVhqM9ts5oTTjzGVd/xwQMWSFjRgJ2bcYYwVH36uNDjccN/2r\n/v9FKEql6yymF8Fpl3HO+4IG4F+W63CYCJHtwN4U3Jnyn/8FOQKSb25KOj91fj/7\nMS0HhtBfTmHilH4AcsnRa0qcOh7btb8d2pL2tWuexWQN8JM2nlSOp4W7gDYe71CA\nLVHe57O+I/s6F7c7al8DZrKM3j/iQ8+UFDutNPCX731V/Q+Ra1XfpfpQpBAxbq2K\nQcMjSkJMuQN9ECM6ieQkeMXYPprslAtgYt/Ne+fOMHn/tAyxzuDoXXGWLvGshBOz\nhoD1CMUcH2/7t1znIst5XLeTKQF+JpBr3Xo2ClS23e0MZdslD75XQ1mrOW01IhpL\nD79F/i0ZSi/dSnj3vWNTaZc7dL4UDJd3Azb7snOdimyg+vj054yWmDhoAvg0iz+4\n+P1uaMekYpAifI1cTj6uesDU/bXK9tfqxtr2vs03uU8XfOzlBZfmRXut5BQEKner\nF8NQH1kj3DcGaUTirogL9i4IM/0GKUT9m7opsP993Ls+TrF9sgnwfghhvmiqTaY/\nHlTSAzaI+Y4aV8XgoD+lTO/vSZF1IUy29KvXQT6q8LX0vKzykl0OwyzsES0Llx1J\noEfwoA9gMQz+0jJhSsWRoMh/6lEmNs9VCJj5XeuYMm2Vm0Z8C+M=\n=ikz/\n-----END PGP SIGNATURE-----",
        "payload": "tree f5680d13d73889e873934c7041add7266a8824bd\nparent 49c4211c0435e3b27c8107a332de22e9cad84390\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574158081 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574175935 +0200\n\nrefactor: Nuke walletmodel circular dependency\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a53e9895db7617c879858ca27e38e6aaf35f6075",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a53e9895db7617c879858ca27e38e6aaf35f6075",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a53e9895db7617c879858ca27e38e6aaf35f6075/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49c4211c0435e3b27c8107a332de22e9cad84390",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c4211c0435e3b27c8107a332de22e9cad84390",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49c4211c0435e3b27c8107a332de22e9cad84390"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6d4ce4a7e43ecf1757060820de420477aafb841c",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a53e9895db7617c879858ca27e38e6aaf35f6075/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a53e9895db7617c879858ca27e38e6aaf35f6075/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=a53e9895db7617c879858ca27e38e6aaf35f6075",
        "patch": "@@ -37,13 +37,16 @@\n #endif\n \n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <QObject>\n #include <QString>\n \n class OptionsModel;\n \n+namespace interfaces {\n+class Node;\n+} // namespace interfaces\n+\n QT_BEGIN_NAMESPACE\n class QApplication;\n class QByteArray;"
      },
      {
        "sha": "9a93798aef8b745387e4a4bd1fd4cbca9ba02d32",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a53e9895db7617c879858ca27e38e6aaf35f6075/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a53e9895db7617c879858ca27e38e6aaf35f6075/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=a53e9895db7617c879858ca27e38e6aaf35f6075",
        "patch": "@@ -15,11 +15,12 @@\n \n #include <consensus/consensus.h>\n #include <interfaces/node.h>\n+#include <interfaces/wallet.h>\n #include <key_io.h>\n-#include <validation.h>\n+#include <policy/policy.h>\n #include <script/script.h>\n #include <util/system.h>\n-#include <policy/policy.h>\n+#include <validation.h>\n #include <wallet/ismine.h>\n \n #include <stdint.h>"
      },
      {
        "sha": "8b320832f05d21831653e9f347ad228a95964736",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a53e9895db7617c879858ca27e38e6aaf35f6075/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a53e9895db7617c879858ca27e38e6aaf35f6075/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=a53e9895db7617c879858ca27e38e6aaf35f6075",
        "patch": "@@ -18,7 +18,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"qt/bitcoingui -> qt/walletframe -> qt/bitcoingui\"\n     \"qt/bitcoingui -> qt/walletview -> qt/bitcoingui\"\n     \"qt/clientmodel -> qt/peertablemodel -> qt/clientmodel\"\n-    \"qt/paymentserver -> qt/walletmodel -> qt/paymentserver\"\n     \"qt/recentrequeststablemodel -> qt/walletmodel -> qt/recentrequeststablemodel\"\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\""
      }
    ]
  },
  {
    "sha": "5f50599ae7077ae9b9b56edb8892387b6ddc460a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjUwNTk5YWU3MDc3YWU5YjliNTZlZGI4ODkyMzg3YjZkZGM0NjBh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T11:45:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T15:05:35Z"
      },
      "message": "refactor: Cleanup headers from walletmodel.h",
      "tree": {
        "sha": "47756acc0a8a2f61e283bb6e7b4bfe96849110f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47756acc0a8a2f61e283bb6e7b4bfe96849110f8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f50599ae7077ae9b9b56edb8892387b6ddc460a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3UBS4ACgkQQQEIES5+\nqB+JkBAAkrLYcyNNwwlNPINin1s/UWDXetEiU/k8rrpzaOWoA3P4Y6X1kfVdUymJ\nisApSynBb/h8f5G9mIy29FNT2Ls8MploVg+FszcN7UeCcU731V+ybkZCWWhyfMQm\nFEWndcdjw7zPPkuV/96FfTU85weItB208pguxn6AOTGj4Ls2Yif7chraJWUfkiGP\n0lXXcc6GQuTY2dpAnLdbMaOYaHUap5QjhYI720v3SK9qySHzODUy1MdTrqeO74u0\nF8MUouLu+tRKQ6jKOEbh7Lx1v/hGZiuQy7AH/B/sY31LG4J+dqhtIGp8sUE7vGdb\nsce+GNDJE+EUW96EuWxKmR/BPVNMW81lmQ/6zIKk+KnLs7Cmv8zoves3E2g1r433\n2Uormg07M4WxxBX3JfuZdCtMWXrIo12KSaXSkZ7vmeuc3KfK5SvKRYccFv8gYsEE\n8ox9qGQZC2lBGs/zG7We1Zxo16T9zFVilQbBU5oDYg4Vhe1ltwSQx7dDHAIVu8NZ\nLDI3pl73yGha8DFQJzSh6F9cPkkI5E81bxntN5xK8q9fLGXSbR9WUc0a0G9GrRvZ\n8s6ewQCkSM8Fnt5Ln9jFgjFjbvTZ4eGtyUtZZR3X9R3RX3SPPuSJlgyhcEsYs7f+\n2cYbq8YAZZhGpIOgjEhm/u8jTim7MsWxFhOUVEPAYyZLPwWx0SE=\n=M03W\n-----END PGP SIGNATURE-----",
        "payload": "tree 47756acc0a8a2f61e283bb6e7b4bfe96849110f8\nparent a53e9895db7617c879858ca27e38e6aaf35f6075\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574163932 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574175935 +0200\n\nrefactor: Cleanup headers from walletmodel.h\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f50599ae7077ae9b9b56edb8892387b6ddc460a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f50599ae7077ae9b9b56edb8892387b6ddc460a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f50599ae7077ae9b9b56edb8892387b6ddc460a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a53e9895db7617c879858ca27e38e6aaf35f6075",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a53e9895db7617c879858ca27e38e6aaf35f6075",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a53e9895db7617c879858ca27e38e6aaf35f6075"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "6a0143ac7e2b7f42c2ca8f040f3df290b5a72247",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -7,7 +7,6 @@\n \n #include <qt/guiutil.h>\n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <QUrl>\n "
      },
      {
        "sha": "2674c9b953276501d0adf3f7cfbb544cdff7e3b0",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -8,6 +8,7 @@\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n+#include <qt/walletmodel.h>\n \n #include <QClipboard>\n #include <QPixmap>"
      },
      {
        "sha": "1bb43ce6d18d7115afea8db9dbb3729616940187",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -6,10 +6,11 @@\n #define BITCOIN_QT_RECEIVEREQUESTDIALOG_H\n \n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <QDialog>\n \n+class WalletModel;\n+\n namespace Ui {\n     class ReceiveRequestDialog;\n }"
      },
      {
        "sha": "6d933f46d6e24a924992ced3b30a180e363e156e",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -7,6 +7,7 @@\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n+#include <qt/walletmodel.h>\n \n #include <clientversion.h>\n #include <streams.h>"
      },
      {
        "sha": "30578b7a03cea8decca11e5ec38b2446f82660d6",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -6,12 +6,13 @@\n #define BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H\n \n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <QAbstractTableModel>\n #include <QStringList>\n #include <QDateTime>\n \n+class WalletModel;\n+\n class RecentRequestEntry\n {\n public:"
      },
      {
        "sha": "ad37e091142348594f47bd9cfd82d1c062d1c2ff",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -14,6 +14,7 @@\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n+#include <qt/walletmodel.h>\n \n #include <QApplication>\n #include <QClipboard>"
      },
      {
        "sha": "aa69d30f9974e956b740121377d07ee0c26ffb29",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -6,13 +6,16 @@\n #define BITCOIN_QT_SENDCOINSENTRY_H\n \n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <QStackedWidget>\n \n class WalletModel;\n class PlatformStyle;\n \n+namespace interfaces {\n+class Node;\n+} // namespace interfaces\n+\n namespace Ui {\n     class SendCoinsEntry;\n }"
      },
      {
        "sha": "7413a1f09e30ba288788ec955196e0bf19c169c0",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -2,17 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/walletcontroller.h>\n+\n #include <qt/askpassphrasedialog.h>\n #include <qt/createwalletdialog.h>\n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n-#include <qt/walletcontroller.h>\n-\n-#include <wallet/wallet.h>\n+#include <qt/walletmodel.h>\n \n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n #include <util/string.h>\n+#include <wallet/wallet.h>\n \n #include <algorithm>\n "
      },
      {
        "sha": "956245775e9ce5836d6c2c99dde7909ac101332b",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f50599ae7077ae9b9b56edb8892387b6ddc460a/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "patch": "@@ -6,7 +6,6 @@\n #define BITCOIN_QT_WALLETCONTROLLER_H\n \n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n #include <support/allocators/secure.h>\n #include <sync.h>\n \n@@ -24,10 +23,12 @@\n \n class OptionsModel;\n class PlatformStyle;\n+class WalletModel;\n \n namespace interfaces {\n class Handler;\n class Node;\n+class Wallet;\n } // namespace interfaces\n \n class AskPassphraseDialog;"
      }
    ]
  },
  {
    "sha": "567cb44eb95785c8df93a3844207d17f4c390372",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjdjYjQ0ZWI5NTc4NWM4ZGY5M2EzODQ0MjA3ZDE3ZjRjMzkwMzcy",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T09:27:35Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T15:07:18Z"
      },
      "message": "refactor: Nuke guiutil circular dependency\n\nCo-authored-by: Gregory Sanders <gsanders87@gmail.com>",
      "tree": {
        "sha": "acbe12b901fcf8942d61f9fac72371af06085564",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/acbe12b901fcf8942d61f9fac72371af06085564"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/567cb44eb95785c8df93a3844207d17f4c390372",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3UBS0ACgkQQQEIES5+\nqB9JNg/+JRlmGj9fM/Nhij+zQDkkO4m/2C1er2kK9LxsM90onGVjXnCtTFbP+VY+\nd9OtY1LNgRCc7HZkgecALyoHvyhE7k7HDIrMMTFoRJuWMW3h+iZQjYdbKR6wR6tz\nji4lr6+CtkBWjHnOQmHpCHJErfOkmo4X84GXm2hUSK8wxCnaM/CO9N3GKArEAvxq\n41YVj35g4uBdj3S0wwOVwKvQ17n4GP71CoU7ekfiyeZcHN/RiHv90O63JGDArpC8\nsIYFf5vaJ77ckOpVanVu9cocXPrOaxluNrBCGWh0hsc7qqsJtRT6D/14D1kfAgpu\nHBLvitVNPVaR/z2JMGXW6p/4nuhmo8dPYlgm4Sjbcr+9FW/oGMBO5Tl7XPX0e0Di\nU1Mfwmob1wQLtNXHeJZBOayFyygPFsKKj/FBl4p5bSGcbR3w2KiBkJPSa4sQg7YA\nS/8aq+x/bATqtrZHIaYAoPe9p8k1451ZoARoeKkGpTeyowm6cOfjBazSrFrfpkLw\nfEth4IiTJByC/h1guHQF5ZA2l0Gde6rarzZKJHq40ZxHWJDu2H3RY/LFZSm0U9n9\nLSGog61G5Xf+U1RhQi/le/l8SC5OwKGBga7RixXvIZ1BackXg5esYazfqRnXFHfH\nF2I8aBaMBbZM4nKLFOcfWsviiAFpDIjPdj3k1tpSzfbszhHYXM4=\n=4eJY\n-----END PGP SIGNATURE-----",
        "payload": "tree acbe12b901fcf8942d61f9fac72371af06085564\nparent 73b5505cfe0a8583718c708f7a99762c29d81274\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574155655 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574176038 +0200\n\nrefactor: Nuke guiutil circular dependency\n\nCo-authored-by: Gregory Sanders <gsanders87@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/567cb44eb95785c8df93a3844207d17f4c390372",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/567cb44eb95785c8df93a3844207d17f4c390372",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/567cb44eb95785c8df93a3844207d17f4c390372/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73b5505cfe0a8583718c708f7a99762c29d81274",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b5505cfe0a8583718c708f7a99762c29d81274",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73b5505cfe0a8583718c708f7a99762c29d81274"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "31e62ab63da8df930e768c2ca2fb7314db04146c",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/567cb44eb95785c8df93a3844207d17f4c390372/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/567cb44eb95785c8df93a3844207d17f4c390372/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=567cb44eb95785c8df93a3844207d17f4c390372",
        "patch": "@@ -8,7 +8,6 @@\n #include <qt/bitcoinunits.h>\n #include <qt/qvalidatedlineedit.h>\n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <base58.h>\n #include <chainparams.h>"
      },
      {
        "sha": "3c32b0cbcb499f327165113560327317b5dd9c23",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/567cb44eb95785c8df93a3844207d17f4c390372/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/567cb44eb95785c8df93a3844207d17f4c390372/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=567cb44eb95785c8df93a3844207d17f4c390372",
        "patch": "@@ -28,7 +28,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\"\n-    \"qt/guiutil -> qt/walletmodel -> qt/optionsmodel -> qt/guiutil\"\n     \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"wallet/scriptpubkeyman -> wallet/wallet -> wallet/scriptpubkeyman\"\n )"
      }
    ]
  },
  {
    "sha": "49c4211c0435e3b27c8107a332de22e9cad84390",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWM0MjExYzA0MzVlM2IyN2M4MTA3YTMzMmRlMjJlOWNhZDg0Mzkw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T09:56:42Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T15:05:35Z"
      },
      "message": "refactor: Nuke walletmodeltransaction circular dep",
      "tree": {
        "sha": "23655f59b458c3b5e1e7bd44d9fb80008ea8bfb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23655f59b458c3b5e1e7bd44d9fb80008ea8bfb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49c4211c0435e3b27c8107a332de22e9cad84390",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3UBS0ACgkQQQEIES5+\nqB9DvQ//bsH4/sXprSSufPijT2dSU5hCehe1elNrycVgBewVMFOHdXt6wGHA7IEy\n2+MK1BOaNNSR3G49BxQolKWx3qTrnPLsxs10HG/rqs4UF1ULM/pvX42RQ0uf4BvY\noEdl98TbVSKbnUEmpQT+xCdrkwKzAH08Rktg3ItFuF3R61NFHdDmAnEHDG58nHmO\nhGWjx203XoR44J7bHSQtB6kuDMvbRKihts5GMwi62keSin3rBPmCp/rsugx+qI5L\ndzYrOrVGeoIMjTntx5JzYm1qqr/7ZXPEOAdKXfdJDRfBuX5ETuQdtTw7uAOAH9kB\nSX9dDQdDhLLc7v0DxQD2Nz91MsR5XyOUl26c4S6QGTi0GL5GMiQvMldlbxT0PhjQ\nVrupDqlaZT3pH08bimOBpcEANT/RrbpKgKvx1gvkkjcXjIo4ceRngfGDyG4l1Ke8\n92g0ICIFP72JI/qRpYioJal4sr3pUj3n6MCBF3i5amCPhrQZV3YKLSH7sNQIRBKH\nNwwti0hpf91MHk94UxmAGSJcdH6aLLc13rKINxiNOMyCS0p3SwpjL40RQnsFMlo+\nWa4rcrZO8dwfY1s4Cxx1Tel/+7XWvH8/ythjlGreqCtW5mfIyVSqh5S0FuhsmSM6\nDiXVlGQR6LywBkDbLaEuQkxR4C8va4itLdxs8In4b+pkWH57uiU=\n=0Krc\n-----END PGP SIGNATURE-----",
        "payload": "tree 23655f59b458c3b5e1e7bd44d9fb80008ea8bfb9\nparent 567cb44eb95785c8df93a3844207d17f4c390372\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574157402 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574175935 +0200\n\nrefactor: Nuke walletmodeltransaction circular dep\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c4211c0435e3b27c8107a332de22e9cad84390",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49c4211c0435e3b27c8107a332de22e9cad84390",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49c4211c0435e3b27c8107a332de22e9cad84390/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "567cb44eb95785c8df93a3844207d17f4c390372",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/567cb44eb95785c8df93a3844207d17f4c390372",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/567cb44eb95785c8df93a3844207d17f4c390372"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9e5d285e8cee63c0ae9b911d006e970cae946514",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49c4211c0435e3b27c8107a332de22e9cad84390/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49c4211c0435e3b27c8107a332de22e9cad84390/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=49c4211c0435e3b27c8107a332de22e9cad84390",
        "patch": "@@ -5,8 +5,8 @@\n #ifndef BITCOIN_QT_WALLETMODELTRANSACTION_H\n #define BITCOIN_QT_WALLETMODELTRANSACTION_H\n \n+#include <primitives/transaction.h>\n #include <qt/sendcoinsrecipient.h>\n-#include <qt/walletmodel.h>\n \n #include <amount.h>\n "
      },
      {
        "sha": "7807953c1218dbe1bf457e1e77edcf83403889d8",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49c4211c0435e3b27c8107a332de22e9cad84390/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49c4211c0435e3b27c8107a332de22e9cad84390/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=49c4211c0435e3b27c8107a332de22e9cad84390",
        "patch": "@@ -22,7 +22,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"qt/recentrequeststablemodel -> qt/walletmodel -> qt/recentrequeststablemodel\"\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n-    \"qt/walletmodel -> qt/walletmodeltransaction -> qt/walletmodel\"\n     \"txmempool -> validation -> txmempool\"\n     \"wallet/coincontrol -> wallet/wallet -> wallet/coincontrol\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\""
      }
    ]
  },
  {
    "sha": "e1df922132539ee13d76eedade3b0e7355fd9437",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMWRmOTIyMTMyNTM5ZWUxM2Q3NmVlZGFkZTNiMGU3MzU1ZmQ5NDM3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T15:11:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T15:11:49Z"
      },
      "message": "Merge #17497: test: skip tests when utils haven't been compiled\n\na67352161c68fea9764cc31aff199f112d8572c6 test: skip tool_wallet test when bitcoin-wallet isn't compiled (fanquake)\ne9277baed64e1d4054a102e40b39a9aed7839c2f test: skip wallet_listreceivedby test when the cli isn't compiled (fanquake)\n621d398750d9f5ce3e7ec75ccb160b3534dcc436 test: skip bitcoin_cli test when the cli isn't compiled (fanquake)\n\nPull request description:\n\n  Don't try and run the `interface_bitcoin_cli.py` test when `bitcoin-cli` isn't available.\n\n  ```bash\n  stdout:\n  2019-11-17T01:51:41.623000Z TestFramework (INFO): Initializing test directory /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_\u20bf_\ud83c\udfc3_20191116_205141/interface_bitcoin_cli_0\n  2019-11-17T01:51:41.890000Z TestFramework (ERROR): Unexpected exception caught during testing\n  Traceback (most recent call last):\n    File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_framework.py\", line 111, in main\n      self.run_test()\n    File \"/Users/michael/github/bitcoin/test/functional/interface_bitcoin_cli.py\", line 18, in run_test\n      cli_response = self.nodes[0].cli(\"-version\").send_cli()\n    File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_node.py\", line 528, in send_cli\n      process = subprocess.Popen(p_args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n    File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/subprocess.py\", line 676, in __init__\n      restore_signals, start_new_session)\n    File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/subprocess.py\", line 1289, in _execute_child\n      raise child_exception_type(errno_num, err_msg)\n  FileNotFoundError: [Errno 2] No such file or directory: '/Users/michael/github/bitcoin/src/bitcoin-cli'\n  ```\n\nTop commit has no ACKs.\n\nTree-SHA512: de27513a615d9d21271a0948e012c3209351e7374efd19bfa1bb9cda77e8fffe15d99e3424e4dbfa8cf826084f8af1670726f4703bd2b6093e7d37df4bea64f0",
      "tree": {
        "sha": "4b338fb4962c5d95fcbb2d0633fb9dd6e5e5488b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b338fb4962c5d95fcbb2d0633fb9dd6e5e5488b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e1df922132539ee13d76eedade3b0e7355fd9437",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3UBjUACgkQ0upIUOdS\niyU1RhAAgfOFWPTn2uR2DvoLZaZq0C1BelIrdYwH7n41CcPXOtnNoWSrJDY/PqTU\nCo5j73r8HSl72oGKuy11ZdvfJDzheHVsylL9xKSPGKdphfUKgy5rMzHRtTzaswzl\nAHJT765aSnEC0umP1yX+jo00104bv9w191aOMiZHE5R/8H5UYAR+C3reA6yesEmZ\nbxIlEUfXX3Epv5frF/8CeDJcsXepxpEMxg2h0VHajZ0m09u4pyWUl0XZdNHvkb3X\ntFDMoMFIxoqbOJwP5gx8itKMIX0jl5r8nMhRj1gdjCOed7T2lMuXq7XCWjSgbJLW\nzavUlHxsVe4FL+GlTwwdMs9J2cgQnQUjuJMdi60Z+DRVJ0OAKoWPJ1oK3vcqbxAQ\nuiXnI0vBtoGT9iNs0uWUbPHCUBB/V22gERo2f/CO71DszsOgR212tQsuwKDJc7d/\nsyO3zgQ9R/RfcgS4rzq+NVhaavGqdmoVvwTJ7bwTsPUG6iRmHqzw1bY7tTU2Vcwz\nlfOWIK6ezBc0dOWyqim347AjR11HTrCoMsbxHT5O8Vi+b96RqQFynI0sAVrvG04u\nBrC0HzSxpJhY+hvxNt2GdPcqtf9o/WHx0JGNy3vSWck9fQALy0BxbgmD74BHVPPL\nWuWMwz/EnfMga2NZXteHfoUrL8EzrqcUnH5zRqE6cYWdXWhCL30=\n=kABM\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIs89SvDbtS2+neKFXGYfaZmeNLWCd0+VnmWLFfXFEurCP/wEA5FkyM9oHZG\n1zdfle7ILt4I8QRd1AY48AgSBZDoSVN/tQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEBWh4K0E8Xwd//DzCZ2P\nSucI8QRd1AY48AiQxT+445u7TQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEEDuMMgGnqGSj2dLu7cGqZwI8QRd1AY3\n8AiVIzqFAMAqwwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BCcVIT7OPdyDXxI/QO4L7fACPEEXdQGN/AIlUkB\nduppgvoAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4b338fb4962c5d95fcbb2d0633fb9dd6e5e5488b\nparent 92db280817c5fa15f57db7ca361d51811f33a218\nparent a67352161c68fea9764cc31aff199f112d8572c6\nauthor MarcoFalke <falke.marco@gmail.com> 1574176287 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574176309 -0500\n\nMerge #17497: test: skip tests when utils haven't been compiled\n\na67352161c68fea9764cc31aff199f112d8572c6 test: skip tool_wallet test when bitcoin-wallet isn't compiled (fanquake)\ne9277baed64e1d4054a102e40b39a9aed7839c2f test: skip wallet_listreceivedby test when the cli isn't compiled (fanquake)\n621d398750d9f5ce3e7ec75ccb160b3534dcc436 test: skip bitcoin_cli test when the cli isn't compiled (fanquake)\n\nPull request description:\n\n  Don't try and run the `interface_bitcoin_cli.py` test when `bitcoin-cli` isn't available.\n\n  ```bash\n  stdout:\n  2019-11-17T01:51:41.623000Z TestFramework (INFO): Initializing test directory /var/folders/z2/cn877pxd3czdfh47mfkmbwgm0000gn/T/test_runner_\u20bf_\ud83c\udfc3_20191116_205141/interface_bitcoin_cli_0\n  2019-11-17T01:51:41.890000Z TestFramework (ERROR): Unexpected exception caught during testing\n  Traceback (most recent call last):\n    File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_framework.py\", line 111, in main\n      self.run_test()\n    File \"/Users/michael/github/bitcoin/test/functional/interface_bitcoin_cli.py\", line 18, in run_test\n      cli_response = self.nodes[0].cli(\"-version\").send_cli()\n    File \"/Users/michael/github/bitcoin/test/functional/test_framework/test_node.py\", line 528, in send_cli\n      process = subprocess.Popen(p_args, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)\n    File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/subprocess.py\", line 676, in __init__\n      restore_signals, start_new_session)\n    File \"/Users/michael/.pyenv/versions/3.5.6/lib/python3.5/subprocess.py\", line 1289, in _execute_child\n      raise child_exception_type(errno_num, err_msg)\n  FileNotFoundError: [Errno 2] No such file or directory: '/Users/michael/github/bitcoin/src/bitcoin-cli'\n  ```\n\nTop commit has no ACKs.\n\nTree-SHA512: de27513a615d9d21271a0948e012c3209351e7374efd19bfa1bb9cda77e8fffe15d99e3424e4dbfa8cf826084f8af1670726f4703bd2b6093e7d37df4bea64f0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1df922132539ee13d76eedade3b0e7355fd9437",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e1df922132539ee13d76eedade3b0e7355fd9437",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1df922132539ee13d76eedade3b0e7355fd9437/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "92db280817c5fa15f57db7ca361d51811f33a218",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/92db280817c5fa15f57db7ca361d51811f33a218",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/92db280817c5fa15f57db7ca361d51811f33a218"
      },
      {
        "sha": "a67352161c68fea9764cc31aff199f112d8572c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a67352161c68fea9764cc31aff199f112d8572c6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a67352161c68fea9764cc31aff199f112d8572c6"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9687206ee18cd6cd7cb867bab05b1df5654aa33f",
        "filename": "test/config.ini.in",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1df922132539ee13d76eedade3b0e7355fd9437/test/config.ini.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1df922132539ee13d76eedade3b0e7355fd9437/test/config.ini.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/config.ini.in?ref=e1df922132539ee13d76eedade3b0e7355fd9437",
        "patch": "@@ -16,6 +16,7 @@ RPCAUTH=@abs_top_srcdir@/share/rpcauth/rpcauth.py\n # Which components are enabled. These are commented out by `configure` if they were disabled when running config.\n @ENABLE_WALLET_TRUE@ENABLE_WALLET=true\n @BUILD_BITCOIN_CLI_TRUE@ENABLE_CLI=true\n+@BUILD_BITCOIN_WALLET_TRUE@ENABLE_WALLET_TOOL=true\n @BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=true\n @ENABLE_FUZZ_TRUE@ENABLE_FUZZ=true\n @ENABLE_ZMQ_TRUE@ENABLE_ZMQ=true"
      },
      {
        "sha": "ec1c88ed53e86493b97e0556546cef65ffe03404",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=e1df922132539ee13d76eedade3b0e7355fd9437",
        "patch": "@@ -12,6 +12,9 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         self.num_nodes = 1\n \n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_cli()\n+\n     def run_test(self):\n         \"\"\"Main test logic\"\"\"\n "
      },
      {
        "sha": "6b6bbfd1f9d3f1e8e4dde0c6b3529cc7e9d687d6",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=e1df922132539ee13d76eedade3b0e7355fd9437",
        "patch": "@@ -596,6 +596,11 @@ def skip_if_no_wallet(self):\n         if not self.is_wallet_compiled():\n             raise SkipTest(\"wallet has not been compiled.\")\n \n+    def skip_if_no_wallet_tool(self):\n+        \"\"\"Skip the running test if bitcoin-wallet has not been compiled.\"\"\"\n+        if not self.is_wallet_tool_compiled():\n+            raise SkipTest(\"bitcoin-wallet has not been compiled\")\n+\n     def skip_if_no_cli(self):\n         \"\"\"Skip the running test if bitcoin-cli has not been compiled.\"\"\"\n         if not self.is_cli_compiled():\n@@ -609,6 +614,10 @@ def is_wallet_compiled(self):\n         \"\"\"Checks whether the wallet module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_WALLET\")\n \n+    def is_wallet_tool_compiled(self):\n+        \"\"\"Checks whether bitcoin-wallet was compiled.\"\"\"\n+        return self.config[\"components\"].getboolean(\"ENABLE_WALLET_TOOL\")\n+\n     def is_zmq_compiled(self):\n         \"\"\"Checks whether the zmq module was compiled.\"\"\"\n         return self.config[\"components\"].getboolean(\"ENABLE_ZMQ\")"
      },
      {
        "sha": "32ef25745621ede5b00a81b5ee5ad2a109731581",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=e1df922132539ee13d76eedade3b0e7355fd9437",
        "patch": "@@ -23,6 +23,7 @@ def set_test_params(self):\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n+        self.skip_if_no_wallet_tool()\n \n     def bitcoin_wallet_process(self, *args):\n         binary = self.config[\"environment\"][\"BUILDDIR\"] + '/src/bitcoin-wallet' + self.config[\"environment\"][\"EXEEXT\"]"
      },
      {
        "sha": "efa6a199ad5e669ced087cfeb0aed3829159022d",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e1df922132539ee13d76eedade3b0e7355fd9437/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=e1df922132539ee13d76eedade3b0e7355fd9437",
        "patch": "@@ -19,6 +19,7 @@ def set_test_params(self):\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n+        self.skip_if_no_cli()\n \n     def run_test(self):\n         # Generate block to get out of IBD"
      }
    ]
  },
  {
    "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGExZGE5ZWY4ZTRiNjczYzI5MGQ1Yjg4MjUyN2U2MjdhZTFiNDNh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-19T15:30:40Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-19T16:38:06Z"
      },
      "message": "Merge #17515: Remove straggling OpenSSL references from doc and build\n\nea3c7e585c382998212fd7f41114462a8168a734 test: Remove libssl-dev packages from CI scripts (Wladimir J. van der Laan)\n7ea55264b9d60325bc7a5c15d78e9063de145970 test: remove lsan suppression for libcrypto (Wladimir J. van der Laan)\n2d7066527a456f8e1f4f603fe104b0bd9d864559 build: remove libcrypto as internal dependency in libbitcoinconsensus.pc (Wladimir J. van der Laan)\n278751ea11f2cfe68b0c98f504f65586720cb5a4 doc: Remove ssl as a required dependency from build-unix (Wladimir J. van der Laan)\n\nPull request description:\n\n  Some doc and build cleanups following #17265.\n\n  I intentionally left the libssl-dev install in `gitian-win-signer.yml`, as it's necessary for the ossl signer.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 \ud83d\uddef\n  jamesob:\n    ACK https://github.com/bitcoin/bitcoin/pull/17515/commits/ea3c7e585c382998212fd7f41114462a8168a734\n  practicalswift:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 - nice!\n  fanquake:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 - thanks.\n\nTree-SHA512: 67ea35bdd6d6e512d69e6734713534c88cae033a2ed695677ea15c3e3d5ff570374e342775c88e60877fa43a19047853e7b2a433e2c9a4349a5c423726a7457e",
      "tree": {
        "sha": "71e8365997edee28f4f5d742de5375e6be248bb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/71e8365997edee28f4f5d742de5375e6be248bb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3UGm4ACgkQLuufXMCV\nJsFcPBAAgOtT5OfI8zss9Kv3EOa3Cjnk53BgO6SA8gvwp315TyVONfNnwafrPzML\nuQGYpsnws2aYIaZnJhwkVxRoGBkyERq7lj/mOPG6gpQ1T4wUA3TYKSq8yJtuZNBc\nRopkThFPhbG03E5ZgHD+vtHGCC5Ni1bO2c8tZ3qdg/pY3UBcZrRWzp1q5GX2m2H+\n3lCvoymI6IoetDmuRT+MlZgvJpvvdj3/8/FZ9g9ibkyQb55DXuUAao8zeB/sn4FR\nQKRrsjZOv5KLu/lAiV0BspcVOajTcnupflORwZCAgfjiMed4CnT21xSJ6bGF7LCy\nmkwgnK7WXpbyYkZEKV4P4GowcgQ10OfHRVwfGSPNfJ0zJdkqkSlrQ4hzrnQUKjbj\n2pzWLeznxJt6SMWRh8ScU/NdLYTS7IYWvKIOcr3qzVd2JFWeo0ovq98I7ITod+oF\nRo3y8L4C2AfOA8Qlz4kpwG4UvcPTVrAnsEE/2B4ZrK4SKnG2VTt8bEQlQoX+fmLz\nZjhLbdgBBDJbxcGyg6Stv5qL/yjiTAkwXNd4/PGaHf8c/B6w/ZWKADIVVGhaZmpf\nWX40NwlQGvPTHPBFecoNsrERnpY4p7zO88h9Wqp9x2xhOWHbzGPZ4DqTpqkYe85G\n+cwSCg55kiDGnWX7vErU4GSz/duhSd0sbkVWs4AkcLotLyJnEfE=\n=b/uo\n-----END PGP SIGNATURE-----",
        "payload": "tree 71e8365997edee28f4f5d742de5375e6be248bb2\nparent e1df922132539ee13d76eedade3b0e7355fd9437\nparent ea3c7e585c382998212fd7f41114462a8168a734\nauthor fanquake <fanquake@gmail.com> 1574177440 -0500\ncommitter fanquake <fanquake@gmail.com> 1574181486 -0500\n\nMerge #17515: Remove straggling OpenSSL references from doc and build\n\nea3c7e585c382998212fd7f41114462a8168a734 test: Remove libssl-dev packages from CI scripts (Wladimir J. van der Laan)\n7ea55264b9d60325bc7a5c15d78e9063de145970 test: remove lsan suppression for libcrypto (Wladimir J. van der Laan)\n2d7066527a456f8e1f4f603fe104b0bd9d864559 build: remove libcrypto as internal dependency in libbitcoinconsensus.pc (Wladimir J. van der Laan)\n278751ea11f2cfe68b0c98f504f65586720cb5a4 doc: Remove ssl as a required dependency from build-unix (Wladimir J. van der Laan)\n\nPull request description:\n\n  Some doc and build cleanups following #17265.\n\n  I intentionally left the libssl-dev install in `gitian-win-signer.yml`, as it's necessary for the ossl signer.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 \ud83d\uddef\n  jamesob:\n    ACK https://github.com/bitcoin/bitcoin/pull/17515/commits/ea3c7e585c382998212fd7f41114462a8168a734\n  practicalswift:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 - nice!\n  fanquake:\n    ACK ea3c7e585c382998212fd7f41114462a8168a734 - thanks.\n\nTree-SHA512: 67ea35bdd6d6e512d69e6734713534c88cae033a2ed695677ea15c3e3d5ff570374e342775c88e60877fa43a19047853e7b2a433e2c9a4349a5c423726a7457e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1df922132539ee13d76eedade3b0e7355fd9437",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1df922132539ee13d76eedade3b0e7355fd9437",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1df922132539ee13d76eedade3b0e7355fd9437"
      },
      {
        "sha": "ea3c7e585c382998212fd7f41114462a8168a734",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea3c7e585c382998212fd7f41114462a8168a734",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea3c7e585c382998212fd7f41114462a8168a734"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "38e5e6871b72740ae6e85cf580c60f74c0be9d8e",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "b0405bb7623f3f054a2ac33812f6a53c8f7f6f94",
        "filename": "ci/test/00_setup_env_native_fuzz.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_fuzz.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_fuzz.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_fuzz.sh?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang-8 llvm-8 python3 libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3 libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=false\n export RUN_FUNCTIONAL_TESTS=false"
      },
      {
        "sha": "893c1f6b53c72a7f2ba9712d5e3c16fd6e8475b7",
        "filename": "ci/test/00_setup_env_native_trusty.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_trusty.sh?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=ubuntu:14.04\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export RUN_FUNCTIONAL_TESTS=false\n export GOAL=\"install\""
      },
      {
        "sha": "9c38e87b48bd8dbcd6d001953284d9c400adc7c2",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -7,7 +7,7 @@\n export LC_ALL=C.UTF-8\n \n export DOCKER_NAME_TAG=ubuntu:16.04\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      },
      {
        "sha": "e799e709fa67cfadc1ce417e694d8a35f1474304",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -33,7 +33,6 @@ These dependencies are required:\n \n  Library     | Purpose          | Description\n  ------------|------------------|----------------------\n- libssl      | Crypto           | Random Number Generation, Elliptic Curve Cryptography\n  libboost    | Utility          | Library for threading, data structures, etc\n  libevent    | Networking       | OS independent asynchronous networking\n \n@@ -81,7 +80,7 @@ Build requirements:\n \n Now, you can either build from self-compiled [depends](/depends/README.md) or install the required dependencies:\n \n-    sudo apt-get install libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n+    sudo apt-get install libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev\n \n BerkeleyDB is required for the wallet.\n "
      },
      {
        "sha": "1ceab280bb114edd8e348dfa4821943f580e3805",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -8,4 +8,3 @@ Description: Library for the Bitcoin consensus protocol.\n Version: @PACKAGE_VERSION@\n Libs: -L${libdir} -lbitcoinconsensus\n Cflags: -I${includedir}\n-Requires.private: libcrypto"
      },
      {
        "sha": "d2cb618d4e6f632ce078146dde552ed3234e7d4d",
        "filename": "test/sanitizer_suppressions/lsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/test/sanitizer_suppressions/lsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/test/sanitizer_suppressions/lsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/lsan?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -1,5 +1,4 @@\n # Suppress warnings triggered in dependencies\n-leak:libcrypto\n leak:libqminimal\n leak:libQt5Core\n leak:libQt5Gui"
      }
    ]
  },
  {
    "sha": "dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGRkMDllYjMzZDE0ZmFiZGEwYWE0MGZhMDA4YjIzYjJiZDZlNTg5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T19:35:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T19:29:43Z"
      },
      "message": "test: Wait until mempool is loaded in wallet_abandonconflict",
      "tree": {
        "sha": "f4da87a55183c1ad8b8146c5654582e2edef5852",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f4da87a55183c1ad8b8146c5654582e2edef5852"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgWRAwAtaSKlL+6bIQlqmywLw+SqW0wGcWojorBwfAoWkGQyYgzSF5oM82t4WCB\nPLqPcyFKZSBMjntIl+AILsxnApPaWE4XFcBOr5Xmf6YpKDTYqAvwKRYDYIaOAa9m\nag0ZJusSXvihyPpDQVOvjB4D61hnZoVOBQn/tppl4q8vzZaM6NroFUygucc5/0fm\nGERCGWaem9JzqzPBaZpdDZ1qEVYW9I5PG0gT9O08B8khvILXuvfS1hfsOgA+PcTs\nhookeuZtWuYyPz9qNMRZ724/2+NFRCVtGRbbkmiT1jVFXvsw8GMGqSOat4wF9GSF\nC8FbDiE10X/K1+WpsDetBZd2hXhHSlgwtk0XA7FyPlXAwTiZzpJg44+hKVE+n6lr\nM2aHyaVwFR3fqShE7jrYuOoMNiz1YYAboGhPpxr5zG4nI6sEFbHRLwHK5T3nddp+\nXGL3YnN+Y+MHtmBMCg+L6PZrFuxFKYTMYPIqnFGXZImS3lQ4iOJRzvbbITBD5zlF\nLwh6KLNw\n=pOVu\n-----END PGP SIGNATURE-----",
        "payload": "tree f4da87a55183c1ad8b8146c5654582e2edef5852\nparent b4a1da9ef8e4b673c290d5b882527e627ae1b43a\nauthor MarcoFalke <falke.marco@gmail.com> 1574192158 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574191783 -0500\n\ntest: Wait until mempool is loaded in wallet_abandonconflict\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddd09eb33d14fabda0aa40fa008b23b2bd6e589/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1122daaf837028c8c633164e52e5497fca600631",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dddd09eb33d14fabda0aa40fa008b23b2bd6e589/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dddd09eb33d14fabda0aa40fa008b23b2bd6e589/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
        "patch": "@@ -18,6 +18,7 @@\n     assert_raises_rpc_error,\n     connect_nodes,\n     disconnect_nodes,\n+    wait_until,\n )\n \n \n@@ -97,6 +98,7 @@ def run_test(self):\n         # TODO: redo with eviction\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.0001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n \n         # Verify txs no longer in either node's mempool\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n@@ -124,6 +126,8 @@ def run_test(self):\n         # Verify that even with a low min relay fee, the tx is not reaccepted from wallet on startup once abandoned\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.00001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n+\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n         assert_equal(self.nodes[0].getbalance(), balance)\n \n@@ -144,6 +148,7 @@ def run_test(self):\n         # Remove using high relay fee again\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.0001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n         newbalance = self.nodes[0].getbalance()\n         assert_equal(newbalance, balance - Decimal(\"24.9996\"))"
      }
    ]
  },
  {
    "sha": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTJjNWZlMTQ3N2NlYzgwZDdlMDJmODI0ZGFiYTIxYTEwMjE3NThl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-19T22:55:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-19T22:56:23Z"
      },
      "message": "Fix CPUID subleaf iteration",
      "tree": {
        "sha": "f201d39c33957f9719189928acda780d6d872879",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f201d39c33957f9719189928acda780d6d872879"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba2c5fe1477cec80d7e02f824daba21a1021758e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba2c5fe1477cec80d7e02f824daba21a1021758e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba2c5fe1477cec80d7e02f824daba21a1021758e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "79f7bc93b1eceecfafdfb49c9417ab39dbb5ab86",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 4,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba2c5fe1477cec80d7e02f824daba21a1021758e/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba2c5fe1477cec80d7e02f824daba21a1021758e/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=ba2c5fe1477cec80d7e02f824daba21a1021758e",
        "patch": "@@ -198,12 +198,23 @@ void AddAllCPUID(CSHA512& hasher)\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n     for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+        uint32_t maxsub = 0;\n         for (uint32_t subleaf = 0;; ++subleaf) {\n             AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n-            // Iterate over subleaves for leaf 4, 11, 13\n-            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n-            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n-            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+            // Iterate subleafs for leaf values 4, 7, 11, 13\n+            if (leaf == 4) {\n+                if ((ax & 0x1f) == 0) break;\n+            } else if (leaf == 7) {\n+                if (subleaf == 0) maxsub = ax;\n+                if (subleaf == maxsub) break;\n+            } else if (leaf == 11) {\n+                if ((cx & 0xff00) == 0) break;\n+            } else if (leaf == 13) {\n+                if (ax == 0 && bx == 0 && cx == 0 && dx == 0) break;\n+            } else {\n+                // For any other leaf, stop after subleaf 0.\n+                break;\n+            }\n         }\n     }\n     // Iterate over all extended leaves"
      }
    ]
  },
  {
    "sha": "8f2d7737cc236b6122f30e31856eb3181960fba1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjJkNzczN2NjMjM2YjYxMjJmMzBlMzE4NTZlYjMxODE5NjBmYmEx",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-20T09:59:44Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2019-11-20T10:01:27Z"
      },
      "message": "test: add functional test for non-standard txs with too large scriptSig\n\nA transaction is rejected by the mempool with reason \"scriptsig-size\" if any of\nthe inputs' scriptSig is larger than 1650 bytes.",
      "tree": {
        "sha": "9f918a439a52b3c5afa5b8099a567ddc3dbae223",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9f918a439a52b3c5afa5b8099a567ddc3dbae223"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f2d7737cc236b6122f30e31856eb3181960fba1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f2d7737cc236b6122f30e31856eb3181960fba1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f2d7737cc236b6122f30e31856eb3181960fba1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f2d7737cc236b6122f30e31856eb3181960fba1/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0eef1d3ddfa3c7efe81e935c15236b17af0d6b81",
        "filename": "test/functional/mempool_accept.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f2d7737cc236b6122f30e31856eb3181960fba1/test/functional/mempool_accept.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f2d7737cc236b6122f30e31856eb3181960fba1/test/functional/mempool_accept.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_accept.py?ref=8f2d7737cc236b6122f30e31856eb3181960fba1",
        "patch": "@@ -267,6 +267,12 @@ def run_test(self):\n             rawtxs=[tx.serialize().hex()],\n         )\n         tx.deserialize(BytesIO(hex_str_to_bytes(raw_tx_reference)))\n+        tx.vin[0].scriptSig = CScript([b'a' * 1648]) # Some too large scriptSig (>1650 bytes)\n+        self.check_mempool_result(\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'scriptsig-size'}],\n+            rawtxs=[tx.serialize().hex()],\n+        )\n+        tx.deserialize(BytesIO(hex_str_to_bytes(raw_tx_reference)))\n         output_p2sh_burn = CTxOut(nValue=540, scriptPubKey=CScript([OP_HASH160, hash160(b'burn'), OP_EQUAL]))\n         num_scripts = 100000 // len(output_p2sh_burn.serialize())  # Use enough outputs to make the tx too large for our policy\n         tx.vout = [output_p2sh_burn] * num_scripts"
      }
    ]
  },
  {
    "sha": "6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDk2YmI4N2FmYzZiZjM0MDQ4NDFkZDFiYTcyZjA3OTBhYzVhYTA4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T11:24:21Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T11:27:10Z"
      },
      "message": "Merge #17008: build: bump libevent to 2.1.11 in depends\n\n02ac445b2fec60e028d2cc93bbf74a35e3d0f48e bump libevent to 2.1.11 in depends (stefanwouldgo)\n\nPull request description:\n\n  this doesn't need patches on Android anymore like 2.1.8 did.\n\nACKs for top commit:\n  laanwj:\n    ACK 02ac445b2fec60e028d2cc93bbf74a35e3d0f48e\n\nTree-SHA512: 1fbfe342ee15fa4c5cb417979bd6c443f7c7aa40a489accf8ccd7c919e5b08e859b3da6edeee3de484f6f156b35dd4e97c7e2c7971b59fc31029865585ccb296",
      "tree": {
        "sha": "8b6b87e571ede002366f3ab65de14827b4b4bee6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b6b87e571ede002366f3ab65de14827b4b4bee6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3VIw4ACgkQHkrtYphs\n0l1WzAgAoXjXmf7ESsdYTdn6usgv1je0zY/zJKB8231C387BhZTeJc7XaHSesF3P\nFym5/pBNTIOZj5ExLPDFXFQpvmmoD+9bsPgf/8/CVciYLu0tGslfH6WEPoOXHWFG\nR20IfBtJsJGDjBNxvGKUJAVuIGBb0wUzZVK6SE8bv+ydnwdxLEWNoihHdLcYeJYy\neSYhoAr9xVWWRvJXecncmoSrQ4cqW7Frhc702JBIO7lHHem1WquZzjJz83x0BKVs\n871Ahp7gOGjvbbxe0hU3qarxcZ/qPtY91+uwPP7y+d3GoBq+yzkh0+zeOWvUFiPL\niq2Ncdh/aC5OHHLtiWS16dFe+GnB2g==\n=kDJ6\n-----END PGP SIGNATURE-----",
        "payload": "tree 8b6b87e571ede002366f3ab65de14827b4b4bee6\nparent b4a1da9ef8e4b673c290d5b882527e627ae1b43a\nparent 02ac445b2fec60e028d2cc93bbf74a35e3d0f48e\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574249061 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574249230 +0100\n\nMerge #17008: build: bump libevent to 2.1.11 in depends\n\n02ac445b2fec60e028d2cc93bbf74a35e3d0f48e bump libevent to 2.1.11 in depends (stefanwouldgo)\n\nPull request description:\n\n  this doesn't need patches on Android anymore like 2.1.8 did.\n\nACKs for top commit:\n  laanwj:\n    ACK 02ac445b2fec60e028d2cc93bbf74a35e3d0f48e\n\nTree-SHA512: 1fbfe342ee15fa4c5cb417979bd6c443f7c7aa40a489accf8ccd7c919e5b08e859b3da6edeee3de484f6f156b35dd4e97c7e2c7971b59fc31029865585ccb296\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496bb87afc6bf3404841dd1ba72f0790ac5aa08/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      },
      {
        "sha": "02ac445b2fec60e028d2cc93bbf74a35e3d0f48e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ac445b2fec60e028d2cc93bbf74a35e3d0f48e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02ac445b2fec60e028d2cc93bbf74a35e3d0f48e"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 6,
      "deletions": 81
    },
    "files": [
      {
        "sha": "eb45e14f6fb95b19df8cd39d659f2564fbe75639",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 5,
        "deletions": 12,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6496bb87afc6bf3404841dd1ba72f0790ac5aa08/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6496bb87afc6bf3404841dd1ba72f0790ac5aa08/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
        "patch": "@@ -1,19 +1,12 @@\n package=libevent\n-$(package)_version=2.1.8-stable\n+$(package)_version=2.1.11-stable\n $(package)_download_path=https://github.com/libevent/libevent/archive/\n $(package)_file_name=release-$($(package)_version).tar.gz\n-$(package)_sha256_hash=316ddb401745ac5d222d7c529ef1eada12f58f6376a66c1118eee803cb70f83d\n-$(package)_patches=fix_android_arc4random_addrandom.patch\n+$(package)_sha256_hash=229393ab2bf0dc94694f21836846b424f3532585bac3468738b7bf752c03901e\n \n-ifneq (,$(findstring android,$(host)))\n-  define $(package)_preprocess_cmds\n-    ./autogen.sh && patch -p1 < $($(package)_patch_dir)/fix_android_arc4random_addrandom.patch\n-  endef\n-else\n-  define $(package)_preprocess_cmds\n-    ./autogen.sh\n-  endef\n-endif\n+define $(package)_preprocess_cmds\n+  ./autogen.sh\n+endef\n \n define $(package)_set_vars\n   $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress --disable-samples"
      },
      {
        "sha": "5bcc64bef6bc86e6f5336aedb89f03c7458f1402",
        "filename": "depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 68,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4a1da9ef8e4b673c290d5b882527e627ae1b43a/depends/patches/libevent/fix_android_arc4random_addrandom.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/fix_android_arc4random_addrandom.patch?ref=b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "patch": "@@ -1,68 +0,0 @@\n-From cadae3ab7abf45e61ecae8aac39d97d1f3cbd336 Mon Sep 17 00:00:00 2001\n-From: Lawrence Nahum <lawrence@greenaddress.it>\n-Date: Sun, 3 Dec 2017 22:56:09 +0100\n-Subject: [PATCH] fixup\n-\n----\n- configure.ac          | 1 +\n- evutil_rand.c         | 3 +++\n- include/event2/util.h | 4 ++--\n- 3 files changed, 6 insertions(+), 2 deletions(-)\n-\n-diff --git a/configure.ac b/configure.ac\n-index 7528d37..3bb2121 100644\n---- a/configure.ac\n-+++ b/configure.ac\n-@@ -341,6 +341,7 @@ dnl Checks for library functions.\n- AC_CHECK_FUNCS([ \\\n-   accept4 \\\n-   arc4random \\\n-+  arc4random_addrandom \\\n-   arc4random_buf \\\n-   eventfd \\\n-   epoll_create1 \\\n-diff --git a/evutil_rand.c b/evutil_rand.c\n-index 046a14b..3f0bf2c 100644\n---- a/evutil_rand.c\n-+++ b/evutil_rand.c\n-@@ -191,6 +191,7 @@ evutil_secure_rng_get_bytes(void *buf, size_t n)\n- {\n- \tev_arc4random_buf(buf, n);\n- }\n-+#ifdef HAVE_ARC4RANDOM_ADDRANDOM\n- \n- void\n- evutil_secure_rng_add_bytes(const char *buf, size_t n)\n-@@ -199,6 +200,8 @@ evutil_secure_rng_add_bytes(const char *buf, size_t n)\n- \t    n>(size_t)INT_MAX ? INT_MAX : (int)n);\n- }\n- \n-+#endif\n-+\n- void\n- evutil_free_secure_rng_globals_(void)\n- {\n-diff --git a/include/event2/util.h b/include/event2/util.h\n-index dd4bbb6..a9a169d 100644\n---- a/include/event2/util.h\n-+++ b/include/event2/util.h\n-@@ -841,7 +841,7 @@ int evutil_secure_rng_init(void);\n-  */\n- EVENT2_EXPORT_SYMBOL\n- int evutil_secure_rng_set_urandom_device_file(char *fname);\n--\n-+#ifdef HAVE_ARC4RANDOM_ADDRANDOM\n- /** Seed the random number generator with extra random bytes.\n- \n-     You should almost never need to call this function; it should be\n-@@ -858,7 +858,7 @@ int evutil_secure_rng_set_urandom_device_file(char *fname);\n-  */\n- EVENT2_EXPORT_SYMBOL\n- void evutil_secure_rng_add_bytes(const char *dat, size_t datlen);\n--\n-+#endif\n- #ifdef __cplusplus\n- }\n- #endif\n--- \n-2.14.3"
      },
      {
        "sha": "4b57ef2e912f408a8687776f5bd2099c1af0e7a4",
        "filename": "doc/dependencies.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6496bb87afc6bf3404841dd1ba72f0790ac5aa08/doc/dependencies.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6496bb87afc6bf3404841dd1ba72f0790ac5aa08/doc/dependencies.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dependencies.md?ref=6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
        "patch": "@@ -13,7 +13,7 @@ These are the dependencies currently used by Bitcoin Core. You can find instruct\n | FreeType | [2.7.1](https://download.savannah.gnu.org/releases/freetype) |  | No |  |  |\n | GCC |  | [4.8+](https://gcc.gnu.org/) (C++11 support) |  |  |  |\n | HarfBuzz-NG |  |  |  |  |  |\n-| libevent | [2.1.8-stable](https://github.com/libevent/libevent/releases) | 2.0.22 | No |  |  |\n+| libevent | [2.1.11-stable](https://github.com/libevent/libevent/releases) | 2.0.22 | No |  |  |\n | libpng |  |  |  |  | [Yes](https://github.com/bitcoin/bitcoin/blob/master/depends/packages/qt.mk) |\n | librsvg | |  |  |  |  |\n | MiniUPnPc | [2.0.20180203](http://miniupnp.free.fr/files) |  | No |  |  |"
      }
    ]
  },
  {
    "sha": "36191a8bb536ca5384de94795df2e113541052a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjE5MWE4YmI1MzZjYTUzODRkZTk0Nzk1ZGYyZTExMzU0MTA1MmEz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T11:30:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T11:43:55Z"
      },
      "message": "Merge #12461: scripted-diff: Rename key size consts to be relative to their class\n\n0580f86bb48004b797d4cb6273e7ffee0b0a0584 Fixup whitespace (Ben Woosley)\n47101bbb27d0e13ea2b40ce1c7ff0dba9030f369 scripted-diff: Rename CPubKey and CKey::*_KEY_SIZE and COMPRESSED_*_KEY_SIZE (Ben Woosley)\n\nPull request description:\n\n  ~~And introduce CPubKeySig to host code relative to key sigs.~~\n\nACKs for top commit:\n  meshcollider:\n    utACK https://github.com/bitcoin/bitcoin/pull/12461/commits/0580f86bb48004b797d4cb6273e7ffee0b0a0584\n\nTree-SHA512: 29aa0be54912358b138e391b9db78639786f56580493e590ec9f773c0e1b421740133d05a79be247c7ee57e71c9c9e41b9cb54088cb3c0e3f813f74f0895287b",
      "tree": {
        "sha": "759ad7fee91785bef265e427702d49f667e25cc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/759ad7fee91785bef265e427702d49f667e25cc3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/36191a8bb536ca5384de94795df2e113541052a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3VJvsACgkQHkrtYphs\n0l3HZQgAvHzkfuZszM7y5I7X9tD0I346p9PENnwDnN17+rD00j7TPzs9mn5jNbbQ\nfNotwEdWPdU/9OFyQWPhn+m/1hX8K9Qk2zsBh8Y6TSQY/9yFsE9HCdotLPRTmKnh\nV47xcWLnjWuhph81RG0YD1H8QiQr2o5djBSDCgqYN/3ihiFfi2e53K4KwYs1nY77\nxssBy9IOOTFH6HcGZnQH6/eqPjtUOm7YQEQp6FRiOUOks8aFfvvZD7MQ6J/sNXfv\n7XHPlfARJ3q/cqupQ+XObNe3NC6wYX9t2RrdBW8KPZKK7B9NVcPC5gbrjfKouEU3\nW8r98uVJdMppYatWJ4xImcghX3WAiQ==\n=pyMc\n-----END PGP SIGNATURE-----",
        "payload": "tree 759ad7fee91785bef265e427702d49f667e25cc3\nparent 6496bb87afc6bf3404841dd1ba72f0790ac5aa08\nparent 0580f86bb48004b797d4cb6273e7ffee0b0a0584\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574249433 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574250235 +0100\n\nMerge #12461: scripted-diff: Rename key size consts to be relative to their class\n\n0580f86bb48004b797d4cb6273e7ffee0b0a0584 Fixup whitespace (Ben Woosley)\n47101bbb27d0e13ea2b40ce1c7ff0dba9030f369 scripted-diff: Rename CPubKey and CKey::*_KEY_SIZE and COMPRESSED_*_KEY_SIZE (Ben Woosley)\n\nPull request description:\n\n  ~~And introduce CPubKeySig to host code relative to key sigs.~~\n\nACKs for top commit:\n  meshcollider:\n    utACK https://github.com/bitcoin/bitcoin/pull/12461/commits/0580f86bb48004b797d4cb6273e7ffee0b0a0584\n\nTree-SHA512: 29aa0be54912358b138e391b9db78639786f56580493e590ec9f773c0e1b421740133d05a79be247c7ee57e71c9c9e41b9cb54088cb3c0e3f813f74f0895287b\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36191a8bb536ca5384de94795df2e113541052a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/36191a8bb536ca5384de94795df2e113541052a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36191a8bb536ca5384de94795df2e113541052a3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6496bb87afc6bf3404841dd1ba72f0790ac5aa08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6496bb87afc6bf3404841dd1ba72f0790ac5aa08"
      },
      {
        "sha": "0580f86bb48004b797d4cb6273e7ffee0b0a0584",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0580f86bb48004b797d4cb6273e7ffee0b0a0584",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0580f86bb48004b797d4cb6273e7ffee0b0a0584"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 45,
      "deletions": 45
    },
    "files": [
      {
        "sha": "10b6668aae04c203679277a6f0c718312ab92d9b",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -83,13 +83,13 @@ static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *ou\n  * <http://www.secg.org/sec1-v2.pdf>. The optional parameters and publicKey fields are\n  * included.\n  *\n- * privkey must point to an output buffer of length at least CKey::PRIVATE_KEY_SIZE bytes.\n+ * privkey must point to an output buffer of length at least CKey::SIZE bytes.\n  * privkeylen must initially be set to the size of the privkey buffer. Upon return it\n  * will be set to the number of bytes used in the buffer.\n  * key32 must point to a 32-byte raw private key.\n  */\n static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, bool compressed) {\n-    assert(*privkeylen >= CKey::PRIVATE_KEY_SIZE);\n+    assert(*privkeylen >= CKey::SIZE);\n     secp256k1_pubkey pubkey;\n     size_t pubkeylen = 0;\n     if (!secp256k1_ec_pubkey_create(ctx, &pubkey, key32)) {\n@@ -115,11 +115,11 @@ static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *pr\n         memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n         memcpy(ptr, key32, 32); ptr += 32;\n         memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        pubkeylen = CPubKey::COMPRESSED_PUBLIC_KEY_SIZE;\n+        pubkeylen = CPubKey::COMPRESSED_SIZE;\n         secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_COMPRESSED);\n         ptr += pubkeylen;\n         *privkeylen = ptr - privkey;\n-        assert(*privkeylen == CKey::COMPRESSED_PRIVATE_KEY_SIZE);\n+        assert(*privkeylen == CKey::COMPRESSED_SIZE);\n     } else {\n         static const unsigned char begin[] = {\n             0x30,0x82,0x01,0x13,0x02,0x01,0x01,0x04,0x20\n@@ -141,11 +141,11 @@ static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *pr\n         memcpy(ptr, begin, sizeof(begin)); ptr += sizeof(begin);\n         memcpy(ptr, key32, 32); ptr += 32;\n         memcpy(ptr, middle, sizeof(middle)); ptr += sizeof(middle);\n-        pubkeylen = CPubKey::PUBLIC_KEY_SIZE;\n+        pubkeylen = CPubKey::SIZE;\n         secp256k1_ec_pubkey_serialize(ctx, ptr, &pubkeylen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n         ptr += pubkeylen;\n         *privkeylen = ptr - privkey;\n-        assert(*privkeylen == CKey::PRIVATE_KEY_SIZE);\n+        assert(*privkeylen == CKey::SIZE);\n     }\n     return 1;\n }\n@@ -173,8 +173,8 @@ CPrivKey CKey::GetPrivKey() const {\n     CPrivKey privkey;\n     int ret;\n     size_t privkeylen;\n-    privkey.resize(PRIVATE_KEY_SIZE);\n-    privkeylen = PRIVATE_KEY_SIZE;\n+    privkey.resize(SIZE);\n+    privkeylen = SIZE;\n     ret = ec_privkey_export_der(secp256k1_context_sign, privkey.data(), &privkeylen, begin(), fCompressed);\n     assert(ret);\n     privkey.resize(privkeylen);\n@@ -184,7 +184,7 @@ CPrivKey CKey::GetPrivKey() const {\n CPubKey CKey::GetPubKey() const {\n     assert(fValid);\n     secp256k1_pubkey pubkey;\n-    size_t clen = CPubKey::PUBLIC_KEY_SIZE;\n+    size_t clen = CPubKey::SIZE;\n     CPubKey result;\n     int ret = secp256k1_ec_pubkey_create(secp256k1_context_sign, &pubkey, begin());\n     assert(ret);\n@@ -276,7 +276,7 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     std::vector<unsigned char, secure_allocator<unsigned char>> vout(64);\n     if ((nChild >> 31) == 0) {\n         CPubKey pubkey = GetPubKey();\n-        assert(pubkey.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n+        assert(pubkey.size() == CPubKey::COMPRESSED_SIZE);\n         BIP32Hash(cc, nChild, *pubkey.begin(), pubkey.begin()+1, vout.data());\n     } else {\n         assert(size() == 32);"
      },
      {
        "sha": "1d401a0c8ad92181f4c92694d592446bab843278",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -19,7 +19,7 @@\n /**\n  * secure_allocator is defined in allocators.h\n  * CPrivKey is a serialized private key, with all parameters included\n- * (PRIVATE_KEY_SIZE bytes)\n+ * (SIZE bytes)\n  */\n typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;\n \n@@ -30,15 +30,15 @@ class CKey\n     /**\n      * secp256k1:\n      */\n-    static const unsigned int PRIVATE_KEY_SIZE            = 279;\n-    static const unsigned int COMPRESSED_PRIVATE_KEY_SIZE = 214;\n+    static const unsigned int SIZE            = 279;\n+    static const unsigned int COMPRESSED_SIZE = 214;\n     /**\n      * see www.keylength.com\n      * script supports up to 75 for single byte push\n      */\n     static_assert(\n-        PRIVATE_KEY_SIZE >= COMPRESSED_PRIVATE_KEY_SIZE,\n-        \"COMPRESSED_PRIVATE_KEY_SIZE is larger than PRIVATE_KEY_SIZE\");\n+        SIZE >= COMPRESSED_SIZE,\n+        \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n     //! Whether this private key is valid. We check for correctness when modifying the key"
      },
      {
        "sha": "bcff66f7a12dc1cc9747aade3d08b920891c06af",
        "filename": "src/psbt.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/psbt.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/psbt.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/psbt.h?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -171,7 +171,7 @@ struct PSBTInput\n                 case PSBT_IN_PARTIAL_SIG:\n                 {\n                     // Make sure that the key is the size of pubkey + 1\n-                    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+                    if (key.size() != CPubKey::SIZE + 1 && key.size() != CPubKey::COMPRESSED_SIZE + 1) {\n                         throw std::ios_base::failure(\"Size of key was not the expected size for the type partial signature pubkey\");\n                     }\n                     // Read in the pubkey from key"
      },
      {
        "sha": "10953adc3529104ea7647824663dea1a405a3bc4",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -196,8 +196,8 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     if (!secp256k1_ecdsa_recover(secp256k1_context_verify, &pubkey, &sig, hash.begin())) {\n         return false;\n     }\n-    unsigned char pub[PUBLIC_KEY_SIZE];\n-    size_t publen = PUBLIC_KEY_SIZE;\n+    unsigned char pub[SIZE];\n+    size_t publen = SIZE;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, fComp ? SECP256K1_EC_COMPRESSED : SECP256K1_EC_UNCOMPRESSED);\n     Set(pub, pub + publen);\n     return true;\n@@ -217,8 +217,8 @@ bool CPubKey::Decompress() {\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n-    unsigned char pub[PUBLIC_KEY_SIZE];\n-    size_t publen = PUBLIC_KEY_SIZE;\n+    unsigned char pub[SIZE];\n+    size_t publen = SIZE;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, SECP256K1_EC_UNCOMPRESSED);\n     Set(pub, pub + publen);\n     return true;\n@@ -227,7 +227,7 @@ bool CPubKey::Decompress() {\n bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const {\n     assert(IsValid());\n     assert((nChild >> 31) == 0);\n-    assert(size() == COMPRESSED_PUBLIC_KEY_SIZE);\n+    assert(size() == COMPRESSED_SIZE);\n     unsigned char out[64];\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild.begin(), out+32, 32);\n@@ -238,8 +238,8 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChi\n     if (!secp256k1_ec_pubkey_tweak_add(secp256k1_context_verify, &pubkey, out)) {\n         return false;\n     }\n-    unsigned char pub[COMPRESSED_PUBLIC_KEY_SIZE];\n-    size_t publen = COMPRESSED_PUBLIC_KEY_SIZE;\n+    unsigned char pub[COMPRESSED_SIZE];\n+    size_t publen = COMPRESSED_SIZE;\n     secp256k1_ec_pubkey_serialize(secp256k1_context_verify, pub, &publen, &pubkey, SECP256K1_EC_COMPRESSED);\n     pubkeyChild.Set(pub, pub + publen);\n     return true;\n@@ -251,8 +251,8 @@ void CExtPubKey::Encode(unsigned char code[BIP32_EXTKEY_SIZE]) const {\n     code[5] = (nChild >> 24) & 0xFF; code[6] = (nChild >> 16) & 0xFF;\n     code[7] = (nChild >>  8) & 0xFF; code[8] = (nChild >>  0) & 0xFF;\n     memcpy(code+9, chaincode.begin(), 32);\n-    assert(pubkey.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n-    memcpy(code+41, pubkey.begin(), CPubKey::COMPRESSED_PUBLIC_KEY_SIZE);\n+    assert(pubkey.size() == CPubKey::COMPRESSED_SIZE);\n+    memcpy(code+41, pubkey.begin(), CPubKey::COMPRESSED_SIZE);\n }\n \n void CExtPubKey::Decode(const unsigned char code[BIP32_EXTKEY_SIZE]) {"
      },
      {
        "sha": "76f743da6659a4b6f6019a49bc6e381ded4b3973",
        "filename": "src/pubkey.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/pubkey.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/pubkey.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.h?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -33,33 +33,33 @@ class CPubKey\n     /**\n      * secp256k1:\n      */\n-    static constexpr unsigned int PUBLIC_KEY_SIZE             = 65;\n-    static constexpr unsigned int COMPRESSED_PUBLIC_KEY_SIZE  = 33;\n-    static constexpr unsigned int SIGNATURE_SIZE              = 72;\n-    static constexpr unsigned int COMPACT_SIGNATURE_SIZE      = 65;\n+    static constexpr unsigned int SIZE                   = 65;\n+    static constexpr unsigned int COMPRESSED_SIZE        = 33;\n+    static constexpr unsigned int SIGNATURE_SIZE         = 72;\n+    static constexpr unsigned int COMPACT_SIGNATURE_SIZE = 65;\n     /**\n      * see www.keylength.com\n      * script supports up to 75 for single byte push\n      */\n     static_assert(\n-        PUBLIC_KEY_SIZE >= COMPRESSED_PUBLIC_KEY_SIZE,\n-        \"COMPRESSED_PUBLIC_KEY_SIZE is larger than PUBLIC_KEY_SIZE\");\n+        SIZE >= COMPRESSED_SIZE,\n+        \"COMPRESSED_SIZE is larger than SIZE\");\n \n private:\n \n     /**\n      * Just store the serialized data.\n      * Its length can very cheaply be computed from the first byte.\n      */\n-    unsigned char vch[PUBLIC_KEY_SIZE];\n+    unsigned char vch[SIZE];\n \n     //! Compute the length of a pubkey with a given first byte.\n     unsigned int static GetLen(unsigned char chHeader)\n     {\n         if (chHeader == 2 || chHeader == 3)\n-            return COMPRESSED_PUBLIC_KEY_SIZE;\n+            return COMPRESSED_SIZE;\n         if (chHeader == 4 || chHeader == 6 || chHeader == 7)\n-            return PUBLIC_KEY_SIZE;\n+            return SIZE;\n         return 0;\n     }\n \n@@ -140,7 +140,7 @@ class CPubKey\n     void Unserialize(Stream& s)\n     {\n         unsigned int len = ::ReadCompactSize(s);\n-        if (len <= PUBLIC_KEY_SIZE) {\n+        if (len <= SIZE) {\n             s.read((char*)vch, len);\n         } else {\n             // invalid pubkey, skip available data\n@@ -179,7 +179,7 @@ class CPubKey\n     //! Check whether this is a compressed public key.\n     bool IsCompressed() const\n     {\n-        return size() == COMPRESSED_PUBLIC_KEY_SIZE;\n+        return size() == COMPRESSED_SIZE;\n     }\n \n     /**"
      },
      {
        "sha": "ad833bc025eb988aeb01003733b13c09f2b5be59",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -61,17 +61,17 @@ static inline void popstack(std::vector<valtype>& stack)\n }\n \n bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() < CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n+    if (vchPubKey.size() < CPubKey::COMPRESSED_SIZE) {\n         //  Non-canonical public key: too short\n         return false;\n     }\n     if (vchPubKey[0] == 0x04) {\n-        if (vchPubKey.size() != CPubKey::PUBLIC_KEY_SIZE) {\n+        if (vchPubKey.size() != CPubKey::SIZE) {\n             //  Non-canonical public key: invalid length for uncompressed key\n             return false;\n         }\n     } else if (vchPubKey[0] == 0x02 || vchPubKey[0] == 0x03) {\n-        if (vchPubKey.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n+        if (vchPubKey.size() != CPubKey::COMPRESSED_SIZE) {\n             //  Non-canonical public key: invalid length for compressed key\n             return false;\n         }\n@@ -83,7 +83,7 @@ bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {\n }\n \n bool static IsCompressedPubKey(const valtype &vchPubKey) {\n-    if (vchPubKey.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE) {\n+    if (vchPubKey.size() != CPubKey::COMPRESSED_SIZE) {\n         //  Non-canonical public key: invalid length for compressed key\n         return false;\n     }"
      },
      {
        "sha": "4c2403f83f3f093dc427c6d28a42cc0a77aea1e3",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -101,7 +101,7 @@ template<typename Stream>\n void DeserializeHDKeypaths(Stream& s, const std::vector<unsigned char>& key, std::map<CPubKey, KeyOriginInfo>& hd_keypaths)\n {\n     // Make sure that the key is the size of pubkey + 1\n-    if (key.size() != CPubKey::PUBLIC_KEY_SIZE + 1 && key.size() != CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1) {\n+    if (key.size() != CPubKey::SIZE + 1 && key.size() != CPubKey::COMPRESSED_SIZE + 1) {\n         throw std::ios_base::failure(\"Size of key was not the expected size for the type BIP32 keypath\");\n     }\n     // Read in the pubkey from key"
      },
      {
        "sha": "144bdcff9828a76f0ebd617bc165beaafb7334b1",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/36191a8bb536ca5384de94795df2e113541052a3/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/36191a8bb536ca5384de94795df2e113541052a3/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=36191a8bb536ca5384de94795df2e113541052a3",
        "patch": "@@ -44,12 +44,12 @@ const char* GetTxnOutputType(txnouttype t)\n \n static bool MatchPayToPubkey(const CScript& script, valtype& pubkey)\n {\n-    if (script.size() == CPubKey::PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::PUBLIC_KEY_SIZE && script.back() == OP_CHECKSIG) {\n-        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::PUBLIC_KEY_SIZE + 1);\n+    if (script.size() == CPubKey::SIZE + 2 && script[0] == CPubKey::SIZE && script.back() == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::SIZE + 1);\n         return CPubKey::ValidSize(pubkey);\n     }\n-    if (script.size() == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 2 && script[0] == CPubKey::COMPRESSED_PUBLIC_KEY_SIZE && script.back() == OP_CHECKSIG) {\n-        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_PUBLIC_KEY_SIZE + 1);\n+    if (script.size() == CPubKey::COMPRESSED_SIZE + 2 && script[0] == CPubKey::COMPRESSED_SIZE && script.back() == OP_CHECKSIG) {\n+        pubkey = valtype(script.begin() + 1, script.begin() + CPubKey::COMPRESSED_SIZE + 1);\n         return CPubKey::ValidSize(pubkey);\n     }\n     return false;"
      }
    ]
  },
  {
    "sha": "26744ae189af3285c5bbf5bfe34691186415f17a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjc0NGFlMTg5YWYzMjg1YzViYmY1YmZlMzQ2OTExODY0MTVmMTdh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T13:22:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T13:25:43Z"
      },
      "message": "Merge #17446: gui: Changed tooltip for 'Label' & 'Message' text fields to be more clear\n\n8944c1d340ac2be45b505ada7e187b770b0b036f Changed tooltips of receive form to highlight difference between Label and Message (dannmat)\n\nPull request description:\n\n  I have changed the tooltips for 'Label' & 'Message' text fields to be more clear, stating the difference between the two (#17173)\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 8944c1d340ac2be45b505ada7e187b770b0b036f\n  laanwj:\n    ACK 8944c1d340ac2be45b505ada7e187b770b0b036f\n\nTree-SHA512: 7fbea4d3c4416264ae6c146d51d29958c418a278bdd6744133db0b684ad7a9413178c005592aa21a81d127f3f3a8583fc5de00078239db08e6f101f657a5dd3a",
      "tree": {
        "sha": "f991664925509764de34d11b0e4909859f436b51",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f991664925509764de34d11b0e4909859f436b51"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/26744ae189af3285c5bbf5bfe34691186415f17a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3VPtcACgkQHkrtYphs\n0l1Mmgf/dfs89Vz0eJl+3h0A6EhQj3I9zgLTVq3rGpdPswTgpygBbGRmOOUBcUUH\n+pz5TZCNcTp897RH8f/wgTOTW2AG/XaAsgqTJQ3n1WFheOQKPMAhNf9zNE7lLnxd\noOZ1N+tIcPKtl/OUWTyMf4rJiwZuOQdUP8sC7BriCZfYzxF/AflN7wtjIx8PLUxO\nw7MFzRxRF7ng1ojMRTW//dmUaKrTuVyFc+NgCRDrH5kESuXZgwZcYI5V1XkL8C49\n9QpFs1jGvB+aBayGOmaT+2NcS9E1Ikq6I4rZdN5KB0Ai+HqKLbGEIxOGXUlFM9vD\n9APWXRYflau2HZT5bDMbxB7C346kjA==\n=cxrv\n-----END PGP SIGNATURE-----",
        "payload": "tree f991664925509764de34d11b0e4909859f436b51\nparent 36191a8bb536ca5384de94795df2e113541052a3\nparent 8944c1d340ac2be45b505ada7e187b770b0b036f\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574256150 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574256343 +0100\n\nMerge #17446: gui: Changed tooltip for 'Label' & 'Message' text fields to be more clear\n\n8944c1d340ac2be45b505ada7e187b770b0b036f Changed tooltips of receive form to highlight difference between Label and Message (dannmat)\n\nPull request description:\n\n  I have changed the tooltips for 'Label' & 'Message' text fields to be more clear, stating the difference between the two (#17173)\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 8944c1d340ac2be45b505ada7e187b770b0b036f\n  laanwj:\n    ACK 8944c1d340ac2be45b505ada7e187b770b0b036f\n\nTree-SHA512: 7fbea4d3c4416264ae6c146d51d29958c418a278bdd6744133db0b684ad7a9413178c005592aa21a81d127f3f3a8583fc5de00078239db08e6f101f657a5dd3a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26744ae189af3285c5bbf5bfe34691186415f17a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/26744ae189af3285c5bbf5bfe34691186415f17a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26744ae189af3285c5bbf5bfe34691186415f17a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "36191a8bb536ca5384de94795df2e113541052a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/36191a8bb536ca5384de94795df2e113541052a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/36191a8bb536ca5384de94795df2e113541052a3"
      },
      {
        "sha": "8944c1d340ac2be45b505ada7e187b770b0b036f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8944c1d340ac2be45b505ada7e187b770b0b036f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8944c1d340ac2be45b505ada7e187b770b0b036f"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "64f52fcf45a965c5b6bcd7682bfabef703d0857f",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/26744ae189af3285c5bbf5bfe34691186415f17a/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/26744ae189af3285c5bbf5bfe34691186415f17a/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=26744ae189af3285c5bbf5bfe34691186415f17a",
        "patch": "@@ -63,7 +63,7 @@\n         <item row=\"4\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqLabel\">\n           <property name=\"toolTip\">\n-           <string>An optional label to associate with the new receiving address.</string>\n+           <string>An optional label to associate with the new receiving address (used by you to identify an invoice).  It is also attached to the payment request.</string>\n           </property>\n          </widget>\n         </item>\n@@ -93,7 +93,7 @@\n         <item row=\"6\" column=\"2\">\n          <widget class=\"QLineEdit\" name=\"reqMessage\">\n           <property name=\"toolTip\">\n-           <string>An optional message to attach to the payment request, which will be displayed when the request is opened. Note: The message will not be sent with the payment over the Bitcoin network.</string>\n+           <string>An optional message that is attached to the payment request and may be displayed to the sender.</string>\n           </property>\n          </widget>\n         </item>"
      }
    ]
  },
  {
    "sha": "76e777df83db4fc14d5cf96c67ceaa554a016a3a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NmU3NzdkZjgzZGI0ZmMxNGQ1Y2Y5NmM2N2NlYWE1NTRhMDE2YTNh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T14:36:43Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T14:54:31Z"
      },
      "message": "Merge #16161: util: Fix compilation errors in support/lockedpool.cpp\n\n30fb598737f6efb7802d707a1fa989872e7f8b7b Fix segfault in allocator_tests/arena_tests (Jeffrey Czyz)\n15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f Define ARENA_DEBUG in Travis test runs (Jeffrey Czyz)\nad715488222f2f2ce2e2cff632eae94fd49ea9c5 Fix compilation errors in support/lockedpool.cpp (Jeffrey Czyz)\n\nPull request description:\n\n  Changes in #12048 cause a compilation error in Arena::walk() when\n  ARENA_DEBUG is defined. Specifically, Arena's chunks_free map was\n  changed to have a different value type.\n\n  Additionally, missing includes cause other compilation errors when\n  ARENA_DEBUG is defined.\n\n  Reproduced with:\n\n  make CPPFLAGS=-DARENA_DEBUG\n\nACKs for top commit:\n  laanwj:\n    ACK 30fb598737f6efb7802d707a1fa989872e7f8b7b\n  fanquake:\n    ACK 30fb598737f6efb7802d707a1fa989872e7f8b7b - thanks for following up jkczyz.\n\nTree-SHA512: 4eec368a4e9c67e4e2a27bc05608a807c2892d50c60d06ed21490cd274c0369f9671bc05b3006acc2a193316caf4896454c9c299603bfed29bd488f1987ec446",
      "tree": {
        "sha": "d3e41fc3743d17aeb983707aab934c24ad095ab3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3e41fc3743d17aeb983707aab934c24ad095ab3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76e777df83db4fc14d5cf96c67ceaa554a016a3a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3VU6gACgkQLuufXMCV\nJsHbhRAAiMYNVXa+Fs8NO91maUOOmfRwz4pfOfv8WrqezL1mBNx0m1CMbR+T0aqf\nz1jIYMxdYziRAmhWpUbaPRS3okFG3s2qY9EUs20n7cL1YB4EA6oC5+bJH8j87wYT\nNpb0zryK53yXZ7osbkVZkjvdNnqUna8n5Ky5Q6qfPGQh8GxY+c+Cva6hPi8TQTdQ\nh+jUi66NwhDQJSpEweGRwGROnCGiFb87PuOYwFlynyCP/TtLDTVYjCvRtVQvs/jL\n/MXPHdl232xkTz8jVeUvtJojLyNu1LW0QU5GkhIiEK/RKhIJ2LB1lGiFrlaCY/1I\n1igcLDxOVe+vWq/CHpGOTKpT0CZIlsnunYZs4YhOZVQIMeC/AbDnIs5gYj2boJsW\nd7aebRbTTgzTSGRUNX7AOLZS0JKh+9z2wP+dIwh3x0ftdyEnRNMZjUZYTRiKof7/\nsRfqHFvny7bM9dET6g2x+aaAhen6Xqlh+1KMiqIREFxJbIeY7vrUB6/kvbDa9bBR\nNPnq2MkbFsiWbGSQsLlfyQTd00glPT+/nHJiOjx42q18OzRF7qpgb1VfXOP5s5mL\njzQsDK9GcsiEuqCu1+MMcHEgSOC7uVeo0ngp/m1TehsC2guAsgEcuttBTJD9ZvO7\n94IcUTPrzQeVBmhuC1Y24XGDINzcocrUG80czBrY1c4RMpDxrd8=\n=4Ef6\n-----END PGP SIGNATURE-----",
        "payload": "tree d3e41fc3743d17aeb983707aab934c24ad095ab3\nparent 26744ae189af3285c5bbf5bfe34691186415f17a\nparent 30fb598737f6efb7802d707a1fa989872e7f8b7b\nauthor fanquake <fanquake@gmail.com> 1574260603 -0500\ncommitter fanquake <fanquake@gmail.com> 1574261671 -0500\n\nMerge #16161: util: Fix compilation errors in support/lockedpool.cpp\n\n30fb598737f6efb7802d707a1fa989872e7f8b7b Fix segfault in allocator_tests/arena_tests (Jeffrey Czyz)\n15c84f53f47bf6e6a9c4c9dfe50c78d98f7ec07f Define ARENA_DEBUG in Travis test runs (Jeffrey Czyz)\nad715488222f2f2ce2e2cff632eae94fd49ea9c5 Fix compilation errors in support/lockedpool.cpp (Jeffrey Czyz)\n\nPull request description:\n\n  Changes in #12048 cause a compilation error in Arena::walk() when\n  ARENA_DEBUG is defined. Specifically, Arena's chunks_free map was\n  changed to have a different value type.\n\n  Additionally, missing includes cause other compilation errors when\n  ARENA_DEBUG is defined.\n\n  Reproduced with:\n\n  make CPPFLAGS=-DARENA_DEBUG\n\nACKs for top commit:\n  laanwj:\n    ACK 30fb598737f6efb7802d707a1fa989872e7f8b7b\n  fanquake:\n    ACK 30fb598737f6efb7802d707a1fa989872e7f8b7b - thanks for following up jkczyz.\n\nTree-SHA512: 4eec368a4e9c67e4e2a27bc05608a807c2892d50c60d06ed21490cd274c0369f9671bc05b3006acc2a193316caf4896454c9c299603bfed29bd488f1987ec446\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e777df83db4fc14d5cf96c67ceaa554a016a3a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76e777df83db4fc14d5cf96c67ceaa554a016a3a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e777df83db4fc14d5cf96c67ceaa554a016a3a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26744ae189af3285c5bbf5bfe34691186415f17a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26744ae189af3285c5bbf5bfe34691186415f17a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26744ae189af3285c5bbf5bfe34691186415f17a"
      },
      {
        "sha": "30fb598737f6efb7802d707a1fa989872e7f8b7b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fb598737f6efb7802d707a1fa989872e7f8b7b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30fb598737f6efb7802d707a1fa989872e7f8b7b"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b354940d35bdb9c4bc709cf505b6642fbe2955ac",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76e777df83db4fc14d5cf96c67ceaa554a016a3a/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76e777df83db4fc14d5cf96c67ceaa554a016a3a/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "patch": "@@ -9,4 +9,4 @@ export LC_ALL=C.UTF-8\n export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\""
      },
      {
        "sha": "f7a16206ab24a19a9ac8bc7597454fd6d856dbf4",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76e777df83db4fc14d5cf96c67ceaa554a016a3a/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76e777df83db4fc14d5cf96c67ceaa554a016a3a/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "patch": "@@ -10,4 +10,4 @@ export DOCKER_NAME_TAG=ubuntu:16.04\n export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS=-DDEBUG_LOCKORDER --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\""
      },
      {
        "sha": "85e3351e72576192af7733cb5ced6fcac609fee3",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76e777df83db4fc14d5cf96c67ceaa554a016a3a/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76e777df83db4fc14d5cf96c67ceaa554a016a3a/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "patch": "@@ -23,6 +23,10 @@\n #endif\n \n #include <algorithm>\n+#ifdef ARENA_DEBUG\n+#include <iomanip>\n+#include <iostream>\n+#endif\n \n LockedPoolManager* LockedPoolManager::_instance = nullptr;\n std::once_flag LockedPoolManager::init_flag;\n@@ -137,7 +141,7 @@ Arena::Stats Arena::stats() const\n }\n \n #ifdef ARENA_DEBUG\n-static void printchunk(char* base, size_t sz, bool used) {\n+static void printchunk(void* base, size_t sz, bool used) {\n     std::cout <<\n         \"0x\" << std::hex << std::setw(16) << std::setfill('0') << base <<\n         \" 0x\" << std::hex << std::setw(16) << std::setfill('0') << sz <<\n@@ -149,7 +153,7 @@ void Arena::walk() const\n         printchunk(chunk.first, chunk.second, true);\n     std::cout << std::endl;\n     for (const auto& chunk: chunks_free)\n-        printchunk(chunk.first, chunk.second, false);\n+        printchunk(chunk.first, chunk.second->first, false);\n     std::cout << std::endl;\n }\n #endif"
      }
    ]
  },
  {
    "sha": "6fdf5dab26e87888c3511fecef5d4d612b8247d6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmRmNWRhYjI2ZTg3ODg4YzM1MTFmZWNlZjVkNGQ2MTJiODI0N2Q2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-19T17:59:30Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T15:01:29Z"
      },
      "message": "depends: only use dbus with qt on linux",
      "tree": {
        "sha": "b1b1642bb245db4448766f32efa4869749e87c75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1b1642bb245db4448766f32efa4869749e87c75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fdf5dab26e87888c3511fecef5d4d612b8247d6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3VVUkACgkQLuufXMCV\nJsHi4hAAsrBPS/gCF4YgttuEVkEJ132mh55wAlZV1F2rPG+8tH8NCw4jm36GeRLK\n3Ce/HacCz2QHi/Jxze28tPbmwGe6nyP+KFWuctOf2zoFTlIWcpEXIEsEt0GhsAkN\npWiTByURUYPbizBGvv/6vz5bxrF3PqQvmvGxgv5iLiGPMDfQmdaC8NfaEYf/p2eM\nOMMB2Zqi/oayh1Z3uTznmA9ia/d+Wyk/mXSzzYpJ115qfgX4hUREaSNM7zrpTsi3\nEvVhvZNxDnRAIXCl8KUr9q4dp0WqmPeSb3ptN+noJ0Vc7+THDxsjCJkCF4knDOdv\nn54MJUx3Kce3ty68INUj8csQoWZodxl7tmzthSyssWZ6E1zL8o4nLVbdb3dAqJnQ\nGioPZ4cLf4mOA9W0YaEyY/tCo03FR7vPvZgo1zBbWQh3zeckG/YMK0xnlVDgz1Ll\nfaXWZuvA1ZxXrYByNSDc5vT7VQ/ASTJSI/lZqgU8OUzRM4o4+hOU2scNkSGLd/6w\n/rDKr5I+wDTcnE5cFU0RWhwi4OoEWKkzkoubf8fXKwYhmU5BHhfAR4TboCtn3IRa\nng0IcOuCkQTefEB9KQbA0WqX6udd5i3ASRu8r9lXvnF9FokQPAfaI+W7aFl+jJ0h\n0Kkaj6esfWXvek5hvFJpZX75hdZxV2GWlfVFkff25OcKZVKZCow=\n=BJUy\n-----END PGP SIGNATURE-----",
        "payload": "tree b1b1642bb245db4448766f32efa4869749e87c75\nparent 76e777df83db4fc14d5cf96c67ceaa554a016a3a\nauthor fanquake <fanquake@gmail.com> 1574186370 -0500\ncommitter fanquake <fanquake@gmail.com> 1574262089 -0500\n\ndepends: only use dbus with qt on linux\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf5dab26e87888c3511fecef5d4d612b8247d6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fdf5dab26e87888c3511fecef5d4d612b8247d6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf5dab26e87888c3511fecef5d4d612b8247d6/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76e777df83db4fc14d5cf96c67ceaa554a016a3a"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c9ffc1036ccca597b358e95d595fb631fc48699a",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fdf5dab26e87888c3511fecef5d4d612b8247d6/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fdf5dab26e87888c3511fecef5d4d612b8247d6/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=6fdf5dab26e87888c3511fecef5d4d612b8247d6",
        "patch": "@@ -25,7 +25,6 @@ $(package)_config_opts_debug = -debug\n $(package)_config_opts += -bindir $(build_prefix)/bin\n $(package)_config_opts += -c++std c++11\n $(package)_config_opts += -confirm-license\n-$(package)_config_opts += -dbus-runtime\n $(package)_config_opts += -hostprefix $(build_prefix)\n $(package)_config_opts += -no-compile-examples\n $(package)_config_opts += -no-cups\n@@ -105,8 +104,10 @@ $(package)_config_opts += -no-feature-vnc\n $(package)_config_opts += -no-feature-wizard\n $(package)_config_opts += -no-feature-xml\n \n+$(package)_config_opts_darwin = -no-dbus\n+\n ifneq ($(build_os),darwin)\n-$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -xplatform macx-clang-linux\n $(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n $(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n $(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n@@ -122,12 +123,17 @@ $(package)_config_opts_linux += -no-feature-xlib\n $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -fontconfig\n $(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_linux += -dbus-runtime\n $(package)_config_opts_arm_linux += -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n $(package)_config_opts_x86_64_linux = -xplatform linux-g++-64\n $(package)_config_opts_aarch64_linux = -xplatform linux-aarch64-gnu-g++\n $(package)_config_opts_riscv64_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n-$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+\n+$(package)_config_opts_mingw32 = -no-opengl\n+$(package)_config_opts_mingw32 += -no-dbus\n+$(package)_config_opts_mingw32 += -xplatform win32-g++\n+$(package)_config_opts_mingw32 += -device-option CROSS_COMPILE=\"$(host)-\"\n \n $(package)_config_opts_android = -xplatform android-clang\n $(package)_config_opts_android += -android-sdk $(ANDROID_SDK)\n@@ -137,6 +143,7 @@ $(package)_config_opts_android += -device-option CROSS_COMPILE=\"$(host)-\"\n $(package)_config_opts_android += -egl\n $(package)_config_opts_android += -qpa xcb\n $(package)_config_opts_android += -no-eglfs\n+$(package)_config_opts_android += -no-dbus\n $(package)_config_opts_android += -opengl es2\n $(package)_config_opts_android += -qt-freetype\n $(package)_config_opts_android += -no-fontconfig"
      }
    ]
  },
  {
    "sha": "3671c5721d42b17edbcafd8c4811f5f6316fda3e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjcxYzU3MjFkNDJiMTdlZGJjYWZkOGM0ODExZjVmNjMxNmZkYTNl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T16:14:37Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T16:29:27Z"
      },
      "message": "Merge #17532: test: add functional test for non-standard txs with too large scriptSig\n\n8f2d7737cc236b6122f30e31856eb3181960fba1 test: add functional test for non-standard txs with too large scriptSig (Sebastian Falbesoner)\n\nPull request description:\n\n  Approaches another missing functional test of issue #17394 (counterpart to unit test in PR #17480, Commit https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e): A transaction is rejected by the mempool with reason `\"scriptsig-size\"` if any of the inputs' scriptSig is larger than 1650 bytes.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 8f2d7737cc236b6122f30e31856eb3181960fba1\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/pull/17532/commits/8f2d7737cc236b6122f30e31856eb3181960fba1\n\nTree-SHA512: 7a45b8a4181158be3e3b91756783ddf032f132ca8780dc35fac91b2df2149268f784d28ac56005135c4d86a357c57805c5a54b8155f0d049932844b18dc03992",
      "tree": {
        "sha": "af53f1e0a52f4fbdb714338e19fdc0fe6d328509",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/af53f1e0a52f4fbdb714338e19fdc0fe6d328509"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3671c5721d42b17edbcafd8c4811f5f6316fda3e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3VaecACgkQLuufXMCV\nJsFtlxAAk8TLQSR6iqNaWy64MvzNMtupq6REDOUOwNdlcnXqlklyYWrkaGv8fRZS\nDRrfJimSoiYH+zmQOTqkGuTr3PBHUF/OasGCN/d+L2devHzeJGNt5x/m1OUsZ6xE\nMxM7PCpo9wttnXzBIQ4LD9QgVZxXtMu82+9vQ9pBQjabdHhrpUKM9sjchbbeciXi\npPzQAiAKHlQa3UkNZvIDykmXPt1RbUKlJhpAApUJS2+cSl7U/Hqe9JQuaEIfqCAM\noe9/a8rhxbMK7QywxfwdvAjntdN4fKQBeZstgV1trch9Eo8Am2LEPibQrgPTrtk6\ntSq6WsvrV9UqCQHSE/LOsurs0ALtbxRKjHZOmr+tVk2KGYzgqsu7QbDceuK3RC+P\n9+SRNdk2AqBwd7aLyOrh0axKzEoZ3KcqmwxKLCN6B6gIxNKqv2ZzkCFVbDpyQVTz\nJbEc6hmoGwoIM626dVaihdio7yaWQYiBosdt8Z6vOV65tTQht3ye32cpuvuoYqAj\nvS/shhlqS+5Qlmpmh/fMUPMrXhu/4kH3SkTPeIlCroXPM318Fbibf3tkG72F4bJJ\nkQdiBYeBYWUHWAh3qk4r2YJ8jzr8G+CQKnU2UI96uPZ7NSQdJRX4gqNRs88erYBH\nf0fU0C2oQiTFMTxRaIbEklfWRkIz3/RF5q75/tQGvFX+SQWxWzk=\n=vae7\n-----END PGP SIGNATURE-----",
        "payload": "tree af53f1e0a52f4fbdb714338e19fdc0fe6d328509\nparent 76e777df83db4fc14d5cf96c67ceaa554a016a3a\nparent 8f2d7737cc236b6122f30e31856eb3181960fba1\nauthor fanquake <fanquake@gmail.com> 1574266477 -0500\ncommitter fanquake <fanquake@gmail.com> 1574267367 -0500\n\nMerge #17532: test: add functional test for non-standard txs with too large scriptSig\n\n8f2d7737cc236b6122f30e31856eb3181960fba1 test: add functional test for non-standard txs with too large scriptSig (Sebastian Falbesoner)\n\nPull request description:\n\n  Approaches another missing functional test of issue #17394 (counterpart to unit test in PR #17480, Commit https://github.com/bitcoin/bitcoin/commit/5e8a56348b5e1026e9ddcae0b2fa2a68faf4439e): A transaction is rejected by the mempool with reason `\"scriptsig-size\"` if any of the inputs' scriptSig is larger than 1650 bytes.\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 8f2d7737cc236b6122f30e31856eb3181960fba1\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/pull/17532/commits/8f2d7737cc236b6122f30e31856eb3181960fba1\n\nTree-SHA512: 7a45b8a4181158be3e3b91756783ddf032f132ca8780dc35fac91b2df2149268f784d28ac56005135c4d86a357c57805c5a54b8155f0d049932844b18dc03992\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3671c5721d42b17edbcafd8c4811f5f6316fda3e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3671c5721d42b17edbcafd8c4811f5f6316fda3e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3671c5721d42b17edbcafd8c4811f5f6316fda3e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e777df83db4fc14d5cf96c67ceaa554a016a3a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76e777df83db4fc14d5cf96c67ceaa554a016a3a"
      },
      {
        "sha": "8f2d7737cc236b6122f30e31856eb3181960fba1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f2d7737cc236b6122f30e31856eb3181960fba1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f2d7737cc236b6122f30e31856eb3181960fba1"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0eef1d3ddfa3c7efe81e935c15236b17af0d6b81",
        "filename": "test/functional/mempool_accept.py",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3671c5721d42b17edbcafd8c4811f5f6316fda3e/test/functional/mempool_accept.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3671c5721d42b17edbcafd8c4811f5f6316fda3e/test/functional/mempool_accept.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_accept.py?ref=3671c5721d42b17edbcafd8c4811f5f6316fda3e",
        "patch": "@@ -267,6 +267,12 @@ def run_test(self):\n             rawtxs=[tx.serialize().hex()],\n         )\n         tx.deserialize(BytesIO(hex_str_to_bytes(raw_tx_reference)))\n+        tx.vin[0].scriptSig = CScript([b'a' * 1648]) # Some too large scriptSig (>1650 bytes)\n+        self.check_mempool_result(\n+            result_expected=[{'txid': tx.rehash(), 'allowed': False, 'reject-reason': 'scriptsig-size'}],\n+            rawtxs=[tx.serialize().hex()],\n+        )\n+        tx.deserialize(BytesIO(hex_str_to_bytes(raw_tx_reference)))\n         output_p2sh_burn = CTxOut(nValue=540, scriptPubKey=CScript([OP_HASH160, hash160(b'burn'), OP_EQUAL]))\n         num_scripts = 100000 // len(output_p2sh_burn.serialize())  # Use enough outputs to make the tx too large for our policy\n         tx.vout = [output_p2sh_burn] * num_scripts"
      }
    ]
  },
  {
    "sha": "db15e71e79b24601853703bebd1c92f4b523fd5f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjE1ZTcxZTc5YjI0NjAxODUzNzAzYmViZDFjOTJmNGI1MjNmZDVm",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-25T22:10:13Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-20T17:12:01Z"
      },
      "message": "Use BnB when preset inputs are selected",
      "tree": {
        "sha": "b40db500430c35419208013279dcd36e7e03e289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b40db500430c35419208013279dcd36e7e03e289"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db15e71e79b24601853703bebd1c92f4b523fd5f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db15e71e79b24601853703bebd1c92f4b523fd5f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db15e71e79b24601853703bebd1c92f4b523fd5f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db15e71e79b24601853703bebd1c92f4b523fd5f/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfec3e01b4d6153efecc1d767511c616029cb974",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfec3e01b4d6153efecc1d767511c616029cb974",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfec3e01b4d6153efecc1d767511c616029cb974"
      }
    ],
    "stats": {
      "total": 87,
      "additions": 58,
      "deletions": 29
    },
    "files": [
      {
        "sha": "bc61630363a015f36cf4eb730992dd11ceb24238",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 13,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db15e71e79b24601853703bebd1c92f4b523fd5f/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db15e71e79b24601853703bebd1c92f4b523fd5f/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=db15e71e79b24601853703bebd1c92f4b523fd5f",
        "patch": "@@ -53,29 +53,39 @@ static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n     set.emplace(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0)\n+static void add_coin(CWallet& wallet, const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0, bool spendable = false)\n {\n     balance += nValue;\n     static int nextLockTime = 0;\n     CMutableTransaction tx;\n     tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n+    if (spendable) {\n+        CTxDestination dest;\n+        std::string error;\n+        assert(wallet.GetNewDestination(OutputType::BECH32, \"\", dest, error));\n+        tx.vout[nInput].scriptPubKey = GetScriptForDestination(dest);\n+    }\n     if (fIsFromMe) {\n         // IsFromMe() returns (GetDebit() > 0), and GetDebit() is 0 if vin.empty(),\n         // so stop vin being empty, and cache a non-zero Debit to fake out IsFromMe()\n         tx.vin.resize(1);\n     }\n-    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&testWallet, MakeTransactionRef(std::move(tx)));\n+    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&wallet, MakeTransactionRef(std::move(tx)));\n     if (fIsFromMe)\n     {\n         wtx->m_amounts[CWalletTx::DEBIT].Set(ISMINE_SPENDABLE, 1);\n     }\n     COutput output(wtx.get(), nInput, nAge, true /* spendable */, true /* solvable */, true /* safe */);\n     vCoins.push_back(output);\n-    testWallet.AddToWallet(*wtx.get());\n+    wallet.AddToWallet(*wtx.get());\n     wtxn.emplace_back(std::move(wtx));\n }\n+static void add_coin(const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0, bool spendable = false)\n+{\n+    add_coin(testWallet, nValue, nAge, fIsFromMe, nInput, spendable);\n+}\n \n static void empty_wallet(void)\n {\n@@ -250,17 +260,24 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     vCoins.at(0).nInputBytes = 40; // Make sure that it has a negative effective value. The next check should assert if this somehow got through. Otherwise it will fail\n     BOOST_CHECK(!testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n \n-    // Make sure that we aren't using BnB when there are preset inputs\n+    // Make sure that can use BnB when there are preset inputs\n     empty_wallet();\n-    add_coin(5 * CENT);\n-    add_coin(3 * CENT);\n-    add_coin(2 * CENT);\n-    CCoinControl coin_control;\n-    coin_control.fAllowOtherInputs = true;\n-    coin_control.Select(COutPoint(vCoins.at(0).tx->GetHash(), vCoins.at(0).i));\n-    BOOST_CHECK(testWallet.SelectCoins(vCoins, 10 * CENT, setCoinsRet, nValueRet, coin_control, coin_selection_params_bnb, bnb_used));\n-    BOOST_CHECK(!bnb_used);\n-    BOOST_CHECK(!coin_selection_params_bnb.use_bnb);\n+    {\n+        std::unique_ptr<CWallet> wallet = MakeUnique<CWallet>(m_chain.get(), WalletLocation(), WalletDatabase::CreateMock());\n+        bool firstRun;\n+        wallet->LoadWallet(firstRun);\n+        LOCK(wallet->cs_wallet);\n+        add_coin(*wallet, 5 * CENT, 6 * 24, false, 0, true);\n+        add_coin(*wallet, 3 * CENT, 6 * 24, false, 0, true);\n+        add_coin(*wallet, 2 * CENT, 6 * 24, false, 0, true);\n+        CCoinControl coin_control;\n+        coin_control.fAllowOtherInputs = true;\n+        coin_control.Select(COutPoint(vCoins.at(0).tx->GetHash(), vCoins.at(0).i));\n+        coin_selection_params_bnb.effective_fee = CFeeRate(0);\n+        BOOST_CHECK(wallet->SelectCoins(vCoins, 10 * CENT, setCoinsRet, nValueRet, coin_control, coin_selection_params_bnb, bnb_used));\n+        BOOST_CHECK(bnb_used);\n+        BOOST_CHECK(coin_selection_params_bnb.use_bnb);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(knapsack_solver_test)"
      },
      {
        "sha": "8f2cbfaf77b9d7f50f64d6bc0e473c7758f4fb8f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 16,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db15e71e79b24601853703bebd1c92f4b523fd5f/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db15e71e79b24601853703bebd1c92f4b523fd5f/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=db15e71e79b24601853703bebd1c92f4b523fd5f",
        "patch": "@@ -2674,6 +2674,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CCoinControl& coin_control, CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n {\n     std::vector<COutput> vCoins(vAvailableCoins);\n+    CAmount value_to_select = nTargetValue;\n \n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coin_control.HasSelected() && !coin_control.fAllowOtherInputs)\n@@ -2699,22 +2700,33 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     coin_control.ListSelected(vPresetInputs);\n     for (const COutPoint& outpoint : vPresetInputs)\n     {\n-        // For now, don't use BnB if preset inputs are selected. TODO: Enable this later\n-        bnb_used = false;\n-        coin_selection_params.use_bnb = false;\n-\n         std::map<uint256, CWalletTx>::const_iterator it = mapWallet.find(outpoint.hash);\n         if (it != mapWallet.end())\n         {\n             const CWalletTx& wtx = it->second;\n             // Clearly invalid input, fail\n-            if (wtx.tx->vout.size() <= outpoint.n)\n+            if (wtx.tx->vout.size() <= outpoint.n) {\n+                bnb_used = false;\n                 return false;\n+            }\n             // Just to calculate the marginal byte size\n-            nValueFromPresetInputs += wtx.tx->vout[outpoint.n].nValue;\n-            setPresetCoins.insert(CInputCoin(wtx.tx, outpoint.n));\n-        } else\n+            CInputCoin coin(wtx.tx, outpoint.n, wtx.GetSpendSize(outpoint.n, false));\n+            nValueFromPresetInputs += coin.txout.nValue;\n+            if (coin.m_input_bytes <= 0) {\n+                bnb_used = false;\n+                return false; // Not solvable, can't estimate size for fee\n+            }\n+            coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n+            if (coin_selection_params.use_bnb) {\n+                value_to_select -= coin.effective_value;\n+            } else {\n+                value_to_select -= coin.txout.nValue;\n+            }\n+            setPresetCoins.insert(coin);\n+        } else {\n+            bnb_used = false;\n             return false; // TODO: Allow non-wallet inputs\n+        }\n     }\n \n     // remove preset inputs from vCoins\n@@ -2743,14 +2755,14 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     size_t max_descendants = (size_t)std::max<int64_t>(1, limit_descendant_count);\n     bool fRejectLongChains = gArgs.GetBoolArg(\"-walletrejectlongchains\", DEFAULT_WALLET_REJECT_LONG_CHAINS);\n \n-    bool res = nTargetValue <= nValueFromPresetInputs ||\n-        SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(1, 6, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n-        SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(1, 1, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, 2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, max_ancestors-1, max_descendants-1), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && !fRejectLongChains && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max()), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used));\n+    bool res = value_to_select <= 0 ||\n+        SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(1, 6, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n+        SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(1, 1, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, 2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, max_ancestors-1, max_descendants-1), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && !fRejectLongChains && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max()), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used));\n \n     // because SelectCoinsMinConf clears the setCoinsRet, we now add the possible inputs to the coinset\n     util::insert(setCoinsRet, setPresetCoins);"
      }
    ]
  },
  {
    "sha": "b007efdf1910db1d38671d6435d2f379bbf847d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMDA3ZWZkZjE5MTBkYjFkMzg2NzFkNjQzNWQyZjM3OWJiZjg0N2Qy",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-25T22:45:58Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-20T17:12:01Z"
      },
      "message": "Allow BnB when subtract fee from outputs",
      "tree": {
        "sha": "838b89258d7275a9bc084eb9110ab8dbdb98de65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/838b89258d7275a9bc084eb9110ab8dbdb98de65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b007efdf1910db1d38671d6435d2f379bbf847d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b007efdf1910db1d38671d6435d2f379bbf847d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b007efdf1910db1d38671d6435d2f379bbf847d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b007efdf1910db1d38671d6435d2f379bbf847d2/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db15e71e79b24601853703bebd1c92f4b523fd5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db15e71e79b24601853703bebd1c92f4b523fd5f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db15e71e79b24601853703bebd1c92f4b523fd5f"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 24,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4fa5c514914d03025566033404519a5ed80ae9cc",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=b007efdf1910db1d38671d6435d2f379bbf847d2",
        "patch": "@@ -260,6 +260,15 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     vCoins.at(0).nInputBytes = 40; // Make sure that it has a negative effective value. The next check should assert if this somehow got through. Otherwise it will fail\n     BOOST_CHECK(!testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n \n+    // Test fees subtracted from output:\n+    empty_wallet();\n+    add_coin(1 * CENT);\n+    vCoins.at(0).nInputBytes = 40;\n+    BOOST_CHECK(!testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n+    coin_selection_params_bnb.m_subtract_fee_outputs = true;\n+    BOOST_CHECK(testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n+    BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+\n     // Make sure that can use BnB when there are preset inputs\n     empty_wallet();\n     {"
      },
      {
        "sha": "b5cc477690de4586e847aac1d62af4099d1cd77c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b007efdf1910db1d38671d6435d2f379bbf847d2",
        "patch": "@@ -2648,7 +2648,11 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n                 if (effective_value > 0) {\n                     group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n                     group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    group.effective_value += effective_value;\n+                    if (coin_selection_params.m_subtract_fee_outputs) {\n+                        group.effective_value += coin.txout.nValue;\n+                    } else {\n+                        group.effective_value += effective_value;\n+                    }\n                     ++it;\n                 } else {\n                     it = group.Discard(coin);\n@@ -3022,7 +3026,8 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n \n             // BnB selector is the only selector used when this is true.\n             // That should only happen on the first pass through the loop.\n-            coin_selection_params.use_bnb = nSubtractFeeFromAmount == 0; // If we are doing subtract fee from recipient, then don't use BnB\n+            coin_selection_params.use_bnb = true;\n+            coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n             // Start with no fee and loop until there is enough fee\n             while (true)\n             {\n@@ -3036,7 +3041,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                     nValueToSelect += nFeeRet;\n \n                 // vouts to the payees\n-                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                if (!coin_selection_params.m_subtract_fee_outputs) {\n+                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                }\n                 for (const auto& recipient : vecSend)\n                 {\n                     CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n@@ -3053,7 +3060,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                         }\n                     }\n                     // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n+                    if (!coin_selection_params.m_subtract_fee_outputs) {\n+                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n+                    }\n \n                     if (IsDust(txout, chain().relayDustFee()))\n                     {"
      },
      {
        "sha": "9776b45715da9dfa3e33fce194f228d3385c5131",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b007efdf1910db1d38671d6435d2f379bbf847d2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b007efdf1910db1d38671d6435d2f379bbf847d2",
        "patch": "@@ -715,6 +715,8 @@ struct CoinSelectionParams\n     size_t change_spend_size = 0;\n     CFeeRate effective_fee = CFeeRate(0);\n     size_t tx_noinputs_size = 0;\n+    //! Indicate that we are subtracting the fee from outputs\n+    bool m_subtract_fee_outputs = false;\n \n     CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee, size_t tx_noinputs_size) : use_bnb(use_bnb), change_output_size(change_output_size), change_spend_size(change_spend_size), effective_fee(effective_fee), tx_noinputs_size(tx_noinputs_size) {}\n     CoinSelectionParams() {}"
      }
    ]
  },
  {
    "sha": "a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGQ5ZjdkZmE3MjM5NWU5NWM5ZjE5N2I0N2YyMTIwZTE5ZjFiMWQy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T17:47:25Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T17:47:27Z"
      },
      "message": "Merge #17420: travis: Rework CACHE_ERR_MSG\n\n9999a790749c583845a3ff7a265d540c2905aa12 travis: Rework CACHE_ERR_MSG (MarcoFalke)\n\nPull request description:\n\n  This should fix the misconception that we can fix build problems in forked repos. See https://github.com/bitcoin/bitcoin/pull/17418#issuecomment-551917920\n\nTop commit has no ACKs.\n\nTree-SHA512: e0c86f6613fa38f4d4984420fa1fdc999829407c71024c3b92fd1d35afa98f4b5073af72656c83f607d5f6fab15f9ea629ca8be0b4e892c2fb65a226036c470a",
      "tree": {
        "sha": "5262d8a4cfa17dae2d1c25639b1da30f1ecb9b8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5262d8a4cfa17dae2d1c25639b1da30f1ecb9b8d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3VfC8ACgkQ0upIUOdS\niyVG8w/8DEC9eacWSW9GkAB9mPZvCyfXNLGOeTTeMwtKy3tsersJW2sx2LXVi6PO\nnZnM2w++ZztQfAcWexE68UAZ7M7IMw33LINIPrSf0rfgdBW7+u/KyCYa8UgkvlQb\nB8474P18DaRn2ljt2noQVU1tsL4PplGX3twRGXOrgerS820ulbsrhtyY4Vk+CNke\nijOWG+5Uc62GmG8xn1vAZpB9P3/3v7U2KIA8gcoARkngrRNpato5g2A62piicOnB\nTA8qH4TCFJsWCI0MhQzkyYDr04Pgmz9A9V7Yzx2n+liq7QqbbViunrIz+nbXedLc\njJLVoNebGTMIX7sNb50FIA+NxOa/t63pgPcxcSftUlLijg6+ZfS5LiRJvYoCVltB\numpe4hilGoD83RJttx69MsdKZLmcKK51IRCcYaPhhF422bea9g0/+mLxop7Hgavf\nxvdFzde1RwfE1lTUNc4sPhsJct2nWr612j6XTK554zOV4utWL3bhaCcJLLE8URyK\nyVEpze9FpA7BUx/xj4XbfpH/N070xc4ZyuImJyM9NxAVYchuDd9jyiGYbBFY0WDT\nE1SicOCAHvhfhraTg9mM1xbaeZ+YyqoGGK/Cg4lP6Q7St3rOiFJJP2KAlHKCVLvv\nGkspJFksNnlkcJR0gK89RrVFj5eGgQ/KQxzzqddz/NTrz8w5vv0=\n=3hWt\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIInfr+c8Sq86WQDqb0JXsbySEGmY2kjUADW+HIfkL1DdCP/wEJhKDnn3ORxy\n3n9bfnhP+dwI8SDZV7wsdtbI4EFXUHK8mZboOYs1auyrqy8F/X8OcpXJ9gjxBF3V\nfDLwCKqrVvT03TCtAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BCa61IAWSQ5toO9mfl9MKosCPEEXdV8MvAI\nxvZAv+r+Xg0Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4\neS5jb23/8BC2U4Om6pD2cVXPGxbxjffaCPEggJLqPKDrExSrfHZAY/d6fTR+rmPp\nONdCtFDveY2ZusEI8QRd1Xwy8AgR6e1GLc9QcQCD3+MNLvkMjiwraHR0cHM6Ly9i\nb2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQwV0EQ1z4E5MbTqA9\nO4o9+QjxIIeruuVotYhAKEQCnozVIQsrbhV+/B4T76o/mCXqT1IKCPEEXdV8MvAI\nDHd3yXvk2HEAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5262d8a4cfa17dae2d1c25639b1da30f1ecb9b8d\nparent 3671c5721d42b17edbcafd8c4811f5f6316fda3e\nparent 9999a790749c583845a3ff7a265d540c2905aa12\nauthor MarcoFalke <falke.marco@gmail.com> 1574272045 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574272047 -0500\n\nMerge #17420: travis: Rework CACHE_ERR_MSG\n\n9999a790749c583845a3ff7a265d540c2905aa12 travis: Rework CACHE_ERR_MSG (MarcoFalke)\n\nPull request description:\n\n  This should fix the misconception that we can fix build problems in forked repos. See https://github.com/bitcoin/bitcoin/pull/17418#issuecomment-551917920\n\nTop commit has no ACKs.\n\nTree-SHA512: e0c86f6613fa38f4d4984420fa1fdc999829407c71024c3b92fd1d35afa98f4b5073af72656c83f607d5f6fab15f9ea629ca8be0b4e892c2fb65a226036c470a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3671c5721d42b17edbcafd8c4811f5f6316fda3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3671c5721d42b17edbcafd8c4811f5f6316fda3e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3671c5721d42b17edbcafd8c4811f5f6316fda3e"
      },
      {
        "sha": "9999a790749c583845a3ff7a265d540c2905aa12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9999a790749c583845a3ff7a265d540c2905aa12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9999a790749c583845a3ff7a265d540c2905aa12"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "16f3ad2dbaa09d6870b807be08352687187eb509",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
        "patch": "@@ -48,7 +48,7 @@ env:\n   global:\n     - CI_RETRY_EXE=\"travis_retry\"\n     - CI_WAIT=\"while sleep 500; do echo .; done\"\n-    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. Please manually re-run this job by using the travis restart button or asking a bitcoin maintainer to restart. The next run should not time out because the build cache has been saved.\"\n+    - CACHE_ERR_MSG=\"Error! Initial build successful, but not enough time remains to run later build stages and tests. See https://docs.travis-ci.com/user/customizing-the-build#build-timeouts . Please manually re-run this job by using the travis restart button. The next run should not time out because the build cache has been saved.\"\n before_install:\n   - set -o errexit; source ./ci/test/00_setup_env.sh\n   - set -o errexit; source ./ci/test/03_before_install.sh"
      }
    ]
  },
  {
    "sha": "794fe91395c79f46a6d920bc08de5a0551b359a3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OTRmZTkxMzk1Yzc5ZjQ2YTZkOTIwYmMwOGRlNWEwNTUxYjM1OWEz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-20T18:30:39Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-20T18:30:39Z"
      },
      "message": "doc: Update and improve Developer Notes",
      "tree": {
        "sha": "c276b955e548706b5272cf30832f1907615f0a3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c276b955e548706b5272cf30832f1907615f0a3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/794fe91395c79f46a6d920bc08de5a0551b359a3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3Vhk8ACgkQQQEIES5+\nqB8AHA/+NlUPNL+XtK0AUIi7aDW1AfkmXb4HjaCHApIqV9KxFTKYiQgN8kRESAWH\nwT2bOiEX12WxYN4JCWf5sNwzvA+ck+5hRPlI855L9r2k2dfdKxmlGY2oeTZ8PX3S\nab/gdo/AJdt1w0blJDtWsf2c5fNn6MPUWpfBdI+e7FDovR14pf1apBloE3OJssNt\n/aahXzt0HrX+06hLVfLqwp21S0hpFaS/k1W5JJPUL++R+Dj7zmupc4MVX+Pgi3kf\nQtxa3cscBATgBCQ1Dj9ZTTuJi2KkcK1bZyGkXuTSptlqoLMX4keKXgB4+txiYTN9\nbx67B/Qj0JWh9byyw4lqf6dhSx06H1INbSshgn09dq2mXFeZbq1Ksn5cHIbrU/Wn\nyEGA5MZlFyMFAddl81mCIQhgfjstUyaCeizXA2vun2FclZx2YRePIv4d5Zud1QoW\nO3gVnHomk8GRbAf6x/oAr31eyHbdWD4oDIeXiKFXtqT+86Lcx6/Tz9PmMwgxZg0s\ndLf+nWnP9EsKjX3IlAoU5SAZC16xlB2c+Cmie7fz/6mBt6iKixfGAcn26FjJ9ChO\neq19L/qckagd4GvS1/lYN7jpebLHBLYTzTSIC7TjN8h7HN5S8rsh2a9Y8wDY8JTJ\njMEiBoLRYCrkpckCVlq0CjPu2ggHxxPuT6fcuSQKmCqNCY0hUD4=\n=F90z\n-----END PGP SIGNATURE-----",
        "payload": "tree c276b955e548706b5272cf30832f1907615f0a3d\nparent 30521302f90e4856a7516867b32a4576fa6d98b3\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574274639 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574274639 +0200\n\ndoc: Update and improve Developer Notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794fe91395c79f46a6d920bc08de5a0551b359a3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/794fe91395c79f46a6d920bc08de5a0551b359a3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794fe91395c79f46a6d920bc08de5a0551b359a3/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30521302f90e4856a7516867b32a4576fa6d98b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30521302f90e4856a7516867b32a4576fa6d98b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30521302f90e4856a7516867b32a4576fa6d98b3"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 16,
      "deletions": 24
    },
    "files": [
      {
        "sha": "60eb542b5347a1f7f06dc7e866d9d5a83cd2f0e7",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 24,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/794fe91395c79f46a6d920bc08de5a0551b359a3/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/794fe91395c79f46a6d920bc08de5a0551b359a3/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=794fe91395c79f46a6d920bc08de5a0551b359a3",
        "patch": "@@ -12,12 +12,13 @@ Developer Notes\n     - [Development tips and tricks](#development-tips-and-tricks)\n         - [Compiling for debugging](#compiling-for-debugging)\n         - [Compiling for gprof profiling](#compiling-for-gprof-profiling)\n-        - [debug.log](#debuglog)\n+        - [`debug.log`](#debuglog)\n         - [Testnet and Regtest modes](#testnet-and-regtest-modes)\n         - [DEBUG_LOCKORDER](#debug_lockorder)\n         - [Valgrind suppressions file](#valgrind-suppressions-file)\n         - [Compiling for test coverage](#compiling-for-test-coverage)\n         - [Performance profiling with perf](#performance-profiling-with-perf)\n+        - [Sanitizers](#sanitizers)\n     - [Locking/mutex usage notes](#lockingmutex-usage-notes)\n     - [Threads](#threads)\n     - [Ignoring IDE/editor files](#ignoring-ideeditor-files)\n@@ -62,7 +63,7 @@ tool to clean up patches automatically before submission.\n   - Braces on the same line for everything else.\n   - 4 space indentation (no tabs) for every block except namespaces.\n   - No indentation for `public`/`protected`/`private` or for `namespace`.\n-  - No extra spaces inside parenthesis; don't do ( this ).\n+  - No extra spaces inside parenthesis; don't do `( this )`.\n   - No space after function names; one space after `if`, `for` and `while`.\n   - If an `if` only has a single-statement `then`-clause, it can appear\n     on the same line as the `if`, without braces. In every other case,\n@@ -76,7 +77,7 @@ code.\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n-  - Constant names are all uppercase, and use `_` to separate words.\n+  - Compile-time constant names are all uppercase, and use `_` to separate words.\n   - Class names, function names, and method names are UpperCamelCase\n     (PascalCase). Do not prefix class names with `C`.\n   - Test suite naming convention: The Boost test suite in file\n@@ -207,15 +208,15 @@ produce better debugging builds.\n \n Run configure with the `--enable-gprof` option, then make.\n \n-### debug.log\n+### `debug.log`\n \n-If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+If the code is behaving strangely, take a look in the `debug.log` file in the data directory;\n error and debugging messages are written there.\n \n The `-debug=...` command-line option controls debugging; running with just `-debug` or `-debug=1` will turn\n-on all categories (and give you a very large debug.log file).\n+on all categories (and give you a very large `debug.log` file).\n \n-The Qt code routes `qDebug()` output to debug.log under category \"qt\": run with `-debug=qt`\n+The Qt code routes `qDebug()` output to `debug.log` under category \"qt\": run with `-debug=qt`\n to see it.\n \n ### Testnet and Regtest modes\n@@ -233,7 +234,7 @@ Bitcoin Core is a multi-threaded application, and deadlocks or other\n multi-threading bugs can be very difficult to track down. The `--enable-debug`\n configure option adds `-DDEBUG_LOCKORDER` to the compiler flags. This inserts\n run-time checks to keep track of which locks are held and adds warnings to the\n-debug.log file if inconsistencies are detected.\n+`debug.log` file if inconsistencies are detected.\n \n ### Valgrind suppressions file\n \n@@ -275,8 +276,7 @@ the functional test framework. Perf can observe a running process and sample\n (at some frequency) where its execution is.\n \n Perf installation is contingent on which kernel version you're running; see\n-[this StackExchange\n-thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n+[this thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n for specific instructions.\n \n Certain kernel parameters may need to be set for perf to be able to inspect the\n@@ -311,7 +311,7 @@ or using a graphical tool like [Hotspot](https://github.com/KDAB/hotspot).\n See the functional test documentation for how to invoke perf within tests.\n \n \n-**Sanitizers**\n+### Sanitizers\n \n Bitcoin Core can be compiled with various \"sanitizers\" enabled, which add\n instrumentation for issues regarding things like memory safety, thread race\n@@ -372,7 +372,7 @@ Deadlocks due to inconsistent lock ordering (thread 1 locks `cs_main` and then\n `cs_wallet`, while thread 2 locks them in the opposite order: result, deadlock\n as each waits for the other to release its lock) are a problem. Compile with\n `-DDEBUG_LOCKORDER` (or use `--enable-debug`) to get lock order inconsistencies\n-reported in the debug.log file.\n+reported in the `debug.log` file.\n \n Re-architecting the core code so there are better-defined interfaces\n between the various components is a goal, with any necessary locking\n@@ -386,8 +386,6 @@ Threads\n \n - ThreadImport : Loads blocks from `blk*.dat` files or `-loadblock=<file>`.\n \n-- StartNode : Starts other threads.\n-\n - ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n \n - ThreadMapPort : Universal plug-and-play startup/shutdown.\n@@ -400,7 +398,7 @@ Threads\n \n - ThreadMessageHandler : Higher-level message handling (sending and receiving).\n \n-- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n+- DumpAddresses : Dumps IP addresses of nodes to `peers.dat`.\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n@@ -466,11 +464,6 @@ Wallet\n \n - Make sure that no crashes happen with run-time option `-disablewallet`.\n \n-  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n-    `validateaddress`), it is easy to forget that global pointer `pwalletMain`\n-    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n-    exercising the API with `-disablewallet`.\n-\n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set.\n \n   - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB.\n@@ -545,11 +538,10 @@ class A\n }\n ```\n \n-- By default, declare single-argument constructors `explicit`.\n+- By default, declare constructors `explicit`.\n \n-  - *Rationale*: This is a precaution to avoid unintended conversions that might\n-    arise when single-argument constructors are used as implicit conversion\n-    functions.\n+  - *Rationale*: This is a precaution to avoid unintended\n+    [conversions](https://en.cppreference.com/w/cpp/language/converting_constructor).\n \n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API."
      }
    ]
  },
  {
    "sha": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmOTNmYzYxYzY1ZDYwNWVhZTJkM2UyYzk4YmRkMzBhZTU4N2ZjZGFi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-20T18:54:08Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-11-20T18:54:08Z"
      },
      "message": "Put bounds on the number of CPUID leaves explored",
      "tree": {
        "sha": "ff891d283c6321a09d80624b31b8082def66c912",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff891d283c6321a09d80624b31b8082def66c912"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba2c5fe1477cec80d7e02f824daba21a1021758e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba2c5fe1477cec80d7e02f824daba21a1021758e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba2c5fe1477cec80d7e02f824daba21a1021758e"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6992c720fff33e5bd535f8a5e5881ee9194571ec",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
        "patch": "@@ -197,9 +197,9 @@ void AddAllCPUID(CSHA512& hasher)\n     // Iterate over all standard leaves\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n-    for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n+    for (uint32_t leaf = 1; leaf <= max && leaf <= 0xFF; ++leaf) {\n         uint32_t maxsub = 0;\n-        for (uint32_t subleaf = 0;; ++subleaf) {\n+        for (uint32_t subleaf = 0; subleaf <= 0xFF; ++subleaf) {\n             AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n             // Iterate subleafs for leaf values 4, 7, 11, 13\n             if (leaf == 4) {\n@@ -220,7 +220,7 @@ void AddAllCPUID(CSHA512& hasher)\n     // Iterate over all extended leaves\n     AddCPUID(hasher, 0x80000000, 0, ax, bx, cx, dx); // Returns max extended leaf in ax\n     uint32_t ext_max = ax;\n-    for (uint32_t leaf = 0x80000001; leaf <= ext_max; ++leaf) {\n+    for (uint32_t leaf = 0x80000001; leaf <= ext_max && leaf <= 0x800000FF; ++leaf) {\n         AddCPUID(hasher, leaf, 0, ax, bx, cx, dx);\n     }\n }"
      }
    ]
  },
  {
    "sha": "ec89d2882a591f6af5aad57ab8638250d9dc1add",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzg5ZDI4ODJhNTkxZjZhZjVhYWQ1N2FiODYzODI1MGQ5ZGMxYWRk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T20:05:35Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-20T20:05:35Z"
      },
      "message": "build: remove libanl.so.1 from ALLOWED_LIBRARIES",
      "tree": {
        "sha": "776fae15b8363ad0a0ad725019588240e7ac077b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/776fae15b8363ad0a0ad725019588240e7ac077b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec89d2882a591f6af5aad57ab8638250d9dc1add",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3VnI8ACgkQLuufXMCV\nJsFqkQ/+LF5X7LuyQ3iYcmlFpY3q30mqwzZMD3st6sZDOxYCASzt8wAuRVBNo0er\nVXf+BFZxh9dC3ZHH1khy8v3H6l5sb2tECTBJDsvMTLVRTx3/8nroWdAfkhDyR5b2\nVJOvE+eFJWaI74zGA1K+JPYgb3blZ62yqFpNpj1unKxPbItekevItO2PiUxis5hb\nkeEQwfPt7HqlwvXgcPWGGvoaM1OmhFBFawKR0dxEOsukjlhD8ZU+e+VtygoIK+zN\nM0TrtUYgp96nsXez/Gd7wYaEC3asLk1K3G61nUjygZuSJdj0GCjy20nL0G4z7k+h\nH74zhDywqED4mTcvFOGxINd5/wgGv3EiKaw7+STjfmUM1Ip6+kLGZBA3FF09xqyM\nUcL9pOfZH90v1XteqrjS+mu63pK5y8hsyBHhBsM5EU3UhgM3rmxRWt/6zynWvLf2\n/fYzUQksoSG2NhWTqcqjeKPRInIxSxKymWysmTitNXd7yUkdOUVIe7bdq4fouVFj\nNYLHonIzt/ns94/hY+OqLVKPlByORvZlDig8FsLfzMW+0jdvcWmvBJBZPmUQkXrb\n1HKdqCpuCS8wMVFMRuuImhPa7luXxb6jGAt3qzSAbEXyJvl8vmO8Bpdf76lnBnfu\ny6zZTjMEDkIUsLldynJsy/JNR0270gFF+3NBfSR5JDLgB7V2R5Y=\n=56Gd\n-----END PGP SIGNATURE-----",
        "payload": "tree 776fae15b8363ad0a0ad725019588240e7ac077b\nparent a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2\nauthor fanquake <fanquake@gmail.com> 1574280335 -0500\ncommitter fanquake <fanquake@gmail.com> 1574280335 -0500\n\nbuild: remove libanl.so.1 from ALLOWED_LIBRARIES\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec89d2882a591f6af5aad57ab8638250d9dc1add",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec89d2882a591f6af5aad57ab8638250d9dc1add",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec89d2882a591f6af5aad57ab8638250d9dc1add/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c224085c327946c7c28aed60753b5170b7a2d926",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec89d2882a591f6af5aad57ab8638250d9dc1add/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec89d2882a591f6af5aad57ab8638250d9dc1add/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=ec89d2882a591f6af5aad57ab8638250d9dc1add",
        "patch": "@@ -57,7 +57,6 @@\n 'libgcc_s.so.1', # GCC base support\n 'libc.so.6', # C library\n 'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n 'libm.so.6', # math library\n 'librt.so.1', # real-time (clock)\n 'libatomic.so.1',"
      }
    ]
  },
  {
    "sha": "41162c0ba0a1aab8110ad65c4035c7087dce0f84",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTE2MmMwYmEwYTFhYWI4MTEwYWQ2NWM0MDM1YzcwODdkY2UwZjg0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T21:41:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T21:41:55Z"
      },
      "message": "Merge #17423: ci: Make ci system read-only on the git work tree\n\nfa7523d3aa75b0266015af59901c2397b52265b5 ci: Extend docs (MarcoFalke)\nfa493ef08830efe493150d07411af85518959804 ci: Make ci system read-only on the git work tree (MarcoFalke)\nfab133329281cdaa3804585a2cdadd0478fefa4f ci: Remove git from required packages on host (MarcoFalke)\nfa00393bce0c6128c6188afc7a1d50cc01b0277f ci: Make all filesystem operations inside docker (MarcoFalke)\n\nPull request description:\n\n  Running the ci completely in a docker, without leaving any traces on the host system is not possible right now because the ccache and depends dir needs to be propagated back and picked up by the host for caching.\n\n  Fixes #17372\n\nACKs for top commit:\n  JeremyRubin:\n    tested ACK fa7523d3aa75b0266015af59901c2397b52265b5\n\nTree-SHA512: 4bce1a0f883bcbdb34abf409bdbc80d420c5da2045d2f9c5536ac433f9e5b490f23df084546c8c049f688b487572bbfc4f9c4029e9e672f4d9279739d066ed2e",
      "tree": {
        "sha": "d9bbffec3447ebd7365456ea743731cb7be39c3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9bbffec3447ebd7365456ea743731cb7be39c3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41162c0ba0a1aab8110ad65c4035c7087dce0f84",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3VsyMACgkQ0upIUOdS\niyVp2A//ayjTTMyamTp1IAGnQ9W7bag9ZBxuLz2uKxgph/5ZJhHDQr9aiiBg9GTI\nNPgj0k4ce0K7MuXhD6ZsZ/hK6gheFZ43bKk+eNj/UDukT0NjiXt6xqazh7ldsgJe\nvxUE8am/r3SbEMQhiuoR7uqgJpW0Gen5aREQmRQ860iM8j6BthdDiXI/+PeCOXrv\nqSZYZLe25xGR7AHED4jCZ/j5V/rP5mrJHEFBCMaTahansY1kiUcr3WAPCVSirN6d\nvw72mCxWIFXV2AUBeZMfFl7s7pYQOQqH+qm3Jh3vfK0DoWS9+3hUNVfnJr1nKNnp\naKNfIJMLtXIBqftiDHYarxrZoyPmPMh39ZHkFyPomstFrOur9Egq/RJQY7wINemG\neYt8q7hl97QYqAB374LOlPE1gfhm1NRBRKWrJF6zotRsosqmeUM2ai3qVOOFiNBb\ngxFwJDTvPg85BLx/LnaS5fY40L9V8rrvyu9iHgJyAMpbFWsgcMUWJJ/fRP/GA8oM\ngjKa9C0Sg1Ixw60MOZH6+jW7UoUp59blWycDezrvKRLgw73UUHOte9iY9i+xJVNP\n6aPkcOeSZsOyXSebgmAYiss5kNSNH/IEVnhA04ESYm2ErSTq2sXMa5kAmSjvjJlv\nZXEmgCssD4Vi0dmR/RazMVUwSPnrodPUiJgR0FeQ8CVKdaQRFXM=\n=anWf\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEnqgwaVpTarhv1eFJW5/P7WuCWoQD1YtoJjb8ZTVzyFCP/wEB0He4Url9pZ\nMrcXhHx5wm8I8QRd1bMm8AiFTU2nnb6obACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIl1YLP8RhRKVKHk/Qs4\ncrQI8QRd1bMm8Aj3Ab6pqwCm3ACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEKVQOE6HJv5yEdpDwuZj8HEI8QRd1bMl8Aizg/1N\nCnY5igCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BC2UE5lR1ns0QegC1HtqvOJCPEEXdWzJvAI5zbpaKUixHAA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree d9bbffec3447ebd7365456ea743731cb7be39c3c\nparent a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2\nparent fa7523d3aa75b0266015af59901c2397b52265b5\nauthor MarcoFalke <falke.marco@gmail.com> 1574286105 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574286115 -0500\n\nMerge #17423: ci: Make ci system read-only on the git work tree\n\nfa7523d3aa75b0266015af59901c2397b52265b5 ci: Extend docs (MarcoFalke)\nfa493ef08830efe493150d07411af85518959804 ci: Make ci system read-only on the git work tree (MarcoFalke)\nfab133329281cdaa3804585a2cdadd0478fefa4f ci: Remove git from required packages on host (MarcoFalke)\nfa00393bce0c6128c6188afc7a1d50cc01b0277f ci: Make all filesystem operations inside docker (MarcoFalke)\n\nPull request description:\n\n  Running the ci completely in a docker, without leaving any traces on the host system is not possible right now because the ccache and depends dir needs to be propagated back and picked up by the host for caching.\n\n  Fixes #17372\n\nACKs for top commit:\n  JeremyRubin:\n    tested ACK fa7523d3aa75b0266015af59901c2397b52265b5\n\nTree-SHA512: 4bce1a0f883bcbdb34abf409bdbc80d420c5da2045d2f9c5536ac433f9e5b490f23df084546c8c049f688b487572bbfc4f9c4029e9e672f4d9279739d066ed2e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41162c0ba0a1aab8110ad65c4035c7087dce0f84",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41162c0ba0a1aab8110ad65c4035c7087dce0f84",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41162c0ba0a1aab8110ad65c4035c7087dce0f84/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8d9f7dfa72395e95c9f197b47f2120e19f1b1d2"
      },
      {
        "sha": "fa7523d3aa75b0266015af59901c2397b52265b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7523d3aa75b0266015af59901c2397b52265b5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7523d3aa75b0266015af59901c2397b52265b5"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 39,
      "deletions": 20
    },
    "files": [
      {
        "sha": "880e49b4595a3fcb92ffd580d56ebe173af2575b",
        "filename": "ci/README.md",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/README.md?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -8,11 +8,21 @@ and numbered according to which stage and lifecycle step it belongs to.\n \n ### Running a stage locally\n \n+Be aware that the tests will be built and run in-place, so please run at your own risk.\n+If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first.\n+\n+The ci needs to perform various sysadmin tasks such as installing packages or writing to the user's home directory.\n+While most of the actions are done inside a docker container, this is not possible for all. Thus, cache directories,\n+such as the depends cache or ccache, are mounted as read-write into the docker container. While it should be fine to run\n+the ci system locally on you development box, the ci scripts can generally be assumed to have received less review and\n+testing compared to other parts of the codebase. If you want to keep the work tree clean, you might want to run the ci\n+system in a virtual machine with a Linux operating system of your choice.\n+\n To allow for a wide range of tested environments, but also ensure reproducibility to some extent, the test stage\n requires `docker` to be installed. To install all requirements on Ubuntu, run\n \n ```\n-sudo apt install docker.io bash git\n+sudo apt install docker.io bash\n ```\n \n To run the default test stage,\n@@ -26,6 +36,3 @@ To run the test stage with a specific configuration,\n ```\n FILE_ENV=\"./ci/test/00_setup_env_arm.sh\" ./ci/test_run_all.sh\n ```\n-\n-Be aware that the tests will be build and run in-place, so please run at your own risk.\n-If the repository is not a fresh git clone, you might have to clean files from previous builds or test runs first."
      },
      {
        "sha": "2919072fe4a745faf05014f18298c3814dd7ad09",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -44,7 +44,7 @@ export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_ROOT_DIR}\n export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}\n-export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3}\n+export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git}\n export GOAL=${GOAL:-install}\n export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH"
      },
      {
        "sha": "ce41c37b6e99d52467d83683df46fb910c869874",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 19,
        "deletions": 7,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -33,12 +33,6 @@ fi\n mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n \n-if [ ! -d ${DIR_QA_ASSETS} ]; then\n-  git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n-fi\n-export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n-\n-mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n@@ -54,7 +48,13 @@ if [ -z \"$RUN_CI_ON_HOST\" ]; then\n   echo \"Creating $DOCKER_NAME_TAG container to run in\"\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n-  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt --mount type=bind,src=$BASE_BUILD_DIR,dst=$BASE_BUILD_DIR --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR -w $BASE_BUILD_DIR --env-file /tmp/env $DOCKER_NAME_TAG)\n+  DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n+                  --mount type=bind,src=$BASE_BUILD_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n+                  --mount type=bind,src=$BASE_BUILD_DIR/depends,dst=$BASE_BUILD_DIR/depends \\\n+                  -w $BASE_BUILD_DIR \\\n+                  --env-file /tmp/env \\\n+                  $DOCKER_NAME_TAG)\n \n   DOCKER_EXEC () {\n     docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n@@ -83,6 +83,18 @@ if [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n fi\n \n+if [ ! -d ${DIR_QA_ASSETS} ]; then\n+  DOCKER_EXEC git clone https://github.com/bitcoin-core/qa-assets ${DIR_QA_ASSETS}\n+fi\n+export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n+\n+DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n+\n+if [ -z \"$RUN_CI_ON_HOST\" ]; then\n+  echo \"Create $BASE_BUILD_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_BUILD_DIR\n+fi\n+\n if [ \"$USE_BUSY_BOX\" = \"true\" ]; then\n   echo \"Setup to use BusyBox utils\"\n   DOCKER_EXEC mkdir -p $BASE_SCRATCH_DIR/bins/"
      },
      {
        "sha": "3f0bba19ac8e1b85aaec50159754b79c859681da",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -13,13 +13,13 @@ else\n   DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n fi\n \n-mkdir -p depends/SDKs depends/sdk-sources\n+DOCKER_EXEC mkdir -p depends/SDKs depends/sdk-sources\n \n if [ -n \"$OSX_SDK\" ] && [ ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n   curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [ -n \"$OSX_SDK\" ] && [ -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+  DOCKER_EXEC tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)"
      },
      {
        "sha": "34b8477197e45b1497b7db91f94d9f9d57eebf79",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -19,18 +19,22 @@ else\n fi\n END_FOLD\n \n+# Create folder on host and docker, so that `cd` works\n mkdir -p build\n+DOCKER_EXEC mkdir -p build\n \n # Temporarily disable errexit, because Travis macOS fails without error message\n set +o errexit\n cd build || (echo \"could not enter build directory\"; exit 1)\n set -o errexit\n \n BEGIN_FOLD configure\n-DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n END_FOLD\n \n BEGIN_FOLD distdir\n+# Create folder on host and docker, so that `cd` works\n+mkdir -p \"bitcoin-$HOST\"\n DOCKER_EXEC make distdir VERSION=$HOST\n END_FOLD\n \n@@ -39,7 +43,7 @@ cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n set -o errexit\n \n BEGIN_FOLD configure\n-DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n END_FOLD\n \n set -o errtrace"
      },
      {
        "sha": "49962bb49be0e3ec48b225c79f35e05a9a0977e4",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 4,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41162c0ba0a1aab8110ad65c4035c7087dce0f84/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "patch": "@@ -48,7 +48,3 @@ if [ \"$RUN_FUZZ_TESTS\" = \"true\" ]; then\n   DOCKER_EXEC test/fuzz/test_runner.py -l DEBUG ${DIR_FUZZ_IN}\n   END_FOLD\n fi\n-\n-set +o errexit\n-cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n-set -o errexit"
      }
    ]
  },
  {
    "sha": "b7bc9b8330096d1f4f1fa563b855b88da425226e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2JjOWI4MzMwMDk2ZDFmNGYxZmE1NjNiODU1Yjg4ZGE0MjUyMjZl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T21:53:15Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T21:53:18Z"
      },
      "message": "Merge #17444: wallet: Avoid showing GUI popups on RPC errors (take 2)\n\nfaffa7f0dcc9971cb20534816eccdf75bebc853a wallet: Avoid showing GUI popups on RPC errors (take 2) (MarcoFalke)\n\nPull request description:\n\n  Commit 8b0d82bb428de9e7f1da7c61574e7a8376a62d43 claims \"This commit does not change behavior.\" However, it re-introduced the bug I tried to fix in #17070\n\nACKs for top commit:\n  ryanofsky:\n    Code review ACK faffa7f0dcc9971cb20534816eccdf75bebc853a\n\nTree-SHA512: 99987f80c76414dca40c7d76b2fe4ea853debbe3c49e7acdeab2596c726a2935c468f4484d49212e65ecc9c8b0d861c0c2b83c1ddfc07670540699199dbfecb0",
      "tree": {
        "sha": "e328e0cf774b251c0e73a938d1aafc5d5555813e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e328e0cf774b251c0e73a938d1aafc5d5555813e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7bc9b8330096d1f4f1fa563b855b88da425226e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3Vtc4ACgkQ0upIUOdS\niyUiUg/+K5Z7qAIhI9dB3PEByeMaaUNFZhPGZ0sKGh6WcjviDjMQu4n3PKttfR/3\nz03pAdW+dBXVGanEjVaqBitF7iY8f/e3XVu0gtOwaZm8NMmwOAHIgWbVCyucTtSu\nxidnbfb333bHAnSzHFvkw/VUxY1kytSTCftItivcvjBtY/dxKFpV4ecoLRFHxtlP\nO7PQxljRkSPL90hanKrWulrLqBzAAxF3LkBoB2sSGwIuODE7II/pu7Cl6s5G6iBw\nrC1z2rfy4zl85jBo1r74/5GwAEAcnQFrsQul9nF6V+5Dklh7aGUTl6CRg+4v2MuY\nR/Sy2NUxwtyptfrmsyo+ICJeqjJr8+WaGEmXWKLXBu9MGWCCaDoTjFV6VMfEzTpp\nk9N9M4VNyN+FlxO7NUUqC9UtTTMG+zwqieqPoAh2WzwUiZYStIbuxdM+LLbwrkeF\nY/IrNE3QWxeghUGFWUUVvoF+ovRBIaXImxh6r0nGGjbPpDuTSlqLvH8BjTNBi2UU\nEFHEdfL06dasMjlT0WVZJfGhdmK6lMwy8urafdBuQ/pwraRDqctPcJL+IpwJthu5\nz9Vm503LqgGlNBlW2TE69DxWsk0uehyrLX8YlPJQ2pSg53uXgkNlu5w0GG7oA8XF\nnk7v0a3Ajid5HW/xx1bwWf0/paV7sVspjq45QTShcdhPCSm1850=\n=n7DO\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFled5Djj4p8IoQKmDgAtEAabLJi1gvytcdln1DyncqzCP/wEEMdGa0wTqFq\nh3SYfI3w2DUI8QRd1bXR8AiqAyQC/7jXFACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFWsk+ehQYwit/bl4uRFvg4I\n8QRd1bXR8AhEMrpe3xP8gwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wENELS4wDMLInuIzxeEM3+QkI8QRd1bXQ\n8AjfFUzrXWExCgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDqTFXRmKJYR1I4treZnMx1CPEEXdW10PAIlMmt\n2cQkGFoAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e328e0cf774b251c0e73a938d1aafc5d5555813e\nparent 41162c0ba0a1aab8110ad65c4035c7087dce0f84\nparent faffa7f0dcc9971cb20534816eccdf75bebc853a\nauthor MarcoFalke <falke.marco@gmail.com> 1574286795 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574286798 -0500\n\nMerge #17444: wallet: Avoid showing GUI popups on RPC errors (take 2)\n\nfaffa7f0dcc9971cb20534816eccdf75bebc853a wallet: Avoid showing GUI popups on RPC errors (take 2) (MarcoFalke)\n\nPull request description:\n\n  Commit 8b0d82bb428de9e7f1da7c61574e7a8376a62d43 claims \"This commit does not change behavior.\" However, it re-introduced the bug I tried to fix in #17070\n\nACKs for top commit:\n  ryanofsky:\n    Code review ACK faffa7f0dcc9971cb20534816eccdf75bebc853a\n\nTree-SHA512: 99987f80c76414dca40c7d76b2fe4ea853debbe3c49e7acdeab2596c726a2935c468f4484d49212e65ecc9c8b0d861c0c2b83c1ddfc07670540699199dbfecb0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7bc9b8330096d1f4f1fa563b855b88da425226e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7bc9b8330096d1f4f1fa563b855b88da425226e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7bc9b8330096d1f4f1fa563b855b88da425226e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41162c0ba0a1aab8110ad65c4035c7087dce0f84"
      },
      {
        "sha": "faffa7f0dcc9971cb20534816eccdf75bebc853a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faffa7f0dcc9971cb20534816eccdf75bebc853a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faffa7f0dcc9971cb20534816eccdf75bebc853a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ff182c847f7e44056a5ea9219ec8e48f3df0c10d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7bc9b8330096d1f4f1fa563b855b88da425226e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7bc9b8330096d1f4f1fa563b855b88da425226e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b7bc9b8330096d1f4f1fa563b855b88da425226e",
        "patch": "@@ -3651,9 +3651,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain,\n         }\n \n         if (auto spk_man = walletInstance->m_spk_man.get()) {\n-            std::string error;\n             if (!spk_man->Upgrade(prev_version, error)) {\n-                chain.initError(error);\n                 return nullptr;\n             }\n         }"
      }
    ]
  },
  {
    "sha": "e9a27cf338dc618b8ecab8984abc54d588de8a05",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWEyN2NmMzM4ZGM2MThiOGVjYWI4OTg0YWJjNTRkNTg4ZGU4YTA1",
    "commit": {
      "author": {
        "name": "Neha Narula",
        "email": "narula@gmail.com",
        "date": "2019-11-19T18:07:55Z"
      },
      "committer": {
        "name": "Neha Narula",
        "email": "narula@gmail.com",
        "date": "2019-11-21T00:06:52Z"
      },
      "message": "refactor: Remove unused COINBASE_FLAGS\n\nCommit d449772cf69c01932fc5d72c46054815d6300b3c stopped setting\nCOINBASE_FLAGS, and it looks like it hasn't been used since P2SH.\nUpdate the help string to remove \"flags\", which is not specified in\nBIP 22.",
      "tree": {
        "sha": "df10553c903f1db7de9dff1c88f86e59e383fe19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df10553c903f1db7de9dff1c88f86e59e383fe19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9a27cf338dc618b8ecab8984abc54d588de8a05",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a27cf338dc618b8ecab8984abc54d588de8a05",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9a27cf338dc618b8ecab8984abc54d588de8a05",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a27cf338dc618b8ecab8984abc54d588de8a05/comments",
    "author": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 2,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2f6feb9e0293633451ac96ca135498e96832b1bd",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "patch": "@@ -435,7 +435,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     ++nExtraNonce;\n     unsigned int nHeight = pindexPrev->nHeight+1; // Height first in coinbase required for block.version=2\n     CMutableTransaction txCoinbase(*pblock->vtx[0]);\n-    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n+    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce));\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));"
      },
      {
        "sha": "85f9f1e8b76c00d53e37469e6be25925e1449bd6",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "patch": "@@ -375,9 +375,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"      }\\n\"\n             \"      ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"coinbaseaux\\\" : {                 (json object) data that should be included in the coinbase's scriptSig content\\n\"\n-            \"      \\\"flags\\\" : \\\"xx\\\"                  (string) key name is to be ignored, and value included in scriptSig\\n\"\n-            \"  },\\n\"\n+            \"  \\\"coinbaseaux\\\" : { ... },            (json object) data that should be included in the coinbase's scriptSig content\\n\"\n             \"  \\\"coinbasevalue\\\" : n,              (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in satoshis)\\n\"\n             \"  \\\"coinbasetxn\\\" : { ... },          (json object) information for coinbase transaction\\n\"\n             \"  \\\"target\\\" : \\\"xxxx\\\",                (string) The hash target\\n\"\n@@ -607,7 +605,6 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     }\n \n     UniValue aux(UniValue::VOBJ);\n-    aux.pushKV(\"flags\", HexStr(COINBASE_FLAGS.begin(), COINBASE_FLAGS.end()));\n \n     arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n "
      },
      {
        "sha": "8f5d3331704d849f3a4fb2ae355fc89897efcfa4",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "patch": "@@ -129,9 +129,6 @@ CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n CBlockPolicyEstimator feeEstimator;\n CTxMemPool mempool(&feeEstimator);\n \n-/** Constant stuff for coinbase transactions we create: */\n-CScript COINBASE_FLAGS;\n-\n // Internal stuff\n namespace {\n     CBlockIndex* pindexBestInvalid = nullptr;"
      },
      {
        "sha": "d87113c41f63c4ad239e57b00759deb65e97e809",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9a27cf338dc618b8ecab8984abc54d588de8a05/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "patch": "@@ -137,7 +137,6 @@ struct BlockHasher\n     size_t operator()(const uint256& hash) const { return ReadLE64(hash.begin()); }\n };\n \n-extern CScript COINBASE_FLAGS;\n extern CCriticalSection cs_main;\n extern CBlockPolicyEstimator feeEstimator;\n extern CTxMemPool mempool;"
      }
    ]
  },
  {
    "sha": "faeeca87b65dd98e0efbc54443b3f8854cae9c00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWVlY2E4N2I2NWRkOThlMGVmYmM1NDQ0M2IzZjg4NTRjYWU5YzAw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T00:10:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T00:56:26Z"
      },
      "message": "scripted-diff: Move various folders to ci scratch dir\n\n-BEGIN VERIFY SCRIPT-\n # move ci sanitizer-output\n sed -i -e 's|BASE_BUILD_DIR}/sanitizer-output|BASE_SCRATCH_DIR}/sanitizer-output|g' $(git grep -l BASE_BUILD_DIR ci)\n # move qa-assets\n sed -i -e 's|BASE_BUILD_DIR}/qa-assets|BASE_SCRATCH_DIR}/qa-assets|g'               $(git grep -l BASE_BUILD_DIR ci)\n # move out dir\n sed -i -e 's|BASE_BUILD_DIR/out|BASE_SCRATCH_DIR/out|g'                             $(git grep -l BASE_BUILD_DIR ci)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "a39ec6bf8b8e4b9dcb6082b13569ba7323e686b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a39ec6bf8b8e4b9dcb6082b13569ba7323e686b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faeeca87b65dd98e0efbc54443b3f8854cae9c00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUge5Qv+M4Q3hDsQQ8Tb5BsJxaCS7l6Ptr9O0gU+WhzTG7BTzhtwG58h5Ym+c+PX\nsdQBQ3aWX891IESsVOqh7fto//AC8QvmhBGd1W8j64p7v566rO3qgX3Xt6kgIGgU\nqPdIInkrnYY7GtyvXgddXvy5B9xJmm5ydXJtvCsCXoI4x49a3geasfHPsoci3g97\nFnxCvNt/xyWx/XijZj3ueTfWcnQ7Y147y9ylTZtSFC6/sV1vA4Us/EqKxgPlzT4F\nQrLJgVtLU4LGMnrv9HA9Nt9+EhHxbrbEG226PxfMT6NNmlIQMxv6Osu++ZkAHrwN\nOvI0iU/P50UuMe+8y1J2/flx/7Z5yNCmXFzbq814BeFMU47RZ6lg/MoHwtebvunG\nOwaE3uKbL0Gjn/ykMz+/g9rC93ZzbSpBq2tXBPcvVqnRTPneRqrlY2r2w9ywG0V2\nPhnOe5B9RfHdYLTUVR6pczr5gnffFL7gg+XXoQvOq+hU2ZdQhFUC/+pLXrSvwlAF\nIii1RhrT\n=L0YB\n-----END PGP SIGNATURE-----",
        "payload": "tree a39ec6bf8b8e4b9dcb6082b13569ba7323e686b1\nparent 41162c0ba0a1aab8110ad65c4035c7087dce0f84\nauthor MarcoFalke <falke.marco@gmail.com> 1574295055 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574297786 -0500\n\nscripted-diff: Move various folders to ci scratch dir\n\n-BEGIN VERIFY SCRIPT-\n # move ci sanitizer-output\n sed -i -e 's|BASE_BUILD_DIR}/sanitizer-output|BASE_SCRATCH_DIR}/sanitizer-output|g' $(git grep -l BASE_BUILD_DIR ci)\n # move qa-assets\n sed -i -e 's|BASE_BUILD_DIR}/qa-assets|BASE_SCRATCH_DIR}/qa-assets|g'               $(git grep -l BASE_BUILD_DIR ci)\n # move out dir\n sed -i -e 's|BASE_BUILD_DIR/out|BASE_SCRATCH_DIR/out|g'                             $(git grep -l BASE_BUILD_DIR ci)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeeca87b65dd98e0efbc54443b3f8854cae9c00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faeeca87b65dd98e0efbc54443b3f8854cae9c00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeeca87b65dd98e0efbc54443b3f8854cae9c00/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41162c0ba0a1aab8110ad65c4035c7087dce0f84",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41162c0ba0a1aab8110ad65c4035c7087dce0f84"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c7f7cb267a8e1ed49f383a0ce15438a2869ba082",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=faeeca87b65dd98e0efbc54443b3f8854cae9c00",
        "patch": "@@ -41,11 +41,11 @@ export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n # Folder where the build is done (depends and dist). Can not be changed and is equal to the root of the git repo\n export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_ROOT_DIR}\n # Folder where the build is done (bin and lib). Can not be changed.\n-export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}\n export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git}\n export GOAL=${GOAL:-install}\n-export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n export CI_RETRY_EXE=${CI_RETRY_EXE:retry}"
      },
      {
        "sha": "fe9a031b8d51ee7499588a162a7229c719cd1d20",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=faeeca87b65dd98e0efbc54443b3f8854cae9c00",
        "patch": "@@ -35,7 +35,7 @@ mkdir -p \"${CCACHE_DIR}\"\n \n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n@@ -88,7 +88,7 @@ if [ ! -d ${DIR_QA_ASSETS} ]; then\n fi\n export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n \n-DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n \n if [ -z \"$RUN_CI_ON_HOST\" ]; then\n   echo \"Create $BASE_BUILD_DIR\""
      },
      {
        "sha": "25669f4049f97bf723a65271d7a6e81575d4721c",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faeeca87b65dd98e0efbc54443b3f8854cae9c00/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=faeeca87b65dd98e0efbc54443b3f8854cae9c00",
        "patch": "@@ -47,7 +47,7 @@ DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOI\n END_FOLD\n \n set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${BASE_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n \n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )"
      }
    ]
  },
  {
    "sha": "651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTFjNjM2ZjllZDRhNjBjNGNkMDAzZTU2NmUzYWM2YWU2ZWRhM2Vk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-21T11:39:36Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-21T11:52:41Z"
      },
      "message": "build: Fix configure report about qr",
      "tree": {
        "sha": "2b95fcd83060bf393808fe4af933fbc9d17f3cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2b95fcd83060bf393808fe4af933fbc9d17f3cb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3WeowACgkQQQEIES5+\nqB92xRAAjKfXAMQpwSMKCiyWrLVN/ETE5xFdK7DqUAzZxNbH7GhjzYacnEj0sux4\nmS+cNnStkcz/phVAHCxd2is9ZOs4wQIPpFA1RgWTTlc5Nv7WGNxACtQ7cxQmOnpV\n33Ld9sIGUD+g3cGjrs7By4qA7r9mpI0O/uu7T8u1BLwZF1/eng2qCq93k+h0k+BC\nt3kwxgUZFY9qNoVJuv4/RVTE/zJZE50hDJOsuSiHzCIHwtXRJW7oRrLOcYW3tHhX\nVANK0/isywBFYCroXls3yVygKyZKka9BCo6XFjtcsU4w5k6teEsMplveOC75Nw9z\nWotGJC4XzzJ8+L0yGVZx43SqG1tH9XualDDe2ex7ysuFgWdvDSVJE+yN1tx0LMnz\n2rkfCoz6k+PwLebrIizrEByOZWg6s2Sn9wrlGREkd65RAKpgLVKekXElSj9fb3Ql\nxHcs3X3IoUa2L2omo3/pSjFUoe/XDq65DOfbVzL5a0PKxcxFn77ti3jsbr92pdRM\n9vVOi7r/43bCmvOLSW2C3g37r/1TWEoIv97zHhHxrDaUX94vTCCJDsSyj7arUUIF\nnXm9OOco1MD7COR8J9DZfdO+1ehfeGHp+0S9FwRwBAKUCtD8RLcdzaFycbA3m6fS\ncWZcdAVPzn6tCc45WG7RJl0xjY5mS2UI0BvRKQq0emFVYDQxO1Y=\n=lGWR\n-----END PGP SIGNATURE-----",
        "payload": "tree 2b95fcd83060bf393808fe4af933fbc9d17f3cb4\nparent b7bc9b8330096d1f4f1fa563b855b88da425226e\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574336376 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574337161 +0200\n\nbuild: Fix configure report about qr\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7bc9b8330096d1f4f1fa563b855b88da425226e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7bc9b8330096d1f4f1fa563b855b88da425226e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7bc9b8330096d1f4f1fa563b855b88da425226e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ed9ccade6d73c2751d63609ac9ce4ca015f8bd1e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
        "patch": "@@ -1471,18 +1471,16 @@ if test x$bitcoin_enable_qt != xno; then\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n   if test x$have_qrencode = xno; then\n     if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n     fi\n-    AC_MSG_RESULT(no)\n+    use_qr=no\n   else\n     if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n       AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n       use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n     fi\n   fi\n+  AC_MSG_RESULT([$use_qr])\n \n   if test x$XGETTEXT = x; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")"
      }
    ]
  },
  {
    "sha": "5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZmY3OThjMzliOGE3MmQ2NGJkMmMyM2Y0MDBkMWMzNWNhMjdhMWVk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T15:11:02Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T15:11:06Z"
      },
      "message": "Merge #17439: refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE constants consistently\n\ncb9d830a00995ee60e71780c04f6193efd02c511 test: Use proper MAX_SCRIPT_ELEMENT_SIZE (Hennadii Stepanov)\n402ee706d8afab3d8d883cd15a660740fcebeb55 refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE const (Hennadii Stepanov)\n\nPull request description:\n\n  This PR replaces well-known \"magic\" numbers with proper `MAX_SCRIPT_ELEMENT_SIZE` constants.\n\nACKs for top commit:\n  practicalswift:\n    ACK cb9d830a00995ee60e71780c04f6193efd02c511 -- diff looks correct and change appears to be complete\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17439/commits/cb9d830a00995ee60e71780c04f6193efd02c511\n\nTree-SHA512: 5fa033275d6df7e35962c38bfdf09a7b5cd7ef2ccdd5e30a39ba47d0c21ac779a5559c23f5ef5bfd4293be0fc639e836a308bbedf0e34717e1eead983b389bbd",
      "tree": {
        "sha": "8eb1961757a281d339ac4563b85817c92ca65bf3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8eb1961757a281d339ac4563b85817c92ca65bf3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3WqQoACgkQ0upIUOdS\niyUSYA//VwEe9eTVo8fcs87RYmD4Tb3TRHCmPgfdW3eJbsIeBNHJgpgHpoK7Noc+\n6o6k9+1+ba0J6PfXhHWBnRaLbXCgf1lP2zDMSm4VQgaKKEPoKNEnY7B1KqKfQE8M\n9H3NbaJqNR+tOvN4xyGrl1ROMzAxMVDWB8lyaVjacNHDkgWyIXk3hhHOAfE8kZBW\nR/9goDaS6mkyOk7xy5sLKukQ2JabUM2vLiqiTIyrzdPL75L4RnNuoQAt/19qY8qI\nv25ki3z3vEmO2j4/kj3RzP5mbfAHpDUnC/vshn97P1b/VlhviXgXpe1KE1G2mytB\nRti47EvIwGdMd/ynx1JASNISt3zVEZgPqvtPvux99mBJl2kxjRJfNMVar3ArXGIS\n4jP3YXbKdMWZJVWw7gWMgY9UOdzJvFYTeCzTnjlmFXdANDx2e+rBoAeVqaTVZSfl\nCpTwrr6RnzhB3lY7MmuTxbYln3bemQNoB8MdYFKMvgIiNVgDA8Mw567jnNoiXZuh\n0m+Oq5eKY5nxtSghS0NzhIfbdc+s+elH7N5BCyS0qxmKY0VNLJCZOE8PXMw9wa+t\nJpBT8h0Y1uXRx3HNexvlBelnSdQVw86AiXW7glGU5s4PzZc0oBhJSfUQKZfbocmZ\nlfF55cuCDKyqodc+Rai1ZjT69zNK2DE1Mm99/iyZ+oLoZXnqFRQ=\n=PMTu\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKJ4Z/F2hxvb3jBBH3pw2wEJnIKurKdOshQuf6ZooW6BCP/wEMaA2dy+wYNE\nOLHfh6tSDRcI8QRd1qkN8AhtzhQN003nZwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wENbXODv0jquQA8fURtsreoAI8QRd1qkN\n8AiV9i8BfcNsPQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEOEir/6YUCSL+08TW1CN6B8I8QRd1qkN8Ag5eViZcKag\nqgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDxh3iTEyxQAvffx4Fc7yUlCPEEXdapDfAIv5Srs8/CjmEAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 8eb1961757a281d339ac4563b85817c92ca65bf3\nparent b7bc9b8330096d1f4f1fa563b855b88da425226e\nparent cb9d830a00995ee60e71780c04f6193efd02c511\nauthor MarcoFalke <falke.marco@gmail.com> 1574349062 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574349066 -0500\n\nMerge #17439: refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE constants consistently\n\ncb9d830a00995ee60e71780c04f6193efd02c511 test: Use proper MAX_SCRIPT_ELEMENT_SIZE (Hennadii Stepanov)\n402ee706d8afab3d8d883cd15a660740fcebeb55 refactor: Use proper MAX_SCRIPT_ELEMENT_SIZE const (Hennadii Stepanov)\n\nPull request description:\n\n  This PR replaces well-known \"magic\" numbers with proper `MAX_SCRIPT_ELEMENT_SIZE` constants.\n\nACKs for top commit:\n  practicalswift:\n    ACK cb9d830a00995ee60e71780c04f6193efd02c511 -- diff looks correct and change appears to be complete\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17439/commits/cb9d830a00995ee60e71780c04f6193efd02c511\n\nTree-SHA512: 5fa033275d6df7e35962c38bfdf09a7b5cd7ef2ccdd5e30a39ba47d0c21ac779a5559c23f5ef5bfd4293be0fc639e836a308bbedf0e34717e1eead983b389bbd\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7bc9b8330096d1f4f1fa563b855b88da425226e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7bc9b8330096d1f4f1fa563b855b88da425226e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7bc9b8330096d1f4f1fa563b855b88da425226e"
      },
      {
        "sha": "cb9d830a00995ee60e71780c04f6193efd02c511",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb9d830a00995ee60e71780c04f6193efd02c511",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb9d830a00995ee60e71780c04f6193efd02c511"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "32b388b7fa16f3c0c4be1348dc39990959cbb9f1",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
        "patch": "@@ -815,8 +815,8 @@ std::unique_ptr<DescriptorImpl> ParseScript(Span<const char>& sp, ParseScriptCon\n             }\n         }\n         if (ctx == ParseScriptContext::P2SH) {\n-            if (script_size + 3 > 520) {\n-                error = strprintf(\"P2SH script is too large, %d bytes is larger than 520 bytes\", script_size + 3);\n+            if (script_size + 3 > MAX_SCRIPT_ELEMENT_SIZE) {\n+                error = strprintf(\"P2SH script is too large, %d bytes is larger than %d bytes\", script_size + 3, MAX_SCRIPT_ELEMENT_SIZE);\n                 return nullptr;\n             }\n         }"
      },
      {
        "sha": "fdb70097eea6744e3c02dba2fd186dd008cd79b7",
        "filename": "test/functional/p2p_segwit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed/test/functional/p2p_segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed/test/functional/p2p_segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_segwit.py?ref=5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
        "patch": "@@ -1116,7 +1116,7 @@ def test_max_witness_program_length(self):\n         MAX_PROGRAM_LENGTH = 10000\n \n         # This program is 19 max pushes (9937 bytes), then 64 more opcode-bytes.\n-        long_witness_program = CScript([b'a' * 520] * 19 + [OP_DROP] * 63 + [OP_TRUE])\n+        long_witness_program = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 63 + [OP_TRUE])\n         assert len(long_witness_program) == MAX_PROGRAM_LENGTH + 1\n         long_witness_hash = sha256(long_witness_program)\n         long_script_pubkey = CScript([OP_0, long_witness_hash])\n@@ -1140,7 +1140,7 @@ def test_max_witness_program_length(self):\n         test_witness_block(self.nodes[0], self.test_node, block, accepted=False)\n \n         # Try again with one less byte in the witness program\n-        witness_program = CScript([b'a' * 520] * 19 + [OP_DROP] * 62 + [OP_TRUE])\n+        witness_program = CScript([b'a' * MAX_SCRIPT_ELEMENT_SIZE] * 19 + [OP_DROP] * 62 + [OP_TRUE])\n         assert len(witness_program) == MAX_PROGRAM_LENGTH\n         witness_hash = sha256(witness_program)\n         script_pubkey = CScript([OP_0, witness_hash])"
      }
    ]
  },
  {
    "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTY5NDM2MjBhYjM2OWU4ZTA4NjVjM2VjMmQyODQ4YmE5Mzg5MzI1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T15:14:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T15:18:02Z"
      },
      "message": "Merge #17407: node: Add reference to mempool in NodeContext\n\nfa538813b1c382cf135cbf2a0cc3fa01f36964d8 scripted-diff: Replace ::mempool with m_node.mempool in tests (MarcoFalke)\n8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623 test: Replace recursive lock with locking annotations (MarcoFalke)\nfac07f2038a3ccd5edadc6e6122c02fa30e697bd node: Add reference to mempool in NodeContext (MarcoFalke)\n\nPull request description:\n\n  This is the first step toward making the mempool a global that is not initialized before main.\n\n  #### Motivation\n\n  Currently the mempool is a global that is initialized before the `main` function. This is confusing and easy to get wrong. E.g. the mempool constructor queries state that has not been initialized, like randomness (fixed), or command line arguments (not an issue last time I checked). Also without having the chainstate (chain tip) initialized first, it doesn't make conceptually sense to have a mempool, since the mempool builds txs on top of the utxo set (chain tip).\n\n  Finally, in the future someone might want to run a consensus-only full node (`-nowallet -noblockfilter -no... -nomempool` command line options) that only verifies blocks and updates the utxo set.\n\n  This is conceptually the same change that has already been done for the connection manager `CConnman`.\n\nACKs for top commit:\n  jnewbery:\n    utACK fa538813b1c382cf135cbf2a0cc3fa01f36964d8\n  ariard:\n    Tested ACK fa53881.\n\nTree-SHA512: 2c446a8a51476354aad7126c2b833500d36b24490caa94f847b2bdc622054de0dae28980f23e3d91b1b492dc32931656d98dbd019af9e4e58f2f8c5375aac694",
      "tree": {
        "sha": "ffd70333e807d5e0a79f00a4b7315cf4243e1a11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ffd70333e807d5e0a79f00a4b7315cf4243e1a11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3WqqoACgkQ0upIUOdS\niyXTPA//QFkmRLd4CpgVeRzeLxY3xPa2QzfjcGvWvkzz3au59fXeiSLolCMAcHLA\nggxzoVdiKNTJ6putm+bUVwyyTJz8iqqgW67I9yRQ1uztBhKyD5LGU7p/iI4uy0dJ\nJMlu3bxrs5uRLZc177unoqfF1npMYyqntsFJAaHogffxFoSHz1vfA2uQhe4rrSm6\nFz3wzwUlwoNgKaLEu32vkpLYbhon69CxkCN3U39J0YqbRf4SHicCbxatQCXtlLKp\nGCCxUO6WmqPdDUouY7dveHEIz+vTJHr0XzPBGypNQJzlPYddq9MUcX1ug8MRKtxt\nPySSqcwdrObAkwwzFIS/tuv7e85HP0U2gc1xTvHXTusBnpAfzR1mIb1dCA2jW2kS\n7oIvhyUUxXdLwB0C3T6+6CkJk/895hjlTh9BWPAz+bSrL0oFqANjDFfOK7WaqVAT\nCllIAwUL/lbTqDZH2OjNVP2yu+53N1pqYaOr0CKsdp76oU1LbH8tba8FNfzktawA\nMBijbKZi+seZHvCrjJt8CGhWROpE4mggZigdsbJjEbFx9IOECYR0vkwf8DamKbx+\nZHKALsadBQkVMRVCr8kldy4EJH+gtdSFcDqjttT4FAqL2S/fX03q8RC0ati1RGk2\n05xHHvKXSY2qToWPY65AwGk9hFS7ekfVGO98qiJRoaDdDaa65g0=\n=JAWl\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIe18qm1wcmckRZe4PLBGwA84DxyJ2JpgZgUOQWbLdQSCP/wEASavCtYLL/C\noj54ThzWVdYI8QRd1qqr8AhX1JpHcs4a5ACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEDTqm12hWwYZibCiM0d+\nq1kI8QRd1qqs8AgInP4vAL9bvwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDRSut0r1LcreJ85V6VG3xdCPEE\nXdaqq/AI2+h5p0AKwCYAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ffd70333e807d5e0a79f00a4b7315cf4243e1a11\nparent 5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed\nparent fa538813b1c382cf135cbf2a0cc3fa01f36964d8\nauthor MarcoFalke <falke.marco@gmail.com> 1574349263 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574349482 -0500\n\nMerge #17407: node: Add reference to mempool in NodeContext\n\nfa538813b1c382cf135cbf2a0cc3fa01f36964d8 scripted-diff: Replace ::mempool with m_node.mempool in tests (MarcoFalke)\n8888ad02e204b0fa7a2ea2cfed2fc3f298cf1623 test: Replace recursive lock with locking annotations (MarcoFalke)\nfac07f2038a3ccd5edadc6e6122c02fa30e697bd node: Add reference to mempool in NodeContext (MarcoFalke)\n\nPull request description:\n\n  This is the first step toward making the mempool a global that is not initialized before main.\n\n  #### Motivation\n\n  Currently the mempool is a global that is initialized before the `main` function. This is confusing and easy to get wrong. E.g. the mempool constructor queries state that has not been initialized, like randomness (fixed), or command line arguments (not an issue last time I checked). Also without having the chainstate (chain tip) initialized first, it doesn't make conceptually sense to have a mempool, since the mempool builds txs on top of the utxo set (chain tip).\n\n  Finally, in the future someone might want to run a consensus-only full node (`-nowallet -noblockfilter -no... -nomempool` command line options) that only verifies blocks and updates the utxo set.\n\n  This is conceptually the same change that has already been done for the connection manager `CConnman`.\n\nACKs for top commit:\n  jnewbery:\n    utACK fa538813b1c382cf135cbf2a0cc3fa01f36964d8\n  ariard:\n    Tested ACK fa53881.\n\nTree-SHA512: 2c446a8a51476354aad7126c2b833500d36b24490caa94f847b2bdc622054de0dae28980f23e3d91b1b492dc32931656d98dbd019af9e4e58f2f8c5375aac694\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5ff798c39b8a72d64bd2c23f400d1c35ca27a1ed"
      },
      {
        "sha": "fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa538813b1c382cf135cbf2a0cc3fa01f36964d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa538813b1c382cf135cbf2a0cc3fa01f36964d8"
      }
    ],
    "stats": {
      "total": 175,
      "additions": 100,
      "deletions": 75
    },
    "files": [
      {
        "sha": "60209eb60a739bf4c9d26de01636f0ab0f3a66ac",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -284,6 +284,7 @@ void Shutdown(NodeContext& node)\n     GetMainSignals().UnregisterWithMempoolSignals(mempool);\n     globalVerifyHandle.reset();\n     ECC_Stop();\n+    if (node.mempool) node.mempool = nullptr;\n     LogPrintf(\"%s: done\\n\", __func__);\n }\n \n@@ -1635,6 +1636,11 @@ bool AppInitMain(NodeContext& node)\n         return false;\n     }\n \n+    // Now that the chain state is loaded, make mempool generally available in the node context. For example the\n+    // connection manager, wallet, or RPC threads, which are all started after this, may use it from the node context.\n+    assert(!node.mempool);\n+    node.mempool = &::mempool;\n+\n     fs::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n     CAutoFile est_filein(fsbridge::fopen(est_path, \"rb\"), SER_DISK, CLIENT_VERSION);\n     // Allowed to fail as this file IS missing on first startup."
      },
      {
        "sha": "dab5b5d048d4c8062905ae224484a9a9caade14b",
        "filename": "src/node/context.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -10,6 +10,7 @@\n \n class BanMan;\n class CConnman;\n+class CTxMemPool;\n class PeerLogicValidation;\n namespace interfaces {\n class Chain;\n@@ -22,13 +23,13 @@ class ChainClient;\n //! This is used by init, rpc, and test code to pass object references around\n //! without needing to declare the same variables and parameters repeatedly, or\n //! to use globals. More variables could be added to this struct (particularly\n-//! references to validation and mempool objects) to eliminate use of globals\n+//! references to validation objects) to eliminate use of globals\n //! and make code more modular and testable. The struct isn't intended to have\n //! any member functions. It should just be a collection of references that can\n //! be used without pulling in unwanted dependencies or functionality.\n-struct NodeContext\n-{\n+struct NodeContext {\n     std::unique_ptr<CConnman> connman;\n+    CTxMemPool* mempool{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n     std::unique_ptr<PeerLogicValidation> peer_logic;\n     std::unique_ptr<BanMan> banman;\n     std::unique_ptr<interfaces::Chain> chain;"
      },
      {
        "sha": "374fc9b59b2b4e1411d34108092db37f3bccaef0",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -32,7 +32,6 @@ void RPCNestedTests::rpcNestedTests()\n     // do some test setup\n     // could be moved to a more generic place when we add more tests on QT level\n     tableRPC.appendCommand(\"rpcNestedTest\", &vRPCCommands[0]);\n-    //mempool.setSanityCheck(1.0);\n \n     TestingSetup test;\n "
      },
      {
        "sha": "946152d9aa3836126fef879a1c3e0679eded2b60",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -15,6 +15,7 @@\n #include <hash.h>\n #include <index/blockfilterindex.h>\n #include <node/coinstats.h>\n+#include <node/context.h>\n #include <node/utxo_snapshot.h>\n #include <policy/feerate.h>\n #include <policy/policy.h>\n@@ -53,6 +54,15 @@ static Mutex cs_blockchange;\n static std::condition_variable cond_blockchange;\n static CUpdatedBlock latestblock;\n \n+CTxMemPool& EnsureMemPool()\n+{\n+    CHECK_NONFATAL(g_rpc_node);\n+    if (!g_rpc_node->mempool) {\n+        throw JSONRPCError(RPC_CLIENT_MEMPOOL_DISABLED, \"Mempool disabled or instance not found\");\n+    }\n+    return *g_rpc_node->mempool;\n+}\n+\n /* Calculate the difficulty for a given block index.\n  */\n double GetDifficulty(const CBlockIndex* blockindex)"
      },
      {
        "sha": "ccb3e3972248ff6231fb868075dc48b7504ef09d",
        "filename": "src/rpc/blockchain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -52,4 +52,6 @@ void CalculatePercentilesByWeight(CAmount result[NUM_GETBLOCKSTATS_PERCENTILES],\n //! direct way to pass in state to RPC methods without globals.\n extern NodeContext* g_rpc_node;\n \n+CTxMemPool& EnsureMemPool();\n+\n #endif"
      },
      {
        "sha": "ca779497b9d816158238dad4c509a71853822dfd",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -63,6 +63,9 @@ enum RPCErrorCode\n     RPC_CLIENT_INVALID_IP_OR_SUBNET = -30, //!< Invalid IP/Subnet\n     RPC_CLIENT_P2P_DISABLED         = -31, //!< No valid connection manager instance found\n \n+    //! Chain errors\n+    RPC_CLIENT_MEMPOOL_DISABLED     = -33, //!< No mempool instance found\n+\n     //! Wallet errors\n     RPC_WALLET_ERROR                = -4,  //!< Unspecified problem with wallet (key not found etc.)\n     RPC_WALLET_INSUFFICIENT_FUNDS   = -6,  //!< Not enough funds in wallet or account"
      },
      {
        "sha": "d79a598bf16239d0ed7620816a4f73ff4cbc1306",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 47,
        "changes": 98,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -23,7 +23,17 @@\n \n #include <boost/test/unit_test.hpp>\n \n-BOOST_FIXTURE_TEST_SUITE(miner_tests, TestingSetup)\n+namespace miner_tests {\n+struct MinerTestingSetup : public TestingSetup {\n+    void TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_node.mempool->cs);\n+    bool TestSequenceLocks(const CTransaction& tx, int flags) EXCLUSIVE_LOCKS_REQUIRED(::cs_main, m_node.mempool->cs)\n+    {\n+        return CheckSequenceLocks(*m_node.mempool, tx, flags);\n+    }\n+};\n+} // namespace miner_tests\n+\n+BOOST_FIXTURE_TEST_SUITE(miner_tests, MinerTestingSetup)\n \n // BOOST_CHECK_EXCEPTION predicates to check the specific validation error\n class HasReason {\n@@ -89,16 +99,10 @@ static CBlockIndex CreateBlockIndex(int nHeight) EXCLUSIVE_LOCKS_REQUIRED(cs_mai\n     return index;\n }\n \n-static bool TestSequenceLocks(const CTransaction &tx, int flags) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n-{\n-    LOCK(::mempool.cs);\n-    return CheckSequenceLocks(::mempool, tx, flags);\n-}\n-\n // Test suite for ancestor feerate transaction selection.\n // Implemented as an additional function, rather than a separate test case,\n // to allow reusing the blockchain created in CreateNewBlock_validity.\n-static void TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst) EXCLUSIVE_LOCKS_REQUIRED(cs_main, ::mempool.cs)\n+void MinerTestingSetup::TestPackageSelection(const CChainParams& chainparams, const CScript& scriptPubKey, const std::vector<CTransactionRef>& txFirst)\n {\n     // Test the ancestor feerate transaction selection.\n     TestMemPoolEntryHelper entry;\n@@ -114,19 +118,19 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     tx.vout[0].nValue = 5000000000LL - 1000;\n     // This tx has a low fee: 1000 satoshis\n     uint256 hashParentTx = tx.GetHash(); // save this txid for later use\n-    mempool.addUnchecked(entry.Fee(1000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(1000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx has a medium fee: 10000 satoshis\n     tx.vin[0].prevout.hash = txFirst[1]->GetHash();\n     tx.vout[0].nValue = 5000000000LL - 10000;\n     uint256 hashMediumFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(10000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(10000).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx has a high fee, but depends on the first transaction\n     tx.vin[0].prevout.hash = hashParentTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000; // 50k satoshi fee\n     uint256 hashHighFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n \n     std::unique_ptr<CBlockTemplate> pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[1]->GetHash() == hashParentTx);\n@@ -137,7 +141,7 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     tx.vin[0].prevout.hash = hashHighFeeTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000; // 0 fee\n     uint256 hashFreeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(0).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(0).FromTx(tx));\n     size_t freeTxSize = ::GetSerializeSize(tx, PROTOCOL_VERSION);\n \n     // Calculate a fee on child transaction that will put the package just\n@@ -147,7 +151,7 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     tx.vin[0].prevout.hash = hashFreeTx;\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000 - feeToUse;\n     uint256 hashLowFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     // Verify that the free tx and the low fee tx didn't get selected\n     for (size_t i=0; i<pblocktemplate->block.vtx.size(); ++i) {\n@@ -158,10 +162,10 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     // Test that packages above the min relay fee do get included, even if one\n     // of the transactions is below the min relay fee\n     // Remove the low fee transaction and replace with a higher fee transaction\n-    mempool.removeRecursive(CTransaction(tx), MemPoolRemovalReason::REPLACED);\n+    m_node.mempool->removeRecursive(CTransaction(tx), MemPoolRemovalReason::REPLACED);\n     tx.vout[0].nValue -= 2; // Now we should be just over the min relay fee\n     hashLowFeeTx = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse+2).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse+2).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[4]->GetHash() == hashFreeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[5]->GetHash() == hashLowFeeTx);\n@@ -174,15 +178,15 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     tx.vout[0].nValue = 5000000000LL - 100000000;\n     tx.vout[1].nValue = 100000000; // 1BTC output\n     uint256 hashFreeTx2 = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(0).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(0).SpendsCoinbase(true).FromTx(tx));\n \n     // This tx can't be mined by itself\n     tx.vin[0].prevout.hash = hashFreeTx2;\n     tx.vout.resize(1);\n     feeToUse = blockMinFeeRate.GetFee(freeTxSize);\n     tx.vout[0].nValue = 5000000000LL - 100000000 - feeToUse;\n     uint256 hashLowFeeTx2 = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(feeToUse).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(feeToUse).SpendsCoinbase(false).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n \n     // Verify that this tx isn't selected.\n@@ -195,7 +199,7 @@ static void TestPackageSelection(const CChainParams& chainparams, const CScript&\n     // as well.\n     tx.vin[0].prevout.n = 1;\n     tx.vout[0].nValue = 100000000 - 10000; // 10k satoshi fee\n-    mempool.addUnchecked(entry.Fee(10000).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(10000).FromTx(tx));\n     pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[8]->GetHash() == hashLowFeeTx2);\n }\n@@ -252,7 +256,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     }\n \n     LOCK(cs_main);\n-    LOCK(::mempool.cs);\n+    LOCK(m_node.mempool->cs);\n \n     // Just to make sure we can still make simple blocks\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n@@ -276,12 +280,12 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we don't set the # of sig ops in the CTxMemPoolEntry, template creation fails\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n \n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-blk-sigops\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vout[0].nValue = BLOCKSUBSIDY;\n@@ -291,11 +295,11 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n         // If we do set the # of sig ops in the CTxMemPoolEntry, template creation passes\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // block size > limit\n     tx.vin[0].scriptSig = CScript();\n@@ -311,59 +315,59 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         tx.vout[0].nValue -= LOWFEE;\n         hash = tx.GetHash();\n         bool spendsCoinbase = i == 0; // only first tx spends coinbase\n-        mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n+        m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // orphan in mempool, template creation fails\n+    // orphan in *m_node.mempool, template creation fails\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).FromTx(tx));\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-txns-inputs-missingorspent\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // child with higher feerate than parent\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vin[0].prevout.hash = txFirst[1]->GetHash();\n     tx.vout[0].nValue = BLOCKSUBSIDY-HIGHFEE;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vin[0].prevout.hash = hash;\n     tx.vin.resize(2);\n     tx.vin[1].scriptSig = CScript() << OP_1;\n     tx.vin[1].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[1].prevout.n = 0;\n     tx.vout[0].nValue = tx.vout[0].nValue+BLOCKSUBSIDY-HIGHERFEE; //First txn output + fresh coinbase - new txn fee\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHERFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHERFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // coinbase in mempool, template creation fails\n+    // coinbase in *m_node.mempool, template creation fails\n     tx.vin.resize(1);\n     tx.vin[0].prevout.SetNull();\n     tx.vin[0].scriptSig = CScript() << OP_0 << OP_1;\n     tx.vout[0].nValue = 0;\n     hash = tx.GetHash();\n     // give it a fee so it'll get mined\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n     // Should throw bad-cb-multiple\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-cb-multiple\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // double spend txn pair in mempool, template creation fails\n+    // double spend txn pair in *m_node.mempool, template creation fails\n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vout[0].nValue = BLOCKSUBSIDY-HIGHFEE;\n     tx.vout[0].scriptPubKey = CScript() << OP_1;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vout[0].scriptPubKey = CScript() << OP_2;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"bad-txns-inputs-missingorspent\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // subsidy changing\n     int nHeight = ::ChainActive().Height();\n@@ -392,23 +396,23 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     }\n     BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n \n-    // invalid p2sh txn in mempool, template creation fails\n+    // invalid p2sh txn in *m_node.mempool, template creation fails\n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n     tx.vin[0].prevout.n = 0;\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vout[0].nValue = BLOCKSUBSIDY-LOWFEE;\n     script = CScript() << OP_0;\n     tx.vout[0].scriptPubKey = GetScriptForDestination(ScriptHash(script));\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     tx.vin[0].prevout.hash = hash;\n     tx.vin[0].scriptSig = CScript() << std::vector<unsigned char>(script.begin(), script.end());\n     tx.vout[0].nValue -= LOWFEE;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n     // Should throw block-validation-failed\n     BOOST_CHECK_EXCEPTION(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error, HasReason(\"block-validation-failed\"));\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // Delete the dummy blocks again.\n     while (::ChainActive().Tip()->nHeight > nHeight) {\n@@ -439,7 +443,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].scriptPubKey = CScript() << OP_1;\n     tx.nLockTime = 0;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n     BOOST_CHECK(CheckFinalTx(CTransaction(tx), flags)); // Locktime passes\n     BOOST_CHECK(!TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks fail\n     BOOST_CHECK(SequenceLocks(CTransaction(tx), flags, &prevheights, CreateBlockIndex(::ChainActive().Tip()->nHeight + 2))); // Sequence locks pass on 2nd block\n@@ -449,7 +453,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vin[0].nSequence = CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | (((::ChainActive().Tip()->GetMedianTimePast()+1-::ChainActive()[1]->GetMedianTimePast()) >> CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) + 1); // txFirst[1] is the 3rd block\n     prevheights[0] = baseheight + 2;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(CheckFinalTx(CTransaction(tx), flags)); // Locktime passes\n     BOOST_CHECK(!TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks fail\n \n@@ -465,7 +469,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     prevheights[0] = baseheight + 3;\n     tx.nLockTime = ::ChainActive().Tip()->nHeight + 1;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(!CheckFinalTx(CTransaction(tx), flags)); // Locktime fails\n     BOOST_CHECK(TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks pass\n     BOOST_CHECK(IsFinalTx(CTransaction(tx), ::ChainActive().Tip()->nHeight + 2, ::ChainActive().Tip()->GetMedianTimePast())); // Locktime passes on 2nd block\n@@ -476,7 +480,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     prevheights.resize(1);\n     prevheights[0] = baseheight + 4;\n     hash = tx.GetHash();\n-    mempool.addUnchecked(entry.Time(GetTime()).FromTx(tx));\n+    m_node.mempool->addUnchecked(entry.Time(GetTime()).FromTx(tx));\n     BOOST_CHECK(!CheckFinalTx(CTransaction(tx), flags)); // Locktime fails\n     BOOST_CHECK(TestSequenceLocks(CTransaction(tx), flags)); // Sequence locks pass\n     BOOST_CHECK(IsFinalTx(CTransaction(tx), ::ChainActive().Tip()->nHeight + 2, ::ChainActive().Tip()->GetMedianTimePast() + 1)); // Locktime passes 1 second later\n@@ -513,7 +517,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n \n     ::ChainActive().Tip()->nHeight--;\n     SetMockTime(0);\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     TestPackageSelection(chainparams, scriptPubKey, txFirst);\n "
      },
      {
        "sha": "cace75f0938c28296b294813b48b83664acecb47",
        "filename": "src/test/txvalidation_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/txvalidation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/txvalidation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidation_tests.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -34,17 +34,17 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n \n     LOCK(cs_main);\n \n-    unsigned int initialPoolSize = mempool.size();\n+    unsigned int initialPoolSize = m_node.mempool->size();\n \n     BOOST_CHECK_EQUAL(\n             false,\n-            AcceptToMemoryPool(mempool, state, MakeTransactionRef(coinbaseTx),\n+            AcceptToMemoryPool(*m_node.mempool, state, MakeTransactionRef(coinbaseTx),\n                 nullptr /* plTxnReplaced */,\n                 true /* bypass_limits */,\n                 0 /* nAbsurdFee */));\n \n     // Check that the transaction hasn't been added to mempool.\n-    BOOST_CHECK_EQUAL(mempool.size(), initialPoolSize);\n+    BOOST_CHECK_EQUAL(m_node.mempool->size(), initialPoolSize);\n \n     // Check that the validation state reflects the unsuccessful attempt.\n     BOOST_CHECK(state.IsInvalid());"
      },
      {
        "sha": "67f45c4ed46dbc581f8360f94784fde50fe83ec1",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 14,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -17,16 +17,6 @@ bool CheckInputs(const CTransaction& tx, TxValidationState &state, const CCoinsV\n \n BOOST_AUTO_TEST_SUITE(tx_validationcache_tests)\n \n-static bool\n-ToMemPool(const CMutableTransaction& tx)\n-{\n-    LOCK(cs_main);\n-\n-    TxValidationState state;\n-    return AcceptToMemoryPool(mempool, state, MakeTransactionRef(tx),\n-                              nullptr /* plTxnReplaced */, true /* bypass_limits */, 0 /* nAbsurdFee */);\n-}\n-\n BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n {\n     // Make sure skipping validation of transactions that were\n@@ -35,6 +25,14 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n \n     CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n \n+    const auto ToMemPool = [this](const CMutableTransaction& tx) {\n+        LOCK(cs_main);\n+\n+        TxValidationState state;\n+        return AcceptToMemoryPool(*m_node.mempool, state, MakeTransactionRef(tx),\n+            nullptr /* plTxnReplaced */, true /* bypass_limits */, 0 /* nAbsurdFee */);\n+    };\n+\n     // Create a double-spend of mature coinbase txn:\n     std::vector<CMutableTransaction> spends;\n     spends.resize(2);\n@@ -72,7 +70,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n         LOCK(cs_main);\n         BOOST_CHECK(::ChainActive().Tip()->GetBlockHash() != block.GetHash());\n     }\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n     // Test 3: ... and should be rejected if spend2 is in the memory pool\n     BOOST_CHECK(ToMemPool(spends[1]));\n@@ -81,9 +79,9 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n         LOCK(cs_main);\n         BOOST_CHECK(::ChainActive().Tip()->GetBlockHash() != block.GetHash());\n     }\n-    mempool.clear();\n+    m_node.mempool->clear();\n \n-    // Final sanity test: first spend in mempool, second in block, that's OK:\n+    // Final sanity test: first spend in *m_node.mempool, second in block, that's OK:\n     std::vector<CMutableTransaction> oneSpend;\n     oneSpend.push_back(spends[0]);\n     BOOST_CHECK(ToMemPool(spends[1]));\n@@ -94,7 +92,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n     }\n     // spends[1] should have been removed from the mempool when the\n     // block with spends[0] is accepted:\n-    BOOST_CHECK_EQUAL(mempool.size(), 0U);\n+    BOOST_CHECK_EQUAL(m_node.mempool->size(), 0U);\n }\n \n // Run CheckInputs (using CoinsTip()) on the given transaction, for all script"
      },
      {
        "sha": "86c355fdcd1dad3416cce6c125f21def373f2eaa",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -107,7 +107,6 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     threadGroup.create_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n \n-    mempool.setSanityCheck(1.0);\n     pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n     g_chainstate = MakeUnique<CChainState>();\n     ::ChainstateActive().InitCoinsDB(\n@@ -131,6 +130,8 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     }\n     g_parallel_script_checks = true;\n \n+    m_node.mempool = &::mempool;\n+    m_node.mempool->setSanityCheck(1.0);\n     m_node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", nullptr, DEFAULT_MISBEHAVING_BANTIME);\n     m_node.connman = MakeUnique<CConnman>(0x1337, 0x1337); // Deterministic randomness for tests.\n }\n@@ -144,6 +145,7 @@ TestingSetup::~TestingSetup()\n     g_rpc_node = nullptr;\n     m_node.connman.reset();\n     m_node.banman.reset();\n+    m_node.mempool = nullptr;\n     UnloadBlockIndex();\n     g_chainstate.reset();\n     pblocktree.reset();"
      },
      {
        "sha": "1fa48b325c072f92bc61466de7fab073b1ddfa2e",
        "filename": "src/test/validation_block_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/validation_block_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae6943620ab369e8e0865c3ec2d2848ba9389325/src/test/validation_block_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_block_tests.cpp?ref=ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "patch": "@@ -279,7 +279,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n             std::list<CTransactionRef> plTxnReplaced;\n             for (const auto& tx : txs) {\n                 BOOST_REQUIRE(AcceptToMemoryPool(\n-                    ::mempool,\n+                    *m_node.mempool,\n                     state,\n                     tx,\n                     &plTxnReplaced,\n@@ -290,8 +290,8 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n \n         // Check that all txs are in the pool\n         {\n-            LOCK(::mempool.cs);\n-            BOOST_CHECK_EQUAL(::mempool.mapTx.size(), txs.size());\n+            LOCK(m_node.mempool->cs);\n+            BOOST_CHECK_EQUAL(m_node.mempool->mapTx.size(), txs.size());\n         }\n \n         // Run a thread that simulates an RPC caller that is polling while\n@@ -301,8 +301,8 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n             // the transactions invalidated by the reorg, or none of them, and\n             // not some intermediate amount.\n             while (true) {\n-                LOCK(::mempool.cs);\n-                if (::mempool.mapTx.size() == 0) {\n+                LOCK(m_node.mempool->cs);\n+                if (m_node.mempool->mapTx.size() == 0) {\n                     // We are done with the reorg\n                     break;\n                 }\n@@ -311,7 +311,7 @@ BOOST_AUTO_TEST_CASE(mempool_locks_reorg)\n                 // be atomic. So the caller assumes that the returned mempool\n                 // is consistent. That is, it has all txs that were there\n                 // before the reorg.\n-                assert(::mempool.mapTx.size() == txs.size());\n+                assert(m_node.mempool->mapTx.size() == txs.size());\n                 continue;\n             }\n             LOCK(cs_main);"
      }
    ]
  },
  {
    "sha": "fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA2NTZkMWViYzJhMDFkOTAwZmVhZDRjZTA1NWQ1OWViODE4YTFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T00:36:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T16:01:17Z"
      },
      "message": "ci: Add DEPENDS_DIR variable, Add documentation for folders",
      "tree": {
        "sha": "0f75c9225c6d21f405bce839492034fbb6735377",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0f75c9225c6d21f405bce839492034fbb6735377"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhyiAv9F1FrVAN8qZ0CWJ/xnjBgWw36iwhRLIZsIOFiV2+jW4Zc+J1s8dx1fiZ7\nS0+h3u8FSHKAWZXEEAxueqDN4aKdJoJ7DemjJo9VS+fXPfUHVtcgX2DnceJctJP+\nYZnFNsKGrZA+rHgxjumyqOpjr5gjqausbmPibGZLaVEsM+ZM6DBG8tyBYCZTbmjD\nZG5dtpwc2QLUzWr7BKUUDPCC2UDbPGWfi2TFBJQo31IS06XFQ9T6goyrCjWjtqko\nv0Wh6ByCZk7Q86X57tQ6TdT/YoNxb9qeQlXyRz0RfxkiOORXFUMvsZzK3pPFe5x1\nHIw34hVEw6jOmcXn6tmkWDb0Q14YLCufEiqpinuvQSGw2fx/rsJuZfsyDvVA6An0\nVDK7z0NAhdp1kGS6kISWKjZm3RzgIRIYlzjcdyKvt/rI3IxuqgWySup87kAhVJIr\nafNrnzENLCo5GIFZJDWsKaG8QwCOIhcf77Ob+rzovJjihcctjotHJA9SKAriK3g5\nRSAh4HQm\n=P2Ci\n-----END PGP SIGNATURE-----",
        "payload": "tree 0f75c9225c6d21f405bce839492034fbb6735377\nparent faeeca87b65dd98e0efbc54443b3f8854cae9c00\nauthor MarcoFalke <falke.marco@gmail.com> 1574296589 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574352077 -0500\n\nci: Add DEPENDS_DIR variable, Add documentation for folders\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0656d1ebc2a01d900fead4ce055d59eb818a1f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faeeca87b65dd98e0efbc54443b3f8854cae9c00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faeeca87b65dd98e0efbc54443b3f8854cae9c00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faeeca87b65dd98e0efbc54443b3f8854cae9c00"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 11,
      "deletions": 4
    },
    "files": [
      {
        "sha": "6040804a9ff75397a86b18076a065201b1d68901",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0656d1ebc2a01d900fead4ce055d59eb818a1f/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0656d1ebc2a01d900fead4ce055d59eb818a1f/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
        "patch": "@@ -13,13 +13,17 @@ if [ -n \"${FILE_ENV}\" ]; then\n   source \"${FILE_ENV}\"\n fi\n \n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the build is done (depends and dist).\n BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n export BASE_ROOT_DIR\n \n echo \"Fallback to default values in env (if not yet set)\"\n # The number of parallel jobs to pass down to make and test_runner.py\n export MAKEJOBS=${MAKEJOBS:--j4}\n # A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch/}\n # What host to compile for. See also ./depends/README.md\n # Tests that need cross-compilation export the appropriate HOST.\n@@ -37,10 +41,13 @@ export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n-# Folder where the build is done (depends and dist). Can not be changed and is equal to the root of the git repo\n-export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_ROOT_DIR}\n-# Folder where the build is done (bin and lib). Can not be changed.\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build is done (bin and lib).\n export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}"
      },
      {
        "sha": "f7d591e93c4f964e4ecb93987d3d5914e9e0bb3b",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0656d1ebc2a01d900fead4ce055d59eb818a1f/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0656d1ebc2a01d900fead4ce055d59eb818a1f/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
        "patch": "@@ -54,5 +54,5 @@ DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows\n END_FOLD\n \n set +o errexit\n-cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n+cd ${BASE_BUILD_DIR} || (echo \"could not enter base root dir $BASE_BUILD_DIR\"; exit 1)\n set -o errexit"
      }
    ]
  },
  {
    "sha": "fa041875284d01602647519cc452185ba1ad5a8f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTA0MTg3NTI4NGQwMTYwMjY0NzUxOWNjNDUyMTg1YmExYWQ1YThm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T00:40:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T16:01:34Z"
      },
      "message": "scripted-diff: Use ci DEPENDS_DIR, remove BASE_BUILD_DIR\n\n-BEGIN VERIFY SCRIPT-\n # Use ci DEPENDS_DIR\n sed -i -e 's|BASE_BUILD_DIR/depends|DEPENDS_DIR|g' $(git grep -l depends ci)\n sed -i -e 's| depends/| ${DEPENDS_DIR}/|g'         $(git grep -l depends ci)\n\n # Remove redundant alias\n sed -i -e 's|BASE_BUILD_DIR|BASE_ROOT_DIR|g'       $(git grep -l BASE_BUILD_DIR ci)\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "6547e7cff6b10569759fd69b1a78ac6e9beacdb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6547e7cff6b10569759fd69b1a78ac6e9beacdb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa041875284d01602647519cc452185ba1ad5a8f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgogAv9FI6cqIVQijDMh9GTKjGMSkwOZWLpuoZmLfH48ZlAnqjan12R2KT6v+l0\nVMXDPjrNsCpHEtIydJjkUrdcAySi1RYmDNdqQrKs/6PkSuJAeECkCvGZexRwecYa\nTyR6gjNtRSCMYaOJxbaHiAiHS1FoAG5p4DtSVJdP8vFTd11e8AzAAnx4M1aYqZk/\nXtGNoEzCbLtfEmo94ePiZqE/nGKViXGIfpRmBFSn3n8amAp76f8DoooU4wINU/oD\ndhxIcZ0hPpVBe6SNcHNdx1b6sci5TvuiRczi/nf+l5EuCSFgEEt6qr6YtHAnbENu\nmmyOm6VEDliHhJLd8/sfbUAKmz2X41C3bigjFiWv48cbeoK0FxiLmkt8j6wuzUkn\nTkJ5WHf3P8CyiUAjrQl7yjgoxPQuv6RjSI0MFXoe7SzgHZkYviTzaC9eLl+F1sJH\nfF2VN69rimVd1r4UVDw5doKOqsaRxZzuIJJxl+Cot6ASYJ1D2d8TG9j5a56s5B18\nACGypnKe\n=lq9s\n-----END PGP SIGNATURE-----",
        "payload": "tree 6547e7cff6b10569759fd69b1a78ac6e9beacdb0\nparent fa0656d1ebc2a01d900fead4ce055d59eb818a1f\nauthor MarcoFalke <falke.marco@gmail.com> 1574296822 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574352094 -0500\n\nscripted-diff: Use ci DEPENDS_DIR, remove BASE_BUILD_DIR\n\n-BEGIN VERIFY SCRIPT-\n # Use ci DEPENDS_DIR\n sed -i -e 's|BASE_BUILD_DIR/depends|DEPENDS_DIR|g' $(git grep -l depends ci)\n sed -i -e 's| depends/| ${DEPENDS_DIR}/|g'         $(git grep -l depends ci)\n\n # Remove redundant alias\n sed -i -e 's|BASE_BUILD_DIR|BASE_ROOT_DIR|g'       $(git grep -l BASE_BUILD_DIR ci)\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa041875284d01602647519cc452185ba1ad5a8f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa041875284d01602647519cc452185ba1ad5a8f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa041875284d01602647519cc452185ba1ad5a8f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0656d1ebc2a01d900fead4ce055d59eb818a1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0656d1ebc2a01d900fead4ce055d59eb818a1f"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 16,
      "deletions": 16
    },
    "files": [
      {
        "sha": "20e7ad4a149ddce57e2d974ac519d31beffc136d",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -34,9 +34,9 @@ mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n \n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n-export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n@@ -49,10 +49,10 @@ if [ -z \"$RUN_CI_ON_HOST\" ]; then\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n   DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n-                  --mount type=bind,src=$BASE_BUILD_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n                   --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n-                  --mount type=bind,src=$BASE_BUILD_DIR/depends,dst=$BASE_BUILD_DIR/depends \\\n-                  -w $BASE_BUILD_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n                   --env-file /tmp/env \\\n                   $DOCKER_NAME_TAG)\n \n@@ -91,8 +91,8 @@ export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n \n if [ -z \"$RUN_CI_ON_HOST\" ]; then\n-  echo \"Create $BASE_BUILD_DIR\"\n-  DOCKER_EXEC rsync -a /ro_base/ $BASE_BUILD_DIR\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n fi\n \n if [ \"$USE_BUSY_BOX\" = \"true\" ]; then"
      },
      {
        "sha": "51a5830682616f4a6fdedcb6dda21510b60a57d1",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -13,13 +13,13 @@ else\n   DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n fi\n \n-DOCKER_EXEC mkdir -p depends/SDKs depends/sdk-sources\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n \n-if [ -n \"$OSX_SDK\" ] && [ ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ ! -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n-if [ -n \"$OSX_SDK\" ] && [ -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  DOCKER_EXEC tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  DOCKER_EXEC tar -C ${DEPENDS_DIR}/SDKs -xf ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)"
      },
      {
        "sha": "b70ef47a476290254bb1888349b53c8d904fc000",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$BASE_BUILD_DIR/depends/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n fi\n@@ -54,5 +54,5 @@ DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows\n END_FOLD\n \n set +o errexit\n-cd ${BASE_BUILD_DIR} || (echo \"could not enter base root dir $BASE_BUILD_DIR\"; exit 1)\n+cd ${BASE_ROOT_DIR} || (echo \"could not enter base root dir $BASE_ROOT_DIR\"; exit 1)\n set -o errexit"
      },
      {
        "sha": "23de2f70628c1abb32f58fe2609c025a865e3f3f",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -33,7 +33,7 @@ fi\n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n   bash -c \"${CI_WAIT}\" &  # Print dots in case the unit tests take a long time to run\n-  DOCKER_EXEC LD_LIBRARY_PATH=$BASE_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n   END_FOLD\n fi\n "
      }
    ]
  },
  {
    "sha": "fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI5NDFiYmY0N2E4YTZiNzliOGRiNGE4N2UxYWVkY2Y2YTI5YTVl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T16:03:19Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-21T16:03:05Z"
      },
      "message": "ci: Remove unmaintained extended_lint",
      "tree": {
        "sha": "c4ed429e3580e96a17c1191f9404c744854131df",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4ed429e3580e96a17c1191f9404c744854131df"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgpIAwAuBK5NkSOnkJgp7jOUuTEguvgQ0r8w7rO3utPj6w//BYfNDT+UJ04yhN4\nz/RLMWbmEhuQcyulFvqs5ob5h+VUCL9CZzbri+eb1nIRZhxbzY/gKzxmjDiauwNT\nngdYERD6smlsbDKxhzI7G9uSaTD/mWDbgzhnwmW1mvWbILrOFErPGdIxlehqcBNL\nSIZhyxRjqSW8Y9FdS3i/EstVME4yLbN+wseN9ttGt9Sk1a0oGCCbKzKmSKUziXHi\n55slOnwpjuckY2Bs6Np1l4N1PsoxH15eHxkhiVzPE5JwrevQyQIX5eb0XA1u1hvl\n7SGTwhKbaaS9mBMThCY7mfR4S5NYG3gx7TLcq99XbrzoXBc+6B0J7rWLOq+R/rbe\nsET+S/lCEXQvqzTs1gGVvWiQI+uBXprm/EkE+pZabLl8I8CB3K5j6dAOJVSY95qP\nzvkGxZ1lxjC+HM3RfOYCWIUnXXyw2rIBmNqDN/+yLtd8eWcKgQKtlIGXepsYU8c6\nfPAFRIlc\n=X2lT\n-----END PGP SIGNATURE-----",
        "payload": "tree c4ed429e3580e96a17c1191f9404c744854131df\nparent fa041875284d01602647519cc452185ba1ad5a8f\nauthor MarcoFalke <falke.marco@gmail.com> 1574352199 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574352185 -0500\n\nci: Remove unmaintained extended_lint\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa041875284d01602647519cc452185ba1ad5a8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa041875284d01602647519cc452185ba1ad5a8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa041875284d01602647519cc452185ba1ad5a8f"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 0,
      "deletions": 35
    },
    "files": [
      {
        "sha": "f3e1e9dea559ea46fc70877f4211ec7ba501367b",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
        "patch": "@@ -43,7 +43,6 @@ before_cache:\n stages:\n   - lint\n   - test\n-  - extended-lint\n env:\n   global:\n     - CI_RETRY_EXE=\"travis_retry\"\n@@ -82,19 +81,6 @@ jobs:\n       script:\n         - set -o errexit; source ./ci/lint/06_script.sh\n \n-    - stage: extended-lint\n-      name: 'extended lint [runtime >= 60 seconds]'\n-      env:\n-      cache: false\n-      language: python\n-      python: '3.5'\n-      install:\n-        - set -o errexit; source ./ci/extended_lint/04_install.sh\n-      before_script:\n-        - set -o errexit; source ./ci/lint/05_before_script.sh\n-      script:\n-        - set -o errexit; source ./ci/extended_lint/06_script.sh\n-\n     - stage: test\n       name: 'ARM  [GOAL: install]  [unit tests, functional tests]'\n       arch: arm64"
      },
      {
        "sha": "123d874a84da4b8531edf5e51052b581688cef27",
        "filename": "ci/extended_lint/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/extended_lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/extended_lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/04_install.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -1,12 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-CPPCHECK_VERSION=1.86\n-curl -s https://codeload.github.com/danmar/cppcheck/tar.gz/${CPPCHECK_VERSION} | tar -zxf - --directory /tmp/\n-(cd /tmp/cppcheck-${CPPCHECK_VERSION}/ && make CFGDIR=/tmp/cppcheck-${CPPCHECK_VERSION}/cfg/ > /dev/null)\n-export PATH=\"$PATH:/tmp/cppcheck-${CPPCHECK_VERSION}/\""
      },
      {
        "sha": "e8228c9c4d912c81e16b772e79e85231a2b6c1b9",
        "filename": "ci/extended_lint/06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa041875284d01602647519cc452185ba1ad5a8f/ci/extended_lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa041875284d01602647519cc452185ba1ad5a8f/ci/extended_lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/06_script.sh?ref=fa041875284d01602647519cc452185ba1ad5a8f",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-test/lint/extended-lint-all.sh"
      }
    ]
  },
  {
    "sha": "7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDdiZjJmZjRhNjdjMzk1M2IwZDY2MGNhODhkMTEzMTNjYjRkNzFk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-21T16:08:47Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-21T16:08:47Z"
      },
      "message": "build: set minimum supported macOS to 10.12",
      "tree": {
        "sha": "1752fb95b5fa29afa527bf8ff58e2b7f71610f68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1752fb95b5fa29afa527bf8ff58e2b7f71610f68"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Wto8ACgkQLuufXMCV\nJsGUiBAAodKnKuhwVBXbLMtxW6Imkp40qkmePTu1fXIj49/xfQIeFnoAge5plEbd\ndmRy6+RGckH2exQxfiNOHlz/QE7UtgVPf0AbjXunnnOz4yd+6fogoWLkfLA9422n\n/ikkQDzp1NGt9NmGuzLQTpNqy2S0ed7XBw3kprHAlfz7zOHyVRVk+6W6Ht4va3x1\nItxmwvZ+SPCY/o4zA2oACQQQpUYf0CfjYfIj4i/yZ/7BeoFTSmasONppT3jvc8c8\nHinLhAUp3S7JfzCIqIOcetDofocsEEDmOE13fJ1VNNNigJNxNVatGKfmcOULvYrB\n6DsBwyZYwckZ13gDFrMu/ynSI6wgKzNvQuQyeqcvRnqS126h9/kEbae4CNmlqxyl\nJ2LUW4kbYtN163MHAkEJdjGpcYi4S9CJuhmOV6UV+KivOECQlcj+I4yQaAl4to+N\nnPSNJ5l49ZRqGwNTbst722c90Bc0NVPxXujrC7Z9MU6xrGhSetMty+CcyOGC51EA\n2r/Am9ZsuTH9TgocwFGYnk0egYDpi8KBzPTkhJrrZv9bb+UBPuz9gGHaLBsejusw\nlHL/w5aZMAtuM4yK7k24mWN9z/DMPIOdtn96GbdBbkR9SJv4tf0ZzE502lMu0cqA\nb1Tp8+HR9Up/Zv7MkRB7G1kP95ahgZ5h26iFvy9Shv0z5pUvfMU=\n=UHOR\n-----END PGP SIGNATURE-----",
        "payload": "tree 1752fb95b5fa29afa527bf8ff58e2b7f71610f68\nparent ae6943620ab369e8e0865c3ec2d2848ba9389325\nauthor fanquake <fanquake@gmail.com> 1574352527 -0500\ncommitter fanquake <fanquake@gmail.com> 1574352527 -0500\n\nbuild: set minimum supported macOS to 10.12\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 14,
      "deletions": 15
    },
    "files": [
      {
        "sha": "3ede8788396036b6aefe8fcf07a5bb5f6a18a36c",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -144,16 +144,16 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n \n     - stage: test\n-      name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n+      name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"\n \n     - stage: test\n       name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n       os: osx\n       # Use the most recent version:\n-      # Xcode 11, macOS 10.14, JDK 12.0.1\n+      # Xcode 11.2.1, macOS 10.14, JDK 13.0.1, SDK 10.15\n       # https://docs.travis-ci.com/user/reference/osx/#macos-version\n-      osx_image: xcode11\n+      osx_image: xcode11.2\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "af166b6ca7cf21336d24a1663dee549b6b85edbb",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-apple-darwin14\n+export HOST=x86_64-apple-darwin16\n export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n export OSX_SDK=10.11\n export RUN_UNIT_TESTS=false"
      },
      {
        "sha": "0b437a723f045c094af7324182b48ac37a9ead0c",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-apple-darwin14\n+export HOST=x86_64-apple-darwin16\n export BREW_PACKAGES=\"automake berkeley-db4 libtool boost miniupnpc pkg-config qt qrencode python3 ccache zeromq\"\n export PIP_PACKAGES=\"zmq\"\n export RUN_CI_ON_HOST=true"
      },
      {
        "sha": "5f006d3a190241a5f17ae0a684845814d411e097",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -37,7 +37,7 @@ script: |\n   set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin14\"\n+  HOSTS=\"x86_64-apple-darwin16\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\""
      },
      {
        "sha": "b56302b6c7310bd1d0c2c4655d3d62c0eb6fedbb",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -25,7 +25,7 @@ Common `host-platform-triplets` for cross compilation are:\n - `i686-pc-linux-gnu` for Linux 32 bit\n - `x86_64-pc-linux-gnu` for x86 Linux\n - `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin14` for macOS\n+- `x86_64-apple-darwin16` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n - `riscv32-linux-gnu` for Linux RISC-V 32 bit"
      },
      {
        "sha": "1f88c209cf43bf76cb8f2fa6a9b74f96d483f7a7",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -1,4 +1,4 @@\n-OSX_MIN_VERSION=10.10\n+OSX_MIN_VERSION=10.12\n OSX_SDK_VERSION=10.11\n OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n LD64_VERSION=253.9"
      },
      {
        "sha": "bf655538c72b2c6a9c6c385026319fb10117d1b9",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -110,7 +110,7 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ```\n \n ## Notes\n-* Tested on OS X 10.10 Yosemite through macOS 10.14 Mojave on 64-bit Intel\n+* Tested on OS X 10.12 Sierra through macOS 10.15 Catalina on 64-bit Intel\n processors only.\n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714).\n "
      },
      {
        "sha": "88740ea1dae3d515286b9ead873cc69014d1e948",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -46,16 +46,15 @@ Compatibility\n ==============\n \n Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+the Linux kernel, macOS 10.12+, and Windows 7 and newer. It is not recommended\n to use Bitcoin Core on unsupported systems.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n as frequently tested on them.\n \n-From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no\n-longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires\n-macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when\n-macOS \"dark mode\" is activated.\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n \n In addition to previously supported CPU platforms, this release's pre-compiled\n distribution provides binaries for the RISC-V platform."
      },
      {
        "sha": "275078c88de837697f6fe3633a479ab59f43f91f",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "patch": "@@ -3,7 +3,7 @@\n <plist version=\"0.9\">\n <dict>\n   <key>LSMinimumSystemVersion</key>\n-  <string>10.10.0</string>\n+  <string>10.12.0</string>\n \n   <key>LSArchitecturePriority</key>\n   <array>"
      }
    ]
  },
  {
    "sha": "16f0a186dcee563bb1000e1ffc51da87e7623bc6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmYwYTE4NmRjZWU1NjNiYjEwMDBlMWZmYzUxZGE4N2U3NjIzYmM2",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-02T08:01:27Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-21T17:52:35Z"
      },
      "message": "tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus",
      "tree": {
        "sha": "0ca7a0f74674aadf5c6eab75ab122e297370ff8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ca7a0f74674aadf5c6eab75ab122e297370ff8c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16f0a186dcee563bb1000e1ffc51da87e7623bc6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f0a186dcee563bb1000e1ffc51da87e7623bc6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16f0a186dcee563bb1000e1ffc51da87e7623bc6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f0a186dcee563bb1000e1ffc51da87e7623bc6/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "21dc1047afed870c7e49ca3866caca92cfa35fa1",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 27,
        "deletions": 1,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16f0a186dcee563bb1000e1ffc51da87e7623bc6/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16f0a186dcee563bb1000e1ffc51da87e7623bc6/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=16f0a186dcee563bb1000e1ffc51da87e7623bc6",
        "patch": "@@ -12,6 +12,28 @@\n import subprocess\n import logging\n \n+# Fuzzers known to lack a seed corpus in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus\n+FUZZERS_MISSING_CORPORA = [\n+    \"addr_info_deserialize\",\n+    \"block_file_info_deserialize\",\n+    \"block_filter_deserialize\",\n+    \"block_header_and_short_txids_deserialize\",\n+    \"fee_rate_deserialize\",\n+    \"flat_file_pos_deserialize\",\n+    \"key_origin_info_deserialize\",\n+    \"merkle_block_deserialize\",\n+    \"mutable_transaction_deserialize\",\n+    \"out_point_deserialize\",\n+    \"partial_merkle_tree_deserialize\",\n+    \"partially_signed_transaction_deserialize\",\n+    \"prefilled_transaction_deserialize\",\n+    \"psbt_input_deserialize\",\n+    \"psbt_output_deserialize\",\n+    \"pub_key_deserialize\",\n+    \"script_deserialize\",\n+    \"sub_net_deserialize\",\n+    \"tx_in_deserialize\",\n+]\n \n def main():\n     parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n@@ -100,10 +122,14 @@ def main():\n \n def run_once(*, corpus, test_list, build_dir, export_coverage):\n     for t in test_list:\n+        corpus_path = os.path.join(corpus, t)\n+        if t in FUZZERS_MISSING_CORPORA:\n+            os.makedirs(corpus_path, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n             '-runs=1',\n-            os.path.join(corpus, t),\n+            '-detect_leaks=0',\n+            corpus_path,\n         ]\n         logging.debug('Run {} with args {}'.format(t, args))\n         result = subprocess.run(args, stderr=subprocess.PIPE, universal_newlines=True)"
      }
    ]
  },
  {
    "sha": "897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTc4NDlkOGMyMjUwNDVmMGRkM2EyZmU5OWI1ZDY5YmRmODRiNGUy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-10-03T14:18:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-21T17:53:06Z"
      },
      "message": "tests: Add deserialization fuzzing harnesses",
      "tree": {
        "sha": "ffa08860acf6adb50699991166315cc23623eab2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ffa08860acf6adb50699991166315cc23623eab2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16f0a186dcee563bb1000e1ffc51da87e7623bc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f0a186dcee563bb1000e1ffc51da87e7623bc6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16f0a186dcee563bb1000e1ffc51da87e7623bc6"
      }
    ],
    "stats": {
      "total": 467,
      "additions": 359,
      "deletions": 108
    },
    "files": [
      {
        "sha": "f287d23024e7c139431b7e5cf0ea714ae066cbff",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 126,
        "deletions": 0,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "patch": "@@ -4,11 +4,15 @@\n \n \n FUZZ_TARGETS = \\\n+  test/fuzz/addr_info_deserialize \\\n   test/fuzz/address_deserialize \\\n   test/fuzz/addrman_deserialize \\\n   test/fuzz/banentry_deserialize \\\n   test/fuzz/bech32 \\\n   test/fuzz/block_deserialize \\\n+  test/fuzz/block_file_info_deserialize \\\n+  test/fuzz/block_filter_deserialize \\\n+  test/fuzz/block_header_and_short_txids_deserialize \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n   test/fuzz/blockmerkleroot \\\n@@ -20,16 +24,30 @@ FUZZ_TARGETS = \\\n   test/fuzz/descriptor_parse \\\n   test/fuzz/diskblockindex_deserialize \\\n   test/fuzz/eval_script \\\n+  test/fuzz/fee_rate_deserialize \\\n+  test/fuzz/flat_file_pos_deserialize \\\n   test/fuzz/inv_deserialize \\\n+  test/fuzz/key_origin_info_deserialize \\\n+  test/fuzz/merkle_block_deserialize \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n+  test/fuzz/out_point_deserialize \\\n   test/fuzz/parse_iso8601 \\\n+  test/fuzz/partial_merkle_tree_deserialize \\\n+  test/fuzz/partially_signed_transaction_deserialize \\\n+  test/fuzz/prefilled_transaction_deserialize \\\n   test/fuzz/psbt \\\n+  test/fuzz/psbt_input_deserialize \\\n+  test/fuzz/psbt_output_deserialize \\\n+  test/fuzz/pub_key_deserialize \\\n   test/fuzz/script \\\n+  test/fuzz/script_deserialize \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/spanparsing \\\n+  test/fuzz/sub_net_deserialize \\\n   test/fuzz/transaction \\\n+  test/fuzz/tx_in_deserialize \\\n   test/fuzz/txoutcompressor_deserialize \\\n   test/fuzz/txundo_deserialize\n \n@@ -383,6 +401,114 @@ test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_addr_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDR_INFO_DESERIALIZE=1\n+test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_addr_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_file_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_file_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILE_INFO_DESERIALIZE=1\n+test_fuzz_block_file_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_file_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_file_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_filter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_filter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILTER_DESERIALIZE=1\n+test_fuzz_block_filter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_filter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_header_and_short_txids_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1\n+test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_fee_rate_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n+test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_fee_rate_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_flat_file_pos_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1\n+test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_key_origin_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1\n+test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_key_origin_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_merkle_block_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_merkle_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMERKLE_BLOCK_DESERIALIZE=1\n+test_fuzz_merkle_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_merkle_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_out_point_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_out_point_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DOUT_POINT_DESERIALIZE=1\n+test_fuzz_out_point_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_out_point_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_out_point_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_partially_signed_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIALLY_SIGNED_TRANSACTION_DESERIALIZE=1\n+test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partially_signed_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_partial_merkle_tree_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIAL_MERKLE_TREE_DESERIALIZE=1\n+test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partial_merkle_tree_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_prefilled_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_prefilled_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPREFILLED_TRANSACTION_DESERIALIZE=1\n+test_fuzz_prefilled_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_prefilled_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_psbt_input_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_psbt_input_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_INPUT_DESERIALIZE=1\n+test_fuzz_psbt_input_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_input_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_input_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_psbt_output_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_psbt_output_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_OUTPUT_DESERIALIZE=1\n+test_fuzz_psbt_output_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_output_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_output_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_pub_key_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_pub_key_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPUB_KEY_DESERIALIZE=1\n+test_fuzz_pub_key_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_script_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_script_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSCRIPT_DESERIALIZE=1\n+test_fuzz_script_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_script_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_sub_net_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_sub_net_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSUB_NET_DESERIALIZE=1\n+test_fuzz_sub_net_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_sub_net_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_tx_in_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_tx_in_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTX_IN_DESERIALIZE=1\n+test_fuzz_tx_in_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_tx_in_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_tx_in_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "46bc38fdabac579152096261a6381ed51767f901",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 216,
        "deletions": 102,
        "changes": 318,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "patch": "@@ -5,18 +5,24 @@\n #include <addrdb.h>\n #include <addrman.h>\n #include <blockencodings.h>\n+#include <blockfilter.h>\n #include <chain.h>\n #include <coins.h>\n #include <compressor.h>\n #include <consensus/merkle.h>\n+#include <key.h>\n+#include <merkleblock.h>\n #include <net.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <psbt.h>\n #include <pubkey.h>\n+#include <script/keyorigin.h>\n #include <streams.h>\n #include <undo.h>\n #include <version.h>\n \n+#include <stdexcept>\n #include <stdint.h>\n #include <unistd.h>\n \n@@ -37,129 +43,237 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n-    } catch (const std::ios_base::failure& e) {\n+    } catch (const std::ios_base::failure&) {\n         return;\n     }\n \n-#if BLOCK_DESERIALIZE\n-            try\n-            {\n-                CBlock block;\n-                ds >> block;\n-            } catch (const std::ios_base::failure& e) {return;}\n+#if BLOCK_FILTER_DESERIALIZE\n+    try {\n+        BlockFilter block_filter;\n+        ds >> block_filter;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif ADDR_INFO_DESERIALIZE\n+    try {\n+        CAddrInfo addr_info;\n+        ds >> addr_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_FILE_INFO_DESERIALIZE\n+    try {\n+        CBlockFileInfo block_file_info;\n+        ds >> block_file_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE\n+    try {\n+        CBlockHeaderAndShortTxIDs block_header_and_short_txids;\n+        ds >> block_header_and_short_txids;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif FEE_RATE_DESERIALIZE\n+    try {\n+        CFeeRate fee_rate;\n+        ds >> fee_rate;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif MERKLE_BLOCK_DESERIALIZE\n+    try {\n+        CMerkleBlock merkle_block;\n+        ds >> merkle_block;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif OUT_POINT_DESERIALIZE\n+    try {\n+        COutPoint out_point;\n+        ds >> out_point;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PARTIAL_MERKLE_TREE_DESERIALIZE\n+    try {\n+        CPartialMerkleTree partial_merkle_tree;\n+        ds >> partial_merkle_tree;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PUB_KEY_DESERIALIZE\n+    try {\n+        CPubKey pub_key;\n+        ds >> pub_key;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif SCRIPT_DESERIALIZE\n+    try {\n+        CScript script;\n+        ds >> script;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif SUB_NET_DESERIALIZE\n+    try {\n+        CSubNet sub_net;\n+        ds >> sub_net;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif TX_IN_DESERIALIZE\n+    try {\n+        CTxIn tx_in;\n+        ds >> tx_in;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif FLAT_FILE_POS_DESERIALIZE\n+    try {\n+        FlatFilePos flat_file_pos;\n+        ds >> flat_file_pos;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif KEY_ORIGIN_INFO_DESERIALIZE\n+    try {\n+        KeyOriginInfo key_origin_info;\n+        ds >> key_origin_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PARTIALLY_SIGNED_TRANSACTION_DESERIALIZE\n+    try {\n+        PartiallySignedTransaction partially_signed_transaction;\n+        ds >> partially_signed_transaction;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PREFILLED_TRANSACTION_DESERIALIZE\n+    try {\n+        PrefilledTransaction prefilled_transaction;\n+        ds >> prefilled_transaction;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PSBT_INPUT_DESERIALIZE\n+    try {\n+        PSBTInput psbt_input;\n+        ds >> psbt_input;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PSBT_OUTPUT_DESERIALIZE\n+    try {\n+        PSBTOutput psbt_output;\n+        ds >> psbt_output;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_DESERIALIZE\n+    try {\n+        CBlock block;\n+        ds >> block;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKLOCATOR_DESERIALIZE\n-            try\n-            {\n-                CBlockLocator bl;\n-                ds >> bl;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockLocator bl;\n+        ds >> bl;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKMERKLEROOT\n-            try\n-            {\n-                CBlock block;\n-                ds >> block;\n-                bool mutated;\n-                BlockMerkleRoot(block, &mutated);\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlock block;\n+        ds >> block;\n+        bool mutated;\n+        BlockMerkleRoot(block, &mutated);\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif ADDRMAN_DESERIALIZE\n-            try\n-            {\n-                CAddrMan am;\n-                ds >> am;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CAddrMan am;\n+        ds >> am;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKHEADER_DESERIALIZE\n-            try\n-            {\n-                CBlockHeader bh;\n-                ds >> bh;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockHeader bh;\n+        ds >> bh;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BANENTRY_DESERIALIZE\n-            try\n-            {\n-                CBanEntry be;\n-                ds >> be;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBanEntry be;\n+        ds >> be;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif TXUNDO_DESERIALIZE\n-            try\n-            {\n-                CTxUndo tu;\n-                ds >> tu;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CTxUndo tu;\n+        ds >> tu;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKUNDO_DESERIALIZE\n-            try\n-            {\n-                CBlockUndo bu;\n-                ds >> bu;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockUndo bu;\n+        ds >> bu;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif COINS_DESERIALIZE\n-            try\n-            {\n-                Coin coin;\n-                ds >> coin;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        Coin coin;\n+        ds >> coin;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif NETADDR_DESERIALIZE\n-            try\n-            {\n-                CNetAddr na;\n-                ds >> na;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CNetAddr na;\n+        ds >> na;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif SERVICE_DESERIALIZE\n-            try\n-            {\n-                CService s;\n-                ds >> s;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CService s;\n+        ds >> s;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif MESSAGEHEADER_DESERIALIZE\n-            CMessageHeader::MessageStartChars pchMessageStart = {0x00, 0x00, 0x00, 0x00};\n-            try\n-            {\n-                CMessageHeader mh(pchMessageStart);\n-                ds >> mh;\n-                if (!mh.IsValid(pchMessageStart)) {return;}\n-            } catch (const std::ios_base::failure& e) {return;}\n+    CMessageHeader::MessageStartChars pchMessageStart = {0x00, 0x00, 0x00, 0x00};\n+    try {\n+        CMessageHeader mh(pchMessageStart);\n+        ds >> mh;\n+        (void)mh.IsValid(pchMessageStart);\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif ADDRESS_DESERIALIZE\n-            try\n-            {\n-                CAddress a;\n-                ds >> a;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CAddress a;\n+        ds >> a;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif INV_DESERIALIZE\n-            try\n-            {\n-                CInv i;\n-                ds >> i;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CInv i;\n+        ds >> i;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOOMFILTER_DESERIALIZE\n-            try\n-            {\n-                CBloomFilter bf;\n-                ds >> bf;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBloomFilter bf;\n+        ds >> bf;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif DISKBLOCKINDEX_DESERIALIZE\n-            try\n-            {\n-                CDiskBlockIndex dbi;\n-                ds >> dbi;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CDiskBlockIndex dbi;\n+        ds >> dbi;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif TXOUTCOMPRESSOR_DESERIALIZE\n-            CTxOut to;\n-            CTxOutCompressor toc(to);\n-            try\n-            {\n-                ds >> toc;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    CTxOut to;\n+    CTxOutCompressor toc(to);\n+    try {\n+        ds >> toc;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKTRANSACTIONS_DESERIALIZE\n-            try\n-            {\n-                BlockTransactions bt;\n-                ds >> bt;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        BlockTransactions bt;\n+        ds >> bt;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKTRANSACTIONSREQUEST_DESERIALIZE\n-            try\n-            {\n-                BlockTransactionsRequest btr;\n-                ds >> btr;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        BlockTransactionsRequest btr;\n+        ds >> btr;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #else\n #error Need at least one fuzz target to compile\n #endif"
      },
      {
        "sha": "fefafda36bd78b66b9863397d009b0d2321f760f",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "patch": "@@ -26,19 +26,31 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n-    } catch (const std::ios_base::failure& e) {\n+    } catch (const std::ios_base::failure&) {\n         return;\n     }\n-    bool valid = true;\n+    bool valid_tx = true;\n     const CTransaction tx = [&] {\n         try {\n             return CTransaction(deserialize, ds);\n-        } catch (const std::ios_base::failure& e) {\n-            valid = false;\n+        } catch (const std::ios_base::failure&) {\n+            valid_tx = false;\n             return CTransaction();\n         }\n     }();\n-    if (!valid) {\n+    bool valid_mutable_tx = true;\n+    CDataStream ds_mtx(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n+    CMutableTransaction mutable_tx;\n+    try {\n+        int nVersion;\n+        ds_mtx >> nVersion;\n+        ds_mtx.SetVersion(nVersion);\n+        ds_mtx >> mutable_tx;\n+    } catch (const std::ios_base::failure&) {\n+        valid_mutable_tx = false;\n+    }\n+    assert(valid_tx == valid_mutable_tx);\n+    if (!valid_tx) {\n         return;\n     }\n "
      },
      {
        "sha": "ffebb579e7fee6947260b4b728b7f753fd20c94d",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "patch": "@@ -22,7 +22,6 @@\n     \"flat_file_pos_deserialize\",\n     \"key_origin_info_deserialize\",\n     \"merkle_block_deserialize\",\n-    \"mutable_transaction_deserialize\",\n     \"out_point_deserialize\",\n     \"partial_merkle_tree_deserialize\",\n     \"partially_signed_transaction_deserialize\","
      }
    ]
  },
  {
    "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWE2ZjFhZDFmN2NhNTJiMjUyNGFiODMyMmJmYTg5YTliMGVlNjFi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-21T18:38:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-21T18:38:39Z"
      },
      "message": "Merge #17513: refactor, qt: Nuke some circular dependencies\n\n5f50599ae7077ae9b9b56edb8892387b6ddc460a refactor: Cleanup headers from walletmodel.h (Hennadii Stepanov)\na53e9895db7617c879858ca27e38e6aaf35f6075 refactor: Nuke walletmodel circular dependency (Hennadii Stepanov)\n49c4211c0435e3b27c8107a332de22e9cad84390 refactor: Nuke walletmodeltransaction circular dep (Hennadii Stepanov)\n567cb44eb95785c8df93a3844207d17f4c390372 refactor: Nuke guiutil circular dependency (Hennadii Stepanov)\n73b5505cfe0a8583718c708f7a99762c29d81274 refactor: Move SendCoinsRecipient in own header (Hennadii Stepanov)\n\nPull request description:\n\n  This PR gets rid of the following circular dependencies:\n  - `qt/guiutil` -> `qt/walletmodel` -> `qt/optionsmodel` -> `qt/guiutil`\n  - `qt/walletmodel` -> `qt/walletmodeltransaction` -> `qt/walletmodel`\n  - `qt/paymentserver` -> `qt/walletmodel` -> `qt/paymentserver`\n\nACKs for top commit:\n  Sjors:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a\n  instagibbs:\n    code review ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a\n  practicalswift:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a -- diff looks correct\n  promag:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a.\n\nTree-SHA512: 070686ac82b5c68c3ef1b8b4c16b4b916b84d80d1e92e42287fdd9454671bea54779c0d2db4db623750aaaf180beaba212137190d6a427113905e2c4be5c60c5",
      "tree": {
        "sha": "22d052fe7a7d9ec5f6ec8f9ae9e119b1cbba8dcc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22d052fe7a7d9ec5f6ec8f9ae9e119b1cbba8dcc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3W2a8ACgkQHkrtYphs\n0l1FIwf+K0/4fPn9FXLecu/xrvHIasooKTpYw+aOW7c8DCEPE9UTHQDnaFZMoX8L\ngcnCXEWNz+PDeDXmySqjaqsK8EbhyNoq30U/dAfoS8ITV+zgML6GGsZhUL0mG2dc\nkiyVwd4j/APShkQkzBXNt4gGoDsYUB8EU+JeJnfzc0uFuWk4AUwiM96fFcuuR7hM\nHCROYbZ7wIR+eJfZ3EJkbh4MAYKzfIcaMk6LHQHo6mP8qvB15tQLNTIwTj/aw7kH\n1S0pG3woumTSmkK6iNcNOuhmWI45wEN/tBBk+dIDQnF2LmWtwcFAwS4kx8uDddMM\nlXAKNvLNvYhheHSZY4BQPEk5NSyDXg==\n=EUJj\n-----END PGP SIGNATURE-----",
        "payload": "tree 22d052fe7a7d9ec5f6ec8f9ae9e119b1cbba8dcc\nparent ae6943620ab369e8e0865c3ec2d2848ba9389325\nparent 5f50599ae7077ae9b9b56edb8892387b6ddc460a\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574361502 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574361519 +0100\n\nMerge #17513: refactor, qt: Nuke some circular dependencies\n\n5f50599ae7077ae9b9b56edb8892387b6ddc460a refactor: Cleanup headers from walletmodel.h (Hennadii Stepanov)\na53e9895db7617c879858ca27e38e6aaf35f6075 refactor: Nuke walletmodel circular dependency (Hennadii Stepanov)\n49c4211c0435e3b27c8107a332de22e9cad84390 refactor: Nuke walletmodeltransaction circular dep (Hennadii Stepanov)\n567cb44eb95785c8df93a3844207d17f4c390372 refactor: Nuke guiutil circular dependency (Hennadii Stepanov)\n73b5505cfe0a8583718c708f7a99762c29d81274 refactor: Move SendCoinsRecipient in own header (Hennadii Stepanov)\n\nPull request description:\n\n  This PR gets rid of the following circular dependencies:\n  - `qt/guiutil` -> `qt/walletmodel` -> `qt/optionsmodel` -> `qt/guiutil`\n  - `qt/walletmodel` -> `qt/walletmodeltransaction` -> `qt/walletmodel`\n  - `qt/paymentserver` -> `qt/walletmodel` -> `qt/paymentserver`\n\nACKs for top commit:\n  Sjors:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a\n  instagibbs:\n    code review ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a\n  practicalswift:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a -- diff looks correct\n  promag:\n    ACK 5f50599ae7077ae9b9b56edb8892387b6ddc460a.\n\nTree-SHA512: 070686ac82b5c68c3ef1b8b4c16b4b916b84d80d1e92e42287fdd9454671bea54779c0d2db4db623750aaaf180beaba212137190d6a427113905e2c4be5c60c5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325"
      },
      {
        "sha": "5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f50599ae7077ae9b9b56edb8892387b6ddc460a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f50599ae7077ae9b9b56edb8892387b6ddc460a"
      }
    ],
    "stats": {
      "total": 182,
      "additions": 109,
      "deletions": 73
    },
    "files": [
      {
        "sha": "cf09eee2cbdfbdc21c14df801c0d17080bdd9df5",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -136,6 +136,7 @@ BITCOIN_QT_H = \\\n   qt/rpcconsole.h \\\n   qt/sendcoinsdialog.h \\\n   qt/sendcoinsentry.h \\\n+  qt/sendcoinsrecipient.h \\\n   qt/signverifymessagedialog.h \\\n   qt/splashscreen.h \\\n   qt/trafficgraphwidget.h \\"
      },
      {
        "sha": "31e62ab63da8df930e768c2ca2fb7314db04146c",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -7,7 +7,7 @@\n #include <qt/bitcoinaddressvalidator.h>\n #include <qt/bitcoinunits.h>\n #include <qt/qvalidatedlineedit.h>\n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <base58.h>\n #include <chainparams.h>"
      },
      {
        "sha": "6a0143ac7e2b7f42c2ca8f040f3df290b5a72247",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -6,7 +6,7 @@\n #include <qt/forms/ui_openuridialog.h>\n \n #include <qt/guiutil.h>\n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <QUrl>\n "
      },
      {
        "sha": "6d4ce4a7e43ecf1757060820de420477aafb841c",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -36,13 +36,17 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <QObject>\n #include <QString>\n \n class OptionsModel;\n \n+namespace interfaces {\n+class Node;\n+} // namespace interfaces\n+\n QT_BEGIN_NAMESPACE\n class QApplication;\n class QByteArray;"
      },
      {
        "sha": "2674c9b953276501d0adf3f7cfbb544cdff7e3b0",
        "filename": "src/qt/receiverequestdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/receiverequestdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/receiverequestdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -8,6 +8,7 @@\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n+#include <qt/walletmodel.h>\n \n #include <QClipboard>\n #include <QPixmap>"
      },
      {
        "sha": "1bb43ce6d18d7115afea8db9dbb3729616940187",
        "filename": "src/qt/receiverequestdialog.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/receiverequestdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/receiverequestdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receiverequestdialog.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -5,10 +5,12 @@\n #ifndef BITCOIN_QT_RECEIVEREQUESTDIALOG_H\n #define BITCOIN_QT_RECEIVEREQUESTDIALOG_H\n \n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <QDialog>\n \n+class WalletModel;\n+\n namespace Ui {\n     class ReceiveRequestDialog;\n }"
      },
      {
        "sha": "6d933f46d6e24a924992ced3b30a180e363e156e",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -7,6 +7,7 @@\n #include <qt/bitcoinunits.h>\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n+#include <qt/walletmodel.h>\n \n #include <clientversion.h>\n #include <streams.h>"
      },
      {
        "sha": "30578b7a03cea8decca11e5ec38b2446f82660d6",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -5,12 +5,14 @@\n #ifndef BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H\n #define BITCOIN_QT_RECENTREQUESTSTABLEMODEL_H\n \n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <QAbstractTableModel>\n #include <QStringList>\n #include <QDateTime>\n \n+class WalletModel;\n+\n class RecentRequestEntry\n {\n public:"
      },
      {
        "sha": "ad37e091142348594f47bd9cfd82d1c062d1c2ff",
        "filename": "src/qt/sendcoinsentry.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsentry.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsentry.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -14,6 +14,7 @@\n #include <qt/guiutil.h>\n #include <qt/optionsmodel.h>\n #include <qt/platformstyle.h>\n+#include <qt/walletmodel.h>\n \n #include <QApplication>\n #include <QClipboard>"
      },
      {
        "sha": "aa69d30f9974e956b740121377d07ee0c26ffb29",
        "filename": "src/qt/sendcoinsentry.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsentry.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsentry.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsentry.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -5,13 +5,17 @@\n #ifndef BITCOIN_QT_SENDCOINSENTRY_H\n #define BITCOIN_QT_SENDCOINSENTRY_H\n \n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <QStackedWidget>\n \n class WalletModel;\n class PlatformStyle;\n \n+namespace interfaces {\n+class Node;\n+} // namespace interfaces\n+\n namespace Ui {\n     class SendCoinsEntry;\n }"
      },
      {
        "sha": "12279fab64f88bf3e55c7b8595a62c9bb006d312",
        "filename": "src/qt/sendcoinsrecipient.h",
        "status": "added",
        "additions": 74,
        "deletions": 0,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsrecipient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/sendcoinsrecipient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsrecipient.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -0,0 +1,74 @@\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_SENDCOINSRECIPIENT_H\n+#define BITCOIN_QT_SENDCOINSRECIPIENT_H\n+\n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n+#include <amount.h>\n+#include <serialize.h>\n+\n+#include <string>\n+\n+#include <QString>\n+\n+class SendCoinsRecipient\n+{\n+public:\n+    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n+    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n+        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n+\n+    // If from an unauthenticated payment request, this is used for storing\n+    // the addresses, e.g. address-A<br />address-B<br />address-C.\n+    // Info: As we don't need to process addresses in here when using\n+    // payment requests, we can abuse it for displaying an address list.\n+    // Todo: This is a hack, should be replaced with a cleaner solution!\n+    QString address;\n+    QString label;\n+    CAmount amount;\n+    // If from a payment request, this is used for storing the memo\n+    QString message;\n+    // Keep the payment request around as a serialized string to ensure\n+    // load/store is lossless.\n+    std::string sPaymentRequest;\n+    // Empty if no authentication or invalid signature/cert/etc.\n+    QString authenticatedMerchant;\n+\n+    bool fSubtractFeeFromAmount; // memory only\n+\n+    static const int CURRENT_VERSION = 1;\n+    int nVersion;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        std::string sAddress = address.toStdString();\n+        std::string sLabel = label.toStdString();\n+        std::string sMessage = message.toStdString();\n+        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n+\n+        READWRITE(this->nVersion);\n+        READWRITE(sAddress);\n+        READWRITE(sLabel);\n+        READWRITE(amount);\n+        READWRITE(sMessage);\n+        READWRITE(sPaymentRequest);\n+        READWRITE(sAuthenticatedMerchant);\n+\n+        if (ser_action.ForRead())\n+        {\n+            address = QString::fromStdString(sAddress);\n+            label = QString::fromStdString(sLabel);\n+            message = QString::fromStdString(sMessage);\n+            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n+        }\n+    }\n+};\n+\n+#endif // BITCOIN_QT_SENDCOINSRECIPIENT_H"
      },
      {
        "sha": "9a93798aef8b745387e4a4bd1fd4cbca9ba02d32",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -15,11 +15,12 @@\n \n #include <consensus/consensus.h>\n #include <interfaces/node.h>\n+#include <interfaces/wallet.h>\n #include <key_io.h>\n-#include <validation.h>\n+#include <policy/policy.h>\n #include <script/script.h>\n #include <util/system.h>\n-#include <policy/policy.h>\n+#include <validation.h>\n #include <wallet/ismine.h>\n \n #include <stdint.h>"
      },
      {
        "sha": "7413a1f09e30ba288788ec955196e0bf19c169c0",
        "filename": "src/qt/walletcontroller.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletcontroller.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletcontroller.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.cpp?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -2,17 +2,18 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include <qt/walletcontroller.h>\n+\n #include <qt/askpassphrasedialog.h>\n #include <qt/createwalletdialog.h>\n #include <qt/guiconstants.h>\n #include <qt/guiutil.h>\n-#include <qt/walletcontroller.h>\n-\n-#include <wallet/wallet.h>\n+#include <qt/walletmodel.h>\n \n #include <interfaces/handler.h>\n #include <interfaces/node.h>\n #include <util/string.h>\n+#include <wallet/wallet.h>\n \n #include <algorithm>\n "
      },
      {
        "sha": "956245775e9ce5836d6c2c99dde7909ac101332b",
        "filename": "src/qt/walletcontroller.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletcontroller.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletcontroller.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletcontroller.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_WALLETCONTROLLER_H\n #define BITCOIN_QT_WALLETCONTROLLER_H\n \n-#include <qt/walletmodel.h>\n+#include <qt/sendcoinsrecipient.h>\n #include <support/allocators/secure.h>\n #include <sync.h>\n \n@@ -23,10 +23,12 @@\n \n class OptionsModel;\n class PlatformStyle;\n+class WalletModel;\n \n namespace interfaces {\n class Handler;\n class Node;\n+class Wallet;\n } // namespace interfaces\n \n class AskPassphraseDialog;"
      },
      {
        "sha": "8087356f5ef7ce8533e736783b4f3fd974231787",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 57,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -9,9 +9,7 @@\n #include <config/bitcoin-config.h>\n #endif\n \n-#include <amount.h>\n #include <key.h>\n-#include <serialize.h>\n #include <script/standard.h>\n \n #include <qt/walletmodeltransaction.h>\n@@ -29,6 +27,7 @@ class AddressTableModel;\n class OptionsModel;\n class PlatformStyle;\n class RecentRequestsTableModel;\n+class SendCoinsRecipient;\n class TransactionTableModel;\n class WalletModelTransaction;\n \n@@ -47,61 +46,6 @@ QT_BEGIN_NAMESPACE\n class QTimer;\n QT_END_NAMESPACE\n \n-class SendCoinsRecipient\n-{\n-public:\n-    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n-    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n-        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n-\n-    // If from an unauthenticated payment request, this is used for storing\n-    // the addresses, e.g. address-A<br />address-B<br />address-C.\n-    // Info: As we don't need to process addresses in here when using\n-    // payment requests, we can abuse it for displaying an address list.\n-    // Todo: This is a hack, should be replaced with a cleaner solution!\n-    QString address;\n-    QString label;\n-    CAmount amount;\n-    // If from a payment request, this is used for storing the memo\n-    QString message;\n-    // Keep the payment request around as a serialized string to ensure\n-    // load/store is lossless.\n-    std::string sPaymentRequest;\n-    // Empty if no authentication or invalid signature/cert/etc.\n-    QString authenticatedMerchant;\n-\n-    bool fSubtractFeeFromAmount; // memory only\n-\n-    static const int CURRENT_VERSION = 1;\n-    int nVersion;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        std::string sAddress = address.toStdString();\n-        std::string sLabel = label.toStdString();\n-        std::string sMessage = message.toStdString();\n-        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n-\n-        READWRITE(this->nVersion);\n-        READWRITE(sAddress);\n-        READWRITE(sLabel);\n-        READWRITE(amount);\n-        READWRITE(sMessage);\n-        READWRITE(sPaymentRequest);\n-        READWRITE(sAuthenticatedMerchant);\n-\n-        if (ser_action.ForRead())\n-        {\n-            address = QString::fromStdString(sAddress);\n-            label = QString::fromStdString(sLabel);\n-            message = QString::fromStdString(sMessage);\n-            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n-        }\n-    }\n-};\n-\n /** Interface to Bitcoin wallet from Qt view code. */\n class WalletModel : public QObject\n {"
      },
      {
        "sha": "9e5d285e8cee63c0ae9b911d006e970cae946514",
        "filename": "src/qt/walletmodeltransaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletmodeltransaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/src/qt/walletmodeltransaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodeltransaction.h?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -5,7 +5,8 @@\n #ifndef BITCOIN_QT_WALLETMODELTRANSACTION_H\n #define BITCOIN_QT_WALLETMODELTRANSACTION_H\n \n-#include <qt/walletmodel.h>\n+#include <primitives/transaction.h>\n+#include <qt/sendcoinsrecipient.h>\n \n #include <amount.h>\n "
      },
      {
        "sha": "8b320832f05d21831653e9f347ad228a95964736",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "patch": "@@ -18,17 +18,14 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"qt/bitcoingui -> qt/walletframe -> qt/bitcoingui\"\n     \"qt/bitcoingui -> qt/walletview -> qt/bitcoingui\"\n     \"qt/clientmodel -> qt/peertablemodel -> qt/clientmodel\"\n-    \"qt/paymentserver -> qt/walletmodel -> qt/paymentserver\"\n     \"qt/recentrequeststablemodel -> qt/walletmodel -> qt/recentrequeststablemodel\"\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n-    \"qt/walletmodel -> qt/walletmodeltransaction -> qt/walletmodel\"\n     \"txmempool -> validation -> txmempool\"\n     \"wallet/coincontrol -> wallet/wallet -> wallet/coincontrol\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\"\n-    \"qt/guiutil -> qt/walletmodel -> qt/optionsmodel -> qt/guiutil\"\n     \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"wallet/scriptpubkeyman -> wallet/wallet -> wallet/scriptpubkeyman\"\n )"
      }
    ]
  },
  {
    "sha": "6a2e6b0600077e5903400dc74bc8b0c26592fde6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2YTJlNmIwNjAwMDc3ZTU5MDM0MDBkYzc0YmM4YjBjMjY1OTJmZGU2",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-11-21T19:37:26Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-11-21T19:37:26Z"
      },
      "message": "Remove out of date comments for CalculateMaximumSignedTxSize",
      "tree": {
        "sha": "1991ef56619107f3d56a27edbc0f51d3ac0a242d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1991ef56619107f3d56a27edbc0f51d3ac0a242d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6a2e6b0600077e5903400dc74bc8b0c26592fde6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a2e6b0600077e5903400dc74bc8b0c26592fde6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6a2e6b0600077e5903400dc74bc8b0c26592fde6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a2e6b0600077e5903400dc74bc8b0c26592fde6/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "dc2a52d490859ca017ad477648c27be921dc55ae",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6a2e6b0600077e5903400dc74bc8b0c26592fde6/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6a2e6b0600077e5903400dc74bc8b0c26592fde6/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=6a2e6b0600077e5903400dc74bc8b0c26592fde6",
        "patch": "@@ -1444,11 +1444,9 @@ bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScri\n int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig)\n {\n     std::vector<CTxOut> txouts;\n-    // Look up the inputs.  We should have already checked that this transaction\n-    // IsAllFromMe(ISMINE_SPENDABLE), so every input should already be in our\n-    // wallet, with a valid index into the vout array, and the ability to sign.\n     for (const CTxIn& input : tx.vin) {\n         const auto mi = wallet->mapWallet.find(input.prevout.hash);\n+        // Can not estimate size without knowing the input details\n         if (mi == wallet->mapWallet.end()) {\n             return -1;\n         }\n@@ -1463,8 +1461,6 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wall\n {\n     CMutableTransaction txNew(tx);\n     if (!wallet->DummySignTx(txNew, txouts, use_max_sig)) {\n-        // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n-        // implies that we can sign for every input.\n         return -1;\n     }\n     return GetVirtualTransactionSize(CTransaction(txNew));"
      }
    ]
  },
  {
    "sha": "e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjBjNzJmOWYwNzY2ODFkZWYzMjViNWI1ZmE1M2JjY2RhMmIwZWFi",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+l2a5b1@users.noreply.github.com",
        "date": "2019-07-23T21:47:17Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+l2a5b1@users.noreply.github.com",
        "date": "2019-11-21T20:05:38Z"
      },
      "message": "Fire TransactionRemovedFromMempool from mempool\n\nThis commit fires TransactionRemovedFromMempool callbacks from the\nmempool and cleans up a bunch of code.",
      "tree": {
        "sha": "f88c796738d7379600782ac143e24a0f922fca45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f88c796738d7379600782ac143e24a0f922fca45"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 15,
      "deletions": 36
    },
    "files": [
      {
        "sha": "e7dda59590cff2b5ed2ac8c1f4bae11f94bae9b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -281,7 +281,6 @@ void Shutdown(NodeContext& node)\n     node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    GetMainSignals().UnregisterWithMempoolSignals(mempool);\n     globalVerifyHandle.reset();\n     ECC_Stop();\n     if (node.mempool) node.mempool = nullptr;\n@@ -1263,7 +1262,6 @@ bool AppInitMain(NodeContext& node)\n     }, 60000);\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n-    GetMainSignals().RegisterWithMempoolSignals(mempool);\n \n     // Create client interfaces for wallets that are supposed to be loaded\n     // according to -wallet and -disablewallet options. This only constructs"
      },
      {
        "sha": "3c967a04c0711f4187ebcdaa0754884260010b52",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -17,6 +17,7 @@\n #include <util/system.h>\n #include <util/moneystr.h>\n #include <util/time.h>\n+#include <validationinterface.h>\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, unsigned int _entryHeight,\n@@ -403,7 +404,12 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n \n void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n-    NotifyEntryRemoved(it->GetSharedTx(), reason);\n+    CTransactionRef ptx = it->GetSharedTx();\n+    NotifyEntryRemoved(ptx, reason);\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        GetMainSignals().TransactionRemovedFromMempool(ptx);\n+    }\n+\n     const uint256 hash = it->GetTx().GetHash();\n     for (const CTxIn& txin : it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);"
      },
      {
        "sha": "6c0f4d5edd2d3390826dc4c7b4f16191fa557cd7",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 24,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -7,9 +7,9 @@\n \n #include <primitives/block.h>\n #include <scheduler.h>\n-#include <txmempool.h>\n \n #include <future>\n+#include <unordered_map>\n #include <utility>\n \n #include <boost/signals2/signal.hpp>\n@@ -46,11 +46,6 @@ struct MainSignalsInstance {\n \n static CMainSignals g_signals;\n \n-// This map has to a separate global instead of a member of MainSignalsInstance,\n-// because RegisterWithMempoolSignals is currently called before RegisterBackgroundSignalScheduler,\n-// so MainSignalsInstance hasn't been created yet.\n-static std::unordered_map<CTxMemPool*, boost::signals2::scoped_connection> g_connNotifyEntryRemoved;\n-\n void CMainSignals::RegisterBackgroundSignalScheduler(CScheduler& scheduler) {\n     assert(!m_internals);\n     m_internals.reset(new MainSignalsInstance(&scheduler));\n@@ -71,17 +66,6 @@ size_t CMainSignals::CallbacksPending() {\n     return m_internals->m_schedulerClient.CallbacksPending();\n }\n \n-void CMainSignals::RegisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.emplace(std::piecewise_construct,\n-        std::forward_as_tuple(&pool),\n-        std::forward_as_tuple(pool.NotifyEntryRemoved.connect(std::bind(&CMainSignals::MempoolEntryRemoved, this, std::placeholders::_1, std::placeholders::_2)))\n-    );\n-}\n-\n-void CMainSignals::UnregisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.erase(&pool);\n-}\n-\n CMainSignals& GetMainSignals()\n {\n     return g_signals;\n@@ -126,13 +110,6 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n@@ -150,6 +127,12 @@ void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n     });\n }\n \n+void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n+    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        m_internals->TransactionRemovedFromMempool(ptx);\n+    });\n+}\n+\n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n     m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);"
      },
      {
        "sha": "63aad8661f85fef3abe7851be6a7da313f889515",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -21,8 +21,6 @@ class CConnman;\n class CValidationInterface;\n class uint256;\n class CScheduler;\n-class CTxMemPool;\n-enum class MemPoolRemovalReason;\n \n // These functions dispatch to one or all registered wallets\n \n@@ -158,8 +156,6 @@ class CMainSignals {\n     friend void ::UnregisterAllValidationInterfaces();\n     friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n \n-    void MempoolEntryRemoved(CTransactionRef tx, MemPoolRemovalReason reason);\n-\n public:\n     /** Register a CScheduler to give callbacks which should run in the background (may only be called once) */\n     void RegisterBackgroundSignalScheduler(CScheduler& scheduler);\n@@ -170,13 +166,10 @@ class CMainSignals {\n \n     size_t CallbacksPending();\n \n-    /** Register with mempool to call TransactionRemovedFromMempool callbacks */\n-    void RegisterWithMempoolSignals(CTxMemPool& pool);\n-    /** Unregister with mempool */\n-    void UnregisterWithMempoolSignals(CTxMemPool& pool);\n \n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef &);\n+    void TransactionRemovedFromMempool(const CTransactionRef &);\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>> &);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);"
      },
      {
        "sha": "7164432ca550003250aff60b589f19a9d8c7e918",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -26,7 +26,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\"\n-    \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"wallet/scriptpubkeyman -> wallet/wallet -> wallet/scriptpubkeyman\"\n )\n "
      }
    ]
  },
  {
    "sha": "a2e581de942ece85b84c4f5a15287654b02867cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMmU1ODFkZTk0MmVjZTg1Yjg0YzRmNWExNTI4NzY1NGIwMjg2N2Ni",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-21T20:13:08Z"
      },
      "committer": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-21T20:13:08Z"
      },
      "message": "build: Create test utility library from src/test/util/",
      "tree": {
        "sha": "eeb1ebecaee9397e30e1d5e866ac9a00f11a9c5b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eeb1ebecaee9397e30e1d5e866ac9a00f11a9c5b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a2e581de942ece85b84c4f5a15287654b02867cb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEED2bWxOeRx//n2QOeJiaFvHjtEfsFAl3W79QACgkQJiaFvHjt\nEfvYQgf/b3PCqmVyeudKncvt42zKAQrGxPw3q/Hqd0iGQEA9PKUrKMtAaVYnm+0X\nlDsdHaGxp8hrbWlWT5J8395HEPKwZeUxYj/vVKNyK6navvP50bcxWP4SMlSrbCMG\nULHbE3NmTHB+ysNlOS6uDxGPapmpe+9pSXBHpe2/JJ3R5eTmNhPzF3UsKgOQGa90\nbGKb3xNX2KonQcxbY5TQnx2QgiSmizRfZ+tUMFRKA670oP7B82osOyf038JuWa7z\nxtX8+Vme5R8hq5xncq+N7TSxHzjM9Ih7oWeJB5RQghUx9CXCk1zoZ6Nt2g292QpR\nJyQ2cQ7T/yrlcya7ASMmgsXBBhey2w==\n=G+T6\n-----END PGP SIGNATURE-----",
        "payload": "tree eeb1ebecaee9397e30e1d5e866ac9a00f11a9c5b\nparent b4a1da9ef8e4b673c290d5b882527e627ae1b43a\nauthor Harris <brakmic@gmail.com> 1574367188 +0100\ncommitter Harris <brakmic@gmail.com> 1574367188 +0100\n\nbuild: Create test utility library from src/test/util/\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e581de942ece85b84c4f5a15287654b02867cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a2e581de942ece85b84c4f5a15287654b02867cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e581de942ece85b84c4f5a15287654b02867cb/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4a1da9ef8e4b673c290d5b882527e627ae1b43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4a1da9ef8e4b673c290d5b882527e627ae1b43a"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 40,
      "deletions": 30
    },
    "files": [
      {
        "sha": "27c87688b42ef8925d1b4b32ce21b31a18fd309f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=a2e581de942ece85b84c4f5a15287654b02867cb",
        "patch": "@@ -717,6 +717,8 @@ if EMBEDDED_LEVELDB\n include Makefile.leveldb.include\n endif\n \n+include Makefile.test_util.include\n+\n if ENABLE_TESTS\n include Makefile.test.include\n endif"
      },
      {
        "sha": "9e70db116b7c7354b1fe3d4262bfb6d8d8ba162c",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=a2e581de942ece85b84c4f5a15287654b02867cb",
        "patch": "@@ -40,10 +40,6 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n   bench/prevector.cpp \\\n-  test/util/transaction_utils.h \\\n-  test/util/transaction_utils.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/setup_common.cpp \\\n   test/util.h \\\n   test/util.cpp\n \n@@ -59,6 +55,7 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBTEST_UTIL) \\\n   $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) \\\n   $(LIBMEMENV) \\"
      },
      {
        "sha": "8c47fabad9f419d8ee8ca0ed112a623f951c3184",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=a2e581de942ece85b84c4f5a15287654b02867cb",
        "patch": "@@ -26,12 +26,6 @@ TEST_QT_H = \\\n   qt/test/util.h \\\n   qt/test/wallettests.h\n \n-TEST_BITCOIN_CPP = \\\n-  test/util/setup_common.cpp\n-\n-TEST_BITCOIN_H = \\\n-  test/util/setup_common.h\n-\n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n \n@@ -42,9 +36,7 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   qt/test/util.cpp \\\n-  $(TEST_QT_H) \\\n-  $(TEST_BITCOIN_CPP) \\\n-  $(TEST_BITCOIN_H)\n+  $(TEST_QT_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n   qt/test/addressbooktests.cpp \\\n@@ -54,7 +46,7 @@ endif # ENABLE_WALLET\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBTEST_UTIL)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)\n endif"
      },
      {
        "sha": "b4ca01b1fe162c022c91e41b5fffa486d725c3c8",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 16,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=a2e581de942ece85b84c4f5a15287654b02867cb",
        "patch": "@@ -58,31 +58,19 @@ RAW_TEST_FILES =\n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n BITCOIN_TEST_SUITE = \\\n-  test/util/blockfilter.cpp \\\n-  test/util/blockfilter.h \\\n-  test/util/logging.cpp \\\n-  test/util/logging.h \\\n-  test/util/transaction_utils.cpp \\\n-  test/util/transaction_utils.h \\\n   test/main.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/setup_common.cpp \\\n-  test/util/str.h \\\n-  test/util/str.cpp\n+  $(TEST_UTIL_H)\n \n FUZZ_SUITE = \\\n   test/fuzz/fuzz.cpp \\\n   test/fuzz/fuzz.h \\\n-  test/fuzz/FuzzedDataProvider.h \\\n-  test/util/setup_common.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/str.cpp \\\n-  test/util/str.h\n+  test/fuzz/FuzzedDataProvider.h\n \n FUZZ_SUITE_LD_COMMON = \\\n  $(LIBBITCOIN_SERVER) \\\n  $(LIBBITCOIN_COMMON) \\\n  $(LIBBITCOIN_UTIL) \\\n+ $(LIBTEST_UTIL) \\\n  $(LIBBITCOIN_CONSENSUS) \\\n  $(LIBBITCOIN_CRYPTO) \\\n  $(LIBUNIVALUE) \\\n@@ -198,7 +186,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TEST_SUITE) $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD =\n+test_test_bitcoin_LDADD = $(LIBTEST_UTIL)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif"
      },
      {
        "sha": "cf55d141b0f83ff58b770e761ac14676c303072f",
        "filename": "src/Makefile.test_util.include",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a2e581de942ece85b84c4f5a15287654b02867cb/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=a2e581de942ece85b84c4f5a15287654b02867cb",
        "patch": "@@ -0,0 +1,31 @@\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+LIBTEST_UTIL=libtest_util.a\n+\n+EXTRA_LIBRARIES += \\\n+    $(LIBTEST_UTIL)\n+\n+TEST_UTIL_H = \\\n+    test/util/blockfilter.h \\\n+    test/util/logging.h \\\n+    test/util/setup_common.h \\\n+    test/util/str.h \\\n+    test/util/transaction_utils.h\n+\n+libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libtest_util_a_SOURCES = \\\n+  test/util/blockfilter.cpp \\\n+  test/util/logging.cpp \\\n+  test/util/setup_common.cpp \\\n+  test/util/str.cpp \\\n+  test/util/transaction_utils.cpp \\\n+  $(TEST_UTIL_H)\n+\n+LIBTEST_UTIL += $(LIBBITCOIN_SERVER)\n+LIBTEST_UTIL += $(LIBBITCOIN_COMMON)\n+LIBTEST_UTIL += $(LIBBITCOIN_UTIL)\n+LIBTEST_UTIL += $(LIBBITCOIN_CRYPTO_BASE)\n+"
      }
    ]
  },
  {
    "sha": "76303f65f92a0fbe9a90c0e807554a6daa860636",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NjMwM2Y2NWY5MmEwZmJlOWE5MGMwZTgwNzU1NGE2ZGFhODYwNjM2",
    "commit": {
      "author": {
        "name": "Dominik Spicher",
        "email": "dominik.spicher@inacta.ch",
        "date": "2019-11-21T20:09:32Z"
      },
      "committer": {
        "name": "Dominik Spicher",
        "email": "dominik.spicher@inacta.ch",
        "date": "2019-11-21T20:30:01Z"
      },
      "message": "test: add unit test for non-standard txs with wrong nVersion",
      "tree": {
        "sha": "5410b648915a14e18f56c1660f24ec1e53f10fa8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5410b648915a14e18f56c1660f24ec1e53f10fa8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76303f65f92a0fbe9a90c0e807554a6daa860636",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76303f65f92a0fbe9a90c0e807554a6daa860636",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/76303f65f92a0fbe9a90c0e807554a6daa860636",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76303f65f92a0fbe9a90c0e807554a6daa860636/comments",
    "author": {
      "login": "dspicher",
      "id": 3934374,
      "node_id": "MDQ6VXNlcjM5MzQzNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3934374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dspicher",
      "html_url": "https://github.com/dspicher",
      "followers_url": "https://api.github.com/users/dspicher/followers",
      "following_url": "https://api.github.com/users/dspicher/following{/other_user}",
      "gists_url": "https://api.github.com/users/dspicher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dspicher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dspicher/subscriptions",
      "organizations_url": "https://api.github.com/users/dspicher/orgs",
      "repos_url": "https://api.github.com/users/dspicher/repos",
      "events_url": "https://api.github.com/users/dspicher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dspicher/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dspicher",
      "id": 3934374,
      "node_id": "MDQ6VXNlcjM5MzQzNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3934374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dspicher",
      "html_url": "https://github.com/dspicher",
      "followers_url": "https://api.github.com/users/dspicher/followers",
      "following_url": "https://api.github.com/users/dspicher/following{/other_user}",
      "gists_url": "https://api.github.com/users/dspicher/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dspicher/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dspicher/subscriptions",
      "organizations_url": "https://api.github.com/users/dspicher/orgs",
      "repos_url": "https://api.github.com/users/dspicher/repos",
      "events_url": "https://api.github.com/users/dspicher/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dspicher/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae6943620ab369e8e0865c3ec2d2848ba9389325",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae6943620ab369e8e0865c3ec2d2848ba9389325"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2f7a3132d8ed8393fad3a0e9434baf0d64351407",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/76303f65f92a0fbe9a90c0e807554a6daa860636/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/76303f65f92a0fbe9a90c0e807554a6daa860636/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=76303f65f92a0fbe9a90c0e807554a6daa860636",
        "patch": "@@ -713,6 +713,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].nValue = nDustThreshold;\n     BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n \n+    // Disallowed nVersion\n+    t.nVersion = -1;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    t.nVersion = 0;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    t.nVersion = 3;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    // Allowed nVersion\n+    t.nVersion = 1;\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    t.nVersion = 2;\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n     // Check dust with odd relay fee to verify rounding:\n     // nDustThreshold = 182 * 3702 / 1000\n     dustRelayFee = CFeeRate(3702);"
      }
    ]
  },
  {
    "sha": "a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzM5ZDIwN2EzOWZjMzRjMmU1YWRmNGUxNGJmYmIzYTYyODhlZGUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-22T08:36:31Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-22T08:37:01Z"
      },
      "message": "Merge #17519: rpc: Remove unused COINBASE_FLAGS\n\ne9a27cf338dc618b8ecab8984abc54d588de8a05 refactor: Remove unused COINBASE_FLAGS (Neha Narula)\n\nPull request description:\n\n  Commit d449772cf69c01932fc5d72c46054815d6300b3c stopped setting\n  COINBASE_FLAGS, and it looks like it hasn't been used since P2SH.\n\n  Following up on #17489, remove COINBASE_FLAGS which is unused. I verified that removing this did not change the contents of the coinbase's scriptSig.\n\nACKs for top commit:\n  laanwj:\n    ACK e9a27cf338dc618b8ecab8984abc54d588de8a05\n  MarcoFalke:\n    ACK e9a27cf338dc618b8ecab8984abc54d588de8a05 \ud83d\udcbb\n\nTree-SHA512: f9dac124ce7e3edcae974137764bb5039387b1b123b86af44486e398aa4a8d91a9ecf640e207b364ae303acbbaee7cca300d303ea3d6869ba9cae2bf555a6334",
      "tree": {
        "sha": "341cde608ad40eb936c3b19e0702c1e935c7ba83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/341cde608ad40eb936c3b19e0702c1e935c7ba83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3Xni0ACgkQHkrtYphs\n0l2FWwgAgap09etsFN1LnSgbxdrk4QMn7x9yBhRtv/qYZcXVUW3KN+ehs0/mgtmN\ng7pmlsmNpgKGsiEEYOpvIjAUwGhmJUad4ZzqonWdJzkejzFxQrU7uOLax8MF3SXy\nNIVBsZ58an8WRgUjBmNMY6XzZ4zKRt925Lu0eBvAj59RojJYC5qjDKKM8yrQslv9\njEbn87KCv5IKVUgXBpY8Po3tXn2ldrH1rfYAhaAKq3Z9UjbS3UZIxtlhEueKAMTg\n+rj9zxj1VQgWQbfAAOEgeNTBGsaAJo1k5dSzBvlaMmxgAFtTjIH84NOHXf42D3As\ne1xPcbhYS/Mo8xGlfzFLh6owygOGSg==\n=jXb8\n-----END PGP SIGNATURE-----",
        "payload": "tree 341cde608ad40eb936c3b19e0702c1e935c7ba83\nparent 69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b\nparent e9a27cf338dc618b8ecab8984abc54d588de8a05\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574411791 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574411821 +0100\n\nMerge #17519: rpc: Remove unused COINBASE_FLAGS\n\ne9a27cf338dc618b8ecab8984abc54d588de8a05 refactor: Remove unused COINBASE_FLAGS (Neha Narula)\n\nPull request description:\n\n  Commit d449772cf69c01932fc5d72c46054815d6300b3c stopped setting\n  COINBASE_FLAGS, and it looks like it hasn't been used since P2SH.\n\n  Following up on #17489, remove COINBASE_FLAGS which is unused. I verified that removing this did not change the contents of the coinbase's scriptSig.\n\nACKs for top commit:\n  laanwj:\n    ACK e9a27cf338dc618b8ecab8984abc54d588de8a05\n  MarcoFalke:\n    ACK e9a27cf338dc618b8ecab8984abc54d588de8a05 \ud83d\udcbb\n\nTree-SHA512: f9dac124ce7e3edcae974137764bb5039387b1b123b86af44486e398aa4a8d91a9ecf640e207b364ae303acbbaee7cca300d303ea3d6869ba9cae2bf555a6334\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b"
      },
      {
        "sha": "e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9a27cf338dc618b8ecab8984abc54d588de8a05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9a27cf338dc618b8ecab8984abc54d588de8a05"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 2,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2f6feb9e0293633451ac96ca135498e96832b1bd",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "patch": "@@ -435,7 +435,7 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n     ++nExtraNonce;\n     unsigned int nHeight = pindexPrev->nHeight+1; // Height first in coinbase required for block.version=2\n     CMutableTransaction txCoinbase(*pblock->vtx[0]);\n-    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce)) + COINBASE_FLAGS;\n+    txCoinbase.vin[0].scriptSig = (CScript() << nHeight << CScriptNum(nExtraNonce));\n     assert(txCoinbase.vin[0].scriptSig.size() <= 100);\n \n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));"
      },
      {
        "sha": "85f9f1e8b76c00d53e37469e6be25925e1449bd6",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "patch": "@@ -375,9 +375,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n             \"      }\\n\"\n             \"      ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"coinbaseaux\\\" : {                 (json object) data that should be included in the coinbase's scriptSig content\\n\"\n-            \"      \\\"flags\\\" : \\\"xx\\\"                  (string) key name is to be ignored, and value included in scriptSig\\n\"\n-            \"  },\\n\"\n+            \"  \\\"coinbaseaux\\\" : { ... },            (json object) data that should be included in the coinbase's scriptSig content\\n\"\n             \"  \\\"coinbasevalue\\\" : n,              (numeric) maximum allowable input to coinbase transaction, including the generation award and transaction fees (in satoshis)\\n\"\n             \"  \\\"coinbasetxn\\\" : { ... },          (json object) information for coinbase transaction\\n\"\n             \"  \\\"target\\\" : \\\"xxxx\\\",                (string) The hash target\\n\"\n@@ -607,7 +605,6 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     }\n \n     UniValue aux(UniValue::VOBJ);\n-    aux.pushKV(\"flags\", HexStr(COINBASE_FLAGS.begin(), COINBASE_FLAGS.end()));\n \n     arith_uint256 hashTarget = arith_uint256().SetCompact(pblock->nBits);\n "
      },
      {
        "sha": "8f5d3331704d849f3a4fb2ae355fc89897efcfa4",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "patch": "@@ -129,9 +129,6 @@ CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n CBlockPolicyEstimator feeEstimator;\n CTxMemPool mempool(&feeEstimator);\n \n-/** Constant stuff for coinbase transactions we create: */\n-CScript COINBASE_FLAGS;\n-\n // Internal stuff\n namespace {\n     CBlockIndex* pindexBestInvalid = nullptr;"
      },
      {
        "sha": "d87113c41f63c4ad239e57b00759deb65e97e809",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "patch": "@@ -137,7 +137,6 @@ struct BlockHasher\n     size_t operator()(const uint256& hash) const { return ReadLE64(hash.begin()); }\n };\n \n-extern CScript COINBASE_FLAGS;\n extern CCriticalSection cs_main;\n extern CBlockPolicyEstimator feeEstimator;\n extern CTxMemPool mempool;"
      }
    ]
  },
  {
    "sha": "b983e7e1721fa68cc04c05b1249d5871d66debe5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTgzZTdlMTcyMWZhNjhjYzA0YzA1YjEyNDlkNTg3MWQ2NmRlYmU1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-22T14:15:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-22T14:21:02Z"
      },
      "message": "Merge #17542: build: Create test utility library from src/test/util/\n\na2e581de942ece85b84c4f5a15287654b02867cb build: Create test utility library from src/test/util/ (Harris)\n\nPull request description:\n\n  This PR creates a static **test utility library** that replaces repetitive compilations of sources from *src/test/util* in **unit**, **gui** and **bench** **tests**.\n\n  The original issue is here: https://github.com/bitcoin/bitcoin/issues/17401\n\n  The changes are:\n\n  * a new *Makefile.test_util.include*\n  * a new entry in *Makefile.am* that includes *Makefile.test_util.include* when testing is enabled\n  * removal of all *src/test/util* headers & sources from unit, gui and bench Makefiles\n  * addition of *libtest_util.a* at LDADD's of every test\n\nACKs for top commit:\n  MarcoFalke:\n    ACK a2e581de942ece85b84c4f5a15287654b02867cb \ud83c\udf5e\n\nTree-SHA512: d172127a26ee70d16625e17d7d94337a65472c57bb97f910c357c52d3dc082ea478ee586ee9074d9ebfeb05b75027e5e15f5bcd2aa35962dadfd9ac6bfd55ab9",
      "tree": {
        "sha": "e54a01f4b569635f25b8a3e449ab9227e6c8b7fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e54a01f4b569635f25b8a3e449ab9227e6c8b7fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b983e7e1721fa68cc04c05b1249d5871d66debe5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3X7s4ACgkQ0upIUOdS\niyXKnQ//cTlP3VXGSt2iCn5xyXBUNck78fDiDPVA+D9jGJZWWxF3zH9oKFFLuibO\noILrlvC7zTEBefMn3yufTF94bIigceqy7Sn5tOnF+eKLkIqE39OyQHEkzjGG5Z34\nGx4vU0Nl9gJVwkxWtNgw8AwtPxrK3BtZT2eNURtj0FCZXVEg1eznzx42T/S7OmQ4\nGHpMUOmGInNAIALJ/MptEwwB2PxeRNVeqtCgvawEg5d2WGhZGsmFj2OnEl+Vxx/t\nozVeZfbXV33i4iuJOj5NVjDuBzqwv1r5CaPCtcziTAqe1+FH8Vq4HvhE7LupBhOQ\nQQNOl+xXBZsKaQPeU0WANVaT7STQJGC1B0wmgqntXHqmJLIedePAaOzqvMrEg5bv\nu3SI/qOy9qCfZQGpCHlsvxFMn1u/FIbxU6MKb3bGEfX16YbINjuwxEfMLZrM3vpu\nam+neKhRI739C8pkfhtbbS43XOZ+k589uGWcQfNcYGKxAdwR/0KB0cqO63I75kiK\nf6bTGnJ7MpLvKzzA/iRvAWvGPbX3uBKx5WiHBc5DHQC+JSqe36SS2jzP5ks3gfy9\n4YgbqluP/O1TW/wNUwZOPDHWRGnYtGJ034kDIkDiQSPbjRBENPrFQIWFXtOfU8Ds\n9fYa/DtSMm+gbc5+J3MEQjOu4yJtodflsGj318/pEYb4YaACdpk=\n=/A6x\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIIdTu1J3R7hKH8vvRDyxQDWGDNJaYSmxo116bNtqoIxSCP/wEALjreG2a7j+\n8IGy66ShvfMI8QRd1+7Q8Ag3VDRFuRxYjACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEAxRXLI7u3vgZ+dqgajK8vcI8SDHzO6w\n7VAW9ZAOjrF9V+IdStnuVKc2jRVUoXVHNSObpwjxBF3X7tHwCOJAdzVRpV//AIPf\n4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMu\nb3Jn//AQh1VRBhtQzTc/3DNQfVae/AjxILzcqCogoKs7iUfpTKcTj7EYNPvKYDrx\nRl4Q063onzGQCPEEXdfu0PAIRTXCyBN0ALYAg9/jDS75DI4uLWh0dHBzOi8vYWxp\nY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQoorAXFhUMImiEldn\nfmhaCQjxIEa/bq8AKTRwjTLcY5au2Fv4NB9d0c0B8FmVaOfJnZ3gCPEEXdfu0fAI\nxK3AEOAXF8EAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e54a01f4b569635f25b8a3e449ab9227e6c8b7fc\nparent a739d207a39fc34c2e5adf4e14bfbb3a6288ede1\nparent a2e581de942ece85b84c4f5a15287654b02867cb\nauthor MarcoFalke <falke.marco@gmail.com> 1574432145 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574432462 -0500\n\nMerge #17542: build: Create test utility library from src/test/util/\n\na2e581de942ece85b84c4f5a15287654b02867cb build: Create test utility library from src/test/util/ (Harris)\n\nPull request description:\n\n  This PR creates a static **test utility library** that replaces repetitive compilations of sources from *src/test/util* in **unit**, **gui** and **bench** **tests**.\n\n  The original issue is here: https://github.com/bitcoin/bitcoin/issues/17401\n\n  The changes are:\n\n  * a new *Makefile.test_util.include*\n  * a new entry in *Makefile.am* that includes *Makefile.test_util.include* when testing is enabled\n  * removal of all *src/test/util* headers & sources from unit, gui and bench Makefiles\n  * addition of *libtest_util.a* at LDADD's of every test\n\nACKs for top commit:\n  MarcoFalke:\n    ACK a2e581de942ece85b84c4f5a15287654b02867cb \ud83c\udf5e\n\nTree-SHA512: d172127a26ee70d16625e17d7d94337a65472c57bb97f910c357c52d3dc082ea478ee586ee9074d9ebfeb05b75027e5e15f5bcd2aa35962dadfd9ac6bfd55ab9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b983e7e1721fa68cc04c05b1249d5871d66debe5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b983e7e1721fa68cc04c05b1249d5871d66debe5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b983e7e1721fa68cc04c05b1249d5871d66debe5/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a739d207a39fc34c2e5adf4e14bfbb3a6288ede1"
      },
      {
        "sha": "a2e581de942ece85b84c4f5a15287654b02867cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a2e581de942ece85b84c4f5a15287654b02867cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a2e581de942ece85b84c4f5a15287654b02867cb"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 40,
      "deletions": 30
    },
    "files": [
      {
        "sha": "27c87688b42ef8925d1b4b32ce21b31a18fd309f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "patch": "@@ -717,6 +717,8 @@ if EMBEDDED_LEVELDB\n include Makefile.leveldb.include\n endif\n \n+include Makefile.test_util.include\n+\n if ENABLE_TESTS\n include Makefile.test.include\n endif"
      },
      {
        "sha": "9e70db116b7c7354b1fe3d4262bfb6d8d8ba162c",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "patch": "@@ -40,10 +40,6 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/lockedpool.cpp \\\n   bench/poly1305.cpp \\\n   bench/prevector.cpp \\\n-  test/util/transaction_utils.h \\\n-  test/util/transaction_utils.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/setup_common.cpp \\\n   test/util.h \\\n   test/util.cpp\n \n@@ -59,6 +55,7 @@ bench_bench_bitcoin_LDADD = \\\n   $(LIBBITCOIN_UTIL) \\\n   $(LIBBITCOIN_CONSENSUS) \\\n   $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBTEST_UTIL) \\\n   $(LIBLEVELDB) \\\n   $(LIBLEVELDB_SSE42) \\\n   $(LIBMEMENV) \\"
      },
      {
        "sha": "8c47fabad9f419d8ee8ca0ed112a623f951c3184",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 2,
        "deletions": 10,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "patch": "@@ -26,12 +26,6 @@ TEST_QT_H = \\\n   qt/test/util.h \\\n   qt/test/wallettests.h\n \n-TEST_BITCOIN_CPP = \\\n-  test/util/setup_common.cpp\n-\n-TEST_BITCOIN_H = \\\n-  test/util/setup_common.h\n-\n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES)\n \n@@ -42,9 +36,7 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   qt/test/util.cpp \\\n-  $(TEST_QT_H) \\\n-  $(TEST_BITCOIN_CPP) \\\n-  $(TEST_BITCOIN_H)\n+  $(TEST_QT_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n   qt/test/addressbooktests.cpp \\\n@@ -54,7 +46,7 @@ endif # ENABLE_WALLET\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER) $(LIBTEST_UTIL)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_UTIL) $(LIBBITCOIN_WALLET)\n endif"
      },
      {
        "sha": "b4ca01b1fe162c022c91e41b5fffa486d725c3c8",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 4,
        "deletions": 16,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "patch": "@@ -58,31 +58,19 @@ RAW_TEST_FILES =\n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n BITCOIN_TEST_SUITE = \\\n-  test/util/blockfilter.cpp \\\n-  test/util/blockfilter.h \\\n-  test/util/logging.cpp \\\n-  test/util/logging.h \\\n-  test/util/transaction_utils.cpp \\\n-  test/util/transaction_utils.h \\\n   test/main.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/setup_common.cpp \\\n-  test/util/str.h \\\n-  test/util/str.cpp\n+  $(TEST_UTIL_H)\n \n FUZZ_SUITE = \\\n   test/fuzz/fuzz.cpp \\\n   test/fuzz/fuzz.h \\\n-  test/fuzz/FuzzedDataProvider.h \\\n-  test/util/setup_common.cpp \\\n-  test/util/setup_common.h \\\n-  test/util/str.cpp \\\n-  test/util/str.h\n+  test/fuzz/FuzzedDataProvider.h\n \n FUZZ_SUITE_LD_COMMON = \\\n  $(LIBBITCOIN_SERVER) \\\n  $(LIBBITCOIN_COMMON) \\\n  $(LIBBITCOIN_UTIL) \\\n+ $(LIBTEST_UTIL) \\\n  $(LIBBITCOIN_CONSENSUS) \\\n  $(LIBBITCOIN_CRYPTO) \\\n  $(LIBUNIVALUE) \\\n@@ -198,7 +186,7 @@ endif\n \n test_test_bitcoin_SOURCES = $(BITCOIN_TEST_SUITE) $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD =\n+test_test_bitcoin_LDADD = $(LIBTEST_UTIL)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n endif"
      },
      {
        "sha": "cf55d141b0f83ff58b770e761ac14676c303072f",
        "filename": "src/Makefile.test_util.include",
        "status": "added",
        "additions": 31,
        "deletions": 0,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.test_util.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b983e7e1721fa68cc04c05b1249d5871d66debe5/src/Makefile.test_util.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_util.include?ref=b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "patch": "@@ -0,0 +1,31 @@\n+# Copyright (c) 2013-2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+LIBTEST_UTIL=libtest_util.a\n+\n+EXTRA_LIBRARIES += \\\n+    $(LIBTEST_UTIL)\n+\n+TEST_UTIL_H = \\\n+    test/util/blockfilter.h \\\n+    test/util/logging.h \\\n+    test/util/setup_common.h \\\n+    test/util/str.h \\\n+    test/util/transaction_utils.h\n+\n+libtest_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libtest_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libtest_util_a_SOURCES = \\\n+  test/util/blockfilter.cpp \\\n+  test/util/logging.cpp \\\n+  test/util/setup_common.cpp \\\n+  test/util/str.cpp \\\n+  test/util/transaction_utils.cpp \\\n+  $(TEST_UTIL_H)\n+\n+LIBTEST_UTIL += $(LIBBITCOIN_SERVER)\n+LIBTEST_UTIL += $(LIBBITCOIN_COMMON)\n+LIBTEST_UTIL += $(LIBBITCOIN_UTIL)\n+LIBTEST_UTIL += $(LIBBITCOIN_CRYPTO_BASE)\n+"
      }
    ]
  },
  {
    "sha": "03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2Y2ZjQwOGFiMmU5YjMwZTFlZTc0N2I3NmJkOWVkYzIwYjJjOTlk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T14:40:08Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T14:52:58Z"
      },
      "message": "Merge #17545: build: remove libanl.so.1 from ALLOWED_LIBRARIES\n\nec89d2882a591f6af5aad57ab8638250d9dc1add build: remove libanl.so.1 from ALLOWED_LIBRARIES (fanquake)\n\nPull request description:\n\n  It should no longer be needed after: https://github.com/bitcoin/bitcoin/commit/10ae7a7b2316f8052ec58ef237ce6dd987300900.\n\n  Symbol checker output for the `0.19.0.1` gitian built Linux binaries:\n  ```bash\n  aarch64  arm  i686-pc  risvc  symbol-check.py  x86_64\n  root@557096f567b5:/test# find aarch64/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-aarch64.so.1']\n  ['libpthread.so.0', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-aarch64.so.1']\n  root@557096f567b5:/test# find arm -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-armhf.so.3']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-armhf.so.3']\n  root@557096f567b5:/test# find i686-pc -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux.so.2']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux.so.2']\n  root@557096f567b5:/test# find risvc/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-riscv64-lp64d.so.1']\n  ['libpthread.so.0', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-riscv64-lp64d.so.1', 'libatomic.so.1']\n  root@557096f567b5:/test# find x86_64/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-x86-64.so.2']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-x86-64.so.2']\n  ```\n\nACKs for top commit:\n  laanwj:\n    ACK, good catch ec89d2882a591f6af5aad57ab8638250d9dc1add\n\nTree-SHA512: 6bc118da190a5c37d26f0dfad5d4661add2ef15525668efb93425423bddbddabf3d7d8809464e79691f517fbe2aab241678652b3dc55ec3f452cf0dcbc26057c",
      "tree": {
        "sha": "86c27cb39a58dcb50e78bf27b329d018055e79ba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/86c27cb39a58dcb50e78bf27b329d018055e79ba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3X9koACgkQLuufXMCV\nJsEkog/9F+xGQl+i5xCmdNoLeB6K1u9mOus9JvnnlUxHY/IAcJArOZ6SJ95LQzjn\nX2lBmH/rUMHZp5kxZbSwApbTWToK67Aj6KkimYD4ZFWLO2YBi2U1cD/Gv2Jk2Oo0\nlS3sC6NOYaBQ04CgWIJTxdLPOAhmRH7XyEucBgo7NXj7xIRoeC43PcEx2l3ppQDn\nJac/wAqJ98pop9NIyKdsdUlsoWebHiMXoLG1a2i8djTyyNzGGfBh+IJCGO00lyh/\nI60Uo3M+rm7RCQakPnxAnL7JiomH2vlvqG9iDlWe/6dEdf8yuAxVfiL1W/YbKlV2\n4yTVbrHTC8eg2GbIbv75Cj1z1Uxocb+dEE4G7E2aaBrDXf5f1oqFvUy23qmXKQBA\n4fR2R+pLXomQ7Qot57PzgyLgd0uswcDXdxYUbLwsDNeCICSW6P9djizjVU0CRHiI\nyd9Jgcn20VUZlczPQggHs7sMVwQLLRiqkXeWGYzyFDWf1QvxgqWgh5hcbYbtfdVs\nEeHguhaFlqg+LzbqRmoGVZSaxUQfxLStU/6Qwv/eDXs80+pXkreaoe1Ul5lQuDty\n5LqWH8LvVCsrLJSHA0AQPjPkNeVfAhktmHf0jN3ag7dcPl/WeTDxJvAehwPDkSBF\nyO+uU2yqRc2Ao8G1Pw35B94JWqmXrWQrvE/tGuC+Gqr0Ob560NA=\n=VgEk\n-----END PGP SIGNATURE-----",
        "payload": "tree 86c27cb39a58dcb50e78bf27b329d018055e79ba\nparent b983e7e1721fa68cc04c05b1249d5871d66debe5\nparent ec89d2882a591f6af5aad57ab8638250d9dc1add\nauthor fanquake <fanquake@gmail.com> 1574433608 -0500\ncommitter fanquake <fanquake@gmail.com> 1574434378 -0500\n\nMerge #17545: build: remove libanl.so.1 from ALLOWED_LIBRARIES\n\nec89d2882a591f6af5aad57ab8638250d9dc1add build: remove libanl.so.1 from ALLOWED_LIBRARIES (fanquake)\n\nPull request description:\n\n  It should no longer be needed after: https://github.com/bitcoin/bitcoin/commit/10ae7a7b2316f8052ec58ef237ce6dd987300900.\n\n  Symbol checker output for the `0.19.0.1` gitian built Linux binaries:\n  ```bash\n  aarch64  arm  i686-pc  risvc  symbol-check.py  x86_64\n  root@557096f567b5:/test# find aarch64/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-aarch64.so.1']\n  ['libpthread.so.0', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-aarch64.so.1']\n  root@557096f567b5:/test# find arm -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-armhf.so.3']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-armhf.so.3']\n  root@557096f567b5:/test# find i686-pc -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux.so.2']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux.so.2']\n  root@557096f567b5:/test# find risvc/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-riscv64-lp64d.so.1']\n  ['libpthread.so.0', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-riscv64-lp64d.so.1', 'libatomic.so.1']\n  root@557096f567b5:/test# find x86_64/ -type f -executable | xargs python3 symbol-check.py\n  ['libpthread.so.0', 'librt.so.1', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-x86-64.so.2']\n  ['libpthread.so.0', 'librt.so.1', 'libfontconfig.so.1', 'libfreetype.so.6', 'libxcb.so.1', 'libdl.so.2', 'libm.so.6', 'libgcc_s.so.1', 'libc.so.6', 'ld-linux-x86-64.so.2']\n  ```\n\nACKs for top commit:\n  laanwj:\n    ACK, good catch ec89d2882a591f6af5aad57ab8638250d9dc1add\n\nTree-SHA512: 6bc118da190a5c37d26f0dfad5d4661add2ef15525668efb93425423bddbddabf3d7d8809464e79691f517fbe2aab241678652b3dc55ec3f452cf0dcbc26057c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b983e7e1721fa68cc04c05b1249d5871d66debe5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b983e7e1721fa68cc04c05b1249d5871d66debe5"
      },
      {
        "sha": "ec89d2882a591f6af5aad57ab8638250d9dc1add",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec89d2882a591f6af5aad57ab8638250d9dc1add",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec89d2882a591f6af5aad57ab8638250d9dc1add"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c224085c327946c7c28aed60753b5170b7a2d926",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
        "patch": "@@ -57,7 +57,6 @@\n 'libgcc_s.so.1', # GCC base support\n 'libc.so.6', # C library\n 'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n 'libm.so.6', # math library\n 'librt.so.1', # real-time (clock)\n 'libatomic.so.1',"
      }
    ]
  },
  {
    "sha": "bb862d7864cc4889285e1a3713e3864d667cf30a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjg2MmQ3ODY0Y2M0ODg5Mjg1ZTFhMzcxM2UzODY0ZDY2N2NmMzBh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-22T15:35:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-22T15:35:08Z"
      },
      "message": "Merge #14384: Fire TransactionRemovedFromMempool callbacks from mempool\n\ne20c72f9f076681def325b5b5fa53bccda2b0eab Fire TransactionRemovedFromMempool from mempool (251)\n\nPull request description:\n\n  This pull request fires TransactionRemovedFromMempool callbacks from the mempool and cleans up a bunch of code.\n\n  It also resolves the `txmempool -> validation -> validationinterface -> txmempool` circular dependency.\n\n  Ideally, `validationinterface` is a dumb component that doesn't have any knowledge of the sub-systems it sends its notifications to. The commit that aims to resolve this circular dependency by moving `txmempool` specific code out of `validationinterface` to `txmempool` where it belongs.\n\nACKs for top commit:\n  jnewbery:\n    ACK e20c72f9f076681def325b5b5fa53bccda2b0eab\n\nTree-SHA512: 354c3ff1113b21a0b511d80d604edfe3846dddae3355e43d1387f68906e54bf5dc01e7c029edc0b8e635b500b2ab97ee50362e2486eb4319f7347ee9a9e6cef3",
      "tree": {
        "sha": "7cb60d4ed799d2931bacf2c4fd7e5b56e1c5a9c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7cb60d4ed799d2931bacf2c4fd7e5b56e1c5a9c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb862d7864cc4889285e1a3713e3864d667cf30a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3YACwACgkQHkrtYphs\n0l1GHAf+Np2sgCd8iZheCUjHyPRBqa5ajEdCp4l5U3mEIntn9GkFOYw0hjqIur74\nrPJOSQjtG+YxVaJLUDdVmIs4xZDO+QM2H/o1oWKBCpQohpxbLa1jGpixdrRDAbzs\n1W/zSoZA/witAyFFkV0hHWX4Rq8VqGZNqAqj1/Q8TtBBlZ/tbBoMvfFU+0ZNMHpY\n4UO2Zlf9C48+x0xJEqchTK8Owk5bfEinqXnRl8toCvBmVNPwMJJbvwtKqaI42Bjo\nS8oqOHAmcUQsI2VMrCmg/IMjwJ3sIHZL9pds0CrSfy+2hms11I7Hg0giB9H/4H+y\n9V0f0LzPLY2w55iF6NW8AEr3D02GCA==\n=2xtU\n-----END PGP SIGNATURE-----",
        "payload": "tree 7cb60d4ed799d2931bacf2c4fd7e5b56e1c5a9c1\nparent 03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d\nparent e20c72f9f076681def325b5b5fa53bccda2b0eab\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574436900 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574436908 +0100\n\nMerge #14384: Fire TransactionRemovedFromMempool callbacks from mempool\n\ne20c72f9f076681def325b5b5fa53bccda2b0eab Fire TransactionRemovedFromMempool from mempool (251)\n\nPull request description:\n\n  This pull request fires TransactionRemovedFromMempool callbacks from the mempool and cleans up a bunch of code.\n\n  It also resolves the `txmempool -> validation -> validationinterface -> txmempool` circular dependency.\n\n  Ideally, `validationinterface` is a dumb component that doesn't have any knowledge of the sub-systems it sends its notifications to. The commit that aims to resolve this circular dependency by moving `txmempool` specific code out of `validationinterface` to `txmempool` where it belongs.\n\nACKs for top commit:\n  jnewbery:\n    ACK e20c72f9f076681def325b5b5fa53bccda2b0eab\n\nTree-SHA512: 354c3ff1113b21a0b511d80d604edfe3846dddae3355e43d1387f68906e54bf5dc01e7c029edc0b8e635b500b2ab97ee50362e2486eb4319f7347ee9a9e6cef3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb862d7864cc4889285e1a3713e3864d667cf30a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb862d7864cc4889285e1a3713e3864d667cf30a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb862d7864cc4889285e1a3713e3864d667cf30a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03f6f408ab2e9b30e1ee747b76bd9edc20b2c99d"
      },
      {
        "sha": "e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e20c72f9f076681def325b5b5fa53bccda2b0eab"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 15,
      "deletions": 36
    },
    "files": [
      {
        "sha": "e7dda59590cff2b5ed2ac8c1f4bae11f94bae9b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb862d7864cc4889285e1a3713e3864d667cf30a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb862d7864cc4889285e1a3713e3864d667cf30a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=bb862d7864cc4889285e1a3713e3864d667cf30a",
        "patch": "@@ -281,7 +281,6 @@ void Shutdown(NodeContext& node)\n     node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    GetMainSignals().UnregisterWithMempoolSignals(mempool);\n     globalVerifyHandle.reset();\n     ECC_Stop();\n     if (node.mempool) node.mempool = nullptr;\n@@ -1263,7 +1262,6 @@ bool AppInitMain(NodeContext& node)\n     }, 60000);\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n-    GetMainSignals().RegisterWithMempoolSignals(mempool);\n \n     // Create client interfaces for wallets that are supposed to be loaded\n     // according to -wallet and -disablewallet options. This only constructs"
      },
      {
        "sha": "3c967a04c0711f4187ebcdaa0754884260010b52",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb862d7864cc4889285e1a3713e3864d667cf30a/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb862d7864cc4889285e1a3713e3864d667cf30a/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=bb862d7864cc4889285e1a3713e3864d667cf30a",
        "patch": "@@ -17,6 +17,7 @@\n #include <util/system.h>\n #include <util/moneystr.h>\n #include <util/time.h>\n+#include <validationinterface.h>\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, unsigned int _entryHeight,\n@@ -403,7 +404,12 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n \n void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n-    NotifyEntryRemoved(it->GetSharedTx(), reason);\n+    CTransactionRef ptx = it->GetSharedTx();\n+    NotifyEntryRemoved(ptx, reason);\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        GetMainSignals().TransactionRemovedFromMempool(ptx);\n+    }\n+\n     const uint256 hash = it->GetTx().GetHash();\n     for (const CTxIn& txin : it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);"
      },
      {
        "sha": "6c0f4d5edd2d3390826dc4c7b4f16191fa557cd7",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 24,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb862d7864cc4889285e1a3713e3864d667cf30a/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb862d7864cc4889285e1a3713e3864d667cf30a/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=bb862d7864cc4889285e1a3713e3864d667cf30a",
        "patch": "@@ -7,9 +7,9 @@\n \n #include <primitives/block.h>\n #include <scheduler.h>\n-#include <txmempool.h>\n \n #include <future>\n+#include <unordered_map>\n #include <utility>\n \n #include <boost/signals2/signal.hpp>\n@@ -46,11 +46,6 @@ struct MainSignalsInstance {\n \n static CMainSignals g_signals;\n \n-// This map has to a separate global instead of a member of MainSignalsInstance,\n-// because RegisterWithMempoolSignals is currently called before RegisterBackgroundSignalScheduler,\n-// so MainSignalsInstance hasn't been created yet.\n-static std::unordered_map<CTxMemPool*, boost::signals2::scoped_connection> g_connNotifyEntryRemoved;\n-\n void CMainSignals::RegisterBackgroundSignalScheduler(CScheduler& scheduler) {\n     assert(!m_internals);\n     m_internals.reset(new MainSignalsInstance(&scheduler));\n@@ -71,17 +66,6 @@ size_t CMainSignals::CallbacksPending() {\n     return m_internals->m_schedulerClient.CallbacksPending();\n }\n \n-void CMainSignals::RegisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.emplace(std::piecewise_construct,\n-        std::forward_as_tuple(&pool),\n-        std::forward_as_tuple(pool.NotifyEntryRemoved.connect(std::bind(&CMainSignals::MempoolEntryRemoved, this, std::placeholders::_1, std::placeholders::_2)))\n-    );\n-}\n-\n-void CMainSignals::UnregisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.erase(&pool);\n-}\n-\n CMainSignals& GetMainSignals()\n {\n     return g_signals;\n@@ -126,13 +110,6 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n@@ -150,6 +127,12 @@ void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n     });\n }\n \n+void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n+    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        m_internals->TransactionRemovedFromMempool(ptx);\n+    });\n+}\n+\n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n     m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);"
      },
      {
        "sha": "63aad8661f85fef3abe7851be6a7da313f889515",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb862d7864cc4889285e1a3713e3864d667cf30a/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb862d7864cc4889285e1a3713e3864d667cf30a/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=bb862d7864cc4889285e1a3713e3864d667cf30a",
        "patch": "@@ -21,8 +21,6 @@ class CConnman;\n class CValidationInterface;\n class uint256;\n class CScheduler;\n-class CTxMemPool;\n-enum class MemPoolRemovalReason;\n \n // These functions dispatch to one or all registered wallets\n \n@@ -158,8 +156,6 @@ class CMainSignals {\n     friend void ::UnregisterAllValidationInterfaces();\n     friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n \n-    void MempoolEntryRemoved(CTransactionRef tx, MemPoolRemovalReason reason);\n-\n public:\n     /** Register a CScheduler to give callbacks which should run in the background (may only be called once) */\n     void RegisterBackgroundSignalScheduler(CScheduler& scheduler);\n@@ -170,13 +166,10 @@ class CMainSignals {\n \n     size_t CallbacksPending();\n \n-    /** Register with mempool to call TransactionRemovedFromMempool callbacks */\n-    void RegisterWithMempoolSignals(CTxMemPool& pool);\n-    /** Unregister with mempool */\n-    void UnregisterWithMempoolSignals(CTxMemPool& pool);\n \n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef &);\n+    void TransactionRemovedFromMempool(const CTransactionRef &);\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>> &);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);"
      },
      {
        "sha": "7164432ca550003250aff60b589f19a9d8c7e918",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb862d7864cc4889285e1a3713e3864d667cf30a/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb862d7864cc4889285e1a3713e3864d667cf30a/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=bb862d7864cc4889285e1a3713e3864d667cf30a",
        "patch": "@@ -26,7 +26,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\"\n-    \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"wallet/scriptpubkeyman -> wallet/wallet -> wallet/scriptpubkeyman\"\n )\n "
      }
    ]
  },
  {
    "sha": "fad88e6f86d1dd32cf01db2287df9c63e66c5116",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ4OGU2Zjg2ZDFkZDMyY2YwMWRiMjI4N2RmOWM2M2U2NmM1MTE2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-22T18:58:53Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-22T18:57:55Z"
      },
      "message": "ci: Remove use of cd",
      "tree": {
        "sha": "5204b698fcb948fdcf7b211219fc6e454c3f0513",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5204b698fcb948fdcf7b211219fc6e454c3f0513"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad88e6f86d1dd32cf01db2287df9c63e66c5116",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUil1gv9FCF+vZeo5BhR7pjPN26XMGVG88aKn/Bi9BlGA26Ojm3a2ush7S65HGS7\n06KJoOJxT7/2SJ1GmUIL63ise1/ntODavjrftTJtDcdqkuwS/lJWMOsxpoeQyMjr\ntSkilZjC1fk2lsbEvfDhmcghIyzGu8DLscpd+FbT+nuP8/BdhCcFToWqtopE9QLs\n99WkjUmqpSgUH6CzRZrW+ZZzaSxxHqWN1ZLieGYc8ylvQsohzf5Lli2G3vaDWuIQ\nTyLdhIWxZjqH4OfuIP2lYPtbH/EzJ8X/V8ozWMWgVwKe/WRSCqm5b9JRSf0DGlbM\nL8Gtu8R0CCALfSzrGoxxWEj1H3tMzZDFHaIkVV3c31WyTKZ7eh2R1RKNk/6gOj0o\n36cj5c21f7mFNJF42MXupIZwtOx6lH61j3gUNTUiOm5KFty/zu/ZQ8DtPny8vz4w\njkEaCdN/vvfEeKMUaoWyzzDqiWfXy1ZCoTXN0h5WBgH8G0GEChwBUqAXPzp4daBU\n0F1+sJ+S\n=zwmB\n-----END PGP SIGNATURE-----",
        "payload": "tree 5204b698fcb948fdcf7b211219fc6e454c3f0513\nparent fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e\nauthor MarcoFalke <falke.marco@gmail.com> 1574449133 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574449075 -0500\n\nci: Remove use of cd\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad88e6f86d1dd32cf01db2287df9c63e66c5116",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad88e6f86d1dd32cf01db2287df9c63e66c5116",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad88e6f86d1dd32cf01db2287df9c63e66c5116/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 6,
      "deletions": 21
    },
    "files": [
      {
        "sha": "2a1983b1c5d19076e50f5d81d5143fb326f9b6c4",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fad88e6f86d1dd32cf01db2287df9c63e66c5116",
        "patch": "@@ -44,6 +44,8 @@ elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (A\n   DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n fi\n \n+export P_CI_DIR=\"$PWD\"\n+\n if [ -z \"$RUN_CI_ON_HOST\" ]; then\n   echo \"Creating $DOCKER_NAME_TAG container to run in\"\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n@@ -57,12 +59,12 @@ if [ -z \"$RUN_CI_ON_HOST\" ]; then\n                   $DOCKER_NAME_TAG)\n \n   DOCKER_EXEC () {\n-    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n else\n   echo \"Running on host system without docker wrapper\"\n   DOCKER_EXEC () {\n-    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n fi\n "
      },
      {
        "sha": "98b75d7497547a96478fbd3119a13983c2615b80",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 14,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=fad88e6f86d1dd32cf01db2287df9c63e66c5116",
        "patch": "@@ -19,14 +19,8 @@ else\n fi\n END_FOLD\n \n-# Create folder on host and docker, so that `cd` works\n-mkdir -p build\n DOCKER_EXEC mkdir -p build\n-\n-# Temporarily disable errexit, because Travis macOS fails without error message\n-set +o errexit\n-cd build || (echo \"could not enter build directory\"; exit 1)\n-set -o errexit\n+export P_CI_DIR=\"$P_CI_DIR/build\"\n \n BEGIN_FOLD configure\n DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n@@ -38,9 +32,7 @@ mkdir -p \"bitcoin-$HOST\"\n DOCKER_EXEC make distdir VERSION=$HOST\n END_FOLD\n \n-set +o errexit\n-cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n-set -o errexit\n+export P_CI_DIR=\"$P_CI_DIR/bitcoin-$HOST\"\n \n BEGIN_FOLD configure\n DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n@@ -52,7 +44,3 @@ trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n END_FOLD\n-\n-set +o errexit\n-cd ${BASE_ROOT_DIR} || (echo \"could not enter base root dir $BASE_ROOT_DIR\"; exit 1)\n-set -o errexit"
      },
      {
        "sha": "a8e0a50f3669c53b17b609cf8a8f410d401049d9",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad88e6f86d1dd32cf01db2287df9c63e66c5116/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=fad88e6f86d1dd32cf01db2287df9c63e66c5116",
        "patch": "@@ -6,11 +6,6 @@\n \n export LC_ALL=C.UTF-8\n \n-# Temporarily disable errexit, because Travis macOS fails without error message\n-set +o errexit\n-cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n-set -o errexit\n-\n if [ -n \"$QEMU_USER_CMD\" ]; then\n   BEGIN_FOLD wrap-qemu\n   echo \"Prepare to run functional tests for HOST=$HOST\""
      }
    ]
  },
  {
    "sha": "cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWY4N2Y3YTQ4Zjc2YzMzZjU1ZmM1NGYxOTlhOTA1YTJmYTBiYjE1",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T19:06:14Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T19:06:35Z"
      },
      "message": "Merge #17290: Enable BnB coin selection for preset inputs and subtract fee from outputs\n\nb007efdf1910db1d38671d6435d2f379bbf847d2 Allow BnB when subtract fee from outputs (Andrew Chow)\ndb15e71e79b24601853703bebd1c92f4b523fd5f Use BnB when preset inputs are selected (Andrew Chow)\n\nPull request description:\n\n  Currently we explicitly disable BnB when there are preset inputs selected or when the subtract fee from outputs option is enabled. This PR enables BnB for both cases.\n\n  Kind of an alternative to #17246 (implements the subtract fee from outputs part of it) and borrows a test from there too.\n\nACKs for top commit:\n  instagibbs:\n    reACK https://github.com/bitcoin/bitcoin/pull/17290/commits/b007efdf1910db1d38671d6435d2f379bbf847d2\n  Sjors:\n    re-ACK b007efdf1910db1d38671d6435d2f379bbf847d2\n\nTree-SHA512: 933276b09b2fa2ab43db7f0b98762f06f6f5fa8606195f96aca9fa1cb71ae4ee7156028dd482b1cada82ddd0996a9daf12ea5c152589fdf192cd96cbc51e99df",
      "tree": {
        "sha": "0ba63dfead2528f0ae743a8444f7ab69a8801c2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0ba63dfead2528f0ae743a8444f7ab69a8801c2b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YMbsACgkQ0wARbhyH\nWj3v0hAAgn2XYi14J9m7M9lguMzLR6Luiu+lksllXyErfa+BRwJXChoaqCllIKyw\nis6kIDZi+H1ShU7gE2PM+62a4F84PSmKvJSYN+Gk1sI28JUbxUALofoGo1/HwlZb\nwNg+wkZ/y6FkOuYo5PdhdK6LrRe1gAmrJ5MXhPKybATNi6f9HLbFkL4fsakaImm7\nytco3eBrQE4ZZAmWKvqwv7r2qGl+vyJt/A/AyIegnh4+Y+COjUGvrhwC1qa6Q2EA\n2NTlx+xJTRDO4n9NpXAkt1EGsKj8rsbq8fwq8d+w4YygVeDhTomjJY8NgAbGwfrO\nB5rsWPTNyO72LHLNLqbu0Lmu0odRSr5Fna0Lx/XebpauJW3197agnHzp3TG2GnZi\n4nzwABKVDAFK1Vu2B0ijHDH6t37ti/qqPbvMnxGczypB9viAkFghV/UAo8v4dkNZ\nwxKIFYf1Je7SnWLoP4yIoojL9fZAKMtpZMlyVPnW2GvnTxFiF7jBAS3AwD/4Eynk\ni7BKfqVPb+UrIfWm4/fFlPuXOMHyxvOhz4HRkT0kc6hF4FM0JOLzxxK4JdE8ENNc\nRTPkEynxBO/MITDnOhalZslp/p/Rj6pUyQaN7+La/ZsnI43rB/VOpab3hrbf76f4\n1Y8h8KzkhBv6bNGdwUiygtlNn46fZk6SIUgPMwwdFbWWldkEylM=\n=pxly\n-----END PGP SIGNATURE-----",
        "payload": "tree 0ba63dfead2528f0ae743a8444f7ab69a8801c2b\nparent bb862d7864cc4889285e1a3713e3864d667cf30a\nparent b007efdf1910db1d38671d6435d2f379bbf847d2\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574449574 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574449595 +1300\n\nMerge #17290: Enable BnB coin selection for preset inputs and subtract fee from outputs\n\nb007efdf1910db1d38671d6435d2f379bbf847d2 Allow BnB when subtract fee from outputs (Andrew Chow)\ndb15e71e79b24601853703bebd1c92f4b523fd5f Use BnB when preset inputs are selected (Andrew Chow)\n\nPull request description:\n\n  Currently we explicitly disable BnB when there are preset inputs selected or when the subtract fee from outputs option is enabled. This PR enables BnB for both cases.\n\n  Kind of an alternative to #17246 (implements the subtract fee from outputs part of it) and borrows a test from there too.\n\nACKs for top commit:\n  instagibbs:\n    reACK https://github.com/bitcoin/bitcoin/pull/17290/commits/b007efdf1910db1d38671d6435d2f379bbf847d2\n  Sjors:\n    re-ACK b007efdf1910db1d38671d6435d2f379bbf847d2\n\nTree-SHA512: 933276b09b2fa2ab43db7f0b98762f06f6f5fa8606195f96aca9fa1cb71ae4ee7156028dd482b1cada82ddd0996a9daf12ea5c152589fdf192cd96cbc51e99df\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb862d7864cc4889285e1a3713e3864d667cf30a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb862d7864cc4889285e1a3713e3864d667cf30a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb862d7864cc4889285e1a3713e3864d667cf30a"
      },
      {
        "sha": "b007efdf1910db1d38671d6435d2f379bbf847d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b007efdf1910db1d38671d6435d2f379bbf847d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b007efdf1910db1d38671d6435d2f379bbf847d2"
      }
    ],
    "stats": {
      "total": 115,
      "additions": 82,
      "deletions": 33
    },
    "files": [
      {
        "sha": "7e9f88f6b780340af267a603dd2066335384a04d",
        "filename": "src/wallet/test/coinselector_tests.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 13,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/test/coinselector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/test/coinselector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/coinselector_tests.cpp?ref=cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
        "patch": "@@ -55,29 +55,39 @@ static void add_coin(const CAmount& nValue, int nInput, CoinSet& set)\n     set.emplace(MakeTransactionRef(tx), nInput);\n }\n \n-static void add_coin(const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0)\n+static void add_coin(CWallet& wallet, const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0, bool spendable = false)\n {\n     balance += nValue;\n     static int nextLockTime = 0;\n     CMutableTransaction tx;\n     tx.nLockTime = nextLockTime++;        // so all transactions get different hashes\n     tx.vout.resize(nInput + 1);\n     tx.vout[nInput].nValue = nValue;\n+    if (spendable) {\n+        CTxDestination dest;\n+        std::string error;\n+        assert(wallet.GetNewDestination(OutputType::BECH32, \"\", dest, error));\n+        tx.vout[nInput].scriptPubKey = GetScriptForDestination(dest);\n+    }\n     if (fIsFromMe) {\n         // IsFromMe() returns (GetDebit() > 0), and GetDebit() is 0 if vin.empty(),\n         // so stop vin being empty, and cache a non-zero Debit to fake out IsFromMe()\n         tx.vin.resize(1);\n     }\n-    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&testWallet, MakeTransactionRef(std::move(tx)));\n+    std::unique_ptr<CWalletTx> wtx = MakeUnique<CWalletTx>(&wallet, MakeTransactionRef(std::move(tx)));\n     if (fIsFromMe)\n     {\n         wtx->m_amounts[CWalletTx::DEBIT].Set(ISMINE_SPENDABLE, 1);\n     }\n     COutput output(wtx.get(), nInput, nAge, true /* spendable */, true /* solvable */, true /* safe */);\n     vCoins.push_back(output);\n-    testWallet.AddToWallet(*wtx.get());\n+    wallet.AddToWallet(*wtx.get());\n     wtxn.emplace_back(std::move(wtx));\n }\n+static void add_coin(const CAmount& nValue, int nAge = 6*24, bool fIsFromMe = false, int nInput=0, bool spendable = false)\n+{\n+    add_coin(testWallet, nValue, nAge, fIsFromMe, nInput, spendable);\n+}\n \n static void empty_wallet(void)\n {\n@@ -252,17 +262,33 @@ BOOST_AUTO_TEST_CASE(bnb_search_test)\n     vCoins.at(0).nInputBytes = 40; // Make sure that it has a negative effective value. The next check should assert if this somehow got through. Otherwise it will fail\n     BOOST_CHECK(!testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n \n-    // Make sure that we aren't using BnB when there are preset inputs\n+    // Test fees subtracted from output:\n+    empty_wallet();\n+    add_coin(1 * CENT);\n+    vCoins.at(0).nInputBytes = 40;\n+    BOOST_CHECK(!testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n+    coin_selection_params_bnb.m_subtract_fee_outputs = true;\n+    BOOST_CHECK(testWallet.SelectCoinsMinConf( 1 * CENT, filter_standard, GroupCoins(vCoins), setCoinsRet, nValueRet, coin_selection_params_bnb, bnb_used));\n+    BOOST_CHECK_EQUAL(nValueRet, 1 * CENT);\n+\n+    // Make sure that can use BnB when there are preset inputs\n     empty_wallet();\n-    add_coin(5 * CENT);\n-    add_coin(3 * CENT);\n-    add_coin(2 * CENT);\n-    CCoinControl coin_control;\n-    coin_control.fAllowOtherInputs = true;\n-    coin_control.Select(COutPoint(vCoins.at(0).tx->GetHash(), vCoins.at(0).i));\n-    BOOST_CHECK(testWallet.SelectCoins(vCoins, 10 * CENT, setCoinsRet, nValueRet, coin_control, coin_selection_params_bnb, bnb_used));\n-    BOOST_CHECK(!bnb_used);\n-    BOOST_CHECK(!coin_selection_params_bnb.use_bnb);\n+    {\n+        std::unique_ptr<CWallet> wallet = MakeUnique<CWallet>(m_chain.get(), WalletLocation(), WalletDatabase::CreateMock());\n+        bool firstRun;\n+        wallet->LoadWallet(firstRun);\n+        LOCK(wallet->cs_wallet);\n+        add_coin(*wallet, 5 * CENT, 6 * 24, false, 0, true);\n+        add_coin(*wallet, 3 * CENT, 6 * 24, false, 0, true);\n+        add_coin(*wallet, 2 * CENT, 6 * 24, false, 0, true);\n+        CCoinControl coin_control;\n+        coin_control.fAllowOtherInputs = true;\n+        coin_control.Select(COutPoint(vCoins.at(0).tx->GetHash(), vCoins.at(0).i));\n+        coin_selection_params_bnb.effective_fee = CFeeRate(0);\n+        BOOST_CHECK(wallet->SelectCoins(vCoins, 10 * CENT, setCoinsRet, nValueRet, coin_control, coin_selection_params_bnb, bnb_used));\n+        BOOST_CHECK(bnb_used);\n+        BOOST_CHECK(coin_selection_params_bnb.use_bnb);\n+    }\n }\n \n BOOST_AUTO_TEST_CASE(knapsack_solver_test)"
      },
      {
        "sha": "74cff4d99162e10d519cf704799af73e934908e8",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 20,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
        "patch": "@@ -2234,7 +2234,11 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n                 if (effective_value > 0) {\n                     group.fee += coin.m_input_bytes < 0 ? 0 : coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n                     group.long_term_fee += coin.m_input_bytes < 0 ? 0 : long_term_feerate.GetFee(coin.m_input_bytes);\n-                    group.effective_value += effective_value;\n+                    if (coin_selection_params.m_subtract_fee_outputs) {\n+                        group.effective_value += coin.txout.nValue;\n+                    } else {\n+                        group.effective_value += effective_value;\n+                    }\n                     ++it;\n                 } else {\n                     it = group.Discard(coin);\n@@ -2260,6 +2264,7 @@ bool CWallet::SelectCoinsMinConf(const CAmount& nTargetValue, const CoinEligibil\n bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAmount& nTargetValue, std::set<CInputCoin>& setCoinsRet, CAmount& nValueRet, const CCoinControl& coin_control, CoinSelectionParams& coin_selection_params, bool& bnb_used) const\n {\n     std::vector<COutput> vCoins(vAvailableCoins);\n+    CAmount value_to_select = nTargetValue;\n \n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coin_control.HasSelected() && !coin_control.fAllowOtherInputs)\n@@ -2285,22 +2290,33 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     coin_control.ListSelected(vPresetInputs);\n     for (const COutPoint& outpoint : vPresetInputs)\n     {\n-        // For now, don't use BnB if preset inputs are selected. TODO: Enable this later\n-        bnb_used = false;\n-        coin_selection_params.use_bnb = false;\n-\n         std::map<uint256, CWalletTx>::const_iterator it = mapWallet.find(outpoint.hash);\n         if (it != mapWallet.end())\n         {\n             const CWalletTx& wtx = it->second;\n             // Clearly invalid input, fail\n-            if (wtx.tx->vout.size() <= outpoint.n)\n+            if (wtx.tx->vout.size() <= outpoint.n) {\n+                bnb_used = false;\n                 return false;\n+            }\n             // Just to calculate the marginal byte size\n-            nValueFromPresetInputs += wtx.tx->vout[outpoint.n].nValue;\n-            setPresetCoins.insert(CInputCoin(wtx.tx, outpoint.n));\n-        } else\n+            CInputCoin coin(wtx.tx, outpoint.n, wtx.GetSpendSize(outpoint.n, false));\n+            nValueFromPresetInputs += coin.txout.nValue;\n+            if (coin.m_input_bytes <= 0) {\n+                bnb_used = false;\n+                return false; // Not solvable, can't estimate size for fee\n+            }\n+            coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n+            if (coin_selection_params.use_bnb) {\n+                value_to_select -= coin.effective_value;\n+            } else {\n+                value_to_select -= coin.txout.nValue;\n+            }\n+            setPresetCoins.insert(coin);\n+        } else {\n+            bnb_used = false;\n             return false; // TODO: Allow non-wallet inputs\n+        }\n     }\n \n     // remove preset inputs from vCoins\n@@ -2329,14 +2345,14 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     size_t max_descendants = (size_t)std::max<int64_t>(1, limit_descendant_count);\n     bool fRejectLongChains = gArgs.GetBoolArg(\"-walletrejectlongchains\", DEFAULT_WALLET_REJECT_LONG_CHAINS);\n \n-    bool res = nTargetValue <= nValueFromPresetInputs ||\n-        SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(1, 6, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n-        SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(1, 1, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, 2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, max_ancestors-1, max_descendants-1), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n-        (m_spend_zero_conf_change && !fRejectLongChains && SelectCoinsMinConf(nTargetValue - nValueFromPresetInputs, CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max()), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used));\n+    bool res = value_to_select <= 0 ||\n+        SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(1, 6, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n+        SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(1, 1, 0), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, 2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, std::min((size_t)4, max_ancestors/3), std::min((size_t)4, max_descendants/3)), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, max_ancestors/2, max_descendants/2), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, max_ancestors-1, max_descendants-1), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used)) ||\n+        (m_spend_zero_conf_change && !fRejectLongChains && SelectCoinsMinConf(value_to_select, CoinEligibilityFilter(0, 1, std::numeric_limits<uint64_t>::max()), groups, setCoinsRet, nValueRet, coin_selection_params, bnb_used));\n \n     // because SelectCoinsMinConf clears the setCoinsRet, we now add the possible inputs to the coinset\n     util::insert(setCoinsRet, setPresetCoins);\n@@ -2602,7 +2618,8 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n \n             // BnB selector is the only selector used when this is true.\n             // That should only happen on the first pass through the loop.\n-            coin_selection_params.use_bnb = nSubtractFeeFromAmount == 0; // If we are doing subtract fee from recipient, then don't use BnB\n+            coin_selection_params.use_bnb = true;\n+            coin_selection_params.m_subtract_fee_outputs = nSubtractFeeFromAmount != 0; // If we are doing subtract fee from recipient, don't use effective values\n             // Start with no fee and loop until there is enough fee\n             while (true)\n             {\n@@ -2616,7 +2633,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                     nValueToSelect += nFeeRet;\n \n                 // vouts to the payees\n-                coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                if (!coin_selection_params.m_subtract_fee_outputs) {\n+                    coin_selection_params.tx_noinputs_size = 11; // Static vsize overhead + outputs vsize. 4 nVersion, 4 nLocktime, 1 input count, 1 output count, 1 witness overhead (dummy, flag, stack size)\n+                }\n                 for (const auto& recipient : vecSend)\n                 {\n                     CTxOut txout(recipient.nAmount, recipient.scriptPubKey);\n@@ -2633,7 +2652,9 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                         }\n                     }\n                     // Include the fee cost for outputs. Note this is only used for BnB right now\n-                    coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n+                    if (!coin_selection_params.m_subtract_fee_outputs) {\n+                        coin_selection_params.tx_noinputs_size += ::GetSerializeSize(txout, PROTOCOL_VERSION);\n+                    }\n \n                     if (IsDust(txout, chain().relayDustFee()))\n                     {"
      },
      {
        "sha": "e4b8163f0219db207e18320b678877a69c6455af",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cef87f7a48f76c33f55fc54f199a905a2fa0bb15/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
        "patch": "@@ -584,6 +584,8 @@ struct CoinSelectionParams\n     size_t change_spend_size = 0;\n     CFeeRate effective_fee = CFeeRate(0);\n     size_t tx_noinputs_size = 0;\n+    //! Indicate that we are subtracting the fee from outputs\n+    bool m_subtract_fee_outputs = false;\n \n     CoinSelectionParams(bool use_bnb, size_t change_output_size, size_t change_spend_size, CFeeRate effective_fee, size_t tx_noinputs_size) : use_bnb(use_bnb), change_output_size(change_output_size), change_spend_size(change_spend_size), effective_fee(effective_fee), tx_noinputs_size(tx_noinputs_size) {}\n     CoinSelectionParams() {}"
      }
    ]
  },
  {
    "sha": "8aac85d71e218783bc7ce06e5bf8bc660e24079d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YWFjODVkNzFlMjE4NzgzYmM3Y2UwNmU1YmY4YmM2NjBlMjQwNzlk",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T19:33:38Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T19:35:10Z"
      },
      "message": "Merge #17371: Refactor: Require scriptPubKey to get wallet SigningProvider\n\nd0dab897afaac0a18aa47d3ce673a4a43a69178a Refactor: Require scriptPubKey to get wallet SigningProvider (Andrew Chow)\n4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da Accumulate result UniValue in SignTransaction (Andrew Chow)\n\nPull request description:\n\n  Easier to review ignoring whitespace:\n\n      git log -p -n1 -w\n\n  This commit does not change behavior. It passes new CScript arguments to\n  signing functions, but the arguments aren't currently used.\n\n  Split from #17261\n\nACKs for top commit:\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17371/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a\n  ryanofsky:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a. Thanks for the SignTransaction update. No other changes since last review\n  Sjors:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a\n  promag:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a.\n  meshcollider:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a\n\nTree-SHA512: c3f52df20fd9d6b3b5aa65562cf5f7dce7b7f44c148b0f988f8b578fce2a28e9b7bf010f5f04bb5bf60f5272b2899f1dbbfb8aee81579c21c9cba559d1d2bb70",
      "tree": {
        "sha": "92a38a0e567e4021bf52d495804de8b711d87d31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/92a38a0e567e4021bf52d495804de8b711d87d31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8aac85d71e218783bc7ce06e5bf8bc660e24079d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YOG4ACgkQ0wARbhyH\nWj21kA/7BsAK3Jvk+E7cDL11hm9HwRfnKRPuoXu3v3h5/7OD3moUkDwtRyhd6jRx\neiHDiRifc0Ofut7bl0ibEkNC/6C651DifCQdEItU2/XQr6leUj0+gh+S5LEUjqzv\nxbSWoNgcWljy4JRpvi6l+zzzd3FpoIhL3sH1zrMrkFHJHWmjuz3kWOSYV9tVHTiP\na0ThKpterU2WLN2m3VsPRyPiAkPb5EcjbzytRLtwOx//iIAvBDNwbSi9lmyIlqwd\n91RMpqkTjVE/s3qG5bum/3uLmp55CeRbLE30Rwv5oQL38sftEBYda2p5G9WR5FZX\n88h03IU0H/pXSwkWgRIJJJdkwJjsiangtiUsAb4tTYRU75ePs04pkMex1qUsMTH4\n/fwcLiY4wyU6qD2mkKuVxeAaj11JDv1gbjnkgIZjdga4eQ2wUixfgF6ll7A5O5Wz\ndA5MiU9wLpnJ37YRGX7Kr+vn8OLrFvwaEe7UxbTXRYOtH6uCxBbz3NeLKuW2R/OI\nwKZY/E2bNELNUmWQ3BKLKJCjJ66br5D6MmsddP7xpG94IIGiO/HUstPYOSkms7+I\nQ3vpZ1huncCAQHQO17wiMhnYTF+/XrMOUjO5dF/ABBBqkZ4uk5tQ2MqRD0t/S8NL\n7PtEZT2SyEijgfhe9eHTYYBDgxvX1O00tqipuz81Eur2KVkrRuU=\n=20oZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 92a38a0e567e4021bf52d495804de8b711d87d31\nparent cef87f7a48f76c33f55fc54f199a905a2fa0bb15\nparent d0dab897afaac0a18aa47d3ce673a4a43a69178a\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574451218 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574451310 +1300\n\nMerge #17371: Refactor: Require scriptPubKey to get wallet SigningProvider\n\nd0dab897afaac0a18aa47d3ce673a4a43a69178a Refactor: Require scriptPubKey to get wallet SigningProvider (Andrew Chow)\n4b0c718f8f48c678cbe4575e9a9cf9e62a30f0da Accumulate result UniValue in SignTransaction (Andrew Chow)\n\nPull request description:\n\n  Easier to review ignoring whitespace:\n\n      git log -p -n1 -w\n\n  This commit does not change behavior. It passes new CScript arguments to\n  signing functions, but the arguments aren't currently used.\n\n  Split from #17261\n\nACKs for top commit:\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17371/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a\n  ryanofsky:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a. Thanks for the SignTransaction update. No other changes since last review\n  Sjors:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a\n  promag:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a.\n  meshcollider:\n    Code review ACK d0dab897afaac0a18aa47d3ce673a4a43a69178a\n\nTree-SHA512: c3f52df20fd9d6b3b5aa65562cf5f7dce7b7f44c148b0f988f8b578fce2a28e9b7bf010f5f04bb5bf60f5272b2899f1dbbfb8aee81579c21c9cba559d1d2bb70\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aac85d71e218783bc7ce06e5bf8bc660e24079d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8aac85d71e218783bc7ce06e5bf8bc660e24079d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aac85d71e218783bc7ce06e5bf8bc660e24079d/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cef87f7a48f76c33f55fc54f199a905a2fa0bb15",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cef87f7a48f76c33f55fc54f199a905a2fa0bb15"
      },
      {
        "sha": "d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0dab897afaac0a18aa47d3ce673a4a43a69178a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0dab897afaac0a18aa47d3ce673a4a43a69178a"
      }
    ],
    "stats": {
      "total": 194,
      "additions": 137,
      "deletions": 57
    },
    "files": [
      {
        "sha": "079df17431c895aec97382503308a48a1cfbb4f9",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -116,8 +116,22 @@ class WalletImpl : public Wallet\n         std::string error;\n         return m_wallet->GetNewDestination(type, label, dest, error);\n     }\n-    bool getPubKey(const CKeyID& address, CPubKey& pub_key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetPubKey(address, pub_key); }\n-    bool getPrivKey(const CKeyID& address, CKey& key) override { return m_wallet->GetLegacyScriptPubKeyMan()->GetKey(address, key); }\n+    bool getPubKey(const CScript& script, const CKeyID& address, CPubKey& pub_key) override\n+    {\n+        const SigningProvider* provider = m_wallet->GetSigningProvider(script);\n+        if (provider) {\n+            return provider->GetPubKey(address, pub_key);\n+        }\n+        return false;\n+    }\n+    bool getPrivKey(const CScript& script, const CKeyID& address, CKey& key) override\n+    {\n+        const SigningProvider* provider = m_wallet->GetSigningProvider(script);\n+        if (provider) {\n+            return provider->GetKey(address, key);\n+        }\n+        return false;\n+    }\n     bool isSpendable(const CTxDestination& dest) override { return m_wallet->IsMine(dest) & ISMINE_SPENDABLE; }\n     bool haveWatchOnly() override\n     {"
      },
      {
        "sha": "b7cf9f2111b7acbf03165ddee27b759cda91693e",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -81,10 +81,10 @@ class Wallet\n     virtual bool getNewDestination(const OutputType type, const std::string label, CTxDestination& dest) = 0;\n \n     //! Get public key.\n-    virtual bool getPubKey(const CKeyID& address, CPubKey& pub_key) = 0;\n+    virtual bool getPubKey(const CScript& script, const CKeyID& address, CPubKey& pub_key) = 0;\n \n     //! Get private key.\n-    virtual bool getPrivKey(const CKeyID& address, CKey& key) = 0;\n+    virtual bool getPrivKey(const CScript& script, const CKeyID& address, CKey& key) = 0;\n \n     //! Return whether wallet has private key.\n     virtual bool isSpendable(const CTxDestination& dest) = 0;"
      },
      {
        "sha": "3302dde4ed1431c5997ae60e16dc2b9aa0fa1fa5",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -468,7 +468,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             CPubKey pubkey;\n             PKHash *pkhash = boost::get<PKHash>(&address);\n-            if (pkhash && model->wallet().getPubKey(CKeyID(*pkhash), pubkey))\n+            if (pkhash && model->wallet().getPubKey(out.txout.scriptPubKey, CKeyID(*pkhash), pubkey))\n             {\n                 nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n             }"
      },
      {
        "sha": "9d250bcb8334d3e4cf476a469eabe55f159369cf",
        "filename": "src/qt/signverifymessagedialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/qt/signverifymessagedialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/qt/signverifymessagedialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/signverifymessagedialog.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -136,7 +136,7 @@ void SignVerifyMessageDialog::on_signMessageButton_SM_clicked()\n     }\n \n     CKey key;\n-    if (!model->wallet().getPrivKey(CKeyID(*pkhash), key))\n+    if (!model->wallet().getPrivKey(GetScriptForDestination(destination), CKeyID(*pkhash), key))\n     {\n         ui->statusLabel_SM->setStyleSheet(\"QLabel { color: red; }\");\n         ui->statusLabel_SM->setText(tr(\"Private key for the entered address is not available.\"));"
      },
      {
        "sha": "6f24caee21adf0ab7b58ee5dc564c65cb4a28d8c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -763,7 +763,9 @@ static UniValue signrawtransactionwithkey(const JSONRPCRequest& request)\n     // Parse the prevtxs array\n     ParsePrevouts(request.params[2], &keystore, coins);\n \n-    return SignTransaction(mtx, &keystore, coins, request.params[3]);\n+    UniValue result(UniValue::VOBJ);\n+    SignTransaction(mtx, &keystore, coins, request.params[3], result);\n+    return result;\n }\n \n static UniValue sendrawtransaction(const JSONRPCRequest& request)"
      },
      {
        "sha": "40334883c5970c01ccd9cfc6b7973c3399305220",
        "filename": "src/rpc/rawtransaction_util.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction_util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction_util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -268,7 +268,7 @@ void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keyst\n     }\n }\n \n-UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType)\n+void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result)\n {\n     int nHashType = ParseSighashString(hashType);\n \n@@ -319,12 +319,12 @@ UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keysto\n     }\n     bool fComplete = vErrors.empty();\n \n-    UniValue result(UniValue::VOBJ);\n     result.pushKV(\"hex\", EncodeHexTx(CTransaction(mtx)));\n     result.pushKV(\"complete\", fComplete);\n     if (!vErrors.empty()) {\n+        if (result.exists(\"errors\")) {\n+            vErrors.push_backV(result[\"errors\"].getValues());\n+        }\n         result.pushKV(\"errors\", vErrors);\n     }\n-\n-    return result;\n }"
      },
      {
        "sha": "0b7712b83ccce6912b6843e1b2de49ff428d2abd",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -21,9 +21,9 @@ class SigningProvider;\n  * @param  keystore      Temporary keystore containing signing keys\n  * @param  coins         Map of unspent outputs\n  * @param  hashType      The signature hash type\n- * @returns JSON object with details of signed transaction\n+ * @param result         JSON object where signed transaction results accumulate\n  */\n-UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType);\n+void SignTransaction(CMutableTransaction& mtx, const SigningProvider* keystore, const std::map<COutPoint, Coin>& coins, const UniValue& hashType, UniValue& result);\n \n /**\n   * Parse a prevtxs UniValue array and get the map of coins from it"
      },
      {
        "sha": "96c1ad8d3f818891de090ae51bc23be21932d32d",
        "filename": "src/wallet/psbtwallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 2,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/psbtwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/psbtwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/psbtwallet.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -39,12 +39,35 @@ TransactionError FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& ps\n             return TransactionError::SIGHASH_MISMATCH;\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(pwallet->GetSigningProvider(), !sign, !bip32derivs), psbtx, i, sighash_type);\n+        // Get the scriptPubKey to know which SigningProvider to use\n+        CScript script;\n+        if (!input.witness_utxo.IsNull()) {\n+            script = input.witness_utxo.scriptPubKey;\n+        } else if (input.non_witness_utxo) {\n+            script = input.non_witness_utxo->vout[txin.prevout.n].scriptPubKey;\n+        } else {\n+            // There's no UTXO so we can just skip this now\n+            complete = false;\n+            continue;\n+        }\n+        SignatureData sigdata;\n+        input.FillSignatureData(sigdata);\n+        const SigningProvider* provider = pwallet->GetSigningProvider(script, sigdata);\n+        if (!provider) {\n+            complete = false;\n+            continue;\n+        }\n+\n+        complete &= SignPSBTInput(HidingSigningProvider(provider, !sign, !bip32derivs), psbtx, i, sighash_type);\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n     for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n-        UpdatePSBTOutput(HidingSigningProvider(pwallet->GetSigningProvider(), true, !bip32derivs), psbtx, i);\n+        const CTxOut& out = psbtx.tx->vout.at(i);\n+        const SigningProvider* provider = pwallet->GetSigningProvider(out.scriptPubKey);\n+        if (provider) {\n+            UpdatePSBTOutput(HidingSigningProvider(provider, true, !bip32derivs), psbtx, i);\n+        }\n     }\n \n     return TransactionError::OK;"
      },
      {
        "sha": "3563b05c7164c20220d587454fa2acea9b8c44f2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 34,
        "changes": 94,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -560,7 +560,11 @@ static UniValue signmessage(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n     }\n \n-    const SigningProvider* provider = pwallet->GetSigningProvider();\n+    CScript script_pub_key = GetScriptForDestination(*pkhash);\n+    const SigningProvider* provider = pwallet->GetSigningProvider(script_pub_key);\n+    if (!provider) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Private key not available\");\n+    }\n \n     CKey key;\n     CKeyID keyID(*pkhash);\n@@ -2940,34 +2944,36 @@ static UniValue listunspent(const JSONRPCRequest& request)\n                 entry.pushKV(\"label\", i->second.name);\n             }\n \n-            const SigningProvider* provider = pwallet->GetSigningProvider();\n-            if (scriptPubKey.IsPayToScriptHash()) {\n-                const CScriptID& hash = CScriptID(boost::get<ScriptHash>(address));\n-                CScript redeemScript;\n-                if (provider->GetCScript(hash, redeemScript)) {\n-                    entry.pushKV(\"redeemScript\", HexStr(redeemScript.begin(), redeemScript.end()));\n-                    // Now check if the redeemScript is actually a P2WSH script\n-                    CTxDestination witness_destination;\n-                    if (redeemScript.IsPayToWitnessScriptHash()) {\n-                        bool extracted = ExtractDestination(redeemScript, witness_destination);\n-                        CHECK_NONFATAL(extracted);\n-                        // Also return the witness script\n-                        const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(witness_destination);\n-                        CScriptID id;\n-                        CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n-                        CScript witnessScript;\n-                        if (provider->GetCScript(id, witnessScript)) {\n-                            entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+            const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n+            if (provider) {\n+                if (scriptPubKey.IsPayToScriptHash()) {\n+                    const CScriptID& hash = CScriptID(boost::get<ScriptHash>(address));\n+                    CScript redeemScript;\n+                    if (provider->GetCScript(hash, redeemScript)) {\n+                        entry.pushKV(\"redeemScript\", HexStr(redeemScript.begin(), redeemScript.end()));\n+                        // Now check if the redeemScript is actually a P2WSH script\n+                        CTxDestination witness_destination;\n+                        if (redeemScript.IsPayToWitnessScriptHash()) {\n+                            bool extracted = ExtractDestination(redeemScript, witness_destination);\n+                            CHECK_NONFATAL(extracted);\n+                            // Also return the witness script\n+                            const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(witness_destination);\n+                            CScriptID id;\n+                            CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n+                            CScript witnessScript;\n+                            if (provider->GetCScript(id, witnessScript)) {\n+                                entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                            }\n                         }\n                     }\n-                }\n-            } else if (scriptPubKey.IsPayToWitnessScriptHash()) {\n-                const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(address);\n-                CScriptID id;\n-                CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n-                CScript witnessScript;\n-                if (provider->GetCScript(id, witnessScript)) {\n-                    entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                } else if (scriptPubKey.IsPayToWitnessScriptHash()) {\n+                    const WitnessV0ScriptHash& whash = boost::get<WitnessV0ScriptHash>(address);\n+                    CScriptID id;\n+                    CRIPEMD160().Write(whash.begin(), whash.size()).Finalize(id.begin());\n+                    CScript witnessScript;\n+                    if (provider->GetCScript(id, witnessScript)) {\n+                        entry.pushKV(\"witnessScript\", HexStr(witnessScript.begin(), witnessScript.end()));\n+                    }\n                 }\n             }\n         }\n@@ -2978,8 +2984,11 @@ static UniValue listunspent(const JSONRPCRequest& request)\n         entry.pushKV(\"spendable\", out.fSpendable);\n         entry.pushKV(\"solvable\", out.fSolvable);\n         if (out.fSolvable) {\n-            auto descriptor = InferDescriptor(scriptPubKey, *pwallet->GetLegacyScriptPubKeyMan());\n-            entry.pushKV(\"desc\", descriptor->ToString());\n+            const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n+            if (provider) {\n+                auto descriptor = InferDescriptor(scriptPubKey, *provider);\n+                entry.pushKV(\"desc\", descriptor->ToString());\n+            }\n         }\n         if (avoid_reuse) entry.pushKV(\"reused\", reused);\n         entry.pushKV(\"safe\", out.fSafe);\n@@ -3288,7 +3297,23 @@ UniValue signrawtransactionwithwallet(const JSONRPCRequest& request)\n     // Parse the prevtxs array\n     ParsePrevouts(request.params[1], nullptr, coins);\n \n-    return SignTransaction(mtx, &*pwallet->GetLegacyScriptPubKeyMan(), coins, request.params[2]);\n+    std::set<const SigningProvider*> providers;\n+    for (const std::pair<COutPoint, Coin> coin_pair : coins) {\n+        const SigningProvider* provider = pwallet->GetSigningProvider(coin_pair.second.out.scriptPubKey);\n+        if (provider) {\n+            providers.insert(std::move(provider));\n+        }\n+    }\n+    if (providers.size() == 0) {\n+        // When there are no available providers, use DUMMY_SIGNING_PROVIDER so we can check if the tx is complete\n+        providers.insert(&DUMMY_SIGNING_PROVIDER);\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    for (const SigningProvider* provider : providers) {\n+        SignTransaction(mtx, provider, coins, request.params[2], result);\n+    }\n+     return result;\n }\n \n static UniValue bumpfee(const JSONRPCRequest& request)\n@@ -3653,9 +3678,10 @@ static UniValue DescribeWalletAddress(CWallet* pwallet, const CTxDestination& de\n {\n     UniValue ret(UniValue::VOBJ);\n     UniValue detail = DescribeAddress(dest);\n+    CScript script = GetScriptForDestination(dest);\n     const SigningProvider* provider = nullptr;\n     if (pwallet) {\n-        provider = pwallet->GetSigningProvider();\n+        provider = pwallet->GetSigningProvider(script);\n     }\n     ret.pushKVs(detail);\n     ret.pushKVs(boost::apply_visitor(DescribeWalletAddressVisitor(provider), dest));\n@@ -3747,11 +3773,11 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     CScript scriptPubKey = GetScriptForDestination(dest);\n     ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n-    const SigningProvider* provider = pwallet->GetSigningProvider();\n+    const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n \n     isminetype mine = pwallet->IsMine(dest);\n     ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n-    bool solvable = IsSolvable(*provider, scriptPubKey);\n+    bool solvable = provider && IsSolvable(*provider, scriptPubKey);\n     ret.pushKV(\"solvable\", solvable);\n     if (solvable) {\n        ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *provider)->ToString());\n@@ -3764,7 +3790,7 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     }\n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n \n-    ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan();\n+    ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan(scriptPubKey);\n     if (spk_man) {\n         if (const CKeyMetadata* meta = spk_man->GetMetadata(dest)) {\n             ret.pushKV(\"timestamp\", meta->nCreateTime);"
      },
      {
        "sha": "3e368985e044b41e0bbd3b93714854ecd72df9a4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 6,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -1363,7 +1363,11 @@ bool CWallet::DummySignInput(CTxIn &tx_in, const CTxOut &txout, bool use_max_sig\n     const CScript& scriptPubKey = txout.scriptPubKey;\n     SignatureData sigdata;\n \n-    const SigningProvider* provider = GetSigningProvider();\n+    const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n+    if (!provider) {\n+        // We don't know about this scriptpbuKey;\n+        return false;\n+    }\n \n     if (!ProduceSignature(*provider, use_max_sig ? DUMMY_MAXIMUM_SIGNATURE_CREATOR : DUMMY_SIGNATURE_CREATOR, scriptPubKey, sigdata)) {\n         return false;\n@@ -2125,7 +2129,7 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n                 continue;\n             }\n \n-            const SigningProvider* provider = GetSigningProvider();\n+            const SigningProvider* provider = GetSigningProvider(wtx.tx->vout[i].scriptPubKey);\n \n             bool solvable = provider ? IsSolvable(*provider, wtx.tx->vout[i].scriptPubKey) : false;\n             bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n@@ -2378,8 +2382,9 @@ bool CWallet::SignTransaction(CMutableTransaction& tx)\n         const CAmount& amount = mi->second.tx->vout[input.prevout.n].nValue;\n         SignatureData sigdata;\n \n-        const SigningProvider* provider = GetSigningProvider();\n+        const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n         if (!provider) {\n+            // We don't know about this scriptpbuKey;\n             return false;\n         }\n \n@@ -2846,7 +2851,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 const CScript& scriptPubKey = coin.txout.scriptPubKey;\n                 SignatureData sigdata;\n \n-                const SigningProvider* provider = GetSigningProvider();\n+                const SigningProvider* provider = GetSigningProvider(scriptPubKey);\n                 if (!provider || !ProduceSignature(*provider, MutableTransactionSignatureCreator(&txNew, nIn, coin.txout.nValue, SIGHASH_ALL), scriptPubKey, sigdata))\n                 {\n                     strFailReason = _(\"Signing transaction failed\").translated;\n@@ -4043,12 +4048,17 @@ bool CWallet::Lock()\n     return true;\n }\n \n-ScriptPubKeyMan* CWallet::GetScriptPubKeyMan() const\n+ScriptPubKeyMan* CWallet::GetScriptPubKeyMan(const CScript& script) const\n+{\n+    return m_spk_man.get();\n+}\n+\n+const SigningProvider* CWallet::GetSigningProvider(const CScript& script) const\n {\n     return m_spk_man.get();\n }\n \n-const SigningProvider* CWallet::GetSigningProvider() const\n+const SigningProvider* CWallet::GetSigningProvider(const CScript& script, SignatureData& sigdata) const\n {\n     return m_spk_man.get();\n }"
      },
      {
        "sha": "3349091835189d11c25e537f50a4e9d207767dcb",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 7,
        "deletions": 2,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8aac85d71e218783bc7ce06e5bf8bc660e24079d/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "patch": "@@ -1130,8 +1130,13 @@ class CWallet final : public WalletStorage, private interfaces::Chain::Notificat\n         LogPrintf((\"%s \" + fmt).c_str(), GetDisplayName(), parameters...);\n     };\n \n-    ScriptPubKeyMan* GetScriptPubKeyMan() const;\n-    const SigningProvider* GetSigningProvider() const;\n+    //! Get the ScriptPubKeyMan for a script\n+    ScriptPubKeyMan* GetScriptPubKeyMan(const CScript& script) const;\n+\n+    //! Get the SigningProvider for a script\n+    const SigningProvider* GetSigningProvider(const CScript& script) const;\n+    const SigningProvider* GetSigningProvider(const CScript& script, SignatureData& sigdata) const;\n+\n     LegacyScriptPubKeyMan* GetLegacyScriptPubKeyMan() const;\n \n     // Temporary LegacyScriptPubKeyMan accessors and aliases."
      }
    ]
  },
  {
    "sha": "0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYWE3MjA2MWU1ZDY1MTM3MzQ0OWJkZmE4ZDk0NjNkY2ZlN2IxYWQ0",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T19:43:54Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T20:22:02Z"
      },
      "message": "Merge #16944: gui: create PSBT with watch-only wallet\n\nc6dd565c8820aa8a98b190621e10c6e2821a9ecc [gui] watch-only wallet: copy PSBT to clipboard (Sjors Provoost)\n39465d545d521e66bb3accfa788aa94bffaf47eb [wallet] add fillPSBT to interface (Sjors Provoost)\n848f88920853724511387ca0b7ef652fa14ced71 [gui] send: include watch-only (Sjors Provoost)\n40537f090907f81ba885edb7dff1558382976912 [wallet] ListCoins: include watch-only for wallets without private keys (Sjors Provoost)\n\nPull request description:\n\n  For wallets with `WALLET_FLAG_DISABLE_PRIVATE_KEYS` this makes the watch-only balance available on the send screen (including coin selection). Instead of sending a transaction it generates a PSBT.\n\n  The user can take this PSBT and process it with [HWI](https://github.com/bitcoin-core/HWI) or put it an SD card for hardware wallets that support that.\n\n  The PSBT is copied to the clipboard. This was the easiest approach; we can add a dialog later to display it, as well as an option to save to disk.\n\nACKs for top commit:\n  instagibbs:\n    test and code review ACK https://github.com/bitcoin/bitcoin/pull/16944/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc\n  meshcollider:\n    re-ACK c6dd565c8820aa8a98b190621e10c6e2821a9ecc\n\nTree-SHA512: ebc3da0737e33b255ed926191b84569aedb6097d14868662bd5dce726ce3048e86e9a31eba987b10dffe1482b35c21ae1cd595c2caa4634bc4cf78a826a83852",
      "tree": {
        "sha": "3f952f22302eb76eaafafc4acfef0341ca61d807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f952f22302eb76eaafafc4acfef0341ca61d807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YQ2oACgkQ0wARbhyH\nWj2tvw//cMson0ATx16zxD8o8GKQMkaGy+yaD3IhF0e05TBDz8EVUtFnE9f6waDw\nU2QpZwRxsCfhzrvc5lwjoXoyPB9zk+l/UPCFOcyFmyOclQ5zso7D0n3sIagoMufs\nidFAgUo9JSYFMD46EMZ1ZPuBu+euFGPz1R0u+7DRtLYAxQcyQuj4r065oUXj/4I7\nptlgC3EzAvNS3ngeXHZnmLLzVZLNVpBLkHd2M532FsmzDfx2g3RKsVQarfcU2FAi\nQDzHE3bmN07JAlxVRVrA2FOUuVWIV4SetSAGHhtC/iFAvALellwUtxBbgfDcjTP8\nyJkAHomVaFK3aHxc5e1f/zPDNcI5476wY8St6LK6kfVOGpwL4RQ9JRx2G/wRE5SC\nJ38z/DglqQfuMS6DXtJLpyDf2lJYPtueACZOY6n+aKq0xdQFqQdvwU62jT2Z6W1Z\n9vm4dDiIk4IIFej4LaVyJfNtLwWl0NtR4g5P/iAZBaRVQw6/NP686mE3l+X26g5r\nx/WM11TlBAIaZlRimRmB6xqXHgHReRlcl9sntfmeIVkXr6pb1l3LqAYPGn+j+Oxz\nXWqe3AkDXiqJgRc3/8o/Nr0klGvrl56CQPKem0AB3Kv9MlOrbch0G9c0fq/G0rn3\nnUbe7gRHdSrBuMMztpWilA6mm0zcVErWLR5H41H0glIN7c8qVTo=\n=EsNN\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f952f22302eb76eaafafc4acfef0341ca61d807\nparent 8aac85d71e218783bc7ce06e5bf8bc660e24079d\nparent c6dd565c8820aa8a98b190621e10c6e2821a9ecc\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574451834 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574454122 +1300\n\nMerge #16944: gui: create PSBT with watch-only wallet\n\nc6dd565c8820aa8a98b190621e10c6e2821a9ecc [gui] watch-only wallet: copy PSBT to clipboard (Sjors Provoost)\n39465d545d521e66bb3accfa788aa94bffaf47eb [wallet] add fillPSBT to interface (Sjors Provoost)\n848f88920853724511387ca0b7ef652fa14ced71 [gui] send: include watch-only (Sjors Provoost)\n40537f090907f81ba885edb7dff1558382976912 [wallet] ListCoins: include watch-only for wallets without private keys (Sjors Provoost)\n\nPull request description:\n\n  For wallets with `WALLET_FLAG_DISABLE_PRIVATE_KEYS` this makes the watch-only balance available on the send screen (including coin selection). Instead of sending a transaction it generates a PSBT.\n\n  The user can take this PSBT and process it with [HWI](https://github.com/bitcoin-core/HWI) or put it an SD card for hardware wallets that support that.\n\n  The PSBT is copied to the clipboard. This was the easiest approach; we can add a dialog later to display it, as well as an option to save to disk.\n\nACKs for top commit:\n  instagibbs:\n    test and code review ACK https://github.com/bitcoin/bitcoin/pull/16944/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc\n  meshcollider:\n    re-ACK c6dd565c8820aa8a98b190621e10c6e2821a9ecc\n\nTree-SHA512: ebc3da0737e33b255ed926191b84569aedb6097d14868662bd5dce726ce3048e86e9a31eba987b10dffe1482b35c21ae1cd595c2caa4634bc4cf78a826a83852\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8aac85d71e218783bc7ce06e5bf8bc660e24079d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8aac85d71e218783bc7ce06e5bf8bc660e24079d"
      },
      {
        "sha": "c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c6dd565c8820aa8a98b190621e10c6e2821a9ecc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c6dd565c8820aa8a98b190621e10c6e2821a9ecc"
      }
    ],
    "stats": {
      "total": 108,
      "additions": 85,
      "deletions": 23
    },
    "files": [
      {
        "sha": "94c6e8c7b768940e2424702ed9f8fabfb30655fe",
        "filename": "src/interfaces/wallet.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/interfaces/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/interfaces/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.cpp?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -18,8 +18,9 @@\n #include <wallet/feebumper.h>\n #include <wallet/fees.h>\n #include <wallet/ismine.h>\n-#include <wallet/rpcwallet.h>\n #include <wallet/load.h>\n+#include <wallet/psbtwallet.h>\n+#include <wallet/rpcwallet.h>\n #include <wallet/wallet.h>\n \n #include <memory>\n@@ -357,6 +358,14 @@ class WalletImpl : public Wallet\n         }\n         return {};\n     }\n+    TransactionError fillPSBT(PartiallySignedTransaction& psbtx,\n+        bool& complete,\n+        int sighash_type = 1 /* SIGHASH_ALL */,\n+        bool sign = true,\n+        bool bip32derivs = false) override\n+    {\n+        return FillPSBT(m_wallet.get(), psbtx, complete, sighash_type, sign, bip32derivs);\n+    }\n     WalletBalances getBalances() override\n     {\n         const auto bal = m_wallet->GetBalance();"
      },
      {
        "sha": "8d2b8a2eca9d8a1847753ec2633a8308cc5eb979",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -14,6 +14,7 @@\n #include <functional>\n #include <map>\n #include <memory>\n+#include <psbt.h>\n #include <stdint.h>\n #include <string>\n #include <tuple>\n@@ -194,6 +195,13 @@ class Wallet\n         bool& in_mempool,\n         int& num_blocks) = 0;\n \n+    //! Fill PSBT.\n+    virtual TransactionError fillPSBT(PartiallySignedTransaction& psbtx,\n+        bool& complete,\n+        int sighash_type = 1 /* SIGHASH_ALL */,\n+        bool sign = true,\n+        bool bip32derivs = false) = 0;\n+\n     //! Get balances.\n     virtual WalletBalances getBalances() = 0;\n "
      },
      {
        "sha": "c3d00fa38e7b202b0492ebbfe87133ff1538f1b9",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 58,
        "deletions": 18,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -21,11 +21,12 @@\n #include <chainparams.h>\n #include <interfaces/node.h>\n #include <key_io.h>\n-#include <wallet/coincontrol.h>\n-#include <ui_interface.h>\n-#include <txmempool.h>\n #include <policy/fees.h>\n+#include <txmempool.h>\n+#include <ui_interface.h>\n+#include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n+#include <wallet/psbtwallet.h>\n \n #include <QFontMetrics>\n #include <QScrollBar>\n@@ -186,6 +187,11 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         // set default rbf checkbox state\n         ui->optInRBF->setCheckState(Qt::Checked);\n \n+        if (model->privateKeysDisabled()) {\n+            ui->sendButton->setText(tr(\"Cr&eate Unsigned\"));\n+            ui->sendButton->setToolTip(tr(\"Creates a Partially Signed Bitcoin Transaction (PSBT) for use with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+        }\n+\n         // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n         QSettings settings;\n         if (settings.value(\"nSmartFeeSliderPosition\").toInt() != 0) {\n@@ -305,9 +311,19 @@ void SendCoinsDialog::on_sendButton_clicked()\n         formatted.append(recipientElement);\n     }\n \n-    QString questionString = tr(\"Are you sure you want to send?\");\n+    QString questionString;\n+    if (model->privateKeysDisabled()) {\n+        questionString.append(tr(\"Do you want to draft this transaction?\"));\n+    } else {\n+        questionString.append(tr(\"Are you sure you want to send?\"));\n+    }\n+\n     questionString.append(\"<br /><span style='font-size:10pt;'>\");\n-    questionString.append(tr(\"Please, review your transaction.\"));\n+    if (model->privateKeysDisabled()) {\n+        questionString.append(tr(\"Please, review your transaction proposal. This will produce a Partially Signed Bitcoin Transaction (PSBT) which you can copy and then sign with e.g. an offline %1 wallet, or a PSBT-compatible hardware wallet.\").arg(PACKAGE_NAME));\n+    } else {\n+        questionString.append(tr(\"Please, review your transaction.\"));\n+    }\n     questionString.append(\"</span>%1\");\n \n     if(txFee > 0)\n@@ -358,8 +374,9 @@ void SendCoinsDialog::on_sendButton_clicked()\n     } else {\n         questionString = questionString.arg(\"<br /><br />\" + formatted.at(0));\n     }\n-\n-    SendConfirmationDialog confirmationDialog(tr(\"Confirm send coins\"), questionString, informative_text, detailed_text, SEND_CONFIRM_DELAY, this);\n+    const QString confirmation = model->privateKeysDisabled() ? tr(\"Confirm transaction proposal\") : tr(\"Confirm send coins\");\n+    const QString confirmButtonText = model->privateKeysDisabled() ? tr(\"Copy PSBT to clipboard\") : tr(\"Send\");\n+    SendConfirmationDialog confirmationDialog(confirmation, questionString, informative_text, detailed_text, SEND_CONFIRM_DELAY, confirmButtonText, this);\n     confirmationDialog.exec();\n     QMessageBox::StandardButton retval = static_cast<QMessageBox::StandardButton>(confirmationDialog.result());\n \n@@ -369,17 +386,35 @@ void SendCoinsDialog::on_sendButton_clicked()\n         return;\n     }\n \n-    // now send the prepared transaction\n-    WalletModel::SendCoinsReturn sendStatus = model->sendCoins(currentTransaction);\n-    // process sendStatus and on error generate message shown to user\n-    processSendCoinsReturn(sendStatus);\n+    bool send_failure = false;\n+    if (model->privateKeysDisabled()) {\n+        CMutableTransaction mtx = CMutableTransaction{*(currentTransaction.getWtx())};\n+        PartiallySignedTransaction psbtx(mtx);\n+        bool complete = false;\n+        const TransactionError err = model->wallet().fillPSBT(psbtx, complete, SIGHASH_ALL, false /* sign */, true /* bip32derivs */);\n+        assert(!complete);\n+        assert(err == TransactionError::OK);\n+        // Serialize the PSBT\n+        CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n+        ssTx << psbtx;\n+        GUIUtil::setClipboard(EncodeBase64(ssTx.str()).c_str());\n+        Q_EMIT message(tr(\"PSBT copied\"), \"Copied to clipboard\", CClientUIInterface::MSG_INFORMATION);\n+    } else {\n+        // now send the prepared transaction\n+        WalletModel::SendCoinsReturn sendStatus = model->sendCoins(currentTransaction);\n+        // process sendStatus and on error generate message shown to user\n+        processSendCoinsReturn(sendStatus);\n \n-    if (sendStatus.status == WalletModel::OK)\n-    {\n+        if (sendStatus.status == WalletModel::OK) {\n+            Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n+        } else {\n+            send_failure = true;\n+        }\n+    }\n+    if (!send_failure) {\n         accept();\n         CoinControlDialog::coinControl()->UnSelectAll();\n         coinControlUpdateLabels();\n-        Q_EMIT coinsSent(currentTransaction.getWtx()->GetHash());\n     }\n     fNewRecipientAllowed = true;\n }\n@@ -611,6 +646,9 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n         coin_control = *CoinControlDialog::coinControl();\n     }\n \n+    // Include watch-only for wallets without private key\n+    coin_control.fAllowWatchOnly = model->privateKeysDisabled();\n+\n     // Calculate available amount to send.\n     CAmount amount = model->wallet().getAvailableBalance(coin_control);\n     for (int i = 0; i < ui->entries->count(); ++i) {\n@@ -663,6 +701,8 @@ void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n     // Either custom fee will be used or if not selected, the confirmation target from dropdown box\n     ctrl.m_confirm_target = getConfTargetForIndex(ui->confTargetSelector->currentIndex());\n     ctrl.m_signal_bip125_rbf = ui->optInRBF->isChecked();\n+    // Include watch-only for wallets without private key\n+    ctrl.fAllowWatchOnly = model->privateKeysDisabled();\n }\n \n void SendCoinsDialog::updateSmartFeeLabel()\n@@ -870,8 +910,8 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n-SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, QWidget* parent)\n-    : QMessageBox(parent), secDelay(_secDelay)\n+SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, QWidget* parent)\n+    : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText)\n {\n     setIcon(QMessageBox::Question);\n     setWindowTitle(title); // On macOS, the window title is ignored (as required by the macOS Guidelines).\n@@ -908,11 +948,11 @@ void SendConfirmationDialog::updateYesButton()\n     if(secDelay > 0)\n     {\n         yesButton->setEnabled(false);\n-        yesButton->setText(tr(\"Send\") + \" (\" + QString::number(secDelay) + \")\");\n+        yesButton->setText(confirmButtonText + \" (\" + QString::number(secDelay) + \")\");\n     }\n     else\n     {\n         yesButton->setEnabled(true);\n-        yesButton->setText(tr(\"Send\"));\n+        yesButton->setText(confirmButtonText);\n     }\n }"
      },
      {
        "sha": "ccd84946136909c4e702ecf692911afccbdf845f",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -108,7 +108,7 @@ class SendConfirmationDialog : public QMessageBox\n     Q_OBJECT\n \n public:\n-    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, QWidget* parent = nullptr);\n+    SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text = \"\", const QString& detailed_text = \"\", int secDelay = SEND_CONFIRM_DELAY, const QString& confirmText = \"Send\", QWidget* parent = nullptr);\n     int exec();\n \n private Q_SLOTS:\n@@ -119,6 +119,7 @@ private Q_SLOTS:\n     QAbstractButton *yesButton;\n     QTimer countDownTimer;\n     int secDelay;\n+    QString confirmButtonText;\n };\n \n #endif // BITCOIN_QT_SENDCOINSDIALOG_H"
      },
      {
        "sha": "fb92e29f21d8a68522040a5f07200a501852cb5d",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -183,7 +183,7 @@ WalletModel::SendCoinsReturn WalletModel::prepareTransaction(WalletModelTransact\n         std::string strFailReason;\n \n         auto& newTx = transaction.getWtx();\n-        newTx = m_wallet->createTransaction(vecSend, coinControl, true /* sign */, nChangePosRet, nFeeRequired, strFailReason);\n+        newTx = m_wallet->createTransaction(vecSend, coinControl, !privateKeysDisabled() /* sign */, nChangePosRet, nFeeRequired, strFailReason);\n         transaction.setTransactionFee(nFeeRequired);\n         if (fSubtractFeeFromAmount && newTx)\n             transaction.reassignAmounts(nChangePosRet);"
      },
      {
        "sha": "92139bbad8e544e2390e5d401cb2076bfe2ec6de",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "patch": "@@ -2164,20 +2164,24 @@ std::map<CTxDestination, std::vector<COutput>> CWallet::ListCoins(interfaces::Ch\n \n     for (const COutput& coin : availableCoins) {\n         CTxDestination address;\n-        if (coin.fSpendable &&\n+        if ((coin.fSpendable || (IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && coin.fSolvable)) &&\n             ExtractDestination(FindNonChangeParentOutput(*coin.tx->tx, coin.i).scriptPubKey, address)) {\n             result[address].emplace_back(std::move(coin));\n         }\n     }\n \n     std::vector<COutPoint> lockedCoins;\n     ListLockedCoins(lockedCoins);\n+    // Include watch-only for wallets without private keys\n+    const bool include_watch_only = IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS);\n+    const isminetype is_mine_filter = include_watch_only ? ISMINE_WATCH_ONLY : ISMINE_SPENDABLE;\n     for (const COutPoint& output : lockedCoins) {\n         auto it = mapWallet.find(output.hash);\n         if (it != mapWallet.end()) {\n             int depth = it->second.GetDepthInMainChain();\n             if (depth >= 0 && output.n < it->second.tx->vout.size() &&\n-                IsMine(it->second.tx->vout[output.n]) == ISMINE_SPENDABLE) {\n+                IsMine(it->second.tx->vout[output.n]) == is_mine_filter\n+            ) {\n                 CTxDestination address;\n                 if (ExtractDestination(FindNonChangeParentOutput(*it->second.tx, output.n).scriptPubKey, address)) {\n                     result[address].emplace_back("
      }
    ]
  },
  {
    "sha": "7127c310204787f1b981ef40a530fb22ccc7fc11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTI3YzMxMDIwNDc4N2YxYjk4MWVmNDBhNTMwZmIyMmNjYzdmYzEx",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T20:26:13Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T20:26:58Z"
      },
      "message": "Merge #17237: wallet: LearnRelatedScripts only if KeepDestination\n\n3958295bc8a3787b66b0269190218a3764088f79 wallet: LearnRelatedScripts only if KeepDestination (Jo\u00e3o Barbosa)\n55295fba4cbff36e9a8c3fed9c38e82ebe3c48b7 wallet: Lock address type in ReserveDestination (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  Only mutates the wallet if the reserved key is kept.\n\n  First commit is a refactor that makes the address type a class member.\n\n  The second commit moves `LearnRelatedScripts` from `GetReservedDestination` to `KeepDestination` to avoid an unnecessary call to `AddCScript` - which in turn prevents multiple entries of the same script in the wallet DB.\n\nACKs for top commit:\n  achow101:\n    Re-ACK 3958295bc8a3787b66b0269190218a3764088f79\n  Sjors:\n    ACK 3958295bc8a3787b66b0269190218a3764088f79\n  ryanofsky:\n    Code review ACK 3958295bc8a3787b66b0269190218a3764088f79. I like this change. The new behavior makes more sense, and the change makes the code clearer, since the current LearnRelatedScripts call is hard to understand and explain. (Personally, I'd like it if this PR were merged before #17373 or that PR was rebased on top of this one so it would be less confusing.)\n  meshcollider:\n    utACK 3958295bc8a3787b66b0269190218a3764088f79\n\nTree-SHA512: 49a5f4b022b28042ad37ea309b28378a3983cb904e234a25795b5a360356652e0f8e60f15e3e64d85094ea63af9be01812d90ccfc08ca4f1dd927fdd8566e33f",
      "tree": {
        "sha": "2d6d997209dc25750a0478299dcc47680c6fce09",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d6d997209dc25750a0478299dcc47680c6fce09"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7127c310204787f1b981ef40a530fb22ccc7fc11",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YRJIACgkQ0wARbhyH\nWj39iRAAkxETZjJ9ItUgUor9lwoIy3lstdBigLabYMhX7mLX9xaKYU0TR7b7KSCI\nJi5mQV+cTcnej22MPCL55BQIVY1BZ3o6HvLhasw6fu4vwAmtWZqPkuzNahhGyoRK\nVRgXLjnADmZHZpWrQ7UzCASeCewMKKF8LeaKM2v05F6Vi9HRjaDwjW64OXUxRnJm\nd1flyLxiQOOtuRiV/hOez25YmlMq3jzPyW47UNMKJrCY+1NL19x/3BejJUYRsLVD\nx0Gz8GsG1xNRr97aTsOOfdS4CrYlX5EngCh71kfkevcwYSlGjptwqMPU9OEdhB0t\nlTswwS9zBlRVX2fp1ZuYNetv1YXGY032uYu5pa9QveytkVABrf1tIoJ70QRwnREn\n3XYcnd4hkKVd1hrB5b6l14Xm4SPEVi8gXO0sKy3lKUvUHrTJq+xEzyH/g9lL2h5q\n8E/oSG/pFD7RF5G7C+O8liBNHlQmFMEpTriQc1gGr6XkfC4/VXZ2F/EGtC/YoDnN\nlMnY1wyagsvMa5+j/4raRh34OUvtSaxbAGjxXjJc8Dor/xIozmXAM71F9aZqxt1x\nnklSYyRJbquyTaykG7BSiN7yjWy+3oJNOTxFPXbMysMOytz8dggfFuLwjzSHS5kk\nLS+fOXCihDTSu8TrQMOcDdOkjkufRAxz18miUWBUX457Q8rcU6s=\n=IlMQ\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d6d997209dc25750a0478299dcc47680c6fce09\nparent 0aa72061e5d651373449bdfa8d9463dcfe7b1ad4\nparent 3958295bc8a3787b66b0269190218a3764088f79\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574454373 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574454418 +1300\n\nMerge #17237: wallet: LearnRelatedScripts only if KeepDestination\n\n3958295bc8a3787b66b0269190218a3764088f79 wallet: LearnRelatedScripts only if KeepDestination (Jo\u00e3o Barbosa)\n55295fba4cbff36e9a8c3fed9c38e82ebe3c48b7 wallet: Lock address type in ReserveDestination (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  Only mutates the wallet if the reserved key is kept.\n\n  First commit is a refactor that makes the address type a class member.\n\n  The second commit moves `LearnRelatedScripts` from `GetReservedDestination` to `KeepDestination` to avoid an unnecessary call to `AddCScript` - which in turn prevents multiple entries of the same script in the wallet DB.\n\nACKs for top commit:\n  achow101:\n    Re-ACK 3958295bc8a3787b66b0269190218a3764088f79\n  Sjors:\n    ACK 3958295bc8a3787b66b0269190218a3764088f79\n  ryanofsky:\n    Code review ACK 3958295bc8a3787b66b0269190218a3764088f79. I like this change. The new behavior makes more sense, and the change makes the code clearer, since the current LearnRelatedScripts call is hard to understand and explain. (Personally, I'd like it if this PR were merged before #17373 or that PR was rebased on top of this one so it would be less confusing.)\n  meshcollider:\n    utACK 3958295bc8a3787b66b0269190218a3764088f79\n\nTree-SHA512: 49a5f4b022b28042ad37ea309b28378a3983cb904e234a25795b5a360356652e0f8e60f15e3e64d85094ea63af9be01812d90ccfc08ca4f1dd927fdd8566e33f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7127c310204787f1b981ef40a530fb22ccc7fc11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7127c310204787f1b981ef40a530fb22ccc7fc11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7127c310204787f1b981ef40a530fb22ccc7fc11/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0aa72061e5d651373449bdfa8d9463dcfe7b1ad4"
      },
      {
        "sha": "3958295bc8a3787b66b0269190218a3764088f79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3958295bc8a3787b66b0269190218a3764088f79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3958295bc8a3787b66b0269190218a3764088f79"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 15,
      "deletions": 14
    },
    "files": [
      {
        "sha": "fcb7bfecb8f05696e24238b714cc5b3beaa39c47",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7127c310204787f1b981ef40a530fb22ccc7fc11/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7127c310204787f1b981ef40a530fb22ccc7fc11/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7127c310204787f1b981ef40a530fb22ccc7fc11",
        "patch": "@@ -2544,7 +2544,8 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                          int& nChangePosInOut, std::string& strFailReason, const CCoinControl& coin_control, bool sign)\n {\n     CAmount nValue = 0;\n-    ReserveDestination reservedest(this);\n+    const OutputType change_type = TransactionChangeType(coin_control.m_change_type ? *coin_control.m_change_type : m_default_change_type, vecSend);\n+    ReserveDestination reservedest(this, change_type);\n     int nChangePosRequest = nChangePosInOut;\n     unsigned int nSubtractFeeFromAmount = 0;\n     for (const auto& recipient : vecSend)\n@@ -2603,8 +2604,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                     return false;\n                 }\n                 CTxDestination dest;\n-                const OutputType change_type = TransactionChangeType(coin_control.m_change_type ? *coin_control.m_change_type : m_default_change_type, vecSend);\n-                bool ret = reservedest.GetReservedDestination(change_type, dest, true);\n+                bool ret = reservedest.GetReservedDestination(dest, true);\n                 if (!ret)\n                 {\n                     strFailReason = \"Keypool ran out, please call keypoolrefill first\";\n@@ -3128,8 +3128,8 @@ bool CWallet::GetNewChangeDestination(const OutputType type, CTxDestination& des\n \n     m_spk_man->TopUp();\n \n-    ReserveDestination reservedest(this);\n-    if (!reservedest.GetReservedDestination(type, dest, true)) {\n+    ReserveDestination reservedest(this, type);\n+    if (!reservedest.GetReservedDestination(dest, true)) {\n         error = \"Error: Keypool ran out, please call keypoolrefill first\";\n         return false;\n     }\n@@ -3295,7 +3295,7 @@ std::set<CTxDestination> CWallet::GetLabelAddresses(const std::string& label) co\n     return result;\n }\n \n-bool ReserveDestination::GetReservedDestination(const OutputType type, CTxDestination& dest, bool internal)\n+bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool internal)\n {\n     m_spk_man = pwallet->GetLegacyScriptPubKeyMan();\n     if (!m_spk_man) {\n@@ -3316,16 +3316,17 @@ bool ReserveDestination::GetReservedDestination(const OutputType type, CTxDestin\n         fInternal = keypool.fInternal;\n     }\n     assert(vchPubKey.IsValid());\n-    m_spk_man->LearnRelatedScripts(vchPubKey, type);\n     address = GetDestinationForKey(vchPubKey, type);\n     dest = address;\n     return true;\n }\n \n void ReserveDestination::KeepDestination()\n {\n-    if (nIndex != -1)\n+    if (nIndex != -1) {\n         m_spk_man->KeepDestination(nIndex);\n+        m_spk_man->LearnRelatedScripts(vchPubKey, type);\n+    }\n     nIndex = -1;\n     vchPubKey = CPubKey();\n     address = CNoDestination();"
      },
      {
        "sha": "fce49ec56c3dd3bd2112165b00c78fe71a055a13",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7127c310204787f1b981ef40a530fb22ccc7fc11/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7127c310204787f1b981ef40a530fb22ccc7fc11/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7127c310204787f1b981ef40a530fb22ccc7fc11",
        "patch": "@@ -140,8 +140,9 @@ class ReserveDestination\n {\n protected:\n     //! The wallet to reserve from\n-    CWallet* pwallet;\n+    CWallet* const pwallet;\n     LegacyScriptPubKeyMan* m_spk_man{nullptr};\n+    OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};\n     //! The public key for the address\n@@ -153,10 +154,9 @@ class ReserveDestination\n \n public:\n     //! Construct a ReserveDestination object. This does NOT reserve an address yet\n-    explicit ReserveDestination(CWallet* pwalletIn)\n-    {\n-        pwallet = pwalletIn;\n-    }\n+    explicit ReserveDestination(CWallet* pwallet, OutputType type)\n+      : pwallet(pwallet)\n+      , type(type) { }\n \n     ReserveDestination(const ReserveDestination&) = delete;\n     ReserveDestination& operator=(const ReserveDestination&) = delete;\n@@ -168,7 +168,7 @@ class ReserveDestination\n     }\n \n     //! Reserve an address\n-    bool GetReservedDestination(const OutputType type, CTxDestination& pubkey, bool internal);\n+    bool GetReservedDestination(CTxDestination& pubkey, bool internal);\n     //! Return reserved address\n     void ReturnDestination();\n     //! Keep the address. Do not return it's key to the keypool when this object goes out of scope"
      }
    ]
  },
  {
    "sha": "2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYTk3ZDJiMWE1MjVkYmM4ZjZlNjYxMGZlNTQzZTAwM2FjZmI3ZmFj",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T20:33:31Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T20:33:41Z"
      },
      "message": "Merge #17553: wallet: Remove out of date comments for CalculateMaximumSignedTxSize\n\n6a2e6b0600077e5903400dc74bc8b0c26592fde6 Remove out of date comments for CalculateMaximumSignedTxSize (Gregory Sanders)\n\nPull request description:\n\n  These paths can be hit for probably a number of reasons, and ISMINE spendability is not a requirement to call it.\n\n  For example: During watch-only transaction creation, previous transaction in wallet, pubkey imported, but not the witnessscript associated with the prevout.\n\n  In this case I think no/minimal comment is better than specific and soon to be out of date.\n\nACKs for top commit:\n  achow101:\n    ACK 6a2e6b0600077e5903400dc74bc8b0c26592fde6\n  darosior:\n    ACK 6a2e6b0600077e5903400dc74bc8b0c26592fde6\n\nTree-SHA512: ad4c26fd2409eb5aed19d67c19cb5479d226bd11e9298630309c4344f6562ace2e10c2850ebe22770331d71e91320a606e79619b9fe52dd478ce1f589a740122",
      "tree": {
        "sha": "030fcf444dbec77879ba86c940ff5637c93dbe39",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/030fcf444dbec77879ba86c940ff5637c93dbe39"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YRiUACgkQ0wARbhyH\nWj17hA/7B8mmNLNFAfK4ThOHQYNUAcSksMYQKjdv6A0xh94EkWruZo6OcndHXeoQ\nWmil6pbmorMwWdWnAnoYxz2TRUy1ek/UFMRp2uIcfOv+wrEHqayLHNxHwS6eN1T8\nETWXz+8wyTngxtKYk7mISnCF1dGEG1bD6fx2sVIPLubMyN92OPyFxXG6pAt2ewDY\nSr4SMZtNrPc5A3JyZMljolUs8jzVW1lsHwRjEbbob4kXh0OvO2WJ1tH6fqK3duBI\nh6h3vKcsOvj4ukrnYY3TzfoVl3J0HD4XIgCIL3sNDIInqruu2jjETLn7gd+W6ZQa\nTpXuDUm8OW4t0EVHiOSMZql8zMOUkIQw4goviyobe4Z0q7rtuDhmpxClblgD5rrC\n3XCb8D3rEkGieAY608rGLeC3ZS5iCuakS+IReAHvo5luVa0bCilXpeeyN7Lr/H8o\nYMwILCwICEWBSKcYsGVkDXujd6LIGOPBvKNIy7AtLPxrbq9PMtNBVuupGcdRwENs\nPFDVbyD7JeSbVcAqMjjIYKNZ4cCWX9mCRpowJiqHoV4sz6S0utl4F+AqgkWmV2Nn\nvtUTa+8dckCTMSN8HPKnj1xr6lK070+tgiRzLI8VPT9K9Spu9UKgVGwM9PhpdIfN\nFqcy5YBvF0tVFPAu1qVJmpUho4QHu20/KHYaFl/goMZSzxGTLZI=\n=irMA\n-----END PGP SIGNATURE-----",
        "payload": "tree 030fcf444dbec77879ba86c940ff5637c93dbe39\nparent 7127c310204787f1b981ef40a530fb22ccc7fc11\nparent 6a2e6b0600077e5903400dc74bc8b0c26592fde6\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574454811 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574454821 +1300\n\nMerge #17553: wallet: Remove out of date comments for CalculateMaximumSignedTxSize\n\n6a2e6b0600077e5903400dc74bc8b0c26592fde6 Remove out of date comments for CalculateMaximumSignedTxSize (Gregory Sanders)\n\nPull request description:\n\n  These paths can be hit for probably a number of reasons, and ISMINE spendability is not a requirement to call it.\n\n  For example: During watch-only transaction creation, previous transaction in wallet, pubkey imported, but not the witnessscript associated with the prevout.\n\n  In this case I think no/minimal comment is better than specific and soon to be out of date.\n\nACKs for top commit:\n  achow101:\n    ACK 6a2e6b0600077e5903400dc74bc8b0c26592fde6\n  darosior:\n    ACK 6a2e6b0600077e5903400dc74bc8b0c26592fde6\n\nTree-SHA512: ad4c26fd2409eb5aed19d67c19cb5479d226bd11e9298630309c4344f6562ace2e10c2850ebe22770331d71e91320a606e79619b9fe52dd478ce1f589a740122\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7127c310204787f1b981ef40a530fb22ccc7fc11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7127c310204787f1b981ef40a530fb22ccc7fc11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7127c310204787f1b981ef40a530fb22ccc7fc11"
      },
      {
        "sha": "6a2e6b0600077e5903400dc74bc8b0c26592fde6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a2e6b0600077e5903400dc74bc8b0c26592fde6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a2e6b0600077e5903400dc74bc8b0c26592fde6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 1,
      "deletions": 5
    },
    "files": [
      {
        "sha": "b1e1385ca36cf60c1416e1907136686298b7544c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
        "patch": "@@ -1448,11 +1448,9 @@ bool CWallet::ImportScriptPubKeys(const std::string& label, const std::set<CScri\n int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wallet, bool use_max_sig)\n {\n     std::vector<CTxOut> txouts;\n-    // Look up the inputs.  We should have already checked that this transaction\n-    // IsAllFromMe(ISMINE_SPENDABLE), so every input should already be in our\n-    // wallet, with a valid index into the vout array, and the ability to sign.\n     for (const CTxIn& input : tx.vin) {\n         const auto mi = wallet->mapWallet.find(input.prevout.hash);\n+        // Can not estimate size without knowing the input details\n         if (mi == wallet->mapWallet.end()) {\n             return -1;\n         }\n@@ -1467,8 +1465,6 @@ int64_t CalculateMaximumSignedTxSize(const CTransaction &tx, const CWallet *wall\n {\n     CMutableTransaction txNew(tx);\n     if (!wallet->DummySignTx(txNew, txouts, use_max_sig)) {\n-        // This should never happen, because IsAllFromMe(ISMINE_SPENDABLE)\n-        // implies that we can sign for every input.\n         return -1;\n     }\n     return GetVirtualTransactionSize(CTransaction(txNew));"
      }
    ]
  },
  {
    "sha": "a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNmY1YjZmNDdkNzE2NjJkZmIzNzgxMDk0OWI2N2YzNDRjZjJhMWYy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:35:34Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:35:58Z"
      },
      "message": "Merge #17550: build: set minimum supported macOS to 10.12\n\n7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d build: set minimum supported macOS to 10.12 (fanquake)\n\nPull request description:\n\n  Extracted from #16392 as this doesn't need to wait for the other build changes.\n\n  Reasoning:\n  * `10.10` has been unsupported since July 2017 (~3 years at `v0.20.0` release)\n  * `10.11` has been unsupported since July 2018  (~2 years at `v0.20.0` release)\n  * macOS users are consistent at upgrading to new releases.\n  * Qt 5.12 LTS only supports [macOS > 10.12](https://doc-snapshots.qt.io/qt5-5.12/supported-platforms.html). As long as we're supporting macOS < 10.12 we would not be able to bump Qt in depends to 5.12 for the `v0.20.0` release.\n\n  Once we drop support for 10.12 and start using the 10.15 SDK there are some other follow ups:\n  * Enabling support for [`thread_local`](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L901).\n  * Removing some of the macOS notification code\n  * Removing macOS [startup item code](https://github.com/bitcoin/bitcoin/blob/master/src/qt/guiutil.cpp#L695).\n\n  There was also some related discussion in the `#bitcoin-builds` channel yesterday arvo.\n\nACKs for top commit:\n  laanwj:\n    ACK 7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d\n  dongcarl:\n    post-IRC-grilling-ACK 7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d\n\nTree-SHA512: 30b0ed75e3b4df2d3f94db2091b7982c1ea7be8fb3a2732d8efd1a53ef1e492d7265a47e90c38e92f66e638d10e9400a6ecb56e5093688bb26d1621645b453e8",
      "tree": {
        "sha": "85915b886a613cf2b3bf18053276ba8a0c34e883",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85915b886a613cf2b3bf18053276ba8a0c34e883"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3YRq4ACgkQLuufXMCV\nJsFDcg//bs0I2KY7U+YDG7hmQteX+jCKwJzYWIyuI4uSRsKCiIE5Bin6/LRkWOUC\ndwt57xgEsBk+eteftqnsNzM0SafPPkTcxsVx/X4kuGUloZV79Abo/39izgCYQjZ8\nfjViVWU/TmJB1VQJgj91NbYoJI/ClAt/o/dEo69rUzNSypIN5Ldemehu2tgiSVEO\nFCYdkbQN7dQzY73eAW6uyCU4tHDjCuKdlvJfDxlwW17QSfzK30wJIE0lDFtsxQxt\n/792RDE55dbvEyHQ0JADIX4HrqmFS4xSpXE3WiT0bv2VrNpNjkwOdcDKnXpPbZrG\nefeFqamh+1NUC/ChlZgtbE6WOUbqDeQ8M3/Z4GcZEc2mh5DQH5k1Hzdu9PMG8Yda\nXCcWZur0kBpNIR1kjjXYn0SZsArMFC0Hna2lgJwyNK1h7JpaDRNJgq7hhS2y9fdR\nS6z1NGaNTln9+RTn6LIcKn+Waw+UW5nCo6Jbey6QvteL5jjwsMPA1oXd1F3k1E46\njXwcrKQ2uRDLxgAUYG35fiOzVlYzWSYMt0K2Ph4WtAdkbvXEJrGLSVrS98QCqKgx\n0C4In5ut0PFOLCsW0yNZllrSHB9U62PHZGu92Tvy+ng6XtFkYCQYfmDqqSDwXzgJ\nNVNg9hWLhX/uyAV7GxLbOT9fa4q/a3w4AGI2041Az3l7x1D+1+A=\n=XBRH\n-----END PGP SIGNATURE-----",
        "payload": "tree 85915b886a613cf2b3bf18053276ba8a0c34e883\nparent 2a97d2b1a525dbc8f6e6610fe543e003acfb7fac\nparent 7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d\nauthor fanquake <fanquake@gmail.com> 1574454934 -0500\ncommitter fanquake <fanquake@gmail.com> 1574454958 -0500\n\nMerge #17550: build: set minimum supported macOS to 10.12\n\n7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d build: set minimum supported macOS to 10.12 (fanquake)\n\nPull request description:\n\n  Extracted from #16392 as this doesn't need to wait for the other build changes.\n\n  Reasoning:\n  * `10.10` has been unsupported since July 2017 (~3 years at `v0.20.0` release)\n  * `10.11` has been unsupported since July 2018  (~2 years at `v0.20.0` release)\n  * macOS users are consistent at upgrading to new releases.\n  * Qt 5.12 LTS only supports [macOS > 10.12](https://doc-snapshots.qt.io/qt5-5.12/supported-platforms.html). As long as we're supporting macOS < 10.12 we would not be able to bump Qt in depends to 5.12 for the `v0.20.0` release.\n\n  Once we drop support for 10.12 and start using the 10.15 SDK there are some other follow ups:\n  * Enabling support for [`thread_local`](https://github.com/bitcoin/bitcoin/blob/master/configure.ac#L901).\n  * Removing some of the macOS notification code\n  * Removing macOS [startup item code](https://github.com/bitcoin/bitcoin/blob/master/src/qt/guiutil.cpp#L695).\n\n  There was also some related discussion in the `#bitcoin-builds` channel yesterday arvo.\n\nACKs for top commit:\n  laanwj:\n    ACK 7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d\n  dongcarl:\n    post-IRC-grilling-ACK 7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d\n\nTree-SHA512: 30b0ed75e3b4df2d3f94db2091b7982c1ea7be8fb3a2732d8efd1a53ef1e492d7265a47e90c38e92f66e638d10e9400a6ecb56e5093688bb26d1621645b453e8\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2a97d2b1a525dbc8f6e6610fe543e003acfb7fac"
      },
      {
        "sha": "7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d7bf2ff4a67c3953b0d660ca88d11313cb4d71d"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 14,
      "deletions": 15
    },
    "files": [
      {
        "sha": "3ede8788396036b6aefe8fcf07a5bb5f6a18a36c",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -144,16 +144,16 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_native_nowallet.sh\"\n \n     - stage: test\n-      name: 'macOS 10.10  [GOAL: deploy] [no functional tests]'\n+      name: 'macOS 10.12  [GOAL: deploy] [no functional tests]'\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_mac.sh\"\n \n     - stage: test\n       name: 'macOS 10.14 native [GOAL: install] [GUI] [no depends]'\n       os: osx\n       # Use the most recent version:\n-      # Xcode 11, macOS 10.14, JDK 12.0.1\n+      # Xcode 11.2.1, macOS 10.14, JDK 13.0.1, SDK 10.15\n       # https://docs.travis-ci.com/user/reference/osx/#macos-version\n-      osx_image: xcode11\n+      osx_image: xcode11.2\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_mac_host.sh\""
      },
      {
        "sha": "af166b6ca7cf21336d24a1663dee549b6b85edbb",
        "filename": "ci/test/00_setup_env_mac.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/ci/test/00_setup_env_mac.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/ci/test/00_setup_env_mac.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac.sh?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-apple-darwin14\n+export HOST=x86_64-apple-darwin16\n export PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev python3-setuptools\"\n export OSX_SDK=10.11\n export RUN_UNIT_TESTS=false"
      },
      {
        "sha": "0b437a723f045c094af7324182b48ac37a9ead0c",
        "filename": "ci/test/00_setup_env_mac_host.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/ci/test/00_setup_env_mac_host.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/ci/test/00_setup_env_mac_host.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_mac_host.sh?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-export HOST=x86_64-apple-darwin14\n+export HOST=x86_64-apple-darwin16\n export BREW_PACKAGES=\"automake berkeley-db4 libtool boost miniupnpc pkg-config qt qrencode python3 ccache zeromq\"\n export PIP_PACKAGES=\"zmq\"\n export RUN_CI_ON_HOST=true"
      },
      {
        "sha": "5f006d3a190241a5f17ae0a684845814d411e097",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -37,7 +37,7 @@ script: |\n   set -e -o pipefail\n \n   WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin14\"\n+  HOSTS=\"x86_64-apple-darwin16\"\n   CONFIGFLAGS=\"--enable-reduce-exports --disable-bench --disable-gui-tests GENISOIMAGE=$WRAP_DIR/genisoimage\"\n   FAKETIME_HOST_PROGS=\"\"\n   FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\""
      },
      {
        "sha": "b56302b6c7310bd1d0c2c4655d3d62c0eb6fedbb",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -25,7 +25,7 @@ Common `host-platform-triplets` for cross compilation are:\n - `i686-pc-linux-gnu` for Linux 32 bit\n - `x86_64-pc-linux-gnu` for x86 Linux\n - `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin14` for macOS\n+- `x86_64-apple-darwin16` for macOS\n - `arm-linux-gnueabihf` for Linux ARM 32 bit\n - `aarch64-linux-gnu` for Linux ARM 64 bit\n - `riscv32-linux-gnu` for Linux RISC-V 32 bit"
      },
      {
        "sha": "1f88c209cf43bf76cb8f2fa6a9b74f96d483f7a7",
        "filename": "depends/hosts/darwin.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -1,4 +1,4 @@\n-OSX_MIN_VERSION=10.10\n+OSX_MIN_VERSION=10.12\n OSX_SDK_VERSION=10.11\n OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n LD64_VERSION=253.9"
      },
      {
        "sha": "bf655538c72b2c6a9c6c385026319fb10117d1b9",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -110,7 +110,7 @@ tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n ```\n \n ## Notes\n-* Tested on OS X 10.10 Yosemite through macOS 10.14 Mojave on 64-bit Intel\n+* Tested on OS X 10.12 Sierra through macOS 10.15 Catalina on 64-bit Intel\n processors only.\n * Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714).\n "
      },
      {
        "sha": "88740ea1dae3d515286b9ead873cc69014d1e948",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -46,16 +46,15 @@ Compatibility\n ==============\n \n Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+the Linux kernel, macOS 10.12+, and Windows 7 and newer. It is not recommended\n to use Bitcoin Core on unsupported systems.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n as frequently tested on them.\n \n-From Bitcoin Core 0.17.0 onwards, macOS versions earlier than 10.10 are no\n-longer supported, as Bitcoin Core is now built using Qt 5.9.x which requires\n-macOS 10.10+. Additionally, Bitcoin Core does not yet change appearance when\n-macOS \"dark mode\" is activated.\n+From Bitcoin Core 0.20.0 onwards, macOS versions earlier than 10.12 are no\n+longer supported. Additionally, Bitcoin Core does not yet change appearance\n+when macOS \"dark mode\" is activated.\n \n In addition to previously supported CPU platforms, this release's pre-compiled\n distribution provides binaries for the RISC-V platform."
      },
      {
        "sha": "275078c88de837697f6fe3633a479ab59f43f91f",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a6f5b6f47d71662dfb37810949b67f344cf2a1f2/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "patch": "@@ -3,7 +3,7 @@\n <plist version=\"0.9\">\n <dict>\n   <key>LSMinimumSystemVersion</key>\n-  <string>10.10.0</string>\n+  <string>10.12.0</string>\n \n   <key>LSArchitecturePriority</key>\n   <array>"
      }
    ]
  },
  {
    "sha": "b77d5ad59fb9f3f26d919ee6c33ae732382de504",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzdkNWFkNTlmYjlmM2YyNmQ5MTllZTZjMzNhZTczMjM4MmRlNTA0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T09:46:01Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:38:52Z"
      },
      "message": "build: Disallow dynamic linking against c++ library\n\nEver since statically linking Qt, we've been linking the C++ library\nstatically too (-static-libstdc++). Take this into\naccount in the symbol checker.",
      "tree": {
        "sha": "4951d297aa02acf3063b6f414c051754409abaeb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4951d297aa02acf3063b6f414c051754409abaeb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b77d5ad59fb9f3f26d919ee6c33ae732382de504",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3YR1wACgkQLuufXMCV\nJsEglhAAtOgbPVaz3t8/OOq/7BvOtIV2q/3oI5L3E/JtOaTiY31hDjj5vDWv6Xm6\nVkAiPLGwGAq2nu57Om1Svt5/XxklfY8M9mK91VDQR9ohq2HU19m4ObOGvQM6SJXC\nxLb5orKcnO4hVuJjiXU66JXhCChqdnNHRVUAMzGW3TKwTFxNZYg0iXpsRhNowqLx\n+/Fcv3cXOTucD6IqXPFIvdDLL3FvMzkSdbM8ahqzCSMA339iMYezzceMdDVGwrni\nGv78T4Fj3MMZSM+Ex6NbHMSEs+vWhssR18/Ev1YjMT8bfnkHTQxOT1J8z+F/ozpV\nl8PzOtQ59ihBpnrUioXlPo/Au8sWNOu5wevD2Sa1/a7KqRWK30oG8kPcDcz2NHFk\nKIW1Lqs6O9du9WJfSq6G2xxVFSeCPjW1lyKagkK189Kgqa4wk8ouNozZeIgMeHM2\nw5qR5AZ00Vd9Qawuy0urYSYy+p/gzWNYFso73cpgF9tPpZQEQ/MNvT3MtjJnfuak\n2RzrMmQowE2Cl3ZHVwDg6HWRWkYFVCjJ6xsKJifIcchZSuZOVrCPMEghPc+SCsKH\nn7oA5n57raKSYVSsBUyQCc/b0YBcRLyzVg8rWs6/tlF60JQYSYhWnR0ApMEDQ3+W\nqUyAY4K0qMDztO663Yongz7GKWuKv+jqzWIlsYxmWHKju2fNAsc=\n=E7pi\n-----END PGP SIGNATURE-----",
        "payload": "tree 4951d297aa02acf3063b6f414c051754409abaeb\nparent a6f5b6f47d71662dfb37810949b67f344cf2a1f2\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574243161 +0100\ncommitter fanquake <fanquake@gmail.com> 1574455132 -0500\n\nbuild: Disallow dynamic linking against c++ library\n\nEver since statically linking Qt, we've been linking the C++ library\nstatically too (-static-libstdc++). Take this into\naccount in the symbol checker.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b77d5ad59fb9f3f26d919ee6c33ae732382de504",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b77d5ad59fb9f3f26d919ee6c33ae732382de504",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b77d5ad59fb9f3f26d919ee6c33ae732382de504/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f5b6f47d71662dfb37810949b67f344cf2a1f2"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 2,
      "deletions": 7
    },
    "files": [
      {
        "sha": "0698f7306622bf805b3a99474511077d482156f7",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b77d5ad59fb9f3f26d919ee6c33ae732382de504/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b77d5ad59fb9f3f26d919ee6c33ae732382de504/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=b77d5ad59fb9f3f26d919ee6c33ae732382de504",
        "patch": "@@ -4,8 +4,8 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+allowed gcc and glibc version symbols. This makes sure they are still compatible\n+with the minimum supported Linux distribution versions.\n \n Example usage:\n \n@@ -20,25 +20,20 @@\n #\n # - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n # - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n #\n # Ubuntu 10.04.4 (Lucid Lynx) has:\n #\n # - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n # - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n #\n # Taking the minimum of these as our target.\n #\n # According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n #   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n #   (glibc)    GLIBC_2_11\n #\n MAX_VERSIONS = {\n 'GCC':       (4,4,0),\n-'CXXABI':    (1,3,3),\n-'GLIBCXX':   (3,4,13),\n 'GLIBC':     (2,11),\n 'LIBATOMIC': (1,0)\n }"
      }
    ]
  },
  {
    "sha": "16a7be1663b02ddefa1e4f0309be49b725ffb388",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmE3YmUxNjYzYjAyZGRlZmExZTRmMDMwOWJlNDliNzI1ZmZiMzg4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-20T09:55:35Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:40:05Z"
      },
      "message": "build: Bump minimum versions in symbol checker\n\nDebian 8 (Jessie) has:\n- g++ version 4.9.2\n- libc version 2.19\n\nUbuntu 16.04.4 (Xenial) has:\n- g++ version 5.3.1\n- libc version 2.23.0\n\nCentOS 7 has:\n- g++ version 4.8.5\n- libc version 2.17\n\nTaking the minimum of these as our target.\nAccording to the GNU ABI document this corresponds to:\n\n- GCC 4.8.5: GCC_4.8.0\n- (glibc)    GLIBC_2_17\n\nCo-Authored-By: fanquake <fanquake@gmail.com>",
      "tree": {
        "sha": "c79668c042e18c9b4c7bf59944f1b7e6a6a48acf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c79668c042e18c9b4c7bf59944f1b7e6a6a48acf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16a7be1663b02ddefa1e4f0309be49b725ffb388",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3YR6cACgkQLuufXMCV\nJsGqMw/9GiI8N9j/lKxu3M8bZG/dh64RtN0S6dlDrlIPUm8RshSSh8Sg3vA+7BZ8\nXAQbny+56gszRFHjmxXbSJub9hDim4fJ9DxqmNkuMMPgwI9MFFqR5rg722U5zWe+\nxvkQ0uwDKEUWBsRywKOEdIBccd8yjNiUQty+OQDXr8EPpw9njt2Y//B9B7SKlNip\np0rHzfGs8FM0Wftz0+f67RiYHdpkP/+ze6MbMP4tnUZJLFitfxeluCWB6k27AFlV\nGjdb9FLoMeRGpk6H3zpeHjNTQIZ2e8U1xL/vMGivhCRDPx0mT2y+g4oW3SlkpOW8\np4tqbRMCpiNux/5PBnkQD4rXe6gW8FgVdWqHTmk9x7qZGk8ExpqsZlC0rmMSe1lG\nOJHLS8wjSkd5H+8rQFL7jod3lM/3bbDtyzgZJmkNF/5D6RsLE/mTSaayRpScou4G\nuKeYffOaJxznlJND2jfPUt+jcj9xP2VUe/BieWaF3yfatUi+HAFNoEdSvgv5wuVs\nCOE2t6xMvObOOZOd/14g5Pcjrr52ojRcxqZrNTk3ClwkGD8mLWbxsXy8qhV5DwO5\nLZiDWuhvRQ4xaHWzuwaz/B+jI5MXUlpvOKn3koehq/PXz6J7iU0OXJ9Vv1T1VdhH\nXtm0ZjYdz8hZ62O05LmiUbYNm3NZ5rcBiNmYl1SGjbTwj4gLvv0=\n=LyNl\n-----END PGP SIGNATURE-----",
        "payload": "tree c79668c042e18c9b4c7bf59944f1b7e6a6a48acf\nparent b77d5ad59fb9f3f26d919ee6c33ae732382de504\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574243735 +0100\ncommitter fanquake <fanquake@gmail.com> 1574455205 -0500\n\nbuild: Bump minimum versions in symbol checker\n\nDebian 8 (Jessie) has:\n- g++ version 4.9.2\n- libc version 2.19\n\nUbuntu 16.04.4 (Xenial) has:\n- g++ version 5.3.1\n- libc version 2.23.0\n\nCentOS 7 has:\n- g++ version 4.8.5\n- libc version 2.17\n\nTaking the minimum of these as our target.\nAccording to the GNU ABI document this corresponds to:\n\n- GCC 4.8.5: GCC_4.8.0\n- (glibc)    GLIBC_2_17\n\nCo-Authored-By: fanquake <fanquake@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16a7be1663b02ddefa1e4f0309be49b725ffb388",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16a7be1663b02ddefa1e4f0309be49b725ffb388",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16a7be1663b02ddefa1e4f0309be49b725ffb388/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b77d5ad59fb9f3f26d919ee6c33ae732382de504",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b77d5ad59fb9f3f26d919ee6c33ae732382de504",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b77d5ad59fb9f3f26d919ee6c33ae732382de504"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 16,
      "deletions": 11
    },
    "files": [
      {
        "sha": "cb255c9426eeb3b5ae9d538ad28748e9a57284f5",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 16,
        "deletions": 11,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16a7be1663b02ddefa1e4f0309be49b725ffb388/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16a7be1663b02ddefa1e4f0309be49b725ffb388/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=16a7be1663b02ddefa1e4f0309be49b725ffb388",
        "patch": "@@ -16,25 +16,30 @@\n import sys\n import os\n \n-# Debian 6.0.9 (Squeeze) has:\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n #\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n #\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n #\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n #\n # Taking the minimum of these as our target.\n #\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   (glibc)    GLIBC_2_11\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n #\n MAX_VERSIONS = {\n-'GCC':       (4,4,0),\n-'GLIBC':     (2,11),\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n 'LIBATOMIC': (1,0)\n }\n # See here for a description of _IO_stdin_used:"
      }
    ]
  },
  {
    "sha": "8f15a317602727d24f60d0bbf43f851b33df3228",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjE1YTMxNzYwMjcyN2QyNGY2MGQwYmJmNDNmODUxYjMzZGYzMjI4",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:57:44Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T20:57:44Z"
      },
      "message": "doc: add glibc 2.17 requirement to release-notes",
      "tree": {
        "sha": "c274120a7d88e43c1f886f03ef35a2367e0d9ebf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c274120a7d88e43c1f886f03ef35a2367e0d9ebf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f15a317602727d24f60d0bbf43f851b33df3228",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3YS8gACgkQLuufXMCV\nJsGbahAAtMBJgJ6L3Syl+wW6Sm4l97zdn5YMG4qNaDasVz4rJ5wqS5BXlkLXGBfX\nA3SnXINt1rLte9EzG3yTQqCimjbrQ39YBiMzhJCMcNyOHTcJy+Z+DUtR0eD0+q3A\n14mdAhC7gkGw+ds2CB366Y/vTEpJJ5fwWKKuV9GZ2Sh5SFFwr1T9wdgiZ4rkwV79\n/bALXejg7IR7Rf+cyp/w1NVJ6c8rxxn4cKKP51rMG6ex/s7abmb0WUrK4L3bepHp\nynJ0AbWXCrZn0qIBLMTAlWNgdaeQsUPvfenN3kJ6CTppQNT2g7zLlb6i4SZTzimv\nQb2HwVyKGMrgvrzyjD9vaIYiYDjfLm8RZ5zD6lOA6unOuUmiM1si3Fo1r6+TXlIW\nzv5VGcnxDDR1GJz1vvi1nFCNpVjc85Tg0hLf42ugjMYZOypjEF8YX9AjiaER/d50\nOH4/V328F36x8r00pJF7A0g5VN5M5kU311EAeTnEeGlKgP9iklVKlfN4Dg6tbEPC\nB1RglvytVe+guofKKQff3+Zn5E9NMnkQvL1Tj/sGWsxhTN0O25vH5E2WIs/d3Oz6\nzETtRmuiAPrHwZxH/RHrZfVH0yHtUoJaIAcFI9uSOGG/jsq85znXdQAWTjlNmlPb\n9/xxNxFEOAptBvlNgxdLuk+uPa91k8XqsjKmQvb6MoVKfV9RfII=\n=T4ws\n-----END PGP SIGNATURE-----",
        "payload": "tree c274120a7d88e43c1f886f03ef35a2367e0d9ebf\nparent 16a7be1663b02ddefa1e4f0309be49b725ffb388\nauthor fanquake <fanquake@gmail.com> 1574456264 -0500\ncommitter fanquake <fanquake@gmail.com> 1574456264 -0500\n\ndoc: add glibc 2.17 requirement to release-notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f15a317602727d24f60d0bbf43f851b33df3228",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f15a317602727d24f60d0bbf43f851b33df3228",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f15a317602727d24f60d0bbf43f851b33df3228/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "16a7be1663b02ddefa1e4f0309be49b725ffb388",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16a7be1663b02ddefa1e4f0309be49b725ffb388",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/16a7be1663b02ddefa1e4f0309be49b725ffb388"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d6bd8e6ed45f841e5a124ff79d4acaf0a91c1fe1",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f15a317602727d24f60d0bbf43f851b33df3228/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f15a317602727d24f60d0bbf43f851b33df3228/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=8f15a317602727d24f60d0bbf43f851b33df3228",
        "patch": "@@ -68,6 +68,10 @@ Build System\n - OpenSSL is no longer used by Bitcoin Core. The last usage of the library\n was removed in #17265.\n \n+- glibc 2.17 or greater is now required to run the release binaries. This\n+retains compatibility with RHEL 7, CentOS 7, Debian 8 and Ubuntu 14.04 LTS.\n+Further details can be found in #17538.\n+\n New RPCs\n --------\n "
      }
    ]
  },
  {
    "sha": "4effd67bf407e25e776a37739c6ca103e1f26d74",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWZmZDY3YmY0MDdlMjVlNzc2YTM3NzM5YzZjYTEwM2UxZjI2ZDc0",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T21:19:43Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T21:20:04Z"
      },
      "message": "Merge #17387: wallet_importmulti: use addresses of the same type as being imported\n\nb84e776fd166ac422ac4a0dcdc1c6f7fd921bf70 wallet_importmulti: use addresses of the same type as being imported (Andrew Chow)\n\nPull request description:\n\n  When constructing an import from the solving data of an address, make sure that the original address is the same type as the one that will be imported.\n\n  See also: https://github.com/bitcoin/bitcoin/pull/17374#issuecomment-550036931\n\n  Part of #17261\n\nACKs for top commit:\n  Sjors:\n    Code review ACK b84e776\n  meshcollider:\n    Tested re-ACK b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70\n\nTree-SHA512: 53c49c63af8cbade0116a62beddc77df1a411d8ed76571c3053f6aff096f41a5325421a188bab3dcacfda69bb28fdff6ba921ddd80f29c4abbadb3b58fda884c",
      "tree": {
        "sha": "aa3dcf789762b46fe3e8efc5a91373c7429bca2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa3dcf789762b46fe3e8efc5a91373c7429bca2a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4effd67bf407e25e776a37739c6ca103e1f26d74",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YUQQACgkQ0wARbhyH\nWj1cGg/9HhRNlksZCKcZN7FcR9jSq9x7Y8WB4OlKKWCNccIRClct3jEpzbDdlBcm\nwl2NHfUTy+LGD2msybDGDQCecwcJjbAzIPwWR1KhSgZpbdsc57vmub25JfBT2QSA\nBOu35bVLg9A0hva4m502K6opW6pGDXicoHFD9bnf3au/flr7E1peEXGvjPEL1SLj\nfm19R47vIrC57mFGf8b5rBEbDN+Thw8K/m/FfcYU5gzCP9cL+v5e3USAok2ttMRB\nGEHxbsMLw1PqOqq8nNz0mKhC7Nc9IuFyg3b6A260pMvh1Qx4BYQZS1PpzsnxWVe6\nbxm6ORTr+Z3Mo/6KcGlFsWsqrmeQiCEZwtX1gzfjmJz4ynKU8DDbBdJ9jfP4Y53v\npg2CAroz5eMVTHEpMZB8JJvNucBLn+AzToGXTdsscKvrw3Clo1zm8t+/9WR8H/kV\n9FvEpxB3ipu5r4ExJ5PT3WR7W0n/ohxSGCEQfbfXGDPofX2+qbQ0GEwhKuNzxJ0Y\ndIV0q94Fa9f+vOz9Ny/rhSAWSdxUKuIWRplnruvR3FcKkw0vgdiE7DniUYQAtUWt\nsTb9eLFojqaVA+X07rDBbefB5gW/RvNvlCNR8m82/DUycRNqLsyDiLzNZ7CoP+GQ\n2M/x3pub1Freu4YXwhY1nBaLeLoD+zU5PCPbgyj+ousKOQu3qs0=\n=gj39\n-----END PGP SIGNATURE-----",
        "payload": "tree aa3dcf789762b46fe3e8efc5a91373c7429bca2a\nparent a6f5b6f47d71662dfb37810949b67f344cf2a1f2\nparent b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574457583 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574457604 +1300\n\nMerge #17387: wallet_importmulti: use addresses of the same type as being imported\n\nb84e776fd166ac422ac4a0dcdc1c6f7fd921bf70 wallet_importmulti: use addresses of the same type as being imported (Andrew Chow)\n\nPull request description:\n\n  When constructing an import from the solving data of an address, make sure that the original address is the same type as the one that will be imported.\n\n  See also: https://github.com/bitcoin/bitcoin/pull/17374#issuecomment-550036931\n\n  Part of #17261\n\nACKs for top commit:\n  Sjors:\n    Code review ACK b84e776\n  meshcollider:\n    Tested re-ACK b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70\n\nTree-SHA512: 53c49c63af8cbade0116a62beddc77df1a411d8ed76571c3053f6aff096f41a5325421a188bab3dcacfda69bb28fdff6ba921ddd80f29c4abbadb3b58fda884c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4effd67bf407e25e776a37739c6ca103e1f26d74",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4effd67bf407e25e776a37739c6ca103e1f26d74",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4effd67bf407e25e776a37739c6ca103e1f26d74/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a6f5b6f47d71662dfb37810949b67f344cf2a1f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a6f5b6f47d71662dfb37810949b67f344cf2a1f2"
      },
      {
        "sha": "b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b84e776fd166ac422ac4a0dcdc1c6f7fd921bf70"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "da795eac1fa34113fefc64b839d6527c7fd9d741",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4effd67bf407e25e776a37739c6ca103e1f26d74/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4effd67bf407e25e776a37739c6ca103e1f26d74/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=4effd67bf407e25e776a37739c6ca103e1f26d74",
        "patch": "@@ -675,7 +675,7 @@ def run_test(self):\n         # Import pubkeys with key origin info\n         self.log.info(\"Addresses should have hd keypath and master key id after import with key origin\")\n         pub_addr = self.nodes[1].getnewaddress()\n-        pub_addr = self.nodes[1].getnewaddress()\n+        pub_addr = self.nodes[1].getnewaddress(address_type=\"bech32\")\n         info = self.nodes[1].getaddressinfo(pub_addr)\n         pub = info['pubkey']\n         pub_keypath = info['hdkeypath']\n@@ -693,7 +693,7 @@ def run_test(self):\n         assert_equal(pub_import_info['hdkeypath'], pub_keypath)\n \n         # Import privkeys with key origin info\n-        priv_addr = self.nodes[1].getnewaddress()\n+        priv_addr = self.nodes[1].getnewaddress(address_type=\"bech32\")\n         info = self.nodes[1].getaddressinfo(priv_addr)\n         priv = self.nodes[1].dumpprivkey(priv_addr)\n         priv_keypath = info['hdkeypath']\n@@ -742,8 +742,8 @@ def run_test(self):\n         self.nodes[1].createwallet(wallet_name=\"noprivkeys\", disable_private_keys=True)\n         wrpc = self.nodes[1].get_wallet_rpc(\"noprivkeys\")\n \n-        addr1 = self.nodes[0].getnewaddress()\n-        addr2 = self.nodes[0].getnewaddress()\n+        addr1 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n+        addr2 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n         pub1 = self.nodes[0].getaddressinfo(addr1)['pubkey']\n         pub2 = self.nodes[0].getaddressinfo(addr2)['pubkey']\n         result = wrpc.importmulti(\n@@ -761,15 +761,15 @@ def run_test(self):\n         assert result[0]['success']\n         assert result[1]['success']\n         assert_equal(wrpc.getwalletinfo()[\"keypoolsize\"], 2)\n-        newaddr1 = wrpc.getnewaddress()\n+        newaddr1 = wrpc.getnewaddress(address_type=\"bech32\")\n         assert_equal(addr1, newaddr1)\n-        newaddr2 = wrpc.getnewaddress()\n+        newaddr2 = wrpc.getnewaddress(address_type=\"bech32\")\n         assert_equal(addr2, newaddr2)\n \n         # Import some public keys to the internal keypool of a no privkey wallet\n         self.log.info(\"Adding pubkey to internal keypool of disableprivkey wallet\")\n-        addr1 = self.nodes[0].getnewaddress()\n-        addr2 = self.nodes[0].getnewaddress()\n+        addr1 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n+        addr2 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n         pub1 = self.nodes[0].getaddressinfo(addr1)['pubkey']\n         pub2 = self.nodes[0].getaddressinfo(addr2)['pubkey']\n         result = wrpc.importmulti(\n@@ -789,15 +789,15 @@ def run_test(self):\n         assert result[0]['success']\n         assert result[1]['success']\n         assert_equal(wrpc.getwalletinfo()[\"keypoolsize_hd_internal\"], 2)\n-        newaddr1 = wrpc.getrawchangeaddress()\n+        newaddr1 = wrpc.getrawchangeaddress(address_type=\"bech32\")\n         assert_equal(addr1, newaddr1)\n-        newaddr2 = wrpc.getrawchangeaddress()\n+        newaddr2 = wrpc.getrawchangeaddress(address_type=\"bech32\")\n         assert_equal(addr2, newaddr2)\n \n         # Import a multisig and make sure the keys don't go into the keypool\n         self.log.info('Imported scripts with pubkeys should not have their pubkeys go into the keypool')\n-        addr1 = self.nodes[0].getnewaddress()\n-        addr2 = self.nodes[0].getnewaddress()\n+        addr1 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n+        addr2 = self.nodes[0].getnewaddress(address_type=\"bech32\")\n         pub1 = self.nodes[0].getaddressinfo(addr1)['pubkey']\n         pub2 = self.nodes[0].getaddressinfo(addr2)['pubkey']\n         result = wrpc.importmulti("
      }
    ]
  },
  {
    "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjc5Y2FmNjU4MDE5ZGUyYzY1YTUzYzllMTFmZDFkMmY0YzM2OWI2",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T21:35:50Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-22T21:36:04Z"
      },
      "message": "Merge #17447: wallet: Make -walletdir network only\n\n3c2c439dcd8797019ac6d6614775d5c20ee41c36 wallet: Make -walletdir network only (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  With this PR `bitcoind -regtest` doesn't run if bitcoin.conf has\n  ```\n  walletdir=/mnt/mydisk/wallets\n  ```\n  But works with\n  ```\n  [regtest]\n  walletdir=/mnt/mydisk/wallets\n  ```\n\n  Doesn't change mainnet behavior.\n\n  Closes #15630.\n\nACKs for top commit:\n  ryanofsky:\n    ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36\n  MarcoFalke:\n    ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36 \ud83c\udf48\n  meshcollider:\n    Tested ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36\n\nTree-SHA512: 8ab3b2db5f3f9cab78b36baaf490c80f7330372cfd8f73fe6536c8fb4c6e55e09f62296feb70617075838b3bcd7101abebbef3b228b6c3dbd42ce8c7a5c372d9",
      "tree": {
        "sha": "f6f662a85a6a46125473d29768dad389cd16745a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6f662a85a6a46125473d29768dad389cd16745a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3YVMQACgkQ0wARbhyH\nWj3u9w//XR/sbCUOQhfMMlVl4/ojFstGBFtUqJqUct+WgB2XjB8LCAkYnIJtzHAo\nn14W/TWQ6MYj3CiVs98StJtDHMBMWI5znq8kvgdB43yur4Id2pwM9/90ym1qBy7v\nlaez5E32yuvCyOeIIEgieFM7nKtc446NWVnlP+XNmJuujvkeqCK0lMFp59hHE5Qc\n8WZsjYRr0bGyAXvs96RPZ66oA0pDt0VKCq7Lv+vnil1T1zEBhjTarccUHZngzRFv\nbnK1hFGVm10My+7LSSrivLJrcTsBITs0fUZ31SiIkvOsQAC9GJhiimsvjjw9n71L\nzV0p09r3h16xcvjq/qWVSNwbesBQ4n3OhVsVBpAL1wkMw/ap4/OvsG7XOW7QO+T+\n7NQsPJNBADavl7kyfIjb1EZ7tbEVjLfmcHK+xMUFMjFMytKUEOvmdqppOoLbxEvi\n92m7t6aKaTdT5T3iEwys56omz2sImwvsM00GHu12zUyS8w4HfJtrGXAg08aB2aLl\ndSWA0ifhoSc6xRbWdoIYvwQSEGwYmbHKcQzw7hGa/l1qUv5lNh/WUD7ppLTu+pyw\n58b6bJ6s6ba92tExv1YpKBz+ALY/o7fyYg10H9y2FSWpa2ZskjAfE4aUFBUIZ6I+\n/io59lRQtftqa5zX5zRIGNRqwhemcDuJ162bK6jLYVoOOgjPLZg=\n=uQby\n-----END PGP SIGNATURE-----",
        "payload": "tree f6f662a85a6a46125473d29768dad389cd16745a\nparent 4effd67bf407e25e776a37739c6ca103e1f26d74\nparent 3c2c439dcd8797019ac6d6614775d5c20ee41c36\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574458550 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574458564 +1300\n\nMerge #17447: wallet: Make -walletdir network only\n\n3c2c439dcd8797019ac6d6614775d5c20ee41c36 wallet: Make -walletdir network only (Jo\u00e3o Barbosa)\n\nPull request description:\n\n  With this PR `bitcoind -regtest` doesn't run if bitcoin.conf has\n  ```\n  walletdir=/mnt/mydisk/wallets\n  ```\n  But works with\n  ```\n  [regtest]\n  walletdir=/mnt/mydisk/wallets\n  ```\n\n  Doesn't change mainnet behavior.\n\n  Closes #15630.\n\nACKs for top commit:\n  ryanofsky:\n    ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36\n  MarcoFalke:\n    ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36 \ud83c\udf48\n  meshcollider:\n    Tested ACK 3c2c439dcd8797019ac6d6614775d5c20ee41c36\n\nTree-SHA512: 8ab3b2db5f3f9cab78b36baaf490c80f7330372cfd8f73fe6536c8fb4c6e55e09f62296feb70617075838b3bcd7101abebbef3b228b6c3dbd42ce8c7a5c372d9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4effd67bf407e25e776a37739c6ca103e1f26d74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4effd67bf407e25e776a37739c6ca103e1f26d74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4effd67bf407e25e776a37739c6ca103e1f26d74"
      },
      {
        "sha": "3c2c439dcd8797019ac6d6614775d5c20ee41c36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c2c439dcd8797019ac6d6614775d5c20ee41c36",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c2c439dcd8797019ac6d6614775d5c20ee41c36"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8b09dc9ad025854e31f01c289db56463d5930628",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b79caf658019de2c65a53c9e11fd1d2f4c369b6/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b79caf658019de2c65a53c9e11fd1d2f4c369b6/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "patch": "@@ -58,7 +58,7 @@ void WalletInit::AddWalletOptions() const\n     gArgs.AddArg(\"-upgradewallet\", \"Upgrade wallet to latest format on startup\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-wallet=<path>\", \"Specify wallet database path. Can be specified multiple times to load multiple wallets. Path is interpreted relative to <walletdir> if it is not absolute, and will be created if it does not exist (as a directory containing a wallet.dat file and log files). For backwards compatibility this will also accept names of existing data files in <walletdir>.)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);\n     gArgs.AddArg(\"-walletbroadcast\",  strprintf(\"Make the wallet broadcast transactions (default: %u)\", DEFAULT_WALLETBROADCAST), ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n-    gArgs.AddArg(\"-walletdir=<dir>\", \"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n+    gArgs.AddArg(\"-walletdir=<dir>\", \"Specify directory to hold wallets (default: <datadir>/wallets if it exists, otherwise <datadir>)\", ArgsManager::ALLOW_ANY | ArgsManager::NETWORK_ONLY, OptionsCategory::WALLET);\n #if HAVE_SYSTEM\n     gArgs.AddArg(\"-walletnotify=<cmd>\", \"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\", ArgsManager::ALLOW_ANY, OptionsCategory::WALLET);\n #endif"
      }
    ]
  },
  {
    "sha": "27d82b63fb8869716d2f103fd381c2413bde4d1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2Q4MmI2M2ZiODg2OTcxNmQyZjEwM2ZkMzgxYzI0MTNiZGU0ZDFi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T23:12:00Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-22T23:44:43Z"
      },
      "message": "gui: remove macOS start on login code\n\nThe macOS startup item code was disabled for builds targeting macOS >\n10.11 in #15208. Now that we require macOS 10.12 as a minimum, #17550,\nwe can remove the startup item code entirely, as the API we were using\nwas removed in macOS 10.12.",
      "tree": {
        "sha": "c3857aa1e60aa2a810a1297b1cb722b1e13e7b48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c3857aa1e60aa2a810a1297b1cb722b1e13e7b48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27d82b63fb8869716d2f103fd381c2413bde4d1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3Ycu4ACgkQLuufXMCV\nJsGyiQ//Zyjgp5PZMo6hpLxfrIlRa55wY+Dw91ogfNqCdWOImL42jv/K5BBMSNdf\nXlSed/Ts/gayKk8XO49yyK/NwDvRLBjINpPjnPczYmD3fzWE8G0TherFnGh2m0e6\nhcMY1h5samFcXKWNEKcZbuSUwYtRHl07Bxbw2fFxS3yssrgy4FxINXBpcARVrQJT\n9Om+fWi1Wfx7/LcG5fMW9CmhK/Ryk7wCessrYV2EWFlr7eDCsvxXOvPkj+G6KY80\nhP4gbhThUSEKuFMzSXObEjJFUWPDtvGnQy7UJcdLlNDwoAZNBj08WSELKF5ve4or\nDhLdgUwsTciQxjOMy/BN+tzrTT7Hu0dEzaNUfw5FvYxhm+aDpkAL1pVoUaT1infx\nLI0k8yVQA6xI2Hd4eUxBChG0bSOhdJO0OCrW3A7734nDLoX2LK1GXNqrWjnLWumj\nan5VwmuVI6Q7r/Jik/0UpT4PowPHVZPj4uKLPfukXBLctRSX0H53tc63DRGcw7x3\nr5hy4mh4ix4Lpfn2+BXcJN7w/DUS7Ar9DgjFQLtoaVukhFO9LXqixIVbW+RNd1ib\nivvS6PZgnCffCyVsRThiUPD/AQxYmL+ltfoa3DHT2SzVk/gZN1vkoO/ubPQXtP/x\nxP9g/vBFnxtk0jq5WDXUUZx7NeFcE+kH8/XMVQDbxDkBelTRz7g=\n=/OOz\n-----END PGP SIGNATURE-----",
        "payload": "tree c3857aa1e60aa2a810a1297b1cb722b1e13e7b48\nparent 0b79caf658019de2c65a53c9e11fd1d2f4c369b6\nauthor fanquake <fanquake@gmail.com> 1574464320 -0500\ncommitter fanquake <fanquake@gmail.com> 1574466283 -0500\n\ngui: remove macOS start on login code\n\nThe macOS startup item code was disabled for builds targeting macOS >\n10.11 in #15208. Now that we require macOS 10.12 as a minimum, #17550,\nwe can remove the startup item code entirely, as the API we were using\nwas removed in macOS 10.12.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27d82b63fb8869716d2f103fd381c2413bde4d1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27d82b63fb8869716d2f103fd381c2413bde4d1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27d82b63fb8869716d2f103fd381c2413bde4d1b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 3,
      "deletions": 87
    },
    "files": [
      {
        "sha": "0981315190f74471938553c1196114d8f729f42d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27d82b63fb8869716d2f103fd381c2413bde4d1b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27d82b63fb8869716d2f103fd381c2413bde4d1b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=27d82b63fb8869716d2f103fd381c2413bde4d1b",
        "patch": "@@ -86,6 +86,8 @@ Low-level Changes section below.\n GUI changes\n -----------\n \n+- The \"Start Bitcoin Core on system login\" option has been removed on macOS.\n+\n Wallet\n ------\n "
      },
      {
        "sha": "2bb95354415b54f88e4ead96cdff9637378f7de0",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27d82b63fb8869716d2f103fd381c2413bde4d1b/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27d82b63fb8869716d2f103fd381c2413bde4d1b/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=27d82b63fb8869716d2f103fd381c2413bde4d1b",
        "patch": "@@ -54,10 +54,7 @@\n #include <QUrlQuery>\n \n #if defined(Q_OS_MAC)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n \n-#include <CoreServices/CoreServices.h>\n #include <QProcess>\n \n void ForceActivation();\n@@ -691,87 +688,6 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     return true;\n }\n \n-\n-#elif defined(Q_OS_MAC) && defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED <= 101100\n-// based on: https://github.com/Mozketo/LaunchAtLoginController/blob/master/LaunchAtLoginController.m\n-\n-LSSharedFileListItemRef findStartupItemInList(CFArrayRef listSnapshot, LSSharedFileListRef list, CFURLRef findUrl)\n-{\n-    if (listSnapshot == nullptr) {\n-        return nullptr;\n-    }\n-\n-    // loop through the list of startup items and try to find the bitcoin app\n-    for(int i = 0; i < CFArrayGetCount(listSnapshot); i++) {\n-        LSSharedFileListItemRef item = (LSSharedFileListItemRef)CFArrayGetValueAtIndex(listSnapshot, i);\n-        UInt32 resolutionFlags = kLSSharedFileListNoUserInteraction | kLSSharedFileListDoNotMountVolumes;\n-        CFURLRef currentItemURL = nullptr;\n-\n-#if defined(MAC_OS_X_VERSION_MAX_ALLOWED) && MAC_OS_X_VERSION_MAX_ALLOWED >= 10100\n-        if(&LSSharedFileListItemCopyResolvedURL)\n-            currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, nullptr);\n-#if defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED < 10100\n-        else\n-            LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n-#endif\n-#else\n-        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n-#endif\n-\n-        if(currentItemURL) {\n-            if (CFEqual(currentItemURL, findUrl)) {\n-                // found\n-                CFRelease(currentItemURL);\n-                return item;\n-            }\n-            CFRelease(currentItemURL);\n-        }\n-    }\n-    return nullptr;\n-}\n-\n-bool GetStartOnSystemStartup()\n-{\n-    CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(loginItems, nullptr);\n-    bool res = (findStartupItemInList(listSnapshot, loginItems, bitcoinAppUrl) != nullptr);\n-    CFRelease(bitcoinAppUrl);\n-    CFRelease(loginItems);\n-    CFRelease(listSnapshot);\n-    return res;\n-}\n-\n-bool SetStartOnSystemStartup(bool fAutoStart)\n-{\n-    CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(loginItems, nullptr);\n-    LSSharedFileListItemRef foundItem = findStartupItemInList(listSnapshot, loginItems, bitcoinAppUrl);\n-\n-    if(fAutoStart && !foundItem) {\n-        // add bitcoin app to startup item list\n-        LSSharedFileListInsertItemURL(loginItems, kLSSharedFileListItemBeforeFirst, nullptr, nullptr, bitcoinAppUrl, nullptr, nullptr);\n-    }\n-    else if(!fAutoStart && foundItem) {\n-        // remove item\n-        LSSharedFileListItemRemove(loginItems, foundItem);\n-    }\n-\n-    CFRelease(bitcoinAppUrl);\n-    CFRelease(loginItems);\n-    CFRelease(listSnapshot);\n-    return true;\n-}\n-#pragma GCC diagnostic pop\n #else\n \n bool GetStartOnSystemStartup() { return false; }"
      },
      {
        "sha": "d48c537c75a32325c2bd7c7260a2bb220613f130",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27d82b63fb8869716d2f103fd381c2413bde4d1b/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27d82b63fb8869716d2f103fd381c2413bde4d1b/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=27d82b63fb8869716d2f103fd381c2413bde4d1b",
        "patch": "@@ -71,12 +71,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifdef Q_OS_MAC\n     /* remove Window tab on Mac */\n     ui->tabWidget->removeTab(ui->tabWidget->indexOf(ui->tabWindow));\n-#if  defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED > 101100\n-    /* hide launch at startup option if compiled against macOS > 10.11 (removed API) */\n+    /* hide launch at startup option on macOS */\n     ui->bitcoinAtStartup->setVisible(false);\n     ui->verticalLayout_Main->removeWidget(ui->bitcoinAtStartup);\n     ui->verticalLayout_Main->removeItem(ui->horizontalSpacer_0_Main);\n-#endif\n #endif\n \n     /* remove Wallet tab in case of -disablewallet */"
      }
    ]
  },
  {
    "sha": "596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTZmNjQ2MGY5ZmQ4MjczNjY1Yzg3NTRjY2Q2NzNkOTNhNGYyNWYw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-23T03:41:27Z"
      },
      "message": "Key pool: Move CanGetAddresses call\n\nCall LegacyScriptPubKeyMan::CanGetAddresses directly instead of calling\nCWallet::CanGetAddresses to only query the relevant key manager\n\nThis is a minor change in behavior: call now only happens if a new key needs to\nbe reserved, since if a key is already reserved it might fail unnecessarily.\n\nThis change also serves as a sanity check\nhttps://github.com/bitcoin/bitcoin/pull/16341#discussion_r331238394",
      "tree": {
        "sha": "e61c4da9158cff7385ee7c46d79df719658de673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e61c4da9158cff7385ee7c46d79df719658de673"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/596f6460f9fd8273665c8754ccd673d93a4f25f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9c5f2b5098d492a8355794bf5a682381d4cd3cb1",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "patch": "@@ -264,6 +264,10 @@ bool LegacyScriptPubKeyMan::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n \n bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool)\n {\n+    if (!CanGetAddresses(internal)) {\n+        return false;\n+    }\n+\n     if (!ReserveKeyFromKeyPool(index, keypool, internal)) {\n         return false;\n     }"
      },
      {
        "sha": "89309a01d66046be65978596c31f335bea98d055",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/596f6460f9fd8273665c8754ccd673d93a4f25f0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "patch": "@@ -3298,9 +3298,6 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         return false;\n     }\n \n-    if (!pwallet->CanGetAddresses(internal)) {\n-        return false;\n-    }\n \n     if (nIndex == -1)\n     {"
      }
    ]
  },
  {
    "sha": "3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZWQ1ZTY4MTlhNTA0MzQ0NDlkOTJjYjk2YjlkOGQxNDFlOGM3ZDJi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-19T17:39:50Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-23T06:30:03Z"
      },
      "message": "refactor: Nuke coincontrol circular dependency",
      "tree": {
        "sha": "1a0c6614e275c53e743f2fb16e9877527d50e6be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a0c6614e275c53e743f2fb16e9877527d50e6be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3Y0esACgkQQQEIES5+\nqB/fkw//WCVfDlZcgjTBS4H5S4mcdLRbAyO9wjPSqYpFg4jTv+/mpiJSI98W0XZw\nroTf5XQ63sO3AFlIzQTlHoyb4Rb1OT/AL4fQHl8tu4FU9h9DeykkY4jTwEr3EAg/\nUR88/qeURvc2LwucqZKjlLm8hra2bP2brkDoydUhWSKe/T2hNbMIOdeNGlwJ/Dun\nwt7xX0vV5O9/J+Ct2ko71od5nmK2UXCCaUf1GFN0cbISXf2a4QK5qdAKxKYIysf2\njYJdrbHPBrVGR84ne6Q7GEYGve0URVnbPTlVAp5G/HyZf350fxJHVktJs07w3sfe\noAD8XarmvXXKDj1Tt36/OoV4Nl7PTuprEir/hB93AGqu8nVUpDdYZzFmPArHpx/Y\n/A/Wd6QB0iVqbUlyHwOGY59uVEmA6WvWshv6KbmHkJfG6dDkNQDV3Fgxq0gLtdMR\nExoUqxB4lKOSi+aIlil4kMrHmp/GGd9HdROMqshkmdw4C14Juc4gR25N8jxH5r4E\n/fOww7/vM6yrb87OT41sQKKmV0TfoNpqdCWoQYRfJPpxZA4MM/sJdW4u1aCwQ5DN\ny8jVTe+zCBp2dWkGyvO3kY7toH9lW2CSSYTQaKIg5yIKeoeFx3Vl1KyE5qjd0PSs\nQysvW0DlX8iRRUHVG+MjByEbtjdsenHtKZZ6Vl80fdBDzlrEh44=\n=nVWC\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a0c6614e275c53e743f2fb16e9877527d50e6be\nparent 0b79caf658019de2c65a53c9e11fd1d2f4c369b6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574185190 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574490603 +0200\n\nrefactor: Nuke coincontrol circular dependency\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9c4c9dbb17253b27d053777fa8db5bc2ee44a0d5",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "patch": "@@ -27,6 +27,7 @@\n #include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n #include <wallet/psbtwallet.h>\n+#include <wallet/wallet.h>\n \n #include <QFontMetrics>\n #include <QScrollBar>"
      },
      {
        "sha": "2893d0ab3d807db84bab9f7bb24b05187ed2c0ff",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "patch": "@@ -6,14 +6,18 @@\n #define BITCOIN_WALLET_COINCONTROL_H\n \n #include <optional.h>\n+#include <outputtype.h>\n #include <policy/feerate.h>\n #include <policy/fees.h>\n #include <primitives/transaction.h>\n-#include <wallet/wallet.h>\n+#include <script/standard.h>\n \n const int DEFAULT_MIN_DEPTH = 0;\n const int DEFAULT_MAX_DEPTH = 9999999;\n \n+//! Default for -avoidpartialspends\n+static constexpr bool DEFAULT_AVOIDPARTIALSPENDS = false;\n+\n /** Coin Control Features. */\n class CCoinControl\n {"
      },
      {
        "sha": "dd0d2ffbd7d55d55042025d159a0ad6f52c47b86",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "patch": "@@ -8,9 +8,11 @@\n #include <net.h>\n #include <node/context.h>\n #include <outputtype.h>\n+#include <ui_interface.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/translation.h>\n+#include <wallet/coincontrol.h>\n #include <wallet/wallet.h>\n #include <walletinitinterface.h>\n "
      },
      {
        "sha": "51df4a9a8b2f41190d6f9b6492b4963f44afa7aa",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "patch": "@@ -71,8 +71,6 @@ static const CAmount WALLET_INCREMENTAL_RELAY_FEE = 5000;\n static const bool DEFAULT_SPEND_ZEROCONF_CHANGE = true;\n //! Default for -walletrejectlongchains\n static const bool DEFAULT_WALLET_REJECT_LONG_CHAINS = false;\n-//! Default for -avoidpartialspends\n-static const bool DEFAULT_AVOIDPARTIALSPENDS = false;\n //! -txconfirmtarget default\n static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 6;\n //! -walletrbf default"
      },
      {
        "sha": "1538ad77b18a1caec7f820a29bdfb0c541c828b1",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "patch": "@@ -22,7 +22,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n     \"txmempool -> validation -> txmempool\"\n-    \"wallet/coincontrol -> wallet/wallet -> wallet/coincontrol\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\""
      }
    ]
  },
  {
    "sha": "f6e42256fe8900ed90f9644906b77f97e1600952",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmU0MjI1NmZlODkwMGVkOTBmOTY0NDkwNmI3N2Y5N2UxNjAwOTUy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-23T09:28:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-23T09:30:41Z"
      },
      "message": "build: Allow export of environ symbols\n\nThis export was introduced in #17270 which added\n```\n//! Necessary on some platforms\nextern char** environ;\n```",
      "tree": {
        "sha": "faab9d5cf81b6067eee0fc21900834f2934c1574",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faab9d5cf81b6067eee0fc21900834f2934c1574"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6e42256fe8900ed90f9644906b77f97e1600952",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6e42256fe8900ed90f9644906b77f97e1600952",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6e42256fe8900ed90f9644906b77f97e1600952",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6e42256fe8900ed90f9644906b77f97e1600952/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f15a317602727d24f60d0bbf43f851b33df3228",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f15a317602727d24f60d0bbf43f851b33df3228",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f15a317602727d24f60d0bbf43f851b33df3228"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0c59ab62396c7f6310f8b53561a8ed8daffba3ab",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6e42256fe8900ed90f9644906b77f97e1600952/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6e42256fe8900ed90f9644906b77f97e1600952/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=f6e42256fe8900ed90f9644906b77f97e1600952",
        "patch": "@@ -47,7 +47,8 @@\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')"
      }
    ]
  },
  {
    "sha": "b509554433cb4bd32852239d0dd195ec059657f6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTA5NTU0NDMzY2I0YmQzMjg1MjIzOWQwZGQxOTVlYzA1OTY1N2Y2",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-23T15:49:16Z"
      },
      "committer": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-23T15:49:16Z"
      },
      "message": "Added libtest_util library to msvc build configuration.",
      "tree": {
        "sha": "246003db366832f514dc1c4a22f7862270015d50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/246003db366832f514dc1c4a22f7862270015d50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b509554433cb4bd32852239d0dd195ec059657f6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEnTzIanL4SUNC6l/RCkG9w/T6/xwFAl3ZVPwACgkQCkG9w/T6\n/xw75g/+NohRHBtq9Oqi4NhqOy0gPhy4TLrnIzk4Za5snx+KbmqMJihj60B0dI3u\naYL6Bx/0oriTWHxX5BoSNLz1zOpQ4DDgK7e8eHfpEji4te4Vh8q1ZQorJ/VOJDgX\nUMc0ocwkMWL/u5lud9pcBuV9X+i49G4oZ4K+XMSND/LdkjzwJ/M7bwu0LH+tq8sa\nabpo79iephmBfy56cFTO+vuubphRi8fWfmFhilBquvbyJWmtRWdtWeIhNe3YMygp\ntXxm15Eg/SB2BjT9jhQwzPQrxgeFgkwwRpH/Vs+kjBXmuB2NjLW5sI0AZO0pwWeY\nvr8L3gHaMm40zuXe153wDcuF3GdzD5lCOf8BjkBefyhsoYlj18NHc5kYYoCwfyrH\nvjK5UuRJv2iw6TLJUgEQOhNccwm4s3vJthSgMPnUyhapruP5GtO8+Hl717lH4z+/\nbpLYnpY5I2rcBhC6uTyn4BXIyDgMmcseyLlkZtwsGHsLhsnJoOPn6VMoSki5roax\nptdxVqea14sesZl7LVwnC1jRqJu6Dh3IgQZl+sr+jrkP1kM/BFpTX8obIxfnyB8B\n19qpoCEEL0JqelHrjhiOpcXF1CEwgXUcH6n2nXnNwUXd7YTdtEgoQX5rD27AbD2i\nkaTX1DrNh/vr6I0+dp1s1smlix89OPeyYhJFvkjPydXvX3kNQvA=\n=FjsZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 246003db366832f514dc1c4a22f7862270015d50\nparent 4effd67bf407e25e776a37739c6ca103e1f26d74\nauthor Aaron Clauson <aaron@sipsorcery.com> 1574524156 +0000\ncommitter Aaron Clauson <aaron@sipsorcery.com> 1574524156 +0000\n\nAdded libtest_util library to msvc build configuration.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b509554433cb4bd32852239d0dd195ec059657f6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b509554433cb4bd32852239d0dd195ec059657f6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b509554433cb4bd32852239d0dd195ec059657f6/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4effd67bf407e25e776a37739c6ca103e1f26d74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4effd67bf407e25e776a37739c6ca103e1f26d74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4effd67bf407e25e776a37739c6ca103e1f26d74"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 36,
      "deletions": 1
    },
    "files": [
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=b509554433cb4bd32852239d0dd195ec059657f6",
        "patch": "@@ -42,6 +42,9 @@\n     <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n       <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n   </ItemGroup>\n   <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>"
      },
      {
        "sha": "9dff0e316e5043d2f81f773f3d446e9293022384",
        "filename": "build_msvc/bitcoin.sln",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=b509554433cb4bd32852239d0dd195ec059657f6",
        "patch": "@@ -44,6 +44,8 @@ Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n Global\n     GlobalSection(SolutionConfigurationPlatforms) = preSolution\n         Debug|x64 = Debug|x64\n@@ -220,11 +222,21 @@ Global\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n     EndGlobalSection\n     GlobalSection(SolutionProperties) = preSolution\n         HideSolutionNode = FALSE\n     EndGlobalSection\n     GlobalSection(ExtensibilityGlobals) = postSolution\n-        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n     EndGlobalSection\n EndGlobal"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=b509554433cb4bd32852239d0dd195ec059657f6",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "39514384086a65ac93d43c90bcef39b2e028014a",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=b509554433cb4bd32852239d0dd195ec059657f6",
        "patch": "@@ -18,6 +18,7 @@\n     'libbitcoin_wallet',\n     'libbitcoin_zmq',\n     'bench_bitcoin',\n+    'libtest_util',\n ]\n \n ignore_list = ["
      },
      {
        "sha": "96d20a2720490d27c536ef18a5b92784ba607c50",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b509554433cb4bd32852239d0dd195ec059657f6/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=b509554433cb4bd32852239d0dd195ec059657f6",
        "patch": "@@ -42,6 +42,9 @@\n     <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n       <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n     <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n       <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n     </ProjectReference>"
      }
    ]
  },
  {
    "sha": "33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2MxMDNlMmZlNjdlMzJlOWY0ZTc4M2ZhMjQzZGQyYmJhNmIxNjgy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-23T16:16:46Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-23T16:30:15Z"
      },
      "message": "Merge #17539: doc: Update and improve Developer Notes\n\n794fe91395c79f46a6d920bc08de5a0551b359a3 doc: Update and improve Developer Notes (Hennadii Stepanov)\n\nPull request description:\n\n  This PR:\n  - removes outdated things, e.g., global pointer `pwalletMain` etc\n  - adds \"Sanitizers\" to the TOC\n  - makes filenames, `peer.dat` and `debug.log`, monospaced\n  - specifies that _compile-time_ constant names are all uppercase\n  - rewords using `explicit` with constructors\n\nACKs for top commit:\n  jamesob:\n    lazy ACK https://github.com/bitcoin/bitcoin/pull/17539/commits/794fe91395c79f46a6d920bc08de5a0551b359a3\n  practicalswift:\n    ACK 794fe91395c79f46a6d920bc08de5a0551b359a3 -- nice improvements!\n\nTree-SHA512: 2c5f035b1627f5fac8dc2453199d9e46bd101f86771de567cd95698de3c61cc459444ec1a68710e1d280195e1e40b42d9f40906297d12f12bf37749eca58297d",
      "tree": {
        "sha": "2837b098305d95cfd7385cf8955030604629a42e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2837b098305d95cfd7385cf8955030604629a42e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3ZXpcACgkQLuufXMCV\nJsFHtxAAitL/zPIosvooQEzw5Zmft6M+sNdcq3jdwPoAVN95vqiHBGs3vgIUTDDb\n9plcI44PlxCvcRnNv8G7Ndsd7rVDa2QkApxACwNDL7FvRBSJjdoETbKDWdN4NRbX\nazQ0ZU8e4Ei0JCy2+JWSsKZ4o0a4sKMch0czx/hcHNA0WeUX+Fa/5HDYFqC8dzAG\nvIbdIN4+X1FGTkHEQ2AcS/63xSiu1/NJCcYFAlwtXLuJnqm/KCnJh2AWChHTso4W\n1xlc6KFPvF18CPFqqtC0LqI7tJAvqereSrPcEV/3A1zSnAEX7UIARpkoW/unWHbi\nOmhr1pDrU0ml7JonzR8appJi3wd5f9YPrv9TiGFn4d4lpRBkFbest1r0PvXF0DnQ\nMD0Dm/aalq4il8JTSNojvEHbGf7sIWbIqX90DQbmXOB6hUcKWxt+N0aBrJZ60PuG\nGQ2JKq9cTFyXww1N9iPbTe394w4bG6vGBuLupwvNugR2gQ4FYfQUDhbsx8CU2LVu\nEU03zKvLwfZkWeV5z282xQAlBxAWc3d0qh10YE+k0qXG5Wf8O2u70/vqaBNbZqqK\n0pIn6RDWQ+mgqV5Cyx5lwee4/eJ0rHbUYCyFjfw3TfEi94vcZ02WASXzWbdmz0Ej\nWcEFh0H27c89mYbBaFYRCrH2QMSm1QYtG+RU04a6slNTtWIpoIs=\n=Q7Q/\n-----END PGP SIGNATURE-----",
        "payload": "tree 2837b098305d95cfd7385cf8955030604629a42e\nparent 0b79caf658019de2c65a53c9e11fd1d2f4c369b6\nparent 794fe91395c79f46a6d920bc08de5a0551b359a3\nauthor fanquake <fanquake@gmail.com> 1574525806 -0500\ncommitter fanquake <fanquake@gmail.com> 1574526615 -0500\n\nMerge #17539: doc: Update and improve Developer Notes\n\n794fe91395c79f46a6d920bc08de5a0551b359a3 doc: Update and improve Developer Notes (Hennadii Stepanov)\n\nPull request description:\n\n  This PR:\n  - removes outdated things, e.g., global pointer `pwalletMain` etc\n  - adds \"Sanitizers\" to the TOC\n  - makes filenames, `peer.dat` and `debug.log`, monospaced\n  - specifies that _compile-time_ constant names are all uppercase\n  - rewords using `explicit` with constructors\n\nACKs for top commit:\n  jamesob:\n    lazy ACK https://github.com/bitcoin/bitcoin/pull/17539/commits/794fe91395c79f46a6d920bc08de5a0551b359a3\n  practicalswift:\n    ACK 794fe91395c79f46a6d920bc08de5a0551b359a3 -- nice improvements!\n\nTree-SHA512: 2c5f035b1627f5fac8dc2453199d9e46bd101f86771de567cd95698de3c61cc459444ec1a68710e1d280195e1e40b42d9f40906297d12f12bf37749eca58297d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c103e2fe67e32e9f4e783fa243dd2bba6b1682/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      },
      {
        "sha": "794fe91395c79f46a6d920bc08de5a0551b359a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/794fe91395c79f46a6d920bc08de5a0551b359a3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/794fe91395c79f46a6d920bc08de5a0551b359a3"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 16,
      "deletions": 24
    },
    "files": [
      {
        "sha": "49f60c54ec8627473bdc38096a6f4fecc5f6c48e",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 24,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33c103e2fe67e32e9f4e783fa243dd2bba6b1682/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33c103e2fe67e32e9f4e783fa243dd2bba6b1682/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
        "patch": "@@ -12,12 +12,13 @@ Developer Notes\n     - [Development tips and tricks](#development-tips-and-tricks)\n         - [Compiling for debugging](#compiling-for-debugging)\n         - [Compiling for gprof profiling](#compiling-for-gprof-profiling)\n-        - [debug.log](#debuglog)\n+        - [`debug.log`](#debuglog)\n         - [Testnet and Regtest modes](#testnet-and-regtest-modes)\n         - [DEBUG_LOCKORDER](#debug_lockorder)\n         - [Valgrind suppressions file](#valgrind-suppressions-file)\n         - [Compiling for test coverage](#compiling-for-test-coverage)\n         - [Performance profiling with perf](#performance-profiling-with-perf)\n+        - [Sanitizers](#sanitizers)\n     - [Locking/mutex usage notes](#lockingmutex-usage-notes)\n     - [Threads](#threads)\n     - [Ignoring IDE/editor files](#ignoring-ideeditor-files)\n@@ -63,7 +64,7 @@ tool to clean up patches automatically before submission.\n   - Braces on the same line for everything else.\n   - 4 space indentation (no tabs) for every block except namespaces.\n   - No indentation for `public`/`protected`/`private` or for `namespace`.\n-  - No extra spaces inside parenthesis; don't do ( this ).\n+  - No extra spaces inside parenthesis; don't do `( this )`.\n   - No space after function names; one space after `if`, `for` and `while`.\n   - If an `if` only has a single-statement `then`-clause, it can appear\n     on the same line as the `if`, without braces. In every other case,\n@@ -77,7 +78,7 @@ code.\n     separate words (snake_case).\n     - Class member variables have a `m_` prefix.\n     - Global variables have a `g_` prefix.\n-  - Constant names are all uppercase, and use `_` to separate words.\n+  - Compile-time constant names are all uppercase, and use `_` to separate words.\n   - Class names, function names, and method names are UpperCamelCase\n     (PascalCase). Do not prefix class names with `C`.\n   - Test suite naming convention: The Boost test suite in file\n@@ -208,15 +209,15 @@ produce better debugging builds.\n \n Run configure with the `--enable-gprof` option, then make.\n \n-### debug.log\n+### `debug.log`\n \n-If the code is behaving strangely, take a look in the debug.log file in the data directory;\n+If the code is behaving strangely, take a look in the `debug.log` file in the data directory;\n error and debugging messages are written there.\n \n The `-debug=...` command-line option controls debugging; running with just `-debug` or `-debug=1` will turn\n-on all categories (and give you a very large debug.log file).\n+on all categories (and give you a very large `debug.log` file).\n \n-The Qt code routes `qDebug()` output to debug.log under category \"qt\": run with `-debug=qt`\n+The Qt code routes `qDebug()` output to `debug.log` under category \"qt\": run with `-debug=qt`\n to see it.\n \n ### Testnet and Regtest modes\n@@ -234,7 +235,7 @@ Bitcoin Core is a multi-threaded application, and deadlocks or other\n multi-threading bugs can be very difficult to track down. The `--enable-debug`\n configure option adds `-DDEBUG_LOCKORDER` to the compiler flags. This inserts\n run-time checks to keep track of which locks are held and adds warnings to the\n-debug.log file if inconsistencies are detected.\n+`debug.log` file if inconsistencies are detected.\n \n ### Valgrind suppressions file\n \n@@ -276,8 +277,7 @@ the functional test framework. Perf can observe a running process and sample\n (at some frequency) where its execution is.\n \n Perf installation is contingent on which kernel version you're running; see\n-[this StackExchange\n-thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n+[this thread](https://askubuntu.com/questions/50145/how-to-install-perf-monitoring-tool)\n for specific instructions.\n \n Certain kernel parameters may need to be set for perf to be able to inspect the\n@@ -312,7 +312,7 @@ or using a graphical tool like [Hotspot](https://github.com/KDAB/hotspot).\n See the functional test documentation for how to invoke perf within tests.\n \n \n-**Sanitizers**\n+### Sanitizers\n \n Bitcoin Core can be compiled with various \"sanitizers\" enabled, which add\n instrumentation for issues regarding things like memory safety, thread race\n@@ -373,7 +373,7 @@ Deadlocks due to inconsistent lock ordering (thread 1 locks `cs_main` and then\n `cs_wallet`, while thread 2 locks them in the opposite order: result, deadlock\n as each waits for the other to release its lock) are a problem. Compile with\n `-DDEBUG_LOCKORDER` (or use `--enable-debug`) to get lock order inconsistencies\n-reported in the debug.log file.\n+reported in the `debug.log` file.\n \n Re-architecting the core code so there are better-defined interfaces\n between the various components is a goal, with any necessary locking\n@@ -387,8 +387,6 @@ Threads\n \n - ThreadImport : Loads blocks from `blk*.dat` files or `-loadblock=<file>`.\n \n-- StartNode : Starts other threads.\n-\n - ThreadDNSAddressSeed : Loads addresses of peers from the DNS.\n \n - ThreadMapPort : Universal plug-and-play startup/shutdown.\n@@ -401,7 +399,7 @@ Threads\n \n - ThreadMessageHandler : Higher-level message handling (sending and receiving).\n \n-- DumpAddresses : Dumps IP addresses of nodes to peers.dat.\n+- DumpAddresses : Dumps IP addresses of nodes to `peers.dat`.\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n@@ -467,11 +465,6 @@ Wallet\n \n - Make sure that no crashes happen with run-time option `-disablewallet`.\n \n-  - *Rationale*: In RPC code that conditionally uses the wallet (such as\n-    `validateaddress`), it is easy to forget that global pointer `pwalletMain`\n-    can be nullptr. See `test/functional/disablewallet.py` for functional tests\n-    exercising the API with `-disablewallet`.\n-\n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set.\n \n   - *Rationale*: Otherwise compilation of the disable-wallet build will fail in environments without BerkeleyDB.\n@@ -546,11 +539,10 @@ class A\n }\n ```\n \n-- By default, declare single-argument constructors `explicit`.\n+- By default, declare constructors `explicit`.\n \n-  - *Rationale*: This is a precaution to avoid unintended conversions that might\n-    arise when single-argument constructors are used as implicit conversion\n-    functions.\n+  - *Rationale*: This is a precaution to avoid unintended\n+    [conversions](https://en.cppreference.com/w/cpp/language/converting_constructor).\n \n - Use explicitly signed or unsigned `char`s, or even better `uint8_t` and\n   `int8_t`. Do not use bare `char` unless it is to pass to a third-party API."
      }
    ]
  },
  {
    "sha": "2c98e2024d52778259474b03b96448bc3a173632",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzk4ZTIwMjRkNTI3NzgyNTk0NzRiMDNiOTY0NDhiYzNhMTczNjMy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-23T17:28:12Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-23T17:39:16Z"
      },
      "message": "Merge #17571: Add libtest_util library to msvc build configuration\n\nb509554433cb4bd32852239d0dd195ec059657f6 Added libtest_util library to msvc build configuration. (Aaron Clauson)\n\nPull request description:\n\n  libtest_util was introduced in #17542. This PR adds the msvc build configuration.\n\nACKs for top commit:\n  fanquake:\n    ACK b509554433cb4bd32852239d0dd195ec059657f6 - Appveyor looks good.\n\nTree-SHA512: abd9f8427375ae0e75e8227d853cccc666fd9e906038d97b787d9185dec1024232a6c64301e26e66fcaf86492183328abe4a7abd7af3321f062cd8722eb83b4c",
      "tree": {
        "sha": "f5d65f2ddffd3721255ba729f74dc7df1e0f3451",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f5d65f2ddffd3721255ba729f74dc7df1e0f3451"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c98e2024d52778259474b03b96448bc3a173632",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3ZbsQACgkQLuufXMCV\nJsHrpQ/+KxrkzWGdj0JjAUSc52lXCCF1YQDWlotyWiLtYGvwfwApgBv85oMaKAR1\nJemVOTCqHXMQ/7ln+F2hXB+xhstXeI8EJ6YoHt/HoNY5NTN1JhlreZ4iduXXwuK2\nWbaLiZeer8BEfi3eYR31xyiFT1AkOTVWLlND1OcaCR/MvCreKlFdx2ggtilnaig8\nM2011L/ptudU3XNxdWEeDPHibWdQMrPIs/0We7qJZrLIL7aNtdzqO6L3G9Hy4X7s\nWmDJObzAew2RDzdPWdtIaY/K8VIF0MofhU7qiKcsAv2Ek3u08P/Yl55Vpvo0iPCC\nvKt1z97Z9W84R3nYaGCJTFbuZdyfgVZpN/H3Gj06M1cSbH2XQnO8TMVxkKYIlpbr\n7PIR1bIuJzkxjs/F7KiLdo7YCdsDxG6XM6iu9W9JXq6+GQ+Yw4fxpdI9pvcg0nRd\n+fV1p9p0skty1/E7leLOoMhEB3l5YPn1nKvLU6FLRLDapBMt4Va4WBXl2KjxpvDg\n5goLDY0Dg5ZeOcjj7247uPA6MZ3e93hJFGqFgx/0Ne/ZCFTdf6l98rt8psFd0K5t\nAZAzgex4CpzRQex8oAF3yFS6I9FT0pqHv7JRIBOnwvFW/pA6p6Hp9FGaUUF18uke\nN3lM7CEc0cm41nrP5+gUeYM0sTesICn6kmjwmY2iOAc6fvB7vCc=\n=15sm\n-----END PGP SIGNATURE-----",
        "payload": "tree f5d65f2ddffd3721255ba729f74dc7df1e0f3451\nparent 33c103e2fe67e32e9f4e783fa243dd2bba6b1682\nparent b509554433cb4bd32852239d0dd195ec059657f6\nauthor fanquake <fanquake@gmail.com> 1574530092 -0500\ncommitter fanquake <fanquake@gmail.com> 1574530756 -0500\n\nMerge #17571: Add libtest_util library to msvc build configuration\n\nb509554433cb4bd32852239d0dd195ec059657f6 Added libtest_util library to msvc build configuration. (Aaron Clauson)\n\nPull request description:\n\n  libtest_util was introduced in #17542. This PR adds the msvc build configuration.\n\nACKs for top commit:\n  fanquake:\n    ACK b509554433cb4bd32852239d0dd195ec059657f6 - Appveyor looks good.\n\nTree-SHA512: abd9f8427375ae0e75e8227d853cccc666fd9e906038d97b787d9185dec1024232a6c64301e26e66fcaf86492183328abe4a7abd7af3321f062cd8722eb83b4c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c98e2024d52778259474b03b96448bc3a173632",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c98e2024d52778259474b03b96448bc3a173632",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c98e2024d52778259474b03b96448bc3a173632/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33c103e2fe67e32e9f4e783fa243dd2bba6b1682"
      },
      {
        "sha": "b509554433cb4bd32852239d0dd195ec059657f6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b509554433cb4bd32852239d0dd195ec059657f6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b509554433cb4bd32852239d0dd195ec059657f6"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 36,
      "deletions": 1
    },
    "files": [
      {
        "sha": "128c1bd8e7b6bd0622eefee3b5be73c47907b1e8",
        "filename": "build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bench_bitcoin/bench_bitcoin.vcxproj.in?ref=2c98e2024d52778259474b03b96448bc3a173632",
        "patch": "@@ -42,6 +42,9 @@\n     <ProjectReference Include=\"..\\libleveldb\\libleveldb.vcxproj\">\n       <Project>{18430fef-6b61-4c53-b396-718e02850f1b}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n   </ItemGroup>\n   <Target Name=\"RawBenchHeaderGen\" BeforeTargets=\"PrepareForBuild\">\n     <PropertyGroup>"
      },
      {
        "sha": "9dff0e316e5043d2f81f773f3d446e9293022384",
        "filename": "build_msvc/bitcoin.sln",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/bitcoin.sln",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/bitcoin.sln",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/bitcoin.sln?ref=2c98e2024d52778259474b03b96448bc3a173632",
        "patch": "@@ -44,6 +44,8 @@ Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libbitcoin_qt\", \"libbitcoin\n EndProject\n Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"bitcoin-qt\", \"bitcoin-qt\\bitcoin-qt.vcxproj\", \"{7E99172D-7FF2-4CB6-B736-AC9B76ED412A}\"\n EndProject\n+Project(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"libtest_util\", \"libtest_util\\libtest_util.vcxproj\", \"{868474FD-35F6-4400-8EED-30A33E7521D4}\"\n+EndProject\n Global\n     GlobalSection(SolutionConfigurationPlatforms) = preSolution\n         Debug|x64 = Debug|x64\n@@ -220,11 +222,21 @@ Global\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x64.Build.0 = Release|x64\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.ActiveCfg = Release|Win32\n         {7E99172D-7FF2-4CB6-B736-AC9B76ED412A}.Release|x86.Build.0 = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.ActiveCfg = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x64.Build.0 = Debug|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.ActiveCfg = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Debug|x86.Build.0 = Debug|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.ActiveCfg = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x64.Build.0 = Release|x64\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.ActiveCfg = Release|Win32\n+        {868474FD-35F6-4400-8EED-30A33E7521D4}.Release|x86.Build.0 = Release|Win32\n     EndGlobalSection\n     GlobalSection(SolutionProperties) = preSolution\n         HideSolutionNode = FALSE\n     EndGlobalSection\n     GlobalSection(ExtensibilityGlobals) = postSolution\n-        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                        SolutionGuid = {8AA72EDA-2CD4-4564-B1E4-688B760EEEE9}\n+                SolutionGuid = {8607C0F4-F33D-41B8-8D51-18E366A0F8DF}\n+        SolutionGuid = {58AAB032-7274-49BD-845E-5EF4DBB69B70}\n     EndGlobalSection\n EndGlobal"
      },
      {
        "sha": "b5e844010e9197706dc0d75582fe2d3983bebfb5",
        "filename": "build_msvc/libtest_util/libtest_util.vcxproj.in",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/libtest_util/libtest_util.vcxproj.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/libtest_util/libtest_util.vcxproj.in?ref=2c98e2024d52778259474b03b96448bc3a173632",
        "patch": "@@ -0,0 +1,16 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<Project DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\n+  <Import Project=\"..\\common.init.vcxproj\" />\n+  <PropertyGroup Label=\"Globals\">\n+    <ProjectGuid>{868474FD-35F6-4400-8EED-30A33E7521D4}</ProjectGuid>\n+  </PropertyGroup>\n+  <PropertyGroup Label=\"Configuration\">\n+    <ConfigurationType>StaticLibrary</ConfigurationType>\n+  </PropertyGroup>\n+  <ItemGroup>\n+@SOURCE_FILES@\n+  </ItemGroup>\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.props\" />\n+  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\n+  <Import Project=\"..\\common.vcxproj\" />\n+</Project>"
      },
      {
        "sha": "39514384086a65ac93d43c90bcef39b2e028014a",
        "filename": "build_msvc/msvc-autogen.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/msvc-autogen.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/msvc-autogen.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/msvc-autogen.py?ref=2c98e2024d52778259474b03b96448bc3a173632",
        "patch": "@@ -18,6 +18,7 @@\n     'libbitcoin_wallet',\n     'libbitcoin_zmq',\n     'bench_bitcoin',\n+    'libtest_util',\n ]\n \n ignore_list = ["
      },
      {
        "sha": "96d20a2720490d27c536ef18a5b92784ba607c50",
        "filename": "build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c98e2024d52778259474b03b96448bc3a173632/build_msvc/test_bitcoin/test_bitcoin.vcxproj",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/test_bitcoin/test_bitcoin.vcxproj?ref=2c98e2024d52778259474b03b96448bc3a173632",
        "patch": "@@ -42,6 +42,9 @@\n     <ProjectReference Include=\"..\\libbitcoin_zmq\\libbitcoin_zmq.vcxproj\">\n       <Project>{792d487f-f14c-49fc-a9de-3fc150f31c3f}</Project>\n     </ProjectReference>\n+    <ProjectReference Include=\"..\\libtest_util\\libtest_util.vcxproj\">\n+      <Project>{1e065f03-3566-47d0-8fa9-daa72b084e7d}</Project>\n+    </ProjectReference>\n     <ProjectReference Include=\"..\\libunivalue\\libunivalue.vcxproj\">\n       <Project>{5724ba7d-a09a-4ba8-800b-c4c1561b3d69}</Project>\n     </ProjectReference>"
      }
    ]
  },
  {
    "sha": "02d8c56a18b9a2960888d6ec1209955105bae847",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmQ4YzU2YTE4YjlhMjk2MDg4OGQ2ZWMxMjA5OTU1MTA1YmFlODQ3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-23T16:42:23Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2019-11-23T21:06:34Z"
      },
      "message": "Seed RNG with precision timestamps on receipt of net messages.",
      "tree": {
        "sha": "9013a23918ed55059a39fa56ae93ef6951456607",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9013a23918ed55059a39fa56ae93ef6951456607"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02d8c56a18b9a2960888d6ec1209955105bae847",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02d8c56a18b9a2960888d6ec1209955105bae847",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02d8c56a18b9a2960888d6ec1209955105bae847",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02d8c56a18b9a2960888d6ec1209955105bae847/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33c103e2fe67e32e9f4e783fa243dd2bba6b1682",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33c103e2fe67e32e9f4e783fa243dd2bba6b1682"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 51,
      "deletions": 0
    },
    "files": [
      {
        "sha": "99dae88bab7155d2043b8a218c377e91e1765a2e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02d8c56a18b9a2960888d6ec1209955105bae847/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02d8c56a18b9a2960888d6ec1209955105bae847/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=02d8c56a18b9a2960888d6ec1209955105bae847",
        "patch": "@@ -16,6 +16,7 @@\n #include <crypto/sha256.h>\n #include <netbase.h>\n #include <net_permissions.h>\n+#include <random.h>\n #include <scheduler.h>\n #include <ui_interface.h>\n #include <util/strencodings.h>\n@@ -445,6 +446,9 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false, block_relay_only);\n     pnode->AddRef();\n \n+    // We're making a new connection, harvest entropy from the time (and our peer count)\n+    RandAddEvent((uint32_t)id);\n+\n     return pnode;\n }\n \n@@ -693,6 +697,9 @@ CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageSta\n     msg.m_message_size = hdr.nMessageSize;\n     msg.m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n+    // We just received a message off the wire, harvest entropy from the time (and the message checksum)\n+    RandAddEvent(ReadLE32(hash.begin()));\n+\n     msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n     if (!msg.m_valid_checksum) {\n         LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n@@ -1017,6 +1024,9 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n         LOCK(cs_vNodes);\n         vNodes.push_back(pnode);\n     }\n+\n+    // We received a new connection, harvest entropy from the time (and our peer count)\n+    RandAddEvent((uint32_t)id);\n }\n \n void CConnman::DisconnectNodes()"
      },
      {
        "sha": "09777237c20758367edec6fcba8c621f04de2f81",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02d8c56a18b9a2960888d6ec1209955105bae847/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02d8c56a18b9a2960888d6ec1209955105bae847/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=02d8c56a18b9a2960888d6ec1209955105bae847",
        "patch": "@@ -6,6 +6,7 @@\n #include <random.h>\n \n #include <compat/cpuid.h>\n+#include <crypto/sha256.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n@@ -449,6 +450,23 @@ static void SeedFast(CSHA512& hasher) noexcept\n     SeedTimestamp(hasher);\n }\n \n+// We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n+// since we want it to be fast as network peers may be able to trigger it repeatedly.\n+static Mutex events_mutex;\n+static CSHA256 events_hasher;\n+static void SeedEvents(CSHA512& hasher)\n+{\n+    LOCK(events_mutex);\n+\n+    unsigned char events_hash[32];\n+    events_hasher.Finalize(events_hash);\n+    hasher.Write(events_hash, 32);\n+\n+    // Re-initialize the hasher with the finalized state to use later.\n+    events_hasher.Reset();\n+    events_hasher.Write(events_hash, 32);\n+}\n+\n static void SeedSlow(CSHA512& hasher) noexcept\n {\n     unsigned char buffer[32];\n@@ -460,6 +478,9 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     GetOSRand(buffer);\n     hasher.Write(buffer, sizeof(buffer));\n \n+    // Add the events hasher into the mix\n+    SeedEvents(hasher);\n+\n     // High-precision timestamp.\n     //\n     // Note that we also commit to a timestamp in the Fast seeder, so we indirectly commit to a\n@@ -485,6 +506,9 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n     // High-precision timestamp\n     SeedTimestamp(hasher);\n \n+    // Add the events hasher into the mix\n+    SeedEvents(hasher);\n+\n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n@@ -553,6 +577,15 @@ void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNG\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n+void RandAddEvent(const uint32_t event_info) {\n+    LOCK(events_mutex);\n+    events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n+    // Get the low four bytes of the performance counter. This translates to roughly the\n+    // subsecond part.\n+    uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n+    events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n+}\n+\n bool g_mock_deterministic_tests{false};\n \n uint64_t GetRand(uint64_t nMax) noexcept"
      },
      {
        "sha": "b6e70fcb1fc6774416b136bd84d95b9cb0e2e16e",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02d8c56a18b9a2960888d6ec1209955105bae847/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02d8c56a18b9a2960888d6ec1209955105bae847/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=02d8c56a18b9a2960888d6ec1209955105bae847",
        "patch": "@@ -89,6 +89,14 @@ void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n  */\n void RandAddPeriodic();\n \n+/**\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n+ *\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info);\n+\n /**\n  * Fast randomness source. This is seeded once with secure random data, but\n  * is completely deterministic and does not gather more entropy after that."
      }
    ]
  },
  {
    "sha": "9cbd87d8ee2910ac55c215451453e5162e1c377a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2JkODdkOGVlMjkxMGFjNTVjMjE1NDUxNDUzZTUxNjJlMWMzNzdh",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-24T05:26:03Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-24T05:26:17Z"
      },
      "message": "Merge #17518: refactor, wallet: Nuke coincontrol circular dependency\n\n3ed5e6819a50434449d92cb96b9d8d141e8c7d2b refactor: Nuke coincontrol circular dependency (Hennadii Stepanov)\n\nPull request description:\n\n  This PR gets rid of `wallet/coincontrol` -> `wallet/wallet` -> `wallet/coincontrol` circular dependency.\n\nACKs for top commit:\n  Sjors:\n    re-ACK 3ed5e6819a50434449d92cb96b9d8d141e8c7d2b\n  meshcollider:\n    utACK 3ed5e6819a50434449d92cb96b9d8d141e8c7d2b\n\nTree-SHA512: 7fbceb74a9cd04157170df158d2deb979cf397df818376b478224d2423f1d8504a8688e3a9b8fc527da73e4a34ab6bc4a98be0cc2937e102a063ab2ac553e86d",
      "tree": {
        "sha": "b1c112f792be2cdbe72ca6748718d6aa7e9964a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1c112f792be2cdbe72ca6748718d6aa7e9964a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cbd87d8ee2910ac55c215451453e5162e1c377a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3aFHkACgkQ0wARbhyH\nWj3YsA/+OSKV4CBKwE05kX570YL21jaSKkI9lHmiu2i2UfxhQc2BecmASzLJ8tAY\nAkeWMpBW3SVchnZWPw7hpD/FwpVGhALOzsQjRI8KASHVMKEeObRp00T5Zg4T2d/7\ntGR9bGhHB9wKxqMd+xwfoDrh+t99ViZC/af6sx8koQOzJOfgcj6uuChEufPa+SUA\nRL+oh7/ytcf2+6W2uDstUnBBmUj8MOoHuAmh8QYd1cwCgS+UJBGNIMfybIKe2lac\nPGuy9iypfb+8LEwrA+meAZdBkMd+3LJhd+/gKqpQdNr2n0SLDbKdKMm4YxkgQXeE\nB2PALa5fGZ9fNhKQWaUnITCOx5pYGwSCRHwPP4Fj+AC4l5SgaER+gT1VeIyGKkWj\ngTmjqR1kFjLn2p9Y4hXXs754VjbJiyN2H8fnSr9CPXN8ha3LDt+QECRXomV543vd\nMVd7Lmc9TkZeDpVZgfnWV8qGZ+E2rzpF4v04pyT5YpiTzm4SrckFIOb0os2n+bBX\nIZk6GE5IiwL22s6yKLURhnK323+eJJgJK35M82TZ/RAkvkZOu0z81xYjiE0sR0iE\nyGj7XQKtMNTsuYz6CwV9QhmHvyDE+1ICkS0m0ST8rg50KG7DFKMPL8gE+/HL3t0/\nORn1RiJIg2ftD7n6U0jdcyqtgwD3nQxTrQwxz6r2EmX9Q7qDLRk=\n=hsmb\n-----END PGP SIGNATURE-----",
        "payload": "tree b1c112f792be2cdbe72ca6748718d6aa7e9964a1\nparent 2c98e2024d52778259474b03b96448bc3a173632\nparent 3ed5e6819a50434449d92cb96b9d8d141e8c7d2b\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574573163 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574573177 +1300\n\nMerge #17518: refactor, wallet: Nuke coincontrol circular dependency\n\n3ed5e6819a50434449d92cb96b9d8d141e8c7d2b refactor: Nuke coincontrol circular dependency (Hennadii Stepanov)\n\nPull request description:\n\n  This PR gets rid of `wallet/coincontrol` -> `wallet/wallet` -> `wallet/coincontrol` circular dependency.\n\nACKs for top commit:\n  Sjors:\n    re-ACK 3ed5e6819a50434449d92cb96b9d8d141e8c7d2b\n  meshcollider:\n    utACK 3ed5e6819a50434449d92cb96b9d8d141e8c7d2b\n\nTree-SHA512: 7fbceb74a9cd04157170df158d2deb979cf397df818376b478224d2423f1d8504a8688e3a9b8fc527da73e4a34ab6bc4a98be0cc2937e102a063ab2ac553e86d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbd87d8ee2910ac55c215451453e5162e1c377a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cbd87d8ee2910ac55c215451453e5162e1c377a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbd87d8ee2910ac55c215451453e5162e1c377a/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c98e2024d52778259474b03b96448bc3a173632",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c98e2024d52778259474b03b96448bc3a173632",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c98e2024d52778259474b03b96448bc3a173632"
      },
      {
        "sha": "3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ed5e6819a50434449d92cb96b9d8d141e8c7d2b"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9c4c9dbb17253b27d053777fa8db5bc2ee44a0d5",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "patch": "@@ -27,6 +27,7 @@\n #include <wallet/coincontrol.h>\n #include <wallet/fees.h>\n #include <wallet/psbtwallet.h>\n+#include <wallet/wallet.h>\n \n #include <QFontMetrics>\n #include <QScrollBar>"
      },
      {
        "sha": "2893d0ab3d807db84bab9f7bb24b05187ed2c0ff",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "patch": "@@ -6,14 +6,18 @@\n #define BITCOIN_WALLET_COINCONTROL_H\n \n #include <optional.h>\n+#include <outputtype.h>\n #include <policy/feerate.h>\n #include <policy/fees.h>\n #include <primitives/transaction.h>\n-#include <wallet/wallet.h>\n+#include <script/standard.h>\n \n const int DEFAULT_MIN_DEPTH = 0;\n const int DEFAULT_MAX_DEPTH = 9999999;\n \n+//! Default for -avoidpartialspends\n+static constexpr bool DEFAULT_AVOIDPARTIALSPENDS = false;\n+\n /** Coin Control Features. */\n class CCoinControl\n {"
      },
      {
        "sha": "dd0d2ffbd7d55d55042025d159a0ad6f52c47b86",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "patch": "@@ -8,9 +8,11 @@\n #include <net.h>\n #include <node/context.h>\n #include <outputtype.h>\n+#include <ui_interface.h>\n #include <util/moneystr.h>\n #include <util/system.h>\n #include <util/translation.h>\n+#include <wallet/coincontrol.h>\n #include <wallet/wallet.h>\n #include <walletinitinterface.h>\n "
      },
      {
        "sha": "51df4a9a8b2f41190d6f9b6492b4963f44afa7aa",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbd87d8ee2910ac55c215451453e5162e1c377a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "patch": "@@ -71,8 +71,6 @@ static const CAmount WALLET_INCREMENTAL_RELAY_FEE = 5000;\n static const bool DEFAULT_SPEND_ZEROCONF_CHANGE = true;\n //! Default for -walletrejectlongchains\n static const bool DEFAULT_WALLET_REJECT_LONG_CHAINS = false;\n-//! Default for -avoidpartialspends\n-static const bool DEFAULT_AVOIDPARTIALSPENDS = false;\n //! -txconfirmtarget default\n static const unsigned int DEFAULT_TX_CONFIRM_TARGET = 6;\n //! -walletrbf default"
      },
      {
        "sha": "1538ad77b18a1caec7f820a29bdfb0c541c828b1",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cbd87d8ee2910ac55c215451453e5162e1c377a/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cbd87d8ee2910ac55c215451453e5162e1c377a/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "patch": "@@ -22,7 +22,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"qt/sendcoinsdialog -> qt/walletmodel -> qt/sendcoinsdialog\"\n     \"qt/transactiontablemodel -> qt/walletmodel -> qt/transactiontablemodel\"\n     \"txmempool -> validation -> txmempool\"\n-    \"wallet/coincontrol -> wallet/wallet -> wallet/coincontrol\"\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\""
      }
    ]
  },
  {
    "sha": "14feda0814a9fecf2138041f7d36fe1ab338797f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNGZlZGEwODE0YTlmZWNmMjEzODA0MWY3ZDM2ZmUxYWIzMzg3OTdm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T10:12:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T10:15:03Z"
      },
      "message": "doc: Add historical release notes for 0.19.0.1\n\nAdd historical release notes for 0.19.0.1. And replace 0.19.0's release\nnotes with a short explanation.",
      "tree": {
        "sha": "df3ad3ac04ac8a627abac6c9a67094dff0fc6317",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df3ad3ac04ac8a627abac6c9a67094dff0fc6317"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/14feda0814a9fecf2138041f7d36fe1ab338797f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14feda0814a9fecf2138041f7d36fe1ab338797f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/14feda0814a9fecf2138041f7d36fe1ab338797f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14feda0814a9fecf2138041f7d36fe1ab338797f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cbd87d8ee2910ac55c215451453e5162e1c377a"
      }
    ],
    "stats": {
      "total": 2175,
      "additions": 1092,
      "deletions": 1083
    },
    "files": [
      {
        "sha": "70b8ec589fa36db6f5cb594fb608813369780969",
        "filename": "doc/release-notes/release-notes-0.19.0.1.md",
        "status": "added",
        "additions": 1089,
        "deletions": 0,
        "changes": 1089,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14feda0814a9fecf2138041f7d36fe1ab338797f/doc/release-notes/release-notes-0.19.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14feda0814a9fecf2138041f7d36fe1ab338797f/doc/release-notes/release-notes-0.19.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.1.md?ref=14feda0814a9fecf2138041f7d36fe1ab338797f",
        "patch": "@@ -0,0 +1,1089 @@\n+Bitcoin Core version 0.19.0.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.19.0.1/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but might take some time if the datadir needs to be migrated.  Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n+to open the Bitcoin Core .dmg. This is due to new signing requirements\n+imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n+\n+Notable changes\n+===============\n+\n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweaks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n+New RPCs\n+--------\n+\n+- `getbalances` returns an object with all balances (`mine`,\n+  `untrusted_pending` and `immature`). Please refer to the RPC help of\n+  `getbalances` for details. The new RPC is intended to replace\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n+\n+- Users setting custom `dbcache` values can increase their setting slightly\n+  without using any more real memory.  Recent changes reduced the memory use\n+  by about 9% and made chainstate accounting more accurate (it was underestimating\n+  the use of memory before).  For example, if you set a value of \"450\" before, you\n+  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n+\n+\n+Updated RPCs\n+------------\n+\n+Note: some low-level RPC changes mainly useful for testing are described in the\n+Low-level Changes section below.\n+\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well-specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n+  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n+  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceeds the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n+  set to `true`, a new `decoded` field will be added to the response containing\n+  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n+  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset (the default) or set to an empty string, no encryption will be\n+  used. (#16394)\n+\n+- `getchaintxstats` RPC now returns the additional key of\n+  `window_final_block_height`. (#16695)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n+  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n+  provided. This made it easy to correlate inputs to outputs, representing a\n+  privacy leak. (#16512)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed with the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n+\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n+  especially for nodes with spinning disks, the default value for the\n+  `-peerbloomfilters` configuration option has been changed to false.\n+  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n+  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n+  transactions matching a bloom filter.  Users who still want to provide\n+  bloom filter support may either set the configuration option to true\n+  to re-enable both BIP111 and BIP37 support or enable just BIP37\n+  support for specific peers using the updated `-whitelist` and\n+  `-whitebind` configuration options described elsewhere in these\n+  release notes.  For the near future, lightweight clients using public\n+  BIP111/BIP37 nodes should still be able to connect to older versions\n+  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n+  but developers of such software should consider migrating to either\n+  using specific BIP37 nodes or an alternative transaction filtering\n+  system. (#16152)\n+\n+- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n+\n+Miscellaneous CLI Changes\n+-------------------------\n+\n+- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n+  `chain` and now returns the current network name as defined in BIP70\n+  (main, test, regtest). (#15566)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n+  Instead, information has been moved into the `softforks` object and\n+  an additional `type` field describes how Bitcoin Core determines\n+  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n+  help for details. (#16060)\n+\n+- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n+  and `segwit` (the BIP9 deployments that are currently in active\n+  state). (#16060)\n+\n+- `getrpcinfo` now returns a `logpath` field with the path to\n+  `debug.log`. (#15483)\n+\n+Tests\n+-----\n+\n+- The regression test chain enabled by the `-regtest` command line flag\n+  now requires transactions to not violate standard policy by default.\n+  This is the same default used for mainnet and makes it easier to test\n+  mainnet behavior on regtest. Note that the testnet still allows\n+  non-standard txs by default and that the policy can be locally\n+  adjusted with the `-acceptnonstdtxn` command line flag for both test\n+  chains. (#15891)\n+\n+Configuration\n+------------\n+\n+- A setting specified in the default section but not also specified in a\n+  network-specific section (e.g. testnet) will now produce an error\n+  preventing startup instead of just a warning unless the network is\n+  mainnet.  This prevents settings intended for mainnet from being\n+  applied to testnet or regtest. (#15629)\n+\n+- On platforms supporting `thread_local`, log lines can be prefixed with\n+  the name of the thread that caused the log. To enable this behavior,\n+  use `-logthreadnames=1`. (#15849)\n+\n+Network\n+-------\n+\n+- When fetching a transaction announced by multiple peers, previous versions of\n+  Bitcoin Core would sequentially attempt to download the transaction from each\n+  announcing peer until the transaction is received, in the order that those\n+  peers' announcements were received.  In this release, the download logic has\n+  changed to randomize the fetch order across peers and to prefer sending\n+  download requests to outbound peers over inbound peers. This fixes an issue\n+  where inbound peers could prevent a node from getting a transaction.\n+  (#14897, #15834)\n+\n+- If a Tor hidden service is being used, Bitcoin Core will be bound to\n+  the standard port 8333 even if a different port is configured for\n+  clearnet connections.  This prevents leaking node identity through use\n+  of identical non-default port numbers. (#15651)\n+\n+Mempool and transaction relay\n+-----------------------------\n+\n+- Allows one extra single-ancestor transaction per package.  Previously,\n+  if a transaction in the mempool had 25 descendants, or it and all of\n+  its descendants were over 101,000 vbytes, any newly-received\n+  transaction that was also a descendant would be ignored.  Now, one\n+  extra descendant will be allowed provided it is an immediate\n+  descendant (child) and the child's size is 10,000 vbytes or less.\n+  This makes it possible for two-party contract protocols such as\n+  Lightning Network to give each participant an output they can spend\n+  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n+  allowing one malicious participant to fill the entire package and thus\n+  prevent the other participant from spending their output. (#15681)\n+\n+- Transactions with outputs paying v1 to v16 witness versions (future\n+  segwit versions) are now accepted into the mempool, relayed, and\n+  mined.  Attempting to spend those outputs remains forbidden by policy\n+  (\"non-standard\").  When this change has been widely deployed, wallets\n+  and services can accept any valid bech32 Bitcoin address without\n+  concern that transactions paying future segwit versions will become\n+  stuck in an unconfirmed state. (#15846)\n+\n+- Legacy transactions (transactions with no segwit inputs) must now be\n+  sent using the legacy encoding format, enforcing the rule specified in\n+  BIP144.  (#14039)\n+\n+Wallet\n+------\n+\n+- When in pruned mode, a rescan that was triggered by an `importwallet`,\n+  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n+  when blocks have been pruned. Previously it would fail when `-prune`\n+  has been set.  This change allows setting `-prune` to a high value\n+  (e.g. the disk size) without the calls to any of the import RPCs\n+  failing until the first block is pruned. (#15870)\n+\n+- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n+  BTC), the RPC commands `walletcreatefundedpsbt` and\n+  `fundrawtransaction` will now fail instead of rounding down the fee.\n+  Be aware that the `feeRate` argument is specified in BTC per 1,000\n+  vbytes, not satoshi per vbyte. (#16257)\n+\n+- A new wallet flag `avoid_reuse` has been added (default off). When\n+  enabled, a wallet will distinguish between used and unused addresses,\n+  and default to not use the former in coin selection.  When setting\n+  this flag on an existing wallet, rescanning the blockchain is required\n+  to correctly mark previously used destinations.  Together with \"avoid\n+  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n+  serious privacy issue where a malicious user can track spends by\n+  sending small payments to a previously-paid address that would then\n+  be included with unrelated inputs in future payments. (#13756)\n+\n+Build system changes\n+--------------------\n+\n+- Python >=3.5 is now required by all aspects of the project. This\n+  includes the build systems, test framework and linters. The previously\n+  supported minimum (3.4), was EOL in March 2019. (#14954)\n+\n+- The minimum supported miniUPnPc API version is set to 10. This keeps\n+  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n+  packages. Please note, on Debian this package is still vulnerable to\n+  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n+  (in jessie only) and\n+  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n+  (both in jessie and in stretch). (#15993)\n+\n+0.19.0 change log\n+=================\n+\n+### Consensus\n+- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n+- #16060 Bury bip9 deployments (jnewbery)\n+\n+### Policy\n+- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n+- #15846 Make sending to future native witness outputs standard (sipa)\n+\n+### Block and transaction handling\n+- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n+- #14121 Index for BIP 157 block filters (jimpo)\n+- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n+- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n+- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n+- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n+- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n+- #16056 remove unused magic number from consistency check (instagibbs)\n+- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n+- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n+- #14193 validation: Add missing mempool locks (MarcoFalke)\n+- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n+- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n+- #16471 log correct messages when CPFP fails (jnewbery)\n+- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n+- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n+- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n+- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n+- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n+- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n+- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n+- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n+\n+### P2P protocol and network code\n+- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n+- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n+- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n+- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n+- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n+- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n+- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n+- #16152 Disable bloom filtering by default (TheBlueMatt)\n+- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n+- #16197 Use mockable time for tx download (MarcoFalke)\n+- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n+- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n+- #16631 Restore default whitelistrelay to true (NicolasDorier)\n+- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n+- #15558 Don't query all DNS seeds at once (sipa)\n+- #16999 0.19 seeds update (laanwj)\n+\n+### Wallet\n+- #15288 Remove wallet -> node global function calls (ryanofsky)\n+- #15491 Improve log output for errors during load (gwillen)\n+- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n+- #15680 Remove resendwallettransactions RPC method (jnewbery)\n+- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n+- #15747 Remove plethora of Get*Balance (MarcoFalke)\n+- #15728 Refactor relay transactions (jnewbery)\n+- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n+- #15853 Remove unused import checkpoints.h (MarcoFalke)\n+- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n+- #15778 Move maxtxfee from node to wallet (jnewbery)\n+- #15901 log on rescan completion (andrewtoth)\n+- #15917 Avoid logging no_such_file_or_directory error (promag)\n+- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n+- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n+- #15006 Add option to create an encrypted wallet (achow101)\n+- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n+- #15741 Batch write imported stuff in importmulti (achow101)\n+- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n+- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n+- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n+- #16226 Move ismine to the wallet module (achow101)\n+- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n+- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n+- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n+- #16237 Have the wallet give out destinations instead of keys (achow101)\n+- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n+- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n+- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n+- #16227 Refactor CWallet's inheritance chain (achow101)\n+- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n+- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n+- #16402 Remove wallet settings from chainparams (MarcoFalke)\n+- #16415 Get rid of PendingWalletTx class (ryanofsky)\n+- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n+- #16399 Improve wallet creation (fjahr)\n+- #16475 Enumerate walletdb keys (MarcoFalke)\n+- #15709 Do not add \"setting\" key as unknown (Bushstar)\n+- #16451 Remove CMerkleTx (jnewbery)\n+- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n+- #16502 Drop unused OldKey (promag)\n+- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n+- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n+- #16503 Remove p2pEnabled from Chain interface (ariard)\n+- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n+- #14934 Descriptor expansion cache clarifications (Sjors)\n+- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n+- #16542 Return more specific errors about invalid descriptors (achow101)\n+- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n+- #16753 extract PubKey from P2PK script with Solver (theStack)\n+- #16716 Use wallet name instead of pointer on unload/release (promag)\n+- #16185 gettransaction: add an argument to decode the transaction (darosior)\n+- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n+- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n+- #16624 encapsulate transactions state (ariard)\n+- #16830 Cleanup walletinitinterface.h (hebasto)\n+- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n+- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n+- #16727 Explicit feerate for bumpfee (instagibbs)\n+- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n+\n+### RPC and other APIs\n+- #15492 remove deprecated generate method (Sjors)\n+- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n+- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n+- #15642 Remove deprecated rpc warnings (jnewbery)\n+- #15637 Rename size to vsize in mempool related calls (fanquake)\n+- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n+- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n+- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n+- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n+- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n+- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n+- #15748 remove dead mining code (jnewbery)\n+- #15751 Speed up deriveaddresses for large ranges (sipa)\n+- #15770 Validate maxfeerate with AmountFromValue (promag)\n+- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n+- #15463 Speedup getaddressesbylabel (promag)\n+- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n+- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n+- #15932 Serialize in getblock without cs_main (MarcoFalke)\n+- #15930 Add balances RPC (MarcoFalke)\n+- #15730 Show scanning details in getwalletinfo (promag)\n+- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n+- #14984 Speedup getrawmempool when verbose=true (promag)\n+- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n+- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n+- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n+- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n+- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n+- #16262 Allow shutdown while in generateblocks (pstratem)\n+- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n+- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n+- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n+- #16332 Add logpath description for getrpcinfo (instagibbs)\n+- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n+- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n+- #16467 sendrawtransaction help privacy note (jonatack)\n+- #16596 Fix getblocktemplate CLI example (emilengler)\n+- #15986 Add checksum to getdescriptorinfo (sipa)\n+- #16647 add weight to getmempoolentry output (fanquake)\n+- #16695 Add window final block height to getchaintxstats (leto)\n+- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n+- #16285 Improve scantxoutset response and help message (promag)\n+- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n+- #16787 Human readable network services (darosior)\n+- #16251 Improve signrawtransaction error reporting (ajtowns)\n+- #16873 fix regression in gettransaction (jonatack)\n+- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n+- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n+- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n+- #17131 fix -rpcclienttimeout 0 option (fjahr)\n+- #17249 Add missing deque include to fix build (jbeich)\n+- #17368 cli: fix -getinfo output when compiled with no wallet (fanquake)\n+\n+### GUI\n+- #15464 Drop unused return values in WalletFrame (promag)\n+- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n+- #15711 Generate bech32 addresses by default (MarcoFalke)\n+- #15829 update request payment button text and tab description (fanquake)\n+- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n+- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n+- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n+- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n+- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n+- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n+- #16263 Use qInfo() if no error occurs (hebasto)\n+- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n+- #16350 Remove unused guard (hebasto)\n+- #16106 Sort wallets in open wallet menu (promag)\n+- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n+- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n+- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n+- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n+- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n+- #16514 Remove unused RPCConsole::tabFocus (promag)\n+- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n+- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n+- #16578 Do not pass in command line arguments to QApplication (achow101)\n+- #16612 Remove menu icons (laanwj)\n+- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n+- #16694 Ensure transaction send error is always visible (fanquake)\n+- #14879 Add warning messages to the debug window (hebasto)\n+- #16708 Replace obsolete functions of QSslSocket (hebasto)\n+- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n+- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n+- #16707 Remove obsolete QModelIndex::child() (hebasto)\n+- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n+- #16760 Change uninstall icon on Windows (GChuf)\n+- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n+- #16788 Update transifex slug for 0.19 (laanwj)\n+- #15450 Create wallet menu option (achow101)\n+- #16735 Remove unused menu items for Windows and Linux (GChuf)\n+- #16826 Do additional character escaping for wallet names and address labels (achow101)\n+- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n+- #16714 add prune to intro screen with smart default (Sjors)\n+- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n+- #16822 Create wallet menu option follow-ups (jonatack)\n+- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n+- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n+- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n+- #16971 Change default size of intro frame (emilengler)\n+- #16988 Periodic translations update (laanwj)\n+- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n+- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n+- #17031 Prevent processing duplicate payment requests (promag)\n+- #17135 Make polling in ClientModel asynchronous (promag)\n+- #17120 Fix start timer from non QThread (promag)\n+- #17257 disable font antialiasing for QR image address (fanquake)\n+\n+### Build system\n+- #14954 Require python 3.5 (MarcoFalke)\n+- #15580 native_protobuf: avoid system zlib (dongcarl)\n+- #15601 Switch to python3 (take 3) (MarcoFalke)\n+- #15581 Make less assumptions about build env (dongcarl)\n+- #14853 latest RapidCheck (fanquake)\n+- #15446 Improve depends debuggability (dongcarl)\n+- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n+- #12051 add missing debian contrib file to tarball (puchu)\n+- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n+- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n+- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n+- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n+- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n+- #16051 add patch to common dependencies (fanquake)\n+- #16049 switch to secure download of all dependencies (Kemu)\n+- #16059 configure: Fix thread_local detection (dongcarl)\n+- #16089 add ability to skip building zeromq (fanquake)\n+- #15844 Purge libtool archives (dongcarl)\n+- #15461 update to Boost 1.70 (Sjors)\n+- #16141 remove GZIP export from gitian descriptors (fanquake)\n+- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n+- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n+- #16183 xtrans: Configure flags cleanup (dongcarl)\n+- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n+- #16271 remove -Wall from rapidcheck build flags (fanquake)\n+- #16309 [MSVC] allow user level project customization (NicolasDorier)\n+- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n+- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n+- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n+- #16352 prune dbus from depends (fanquake)\n+- #16270 expat 2.2.7 (fanquake)\n+- #16408 Prune X packages (dongcarl)\n+- #16386 disable unused Qt features (fanquake)\n+- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n+- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n+- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n+- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n+- #16573 disable building libsecp256k1 benchmarks (fanquake)\n+- #16533 disable libxcb extensions (fanquake)\n+- #16589 Remove unused src/obj-test folder (MarcoFalke)\n+- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n+- #16622 echo property tests status during build (jonatack)\n+- #16611 Remove src/obj directory from repository (laanwj)\n+- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n+- #16654 build: update RapidCheck Makefile (jonatack)\n+- #16370 cleanup package configure flags (fanquake)\n+- #16746 msbuild: Ignore linker warning (sipsorcery)\n+- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n+- #16810 guix: Remove ssp spec file hack (dongcarl)\n+- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n+- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n+- #15584 disable BIP70 support by default (fanquake)\n+- #16871 make building protobuf optional in depends (fanquake)\n+- #16879 remove redundant sed patching (fanquake)\n+- #16809 zlib: Move toolchain options to configure (dongcarl)\n+- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n+- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n+- #16982 Factor out qt translations from build system (laanwj)\n+- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n+- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n+- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n+- #16468 Exclude depends/Makefile in .gitignore (promag)\n+\n+### Tests and QA\n+- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n+- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n+- #15479 Add .style.yapf (MarcoFalke)\n+- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n+- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n+- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n+- #15466 Print remaining jobs in test_runner.py (stevenroose)\n+- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n+- #15255 Remove travis_wait from lint script (gkrizek)\n+- #15686 make pruning test faster (jnewbery)\n+- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n+- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n+- #15495 Add regtests for HTTP status codes (domob1812)\n+- #15772 Properly log named args in authproxy (MarcoFalke)\n+- #15771 Prevent concurrency issues reading .cookie file (promag)\n+- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n+- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n+- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n+- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n+- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n+- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n+- #15779 Add wallet_balance benchmark (MarcoFalke)\n+- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n+- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n+- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n+- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n+- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n+- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n+- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n+- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n+- #15758 Add further tests to wallet_balance (MarcoFalke)\n+- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n+- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n+- #15927 log thread names by default in functional tests (jnewbery)\n+- #15664 change default Python block serialization to witness (instagibbs)\n+- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n+- #15963 Make random seed logged and settable (jnewbery)\n+- #15943 Fail if RPC has been added without tests (MarcoFalke)\n+- #16036 travis: Run all lint scripts even if one fails (scravy)\n+- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n+- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n+- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n+- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n+- #16124 Limit Python linting to files in the repo (practicalswift)\n+- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n+- #16214 travis: Fix caching issues (MarcoFalke)\n+- #15982 Make msg_block a witness block (MarcoFalke)\n+- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n+- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n+- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n+- #16234 Add test for unknown args (MarcoFalke)\n+- #16207 stop generating lcov coverage when functional tests fail (asood123)\n+- #16252 Log to debug.log in all unit tests (MarcoFalke)\n+- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n+- #16278 Remove unused includes (practicalswift)\n+- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n+- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n+- #16294 Create at most one testing setup (MarcoFalke)\n+- #16299 bench: Move generated data to a dedicated translation unit (promag)\n+- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n+- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n+- #16267 bench: Benchmark blocktojson (fanatid)\n+- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n+- #16338 Disable other targets when enable-fuzz is set (qmma70)\n+- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n+- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n+- #16390 Add --filter option to test_runner.py (promag)\n+- #15891 Require standard txs in regtest by default (MarcoFalke)\n+- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n+- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n+- #16422 remove redundant setup in addrman_tests (zenosage)\n+- #16438 travis: Print memory and number of cpus (MarcoFalke)\n+- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n+- #16459 Fix race condition in example_test.py (sdaftuar)\n+- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n+- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n+- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n+- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n+- #16293 Make test cases separate functions (MarcoFalke)\n+- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n+- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n+- #16493 Fix test failures (MarcoFalke)\n+- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n+- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n+- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n+- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n+- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n+- #16598 Remove confusing hash256 function in util (elichai)\n+- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n+- #16563 Add unit test for AddTimeData (mzumsande)\n+- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n+- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n+- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n+- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n+- #16646 Run tests with UPnP disabled (fanquake)\n+- #16623 ci: Add environment files for all settings (MarcoFalke)\n+- #16656 fix rpc_setban.py race (jonasschnelli)\n+- #16570 Make descriptor tests deterministic (davereikher)\n+- #16404 Test ZMQ notification after chain reorg (promag)\n+- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n+- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n+- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n+- #16768 Make lint-includes.sh work from any directory (kristapsk)\n+- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n+- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n+- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n+- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n+- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n+- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n+- #16888 Bump timeouts in slow running tests (MarcoFalke)\n+- #16864 Add python bech32 impl round-trip test (instagibbs)\n+- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n+- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n+- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n+- #16898 Remove connect_nodes_bi (MarcoFalke)\n+- #16917 Move common function assert_approx() into util.py (fridokus)\n+- #16921 Add information on how to add Vulture suppressions (practicalswift)\n+- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n+- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n+- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n+- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n+- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n+- #16961 Remove python dead code linter (laanwj)\n+- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n+- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n+- #16987 Correct docstring param name (jbampton)\n+- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n+- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n+- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n+- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n+- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n+- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n+\n+### Miscellaneous\n+- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n+- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n+- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n+- #15519 Add Poly1305 implementation (jonasschnelli)\n+- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n+- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n+- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n+- #15849 Thread names in logs and deadlock debug tools (jamesob)\n+- #15650 Handle the result of posix_fallocate system call (lucayepa)\n+- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n+- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n+- #15968 Fix portability issue with pthreads (grim-trigger)\n+- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n+- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n+- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n+- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n+- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n+- #15236 scripts and tools: Make --setup command independent (hebasto)\n+- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n+- #16046 util: Add type safe gettime (MarcoFalke)\n+- #15703 Update secp256k1 subtree to latest upstream (sipa)\n+- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n+- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n+- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n+- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n+- #16112 util: Log early messages (MarcoFalke)\n+- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n+- #16300 util: Explain why the path is cached (MarcoFalke)\n+- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n+- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n+- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n+- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n+- #15277 contrib: Enable building in guix containers (dongcarl)\n+- #16362 Add bilingual_str type (hebasto)\n+- #16481 logs: add missing space (harding)\n+- #16581 sipsorcery gitian key (sipsorcery)\n+- #16566 util: Refactor upper/lowercase functions (kallewoof)\n+- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n+- #16625 scripts: Remove github-merge.py (fanquake)\n+- #15864 Fix datadir handling (hebasto)\n+- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n+- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n+- #16730 Support serialization of `std::vector<bool>` (sipa)\n+- #16556 Fix systemd service file configuration directory setup (setpill)\n+- #15615 Add log output during initial header sync (jonasschnelli)\n+- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n+- #16489 log: harmonize bitcoind logging (jonatack)\n+- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n+- #16984 util: Make thread names shorter (hebasto)\n+- #17038 Don't rename main thread at process level (laanwj)\n+- #17184 util: Filter out macos process serial number (hebasto)\n+- #17095 util: Filter control characters out of log messages (laanwj)\n+- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n+- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n+- #17449 fix uninitialized variable nMinerConfirmationWindow (bitcoinVBR)\n+\n+### Documentation\n+- #15514 Update Transifex links (fanquake)\n+- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n+- #15530 Move wallet lock annotations to header (MarcoFalke)\n+- #15562 remove duplicate clone step in build-windows.md (fanquake)\n+- #15565 remove release note fragments (fanquake)\n+- #15444 Additional productivity tips (Sjors)\n+- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n+- #15604 release note for disabling reject messages by default (jnewbery)\n+- #15611 Add Gitian key for droark (droark)\n+- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n+- #15603 Add more tips to productivity.md (gwillen)\n+- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n+- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n+- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n+- #15659 fix findFork comment (r8921039)\n+- #15718 Improve netaddress comments (dongcarl)\n+- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n+- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n+- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n+- #15887 Align code example style with clang-format (hebasto)\n+- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n+- #15908 Align MSVC build options with Linux build ones (hebasto)\n+- #15941 Add historical release notes for 0.18.0 (laanwj)\n+- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n+- #15607 Release process updates (jonatack)\n+- #14364 Clarify -blocksdir usage (sangaman)\n+- #15777 Add doxygen comments for keypool classes (jnewbery)\n+- #15820 Add productivity notes for dummy rebases (dongcarl)\n+- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n+- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n+- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n+- #16039 add release note for 14954 (fanquake)\n+- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n+- #16140 create security policy (narula)\n+- #16164 update release process for SECURITY.md (jonatack)\n+- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n+- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n+- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n+- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n+- #16241 add rapidcheck to vcpkg install list (fanquake)\n+- #16243 Remove travis badge from readme (MarcoFalke)\n+- #16256 remove orphaned header in developer notes (jonatack)\n+- #15964 Improve build-osx document formatting (giulio92)\n+- #16313 Fix broken link in doc/build-osx.md (jonatack)\n+- #16330 Use placeholder instead of key expiration date (hebasto)\n+- #16339 add reduce-memory.md (fanquake)\n+- #16347 Include static members in Doxygen (dongcarl)\n+- #15824 Improve netbase comments (dongcarl)\n+- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n+- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n+- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n+- #16483 update Python command in msvc readme (sipsorcery)\n+- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n+- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n+- #16536 Update and extend benchmarking.md (ariard)\n+- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n+- #16574 Add historical release notes for 0.18.1 (laanwj)\n+- #16585 Update Markdown syntax for bdb packages (emilengler)\n+- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n+- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n+- #16615 Fix typos in COPYRIGHT (gapeman)\n+- #16626 Fix spelling error chache -> cache (nilswloewen)\n+- #16587 Improve versionbits.h documentation (ariard)\n+- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n+- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n+- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n+- #16645 initial RapidCheck property-based testing documentation (jonatack)\n+- #16691 improve depends prefix documentation (fanquake)\n+- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n+- #16723 Update labels in CONTRIBUTING.md (hebasto)\n+- #16461 Tidy up shadowing section (promag)\n+- #16621 add default bitcoin.conf locations (GChuf)\n+- #16752 Delete stale URL in test README (michaelfolkson)\n+- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n+- #16806 Add issue templates for bug and feature request (MarcoFalke)\n+- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n+- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n+- #16757 CChainState return values (MarcoFalke)\n+- #16847 add comments clarifying how local services are advertised (jamesob)\n+- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n+- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n+- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n+- #16914 Update homebrew instruction for doxygen (Sjors)\n+- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n+- #16960 replace outdated OpenSSL comment in test README (fanquake)\n+- #16968 Remove MSVC update step from translation process (laanwj)\n+- #16953 Improve test READMEs (fjahr)\n+- #16962 Put PR template in comments (laanwj)\n+- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n+- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n+- #16997 Update bips.md for 0.19 (laanwj)\n+- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n+- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n+- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 251\n+- Aaron Clauson\n+- Akio Nakamura\n+- Alistair Mann\n+- Amiti Uttarwar\n+- Andrew Chow\n+- andrewtoth\n+- Anthony Towns\n+- Antoine Riard\n+- Aseem Sood\n+- Ben Carman\n+- Ben Woosley\n+- bpay\n+- Carl Dong\n+- Carnhof Daki\n+- Chris Capobianco\n+- Chris Moore\n+- Chuf\n+- clashic\n+- clashicly\n+- Cory Fields\n+- Daki Carnhof\n+- Dan Gershony\n+- Daniel Edgecumbe\n+- Daniel Kraft\n+- Daniel McNally\n+- darosior\n+- David A. Harding\n+- David Reikher\n+- Douglas Roark\n+- Elichai Turkel\n+- Emil\n+- Emil Engler\n+- ezegom\n+- Fabian Jahr\n+- fanquake\n+- Felix Weis\n+- Ferdinando M. Ametrano\n+- fridokus\n+- gapeman\n+- GChuf\n+- Gert-Jaap Glasbergen\n+- Giulio Lombardo\n+- Glenn Willen\n+- Graham Krizek\n+- Gregory Sanders\n+- grim-trigger\n+- gwillen\n+- Hennadii Stepanov\n+- Jack Mallers\n+- James Hilliard\n+- James O'Beirne\n+- Jan Beich\n+- Jeremy Rubin\n+- JeremyRand\n+- Jim Posen\n+- John Bampton\n+- John Newbery\n+- Jon Atack\n+- Jon Layton\n+- Jonas Schnelli\n+- Jonathan \"Duke\" Leto\n+- Jo\u00e3o Barbosa\n+- Joonmo Yang\n+- Jordan Baczuk\n+- Jorge Tim\u00f3n\n+- Josu Go\u00f1i\n+- Julian Fleischer\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- keepkeyjon\n+- Kirill Fomichev\n+- Kristaps Kaupe\n+- Kristian Kramer\n+- Larry Ruane\n+- Lenny Maiorani\n+- LongShao007\n+- Luca Venturini\n+- lucash-dev\n+- Luke Dashjr\n+- marcoagner\n+- MarcoFalke\n+- marcuswin\n+- Martin Ankerl\n+- Martin Zumsande\n+- Matt Corallo\n+- MeshCollider\n+- Michael Folkson\n+- Miguel Herranz\n+- Nathan Marley\n+- Neha Narula\n+- nicolas.dorier\n+- Nils Loewen\n+- nkostoulas\n+- NullFunctor\n+- orient\n+- Patrick Strateman\n+- Peter Bushnell\n+- Peter Wagner\n+- Pieter Wuille\n+- practicalswift\n+- qmma\n+- r8921039\n+- RJ Rybarczyk\n+- Russell Yanofsky\n+- Samuel Dobson\n+- Sebastian Falbesoner\n+- setpill\n+- shannon1916\n+- Sjors Provoost\n+- soroosh-sdi\n+- Steven Roose\n+- Suhas Daftuar\n+- tecnovert\n+- THETCR\n+- Tim Ruffing\n+- Tobias Kaderle\n+- Torkel Rogstad\n+- Ulrich Kempken\n+- whythat\n+- William Casarin\n+- Wladimir J. van der Laan\n+- zenosage\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "086491e92dea86159787b214acf16e0158a400f5",
        "filename": "doc/release-notes/release-notes-0.19.0.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1083,
        "changes": 1086,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/14feda0814a9fecf2138041f7d36fe1ab338797f/doc/release-notes/release-notes-0.19.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/14feda0814a9fecf2138041f7d36fe1ab338797f/doc/release-notes/release-notes-0.19.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.md?ref=14feda0814a9fecf2138041f7d36fe1ab338797f",
        "patch": "@@ -1,1086 +1,6 @@\n-Bitcoin Core version 0.19.0 is now available from:\n-\n-  <https://bitcoincore.org/bin/bitcoin-core-0.19.0/>\n-\n-This release includes new features, various bug fixes and performance\n-improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at GitHub:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-How to Upgrade\n-==============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n-or `bitcoind`/`bitcoin-qt` (on Linux).\n-\n-Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but might take some time if the datadir needs to be migrated.  Old\n-wallet versions of Bitcoin Core are generally supported.\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n-to use Bitcoin Core on unsupported systems.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-as frequently tested on them.\n-\n-From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n-built using Qt 5.9.x, which doesn't support versions of macOS older than\n-10.10. Additionally, Bitcoin Core does not yet change appearance when\n-macOS \"dark mode\" is activated.\n-\n-Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n-to open the Bitcoin Core .dmg. This is due to new signing requirements\n-imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n-\n-Notable changes\n-===============\n-\n-New user documentation\n-----------------------\n-\n-- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n-  suggests configuration tweaks for running Bitcoin Core on systems with\n-  limited memory. (#16339)\n-\n-New RPCs\n---------\n-\n-- `getbalances` returns an object with all balances (`mine`,\n-  `untrusted_pending` and `immature`). Please refer to the RPC help of\n-  `getbalances` for details. The new RPC is intended to replace\n-  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n-  `getwalletinfo`.  These old calls and fields may be removed in a\n-  future version. (#15930, #16239)\n-\n-- `setwalletflag` sets and unsets wallet flags that enable or disable\n-  features specific to that existing wallet, such as the new\n-  `avoid_reuse` feature documented elsewhere in these release notes.\n-  (#13756)\n-\n-- `getblockfilter` gets the BIP158 filter for the specified block.  This\n-  RPC is only enabled if block filters have been created using the\n-  `-blockfilterindex` configuration option. (#14121)\n-\n-New settings\n-------------\n-\n-- `-blockfilterindex` enables the creation of BIP158 block filters for\n-  the entire blockchain.  Filters will be created in the background and\n-  currently use about 4 GiB of space.  Note: this version of Bitcoin\n-  Core does not serve block filters over the P2P network, although the\n-  local user may obtain block filters using the `getblockfilter` RPC.\n-  (#14121)\n-\n-Updated settings\n-----------------\n-\n-- `whitebind` and `whitelist` now accept a list of permissions to\n-  provide peers connecting using the indicated interfaces or IP\n-  addresses.  If no permissions are specified with an address or CIDR\n-  network, the implicit default permissions are the same as previous\n-  releases.  See the `bitcoind -help` output for these two options for\n-  details about the available permissions. (#16248)\n-\n-- Users setting custom `dbcache` values can increase their setting slightly\n-  without using any more real memory.  Recent changes reduced the memory use\n-  by about 9% and made chainstate accounting more accurate (it was underestimating\n-  the use of memory before).  For example, if you set a value of \"450\" before, you\n-  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n-\n-\n-Updated RPCs\n-------------\n-\n-Note: some low-level RPC changes mainly useful for testing are described in the\n-Low-level Changes section below.\n-\n-- `sendmany` no longer has a `minconf` argument.  This argument was not\n-  well-specified and would lead to RPC errors even when the wallet's\n-  coin selection succeeded.  Users who want to influence coin selection\n-  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n-  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n-  arguments. (#15596)\n-\n-- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n-  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n-  whether already used addresses should be included in the operation.\n-  Additionally, `sendtoaddress` will avoid partial spends when\n-  `avoid_reuse` is enabled even if this feature is not already enabled\n-  via the `-avoidpartialspends` command line flag because not doing so\n-  would risk using up the \"wrong\" UTXO for an address reuse case.\n-  (#13756)\n-\n-- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n-  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n-  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n-\n-- `listunspent` now returns a \"reused\" bool for each output if the\n-  wallet flag \"avoid_reuse\" is enabled. (#13756)\n-\n-- `getblockstats` now uses BlockUndo data instead of the transaction\n-  index, making it much faster, no longer dependent on the `-txindex`\n-  configuration option, and functional for all non-pruned blocks.\n-  (#14802)\n-\n-- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n-  out input and output scripts and keys when known. P2SH-witness inputs\n-  will be filled in from the UTXO set when a descriptor is provided that\n-  shows they're spending segwit outputs.  See the RPC help text for full\n-  details. (#15427)\n-\n-- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n-  `allowhighfees` parameter to fail mempool acceptance if the\n-  transaction fee exceeds the value of the configuration option\n-  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n-  can be changed when calling either RPC using a `maxfeerate` parameter.\n-  (#15620)\n-\n-- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n-  `getrawmempool` no longer return a `size` field unless the\n-  configuration option `-deprecatedrpc=size` is used.  Instead a new\n-  `vsize` field is returned with the transaction's virtual size\n-  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n-\n-- `getwalletinfo` now includes a `scanning` field that is either `false`\n-  (no scanning) or an object with information about the duration and\n-  progress of the wallet's scanning historical blocks for transactions\n-  affecting its balances. (#15730)\n-\n-- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n-  set to `true`, a new `decoded` field will be added to the response containing\n-  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n-  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n-\n-- `createwallet` accepts a new `passphrase` parameter.  If set, this\n-  will create the new wallet encrypted with the given passphrase.  If\n-  unset (the default) or set to an empty string, no encryption will be\n-  used. (#16394)\n-\n-- `getchaintxstats` RPC now returns the additional key of\n-  `window_final_block_height`. (#16695)\n-\n-- `getmempoolentry` now provides a `weight` field containing the\n-  transaction weight as defined in BIP141. (#16647)\n-\n-- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n-\n-- `getdescriptorinfo` now returns an additional `checksum` field\n-  containing the checksum for the unmodified descriptor provided by the\n-  user (that is, before the descriptor is normalized for the\n-  `descriptor` field). (#15986)\n-\n-- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n-  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n-  provided. This made it easy to correlate inputs to outputs, representing a\n-  privacy leak. (#16512)\n-\n-- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n-  `-walletrbf` configuration option is set to true. (#15911)\n-\n-GUI changes\n------------\n-\n-- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n-  during invoice generation using a GUI toggle, or the default address\n-  type may be changed with the `-addresstype` configuration option.\n-  (#15711, #16497)\n-\n-- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n-\n-Deprecated or removed configuration options\n--------------------------------------------\n-\n-- `-mempoolreplacement` is removed, although default node behavior\n-  remains the same.  This option previously allowed the user to prevent\n-  the node from accepting or relaying BIP125 transaction replacements.\n-  This is different from the remaining configuration option\n-  `-walletrbf`. (#16171)\n-\n-Deprecated or removed RPCs\n---------------------------\n-\n-- `bumpfee` no longer accepts a `totalFee` option unless the\n-  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n-  parameter will be fully removed in a subsequent release. (#15996)\n-\n-- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n-\n-- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n-  Use the `generatetoaddress` RPC instead. (#15492)\n-\n-P2P changes\n+0.19.0 note\n -----------\n \n-- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n-  by default, but can be enabled by setting the `-enablebip61` command\n-  line option.  BIP 61 reject messages will be removed entirely in a\n-  future version of Bitcoin Core. (#14054)\n-\n-- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n-  especially for nodes with spinning disks, the default value for the\n-  `-peerbloomfilters` configuration option has been changed to false.\n-  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n-  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n-  transactions matching a bloom filter.  Users who still want to provide\n-  bloom filter support may either set the configuration option to true\n-  to re-enable both BIP111 and BIP37 support or enable just BIP37\n-  support for specific peers using the updated `-whitelist` and\n-  `-whitebind` configuration options described elsewhere in these\n-  release notes.  For the near future, lightweight clients using public\n-  BIP111/BIP37 nodes should still be able to connect to older versions\n-  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n-  but developers of such software should consider migrating to either\n-  using specific BIP37 nodes or an alternative transaction filtering\n-  system. (#16152)\n-\n-- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n-\n-Miscellaneous CLI Changes\n--------------------------\n-\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n-  `chain` and now returns the current network name as defined in BIP70\n-  (main, test, regtest). (#15566)\n-\n-Low-level changes\n-=================\n-\n-RPC\n----\n-\n-- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n-  Instead, information has been moved into the `softforks` object and\n-  an additional `type` field describes how Bitcoin Core determines\n-  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n-  help for details. (#16060)\n-\n-- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP9 deployments that are currently in active\n-  state). (#16060)\n-\n-- `getrpcinfo` now returns a `logpath` field with the path to\n-  `debug.log`. (#15483)\n-\n-Tests\n------\n-\n-- The regression test chain enabled by the `-regtest` command line flag\n-  now requires transactions to not violate standard policy by default.\n-  This is the same default used for mainnet and makes it easier to test\n-  mainnet behavior on regtest. Note that the testnet still allows\n-  non-standard txs by default and that the policy can be locally\n-  adjusted with the `-acceptnonstdtxn` command line flag for both test\n-  chains. (#15891)\n-\n-Configuration\n-------------\n-\n-- A setting specified in the default section but not also specified in a\n-  network-specific section (e.g. testnet) will now produce an error\n-  preventing startup instead of just a warning unless the network is\n-  mainnet.  This prevents settings intended for mainnet from being\n-  applied to testnet or regtest. (#15629)\n-\n-- On platforms supporting `thread_local`, log lines can be prefixed with\n-  the name of the thread that caused the log. To enable this behavior,\n-  use `-logthreadnames=1`. (#15849)\n-\n-Network\n--------\n-\n-- When fetching a transaction announced by multiple peers, previous versions of\n-  Bitcoin Core would sequentially attempt to download the transaction from each\n-  announcing peer until the transaction is received, in the order that those\n-  peers' announcements were received.  In this release, the download logic has\n-  changed to randomize the fetch order across peers and to prefer sending\n-  download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers could prevent a node from getting a transaction.\n-  (#14897, #15834)\n-\n-- If a Tor hidden service is being used, Bitcoin Core will be bound to\n-  the standard port 8333 even if a different port is configured for\n-  clearnet connections.  This prevents leaking node identity through use\n-  of identical non-default port numbers. (#15651)\n-\n-Mempool and transaction relay\n------------------------------\n-\n-- Allows one extra single-ancestor transaction per package.  Previously,\n-  if a transaction in the mempool had 25 descendants, or it and all of\n-  its descendants were over 101,000 vbytes, any newly-received\n-  transaction that was also a descendant would be ignored.  Now, one\n-  extra descendant will be allowed provided it is an immediate\n-  descendant (child) and the child's size is 10,000 vbytes or less.\n-  This makes it possible for two-party contract protocols such as\n-  Lightning Network to give each participant an output they can spend\n-  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n-  allowing one malicious participant to fill the entire package and thus\n-  prevent the other participant from spending their output. (#15681)\n-\n-- Transactions with outputs paying v1 to v16 witness versions (future\n-  segwit versions) are now accepted into the mempool, relayed, and\n-  mined.  Attempting to spend those outputs remains forbidden by policy\n-  (\"non-standard\").  When this change has been widely deployed, wallets\n-  and services can accept any valid bech32 Bitcoin address without\n-  concern that transactions paying future segwit versions will become\n-  stuck in an unconfirmed state. (#15846)\n-\n-- Legacy transactions (transactions with no segwit inputs) must now be\n-  sent using the legacy encoding format, enforcing the rule specified in\n-  BIP144.  (#14039)\n-\n-Wallet\n-------\n-\n-- When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n-  when blocks have been pruned. Previously it would fail when `-prune`\n-  has been set.  This change allows setting `-prune` to a high value\n-  (e.g. the disk size) without the calls to any of the import RPCs\n-  failing until the first block is pruned. (#15870)\n-\n-- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n-  BTC), the RPC commands `walletcreatefundedpsbt` and\n-  `fundrawtransaction` will now fail instead of rounding down the fee.\n-  Be aware that the `feeRate` argument is specified in BTC per 1,000\n-  vbytes, not satoshi per vbyte. (#16257)\n-\n-- A new wallet flag `avoid_reuse` has been added (default off). When\n-  enabled, a wallet will distinguish between used and unused addresses,\n-  and default to not use the former in coin selection.  When setting\n-  this flag on an existing wallet, rescanning the blockchain is required\n-  to correctly mark previously used destinations.  Together with \"avoid\n-  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n-  serious privacy issue where a malicious user can track spends by\n-  sending small payments to a previously-paid address that would then\n-  be included with unrelated inputs in future payments. (#13756)\n-\n-Build system changes\n---------------------\n-\n-- Python >=3.5 is now required by all aspects of the project. This\n-  includes the build systems, test framework and linters. The previously\n-  supported minimum (3.4), was EOL in March 2019. (#14954)\n-\n-- The minimum supported miniUPnPc API version is set to 10. This keeps\n-  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n-  packages. Please note, on Debian this package is still vulnerable to\n-  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n-  (in jessie only) and\n-  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n-  (both in jessie and in stretch). (#15993)\n-\n-0.19.0 change log\n-=================\n-\n-### Consensus\n-- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n-- #16060 Bury bip9 deployments (jnewbery)\n-\n-### Policy\n-- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n-- #15846 Make sending to future native witness outputs standard (sipa)\n-\n-### Block and transaction handling\n-- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n-- #14121 Index for BIP 157 block filters (jimpo)\n-- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n-- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n-- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n-- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n-- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n-- #16056 remove unused magic number from consistency check (instagibbs)\n-- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n-- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n-- #14193 validation: Add missing mempool locks (MarcoFalke)\n-- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n-- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n-- #16471 log correct messages when CPFP fails (jnewbery)\n-- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n-- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n-- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n-- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n-- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n-- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n-- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n-- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n-\n-### P2P protocol and network code\n-- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n-- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n-- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n-- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n-- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n-- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n-- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n-- #16152 Disable bloom filtering by default (TheBlueMatt)\n-- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n-- #16197 Use mockable time for tx download (MarcoFalke)\n-- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n-- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n-- #16631 Restore default whitelistrelay to true (NicolasDorier)\n-- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n-- #15558 Don't query all DNS seeds at once (sipa)\n-- #16999 0.19 seeds update (laanwj)\n-\n-### Wallet\n-- #15288 Remove wallet -> node global function calls (ryanofsky)\n-- #15491 Improve log output for errors during load (gwillen)\n-- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n-- #15680 Remove resendwallettransactions RPC method (jnewbery)\n-- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n-- #15747 Remove plethora of Get*Balance (MarcoFalke)\n-- #15728 Refactor relay transactions (jnewbery)\n-- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n-- #15853 Remove unused import checkpoints.h (MarcoFalke)\n-- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n-- #15778 Move maxtxfee from node to wallet (jnewbery)\n-- #15901 log on rescan completion (andrewtoth)\n-- #15917 Avoid logging no_such_file_or_directory error (promag)\n-- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n-- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n-- #15006 Add option to create an encrypted wallet (achow101)\n-- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n-- #15741 Batch write imported stuff in importmulti (achow101)\n-- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n-- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n-- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n-- #16226 Move ismine to the wallet module (achow101)\n-- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n-- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n-- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n-- #16237 Have the wallet give out destinations instead of keys (achow101)\n-- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n-- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n-- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n-- #16227 Refactor CWallet's inheritance chain (achow101)\n-- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n-- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n-- #16402 Remove wallet settings from chainparams (MarcoFalke)\n-- #16415 Get rid of PendingWalletTx class (ryanofsky)\n-- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n-- #16399 Improve wallet creation (fjahr)\n-- #16475 Enumerate walletdb keys (MarcoFalke)\n-- #15709 Do not add \"setting\" key as unknown (Bushstar)\n-- #16451 Remove CMerkleTx (jnewbery)\n-- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n-- #16502 Drop unused OldKey (promag)\n-- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n-- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n-- #16503 Remove p2pEnabled from Chain interface (ariard)\n-- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n-- #14934 Descriptor expansion cache clarifications (Sjors)\n-- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n-- #16542 Return more specific errors about invalid descriptors (achow101)\n-- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n-- #16753 extract PubKey from P2PK script with Solver (theStack)\n-- #16716 Use wallet name instead of pointer on unload/release (promag)\n-- #16185 gettransaction: add an argument to decode the transaction (darosior)\n-- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n-- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n-- #16624 encapsulate transactions state (ariard)\n-- #16830 Cleanup walletinitinterface.h (hebasto)\n-- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n-- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n-- #16727 Explicit feerate for bumpfee (instagibbs)\n-- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n-\n-### RPC and other APIs\n-- #15492 remove deprecated generate method (Sjors)\n-- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n-- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n-- #15642 Remove deprecated rpc warnings (jnewbery)\n-- #15637 Rename size to vsize in mempool related calls (fanquake)\n-- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n-- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n-- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n-- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n-- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n-- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n-- #15748 remove dead mining code (jnewbery)\n-- #15751 Speed up deriveaddresses for large ranges (sipa)\n-- #15770 Validate maxfeerate with AmountFromValue (promag)\n-- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n-- #15463 Speedup getaddressesbylabel (promag)\n-- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n-- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n-- #15932 Serialize in getblock without cs_main (MarcoFalke)\n-- #15930 Add balances RPC (MarcoFalke)\n-- #15730 Show scanning details in getwalletinfo (promag)\n-- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n-- #14984 Speedup getrawmempool when verbose=true (promag)\n-- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n-- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n-- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n-- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n-- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n-- #16262 Allow shutdown while in generateblocks (pstratem)\n-- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n-- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n-- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n-- #16332 Add logpath description for getrpcinfo (instagibbs)\n-- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n-- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n-- #16467 sendrawtransaction help privacy note (jonatack)\n-- #16596 Fix getblocktemplate CLI example (emilengler)\n-- #15986 Add checksum to getdescriptorinfo (sipa)\n-- #16647 add weight to getmempoolentry output (fanquake)\n-- #16695 Add window final block height to getchaintxstats (leto)\n-- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n-- #16285 Improve scantxoutset response and help message (promag)\n-- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n-- #16787 Human readable network services (darosior)\n-- #16251 Improve signrawtransaction error reporting (ajtowns)\n-- #16873 fix regression in gettransaction (jonatack)\n-- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n-- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n-- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n-- #17131 fix -rpcclienttimeout 0 option (fjahr)\n-- #17249 Add missing deque include to fix build (jbeich)\n-\n-### GUI\n-- #15464 Drop unused return values in WalletFrame (promag)\n-- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n-- #15711 Generate bech32 addresses by default (MarcoFalke)\n-- #15829 update request payment button text and tab description (fanquake)\n-- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n-- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n-- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n-- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n-- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n-- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n-- #16263 Use qInfo() if no error occurs (hebasto)\n-- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n-- #16350 Remove unused guard (hebasto)\n-- #16106 Sort wallets in open wallet menu (promag)\n-- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n-- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n-- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n-- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n-- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n-- #16514 Remove unused RPCConsole::tabFocus (promag)\n-- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n-- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n-- #16578 Do not pass in command line arguments to QApplication (achow101)\n-- #16612 Remove menu icons (laanwj)\n-- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n-- #16694 Ensure transaction send error is always visible (fanquake)\n-- #14879 Add warning messages to the debug window (hebasto)\n-- #16708 Replace obsolete functions of QSslSocket (hebasto)\n-- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n-- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n-- #16707 Remove obsolete QModelIndex::child() (hebasto)\n-- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n-- #16760 Change uninstall icon on Windows (GChuf)\n-- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n-- #16788 Update transifex slug for 0.19 (laanwj)\n-- #15450 Create wallet menu option (achow101)\n-- #16735 Remove unused menu items for Windows and Linux (GChuf)\n-- #16826 Do additional character escaping for wallet names and address labels (achow101)\n-- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n-- #16714 add prune to intro screen with smart default (Sjors)\n-- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n-- #16822 Create wallet menu option follow-ups (jonatack)\n-- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n-- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n-- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n-- #16971 Change default size of intro frame (emilengler)\n-- #16988 Periodic translations update (laanwj)\n-- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n-- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n-- #17031 Prevent processing duplicate payment requests (promag)\n-- #17135 Make polling in ClientModel asynchronous (promag)\n-- #17120 Fix start timer from non QThread (promag)\n-- #17257 disable font antialiasing for QR image address (fanquake)\n-\n-### Build system\n-- #14954 Require python 3.5 (MarcoFalke)\n-- #15580 native_protobuf: avoid system zlib (dongcarl)\n-- #15601 Switch to python3 (take 3) (MarcoFalke)\n-- #15581 Make less assumptions about build env (dongcarl)\n-- #14853 latest RapidCheck (fanquake)\n-- #15446 Improve depends debuggability (dongcarl)\n-- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n-- #12051 add missing debian contrib file to tarball (puchu)\n-- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n-- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n-- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n-- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n-- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n-- #16051 add patch to common dependencies (fanquake)\n-- #16049 switch to secure download of all dependencies (Kemu)\n-- #16059 configure: Fix thread_local detection (dongcarl)\n-- #16089 add ability to skip building zeromq (fanquake)\n-- #15844 Purge libtool archives (dongcarl)\n-- #15461 update to Boost 1.70 (Sjors)\n-- #16141 remove GZIP export from gitian descriptors (fanquake)\n-- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n-- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n-- #16183 xtrans: Configure flags cleanup (dongcarl)\n-- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n-- #16271 remove -Wall from rapidcheck build flags (fanquake)\n-- #16309 [MSVC] allow user level project customization (NicolasDorier)\n-- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n-- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n-- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n-- #16352 prune dbus from depends (fanquake)\n-- #16270 expat 2.2.7 (fanquake)\n-- #16408 Prune X packages (dongcarl)\n-- #16386 disable unused Qt features (fanquake)\n-- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n-- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n-- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n-- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n-- #16573 disable building libsecp256k1 benchmarks (fanquake)\n-- #16533 disable libxcb extensions (fanquake)\n-- #16589 Remove unused src/obj-test folder (MarcoFalke)\n-- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n-- #16622 echo property tests status during build (jonatack)\n-- #16611 Remove src/obj directory from repository (laanwj)\n-- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n-- #16654 build: update RapidCheck Makefile (jonatack)\n-- #16370 cleanup package configure flags (fanquake)\n-- #16746 msbuild: Ignore linker warning (sipsorcery)\n-- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n-- #16810 guix: Remove ssp spec file hack (dongcarl)\n-- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n-- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n-- #15584 disable BIP70 support by default (fanquake)\n-- #16871 make building protobuf optional in depends (fanquake)\n-- #16879 remove redundant sed patching (fanquake)\n-- #16809 zlib: Move toolchain options to configure (dongcarl)\n-- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n-- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n-- #16982 Factor out qt translations from build system (laanwj)\n-- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n-- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n-- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n-- #16468 Exclude depends/Makefile in .gitignore (promag)\n-\n-### Tests and QA\n-- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n-- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n-- #15479 Add .style.yapf (MarcoFalke)\n-- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n-- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n-- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n-- #15466 Print remaining jobs in test_runner.py (stevenroose)\n-- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n-- #15255 Remove travis_wait from lint script (gkrizek)\n-- #15686 make pruning test faster (jnewbery)\n-- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n-- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n-- #15495 Add regtests for HTTP status codes (domob1812)\n-- #15772 Properly log named args in authproxy (MarcoFalke)\n-- #15771 Prevent concurrency issues reading .cookie file (promag)\n-- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n-- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n-- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n-- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n-- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n-- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n-- #15779 Add wallet_balance benchmark (MarcoFalke)\n-- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n-- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n-- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n-- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n-- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n-- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n-- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n-- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n-- #15758 Add further tests to wallet_balance (MarcoFalke)\n-- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n-- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n-- #15927 log thread names by default in functional tests (jnewbery)\n-- #15664 change default Python block serialization to witness (instagibbs)\n-- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n-- #15963 Make random seed logged and settable (jnewbery)\n-- #15943 Fail if RPC has been added without tests (MarcoFalke)\n-- #16036 travis: Run all lint scripts even if one fails (scravy)\n-- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n-- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n-- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n-- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n-- #16124 Limit Python linting to files in the repo (practicalswift)\n-- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n-- #16214 travis: Fix caching issues (MarcoFalke)\n-- #15982 Make msg_block a witness block (MarcoFalke)\n-- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n-- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n-- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n-- #16234 Add test for unknown args (MarcoFalke)\n-- #16207 stop generating lcov coverage when functional tests fail (asood123)\n-- #16252 Log to debug.log in all unit tests (MarcoFalke)\n-- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n-- #16278 Remove unused includes (practicalswift)\n-- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n-- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n-- #16294 Create at most one testing setup (MarcoFalke)\n-- #16299 bench: Move generated data to a dedicated translation unit (promag)\n-- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n-- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n-- #16267 bench: Benchmark blocktojson (fanatid)\n-- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n-- #16338 Disable other targets when enable-fuzz is set (qmma70)\n-- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n-- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n-- #16390 Add --filter option to test_runner.py (promag)\n-- #15891 Require standard txs in regtest by default (MarcoFalke)\n-- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n-- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n-- #16422 remove redundant setup in addrman_tests (zenosage)\n-- #16438 travis: Print memory and number of cpus (MarcoFalke)\n-- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n-- #16459 Fix race condition in example_test.py (sdaftuar)\n-- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n-- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n-- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n-- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n-- #16293 Make test cases separate functions (MarcoFalke)\n-- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n-- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n-- #16493 Fix test failures (MarcoFalke)\n-- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n-- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n-- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n-- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n-- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n-- #16598 Remove confusing hash256 function in util (elichai)\n-- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n-- #16563 Add unit test for AddTimeData (mzumsande)\n-- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n-- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n-- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n-- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n-- #16646 Run tests with UPnP disabled (fanquake)\n-- #16623 ci: Add environment files for all settings (MarcoFalke)\n-- #16656 fix rpc_setban.py race (jonasschnelli)\n-- #16570 Make descriptor tests deterministic (davereikher)\n-- #16404 Test ZMQ notification after chain reorg (promag)\n-- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n-- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n-- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n-- #16768 Make lint-includes.sh work from any directory (kristapsk)\n-- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n-- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n-- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n-- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n-- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n-- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n-- #16888 Bump timeouts in slow running tests (MarcoFalke)\n-- #16864 Add python bech32 impl round-trip test (instagibbs)\n-- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n-- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n-- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n-- #16898 Remove connect_nodes_bi (MarcoFalke)\n-- #16917 Move common function assert_approx() into util.py (fridokus)\n-- #16921 Add information on how to add Vulture suppressions (practicalswift)\n-- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n-- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n-- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n-- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n-- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n-- #16961 Remove python dead code linter (laanwj)\n-- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n-- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n-- #16987 Correct docstring param name (jbampton)\n-- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n-- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n-- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n-- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n-- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n-- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n-\n-### Miscellaneous\n-- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n-- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n-- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n-- #15519 Add Poly1305 implementation (jonasschnelli)\n-- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n-- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n-- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n-- #15849 Thread names in logs and deadlock debug tools (jamesob)\n-- #15650 Handle the result of posix_fallocate system call (lucayepa)\n-- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n-- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n-- #15968 Fix portability issue with pthreads (grim-trigger)\n-- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n-- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n-- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n-- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n-- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n-- #15236 scripts and tools: Make --setup command independent (hebasto)\n-- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n-- #16046 util: Add type safe gettime (MarcoFalke)\n-- #15703 Update secp256k1 subtree to latest upstream (sipa)\n-- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n-- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n-- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n-- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n-- #16112 util: Log early messages (MarcoFalke)\n-- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n-- #16300 util: Explain why the path is cached (MarcoFalke)\n-- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n-- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n-- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n-- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n-- #15277 contrib: Enable building in guix containers (dongcarl)\n-- #16362 Add bilingual_str type (hebasto)\n-- #16481 logs: add missing space (harding)\n-- #16581 sipsorcery gitian key (sipsorcery)\n-- #16566 util: Refactor upper/lowercase functions (kallewoof)\n-- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n-- #16625 scripts: Remove github-merge.py (fanquake)\n-- #15864 Fix datadir handling (hebasto)\n-- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n-- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n-- #16730 Support serialization of `std::vector<bool>` (sipa)\n-- #16556 Fix systemd service file configuration directory setup (setpill)\n-- #15615 Add log output during initial header sync (jonasschnelli)\n-- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n-- #16489 log: harmonize bitcoind logging (jonatack)\n-- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n-- #16984 util: Make thread names shorter (hebasto)\n-- #17038 Don't rename main thread at process level (laanwj)\n-- #17184 util: Filter out macos process serial number (hebasto)\n-- #17095 util: Filter control characters out of log messages (laanwj)\n-- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n-- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n-\n-### Documentation\n-- #15514 Update Transifex links (fanquake)\n-- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n-- #15530 Move wallet lock annotations to header (MarcoFalke)\n-- #15562 remove duplicate clone step in build-windows.md (fanquake)\n-- #15565 remove release note fragments (fanquake)\n-- #15444 Additional productivity tips (Sjors)\n-- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n-- #15604 release note for disabling reject messages by default (jnewbery)\n-- #15611 Add Gitian key for droark (droark)\n-- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n-- #15603 Add more tips to productivity.md (gwillen)\n-- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n-- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n-- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n-- #15659 fix findFork comment (r8921039)\n-- #15718 Improve netaddress comments (dongcarl)\n-- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n-- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n-- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n-- #15887 Align code example style with clang-format (hebasto)\n-- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n-- #15908 Align MSVC build options with Linux build ones (hebasto)\n-- #15941 Add historical release notes for 0.18.0 (laanwj)\n-- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n-- #15607 Release process updates (jonatack)\n-- #14364 Clarify -blocksdir usage (sangaman)\n-- #15777 Add doxygen comments for keypool classes (jnewbery)\n-- #15820 Add productivity notes for dummy rebases (dongcarl)\n-- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n-- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n-- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n-- #16039 add release note for 14954 (fanquake)\n-- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n-- #16140 create security policy (narula)\n-- #16164 update release process for SECURITY.md (jonatack)\n-- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n-- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n-- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n-- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n-- #16241 add rapidcheck to vcpkg install list (fanquake)\n-- #16243 Remove travis badge from readme (MarcoFalke)\n-- #16256 remove orphaned header in developer notes (jonatack)\n-- #15964 Improve build-osx document formatting (giulio92)\n-- #16313 Fix broken link in doc/build-osx.md (jonatack)\n-- #16330 Use placeholder instead of key expiration date (hebasto)\n-- #16339 add reduce-memory.md (fanquake)\n-- #16347 Include static members in Doxygen (dongcarl)\n-- #15824 Improve netbase comments (dongcarl)\n-- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n-- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n-- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n-- #16483 update Python command in msvc readme (sipsorcery)\n-- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n-- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n-- #16536 Update and extend benchmarking.md (ariard)\n-- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n-- #16574 Add historical release notes for 0.18.1 (laanwj)\n-- #16585 Update Markdown syntax for bdb packages (emilengler)\n-- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n-- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n-- #16615 Fix typos in COPYRIGHT (gapeman)\n-- #16626 Fix spelling error chache -> cache (nilswloewen)\n-- #16587 Improve versionbits.h documentation (ariard)\n-- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n-- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n-- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n-- #16645 initial RapidCheck property-based testing documentation (jonatack)\n-- #16691 improve depends prefix documentation (fanquake)\n-- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n-- #16723 Update labels in CONTRIBUTING.md (hebasto)\n-- #16461 Tidy up shadowing section (promag)\n-- #16621 add default bitcoin.conf locations (GChuf)\n-- #16752 Delete stale URL in test README (michaelfolkson)\n-- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n-- #16806 Add issue templates for bug and feature request (MarcoFalke)\n-- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n-- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n-- #16757 CChainState return values (MarcoFalke)\n-- #16847 add comments clarifying how local services are advertised (jamesob)\n-- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n-- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n-- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n-- #16914 Update homebrew instruction for doxygen (Sjors)\n-- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n-- #16960 replace outdated OpenSSL comment in test README (fanquake)\n-- #16968 Remove MSVC update step from translation process (laanwj)\n-- #16953 Improve test READMEs (fjahr)\n-- #16962 Put PR template in comments (laanwj)\n-- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n-- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n-- #16997 Update bips.md for 0.19 (laanwj)\n-- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n-- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n-- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 251\n-- Aaron Clauson\n-- Akio Nakamura\n-- Alistair Mann\n-- Amiti Uttarwar\n-- Andrew Chow\n-- andrewtoth\n-- Anthony Towns\n-- Antoine Riard\n-- Aseem Sood\n-- Ben Carman\n-- Ben Woosley\n-- bpay\n-- Carl Dong\n-- Carnhof Daki\n-- Chris Capobianco\n-- Chris Moore\n-- Chuf\n-- clashic\n-- clashicly\n-- Cory Fields\n-- Daki Carnhof\n-- Dan Gershony\n-- Daniel Edgecumbe\n-- Daniel Kraft\n-- Daniel McNally\n-- darosior\n-- David A. Harding\n-- David Reikher\n-- Douglas Roark\n-- Elichai Turkel\n-- Emil\n-- Emil Engler\n-- ezegom\n-- Fabian Jahr\n-- fanquake\n-- Felix Weis\n-- Ferdinando M. Ametrano\n-- fridokus\n-- gapeman\n-- GChuf\n-- Gert-Jaap Glasbergen\n-- Giulio Lombardo\n-- Glenn Willen\n-- Graham Krizek\n-- Gregory Sanders\n-- grim-trigger\n-- gwillen\n-- Hennadii Stepanov\n-- Jack Mallers\n-- James Hilliard\n-- James O'Beirne\n-- Jan Beich\n-- Jeremy Rubin\n-- JeremyRand\n-- Jim Posen\n-- John Bampton\n-- John Newbery\n-- Jon Atack\n-- Jon Layton\n-- Jonas Schnelli\n-- Jonathan \"Duke\" Leto\n-- Jo\u00e3o Barbosa\n-- Joonmo Yang\n-- Jordan Baczuk\n-- Jorge Tim\u00f3n\n-- Josu Go\u00f1i\n-- Julian Fleischer\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- keepkeyjon\n-- Kirill Fomichev\n-- Kristaps Kaupe\n-- Kristian Kramer\n-- Larry Ruane\n-- Lenny Maiorani\n-- LongShao007\n-- Luca Venturini\n-- lucash-dev\n-- Luke Dashjr\n-- marcoagner\n-- MarcoFalke\n-- marcuswin\n-- Martin Ankerl\n-- Martin Zumsande\n-- Matt Corallo\n-- MeshCollider\n-- Michael Folkson\n-- Miguel Herranz\n-- Nathan Marley\n-- Neha Narula\n-- nicolas.dorier\n-- Nils Loewen\n-- nkostoulas\n-- orient\n-- Patrick Strateman\n-- Peter Bushnell\n-- Peter Wagner\n-- Pieter Wuille\n-- practicalswift\n-- qmma\n-- r8921039\n-- RJ Rybarczyk\n-- Russell Yanofsky\n-- Samuel Dobson\n-- Sebastian Falbesoner\n-- setpill\n-- shannon1916\n-- Sjors Provoost\n-- soroosh-sdi\n-- Steven Roose\n-- Suhas Daftuar\n-- tecnovert\n-- THETCR\n-- Tim Ruffing\n-- Tobias Kaderle\n-- Torkel Rogstad\n-- Ulrich Kempken\n-- whythat\n-- William Casarin\n-- Wladimir J. van der Laan\n-- zenosage\n+Due to a last-minute issue (#17449), 0.19.0, although it was tagged, was never released.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n+See the release notes for 0.19.0.1 instead."
      }
    ]
  },
  {
    "sha": "2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWVhY2RmZTQ0ZTVmNWNiYjI0MGY5MmIzZDdkZGNkZjUwNzlkYzNi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T10:19:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T10:19:54Z"
      },
      "message": "Merge #17527: Fix CPUID subleaf iteration\n\nf93fc61c65d605eae2d3e2c98bdd30ae587fcdab Put bounds on the number of CPUID leaves explored (Pieter Wuille)\nba2c5fe1477cec80d7e02f824daba21a1021758e Fix CPUID subleaf iteration (Pieter Wuille)\n\nPull request description:\n\n  This fixes #17523.\n\n  The code to determine which CPUID subleaves to explore was incorrect in #17270. The new code here is based on Intel's reference documentation for CPUID (a document called \"Intel\u00ae Processor Identification and the CPUID Instruction - Application Note 485\", which I cannot actually find on their own website).\n\nACKs for top commit:\n  laanwj:\n    ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab\n  jonatack:\n    ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab code review, tested rebased on current master bb862d7 with Debian 4.19 x86_64\n  mzumsande:\n    ACK f93fc61, reviewed code and compared with the intel doc, tested on an AMD and an Intel processor.\n\nTree-SHA512: 2790b326fa397b736c0f39f25807bea57de2752fdd58bf6693d044b8cb26df36c11cce165a334b471f8e33724f10e3b76edab5cc4e0e7776601aabda13277245",
      "tree": {
        "sha": "7c32a1934e9f7034e70b8a4013e8fdefdc46166f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7c32a1934e9f7034e70b8a4013e8fdefdc46166f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3aWUoACgkQHkrtYphs\n0l1lUQgAuIMqVdlzUeG8pX2+AHBfJ1HIy03UCe11z6826LS8sHOJaOwJkvULTUqL\nKNafe54MsuSiEfge3Coi4IVCBuwhmFs1inquZtt1YQJzgVamDbdTxZoFjyJdN1T5\nr4zQOUhx7FXNMIFisAktj6oCGmip3U24fGL3+bYWTYtPp3ylbu/ZYT3nC2PQzOP2\nvFcAf7UUvTleKAK00yaL7mbyxInAvLDiBm4ovqhT2N/+Rw8tcvLVrF76x3e29P9k\nGoaF8eqpZglAOUpacJnIEZKuzVEfoFWvxFkV/EqevBHrdNAB+3XDloaK5DclZvge\nlUMnFkzjj2vpaA6NrS/zgkAqjHWWIA==\n=ACVd\n-----END PGP SIGNATURE-----",
        "payload": "tree 7c32a1934e9f7034e70b8a4013e8fdefdc46166f\nparent 9cbd87d8ee2910ac55c215451453e5162e1c377a\nparent f93fc61c65d605eae2d3e2c98bdd30ae587fcdab\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574590767 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574590794 +0100\n\nMerge #17527: Fix CPUID subleaf iteration\n\nf93fc61c65d605eae2d3e2c98bdd30ae587fcdab Put bounds on the number of CPUID leaves explored (Pieter Wuille)\nba2c5fe1477cec80d7e02f824daba21a1021758e Fix CPUID subleaf iteration (Pieter Wuille)\n\nPull request description:\n\n  This fixes #17523.\n\n  The code to determine which CPUID subleaves to explore was incorrect in #17270. The new code here is based on Intel's reference documentation for CPUID (a document called \"Intel\u00ae Processor Identification and the CPUID Instruction - Application Note 485\", which I cannot actually find on their own website).\n\nACKs for top commit:\n  laanwj:\n    ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab\n  jonatack:\n    ACK f93fc61c65d605eae2d3e2c98bdd30ae587fcdab code review, tested rebased on current master bb862d7 with Debian 4.19 x86_64\n  mzumsande:\n    ACK f93fc61, reviewed code and compared with the intel doc, tested on an AMD and an Intel processor.\n\nTree-SHA512: 2790b326fa397b736c0f39f25807bea57de2752fdd58bf6693d044b8cb26df36c11cce165a334b471f8e33724f10e3b76edab5cc4e0e7776601aabda13277245\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cbd87d8ee2910ac55c215451453e5162e1c377a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cbd87d8ee2910ac55c215451453e5162e1c377a"
      },
      {
        "sha": "f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f93fc61c65d605eae2d3e2c98bdd30ae587fcdab"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 18,
      "deletions": 7
    },
    "files": [
      {
        "sha": "6992c720fff33e5bd535f8a5e5881ee9194571ec",
        "filename": "src/randomenv.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 7,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b/src/randomenv.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b/src/randomenv.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/randomenv.cpp?ref=2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
        "patch": "@@ -197,19 +197,30 @@ void AddAllCPUID(CSHA512& hasher)\n     // Iterate over all standard leaves\n     AddCPUID(hasher, 0, 0, ax, bx, cx, dx); // Returns max leaf in ax\n     uint32_t max = ax;\n-    for (uint32_t leaf = 1; leaf <= max; ++leaf) {\n-        for (uint32_t subleaf = 0;; ++subleaf) {\n+    for (uint32_t leaf = 1; leaf <= max && leaf <= 0xFF; ++leaf) {\n+        uint32_t maxsub = 0;\n+        for (uint32_t subleaf = 0; subleaf <= 0xFF; ++subleaf) {\n             AddCPUID(hasher, leaf, subleaf, ax, bx, cx, dx);\n-            // Iterate over subleaves for leaf 4, 11, 13\n-            if (leaf != 4 && leaf != 11 && leaf != 13) break;\n-            if ((leaf == 4 || leaf == 13) && ax == 0) break;\n-            if (leaf == 11 && (cx & 0xFF00) == 0) break;\n+            // Iterate subleafs for leaf values 4, 7, 11, 13\n+            if (leaf == 4) {\n+                if ((ax & 0x1f) == 0) break;\n+            } else if (leaf == 7) {\n+                if (subleaf == 0) maxsub = ax;\n+                if (subleaf == maxsub) break;\n+            } else if (leaf == 11) {\n+                if ((cx & 0xff00) == 0) break;\n+            } else if (leaf == 13) {\n+                if (ax == 0 && bx == 0 && cx == 0 && dx == 0) break;\n+            } else {\n+                // For any other leaf, stop after subleaf 0.\n+                break;\n+            }\n         }\n     }\n     // Iterate over all extended leaves\n     AddCPUID(hasher, 0x80000000, 0, ax, bx, cx, dx); // Returns max extended leaf in ax\n     uint32_t ext_max = ax;\n-    for (uint32_t leaf = 0x80000001; leaf <= ext_max; ++leaf) {\n+    for (uint32_t leaf = 0x80000001; leaf <= ext_max && leaf <= 0x800000FF; ++leaf) {\n         AddCPUID(hasher, leaf, 0, ax, bx, cx, dx);\n     }\n }"
      }
    ]
  },
  {
    "sha": "eafd2593674b6890418a50eadf69425071b824e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWZkMjU5MzY3NGI2ODkwNDE4YTUwZWFkZjY5NDI1MDcxYjgyNGU0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2019-11-23T22:18:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T12:40:11Z"
      },
      "message": "build: Add NX workaround for RV64\n\nWork around https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740.",
      "tree": {
        "sha": "5e342e90a2a042904bf3917fd820d5cbbdde24fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e342e90a2a042904bf3917fd820d5cbbdde24fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eafd2593674b6890418a50eadf69425071b824e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafd2593674b6890418a50eadf69425071b824e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eafd2593674b6890418a50eadf69425071b824e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafd2593674b6890418a50eadf69425071b824e4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6e42256fe8900ed90f9644906b77f97e1600952",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6e42256fe8900ed90f9644906b77f97e1600952",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6e42256fe8900ed90f9644906b77f97e1600952"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7016ff861b991ea93333ea437a0b7e49324ed222",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eafd2593674b6890418a50eadf69425071b824e4/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eafd2593674b6890418a50eadf69425071b824e4/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=eafd2593674b6890418a50eadf69425071b824e4",
        "patch": "@@ -46,7 +46,7 @@ script: |\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++\"\n \n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n@@ -160,6 +160,13 @@ script: |\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n     INSTALLPATH=`pwd`/installed/${DISTNAME}"
      }
    ]
  },
  {
    "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzlkMTk5NjY3ODg4ZTVkNjAzMDlmMTVhMzhlZWQ0ZDNhZmU1NmM0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T13:24:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-24T13:24:15Z"
      },
      "message": "Merge #17574: doc: Add historical release notes for 0.19.0.1\n\n14feda0814a9fecf2138041f7d36fe1ab338797f doc: Add historical release notes for 0.19.0.1 (Wladimir J. van der Laan)\n\nPull request description:\n\n  Add historical release notes for 0.19.0.1. And replace 0.19.0's release notes with a short explanation.\n\nTop commit has no ACKs.\n\nTree-SHA512: 3551250c8b0643a96b645af9088ef07a079452bad3abf2b5653563f5ecbc07fc1e1c6adcd56eb9fa6e3e7637719b3b99253b95bce409a9267a428323b559bfa3",
      "tree": {
        "sha": "127b93f871700f79b8bc4ba31d161531974c22d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/127b93f871700f79b8bc4ba31d161531974c22d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3ahH8ACgkQHkrtYphs\n0l3/eQgAnlLYCToFq5NwE8kcPNF58pCuLRo8Lg++kGfZxuvtoFXWbCU5esF47LcW\n+x0OgEyvDM28yaK/ZE6ewHuwUjVYmcehTIJ95Z4a7b6dd1mkXKyXxIT3RIhupB+Y\nENgarhagkVcEOxuJqP9EPhWo/AlxipHWlZimGBPsopqJSy6eoNS7wCvKqePN3iwO\noqr2uApoM2aNtLonNNUZIUy6lEGCq0TB+bTGq0d72BqK6XNttJmtqKk6jcvc3Bex\n4u+PZM+Q+r/NcFp46j7cKFNSaZy3lKH5NIDFAo/8m6XUopNgw/3xs9yePLevU9ld\nJyG54qiFCDJ2tlQAEcxBxjUHxQumBA==\n=G/VS\n-----END PGP SIGNATURE-----",
        "payload": "tree 127b93f871700f79b8bc4ba31d161531974c22d6\nparent 2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b\nparent 14feda0814a9fecf2138041f7d36fe1ab338797f\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574601848 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574601855 +0100\n\nMerge #17574: doc: Add historical release notes for 0.19.0.1\n\n14feda0814a9fecf2138041f7d36fe1ab338797f doc: Add historical release notes for 0.19.0.1 (Wladimir J. van der Laan)\n\nPull request description:\n\n  Add historical release notes for 0.19.0.1. And replace 0.19.0's release notes with a short explanation.\n\nTop commit has no ACKs.\n\nTree-SHA512: 3551250c8b0643a96b645af9088ef07a079452bad3abf2b5653563f5ecbc07fc1e1c6adcd56eb9fa6e3e7637719b3b99253b95bce409a9267a428323b559bfa3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2eeacdfe44e5f5cbb240f92b3d7ddcdf5079dc3b"
      },
      {
        "sha": "14feda0814a9fecf2138041f7d36fe1ab338797f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/14feda0814a9fecf2138041f7d36fe1ab338797f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/14feda0814a9fecf2138041f7d36fe1ab338797f"
      }
    ],
    "stats": {
      "total": 2175,
      "additions": 1092,
      "deletions": 1083
    },
    "files": [
      {
        "sha": "70b8ec589fa36db6f5cb594fb608813369780969",
        "filename": "doc/release-notes/release-notes-0.19.0.1.md",
        "status": "added",
        "additions": 1089,
        "deletions": 0,
        "changes": 1089,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/239d199667888e5d60309f15a38eed4d3afe56c4/doc/release-notes/release-notes-0.19.0.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/239d199667888e5d60309f15a38eed4d3afe56c4/doc/release-notes/release-notes-0.19.0.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.1.md?ref=239d199667888e5d60309f15a38eed4d3afe56c4",
        "patch": "@@ -0,0 +1,1089 @@\n+Bitcoin Core version 0.19.0.1 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-0.19.0.1/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes for older versions), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but might take some time if the datadir needs to be migrated.  Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems using\n+the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n+to use Bitcoin Core on unsupported systems.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+as frequently tested on them.\n+\n+From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n+built using Qt 5.9.x, which doesn't support versions of macOS older than\n+10.10. Additionally, Bitcoin Core does not yet change appearance when\n+macOS \"dark mode\" is activated.\n+\n+Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n+to open the Bitcoin Core .dmg. This is due to new signing requirements\n+imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n+\n+Notable changes\n+===============\n+\n+New user documentation\n+----------------------\n+\n+- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n+  suggests configuration tweaks for running Bitcoin Core on systems with\n+  limited memory. (#16339)\n+\n+New RPCs\n+--------\n+\n+- `getbalances` returns an object with all balances (`mine`,\n+  `untrusted_pending` and `immature`). Please refer to the RPC help of\n+  `getbalances` for details. The new RPC is intended to replace\n+  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n+  `getwalletinfo`.  These old calls and fields may be removed in a\n+  future version. (#15930, #16239)\n+\n+- `setwalletflag` sets and unsets wallet flags that enable or disable\n+  features specific to that existing wallet, such as the new\n+  `avoid_reuse` feature documented elsewhere in these release notes.\n+  (#13756)\n+\n+- `getblockfilter` gets the BIP158 filter for the specified block.  This\n+  RPC is only enabled if block filters have been created using the\n+  `-blockfilterindex` configuration option. (#14121)\n+\n+New settings\n+------------\n+\n+- `-blockfilterindex` enables the creation of BIP158 block filters for\n+  the entire blockchain.  Filters will be created in the background and\n+  currently use about 4 GiB of space.  Note: this version of Bitcoin\n+  Core does not serve block filters over the P2P network, although the\n+  local user may obtain block filters using the `getblockfilter` RPC.\n+  (#14121)\n+\n+Updated settings\n+----------------\n+\n+- `whitebind` and `whitelist` now accept a list of permissions to\n+  provide peers connecting using the indicated interfaces or IP\n+  addresses.  If no permissions are specified with an address or CIDR\n+  network, the implicit default permissions are the same as previous\n+  releases.  See the `bitcoind -help` output for these two options for\n+  details about the available permissions. (#16248)\n+\n+- Users setting custom `dbcache` values can increase their setting slightly\n+  without using any more real memory.  Recent changes reduced the memory use\n+  by about 9% and made chainstate accounting more accurate (it was underestimating\n+  the use of memory before).  For example, if you set a value of \"450\" before, you\n+  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n+\n+\n+Updated RPCs\n+------------\n+\n+Note: some low-level RPC changes mainly useful for testing are described in the\n+Low-level Changes section below.\n+\n+- `sendmany` no longer has a `minconf` argument.  This argument was not\n+  well-specified and would lead to RPC errors even when the wallet's\n+  coin selection succeeded.  Users who want to influence coin selection\n+  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n+  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n+  arguments. (#15596)\n+\n+- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n+  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n+  whether already used addresses should be included in the operation.\n+  Additionally, `sendtoaddress` will avoid partial spends when\n+  `avoid_reuse` is enabled even if this feature is not already enabled\n+  via the `-avoidpartialspends` command line flag because not doing so\n+  would risk using up the \"wrong\" UTXO for an address reuse case.\n+  (#13756)\n+\n+- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n+  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n+  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n+\n+- `listunspent` now returns a \"reused\" bool for each output if the\n+  wallet flag \"avoid_reuse\" is enabled. (#13756)\n+\n+- `getblockstats` now uses BlockUndo data instead of the transaction\n+  index, making it much faster, no longer dependent on the `-txindex`\n+  configuration option, and functional for all non-pruned blocks.\n+  (#14802)\n+\n+- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n+  out input and output scripts and keys when known. P2SH-witness inputs\n+  will be filled in from the UTXO set when a descriptor is provided that\n+  shows they're spending segwit outputs.  See the RPC help text for full\n+  details. (#15427)\n+\n+- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n+  `allowhighfees` parameter to fail mempool acceptance if the\n+  transaction fee exceeds the value of the configuration option\n+  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n+  can be changed when calling either RPC using a `maxfeerate` parameter.\n+  (#15620)\n+\n+- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n+  `getrawmempool` no longer return a `size` field unless the\n+  configuration option `-deprecatedrpc=size` is used.  Instead a new\n+  `vsize` field is returned with the transaction's virtual size\n+  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n+\n+- `getwalletinfo` now includes a `scanning` field that is either `false`\n+  (no scanning) or an object with information about the duration and\n+  progress of the wallet's scanning historical blocks for transactions\n+  affecting its balances. (#15730)\n+\n+- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n+  set to `true`, a new `decoded` field will be added to the response containing\n+  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n+  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n+\n+- `createwallet` accepts a new `passphrase` parameter.  If set, this\n+  will create the new wallet encrypted with the given passphrase.  If\n+  unset (the default) or set to an empty string, no encryption will be\n+  used. (#16394)\n+\n+- `getchaintxstats` RPC now returns the additional key of\n+  `window_final_block_height`. (#16695)\n+\n+- `getmempoolentry` now provides a `weight` field containing the\n+  transaction weight as defined in BIP141. (#16647)\n+\n+- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n+\n+- `getdescriptorinfo` now returns an additional `checksum` field\n+  containing the checksum for the unmodified descriptor provided by the\n+  user (that is, before the descriptor is normalized for the\n+  `descriptor` field). (#15986)\n+\n+- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n+  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n+  provided. This made it easy to correlate inputs to outputs, representing a\n+  privacy leak. (#16512)\n+\n+- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n+  `-walletrbf` configuration option is set to true. (#15911)\n+\n+GUI changes\n+-----------\n+\n+- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n+  during invoice generation using a GUI toggle, or the default address\n+  type may be changed with the `-addresstype` configuration option.\n+  (#15711, #16497)\n+\n+- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n+\n+Deprecated or removed configuration options\n+-------------------------------------------\n+\n+- `-mempoolreplacement` is removed, although default node behavior\n+  remains the same.  This option previously allowed the user to prevent\n+  the node from accepting or relaying BIP125 transaction replacements.\n+  This is different from the remaining configuration option\n+  `-walletrbf`. (#16171)\n+\n+Deprecated or removed RPCs\n+--------------------------\n+\n+- `bumpfee` no longer accepts a `totalFee` option unless the\n+  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n+  parameter will be fully removed in a subsequent release. (#15996)\n+\n+- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n+\n+- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n+  Use the `generatetoaddress` RPC instead. (#15492)\n+\n+P2P changes\n+-----------\n+\n+- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n+  by default, but can be enabled by setting the `-enablebip61` command\n+  line option.  BIP 61 reject messages will be removed entirely in a\n+  future version of Bitcoin Core. (#14054)\n+\n+- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n+  especially for nodes with spinning disks, the default value for the\n+  `-peerbloomfilters` configuration option has been changed to false.\n+  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n+  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n+  transactions matching a bloom filter.  Users who still want to provide\n+  bloom filter support may either set the configuration option to true\n+  to re-enable both BIP111 and BIP37 support or enable just BIP37\n+  support for specific peers using the updated `-whitelist` and\n+  `-whitebind` configuration options described elsewhere in these\n+  release notes.  For the near future, lightweight clients using public\n+  BIP111/BIP37 nodes should still be able to connect to older versions\n+  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n+  but developers of such software should consider migrating to either\n+  using specific BIP37 nodes or an alternative transaction filtering\n+  system. (#16152)\n+\n+- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n+\n+Miscellaneous CLI Changes\n+-------------------------\n+\n+- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n+  `chain` and now returns the current network name as defined in BIP70\n+  (main, test, regtest). (#15566)\n+\n+Low-level changes\n+=================\n+\n+RPC\n+---\n+\n+- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n+  Instead, information has been moved into the `softforks` object and\n+  an additional `type` field describes how Bitcoin Core determines\n+  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n+  help for details. (#16060)\n+\n+- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n+  and `segwit` (the BIP9 deployments that are currently in active\n+  state). (#16060)\n+\n+- `getrpcinfo` now returns a `logpath` field with the path to\n+  `debug.log`. (#15483)\n+\n+Tests\n+-----\n+\n+- The regression test chain enabled by the `-regtest` command line flag\n+  now requires transactions to not violate standard policy by default.\n+  This is the same default used for mainnet and makes it easier to test\n+  mainnet behavior on regtest. Note that the testnet still allows\n+  non-standard txs by default and that the policy can be locally\n+  adjusted with the `-acceptnonstdtxn` command line flag for both test\n+  chains. (#15891)\n+\n+Configuration\n+------------\n+\n+- A setting specified in the default section but not also specified in a\n+  network-specific section (e.g. testnet) will now produce an error\n+  preventing startup instead of just a warning unless the network is\n+  mainnet.  This prevents settings intended for mainnet from being\n+  applied to testnet or regtest. (#15629)\n+\n+- On platforms supporting `thread_local`, log lines can be prefixed with\n+  the name of the thread that caused the log. To enable this behavior,\n+  use `-logthreadnames=1`. (#15849)\n+\n+Network\n+-------\n+\n+- When fetching a transaction announced by multiple peers, previous versions of\n+  Bitcoin Core would sequentially attempt to download the transaction from each\n+  announcing peer until the transaction is received, in the order that those\n+  peers' announcements were received.  In this release, the download logic has\n+  changed to randomize the fetch order across peers and to prefer sending\n+  download requests to outbound peers over inbound peers. This fixes an issue\n+  where inbound peers could prevent a node from getting a transaction.\n+  (#14897, #15834)\n+\n+- If a Tor hidden service is being used, Bitcoin Core will be bound to\n+  the standard port 8333 even if a different port is configured for\n+  clearnet connections.  This prevents leaking node identity through use\n+  of identical non-default port numbers. (#15651)\n+\n+Mempool and transaction relay\n+-----------------------------\n+\n+- Allows one extra single-ancestor transaction per package.  Previously,\n+  if a transaction in the mempool had 25 descendants, or it and all of\n+  its descendants were over 101,000 vbytes, any newly-received\n+  transaction that was also a descendant would be ignored.  Now, one\n+  extra descendant will be allowed provided it is an immediate\n+  descendant (child) and the child's size is 10,000 vbytes or less.\n+  This makes it possible for two-party contract protocols such as\n+  Lightning Network to give each participant an output they can spend\n+  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n+  allowing one malicious participant to fill the entire package and thus\n+  prevent the other participant from spending their output. (#15681)\n+\n+- Transactions with outputs paying v1 to v16 witness versions (future\n+  segwit versions) are now accepted into the mempool, relayed, and\n+  mined.  Attempting to spend those outputs remains forbidden by policy\n+  (\"non-standard\").  When this change has been widely deployed, wallets\n+  and services can accept any valid bech32 Bitcoin address without\n+  concern that transactions paying future segwit versions will become\n+  stuck in an unconfirmed state. (#15846)\n+\n+- Legacy transactions (transactions with no segwit inputs) must now be\n+  sent using the legacy encoding format, enforcing the rule specified in\n+  BIP144.  (#14039)\n+\n+Wallet\n+------\n+\n+- When in pruned mode, a rescan that was triggered by an `importwallet`,\n+  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n+  when blocks have been pruned. Previously it would fail when `-prune`\n+  has been set.  This change allows setting `-prune` to a high value\n+  (e.g. the disk size) without the calls to any of the import RPCs\n+  failing until the first block is pruned. (#15870)\n+\n+- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n+  BTC), the RPC commands `walletcreatefundedpsbt` and\n+  `fundrawtransaction` will now fail instead of rounding down the fee.\n+  Be aware that the `feeRate` argument is specified in BTC per 1,000\n+  vbytes, not satoshi per vbyte. (#16257)\n+\n+- A new wallet flag `avoid_reuse` has been added (default off). When\n+  enabled, a wallet will distinguish between used and unused addresses,\n+  and default to not use the former in coin selection.  When setting\n+  this flag on an existing wallet, rescanning the blockchain is required\n+  to correctly mark previously used destinations.  Together with \"avoid\n+  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n+  serious privacy issue where a malicious user can track spends by\n+  sending small payments to a previously-paid address that would then\n+  be included with unrelated inputs in future payments. (#13756)\n+\n+Build system changes\n+--------------------\n+\n+- Python >=3.5 is now required by all aspects of the project. This\n+  includes the build systems, test framework and linters. The previously\n+  supported minimum (3.4), was EOL in March 2019. (#14954)\n+\n+- The minimum supported miniUPnPc API version is set to 10. This keeps\n+  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n+  packages. Please note, on Debian this package is still vulnerable to\n+  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n+  (in jessie only) and\n+  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n+  (both in jessie and in stretch). (#15993)\n+\n+0.19.0 change log\n+=================\n+\n+### Consensus\n+- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n+- #16060 Bury bip9 deployments (jnewbery)\n+\n+### Policy\n+- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n+- #15846 Make sending to future native witness outputs standard (sipa)\n+\n+### Block and transaction handling\n+- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n+- #14121 Index for BIP 157 block filters (jimpo)\n+- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n+- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n+- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n+- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n+- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n+- #16056 remove unused magic number from consistency check (instagibbs)\n+- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n+- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n+- #14193 validation: Add missing mempool locks (MarcoFalke)\n+- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n+- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n+- #16471 log correct messages when CPFP fails (jnewbery)\n+- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n+- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n+- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n+- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n+- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n+- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n+- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n+- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n+\n+### P2P protocol and network code\n+- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n+- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n+- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n+- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n+- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n+- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n+- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n+- #16152 Disable bloom filtering by default (TheBlueMatt)\n+- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n+- #16197 Use mockable time for tx download (MarcoFalke)\n+- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n+- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n+- #16631 Restore default whitelistrelay to true (NicolasDorier)\n+- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n+- #15558 Don't query all DNS seeds at once (sipa)\n+- #16999 0.19 seeds update (laanwj)\n+\n+### Wallet\n+- #15288 Remove wallet -> node global function calls (ryanofsky)\n+- #15491 Improve log output for errors during load (gwillen)\n+- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n+- #15680 Remove resendwallettransactions RPC method (jnewbery)\n+- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n+- #15747 Remove plethora of Get*Balance (MarcoFalke)\n+- #15728 Refactor relay transactions (jnewbery)\n+- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n+- #15853 Remove unused import checkpoints.h (MarcoFalke)\n+- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n+- #15778 Move maxtxfee from node to wallet (jnewbery)\n+- #15901 log on rescan completion (andrewtoth)\n+- #15917 Avoid logging no_such_file_or_directory error (promag)\n+- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n+- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n+- #15006 Add option to create an encrypted wallet (achow101)\n+- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n+- #15741 Batch write imported stuff in importmulti (achow101)\n+- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n+- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n+- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n+- #16226 Move ismine to the wallet module (achow101)\n+- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n+- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n+- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n+- #16237 Have the wallet give out destinations instead of keys (achow101)\n+- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n+- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n+- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n+- #16227 Refactor CWallet's inheritance chain (achow101)\n+- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n+- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n+- #16402 Remove wallet settings from chainparams (MarcoFalke)\n+- #16415 Get rid of PendingWalletTx class (ryanofsky)\n+- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n+- #16399 Improve wallet creation (fjahr)\n+- #16475 Enumerate walletdb keys (MarcoFalke)\n+- #15709 Do not add \"setting\" key as unknown (Bushstar)\n+- #16451 Remove CMerkleTx (jnewbery)\n+- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n+- #16502 Drop unused OldKey (promag)\n+- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n+- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n+- #16503 Remove p2pEnabled from Chain interface (ariard)\n+- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n+- #14934 Descriptor expansion cache clarifications (Sjors)\n+- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n+- #16542 Return more specific errors about invalid descriptors (achow101)\n+- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n+- #16753 extract PubKey from P2PK script with Solver (theStack)\n+- #16716 Use wallet name instead of pointer on unload/release (promag)\n+- #16185 gettransaction: add an argument to decode the transaction (darosior)\n+- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n+- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n+- #16624 encapsulate transactions state (ariard)\n+- #16830 Cleanup walletinitinterface.h (hebasto)\n+- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n+- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n+- #16727 Explicit feerate for bumpfee (instagibbs)\n+- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n+\n+### RPC and other APIs\n+- #15492 remove deprecated generate method (Sjors)\n+- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n+- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n+- #15642 Remove deprecated rpc warnings (jnewbery)\n+- #15637 Rename size to vsize in mempool related calls (fanquake)\n+- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n+- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n+- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n+- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n+- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n+- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n+- #15748 remove dead mining code (jnewbery)\n+- #15751 Speed up deriveaddresses for large ranges (sipa)\n+- #15770 Validate maxfeerate with AmountFromValue (promag)\n+- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n+- #15463 Speedup getaddressesbylabel (promag)\n+- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n+- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n+- #15932 Serialize in getblock without cs_main (MarcoFalke)\n+- #15930 Add balances RPC (MarcoFalke)\n+- #15730 Show scanning details in getwalletinfo (promag)\n+- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n+- #14984 Speedup getrawmempool when verbose=true (promag)\n+- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n+- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n+- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n+- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n+- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n+- #16262 Allow shutdown while in generateblocks (pstratem)\n+- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n+- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n+- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n+- #16332 Add logpath description for getrpcinfo (instagibbs)\n+- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n+- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n+- #16467 sendrawtransaction help privacy note (jonatack)\n+- #16596 Fix getblocktemplate CLI example (emilengler)\n+- #15986 Add checksum to getdescriptorinfo (sipa)\n+- #16647 add weight to getmempoolentry output (fanquake)\n+- #16695 Add window final block height to getchaintxstats (leto)\n+- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n+- #16285 Improve scantxoutset response and help message (promag)\n+- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n+- #16787 Human readable network services (darosior)\n+- #16251 Improve signrawtransaction error reporting (ajtowns)\n+- #16873 fix regression in gettransaction (jonatack)\n+- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n+- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n+- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n+- #17131 fix -rpcclienttimeout 0 option (fjahr)\n+- #17249 Add missing deque include to fix build (jbeich)\n+- #17368 cli: fix -getinfo output when compiled with no wallet (fanquake)\n+\n+### GUI\n+- #15464 Drop unused return values in WalletFrame (promag)\n+- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n+- #15711 Generate bech32 addresses by default (MarcoFalke)\n+- #15829 update request payment button text and tab description (fanquake)\n+- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n+- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n+- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n+- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n+- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n+- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n+- #16263 Use qInfo() if no error occurs (hebasto)\n+- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n+- #16350 Remove unused guard (hebasto)\n+- #16106 Sort wallets in open wallet menu (promag)\n+- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n+- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n+- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n+- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n+- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n+- #16514 Remove unused RPCConsole::tabFocus (promag)\n+- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n+- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n+- #16578 Do not pass in command line arguments to QApplication (achow101)\n+- #16612 Remove menu icons (laanwj)\n+- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n+- #16694 Ensure transaction send error is always visible (fanquake)\n+- #14879 Add warning messages to the debug window (hebasto)\n+- #16708 Replace obsolete functions of QSslSocket (hebasto)\n+- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n+- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n+- #16707 Remove obsolete QModelIndex::child() (hebasto)\n+- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n+- #16760 Change uninstall icon on Windows (GChuf)\n+- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n+- #16788 Update transifex slug for 0.19 (laanwj)\n+- #15450 Create wallet menu option (achow101)\n+- #16735 Remove unused menu items for Windows and Linux (GChuf)\n+- #16826 Do additional character escaping for wallet names and address labels (achow101)\n+- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n+- #16714 add prune to intro screen with smart default (Sjors)\n+- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n+- #16822 Create wallet menu option follow-ups (jonatack)\n+- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n+- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n+- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n+- #16971 Change default size of intro frame (emilengler)\n+- #16988 Periodic translations update (laanwj)\n+- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n+- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n+- #17031 Prevent processing duplicate payment requests (promag)\n+- #17135 Make polling in ClientModel asynchronous (promag)\n+- #17120 Fix start timer from non QThread (promag)\n+- #17257 disable font antialiasing for QR image address (fanquake)\n+\n+### Build system\n+- #14954 Require python 3.5 (MarcoFalke)\n+- #15580 native_protobuf: avoid system zlib (dongcarl)\n+- #15601 Switch to python3 (take 3) (MarcoFalke)\n+- #15581 Make less assumptions about build env (dongcarl)\n+- #14853 latest RapidCheck (fanquake)\n+- #15446 Improve depends debuggability (dongcarl)\n+- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n+- #12051 add missing debian contrib file to tarball (puchu)\n+- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n+- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n+- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n+- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n+- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n+- #16051 add patch to common dependencies (fanquake)\n+- #16049 switch to secure download of all dependencies (Kemu)\n+- #16059 configure: Fix thread_local detection (dongcarl)\n+- #16089 add ability to skip building zeromq (fanquake)\n+- #15844 Purge libtool archives (dongcarl)\n+- #15461 update to Boost 1.70 (Sjors)\n+- #16141 remove GZIP export from gitian descriptors (fanquake)\n+- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n+- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n+- #16183 xtrans: Configure flags cleanup (dongcarl)\n+- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n+- #16271 remove -Wall from rapidcheck build flags (fanquake)\n+- #16309 [MSVC] allow user level project customization (NicolasDorier)\n+- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n+- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n+- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n+- #16352 prune dbus from depends (fanquake)\n+- #16270 expat 2.2.7 (fanquake)\n+- #16408 Prune X packages (dongcarl)\n+- #16386 disable unused Qt features (fanquake)\n+- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n+- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n+- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n+- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n+- #16573 disable building libsecp256k1 benchmarks (fanquake)\n+- #16533 disable libxcb extensions (fanquake)\n+- #16589 Remove unused src/obj-test folder (MarcoFalke)\n+- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n+- #16622 echo property tests status during build (jonatack)\n+- #16611 Remove src/obj directory from repository (laanwj)\n+- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n+- #16654 build: update RapidCheck Makefile (jonatack)\n+- #16370 cleanup package configure flags (fanquake)\n+- #16746 msbuild: Ignore linker warning (sipsorcery)\n+- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n+- #16810 guix: Remove ssp spec file hack (dongcarl)\n+- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n+- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n+- #15584 disable BIP70 support by default (fanquake)\n+- #16871 make building protobuf optional in depends (fanquake)\n+- #16879 remove redundant sed patching (fanquake)\n+- #16809 zlib: Move toolchain options to configure (dongcarl)\n+- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n+- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n+- #16982 Factor out qt translations from build system (laanwj)\n+- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n+- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n+- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n+- #16468 Exclude depends/Makefile in .gitignore (promag)\n+\n+### Tests and QA\n+- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n+- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n+- #15479 Add .style.yapf (MarcoFalke)\n+- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n+- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n+- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n+- #15466 Print remaining jobs in test_runner.py (stevenroose)\n+- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n+- #15255 Remove travis_wait from lint script (gkrizek)\n+- #15686 make pruning test faster (jnewbery)\n+- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n+- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n+- #15495 Add regtests for HTTP status codes (domob1812)\n+- #15772 Properly log named args in authproxy (MarcoFalke)\n+- #15771 Prevent concurrency issues reading .cookie file (promag)\n+- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n+- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n+- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n+- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n+- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n+- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n+- #15779 Add wallet_balance benchmark (MarcoFalke)\n+- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n+- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n+- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n+- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n+- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n+- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n+- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n+- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n+- #15758 Add further tests to wallet_balance (MarcoFalke)\n+- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n+- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n+- #15927 log thread names by default in functional tests (jnewbery)\n+- #15664 change default Python block serialization to witness (instagibbs)\n+- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n+- #15963 Make random seed logged and settable (jnewbery)\n+- #15943 Fail if RPC has been added without tests (MarcoFalke)\n+- #16036 travis: Run all lint scripts even if one fails (scravy)\n+- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n+- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n+- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n+- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n+- #16124 Limit Python linting to files in the repo (practicalswift)\n+- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n+- #16214 travis: Fix caching issues (MarcoFalke)\n+- #15982 Make msg_block a witness block (MarcoFalke)\n+- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n+- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n+- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n+- #16234 Add test for unknown args (MarcoFalke)\n+- #16207 stop generating lcov coverage when functional tests fail (asood123)\n+- #16252 Log to debug.log in all unit tests (MarcoFalke)\n+- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n+- #16278 Remove unused includes (practicalswift)\n+- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n+- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n+- #16294 Create at most one testing setup (MarcoFalke)\n+- #16299 bench: Move generated data to a dedicated translation unit (promag)\n+- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n+- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n+- #16267 bench: Benchmark blocktojson (fanatid)\n+- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n+- #16338 Disable other targets when enable-fuzz is set (qmma70)\n+- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n+- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n+- #16390 Add --filter option to test_runner.py (promag)\n+- #15891 Require standard txs in regtest by default (MarcoFalke)\n+- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n+- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n+- #16422 remove redundant setup in addrman_tests (zenosage)\n+- #16438 travis: Print memory and number of cpus (MarcoFalke)\n+- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n+- #16459 Fix race condition in example_test.py (sdaftuar)\n+- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n+- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n+- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n+- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n+- #16293 Make test cases separate functions (MarcoFalke)\n+- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n+- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n+- #16493 Fix test failures (MarcoFalke)\n+- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n+- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n+- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n+- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n+- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n+- #16598 Remove confusing hash256 function in util (elichai)\n+- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n+- #16563 Add unit test for AddTimeData (mzumsande)\n+- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n+- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n+- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n+- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n+- #16646 Run tests with UPnP disabled (fanquake)\n+- #16623 ci: Add environment files for all settings (MarcoFalke)\n+- #16656 fix rpc_setban.py race (jonasschnelli)\n+- #16570 Make descriptor tests deterministic (davereikher)\n+- #16404 Test ZMQ notification after chain reorg (promag)\n+- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n+- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n+- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n+- #16768 Make lint-includes.sh work from any directory (kristapsk)\n+- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n+- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n+- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n+- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n+- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n+- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n+- #16888 Bump timeouts in slow running tests (MarcoFalke)\n+- #16864 Add python bech32 impl round-trip test (instagibbs)\n+- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n+- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n+- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n+- #16898 Remove connect_nodes_bi (MarcoFalke)\n+- #16917 Move common function assert_approx() into util.py (fridokus)\n+- #16921 Add information on how to add Vulture suppressions (practicalswift)\n+- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n+- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n+- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n+- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n+- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n+- #16961 Remove python dead code linter (laanwj)\n+- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n+- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n+- #16987 Correct docstring param name (jbampton)\n+- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n+- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n+- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n+- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n+- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n+- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n+\n+### Miscellaneous\n+- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n+- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n+- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n+- #15519 Add Poly1305 implementation (jonasschnelli)\n+- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n+- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n+- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n+- #15849 Thread names in logs and deadlock debug tools (jamesob)\n+- #15650 Handle the result of posix_fallocate system call (lucayepa)\n+- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n+- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n+- #15968 Fix portability issue with pthreads (grim-trigger)\n+- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n+- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n+- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n+- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n+- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n+- #15236 scripts and tools: Make --setup command independent (hebasto)\n+- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n+- #16046 util: Add type safe gettime (MarcoFalke)\n+- #15703 Update secp256k1 subtree to latest upstream (sipa)\n+- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n+- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n+- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n+- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n+- #16112 util: Log early messages (MarcoFalke)\n+- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n+- #16300 util: Explain why the path is cached (MarcoFalke)\n+- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n+- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n+- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n+- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n+- #15277 contrib: Enable building in guix containers (dongcarl)\n+- #16362 Add bilingual_str type (hebasto)\n+- #16481 logs: add missing space (harding)\n+- #16581 sipsorcery gitian key (sipsorcery)\n+- #16566 util: Refactor upper/lowercase functions (kallewoof)\n+- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n+- #16625 scripts: Remove github-merge.py (fanquake)\n+- #15864 Fix datadir handling (hebasto)\n+- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n+- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n+- #16730 Support serialization of `std::vector<bool>` (sipa)\n+- #16556 Fix systemd service file configuration directory setup (setpill)\n+- #15615 Add log output during initial header sync (jonasschnelli)\n+- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n+- #16489 log: harmonize bitcoind logging (jonatack)\n+- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n+- #16984 util: Make thread names shorter (hebasto)\n+- #17038 Don't rename main thread at process level (laanwj)\n+- #17184 util: Filter out macos process serial number (hebasto)\n+- #17095 util: Filter control characters out of log messages (laanwj)\n+- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n+- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n+- #17449 fix uninitialized variable nMinerConfirmationWindow (bitcoinVBR)\n+\n+### Documentation\n+- #15514 Update Transifex links (fanquake)\n+- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n+- #15530 Move wallet lock annotations to header (MarcoFalke)\n+- #15562 remove duplicate clone step in build-windows.md (fanquake)\n+- #15565 remove release note fragments (fanquake)\n+- #15444 Additional productivity tips (Sjors)\n+- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n+- #15604 release note for disabling reject messages by default (jnewbery)\n+- #15611 Add Gitian key for droark (droark)\n+- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n+- #15603 Add more tips to productivity.md (gwillen)\n+- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n+- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n+- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n+- #15659 fix findFork comment (r8921039)\n+- #15718 Improve netaddress comments (dongcarl)\n+- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n+- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n+- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n+- #15887 Align code example style with clang-format (hebasto)\n+- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n+- #15908 Align MSVC build options with Linux build ones (hebasto)\n+- #15941 Add historical release notes for 0.18.0 (laanwj)\n+- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n+- #15607 Release process updates (jonatack)\n+- #14364 Clarify -blocksdir usage (sangaman)\n+- #15777 Add doxygen comments for keypool classes (jnewbery)\n+- #15820 Add productivity notes for dummy rebases (dongcarl)\n+- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n+- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n+- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n+- #16039 add release note for 14954 (fanquake)\n+- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n+- #16140 create security policy (narula)\n+- #16164 update release process for SECURITY.md (jonatack)\n+- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n+- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n+- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n+- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n+- #16241 add rapidcheck to vcpkg install list (fanquake)\n+- #16243 Remove travis badge from readme (MarcoFalke)\n+- #16256 remove orphaned header in developer notes (jonatack)\n+- #15964 Improve build-osx document formatting (giulio92)\n+- #16313 Fix broken link in doc/build-osx.md (jonatack)\n+- #16330 Use placeholder instead of key expiration date (hebasto)\n+- #16339 add reduce-memory.md (fanquake)\n+- #16347 Include static members in Doxygen (dongcarl)\n+- #15824 Improve netbase comments (dongcarl)\n+- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n+- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n+- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n+- #16483 update Python command in msvc readme (sipsorcery)\n+- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n+- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n+- #16536 Update and extend benchmarking.md (ariard)\n+- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n+- #16574 Add historical release notes for 0.18.1 (laanwj)\n+- #16585 Update Markdown syntax for bdb packages (emilengler)\n+- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n+- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n+- #16615 Fix typos in COPYRIGHT (gapeman)\n+- #16626 Fix spelling error chache -> cache (nilswloewen)\n+- #16587 Improve versionbits.h documentation (ariard)\n+- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n+- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n+- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n+- #16645 initial RapidCheck property-based testing documentation (jonatack)\n+- #16691 improve depends prefix documentation (fanquake)\n+- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n+- #16723 Update labels in CONTRIBUTING.md (hebasto)\n+- #16461 Tidy up shadowing section (promag)\n+- #16621 add default bitcoin.conf locations (GChuf)\n+- #16752 Delete stale URL in test README (michaelfolkson)\n+- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n+- #16806 Add issue templates for bug and feature request (MarcoFalke)\n+- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n+- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n+- #16757 CChainState return values (MarcoFalke)\n+- #16847 add comments clarifying how local services are advertised (jamesob)\n+- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n+- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n+- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n+- #16914 Update homebrew instruction for doxygen (Sjors)\n+- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n+- #16960 replace outdated OpenSSL comment in test README (fanquake)\n+- #16968 Remove MSVC update step from translation process (laanwj)\n+- #16953 Improve test READMEs (fjahr)\n+- #16962 Put PR template in comments (laanwj)\n+- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n+- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n+- #16997 Update bips.md for 0.19 (laanwj)\n+- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n+- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n+- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- 251\n+- Aaron Clauson\n+- Akio Nakamura\n+- Alistair Mann\n+- Amiti Uttarwar\n+- Andrew Chow\n+- andrewtoth\n+- Anthony Towns\n+- Antoine Riard\n+- Aseem Sood\n+- Ben Carman\n+- Ben Woosley\n+- bpay\n+- Carl Dong\n+- Carnhof Daki\n+- Chris Capobianco\n+- Chris Moore\n+- Chuf\n+- clashic\n+- clashicly\n+- Cory Fields\n+- Daki Carnhof\n+- Dan Gershony\n+- Daniel Edgecumbe\n+- Daniel Kraft\n+- Daniel McNally\n+- darosior\n+- David A. Harding\n+- David Reikher\n+- Douglas Roark\n+- Elichai Turkel\n+- Emil\n+- Emil Engler\n+- ezegom\n+- Fabian Jahr\n+- fanquake\n+- Felix Weis\n+- Ferdinando M. Ametrano\n+- fridokus\n+- gapeman\n+- GChuf\n+- Gert-Jaap Glasbergen\n+- Giulio Lombardo\n+- Glenn Willen\n+- Graham Krizek\n+- Gregory Sanders\n+- grim-trigger\n+- gwillen\n+- Hennadii Stepanov\n+- Jack Mallers\n+- James Hilliard\n+- James O'Beirne\n+- Jan Beich\n+- Jeremy Rubin\n+- JeremyRand\n+- Jim Posen\n+- John Bampton\n+- John Newbery\n+- Jon Atack\n+- Jon Layton\n+- Jonas Schnelli\n+- Jonathan \"Duke\" Leto\n+- Jo\u00e3o Barbosa\n+- Joonmo Yang\n+- Jordan Baczuk\n+- Jorge Tim\u00f3n\n+- Josu Go\u00f1i\n+- Julian Fleischer\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- keepkeyjon\n+- Kirill Fomichev\n+- Kristaps Kaupe\n+- Kristian Kramer\n+- Larry Ruane\n+- Lenny Maiorani\n+- LongShao007\n+- Luca Venturini\n+- lucash-dev\n+- Luke Dashjr\n+- marcoagner\n+- MarcoFalke\n+- marcuswin\n+- Martin Ankerl\n+- Martin Zumsande\n+- Matt Corallo\n+- MeshCollider\n+- Michael Folkson\n+- Miguel Herranz\n+- Nathan Marley\n+- Neha Narula\n+- nicolas.dorier\n+- Nils Loewen\n+- nkostoulas\n+- NullFunctor\n+- orient\n+- Patrick Strateman\n+- Peter Bushnell\n+- Peter Wagner\n+- Pieter Wuille\n+- practicalswift\n+- qmma\n+- r8921039\n+- RJ Rybarczyk\n+- Russell Yanofsky\n+- Samuel Dobson\n+- Sebastian Falbesoner\n+- setpill\n+- shannon1916\n+- Sjors Provoost\n+- soroosh-sdi\n+- Steven Roose\n+- Suhas Daftuar\n+- tecnovert\n+- THETCR\n+- Tim Ruffing\n+- Tobias Kaderle\n+- Torkel Rogstad\n+- Ulrich Kempken\n+- whythat\n+- William Casarin\n+- Wladimir J. van der Laan\n+- zenosage\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/)."
      },
      {
        "sha": "086491e92dea86159787b214acf16e0158a400f5",
        "filename": "doc/release-notes/release-notes-0.19.0.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1083,
        "changes": 1086,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/239d199667888e5d60309f15a38eed4d3afe56c4/doc/release-notes/release-notes-0.19.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/239d199667888e5d60309f15a38eed4d3afe56c4/doc/release-notes/release-notes-0.19.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.19.0.md?ref=239d199667888e5d60309f15a38eed4d3afe56c4",
        "patch": "@@ -1,1086 +1,6 @@\n-Bitcoin Core version 0.19.0 is now available from:\n-\n-  <https://bitcoincore.org/bin/bitcoin-core-0.19.0/>\n-\n-This release includes new features, various bug fixes and performance\n-improvements, as well as updated translations.\n-\n-Please report bugs using the issue tracker at GitHub:\n-\n-  <https://github.com/bitcoin/bitcoin/issues>\n-\n-To receive security and update notifications, please subscribe to:\n-\n-  <https://bitcoincore.org/en/list/announcements/join/>\n-\n-How to Upgrade\n-==============\n-\n-If you are running an older version, shut it down. Wait until it has completely\n-shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on Mac)\n-or `bitcoind`/`bitcoin-qt` (on Linux).\n-\n-Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n-possible, but might take some time if the datadir needs to be migrated.  Old\n-wallet versions of Bitcoin Core are generally supported.\n-\n-Compatibility\n-==============\n-\n-Bitcoin Core is supported and extensively tested on operating systems using\n-the Linux kernel, macOS 10.10+, and Windows 7 and newer. It is not recommended\n-to use Bitcoin Core on unsupported systems.\n-\n-Bitcoin Core should also work on most other Unix-like systems but is not\n-as frequently tested on them.\n-\n-From 0.17.0 onwards, macOS <10.10 is no longer supported. 0.17.0 is\n-built using Qt 5.9.x, which doesn't support versions of macOS older than\n-10.10. Additionally, Bitcoin Core does not yet change appearance when\n-macOS \"dark mode\" is activated.\n-\n-Users running macOS Catalina may need to \"right-click\" and then choose \"Open\"\n-to open the Bitcoin Core .dmg. This is due to new signing requirements\n-imposed by Apple, which the Bitcoin Core project does not yet adhere too.\n-\n-Notable changes\n-===============\n-\n-New user documentation\n-----------------------\n-\n-- [Reduce memory](https://github.com/bitcoin/bitcoin/blob/master/doc/reduce-memory.md)\n-  suggests configuration tweaks for running Bitcoin Core on systems with\n-  limited memory. (#16339)\n-\n-New RPCs\n---------\n-\n-- `getbalances` returns an object with all balances (`mine`,\n-  `untrusted_pending` and `immature`). Please refer to the RPC help of\n-  `getbalances` for details. The new RPC is intended to replace\n-  `getbalance`, `getunconfirmedbalance`, and the balance fields in\n-  `getwalletinfo`.  These old calls and fields may be removed in a\n-  future version. (#15930, #16239)\n-\n-- `setwalletflag` sets and unsets wallet flags that enable or disable\n-  features specific to that existing wallet, such as the new\n-  `avoid_reuse` feature documented elsewhere in these release notes.\n-  (#13756)\n-\n-- `getblockfilter` gets the BIP158 filter for the specified block.  This\n-  RPC is only enabled if block filters have been created using the\n-  `-blockfilterindex` configuration option. (#14121)\n-\n-New settings\n-------------\n-\n-- `-blockfilterindex` enables the creation of BIP158 block filters for\n-  the entire blockchain.  Filters will be created in the background and\n-  currently use about 4 GiB of space.  Note: this version of Bitcoin\n-  Core does not serve block filters over the P2P network, although the\n-  local user may obtain block filters using the `getblockfilter` RPC.\n-  (#14121)\n-\n-Updated settings\n-----------------\n-\n-- `whitebind` and `whitelist` now accept a list of permissions to\n-  provide peers connecting using the indicated interfaces or IP\n-  addresses.  If no permissions are specified with an address or CIDR\n-  network, the implicit default permissions are the same as previous\n-  releases.  See the `bitcoind -help` output for these two options for\n-  details about the available permissions. (#16248)\n-\n-- Users setting custom `dbcache` values can increase their setting slightly\n-  without using any more real memory.  Recent changes reduced the memory use\n-  by about 9% and made chainstate accounting more accurate (it was underestimating\n-  the use of memory before).  For example, if you set a value of \"450\" before, you\n-  may now set a value of \"500\" to use about the same real amount of memory. (#16957)\n-\n-\n-Updated RPCs\n-------------\n-\n-Note: some low-level RPC changes mainly useful for testing are described in the\n-Low-level Changes section below.\n-\n-- `sendmany` no longer has a `minconf` argument.  This argument was not\n-  well-specified and would lead to RPC errors even when the wallet's\n-  coin selection succeeded.  Users who want to influence coin selection\n-  can use the existing `-spendzeroconfchange`, `-limitancestorcount`,\n-  `-limitdescendantcount` and `-walletrejectlongchains` configuration\n-  arguments. (#15596)\n-\n-- `getbalance` and `sendtoaddress`, plus the new RPCs `getbalances` and\n-  `createwallet`, now accept an \"avoid_reuse\" parameter that controls\n-  whether already used addresses should be included in the operation.\n-  Additionally, `sendtoaddress` will avoid partial spends when\n-  `avoid_reuse` is enabled even if this feature is not already enabled\n-  via the `-avoidpartialspends` command line flag because not doing so\n-  would risk using up the \"wrong\" UTXO for an address reuse case.\n-  (#13756)\n-\n-- RPCs which have an `include_watchonly` argument or `includeWatching` option now default to `true` for watch-only\n-  wallets. Affected RPCs are: `getbalance`, `listreceivedbyaddress`, `listreceivedbylabel`, `listtransactions`,\n-  `listsinceblock`, `gettransaction`, `walletcreatefundedpsbt`, and `fundrawtransaction`. (#16383)\n-\n-- `listunspent` now returns a \"reused\" bool for each output if the\n-  wallet flag \"avoid_reuse\" is enabled. (#13756)\n-\n-- `getblockstats` now uses BlockUndo data instead of the transaction\n-  index, making it much faster, no longer dependent on the `-txindex`\n-  configuration option, and functional for all non-pruned blocks.\n-  (#14802)\n-\n-- `utxoupdatepsbt` now accepts a `descriptors` parameter that will fill\n-  out input and output scripts and keys when known. P2SH-witness inputs\n-  will be filled in from the UTXO set when a descriptor is provided that\n-  shows they're spending segwit outputs.  See the RPC help text for full\n-  details. (#15427)\n-\n-- `sendrawtransaction` and `testmempoolaccept` no longer accept a\n-  `allowhighfees` parameter to fail mempool acceptance if the\n-  transaction fee exceeds the value of the configuration option\n-  `-maxtxfee`.  Now there is a hardcoded default maximum feerate that\n-  can be changed when calling either RPC using a `maxfeerate` parameter.\n-  (#15620)\n-\n-- `getmempoolancestors`, `getmempooldescendants`, `getmempoolentry`, and\n-  `getrawmempool` no longer return a `size` field unless the\n-  configuration option `-deprecatedrpc=size` is used.  Instead a new\n-  `vsize` field is returned with the transaction's virtual size\n-  (consistent with other RPCs such as `getrawtransaction`). (#15637)\n-\n-- `getwalletinfo` now includes a `scanning` field that is either `false`\n-  (no scanning) or an object with information about the duration and\n-  progress of the wallet's scanning historical blocks for transactions\n-  affecting its balances. (#15730)\n-\n-- `gettransaction` now accepts a third (boolean) argument `verbose`. If\n-  set to `true`, a new `decoded` field will be added to the response containing\n-  the decoded transaction. This field is equivalent to RPC `decoderawtransaction`,\n-  or RPC `getrawtransaction` when `verbose` is passed. (#16185, #16866, #16873)\n-\n-- `createwallet` accepts a new `passphrase` parameter.  If set, this\n-  will create the new wallet encrypted with the given passphrase.  If\n-  unset (the default) or set to an empty string, no encryption will be\n-  used. (#16394)\n-\n-- `getchaintxstats` RPC now returns the additional key of\n-  `window_final_block_height`. (#16695)\n-\n-- `getmempoolentry` now provides a `weight` field containing the\n-  transaction weight as defined in BIP141. (#16647)\n-\n-- The `getnetworkinfo` and `getpeerinfo` commands now contain a new field with decoded network service flags. (#16786)\n-\n-- `getdescriptorinfo` now returns an additional `checksum` field\n-  containing the checksum for the unmodified descriptor provided by the\n-  user (that is, before the descriptor is normalized for the\n-  `descriptor` field). (#15986)\n-\n-- `joinpsbts` now shuffles the order of the inputs and outputs of the resulting\n-  joined PSBT. Previously, inputs and outputs were added in the order PSBTs were\n-  provided. This made it easy to correlate inputs to outputs, representing a\n-  privacy leak. (#16512)\n-\n-- `walletcreatefundedpsbt` now signals BIP125 Replace-by-Fee if the\n-  `-walletrbf` configuration option is set to true. (#15911)\n-\n-GUI changes\n------------\n-\n-- The GUI wallet now provides bech32 addresses by default.  The user may change the address type\n-  during invoice generation using a GUI toggle, or the default address\n-  type may be changed with the `-addresstype` configuration option.\n-  (#15711, #16497)\n-\n-- In 0.18.0, a `./configure` flag was introduced to allow disabling BIP70 support in the GUI (support was enabled by default). In 0.19.0, this flag is now __disabled__ by default. If you want to compile Bitcoin Core with BIP70 support in the GUI, you can pass `--enable-bip70` to `./configure`. (#15584)\n-\n-Deprecated or removed configuration options\n--------------------------------------------\n-\n-- `-mempoolreplacement` is removed, although default node behavior\n-  remains the same.  This option previously allowed the user to prevent\n-  the node from accepting or relaying BIP125 transaction replacements.\n-  This is different from the remaining configuration option\n-  `-walletrbf`. (#16171)\n-\n-Deprecated or removed RPCs\n---------------------------\n-\n-- `bumpfee` no longer accepts a `totalFee` option unless the\n-  configuration parameter `deprecatedrpc=totalFee` is specified.  This\n-  parameter will be fully removed in a subsequent release. (#15996)\n-\n-- `bumpfee` has a new `fee_rate` option as a replacement for the deprecated `totalFee`. (#16727)\n-\n-- `generate` is now removed after being deprecated in Bitcoin Core 0.18.\n-  Use the `generatetoaddress` RPC instead. (#15492)\n-\n-P2P changes\n+0.19.0 note\n -----------\n \n-- BIP 61 reject messages were deprecated in v0.18. They are now disabled\n-  by default, but can be enabled by setting the `-enablebip61` command\n-  line option.  BIP 61 reject messages will be removed entirely in a\n-  future version of Bitcoin Core. (#14054)\n-\n-- To eliminate well-known denial-of-service vectors in Bitcoin Core,\n-  especially for nodes with spinning disks, the default value for the\n-  `-peerbloomfilters` configuration option has been changed to false.\n-  This prevents Bitcoin Core from sending the BIP111 NODE_BLOOM service\n-  flag, accepting BIP37 bloom filters, or serving merkle blocks or\n-  transactions matching a bloom filter.  Users who still want to provide\n-  bloom filter support may either set the configuration option to true\n-  to re-enable both BIP111 and BIP37 support or enable just BIP37\n-  support for specific peers using the updated `-whitelist` and\n-  `-whitebind` configuration options described elsewhere in these\n-  release notes.  For the near future, lightweight clients using public\n-  BIP111/BIP37 nodes should still be able to connect to older versions\n-  of Bitcoin Core and nodes that have manually enabled BIP37 support,\n-  but developers of such software should consider migrating to either\n-  using specific BIP37 nodes or an alternative transaction filtering\n-  system. (#16152)\n-\n-- By default, Bitcoin Core will now make two additional outbound connections that are exclusively used for block-relay.  No transactions or addr messages will be processed on these connections. These connections are designed to add little additional memory or bandwidth resource requirements but should make some partitioning attacks more difficult to carry out. (#15759)\n-\n-Miscellaneous CLI Changes\n--------------------------\n-\n-- The `testnet` field in `bitcoin-cli -getinfo` has been renamed to\n-  `chain` and now returns the current network name as defined in BIP70\n-  (main, test, regtest). (#15566)\n-\n-Low-level changes\n-=================\n-\n-RPC\n----\n-\n-- `getblockchaininfo` no longer returns a `bip9_softforks` object.\n-  Instead, information has been moved into the `softforks` object and\n-  an additional `type` field describes how Bitcoin Core determines\n-  whether that soft fork is active (e.g. BIP9 or BIP90).  See the RPC\n-  help for details. (#16060)\n-\n-- `getblocktemplate` no longer returns a `rules` array containing `CSV`\n-  and `segwit` (the BIP9 deployments that are currently in active\n-  state). (#16060)\n-\n-- `getrpcinfo` now returns a `logpath` field with the path to\n-  `debug.log`. (#15483)\n-\n-Tests\n------\n-\n-- The regression test chain enabled by the `-regtest` command line flag\n-  now requires transactions to not violate standard policy by default.\n-  This is the same default used for mainnet and makes it easier to test\n-  mainnet behavior on regtest. Note that the testnet still allows\n-  non-standard txs by default and that the policy can be locally\n-  adjusted with the `-acceptnonstdtxn` command line flag for both test\n-  chains. (#15891)\n-\n-Configuration\n-------------\n-\n-- A setting specified in the default section but not also specified in a\n-  network-specific section (e.g. testnet) will now produce an error\n-  preventing startup instead of just a warning unless the network is\n-  mainnet.  This prevents settings intended for mainnet from being\n-  applied to testnet or regtest. (#15629)\n-\n-- On platforms supporting `thread_local`, log lines can be prefixed with\n-  the name of the thread that caused the log. To enable this behavior,\n-  use `-logthreadnames=1`. (#15849)\n-\n-Network\n--------\n-\n-- When fetching a transaction announced by multiple peers, previous versions of\n-  Bitcoin Core would sequentially attempt to download the transaction from each\n-  announcing peer until the transaction is received, in the order that those\n-  peers' announcements were received.  In this release, the download logic has\n-  changed to randomize the fetch order across peers and to prefer sending\n-  download requests to outbound peers over inbound peers. This fixes an issue\n-  where inbound peers could prevent a node from getting a transaction.\n-  (#14897, #15834)\n-\n-- If a Tor hidden service is being used, Bitcoin Core will be bound to\n-  the standard port 8333 even if a different port is configured for\n-  clearnet connections.  This prevents leaking node identity through use\n-  of identical non-default port numbers. (#15651)\n-\n-Mempool and transaction relay\n------------------------------\n-\n-- Allows one extra single-ancestor transaction per package.  Previously,\n-  if a transaction in the mempool had 25 descendants, or it and all of\n-  its descendants were over 101,000 vbytes, any newly-received\n-  transaction that was also a descendant would be ignored.  Now, one\n-  extra descendant will be allowed provided it is an immediate\n-  descendant (child) and the child's size is 10,000 vbytes or less.\n-  This makes it possible for two-party contract protocols such as\n-  Lightning Network to give each participant an output they can spend\n-  immediately for Child-Pays-For-Parent (CPFP) fee bumping without\n-  allowing one malicious participant to fill the entire package and thus\n-  prevent the other participant from spending their output. (#15681)\n-\n-- Transactions with outputs paying v1 to v16 witness versions (future\n-  segwit versions) are now accepted into the mempool, relayed, and\n-  mined.  Attempting to spend those outputs remains forbidden by policy\n-  (\"non-standard\").  When this change has been widely deployed, wallets\n-  and services can accept any valid bech32 Bitcoin address without\n-  concern that transactions paying future segwit versions will become\n-  stuck in an unconfirmed state. (#15846)\n-\n-- Legacy transactions (transactions with no segwit inputs) must now be\n-  sent using the legacy encoding format, enforcing the rule specified in\n-  BIP144.  (#14039)\n-\n-Wallet\n-------\n-\n-- When in pruned mode, a rescan that was triggered by an `importwallet`,\n-  `importpubkey`, `importaddress`, or `importprivkey` RPC will only fail\n-  when blocks have been pruned. Previously it would fail when `-prune`\n-  has been set.  This change allows setting `-prune` to a high value\n-  (e.g. the disk size) without the calls to any of the import RPCs\n-  failing until the first block is pruned. (#15870)\n-\n-- When creating a transaction with a fee above `-maxtxfee` (default 0.1\n-  BTC), the RPC commands `walletcreatefundedpsbt` and\n-  `fundrawtransaction` will now fail instead of rounding down the fee.\n-  Be aware that the `feeRate` argument is specified in BTC per 1,000\n-  vbytes, not satoshi per vbyte. (#16257)\n-\n-- A new wallet flag `avoid_reuse` has been added (default off). When\n-  enabled, a wallet will distinguish between used and unused addresses,\n-  and default to not use the former in coin selection.  When setting\n-  this flag on an existing wallet, rescanning the blockchain is required\n-  to correctly mark previously used destinations.  Together with \"avoid\n-  partial spends\" (added in Bitcoin Core v0.17.0), this can eliminate a\n-  serious privacy issue where a malicious user can track spends by\n-  sending small payments to a previously-paid address that would then\n-  be included with unrelated inputs in future payments. (#13756)\n-\n-Build system changes\n---------------------\n-\n-- Python >=3.5 is now required by all aspects of the project. This\n-  includes the build systems, test framework and linters. The previously\n-  supported minimum (3.4), was EOL in March 2019. (#14954)\n-\n-- The minimum supported miniUPnPc API version is set to 10. This keeps\n-  compatibility with Ubuntu 16.04 LTS and Debian 8 `libminiupnpc-dev`\n-  packages. Please note, on Debian this package is still vulnerable to\n-  [CVE-2017-8798](https://security-tracker.debian.org/tracker/CVE-2017-8798)\n-  (in jessie only) and\n-  [CVE-2017-1000494](https://security-tracker.debian.org/tracker/CVE-2017-1000494)\n-  (both in jessie and in stretch). (#15993)\n-\n-0.19.0 change log\n-=================\n-\n-### Consensus\n-- #16128 Delete error-prone CScript constructor only used with FindAndDelete (instagibbs)\n-- #16060 Bury bip9 deployments (jnewbery)\n-\n-### Policy\n-- #15557 Enhance `bumpfee` to include inputs when targeting a feerate (instagibbs)\n-- #15846 Make sending to future native witness outputs standard (sipa)\n-\n-### Block and transaction handling\n-- #15632 Remove ResendWalletTransactions from the Validation Interface (jnewbery)\n-- #14121 Index for BIP 157 block filters (jimpo)\n-- #15141 Rewrite DoS interface between validation and net_processing (sdaftuar)\n-- #15880 utils and libraries: Replace deprecated Boost Filesystem functions (hebasto)\n-- #15971 validation: Add compile-time checking for negative locking requirement in LimitValidationInterfaceQueue (practicalswift)\n-- #15999 init: Remove dead code in LoadChainTip (MarcoFalke)\n-- #16015 validation: Hold cs_main when reading chainActive in RewindBlockIndex (practicalswift)\n-- #16056 remove unused magic number from consistency check (instagibbs)\n-- #16171 Remove -mempoolreplacement to prevent needless block prop slowness (TheBlueMatt)\n-- #15894 Remove duplicated \"Error: \" prefix in logs (hebasto)\n-- #14193 validation: Add missing mempool locks (MarcoFalke)\n-- #15681 Allow one extra single-ancestor transaction per package (TheBlueMatt)\n-- #15305 [validation] Crash if disconnecting a block fails (sdaftuar)\n-- #16471 log correct messages when CPFP fails (jnewbery)\n-- #16433 txmempool: Remove unused default value MemPoolRemovalReason::UNKNOWN (MarcoFalke)\n-- #13868 Remove unused fScriptChecks parameter from CheckInputs (Empact)\n-- #16421 Conservatively accept RBF bumps bumping one tx at the package limits (TheBlueMatt)\n-- #16854 Prevent UpdateTip log message from being broken up (stevenroose)\n-- #16956 validation: Make GetWitnessCommitmentIndex public (MarcoFalke)\n-- #16713 Ignore old versionbit activations to avoid 'unknown softforks' warning (jnewbery)\n-- #17002 chainparams: Bump assumed chain params (MarcoFalke)\n-- #16849 Fix block index inconsistency in InvalidateBlock() (sdaftuar)\n-\n-### P2P protocol and network code\n-- #15597 Generate log entry when blocks messages are received unexpectedly (pstratem)\n-- #15654 Remove unused unsanitized user agent string CNode::strSubVer (MarcoFalke)\n-- #15689 netaddress: Update CNetAddr for ORCHIDv2 (dongcarl)\n-- #15834 Fix transaction relay bugs introduced in #14897 and expire transactions from peer in-flight map (sdaftuar)\n-- #15651 torcontrol: Use the default/standard network port for Tor hidden services, even if the internal port is set differently (luke-jr)\n-- #16188 Document what happens to getdata of unknown type (MarcoFalke)\n-- #15649 Add ChaCha20Poly1305@Bitcoin AEAD (jonasschnelli)\n-- #16152 Disable bloom filtering by default (TheBlueMatt)\n-- #15993 Drop support of the insecure miniUPnPc versions (hebasto)\n-- #16197 Use mockable time for tx download (MarcoFalke)\n-- #16248 Make whitebind/whitelist permissions more flexible (NicolasDorier)\n-- #16618 [Fix] Allow connection of a noban banned peer (NicolasDorier)\n-- #16631 Restore default whitelistrelay to true (NicolasDorier)\n-- #15759 Add 2 outbound block-relay-only connections (sdaftuar)\n-- #15558 Don't query all DNS seeds at once (sipa)\n-- #16999 0.19 seeds update (laanwj)\n-\n-### Wallet\n-- #15288 Remove wallet -> node global function calls (ryanofsky)\n-- #15491 Improve log output for errors during load (gwillen)\n-- #13541 wallet/rpc: sendrawtransaction maxfeerate (kallewoof)\n-- #15680 Remove resendwallettransactions RPC method (jnewbery)\n-- #15508 Refactor analyzepsbt for use outside RPC code (gwillen)\n-- #15747 Remove plethora of Get*Balance (MarcoFalke)\n-- #15728 Refactor relay transactions (jnewbery)\n-- #15639 bitcoin-wallet tool: Drop libbitcoin_server.a dependency (ryanofsky)\n-- #15853 Remove unused import checkpoints.h (MarcoFalke)\n-- #15780 add cachable amounts for caching credit/debit values (kallewoof)\n-- #15778 Move maxtxfee from node to wallet (jnewbery)\n-- #15901 log on rescan completion (andrewtoth)\n-- #15917 Avoid logging no_such_file_or_directory error (promag)\n-- #15452 Replace CScriptID and CKeyID in CTxDestination with dedicated types (instagibbs)\n-- #15870 Only fail rescan when blocks have actually been pruned (MarcoFalke)\n-- #15006 Add option to create an encrypted wallet (achow101)\n-- #16001 Give WalletModel::UnlockContext move semantics (sipa)\n-- #15741 Batch write imported stuff in importmulti (achow101)\n-- #16144 do not encrypt wallets with disabled private keys (mrwhythat)\n-- #15024 Allow specific private keys to be derived from descriptor (meshcollider)\n-- #13756 \"avoid_reuse\" wallet flag for improved privacy (kallewoof)\n-- #16226 Move ismine to the wallet module (achow101)\n-- #16239 wallet/rpc: follow-up clean-up/fixes to avoid_reuse (kallewoof)\n-- #16286 refactoring: wallet: Fix GCC 7.4.0 warning (hebasto)\n-- #16257 abort when attempting to fund a transaction above -maxtxfee (Sjors)\n-- #16237 Have the wallet give out destinations instead of keys (achow101)\n-- #16322 Fix -maxtxfee check by moving it to CWallet::CreateTransaction (promag)\n-- #16361 Remove redundant pre-TopUpKeypool check (instagibbs)\n-- #16244 Move wallet creation out of the createwallet rpc into its own function (achow101)\n-- #16227 Refactor CWallet's inheritance chain (achow101)\n-- #16208 Consume ReserveDestination on successful CreateTransaction (instagibbs)\n-- #16301 Use CWallet::Import* functions in all import* RPCs (achow101)\n-- #16402 Remove wallet settings from chainparams (MarcoFalke)\n-- #16415 Get rid of PendingWalletTx class (ryanofsky)\n-- #15588 Log the actual wallet file version and no longer publicly expose the \"version\" record (achow101)\n-- #16399 Improve wallet creation (fjahr)\n-- #16475 Enumerate walletdb keys (MarcoFalke)\n-- #15709 Do not add \"setting\" key as unknown (Bushstar)\n-- #16451 Remove CMerkleTx (jnewbery)\n-- #15906 Move min_depth and max_depth to coin control (amitiuttarwar)\n-- #16502 Drop unused OldKey (promag)\n-- #16394 Allow createwallet to take empty passwords to make unencrypted wallets (achow101)\n-- #15911 Use wallet RBF default for walletcreatefundedpsbt (Sjors)\n-- #16503 Remove p2pEnabled from Chain interface (ariard)\n-- #16557 restore coinbase and confirmed/conflicted checks in SubmitMemoryPoolAndRelay() (jnewbery)\n-- #14934 Descriptor expansion cache clarifications (Sjors)\n-- #16383 rpcwallet: default include_watchonly to true for watchonly wallets (jb55)\n-- #16542 Return more specific errors about invalid descriptors (achow101)\n-- #16572 Fix Char as Bool in Wallet (JeremyRubin)\n-- #16753 extract PubKey from P2PK script with Solver (theStack)\n-- #16716 Use wallet name instead of pointer on unload/release (promag)\n-- #16185 gettransaction: add an argument to decode the transaction (darosior)\n-- #16745 Translate all initErrors in CreateWalletFromFile (MarcoFalke)\n-- #16792 Assert that the HRP is lowercase in Bech32::Encode (meshcollider)\n-- #16624 encapsulate transactions state (ariard)\n-- #16830 Cleanup walletinitinterface.h (hebasto)\n-- #16796 Fix segfault in CreateWalletFromFile (MarcoFalke)\n-- #16866 Rename 'decode' argument in gettransaction method to 'verbose' (jnewbery)\n-- #16727 Explicit feerate for bumpfee (instagibbs)\n-- #16609 descriptor: fix missed m_script_arg arg renaming in #14934 (fanquake)\n-\n-### RPC and other APIs\n-- #15492 remove deprecated generate method (Sjors)\n-- #15566 cli: Replace testnet with chain and return network name as per bip70 (fanquake)\n-- #15564 cli: Remove duplicate wallet fields from -getinfo (fanquake)\n-- #15642 Remove deprecated rpc warnings (jnewbery)\n-- #15637 Rename size to vsize in mempool related calls (fanquake)\n-- #15620 Uncouple non-wallet rpcs from maxTxFee global (MarcoFalke)\n-- #15616 Clarify decodescript RPCResult doc (MarcoFalke)\n-- #15669 Fix help text for signtransactionwithXXX (torkelrogstad)\n-- #15596 Ignore sendmany::minconf as dummy value (MarcoFalke)\n-- #15755 remove unused var in rawtransaction.cpp (Bushstar)\n-- #15746 RPCHelpMan: Always name dictionary keys (MarcoFalke)\n-- #15748 remove dead mining code (jnewbery)\n-- #15751 Speed up deriveaddresses for large ranges (sipa)\n-- #15770 Validate maxfeerate with AmountFromValue (promag)\n-- #15474 rest/rpc: Make mempoolinfo atomic (promag)\n-- #15463 Speedup getaddressesbylabel (promag)\n-- #15784 Remove dependency on interfaces::Chain in SignTransaction (ariard)\n-- #15323 Expose g_is_mempool_loaded via getmempoolinfo (Empact)\n-- #15932 Serialize in getblock without cs_main (MarcoFalke)\n-- #15930 Add balances RPC (MarcoFalke)\n-- #15730 Show scanning details in getwalletinfo (promag)\n-- #14802 faster getblockstats using BlockUndo data (FelixWeis)\n-- #14984 Speedup getrawmempool when verbose=true (promag)\n-- #16071 Hint for importmulti in help output of importpubkey and importaddress (kristapsk)\n-- #16063 Mention getwalletinfo where a rescan is triggered (promag)\n-- #16024 deriveaddresses: Correction of descriptor checksum in RPC example (ccapo)\n-- #16217 getrawtransaction: inform about blockhash argument when lookup fails (darosior)\n-- #15427 Add support for descriptors to utxoupdatepsbt (sipa)\n-- #16262 Allow shutdown while in generateblocks (pstratem)\n-- #15483 Adding a 'logpath' entry to getrpcinfo (darosior)\n-- #16325 Clarify that block count means height excl genesis (MarcoFalke)\n-- #16326 add new utxoupdatepsbt arguments to the CRPCCommand and CPRCCvertParam tables (jnewbery)\n-- #16332 Add logpath description for getrpcinfo (instagibbs)\n-- #16240 JSONRPCRequest-aware RPCHelpMan (kallewoof)\n-- #15996 Deprecate totalfee argument in `bumpfee` (instagibbs)\n-- #16467 sendrawtransaction help privacy note (jonatack)\n-- #16596 Fix getblocktemplate CLI example (emilengler)\n-- #15986 Add checksum to getdescriptorinfo (sipa)\n-- #16647 add weight to getmempoolentry output (fanquake)\n-- #16695 Add window final block height to getchaintxstats (leto)\n-- #16798 Refactor rawtransaction_util's SignTransaction to separate prevtx parsing (achow101)\n-- #16285 Improve scantxoutset response and help message (promag)\n-- #16725 Don't show addresses or P2PK in decoderawtransaction (NicolasDorier)\n-- #16787 Human readable network services (darosior)\n-- #16251 Improve signrawtransaction error reporting (ajtowns)\n-- #16873 fix regression in gettransaction (jonatack)\n-- #16512 Shuffle inputs and outputs after joining psbts (achow101)\n-- #16521 Use the default maxfeerate value as BTC/kB (Remagpie)\n-- #16817 Fix casing in getblockchaininfo to be inline with other fields (dangershony)\n-- #17131 fix -rpcclienttimeout 0 option (fjahr)\n-- #17249 Add missing deque include to fix build (jbeich)\n-\n-### GUI\n-- #15464 Drop unused return values in WalletFrame (promag)\n-- #15614 Defer removeAndDeleteWallet when no modal widget is active (promag)\n-- #15711 Generate bech32 addresses by default (MarcoFalke)\n-- #15829 update request payment button text and tab description (fanquake)\n-- #15874 Resolve the qt/guiutil <-> qt/optionsmodel CD (251Labs)\n-- #15371 Uppercase bech32 addresses in qr codes (benthecarman)\n-- #15928 Move QRImageWidget to its own file-pair (luke-jr)\n-- #16113 move coin control \"OK\" to the right hand side of the dialog (fanquake)\n-- #16090 Add vertical spacer to peer detail widget (JosuGZ)\n-- #15886 qt, wallet: Revamp SendConfirmationDialog (hebasto)\n-- #16263 Use qInfo() if no error occurs (hebasto)\n-- #16153 Add antialiasing to traffic graph widget (JosuGZ)\n-- #16350 Remove unused guard (hebasto)\n-- #16106 Sort wallets in open wallet menu (promag)\n-- #16291 Stop translating PACKAGE_NAME (MarcoFalke)\n-- #16380 Remove unused bits from the service flags enum (MarcoFalke)\n-- #16379 Fix autostart filenames on Linux for testnet/regtest (hebasto)\n-- #16366 init: Use InitError for all errors in bitcoind/qt (MarcoFalke)\n-- #16436 Do not create payment server if -disablewallet option provided (hebasto)\n-- #16514 Remove unused RPCConsole::tabFocus (promag)\n-- #16497 Generate bech32 addresses by default (take 2, fixup) (MarcoFalke)\n-- #16349 Remove redundant WalletController::addWallet slot (hebasto)\n-- #16578 Do not pass in command line arguments to QApplication (achow101)\n-- #16612 Remove menu icons (laanwj)\n-- #16677 remove unused PlatformStyle::TextColorIcon (fanquake)\n-- #16694 Ensure transaction send error is always visible (fanquake)\n-- #14879 Add warning messages to the debug window (hebasto)\n-- #16708 Replace obsolete functions of QSslSocket (hebasto)\n-- #16701 Replace functions deprecated in Qt 5.13 (hebasto)\n-- #16706 Replace deprecated QSignalMapper by lambda expressions (hebasto)\n-- #16707 Remove obsolete QModelIndex::child() (hebasto)\n-- #16758 Replace QFontMetrics::width() with TextWidth() (hebasto)\n-- #16760 Change uninstall icon on Windows (GChuf)\n-- #16720 Replace objc_msgSend() function calls with the native Objective-C syntax (hebasto)\n-- #16788 Update transifex slug for 0.19 (laanwj)\n-- #15450 Create wallet menu option (achow101)\n-- #16735 Remove unused menu items for Windows and Linux (GChuf)\n-- #16826 Do additional character escaping for wallet names and address labels (achow101)\n-- #15529 Add Qt programs to msvc build (updated, no code changes) (sipsorcery)\n-- #16714 add prune to intro screen with smart default (Sjors)\n-- #16858 advise users not to switch wallets when opening a BIP70 URI (jameshilliard)\n-- #16822 Create wallet menu option follow-ups (jonatack)\n-- #16882 Re-generate translations before 0.19.0 (MarcoFalke)\n-- #16928 Rename address checkbox back to bech32 (MarcoFalke)\n-- #16837 Fix {C{,XX},LD}FLAGS pickup (dongcarl)\n-- #16971 Change default size of intro frame (emilengler)\n-- #16988 Periodic translations update (laanwj)\n-- #16852 When BIP70 is disabled, get PaymentRequest merchant using string search (achow101)\n-- #16952 make sure to update the UI when deleting a transaction (jonasschnelli)\n-- #17031 Prevent processing duplicate payment requests (promag)\n-- #17135 Make polling in ClientModel asynchronous (promag)\n-- #17120 Fix start timer from non QThread (promag)\n-- #17257 disable font antialiasing for QR image address (fanquake)\n-\n-### Build system\n-- #14954 Require python 3.5 (MarcoFalke)\n-- #15580 native_protobuf: avoid system zlib (dongcarl)\n-- #15601 Switch to python3 (take 3) (MarcoFalke)\n-- #15581 Make less assumptions about build env (dongcarl)\n-- #14853 latest RapidCheck (fanquake)\n-- #15446 Improve depends debuggability (dongcarl)\n-- #13788 Fix --disable-asm for newer assembly checks/code (luke-jr)\n-- #12051 add missing debian contrib file to tarball (puchu)\n-- #15919 Remove unused OpenSSL includes to make it more clear where OpenSSL is used (practicalswift)\n-- #15978 .gitignore: Don't ignore depends patches (dongcarl)\n-- #15939 gitian: Remove windows 32 bit build (MarcoFalke)\n-- #15239 scripts and tools: Move non-linux build source tarballs to \"bitcoin-binaries/version\" directory (hebasto)\n-- #14047 Add HKDF_HMAC256_L32 and method to negate a private key (jonasschnelli)\n-- #16051 add patch to common dependencies (fanquake)\n-- #16049 switch to secure download of all dependencies (Kemu)\n-- #16059 configure: Fix thread_local detection (dongcarl)\n-- #16089 add ability to skip building zeromq (fanquake)\n-- #15844 Purge libtool archives (dongcarl)\n-- #15461 update to Boost 1.70 (Sjors)\n-- #16141 remove GZIP export from gitian descriptors (fanquake)\n-- #16235 Cleaned up and consolidated msbuild files (no code changes) (sipsorcery)\n-- #16246 MSVC: Fix error in debug mode (Fix #16245) (NicolasDorier)\n-- #16183 xtrans: Configure flags cleanup (dongcarl)\n-- #16258 [MSVC]: Create the config.ini as part of bitcoind build (NicolasDorier)\n-- #16271 remove -Wall from rapidcheck build flags (fanquake)\n-- #16309 [MSVC] allow user level project customization (NicolasDorier)\n-- #16308 [MSVC] Copy build output to src/ automatically after build (NicolasDorier)\n-- #15457 Check std::system for -[alert|block|wallet]notify (Sjors)\n-- #16344 use #if HAVE_SYSTEM instead of defined(HAVE_SYSTEM) (Sjors)\n-- #16352 prune dbus from depends (fanquake)\n-- #16270 expat 2.2.7 (fanquake)\n-- #16408 Prune X packages (dongcarl)\n-- #16386 disable unused Qt features (fanquake)\n-- #16424 Treat -Wswitch as error when --enable-werror (MarcoFalke)\n-- #16441 remove qt libjpeg check from bitcoin_qt.m4 (fanquake)\n-- #16434 Specify AM_CPPFLAGS for ZMQ (domob1812)\n-- #16534 add Qt Creator Makefile.am.user to .gitignore (Bushstar)\n-- #16573 disable building libsecp256k1 benchmarks (fanquake)\n-- #16533 disable libxcb extensions (fanquake)\n-- #16589 Remove unused src/obj-test folder (MarcoFalke)\n-- #16435 autoconf: Sane `--enable-debug` defaults (dongcarl)\n-- #16622 echo property tests status during build (jonatack)\n-- #16611 Remove src/obj directory from repository (laanwj)\n-- #16371 ignore macOS make deploy artefacts & add them to clean-local (fanquake)\n-- #16654 build: update RapidCheck Makefile (jonatack)\n-- #16370 cleanup package configure flags (fanquake)\n-- #16746 msbuild: Ignore linker warning (sipsorcery)\n-- #16750 msbuild: adds bench_bitcoin to auto generated project files (sipsorcery)\n-- #16810 guix: Remove ssp spec file hack (dongcarl)\n-- #16477 skip deploying plugins we dont use in macdeployqtplus (fanquake)\n-- #16413 Bump QT to LTS release 5.9.8 (THETCR)\n-- #15584 disable BIP70 support by default (fanquake)\n-- #16871 make building protobuf optional in depends (fanquake)\n-- #16879 remove redundant sed patching (fanquake)\n-- #16809 zlib: Move toolchain options to configure (dongcarl)\n-- #15146 Solve SmartOS FD_ZERO build issue (Empact)\n-- #16870 update boost macros to latest upstream for improved error reporting (fanquake)\n-- #16982 Factor out qt translations from build system (laanwj)\n-- #16926 Add OpenSSL termios fix for musl libc (nmarley)\n-- #16927 Refresh ZeroMQ 4.3.1 patch (nmarley)\n-- #17005 Qt version appears only if GUI is being built (ch4ot1c)\n-- #16468 Exclude depends/Makefile in .gitignore (promag)\n-\n-### Tests and QA\n-- #15296 Add script checking for deterministic line coverage in unit tests (practicalswift)\n-- #15338 ci: Build and run tests once on freebsd (MarcoFalke)\n-- #15479 Add .style.yapf (MarcoFalke)\n-- #15534 lint-format-strings: open files sequentially (fix for OS X) (gwillen)\n-- #15504 fuzz: Link BasicTestingSetup (shared with unit tests) (MarcoFalke)\n-- #15473 bench: Benchmark mempooltojson (MarcoFalke)\n-- #15466 Print remaining jobs in test_runner.py (stevenroose)\n-- #15631 mininode: Clearer error message on invalid magic bytes (MarcoFalke)\n-- #15255 Remove travis_wait from lint script (gkrizek)\n-- #15686 make pruning test faster (jnewbery)\n-- #15533 .style.yapf: Set column_limit=160 (MarcoFalke)\n-- #15660 Overhaul p2p_compactblocks.py (sdaftuar)\n-- #15495 Add regtests for HTTP status codes (domob1812)\n-- #15772 Properly log named args in authproxy (MarcoFalke)\n-- #15771 Prevent concurrency issues reading .cookie file (promag)\n-- #15693 travis: Switch to ubuntu keyserver to avoid timeouts (MarcoFalke)\n-- #15629 init: Throw error when network specific config is ignored (MarcoFalke)\n-- #15773 Add BitcoinTestFramework::sync_* methods (MarcoFalke)\n-- #15797 travis: Bump second timeout to 33 minutes, add rationale (MarcoFalke)\n-- #15788 Unify testing setups for fuzz, bench, and unit tests (MarcoFalke)\n-- #15352 Reduce noise level in test_bitcoin output (practicalswift)\n-- #15779 Add wallet_balance benchmark (MarcoFalke)\n-- #15843 fix outdated include in blockfilter_index_tests (jamesob)\n-- #15866 Add missing syncwithvalidationinterfacequeue to wallet_import_rescan (MarcoFalke)\n-- #15697 Make swap_magic_bytes in p2p_invalid_messages atomic (MarcoFalke)\n-- #15895 Avoid re-reading config.ini unnecessarily (luke-jr)\n-- #15896 feature_filelock, interface_bitcoin_cli: Use PACKAGE_NAME in messages rather than hardcoding Bitcoin Core (luke-jr)\n-- #15897 QA/mininode: Send all headers upfront in send_blocks_and_test to avoid sending an unconnected one (luke-jr)\n-- #15696 test_runner: Move feature_pruning to base tests (MarcoFalke)\n-- #15869 Add settings merge test to prevent regresssions (ryanofsky)\n-- #15758 Add further tests to wallet_balance (MarcoFalke)\n-- #15841 combine_logs: append node stderr and stdout if it exists (MarcoFalke)\n-- #15949 test_runner: Move pruning back to extended (MarcoFalke)\n-- #15927 log thread names by default in functional tests (jnewbery)\n-- #15664 change default Python block serialization to witness (instagibbs)\n-- #15988 Add test for ArgsManager::GetChainName (ryanofsky)\n-- #15963 Make random seed logged and settable (jnewbery)\n-- #15943 Fail if RPC has been added without tests (MarcoFalke)\n-- #16036 travis: Run all lint scripts even if one fails (scravy)\n-- #13555 parameterize adjustment period in versionbits_computeblockversion (JBaczuk)\n-- #16079 wallet_balance.py: Prevent edge cases (stevenroose)\n-- #16078 replace tx hash with txid in rawtransaction test (LongShao007)\n-- #16042 Bump MAX_NODES to 12 (MarcoFalke)\n-- #16124 Limit Python linting to files in the repo (practicalswift)\n-- #16143 Mark unit test blockfilter_index_initial_sync as non-deterministic (practicalswift)\n-- #16214 travis: Fix caching issues (MarcoFalke)\n-- #15982 Make msg_block a witness block (MarcoFalke)\n-- #16225 Make coins_tests/updatecoins_simulation_test deterministic (practicalswift)\n-- #16236 fuzz: Log output even if fuzzer failed (MarcoFalke)\n-- #15520 cirrus: Run extended test feature_pruning (MarcoFalke)\n-- #16234 Add test for unknown args (MarcoFalke)\n-- #16207 stop generating lcov coverage when functional tests fail (asood123)\n-- #16252 Log to debug.log in all unit tests (MarcoFalke)\n-- #16289 Add missing ECC_Stop() in GUI rpcnestedtests.cpp (jonasschnelli)\n-- #16278 Remove unused includes (practicalswift)\n-- #16302 Add missing syncwithvalidationinterfacequeue to wallet_balance test (MarcoFalke)\n-- #15538 wallet_bumpfee.py: Make sure coin selection produces change (instagibbs)\n-- #16294 Create at most one testing setup (MarcoFalke)\n-- #16299 bench: Move generated data to a dedicated translation unit (promag)\n-- #16329 Add tests for getblockchaininfo.softforks (MarcoFalke)\n-- #15687 tool wallet test coverage for unexpected writes to wallet (jonatack)\n-- #16267 bench: Benchmark blocktojson (fanatid)\n-- #14505 Add linter to make sure single parameter constructors are marked explicit (practicalswift)\n-- #16338 Disable other targets when enable-fuzz is set (qmma70)\n-- #16334 rpc_users: Also test rpcauth.py with password (dongcarl)\n-- #15282 Replace hard-coded hex tx with class in test framework (stevenroose)\n-- #16390 Add --filter option to test_runner.py (promag)\n-- #15891 Require standard txs in regtest by default (MarcoFalke)\n-- #16374 Enable passing wildcard test names to test runner from root (jonatack)\n-- #16420 Fix race condition in wallet_encryption test (jonasschnelli)\n-- #16422 remove redundant setup in addrman_tests (zenosage)\n-- #16438 travis: Print memory and number of cpus (MarcoFalke)\n-- #16445 Skip flaky p2p_invalid_messages test on macOS (fjahr)\n-- #16459 Fix race condition in example_test.py (sdaftuar)\n-- #16464 Ensure we don't generate a too-big block in p2sh sigops test (sdaftuar)\n-- #16491 fix deprecated log.warn in feature_dbcrash test (jonatack)\n-- #15134 Switch one of the Travis jobs to an unsigned char environment (-funsigned-char) (practicalswift)\n-- #16505 Changes verbosity of msbuild from quiet to normal in the appveyor script (sipsorcery)\n-- #16293 Make test cases separate functions (MarcoFalke)\n-- #16470 Fail early on disconnect in mininode.wait_for_* (MarcoFalke)\n-- #16277 Suppress output in test_bitcoin for expected errors (gertjaap)\n-- #16493 Fix test failures (MarcoFalke)\n-- #16538 Add missing sync_blocks to feature_pruning (MarcoFalke)\n-- #16509 Adapt test framework for chains other than \"regtest\" (MarcoFalke)\n-- #16363 Add test for BIP30 duplicate tx (MarcoFalke)\n-- #16535 Explain why -whitelist is used in feature_fee_estimation (MarcoFalke)\n-- #16554 only include and use OpenSSL where it's actually needed (BIP70) (fanquake)\n-- #16598 Remove confusing hash256 function in util (elichai)\n-- #16595 travis: Use extended 90 minute timeout when available (MarcoFalke)\n-- #16563 Add unit test for AddTimeData (mzumsande)\n-- #16561 Use colors and dots in test_runner.py output only if standard output is a terminal (practicalswift)\n-- #16465 Test p2sh-witness and bech32 in wallet_import_rescan (MarcoFalke)\n-- #16582 Rework ci (Use travis only as fallback env) (MarcoFalke)\n-- #16633 travis: Fix test_runner.py timeouts (MarcoFalke)\n-- #16646 Run tests with UPnP disabled (fanquake)\n-- #16623 ci: Add environment files for all settings (MarcoFalke)\n-- #16656 fix rpc_setban.py race (jonasschnelli)\n-- #16570 Make descriptor tests deterministic (davereikher)\n-- #16404 Test ZMQ notification after chain reorg (promag)\n-- #16726 Avoid common Python default parameter gotcha when mutable dict/list:s are used as default parameter values (practicalswift)\n-- #16739 ci: Pass down $makejobs to test_runner.py, other improvements (MarcoFalke)\n-- #16767 Check for codespell in lint-spelling.sh (kristapsk)\n-- #16768 Make lint-includes.sh work from any directory (kristapsk)\n-- #15257 Scripts and tools: Bump flake8 to 3.7.8 (Empact)\n-- #16804 Remove unused try-block in assert_debug_log (MarcoFalke)\n-- #16850 `servicesnames` field in `getpeerinfo` and `getnetworkinfo` (darosior)\n-- #16551 Test that low difficulty chain fork is rejected (MarcoFalke)\n-- #16737 Establish only one connection between nodes in rpc_invalidateblock (MarcoFalke)\n-- #16845 Add notes on how to generate data/wallets/high_minversion (MarcoFalke)\n-- #16888 Bump timeouts in slow running tests (MarcoFalke)\n-- #16864 Add python bech32 impl round-trip test (instagibbs)\n-- #16865 add some unit tests for merkle.cpp (soroosh-sdi)\n-- #14696 Add explicit references to related CVE's in p2p_invalid_block test (lucash-dev)\n-- #16907 lint: Add DisabledOpcodeTemplates to whitelist (MarcoFalke)\n-- #16898 Remove connect_nodes_bi (MarcoFalke)\n-- #16917 Move common function assert_approx() into util.py (fridokus)\n-- #16921 Add information on how to add Vulture suppressions (practicalswift)\n-- #16920 Fix extra_args in wallet_import_rescan.py (MarcoFalke)\n-- #16918 Make PORT_MIN in test runner configurable (MarcoFalke)\n-- #16941 travis: Disable feature_block in tsan run due to oom (MarcoFalke)\n-- #16929 follow-up to rpc: default maxfeerate value as BTC/kB (jonatack)\n-- #16959 ci: Set $host before setting fallback values (MarcoFalke)\n-- #16961 Remove python dead code linter (laanwj)\n-- #16931 add unittests for CheckProofOfWork (soroosh-sdi)\n-- #16991 Fix service flag comparison check in rpc_net test (luke-jr) (laanwj)\n-- #16987 Correct docstring param name (jbampton)\n-- #17015 Explain QT_QPA_PLATFORM for gui tests (MarcoFalke)\n-- #17006 Enable UBSan for Travis fuzzing job (practicalswift)\n-- #17086 Fix fs_tests for unknown locales (carnhofdaki)\n-- #15903 appveyor: Write @PACKAGE_NAME@ to config (MarcoFalke)\n-- #16742 test: add executable flag for wallet_watchonly.py (theStack)\n-- #16740 qa: Relax so that the subscriber is ready before publishing zmq messages (#16740)\n-\n-### Miscellaneous\n-- #15335 Fix lack of warning of unrecognized section names (AkioNak)\n-- #15528 contrib: Bump gitian descriptors for 0.19 (MarcoFalke)\n-- #15609 scripts and tools: Set 'distro' explicitly (hebasto)\n-- #15519 Add Poly1305 implementation (jonasschnelli)\n-- #15643 contrib: Gh-merge: include acks in merge commit (MarcoFalke)\n-- #15838 scripts and tools: Fetch missing review comments in github-merge.py (nkostoulas)\n-- #15920 lint: Check that all wallet args are hidden (MarcoFalke)\n-- #15849 Thread names in logs and deadlock debug tools (jamesob)\n-- #15650 Handle the result of posix_fallocate system call (lucayepa)\n-- #15766 scripts and tools: Upgrade gitian image before signing (hebasto)\n-- #15512 Add ChaCha20 encryption option (XOR) (jonasschnelli)\n-- #15968 Fix portability issue with pthreads (grim-trigger)\n-- #15970 Utils and libraries: fix static_assert for macro HAVE_THREAD_LOCAL (orientye)\n-- #15863 scripts and tools: Ensure repos are up-to-date in gitian-build.py (hebasto)\n-- #15224 Add RNG strengthening (10ms once every minute) (sipa)\n-- #15840 Contrib scripts: Filter IPv6 by ASN (abitfan)\n-- #13998 Scripts and tools: gitian-build.py improvements and corrections (hebasto)\n-- #15236 scripts and tools: Make --setup command independent (hebasto)\n-- #16114 contrib: Add curl as a required program in gitian-build.py (fanquake)\n-- #16046 util: Add type safe gettime (MarcoFalke)\n-- #15703 Update secp256k1 subtree to latest upstream (sipa)\n-- #16086 contrib: Use newer config.guess & config.sub in install_db4.sh (fanquake)\n-- #16130 Don't GPG sign intermediate commits with github-merge tool (stevenroose)\n-- #16162 scripts: Add key for michael ford (fanquake) to trusted keys list (fanquake)\n-- #16201 devtools: Always use unabbreviated commit IDs in github-merge.py (laanwj)\n-- #16112 util: Log early messages (MarcoFalke)\n-- #16223 devtools: Fetch and display ACKs at sign-off time in github-merge (laanwj)\n-- #16300 util: Explain why the path is cached (MarcoFalke)\n-- #16314 scripts and tools: Update copyright_header.py script (hebasto)\n-- #16158 Fix logic of memory_cleanse() on MSVC and clean up docs (real-or-random)\n-- #14734 fix an undefined behavior in uint::SetHex (kazcw)\n-- #16327 scripts and tools: Update ShellCheck linter (hebasto)\n-- #15277 contrib: Enable building in guix containers (dongcarl)\n-- #16362 Add bilingual_str type (hebasto)\n-- #16481 logs: add missing space (harding)\n-- #16581 sipsorcery gitian key (sipsorcery)\n-- #16566 util: Refactor upper/lowercase functions (kallewoof)\n-- #16620 util: Move resolveerrmsg to util/error (MarcoFalke)\n-- #16625 scripts: Remove github-merge.py (fanquake)\n-- #15864 Fix datadir handling (hebasto)\n-- #16670 util: Add join helper to join a list of strings (MarcoFalke)\n-- #16665 scripts: Move update-translations.py to maintainer-tools repo (fanquake)\n-- #16730 Support serialization of `std::vector<bool>` (sipa)\n-- #16556 Fix systemd service file configuration directory setup (setpill)\n-- #15615 Add log output during initial header sync (jonasschnelli)\n-- #16774 Avoid unnecessary \"Synchronizing blockheaders\" log messages (jonasschnelli)\n-- #16489 log: harmonize bitcoind logging (jonatack)\n-- #16577 util: Cbufferedfile fixes and unit test (LarryRuane)\n-- #16984 util: Make thread names shorter (hebasto)\n-- #17038 Don't rename main thread at process level (laanwj)\n-- #17184 util: Filter out macos process serial number (hebasto)\n-- #17095 util: Filter control characters out of log messages (laanwj)\n-- #17085 init: Change fallback locale to C.UTF-8 (laanwj)\n-- #16957 9% less memory: make SaltedOutpointHasher noexcept (martinus)\n-\n-### Documentation\n-- #15514 Update Transifex links (fanquake)\n-- #15513 add \"sections\" info to example bitcoin.conf (fanquake)\n-- #15530 Move wallet lock annotations to header (MarcoFalke)\n-- #15562 remove duplicate clone step in build-windows.md (fanquake)\n-- #15565 remove release note fragments (fanquake)\n-- #15444 Additional productivity tips (Sjors)\n-- #15577 Enable TLS in link to chris.beams.io (JeremyRand)\n-- #15604 release note for disabling reject messages by default (jnewbery)\n-- #15611 Add Gitian key for droark (droark)\n-- #15626 Update ACK description in CONTRIBUTING.md (jonatack)\n-- #15603 Add more tips to productivity.md (gwillen)\n-- #15683 Comment for seemingly duplicate LIBBITCOIN_SERVER (Bushstar)\n-- #15685 rpc-mining: Clarify error messages (MarcoFalke)\n-- #15760 Clarify sendrawtransaction::maxfeerate==0 help (MarcoFalke)\n-- #15659 fix findFork comment (r8921039)\n-- #15718 Improve netaddress comments (dongcarl)\n-- #15833 remove out-of-date comment on pay-to-witness support (r8921039)\n-- #15821 Remove upgrade note in release notes from EOL versions (MarcoFalke)\n-- #15267 explain AcceptToMemoryPoolWorker's coins_to_uncache (jamesob)\n-- #15887 Align code example style with clang-format (hebasto)\n-- #15877 Fix -dustrelayfee= argument docs grammar (keepkeyjon)\n-- #15908 Align MSVC build options with Linux build ones (hebasto)\n-- #15941 Add historical release notes for 0.18.0 (laanwj)\n-- #15794 Clarify PR guidelines w/re documentation (dongcarl)\n-- #15607 Release process updates (jonatack)\n-- #14364 Clarify -blocksdir usage (sangaman)\n-- #15777 Add doxygen comments for keypool classes (jnewbery)\n-- #15820 Add productivity notes for dummy rebases (dongcarl)\n-- #15922 Explain how to pass in non-fundamental types into functions (MarcoFalke)\n-- #16080 build/doc: update bitcoin_config.h packages, release process (jonatack)\n-- #16047 analyzepsbt description in doc/psbt.md (jonatack)\n-- #16039 add release note for 14954 (fanquake)\n-- #16139 Add riscv64 to outputs list in release-process.md (JeremyRand)\n-- #16140 create security policy (narula)\n-- #16164 update release process for SECURITY.md (jonatack)\n-- #16213 Remove explicit mention of versions from SECURITY.md (MarcoFalke)\n-- #16186 doc/lint: Fix spelling errors identified by codespell 1.15.0 (Empact)\n-- #16149 Rework section on ACK in CONTRIBUTING.md (MarcoFalke)\n-- #16196 Add release notes for 14897 & 15834 (MarcoFalke)\n-- #16241 add rapidcheck to vcpkg install list (fanquake)\n-- #16243 Remove travis badge from readme (MarcoFalke)\n-- #16256 remove orphaned header in developer notes (jonatack)\n-- #15964 Improve build-osx document formatting (giulio92)\n-- #16313 Fix broken link in doc/build-osx.md (jonatack)\n-- #16330 Use placeholder instead of key expiration date (hebasto)\n-- #16339 add reduce-memory.md (fanquake)\n-- #16347 Include static members in Doxygen (dongcarl)\n-- #15824 Improve netbase comments (dongcarl)\n-- #16430 Update bips 35, 37 and 111 status (MarcoFalke)\n-- #16455 Remove downgrading warning in release notes, per 0.18 branch (MarcoFalke)\n-- #16484 update labels in CONTRIBUTING.md (MarcoFalke)\n-- #16483 update Python command in msvc readme (sipsorcery)\n-- #16504 Add release note for the deprecated totalFee option of bumpfee (promag)\n-- #16448 add note on precedence of options in bitcoin.conf (fanquake)\n-- #16536 Update and extend benchmarking.md (ariard)\n-- #16530 Fix grammar and punctuation in developer notes (Tech1k)\n-- #16574 Add historical release notes for 0.18.1 (laanwj)\n-- #16585 Update Markdown syntax for bdb packages (emilengler)\n-- #16586 Mention other ways to conserve memory on compilation (MarcoFalke)\n-- #16605 Add missing contributor to 0.18.1 release notes (meshcollider)\n-- #16615 Fix typos in COPYRIGHT (gapeman)\n-- #16626 Fix spelling error chache -> cache (nilswloewen)\n-- #16587 Improve versionbits.h documentation (ariard)\n-- #16643 Add ZMQ dependencies to the Fedora build instructions (hebasto)\n-- #16634 Refer in rpcbind doc to the manpage (MarcoFalke)\n-- #16555 mention whitelist is inbound, and applies to blocksonly (Sjors)\n-- #16645 initial RapidCheck property-based testing documentation (jonatack)\n-- #16691 improve depends prefix documentation (fanquake)\n-- #16629 Add documentation for the new whitelist permissions (NicolasDorier)\n-- #16723 Update labels in CONTRIBUTING.md (hebasto)\n-- #16461 Tidy up shadowing section (promag)\n-- #16621 add default bitcoin.conf locations (GChuf)\n-- #16752 Delete stale URL in test README (michaelfolkson)\n-- #14862 Declare BLOCK_VALID_HEADER reserved (MarcoFalke)\n-- #16806 Add issue templates for bug and feature request (MarcoFalke)\n-- #16857 Elaborate need to re-login on Debian-based after usermod for Tor group (clashicly)\n-- #16863 Add a missing closing parenthesis in the bitcoin-wallet's help (darosior)\n-- #16757 CChainState return values (MarcoFalke)\n-- #16847 add comments clarifying how local services are advertised (jamesob)\n-- #16812 Fix whitespace errs in .md files, bitcoin.conf, and Info.plist.in (ch4ot1c)\n-- #16885 Update tx-size-small comment with relevant CVE disclosure (instagibbs)\n-- #16900 Fix doxygen comment for SignTransaction in rpc/rawtransaction_util (MarcoFalke)\n-- #16914 Update homebrew instruction for doxygen (Sjors)\n-- #16912 Remove Doxygen intro from src/bitcoind.cpp (ch4ot1c)\n-- #16960 replace outdated OpenSSL comment in test README (fanquake)\n-- #16968 Remove MSVC update step from translation process (laanwj)\n-- #16953 Improve test READMEs (fjahr)\n-- #16962 Put PR template in comments (laanwj)\n-- #16397 Clarify includeWatching for fundrawtransaction (stevenroose)\n-- #15459 add how to calculate blockchain and chainstate size variables to release process (marcoagner)\n-- #16997 Update bips.md for 0.19 (laanwj)\n-- #17001 Remove mention of renamed mapBlocksUnlinked (MarcoFalke)\n-- #17014 Consolidate release notes before 0.19.0 (move-only) (MarcoFalke)\n-- #17111 update bips.md with buried BIP9 deployments (MarcoFalke)\n-\n-Credits\n-=======\n-\n-Thanks to everyone who directly contributed to this release:\n-\n-- 251\n-- Aaron Clauson\n-- Akio Nakamura\n-- Alistair Mann\n-- Amiti Uttarwar\n-- Andrew Chow\n-- andrewtoth\n-- Anthony Towns\n-- Antoine Riard\n-- Aseem Sood\n-- Ben Carman\n-- Ben Woosley\n-- bpay\n-- Carl Dong\n-- Carnhof Daki\n-- Chris Capobianco\n-- Chris Moore\n-- Chuf\n-- clashic\n-- clashicly\n-- Cory Fields\n-- Daki Carnhof\n-- Dan Gershony\n-- Daniel Edgecumbe\n-- Daniel Kraft\n-- Daniel McNally\n-- darosior\n-- David A. Harding\n-- David Reikher\n-- Douglas Roark\n-- Elichai Turkel\n-- Emil\n-- Emil Engler\n-- ezegom\n-- Fabian Jahr\n-- fanquake\n-- Felix Weis\n-- Ferdinando M. Ametrano\n-- fridokus\n-- gapeman\n-- GChuf\n-- Gert-Jaap Glasbergen\n-- Giulio Lombardo\n-- Glenn Willen\n-- Graham Krizek\n-- Gregory Sanders\n-- grim-trigger\n-- gwillen\n-- Hennadii Stepanov\n-- Jack Mallers\n-- James Hilliard\n-- James O'Beirne\n-- Jan Beich\n-- Jeremy Rubin\n-- JeremyRand\n-- Jim Posen\n-- John Bampton\n-- John Newbery\n-- Jon Atack\n-- Jon Layton\n-- Jonas Schnelli\n-- Jonathan \"Duke\" Leto\n-- Jo\u00e3o Barbosa\n-- Joonmo Yang\n-- Jordan Baczuk\n-- Jorge Tim\u00f3n\n-- Josu Go\u00f1i\n-- Julian Fleischer\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- keepkeyjon\n-- Kirill Fomichev\n-- Kristaps Kaupe\n-- Kristian Kramer\n-- Larry Ruane\n-- Lenny Maiorani\n-- LongShao007\n-- Luca Venturini\n-- lucash-dev\n-- Luke Dashjr\n-- marcoagner\n-- MarcoFalke\n-- marcuswin\n-- Martin Ankerl\n-- Martin Zumsande\n-- Matt Corallo\n-- MeshCollider\n-- Michael Folkson\n-- Miguel Herranz\n-- Nathan Marley\n-- Neha Narula\n-- nicolas.dorier\n-- Nils Loewen\n-- nkostoulas\n-- orient\n-- Patrick Strateman\n-- Peter Bushnell\n-- Peter Wagner\n-- Pieter Wuille\n-- practicalswift\n-- qmma\n-- r8921039\n-- RJ Rybarczyk\n-- Russell Yanofsky\n-- Samuel Dobson\n-- Sebastian Falbesoner\n-- setpill\n-- shannon1916\n-- Sjors Provoost\n-- soroosh-sdi\n-- Steven Roose\n-- Suhas Daftuar\n-- tecnovert\n-- THETCR\n-- Tim Ruffing\n-- Tobias Kaderle\n-- Torkel Rogstad\n-- Ulrich Kempken\n-- whythat\n-- William Casarin\n-- Wladimir J. van der Laan\n-- zenosage\n+Due to a last-minute issue (#17449), 0.19.0, although it was tagged, was never released.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/bitcoin/bitcoin/).\n+See the release notes for 0.19.0.1 instead."
      }
    ]
  },
  {
    "sha": "70cda342cd20d0e0cd9f28405457544036968f2d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGNkYTM0MmNkMjBkMGUwY2Q5ZjI4NDA1NDU3NTQ0MDM2OTY4ZjJk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-26T15:14:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T15:09:51Z"
      },
      "message": "rpc: improve getaddressinfo RPCHelpman formatting",
      "tree": {
        "sha": "0a58081c4c8a147281a7c77aa3f742f878e436fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a58081c4c8a147281a7c77aa3f742f878e436fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70cda342cd20d0e0cd9f28405457544036968f2d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3anUEACgkQT1chs9Dj\nkh2obBAAkUoXi/alrb8MQNnUnx2vpS+2aCIcmXC/WWVjRZLT70rqdNj1wVHE3Eoa\nOHHHjVHphxAt5ieUhnWUoZOxoyaI0dafQSGp8K1SRxl4g0jOZHsQKt1q3RI3e/H1\nhcpJpsnxKbP6BchGYl0OkIbciSl5aIM5+4ctUhslcqIGXCcn3xlnHquuhf3jj/R+\nZDJLRJL+Fmu7YMwpGYuqKjQgkeimcUbIHVj4D50s6ZZjz2PeCMhaf7rZPTlOYGOO\nZVIgFI59MpK8VqyUrJPv0e9hpDFy1mLeVxDd1WmI85wlqFFu3x9PV1M4v/sHrGdW\nD99YdzsSJ3get+YUIY9aQXB8Vnk2OKGhCdkZ7fvlB+cdUabwxmfwKdu9xmhAw3qz\n1GVlKTSggXRMXMUT3vbu0P52p9qFBEx21d+PWZewU6QDNbmdW8qXz1PCS42Qd8GQ\nrXW6FOznrzT3BBs7AlQeBDInXMudqQAXDtqzBDOBojs1opf9cln9z6g8+1xx+Zoa\naYQ+6lkh888QCoxQAEnkR9ZBJBucZISmCcka3HtiWAeBTjISiqTL9zsOCPR9+pdU\ng+XezAWiMk7DLBx+6oS91xJG39VyeLL626baLOMNPFojH1OJn4xYJN8RxHQGZ+Yp\nL3e/H3ROTuO0nZsm234l2ywMJLd0uCOmav5eCT0VAblONWZR8Go=\n=EhCW\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGE2lG1N3+aQkWM9V1BcHCacEbwEcP2GhrfcaYlntGG+CP/wEFtCN+NBOuWq\nhcNk3bqQZTwI8QRd2p1C8Ah1QNRdXCy+JQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEIzOvXPSD9N8VHAQktO9YgEI8QRd2p1C\n8Ag8o3VMOoc6tQCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wEK2njeWTrSyNsoexMHfOpcgI8QRd2p1D8AjQShNH\nmOmKHgCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BDnJ86a/IxIlCOMv8uAoGOFCPEEXdqdQvAIq0F6YM2hWioA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0a58081c4c8a147281a7c77aa3f742f878e436fe\nparent 239d199667888e5d60309f15a38eed4d3afe56c4\nauthor Jon Atack <jon@atack.com> 1572102878 +0200\ncommitter Jon Atack <jon@atack.com> 1574608191 +0100\n\nrpc: improve getaddressinfo RPCHelpman formatting\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70cda342cd20d0e0cd9f28405457544036968f2d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70cda342cd20d0e0cd9f28405457544036968f2d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70cda342cd20d0e0cd9f28405457544036968f2d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4"
      }
    ],
    "stats": {
      "total": 54,
      "additions": 29,
      "deletions": 25
    },
    "files": [
      {
        "sha": "2ac58cba6aaf000c8dfa1b2409b17eea1641548b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 25,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70cda342cd20d0e0cd9f28405457544036968f2d/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70cda342cd20d0e0cd9f28405457544036968f2d/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=70cda342cd20d0e0cd9f28405457544036968f2d",
        "patch": "@@ -3709,41 +3709,45 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     }\n \n             RPCHelpMan{\"getaddressinfo\",\n-                \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n-                \"to be in the wallet.\\n\",\n+                \"\\nReturn information about the given bitcoin address.\\n\"\n+                \"Some information requires the address to be in the wallet.\\n\",\n                 {\n                     {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to get the information of.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n-            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex-encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"solvable\\\" : true|false,      (boolean) Whether we know how to spend coins sent to this address, ignoring the possible lack of private keys\\n\"\n-            \"  \\\"desc\\\" : \\\"desc\\\",            (string, optional) A descriptor for spending coins sent to this address (only when solvable)\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"ischange\\\" : true|false,      (boolean) If the address was used for change output\\n\"\n-            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n-            \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n-            \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) The hex value of the witness program\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true and the redeemscript is known. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"pubkeys\\\"                     (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",              (string) The bitcoin address validated\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",             (string) The hex-encoded scriptPubKey generated by the address\\n\"\n+            \"  \\\"ismine\\\" : true|false,              (boolean) If the address is yours or not\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,         (boolean) If the address is watchonly\\n\"\n+            \"  \\\"solvable\\\" : true|false,            (boolean) Whether we know how to spend coins sent to this address, ignoring the possible lack of private keys\\n\"\n+            \"  \\\"desc\\\" : \\\"desc\\\",                    (string, optional) A descriptor for spending coins sent to this address (only when solvable)\\n\"\n+            \"  \\\"isscript\\\" : true|false,            (boolean) If the key is a script\\n\"\n+            \"  \\\"ischange\\\" : true|false,            (boolean) If the address was used for change output\\n\"\n+            \"  \\\"iswitness\\\" : true|false,           (boolean) If the address is a witness address\\n\"\n+            \"  \\\"witness_version\\\" : version         (numeric, optional) The version number of the witness program\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"           (string, optional) The hex value of the witness program\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"                   (string, optional) The output script type. Only if \\\"isscript\\\" is true and the redeemscript is known. Possible\\n\"\n+            \"                                                         types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n+            \"                                                         witness_v0_scripthash, witness_unknown\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                      (string, optional) The redeemscript for the p2sh address\\n\"\n+            \"  \\\"pubkeys\\\"                           (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n             \"    [\\n\"\n             \"      \\\"pubkey\\\"\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string, optional) The hex value of the raw public key, for single-key addresses (possibly embedded in P2SH or P2WSH)\\n\"\n-            \"  \\\"embedded\\\" : {...},           (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. It includes all getaddressinfo output fields for the embedded address, excluding metadata (\\\"timestamp\\\", \\\"hdkeypath\\\", \\\"hdseedid\\\") and relation to the wallet (\\\"ismine\\\", \\\"iswatchonly\\\").\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean, optional) If the pubkey is compressed\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"         (string) The label associated with the address, \\\"\\\" is the default label\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"      (string, optional) The Hash160 of the HD seed\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx              (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",          (string, optional) The hex value of the raw public key, for single-key addresses (possibly embedded in P2SH or P2WSH)\\n\"\n+            \"  \\\"embedded\\\" : {...},                 (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. It includes all\\n\"\n+            \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (\\\"timestamp\\\", \\\"hdkeypath\\\",\\n\"\n+            \"                                                         \\\"hdseedid\\\") and relation to the wallet (\\\"ismine\\\", \\\"iswatchonly\\\").\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address, \\\"\\\" is the default label\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath if the key is HD and available\\n\"\n+            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed\\n\"\n             \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingperint of the master key.\\n\"\n-            \"  \\\"labels\\\"                      (object) Array of labels associated with the address.\\n\"\n+            \"  \\\"labels\\\"                            (object) Array of labels associated with the address.\\n\"\n             \"    [\\n\"\n             \"      { (json object of label data)\\n\"\n             \"        \\\"name\\\": \\\"labelname\\\" (string) The label\\n\""
      }
    ]
  },
  {
    "sha": "1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTNhMjU2ZDVlMDQ0M2QxOTc1N2MxZjFmY2ViOWM5ZWRlMTc3NThh",
    "commit": {
      "author": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-24T21:53:42Z"
      },
      "committer": {
        "name": "Harris",
        "email": "brakmic@gmail.com",
        "date": "2019-11-24T21:53:42Z"
      },
      "message": "wallet: replace raw pointer with const reference in AddrToPubKey",
      "tree": {
        "sha": "963a9b2827f64f1854a36253f2f1b57e3b23cb13",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/963a9b2827f64f1854a36253f2f1b57e3b23cb13"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEED2bWxOeRx//n2QOeJiaFvHjtEfsFAl3a++YACgkQJiaFvHjt\nEftLpwf/ST76m8Hbx3LMigJV5ckvZT1DeH8ObQQCwXtqK6zcS+WFNCdPvnVWs5yG\nB29QtPkrVBGlYdOYGCmgTOzR/fTG+PtcwY1SvGtX4gSC1f4UYqMjPH9sr34uQYY/\nelvdybUQHehiozOZLcxTxCVAywfsKDbVab7LZICQ4Nz3GJguBmpZnhxsxa4lGB54\nAoR22jiInhPU8crjJboj4DevXpZATxuEq9JyZ4b/dc5EbqRs78cl2BhHFnCzJEn9\nXtywKTxMPwbdeCP6R9pp4pnlWEB+he4DCFAwQNjxLHHZfZMGrApXSuseNBcY4QlF\nSDN5yZ27eBcFRQSekAkhBrcZBaDMBg==\n=G/mC\n-----END PGP SIGNATURE-----",
        "payload": "tree 963a9b2827f64f1854a36253f2f1b57e3b23cb13\nparent 239d199667888e5d60309f15a38eed4d3afe56c4\nauthor Harris <brakmic@gmail.com> 1574632422 +0100\ncommitter Harris <brakmic@gmail.com> 1574632422 +0100\n\nwallet: replace raw pointer with const reference in AddrToPubKey\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/comments",
    "author": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "brakmic",
      "id": 56779,
      "node_id": "MDQ6VXNlcjU2Nzc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/56779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brakmic",
      "html_url": "https://github.com/brakmic",
      "followers_url": "https://api.github.com/users/brakmic/followers",
      "following_url": "https://api.github.com/users/brakmic/following{/other_user}",
      "gists_url": "https://api.github.com/users/brakmic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brakmic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brakmic/subscriptions",
      "organizations_url": "https://api.github.com/users/brakmic/orgs",
      "repos_url": "https://api.github.com/users/brakmic/repos",
      "events_url": "https://api.github.com/users/brakmic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brakmic/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0791a365fe44da785d5d8dc9135488e4a302fa52",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -131,18 +131,18 @@ CPubKey HexToPubKey(const std::string& hex_in)\n }\n \n // Retrieves a public key for an address from the given FillableSigningProvider\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in)\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in)\n {\n     CTxDestination dest = DecodeDestination(addr_in);\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address: \" + addr_in);\n     }\n-    CKeyID key = GetKeyForDestination(*keystore, dest);\n+    CKeyID key = GetKeyForDestination(keystore, dest);\n     if (key.IsNull()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"%s does not refer to a key\", addr_in));\n     }\n     CPubKey vchPubKey;\n-    if (!keystore->GetPubKey(key, vchPubKey)) {\n+    if (!keystore.GetPubKey(key, vchPubKey)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"no full public key for address %s\", addr_in));\n     }\n     if (!vchPubKey.IsFullyValid()) {"
      },
      {
        "sha": "9304e1fefbff9e05e87e4f39afcdd26f4680409d",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -69,7 +69,7 @@ extern std::string HelpExampleCli(const std::string& methodname, const std::stri\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n \n CPubKey HexToPubKey(const std::string& hex_in);\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in);\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in);\n CTxDestination AddAndGetMultisigDestination(const int required, const std::vector<CPubKey>& pubkeys, OutputType type, FillableSigningProvider& keystore, CScript& script_out);\n \n UniValue DescribeAddress(const CTxDestination& dest);"
      },
      {
        "sha": "f48e1e90fd458a7ba54869e7c6a5d87a33c60334",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a3a256d5e0443d19757c1f1fceb9c9ede17758a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "patch": "@@ -998,7 +998,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n         if (IsHex(keys_or_addrs[i].get_str()) && (keys_or_addrs[i].get_str().length() == 66 || keys_or_addrs[i].get_str().length() == 130)) {\n             pubkeys.push_back(HexToPubKey(keys_or_addrs[i].get_str()));\n         } else {\n-            pubkeys.push_back(AddrToPubKey(&spk_man, keys_or_addrs[i].get_str()));\n+            pubkeys.push_back(AddrToPubKey(spk_man, keys_or_addrs[i].get_str()));\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "5a0ed850700dfb19167d40b38f80313bd5e427ca",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YTBlZDg1MDcwMGRmYjE5MTY3ZDQwYjM4ZjgwMzEzYmQ1ZTQyN2Nh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-26T15:43:13Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:05:48Z"
      },
      "message": "rpc: improve getaddressinfo RPCHelpman content",
      "tree": {
        "sha": "87da921621498957ab65e7ce6c24b6d6c55a9a3c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/87da921621498957ab65e7ce6c24b6d6c55a9a3c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5a0ed850700dfb19167d40b38f80313bd5e427ca",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/sUACgkQT1chs9Dj\nkh3duw/+PX6fz5xGsSUp915QmjY/yTgIy2nY2ClirB5wiCb1MJHUUGJwKbdikCQl\n4Z99i7knyxIH7G2v/81F/rBj5rc025tmsI6CKMnGrZnlpOGbcKrXm+sGksLDZmTv\nBe4n43ZKQogq5orTAYqK+IDsCCpKQR0407ntDImq1BVcJjyJebLYGdWbH1wF98rF\nMM7MLCslxNPmDbGJiOqvDSSxFjkLQ55kFhAYe/py07izGR7YdrnGIYB1vcvCTkcD\n29/4jUmcqTsCMTZBMM/BhCGxSWLzJQsWQK0TLZ/zOjjxiZFM/2zVVBkAdaC9l8Zi\nlS42W5tNZLwz4+DMzKX0SeskHZpEZZUyd1XWH/aoxMEDuMQBQCRyqQOMjohWelc9\nYLq+VuBOKSKW9QTmCZ44e70EjKDLx9dS6gfi9QakPtCrjYFD3OQZx0Z2q7kCiMCr\nak714QW6bt8XfU3kqQa5SndTmrrzwM85lREOey3emjGc7ZhAL4VA59l4PYyDa1qF\n3dKn6UDEpK+5EQbWxlwOAPrfnihplCByDyFxUrDq0/QOw6gJKM+B3UacpXvIM6pb\ncYKQVb+kFBBiYhVd1Wnib441dKbQszfEi4r4CPaqVKU8lYUPyAWSHMjfsWvwavzI\nSyJry2HmZ++7AcIzPU1HBCVZJCCW6aJKh4Niw2cw6pt49rW0vME=\n=VySC\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIBUqCF/ZdgVMrUfjuwVfLm1jgrUI8HE1z4yXkVP2YDN5CP/wEFj9jjfBKKHT\n8Mz/SC6vIBwI8QRd2v7G8Agm25H+j86E7QCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wENY4dBriNvYkikcyrKBIIDoI8QRd2v7H\n8AhxqzBtmtSeXACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQ/PfFu57ReUEbBYUnsQ9VWwjxBF3a/sfwCO5M\nWc9ntUT5AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t8BD9HDF9KqUhR/6Rf+z/uHWKCPEEXdr+x/AIRf7/k7Ry08EAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 87da921621498957ab65e7ce6c24b6d6c55a9a3c\nparent 70cda342cd20d0e0cd9f28405457544036968f2d\nauthor Jon Atack <jon@atack.com> 1572104593 +0200\ncommitter Jon Atack <jon@atack.com> 1574633148 +0100\n\nrpc: improve getaddressinfo RPCHelpman content\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0ed850700dfb19167d40b38f80313bd5e427ca",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0ed850700dfb19167d40b38f80313bd5e427ca",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0ed850700dfb19167d40b38f80313bd5e427ca/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70cda342cd20d0e0cd9f28405457544036968f2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70cda342cd20d0e0cd9f28405457544036968f2d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70cda342cd20d0e0cd9f28405457544036968f2d"
      }
    ],
    "stats": {
      "total": 64,
      "additions": 32,
      "deletions": 32
    },
    "files": [
      {
        "sha": "db7d6ad0dae75f964e9a56554b3624011a57151b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 32,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5a0ed850700dfb19167d40b38f80313bd5e427ca/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5a0ed850700dfb19167d40b38f80313bd5e427ca/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=5a0ed850700dfb19167d40b38f80313bd5e427ca",
        "patch": "@@ -951,7 +951,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n     }\n \n             RPCHelpMan{\"addmultisigaddress\",\n-                \"\\nAdd a nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n+                \"\\nAdd an nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n                 \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n                 \"This functionality is only intended for use with non-watchonly addresses.\\n\"\n                 \"See `importaddress` for watchonly p2sh address support.\\n\"\n@@ -3710,48 +3710,48 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n             RPCHelpMan{\"getaddressinfo\",\n                 \"\\nReturn information about the given bitcoin address.\\n\"\n-                \"Some information requires the address to be in the wallet.\\n\",\n+                \"Some of the information will only be present if the address is in the active wallet.\\n\",\n                 {\n-                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to get the information of.\"},\n+                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address for which to get information.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\",              (string) The bitcoin address validated\\n\"\n-            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",             (string) The hex-encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,              (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,         (boolean) If the address is watchonly\\n\"\n-            \"  \\\"solvable\\\" : true|false,            (boolean) Whether we know how to spend coins sent to this address, ignoring the possible lack of private keys\\n\"\n-            \"  \\\"desc\\\" : \\\"desc\\\",                    (string, optional) A descriptor for spending coins sent to this address (only when solvable)\\n\"\n-            \"  \\\"isscript\\\" : true|false,            (boolean) If the key is a script\\n\"\n-            \"  \\\"ischange\\\" : true|false,            (boolean) If the address was used for change output\\n\"\n-            \"  \\\"iswitness\\\" : true|false,           (boolean) If the address is a witness address\\n\"\n-            \"  \\\"witness_version\\\" : version         (numeric, optional) The version number of the witness program\\n\"\n-            \"  \\\"witness_program\\\" : \\\"hex\\\"           (string, optional) The hex value of the witness program\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"                   (string, optional) The output script type. Only if \\\"isscript\\\" is true and the redeemscript is known. Possible\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",              (string) The bitcoin address validated.\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",             (string) The hex-encoded scriptPubKey generated by the address.\\n\"\n+            \"  \\\"ismine\\\" : true|false,              (boolean) If the address is yours.\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,         (boolean) If the address is watchonly.\\n\"\n+            \"  \\\"solvable\\\" : true|false,            (boolean) If we know how to spend coins sent to this address, ignoring the possible lack of private keys.\\n\"\n+            \"  \\\"desc\\\" : \\\"desc\\\",                    (string, optional) A descriptor for spending coins sent to this address (only when solvable).\\n\"\n+            \"  \\\"isscript\\\" : true|false,            (boolean) If the key is a script.\\n\"\n+            \"  \\\"ischange\\\" : true|false,            (boolean) If the address was used for change output.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,           (boolean) If the address is a witness address.\\n\"\n+            \"  \\\"witness_version\\\" : version         (numeric, optional) The version number of the witness program.\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"           (string, optional) The hex value of the witness program.\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"                   (string, optional) The output script type. Only if isscript is true and the redeemscript is known. Possible\\n\"\n             \"                                                         types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n-            \"                                                         witness_v0_scripthash, witness_unknown\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                      (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"pubkeys\\\"                           (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"                                                         witness_v0_scripthash, witness_unknown.\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                      (string, optional) The redeemscript for the p2sh address.\\n\"\n+            \"  \\\"pubkeys\\\"                           (array, optional) Array of pubkeys associated with the known redeemscript (only if script is multisig).\\n\"\n             \"    [\\n\"\n-            \"      \\\"pubkey\\\"\\n\"\n+            \"      \\\"pubkey\\\" (string)\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx              (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",          (string, optional) The hex value of the raw public key, for single-key addresses (possibly embedded in P2SH or P2WSH)\\n\"\n-            \"  \\\"embedded\\\" : {...},                 (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. It includes all\\n\"\n-            \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (\\\"timestamp\\\", \\\"hdkeypath\\\",\\n\"\n-            \"                                                         \\\"hdseedid\\\") and relation to the wallet (\\\"ismine\\\", \\\"iswatchonly\\\").\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address, \\\"\\\" is the default label\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed\\n\"\n-            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingperint of the master key.\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx              (numeric, optional) The number of signatures required to spend multisig output (only if script is multisig).\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",          (string, optional) The hex value of the raw public key for single-key addresses (possibly embedded in P2SH or P2WSH).\\n\"\n+            \"  \\\"embedded\\\" : {...},                 (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. Includes all\\n\"\n+            \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (timestamp, hdkeypath,\\n\"\n+            \"                                                         hdseedid) and relation to the wallet (ismine, iswatchonly).\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed.\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\".\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available, expressed in seconds since Epoch Time (Jan 1 1970 GMT).\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath, if the key is HD and available.\\n\"\n+            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed.\\n\"\n+            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingerprint of the master key.\\n\"\n             \"  \\\"labels\\\"                            (object) Array of labels associated with the address.\\n\"\n             \"    [\\n\"\n             \"      { (json object of label data)\\n\"\n-            \"        \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n-            \"        \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"        \\\"name\\\": \\\"label name\\\" (string) The label.\\n\"\n+            \"        \\\"purpose\\\": \\\"purpose\\\" (string) The purpose of the associated address (send or receive).\\n\"\n             \"      },...\\n\"\n             \"    ]\\n\"\n             \"}\\n\""
      }
    ]
  },
  {
    "sha": "8d1ed0c263f8cdff7189f02040b5d02238d93da0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDFlZDBjMjYzZjhjZGZmNzE4OWYwMjA0MGI1ZDAyMjM4ZDkzZGEw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-28T15:09:15Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:06:54Z"
      },
      "message": "rpc: clarify label vs labels in getaddressinfo RPCHelpman",
      "tree": {
        "sha": "872d077fcc259a446b627e73acc179d0d2d1e3be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/872d077fcc259a446b627e73acc179d0d2d1e3be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d1ed0c263f8cdff7189f02040b5d02238d93da0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/wYACgkQT1chs9Dj\nkh2bBA//SZgt8Aic+iHrg/gt9iFC/jdbDFA912rBdVU7rxfMbbKN/HXowMD/KxXE\nNO5lhRsjcVb8T2XbPM+4D3KNFR77ypqccjrC0QFuGEiiH8fFB3KvzFMg55YBbMvH\n+uhwvFYVO7YZvWVuuQSio9U1ZGiDeqdkNR3y8bpA1J3tD9NECxp9c/AbEn5jbEpE\nvC80CqY/Yt+wkLViD2JvRNoaVoqzkbqTwpD+FLTj5BOPbRYS8FLp/vRx6far9vFl\n4AaevbBT1LUsvfUv+8mYL5EKyxvlFyzLt4/BIG6tqZV8S97983zjIQQ/Tu+VHm20\nwiNhglRBbXhwntfSQeDqPOJbj/pg3SIue+ina0XFSWJ/pQNe3WgRin9MDvWTXjXn\nJnGD2Uk1QEk9OYtjFXSuOdD/ekYUtsupPmK1JCepqX3FgInWdoFnlgQZ8Qr209/H\nYQ3khLsz3AQhRy8R50wlq/zV8P0uq2W4Z0nHjbxxf28LlzeFokKln85ZGol/ynKD\nQhNP8pgx34IEMdOylyuE89E1cMnVb/q90CHOh1gClRjVCTmg+j/FnfU051K7dpmZ\nQhRRI9zUCuRB17vbCynD1IOI7f5OIbOGCGUIKQ3Tkrq+N5BwQKxNMSZusQZYv4v1\nFLKkuY4WjbECoJrY26TQJ9dr8ugVcLiw4esZlLVMv8FlMP4CcL8=\n=TLfl\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMksKA8futthQa0m6lJnGnvJ9CW9H0V6NE4b1J3Bnf6RCP/wEAPzxffRqX8b\nZQ5Dm7mTge0I8QRd2v8H8AiLyi89fpsPDgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEARRVv+PcxX52VUGR+wpKbII8QRd2v8H\n8Ajea/kugjpRCACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEGrgAPbn8BYJLFujLnWN6KkI8QRd2v8I8Ai7Ux0JYFDx\n6ACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQxdbxWCGWWR2c+qoFyYF0BgjxBF3a/wjwCN+NRtblHf23AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 872d077fcc259a446b627e73acc179d0d2d1e3be\nparent 5a0ed850700dfb19167d40b38f80313bd5e427ca\nauthor Jon Atack <jon@atack.com> 1572275355 +0100\ncommitter Jon Atack <jon@atack.com> 1574633214 +0100\n\nrpc: clarify label vs labels in getaddressinfo RPCHelpman\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d1ed0c263f8cdff7189f02040b5d02238d93da0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d1ed0c263f8cdff7189f02040b5d02238d93da0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d1ed0c263f8cdff7189f02040b5d02238d93da0/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a0ed850700dfb19167d40b38f80313bd5e427ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a0ed850700dfb19167d40b38f80313bd5e427ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a0ed850700dfb19167d40b38f80313bd5e427ca"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "253466ad783a8d730b003812d2cf33b3a6b81078",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d1ed0c263f8cdff7189f02040b5d02238d93da0/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d1ed0c263f8cdff7189f02040b5d02238d93da0/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8d1ed0c263f8cdff7189f02040b5d02238d93da0",
        "patch": "@@ -3742,15 +3742,16 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n             \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (timestamp, hdkeypath,\\n\"\n             \"                                                         hdseedid) and relation to the wallet (ismine, iswatchonly).\\n\"\n             \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed.\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\".\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\". Equivalent to the name field in the labels array.\\n\"\n             \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available, expressed in seconds since Epoch Time (Jan 1 1970 GMT).\\n\"\n             \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath, if the key is HD and available.\\n\"\n             \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed.\\n\"\n             \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingerprint of the master key.\\n\"\n-            \"  \\\"labels\\\"                            (object) Array of labels associated with the address.\\n\"\n+            \"  \\\"labels\\\"                            (object) An array of labels associated with the address. Currently limited to one label but returned\\n\"\n+            \"                                               as an array to keep the API stable if multiple labels are enabled in the future.\\n\"\n             \"    [\\n\"\n             \"      { (json object of label data)\\n\"\n-            \"        \\\"name\\\": \\\"label name\\\" (string) The label.\\n\"\n+            \"        \\\"name\\\": \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\"\n             \"        \\\"purpose\\\": \\\"purpose\\\" (string) The purpose of the associated address (send or receive).\\n\"\n             \"      },...\\n\"\n             \"    ]\\n\""
      }
    ]
  },
  {
    "sha": "2ee0cb3330ccf70f0540cb42370796e32eff1569",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWUwY2IzMzMwY2NmNzBmMDU0MGNiNDIzNzA3OTZlMzJlZmYxNTY5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-28T16:26:03Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:07:05Z"
      },
      "message": "rpc: update getaddressinfo RPCExamples to bech32",
      "tree": {
        "sha": "fa057444e0cfdca52faaed0bc5c51c41621c89ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa057444e0cfdca52faaed0bc5c51c41621c89ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ee0cb3330ccf70f0540cb42370796e32eff1569",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/wkACgkQT1chs9Dj\nkh3kHw/9Fqk66Ij+eHWtaHFUxIadWNzlBG59YadZFwkYs2i0KyICL3kP0UgZ8EAO\ne+n0JEWV7g7Hn6jQcuNG8c4ZCDhOaPJCFvECXjOaTa+XgDomGpPdmqXCxEtxXyDm\nGBCrTQT1GtYkyO6X8OtXIfTt8EvDWgivybPOa61L9bUa6/BeY0LV/N3q5FHi3gn8\nzUQfuBkpOhaQCngwbZjdOQENzwH4zJFNDXd8d+mR62rZWRtj7+t8tiNCJH6IO27Z\n3sbrrl0izucnR0/QjaXorJC9gBvApgVsCx/YoBNGYI1u9qO3EOoZtAqf1zConcGl\nMk2ZNFTaHCHoGdPRrVjfUEjic2LE2VSZTY0nuuA2kxU2UPUM9d8roHima5vHiraa\nkyT39nEsilHahX4KtT6p+flofDzlrv47QKE7nXdSLH2ZlV3FQJnp+LDz6z5p2GCz\nDRPS4o1obnTHBo45o95dWIVYr5ut1MN4oiWNuaqcL5fWEvnxS7l/KQKu9Zpdi3KS\n4NwegrSph4BKuAGIQgb9pNM1oWQ+Kx7q7xlAadM6rmwHtYRRW9Z1qDNm4bR8+ymS\nytP1KqGoyiEngrOtiOKi32q7fCG8C2KbgRymoBFBJGYpjsZXVtd+UAPy2mX3kqTl\nIfU9+Q44EmmgGzyGywLfLJrCyXQF4NtgsXLZbCqIgP5ugnAs8f8=\n=S3sr\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAfExnEKu6DiAkLTHVVY7ypCXCMQG1QV9JbWryZ2huTLCP/wEBS7Z5sJYxSt\nt/arSieUUvII8QRd2v8K8AjY7SHsjMAuVACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEBzFFfWQMnTvzTQgkfDc1wUI\n8CAfavZpqoVobX7F0rJY+HdlGUhamDI7Zdaj4JYnWjwD/AjxBF3a/wvwCEzzVhiS\ngHzyAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn//AQKg9czV06McSCa75cREc2vgjxBF3a/wvwCDodJs6ZRkqoAIPf\n4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t8BBEWQw/\ni+x6dhcrY/11NUsJCPEEXdr/CvAIBk1hVqEn6NsAg9/jDS75DI4uLWh0dHBzOi8v\nYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree fa057444e0cfdca52faaed0bc5c51c41621c89ca\nparent 8d1ed0c263f8cdff7189f02040b5d02238d93da0\nauthor Jon Atack <jon@atack.com> 1572279963 +0100\ncommitter Jon Atack <jon@atack.com> 1574633225 +0100\n\nrpc: update getaddressinfo RPCExamples to bech32\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee0cb3330ccf70f0540cb42370796e32eff1569",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee0cb3330ccf70f0540cb42370796e32eff1569",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee0cb3330ccf70f0540cb42370796e32eff1569/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d1ed0c263f8cdff7189f02040b5d02238d93da0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d1ed0c263f8cdff7189f02040b5d02238d93da0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d1ed0c263f8cdff7189f02040b5d02238d93da0"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9dd7d8435c04a85108b9acceddcec39817c3d8d0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ee0cb3330ccf70f0540cb42370796e32eff1569/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ee0cb3330ccf70f0540cb42370796e32eff1569/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2ee0cb3330ccf70f0540cb42370796e32eff1569",
        "patch": "@@ -3758,8 +3758,8 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n             \"}\\n\"\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+                    HelpExampleCli(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\") +\n+                    HelpExampleRpc(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\")\n                 },\n             }.Check(request);\n "
      }
    ]
  },
  {
    "sha": "1388de83900eaced906d369fe9e8887ae74b2dcf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzg4ZGU4MzkwMGVhY2VkOTA2ZDM2OWZlOWU4ODg3YWU3NGIyZGNm",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-27T13:16:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:07:07Z"
      },
      "message": "rpc: add getaddressinfo code documentation\n\nand separate the fields with a line break for readability.",
      "tree": {
        "sha": "63491701a09b92d8365f045283867b77720b4c7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63491701a09b92d8365f045283867b77720b4c7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1388de83900eaced906d369fe9e8887ae74b2dcf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/wwACgkQT1chs9Dj\nkh32lhAAqj5TpgVQqkGBilOt59/l3rvzzHiGdI6Dr+dQONkRF/+sI3eSZO6XRv9B\npH+JCt+S+bkTrjpJnv/UjYToks2c4kpZ+U5/VX7ajp/gZv3svODYJj23r5IWZIxN\nICqtdJ5SleVuGhYN8QTGIjC0YEd//oibEb2xqawc/Cw63GvKKyW/qsHPsM9guIq/\nvsmT44RKsseiSPy6Eq5/83eSFz1dZsf7uHrazUcXouey6EO+i9+rqe49Pxuu0x3g\n5PsLPoCH592dqIyvcvuJEimpBx9Ninl4fYL2JLuxXYQy6VNNkrGF3ptiI0VCc3yB\nXBshiFZM7ywry+OkSfu4I0WlHtcOJ89ncW/Xy6PLoCN0elnPw/LLvkOBsa4WrnPz\npNI+yQRZXhvb0wzUGtWPHWHx/asvHe5koJr1Yy81F1YEdeaCKGYPojZcaZqDR7Dt\n4Jo5ZqFPi96uUamDUIe6yxndLzq3kokzPxkh5H+xQYA1qUXf8vyjFyMoyUXpQfR0\n6qoYP9bRPPXHPY+rLdz2sUB9SmHwTFMluAyqeSLjG2KRxqeFlkCA2XM73ShqIuSO\nO8bCsqX5UrVq8oKOzMXr2I8AKs2O8bDzI1ChAhjFEiKk8XdtzXJB2Fv0kft6zAV9\nexzoUgncb0xOXy3/537dJZMIKscQk7UiaWEsB6UzjOV1PioPO9w=\n=gIl3\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEwkLgnDfiH0xrcpXWQViQeXsemG37Wx56XIprebqu4hCP/wEC9p5gr4vX5i\nVsY/yXj/A6YI8QRd2v8N8AiOYDkQbmo5jQCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEEJZMJWaPlWncdIC0yTJ\n7l8I8QRd2v8O8AitGS3LiB7oHQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEEoi2qYCrmeDlz5QQ1NB4UAI8QRd2v8N8Ahq4eH8\ncvj1VwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRp\nbWVzdGFtcHMub3Jn8BBWSk+qooPb0yzhS8B8cOhPCPEEXdr/DfAIquyFQAkQA5QA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 63491701a09b92d8365f045283867b77720b4c7a\nparent 2ee0cb3330ccf70f0540cb42370796e32eff1569\nauthor Jon Atack <jon@atack.com> 1572182160 +0100\ncommitter Jon Atack <jon@atack.com> 1574633227 +0100\n\nrpc: add getaddressinfo code documentation\n\nand separate the fields with a line break for readability.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1388de83900eaced906d369fe9e8887ae74b2dcf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1388de83900eaced906d369fe9e8887ae74b2dcf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1388de83900eaced906d369fe9e8887ae74b2dcf/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ee0cb3330ccf70f0540cb42370796e32eff1569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ee0cb3330ccf70f0540cb42370796e32eff1569",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ee0cb3330ccf70f0540cb42370796e32eff1569"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 21,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f4b5a8b9ac02da2204f74015fcbfc3bfa63d79c9",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 3,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1388de83900eaced906d369fe9e8887ae74b2dcf/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1388de83900eaced906d369fe9e8887ae74b2dcf/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=1388de83900eaced906d369fe9e8887ae74b2dcf",
        "patch": "@@ -3778,23 +3778,39 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     CScript scriptPubKey = GetScriptForDestination(dest);\n     ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n+\n     const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n \n     isminetype mine = pwallet->IsMine(dest);\n     ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n+\n     bool solvable = provider && IsSolvable(*provider, scriptPubKey);\n     ret.pushKV(\"solvable\", solvable);\n+\n     if (solvable) {\n        ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *provider)->ToString());\n     }\n+\n     ret.pushKV(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY));\n+\n+    // Return DescribeWalletAddress fields.\n+    // Always returned: isscript, ischange, iswitness.\n+    // Optional: witness_version, witness_program, script, hex, pubkeys (array),\n+    // sigsrequired, pubkey, embedded, iscompressed.\n     UniValue detail = DescribeWalletAddress(pwallet, dest);\n     ret.pushKVs(detail);\n+\n+    // Return label field if existing. Currently only one label can be\n+    // associated with an address, so the label should be equivalent to the\n+    // value of the name key/value pair in the labels hash array below.\n     if (pwallet->mapAddressBook.count(dest)) {\n         ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n     }\n+\n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n \n+    // Fetch KeyMetadata, if present, for the timestamp, hdkeypath, hdseedid,\n+    // and hdmasterfingerprint fields.\n     ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan(scriptPubKey);\n     if (spk_man) {\n         if (const CKeyMetadata* meta = spk_man->GetMetadata(dest)) {\n@@ -3807,9 +3823,11 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         }\n     }\n \n-    // Currently only one label can be associated with an address, return an array\n-    // so the API remains stable if we allow multiple labels to be associated with\n-    // an address.\n+    // Return a labels array containing a hash of key/value pairs for the label\n+    // name and address purpose. The name value is equivalent to the label field\n+    // above. Currently only one label can be associated with an address, but we\n+    // return an array so the API remains stable if we allow multiple labels to\n+    // be associated with an address in the future.\n     UniValue labels(UniValue::VARR);\n     std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n     if (mi != pwallet->mapAddressBook.end()) {"
      }
    ]
  },
  {
    "sha": "0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjM1MzlhYzZkNzcyZmM2NDZiNWYxODRmYTFlZmU3N2JmNjMyZjZh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-28T13:54:41Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:07:10Z"
      },
      "message": "test: add listlabels test in wallet_labels.py",
      "tree": {
        "sha": "b61fd8109e1f6e504ca45815e54fe677bdff500c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b61fd8109e1f6e504ca45815e54fe677bdff500c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/w8ACgkQT1chs9Dj\nkh1gMhAAnxKGkMpHB2mikQ6iOTrZoydGOZeBiDIn2p4+56JrA67/Fu3Z9f3ldIO/\nayxkZwFNd0jT4yN0ldmZk9z2CKNAQFvWIqGhQJ8kjZtdsHCuSI6ne3fU+WmZwUoB\nbCWZRYMvjuoX+/FmTv71Bty9mIW5MeI3klY62uYkXFs2wTpqWpULhNu4MdZYG+qa\nc6L9k7iaI/Hvv5m5iG+dT76PD19WWUPE25IyDG49YZwVrn26NOsMu/XdH4fhK1ts\nLZo9oUnUZPzNQtM6DOnW1kU/gCQXHGz0V8u9E+6PwlKUC70dHcIoMWWAFlknxyft\nExP/pD3ITWoRt4CMl6VwCmrO60+BcZVFThG7L7NtT4vJPl3kW/QmIRemEiT26Nlb\n1sV+uuM92MQ9uixbctoHJjdzO+EeLlmN4YY2P01Tn2kRafs3xp/YHiB+jHhegCAp\nxgwgvUqzaXsOI6wE7t9c4Livp5vIVyGP7BNUKi7TBjXkR+z40113QKgRM+Yt+ar4\nDAxWWQ/OOXO/fY+4NEtrc0a5vYk8NXDGuUM5lAwhc4uobhIF7QM0A/6d37DM9ZcX\nwgmX6YQw15dBB0J2LMr1bFA3bH/mz+ONdNRU6DroJOqnSRBvsfPwPUDJJPV3eP/U\nH2v0x1y//ua9A/g9gte+EHlaPWEHt/S7elzMxFWo4Yni3ir3AqU=\n=LSjz\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwILyhE4bW8TKiA1WlkPr0zdjTsDMBZWvUHf+uQqs4wwCZCP/wEGABLs71/kgv\nU9XHWjmUo+sI8QRd2v8Q8Aj7dHKOLvB/AgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEH70Xls8yTyVq4JiBkcn3III8QRd2v8P\n8AibKmvRNA5jxACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEMoYLFd2Hsqwv7Gpa18JJCUI8CD7aCKkCZj2qq8mzRHp\n/N+Gm0YDuH2tdDT/HxWgQgmSEwjxBF3a/xDwCAwkxEo6hkybAIPf4w0u+QyOLCto\ndHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDUwrzN\neTCCyceA4hOtPlAACPAgrSiOiuKuIe3frY2rFil17cInPXlRtM6dCtU7lkRQoCAI\n8QRd2v8Q8AjBJbdl8LcFaACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b61fd8109e1f6e504ca45815e54fe677bdff500c\nparent 1388de83900eaced906d369fe9e8887ae74b2dcf\nauthor Jon Atack <jon@atack.com> 1572270881 +0100\ncommitter Jon Atack <jon@atack.com> 1574633230 +0100\n\ntest: add listlabels test in wallet_labels.py\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3539ac6d772fc646b5f184fa1efe77bf632f6a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1388de83900eaced906d369fe9e8887ae74b2dcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1388de83900eaced906d369fe9e8887ae74b2dcf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1388de83900eaced906d369fe9e8887ae74b2dcf"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2af8d2abacfce50e31f480d5b659e7a2d02302e9",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f3539ac6d772fc646b5f184fa1efe77bf632f6a/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f3539ac6d772fc646b5f184fa1efe77bf632f6a/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
        "patch": "@@ -152,14 +152,13 @@ def add_receive_address(self, address):\n     def verify(self, node):\n         if self.receive_address is not None:\n             assert self.receive_address in self.addresses\n-\n         for address in self.addresses:\n             assert_equal(\n                 node.getaddressinfo(address)['labels'][0],\n                 {\"name\": self.name,\n                  \"purpose\": self.purpose[address]})\n             assert_equal(node.getaddressinfo(address)['label'], self.name)\n-\n+        assert self.name in node.listlabels()\n         assert_equal(\n             node.getaddressesbylabel(self.name),\n             {address: {\"purpose\": self.purpose[address]} for address in self.addresses})"
      }
    ]
  },
  {
    "sha": "33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2Y1ZmMzMmU1YmZiZTFlODljNGQyMGNlNDU1YmNjNmRjMTk0MTUx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-10-28T10:11:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2019-11-24T22:08:38Z"
      },
      "message": "test: add rpc getaddressinfo labels test coverage",
      "tree": {
        "sha": "541a9905f6291d56b1227e21827ebaaa100ca15a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/541a9905f6291d56b1227e21827ebaaa100ca15a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl3a/2sACgkQT1chs9Dj\nkh2yxg/+MMC0FVOUFm7Zx5bl0Dg+oJDF1Z96wXrwWUs8aPaCJ+8H13OSKsG3OCKw\nHlxNoy+a+Zi47Ans9DAg8cJhIMQS0em6MXxJBP1GUmKOs7azc4cNZNtqUMN2nRlV\nIiodj8zhjvpXXgOYB6Bu1wKZN65Me5d0TwYjbeC1H5frFZPNNMZoL8LY9MJpNEu6\nS5E9nu1GNpAcrz2q+HPLRMsAAzfJNGbV4BeW1c+mZe5hZY7xPou5Q3CCiitjQGYc\nNYuU05VpOO7/YRTOaTw+qKRT5Ygj129IVrxkJKHqAnkexL/xweVd24mtHqvwQIqd\nVWSRQpYQjd00z5nscb3tO8rnTU0e4VNnI4CFr1CjJ6fsLvE0HRvpfIdM7t4RGkA+\nwqF0AGwxSmdeo7icpeGcCosR+xgYf5EcDMBB3Ij1Wq+Tbsy+1/1faYNFs1gMi4p2\n3BcX+mgIWd9fXyIp2HUl/r+//AZyoFPLVp9FntAYP7ot6BfRuCgI6YxUmxgtimof\nCVegHhIcgyc2XLqizNkN0UYkkA60Dr03Nm5I767cWi6TxAyBMwHL3odxSFEotYwD\nw15K1ONnkrF4OYXDJGEXaCSGgZPsTOfWVJqDspdaY6POzcNIIO6YJNQ1YaAGzv3o\nqGVuET23ZhKWjVFfZnLFfk/8bzMwy+YKhwp+TKbOsrQ7lCW7VYo=\n=zeas\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIDXrH9kQ2nruwZQ91qImZUepXH9URBx7QgDHwx4lv6lACP/wED9TwKiOVghH\nS8wfIusKMT0I8QRd2v9s8AhIx+vls/JLvgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEFeiuohl59qpuqtxHK7XDdEI8QRd2v9t\n8AgIlfdAjVypJgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wELmS7ys//wYTa3HesmpsXecI8QRd2v9t8AhtkxCmlD86\nZACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDgXB5t2GqdesmREsx6NlpBCPEEXdr/bfAIK+Xz/6V5FjAAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 541a9905f6291d56b1227e21827ebaaa100ca15a\nparent 0f3539ac6d772fc646b5f184fa1efe77bf632f6a\nauthor Jon Atack <jon@atack.com> 1572257480 +0100\ncommitter Jon Atack <jon@atack.com> 1574633318 +0100\n\ntest: add rpc getaddressinfo labels test coverage\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f3539ac6d772fc646b5f184fa1efe77bf632f6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f3539ac6d772fc646b5f184fa1efe77bf632f6a"
      }
    ],
    "stats": {
      "total": 80,
      "additions": 58,
      "deletions": 22
    },
    "files": [
      {
        "sha": "3d81a61120270b4c4e6422d354579a7d10075100",
        "filename": "test/functional/test_framework/wallet_util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/test_framework/wallet_util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/test_framework/wallet_util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet_util.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -88,6 +88,11 @@ def get_multisig(node):\n                     p2sh_p2wsh_script=CScript([OP_HASH160, witness_script, OP_EQUAL]).hex(),\n                     p2sh_p2wsh_addr=script_to_p2sh_p2wsh(script_code))\n \n+def labels_value(name=\"\", purpose=\"receive\"):\n+    \"\"\"Generate a getaddressinfo labels array from a name and purpose.\n+    Often used as the value of a labels kwarg for calling test_address below.\"\"\"\n+    return [{\"name\": name, \"purpose\": purpose}]\n+\n def test_address(node, address, **kwargs):\n     \"\"\"Get address info for `address` and test whether the returned values are as expected.\"\"\"\n     addr_info = node.getaddressinfo(address)"
      },
      {
        "sha": "130fa3cfaf78dac939055a9a4eac04907eee1f8b",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -15,6 +15,10 @@\n     connect_nodes,\n     wait_until,\n )\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class WalletTest(BitcoinTestFramework):\n@@ -390,7 +394,7 @@ def run_test(self):\n             for label in [u'\u0440\u044b\u0431\u0430', u'\ud834\udd61']:\n                 addr = self.nodes[0].getnewaddress()\n                 self.nodes[0].setlabel(addr, label)\n-                assert_equal(self.nodes[0].getaddressinfo(addr)['label'], label)\n+                test_address(self.nodes[0], addr, label=label, labels=labels_value(name=label))\n                 assert label in self.nodes[0].listlabels()\n         self.nodes[0].rpc.ensure_ascii = True  # restore to default\n "
      },
      {
        "sha": "e356fce46944da2da83e9b07891d51f4693f01aa",
        "filename": "test/functional/wallet_import_with_label.py",
        "status": "modified",
        "additions": 22,
        "deletions": 9,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_import_with_label.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_import_with_label.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_with_label.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -11,7 +11,10 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.wallet_util import test_address\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class ImportWithLabel(BitcoinTestFramework):\n@@ -36,7 +39,8 @@ def run_test(self):\n                      address,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=label)\n+                     label=label,\n+                     labels=labels_value(name=label))\n \n         self.log.info(\n             \"Import the watch-only address's private key without a \"\n@@ -47,7 +51,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address,\n-                     label=label)\n+                     label=label,\n+                     labels=labels_value(name=label))\n \n         self.log.info(\n             \"Test importaddress without label and importprivkey with label.\"\n@@ -59,7 +64,8 @@ def run_test(self):\n                      address2,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=\"\")\n+                     label=\"\",\n+                     labels=labels_value())\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -71,7 +77,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address2,\n-                     label=label2)\n+                     label=label2,\n+                     labels=labels_value(name=label2))\n \n         self.log.info(\"Test importaddress with label and importprivkey with label.\")\n         self.log.info(\"Import a watch-only address with a label.\")\n@@ -82,7 +89,8 @@ def run_test(self):\n                      address3,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=label3_addr)\n+                     label=label3_addr,\n+                     labels=labels_value(name=label3_addr))\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -94,7 +102,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address3,\n-                     label=label3_priv)\n+                     label=label3_priv,\n+                     labels=labels_value(name=label3_priv))\n \n         self.log.info(\n             \"Test importprivkey won't label new dests with the same \"\n@@ -109,6 +118,7 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=label4_addr,\n+                     labels=labels_value(name=label4_addr),\n                      embedded=None)\n \n         self.log.info(\n@@ -123,10 +133,13 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      embedded_addr,\n-                     label=\"\")\n+                     label=\"\",\n+                     labels=labels_value())\n+\n         test_address(self.nodes[1],\n                      address4,\n-                     label=label4_addr)\n+                     label=label4_addr,\n+                     labels=labels_value(name=label4_addr))\n \n         self.stop_nodes()\n "
      },
      {
        "sha": "5febac5998b75fa5dc04c21076941c57748968c6",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -29,6 +29,7 @@\n from test_framework.wallet_util import (\n     get_key,\n     get_multisig,\n+    labels_value,\n     test_address,\n )\n \n@@ -121,7 +122,7 @@ def run_test(self):\n         self.test_importmulti({\"scriptPubKey\": key.p2pkh_script,\n                                \"timestamp\": \"now\",\n                                \"internal\": True,\n-                               \"label\": \"Example label\"},\n+                               \"label\": \"Unsuccessful labelling for internal addresses\"},\n                               success=False,\n                               error_code=-8,\n                               error_message='Internal addresses should not have a label')\n@@ -550,25 +551,27 @@ def run_test(self):\n         self.log.info(\"Should not import a p2sh-p2wpkh address from descriptor without checksum and private key\")\n         self.test_importmulti({\"desc\": \"sh(wpkh(\" + key.pubkey + \"))\",\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\",\n+                               \"label\": \"Unsuccessful P2SH-P2WPKH descriptor import\",\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n                               error_message=\"Missing checksum\")\n \n         # Test importing of a P2SH-P2WPKH address via descriptor + private key\n         key = get_key(self.nodes[0])\n+        p2sh_p2wpkh_label = \"Successful P2SH-P2WPKH descriptor import\"\n         self.log.info(\"Should import a p2sh-p2wpkh address from descriptor and private key\")\n         self.test_importmulti({\"desc\": descsum_create(\"sh(wpkh(\" + key.pubkey + \"))\"),\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\",\n+                               \"label\": p2sh_p2wpkh_label,\n                                \"keys\": [key.privkey]},\n                               success=True)\n         test_address(self.nodes[1],\n                      key.p2sh_p2wpkh_addr,\n                      solvable=True,\n                      ismine=True,\n-                     label=\"Descriptor import test\")\n+                     label=p2sh_p2wpkh_label,\n+                     labels=labels_value(name=p2sh_p2wpkh_label))\n \n         # Test ranged descriptor fails if range is not specified\n         xpriv = \"tprv8ZgxMBicQKsPeuVhWwi6wuMQGfPKi9Li5GtX35jVNknACgqe3CY4g5xgkfDDJcmtF7o1QnxWDRYw4H5P26PXq7sbcUkEqeR4fg3Kxp2tigg\"\n@@ -628,17 +631,19 @@ def run_test(self):\n \n         # Test importing of a P2PKH address via descriptor\n         key = get_key(self.nodes[0])\n+        p2pkh_label = \"P2PKH descriptor import\"\n         self.log.info(\"Should import a p2pkh address from descriptor\")\n         self.test_importmulti({\"desc\": descsum_create(\"pkh(\" + key.pubkey + \")\"),\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\"},\n+                               \"label\": p2pkh_label},\n                               True,\n                               warnings=[\"Some private keys are missing, outputs will be considered watchonly. If this is intentional, specify the watchonly flag.\"])\n         test_address(self.nodes[1],\n                      key.p2pkh_addr,\n                      solvable=True,\n                      ismine=False,\n-                     label=\"Descriptor import test\")\n+                     label=p2pkh_label,\n+                     labels=labels_value(name=p2pkh_label))\n \n         # Test import fails if both desc and scriptPubKey are provided\n         key = get_key(self.nodes[0])"
      },
      {
        "sha": "27371d43bb4a15512177b2e37125d41d101fe597",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 10,
        "deletions": 5,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -13,6 +13,10 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n class WalletLabelsTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -153,11 +157,12 @@ def verify(self, node):\n         if self.receive_address is not None:\n             assert self.receive_address in self.addresses\n         for address in self.addresses:\n-            assert_equal(\n-                node.getaddressinfo(address)['labels'][0],\n-                {\"name\": self.name,\n-                 \"purpose\": self.purpose[address]})\n-            assert_equal(node.getaddressinfo(address)['label'], self.name)\n+            test_address(\n+                node,\n+                address,\n+                label=self.name,\n+                labels=labels_value(name=self.name, purpose=self.purpose[address])\n+             )\n         assert self.name in node.listlabels()\n         assert_equal(\n             node.getaddressesbylabel(self.name),"
      },
      {
        "sha": "afd473306d52aea19b4212039a9d4e75798edf41",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "patch": "@@ -11,6 +11,10 @@\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class ReceivedByTest(BitcoinTestFramework):\n@@ -127,7 +131,7 @@ def run_test(self):\n         # set pre-state\n         label = ''\n         address = self.nodes[1].getnewaddress()\n-        assert_equal(self.nodes[1].getaddressinfo(address)['label'], label)\n+        test_address(self.nodes[1], address, label=label, labels=labels_value(name=label))\n         received_by_label_json = [r for r in self.nodes[1].listreceivedbylabel() if r[\"label\"] == label][0]\n         balance_by_label = self.nodes[1].getreceivedbylabel(label)\n "
      }
    ]
  },
  {
    "sha": "746318179884055910df0d556fd9f79da18ce38d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDYzMTgxNzk4ODQwNTU5MTBkZjBkNTU2ZmQ5Zjc5ZGExOGNlMzhk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-24T23:40:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-24T23:42:54Z"
      },
      "message": "Merge #17538: build: Bump minimum libc to 2.17 for release binaries\n\n8f15a317602727d24f60d0bbf43f851b33df3228 doc: add glibc 2.17 requirement to release-notes (fanquake)\n16a7be1663b02ddefa1e4f0309be49b725ffb388 build: Bump minimum versions in symbol checker (Wladimir J. van der Laan)\nb77d5ad59fb9f3f26d919ee6c33ae732382de504 build: Disallow dynamic linking against c++ library (Wladimir J. van der Laan)\n\nPull request description:\n\n  Closes: #17525. Taken over from #17531.\n\n  Debian 8 (Jessie) has:\n  - g++ version 4.9.2\n  - libc version 2.19\n\n  CentOS 7 has:\n  - g++ version 4.8.5\n  - libc version 2.17\n\n  Ubuntu 16.04.4 (Xenial, oldest supported Ubuntu) has:\n  - g++ version 5.3.1\n  - libc version 2.23.0\n\n  Taking the minimum of these as our target. According to [GNU ABI document](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n\n  - GCC 4.8.5: GCC_4.8.0\n  - (glibc)    GLIBC_2_17\n\n  This also contains a (long needed) commit to disallow dynamic linking to stdc++, as our releases statically link against that.\n\nACKs for top commit:\n  laanwj:\n    re-ACK 8f15a317602727d24f60d0bbf43f851b33df3228\n\nTree-SHA512: a3cc92aa1c5de253b1531f4b854d6f5f4a15d614ba6290d9db293542a96994b55c4a8e33e03b601bae16eb65529630b4f94b48b010e0b66b7dc9ff0acf945107",
      "tree": {
        "sha": "ba3171a7fb86c62f8e59746d00bbdb4ee0c63b8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba3171a7fb86c62f8e59746d00bbdb4ee0c63b8d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/746318179884055910df0d556fd9f79da18ce38d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3bFX4ACgkQ0upIUOdS\niyU+ZxAAryNiMJoCYlkFwIuy8AmW2wMn1QYATzcjztCI1D2J8DsoGAmOkUVWin0w\nJTi5FcHx7mnwh03VQ+RBxsstRjLWpe0NnydppMU924vDb61qyYGuaVI3KUjJajIJ\no+nwrfs5P6NhqZue7MD2mEkz8bCJCZvT3fEXN1pJ0cp2wTTErwu1B5LFEfziZYkC\nsDypLvu0y58ebuzceSyazkadffHrfhg2scFiszfJQdgWCtItkbh3Zxi/uhSu0Qt1\nbAy3eNqfRqQzQwVgqEpRBdwbbKBBrnpui9Ie2JOsVHvldqja2uHt2+LlEuZbjfbX\nLGONKM3m9u+VKU72dsd+sOe1ebl0gRpufEEVHYyrRJIFawhmDi+zr8hO2k4cpWn2\nnLe+yxSDyNrt6BDJkIfpXAtbAZTjoIqs6TsgvT9Vvy2rebjFFAIDAFHb0oS7DJSm\nFYCuPJA0yYxF9z+AlBcdwM57pjmOzWpSs/wAsuEUi7eQTUiVs8IyQkeDUtTsXmSV\nz6IkKu1pqW5B3Dt0nXHZY7vHeafU0EuV0Ol8dqlNTMIkT5d6I+pdXBV9GLQLj2LY\n7NHaOKtStoOvOfvfFWlOMTWWprHeyj1yYtkGAs2s9KeHeDYmKcUvikYQAPaa+f1s\nTT9q4nILlpDE3uqw7xwUh4p245tl9gP9AYuR/EFl07xiKGDISis=\n=VN8V\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHrZaVrlWxeAc8XDwp25UsR2zjNh9kACfHJq0JXz844LCP/wEBX2HkB6+c8g\n4wZmjUnvbzEI8CBBjUUJN6qIXZBWNtGoAi6T81UGKX0d8d3ZnY771eDnQgjxBF3b\nFYHwCCdE1tiQExO6AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQfIPABfYkNCO9rdbtmVui6QjwIGUakNENDSYASgsz\nGNUH4dn8uBOCgEf/yjg5IkMbSSMnCPEEXdsVgfAICqMBhGZtJxcAg9/jDS75DI4s\nK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmf/8BC7\nH5WPpY/GY+8IfgBaM60iCPEEXdsVgPAIfyzg7InBtqsAg9/jDS75DI4uLWh0dHBz\nOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ8x0O2+XK\ngAMNdEo4clYNNQjxBF3bFYHwCIV6gakx2b1dAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ba3171a7fb86c62f8e59746d00bbdb4ee0c63b8d\nparent 239d199667888e5d60309f15a38eed4d3afe56c4\nparent 8f15a317602727d24f60d0bbf43f851b33df3228\nauthor MarcoFalke <falke.marco@gmail.com> 1574638827 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574638974 -0500\n\nMerge #17538: build: Bump minimum libc to 2.17 for release binaries\n\n8f15a317602727d24f60d0bbf43f851b33df3228 doc: add glibc 2.17 requirement to release-notes (fanquake)\n16a7be1663b02ddefa1e4f0309be49b725ffb388 build: Bump minimum versions in symbol checker (Wladimir J. van der Laan)\nb77d5ad59fb9f3f26d919ee6c33ae732382de504 build: Disallow dynamic linking against c++ library (Wladimir J. van der Laan)\n\nPull request description:\n\n  Closes: #17525. Taken over from #17531.\n\n  Debian 8 (Jessie) has:\n  - g++ version 4.9.2\n  - libc version 2.19\n\n  CentOS 7 has:\n  - g++ version 4.8.5\n  - libc version 2.17\n\n  Ubuntu 16.04.4 (Xenial, oldest supported Ubuntu) has:\n  - g++ version 5.3.1\n  - libc version 2.23.0\n\n  Taking the minimum of these as our target. According to [GNU ABI document](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n\n  - GCC 4.8.5: GCC_4.8.0\n  - (glibc)    GLIBC_2_17\n\n  This also contains a (long needed) commit to disallow dynamic linking to stdc++, as our releases statically link against that.\n\nACKs for top commit:\n  laanwj:\n    re-ACK 8f15a317602727d24f60d0bbf43f851b33df3228\n\nTree-SHA512: a3cc92aa1c5de253b1531f4b854d6f5f4a15d614ba6290d9db293542a96994b55c4a8e33e03b601bae16eb65529630b4f94b48b010e0b66b7dc9ff0acf945107\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/746318179884055910df0d556fd9f79da18ce38d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/746318179884055910df0d556fd9f79da18ce38d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/746318179884055910df0d556fd9f79da18ce38d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "239d199667888e5d60309f15a38eed4d3afe56c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/239d199667888e5d60309f15a38eed4d3afe56c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/239d199667888e5d60309f15a38eed4d3afe56c4"
      },
      {
        "sha": "8f15a317602727d24f60d0bbf43f851b33df3228",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f15a317602727d24f60d0bbf43f851b33df3228",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f15a317602727d24f60d0bbf43f851b33df3228"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 22,
      "deletions": 18
    },
    "files": [
      {
        "sha": "cb255c9426eeb3b5ae9d538ad28748e9a57284f5",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/746318179884055910df0d556fd9f79da18ce38d/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/746318179884055910df0d556fd9f79da18ce38d/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=746318179884055910df0d556fd9f79da18ce38d",
        "patch": "@@ -4,8 +4,8 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n+allowed gcc and glibc version symbols. This makes sure they are still compatible\n+with the minimum supported Linux distribution versions.\n \n Example usage:\n \n@@ -16,30 +16,30 @@\n import sys\n import os\n \n-# Debian 6.0.9 (Squeeze) has:\n+# Debian 8 (Jessie) EOL: 2020. https://wiki.debian.org/DebianReleases#Production_Releases\n #\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n+# - g++ version 4.9.2 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=g%2B%2B)\n+# - libc version 2.19 (https://packages.debian.org/search?suite=jessie&arch=any&searchon=names&keywords=libc6)\n #\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n+# Ubuntu 16.04 (Xenial) EOL: 2024. https://wiki.ubuntu.com/Releases\n #\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n+# - g++ version 5.3.1 (https://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=xenial&section=all)\n+# - libc version 2.23.0 (https://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=xenial&section=all)\n+#\n+# CentOS 7 EOL: 2024. https://wiki.centos.org/FAQ/General\n+#\n+# - g++ version 4.8.5 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n+# - libc version 2.17 (http://mirror.centos.org/centos/7/os/x86_64/Packages/)\n #\n # Taking the minimum of these as our target.\n #\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n+# According to GNU ABI document (https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n+#   GCC 4.8.5: GCC_4.8.0\n+#   (glibc)    GLIBC_2_17\n #\n MAX_VERSIONS = {\n-'GCC':       (4,4,0),\n-'CXXABI':    (1,3,3),\n-'GLIBCXX':   (3,4,13),\n-'GLIBC':     (2,11),\n+'GCC':       (4,8,0),\n+'GLIBC':     (2,17),\n 'LIBATOMIC': (1,0)\n }\n # See here for a description of _IO_stdin_used:"
      },
      {
        "sha": "d6bd8e6ed45f841e5a124ff79d4acaf0a91c1fe1",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/746318179884055910df0d556fd9f79da18ce38d/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/746318179884055910df0d556fd9f79da18ce38d/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=746318179884055910df0d556fd9f79da18ce38d",
        "patch": "@@ -68,6 +68,10 @@ Build System\n - OpenSSL is no longer used by Bitcoin Core. The last usage of the library\n was removed in #17265.\n \n+- glibc 2.17 or greater is now required to run the release binaries. This\n+retains compatibility with RHEL 7, CentOS 7, Debian 8 and Ubuntu 14.04 LTS.\n+Further details can be found in #17538.\n+\n New RPCs\n --------\n "
      }
    ]
  },
  {
    "sha": "e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNmYxNjdiZmRmYzA1NmNlZDIwNjRjN2UyMWY4YWJiZmY2ZTNmZjE5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T00:07:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T00:07:56Z"
      },
      "message": "Merge #17569: build: Allow export of environ symbols and work around rv64 toolchain issue\n\neafd2593674b6890418a50eadf69425071b824e4 build: Add NX workaround for RV64 (Wladimir J. van der Laan)\nf6e42256fe8900ed90f9644906b77f97e1600952 build: Allow export of environ symbols (Wladimir J. van der Laan)\n\nPull request description:\n\n  This export was introduced in #17270 which added\n  ```\n  //! Necessary on some platforms\n  extern char** environ;\n  ```\n  This should (finally) make the gitian build pass again (fix issue #17525.).\n\n  Built on top of #17538 which should be merged first.\n\nTop commit has no ACKs.\n\nTree-SHA512: 5c2054d52d0957aec3dc945b76d8e219187d22dc03889e7a88fb76049bf8e4a3e9f4da00dd1e9dd0351211f8e70d1a1b8ad7244f0348dab698e9d14b9d0c0bd4",
      "tree": {
        "sha": "9fce42247a5b46621e925fe7a1c60da41bef030e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9fce42247a5b46621e925fe7a1c60da41bef030e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3bG1wACgkQ0upIUOdS\niyXeYg//aMVBctkzIb/Hu9cCbXsnlaf3/7fqAantQ8zIvGyXqu/Q+/E2FEglRkjB\nwpWJUCQgfg+0RQkWyY701WwnIo88lhSxUlUiz/BbIMeWibsAyjGx2dKSrFFfw5uE\npTgpLUhEWjX2rfsE3Wlr14kVX1x+jVhbGfy8b+Jc7IGuKTSKgBQSgiEPoBaG0VdK\naXhG1OQN7xjj+b6Pe3DhM790IA336+mZkxSOMi/dxnzQvJb705BZLs6tcmHpkA3x\nI1Zama6jqUEifUhlswkLAt3hdMaFKQCoZibtTOW87bSKxklURDJNr57kJUEo7vTN\nWnEJSxZy8QaF4pelO1z/aWcpSL/XHRjqDFz3OC5woPyQ7RqnSBgtzrhxR4HfEDSc\nt8/wpZJ8m3Il0L3aeeRWY838I4g0ishKSUeo5gq2nCpJBToNk39MxSzWNiEKn2EV\ntEUHd0VI0EAwaKF4vni3JBru395em4TTEzyfLRoWs/aYfY3pnrQC5D4kv7JVtmOL\nF/tmJWW24rpqdZAJG/lYayXT0WPQRDAvgs7DWk692f5wlM47o3CvyTA+eiyvht5B\n75JZyTkzbr93alksMyRQrSHV0bvseVUKaLMfiwZfhdBaGqyhFt98cmJeEkYPyR6O\nbALinYzFJXYwHdAIdtUXvEhw7Us/Dvn/0REO4yygDQTOxD7j3a4=\n=82wc\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOJFDw2EBaemx2k5x2PaBtOrptN8A293q+OhmyZnVoW/CP/wEBmFZcvXd+JS\nspjAGtRdYoII8QRd2xtf8Ajvj2p+PJoLowCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQLgog5TO6adhvioVC\nccv32QjxBF3bG1/wCJvOgVD0bARhAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQlWOYwWK528iJ7Ux/oBUDZgjx\nBF3bG1/wCIYLi+zA54PrAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDQzxg1mn2ESY67avvuWfh4CPEEXdsbX/AI8RA5\nt5/PGn4Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 9fce42247a5b46621e925fe7a1c60da41bef030e\nparent 746318179884055910df0d556fd9f79da18ce38d\nparent eafd2593674b6890418a50eadf69425071b824e4\nauthor MarcoFalke <falke.marco@gmail.com> 1574640441 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574640476 -0500\n\nMerge #17569: build: Allow export of environ symbols and work around rv64 toolchain issue\n\neafd2593674b6890418a50eadf69425071b824e4 build: Add NX workaround for RV64 (Wladimir J. van der Laan)\nf6e42256fe8900ed90f9644906b77f97e1600952 build: Allow export of environ symbols (Wladimir J. van der Laan)\n\nPull request description:\n\n  This export was introduced in #17270 which added\n  ```\n  //! Necessary on some platforms\n  extern char** environ;\n  ```\n  This should (finally) make the gitian build pass again (fix issue #17525.).\n\n  Built on top of #17538 which should be merged first.\n\nTop commit has no ACKs.\n\nTree-SHA512: 5c2054d52d0957aec3dc945b76d8e219187d22dc03889e7a88fb76049bf8e4a3e9f4da00dd1e9dd0351211f8e70d1a1b8ad7244f0348dab698e9d14b9d0c0bd4\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "746318179884055910df0d556fd9f79da18ce38d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/746318179884055910df0d556fd9f79da18ce38d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/746318179884055910df0d556fd9f79da18ce38d"
      },
      {
        "sha": "eafd2593674b6890418a50eadf69425071b824e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eafd2593674b6890418a50eadf69425071b824e4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eafd2593674b6890418a50eadf69425071b824e4"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 10,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0c59ab62396c7f6310f8b53561a8ed8daffba3ab",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "patch": "@@ -47,7 +47,8 @@\n \n # Ignore symbols that are exported as part of every executable\n IGNORE_EXPORTS = {\n-'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr'\n+'_edata', '_end', '__end__', '_init', '__bss_start', '__bss_start__', '_bss_end__', '__bss_end__', '_fini', '_IO_stdin_used', 'stdin', 'stdout', 'stderr',\n+'environ', '_environ', '__environ',\n }\n READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')"
      },
      {
        "sha": "7016ff861b991ea93333ea437a0b7e49324ed222",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "patch": "@@ -46,7 +46,7 @@ script: |\n   FAKETIME_PROGS=\"date ar ranlib nm\"\n   HOST_CFLAGS=\"-O2 -g\"\n   HOST_CXXFLAGS=\"-O2 -g\"\n-  HOST_LDFLAGS=-static-libstdc++\n+  HOST_LDFLAGS_BASE=\"-static-libstdc++\"\n \n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n@@ -160,6 +160,13 @@ script: |\n   # Extract the release tarball into a dir for each host and build\n   for i in ${HOSTS}; do\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n+    if [ \"${i}\" = \"riscv64-linux-gnu\" ]; then\n+      # Workaround for https://bugs.launchpad.net/ubuntu/+source/gcc-8-cross-ports/+bug/1853740\n+      # TODO: remove this when no longer needed\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE} -Wl,-z,noexecstack\"\n+    else\n+      HOST_LDFLAGS=\"${HOST_LDFLAGS_BASE}\"\n+    fi\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n     INSTALLPATH=`pwd`/installed/${DISTNAME}"
      }
    ]
  },
  {
    "sha": "2fa65e0de94f01d502e8ace89be3c5dc963dd764",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmE2NWUwZGU5NGYwMWQ1MDJlOGFjZTg5YmUzYzVkYzk2M2RkNzY0",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-11-25T12:12:51Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-11-25T12:34:47Z"
      },
      "message": "Add ci script to install on s390x",
      "tree": {
        "sha": "db38e5b4684d45ccc61e3a30d3e22dbdd495fd02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/db38e5b4684d45ccc61e3a30d3e22dbdd495fd02"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fa65e0de94f01d502e8ace89be3c5dc963dd764",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl3bymgZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf65tEADRIHnWe0B/wVzUESkqfp3o\nB1JNC7U4c+Mv3Bx90a1qzVC9cOo62iwomtiBHbHRhlKzsiEwP0+6b9EQ/HLAfTfS\n1hSTsUJZ+wJqIh7SZ0Q/zqWgVYXDi9J1UD63/aPUqBLUKIfwKr9C4KHB+HiNCJRV\nPD3caqxa4iw6WO7yzdYi1LWhgk1Ik5PNZJfiapBn0oegP2az7DQ0Stv7h33Q6uE7\n4Z7XkZT2srx9+5hLMuangkOIXPinWYS1buHUPMQIJNwADVmZVj+aMKHACby1I3Ez\n88JWWOJGcfjeRdV4abcZic5XcbKP1KKmphNQBKPEA8TZPzYZUzfUKUdsfDeEH/o2\nWouw6zfIwI9UuQdMbrDQQNHtksXFO8LJDveFD3ks5BaR5tW9le06YFWFfNWfHRpD\nEG9FFzZiCsQ1RcYskbxx/GLKZKfgHRA8d89jNYiJd+iTXG+BpHpZ3YiVkrdRmRTn\nZDPXzhhgqAhYvQkIJce6sjdaTF1oLEtBr7CAd/x2Cj+JpEI4eiZC902gN3Lt2mEe\ntgODPIPoXBfhwXoYVUB2OSetvVu/8t4/+ewFlUSygCSUhAXas1YIkldn0wZXnFqr\nCYaJ5dVLmNhcCbibUD5YUzL5Xq48vTPmnqptHMN7XhVXBNDcfmRcxxBT85hy3ZAb\nNDU/Z1h+VOXQvIM/QuvmaA==\n=UUuE\n-----END PGP SIGNATURE-----",
        "payload": "tree db38e5b4684d45ccc61e3a30d3e22dbdd495fd02\nparent e6f167bfdfc056ced2064c7e21f8abbff6e3ff19\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1574683971 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1574685287 +0200\n\nAdd ci script to install on s390x\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa65e0de94f01d502e8ace89be3c5dc963dd764",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa65e0de94f01d502e8ace89be3c5dc963dd764",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa65e0de94f01d502e8ace89be3c5dc963dd764/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b41d44c61aefb7015ef079f190798ea9d21b356f",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fa65e0de94f01d502e8ace89be3c5dc963dd764/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fa65e0de94f01d502e8ace89be3c5dc963dd764/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=2fa65e0de94f01d502e8ace89be3c5dc963dd764",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-unknown-linux-gnu\n+export DOCKER_NAME_TAG=s390x/ubuntu:18.04\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\"\n+\n+lscpu"
      }
    ]
  },
  {
    "sha": "da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTFmMTUzZTVlMjYwZjE3NDRlZTFiZjRmMjRjYTNhNzRmZmVhNDY1",
    "commit": {
      "author": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-11-25T12:13:11Z"
      },
      "committer": {
        "name": "Elichai Turkel",
        "email": "elichai.turkel@gmail.com",
        "date": "2019-11-25T12:34:49Z"
      },
      "message": "Add s390x tests to travis",
      "tree": {
        "sha": "8da1cd4c4aee2eb655e566e54450d155d94828b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8da1cd4c4aee2eb655e566e54450d155d94828b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl3bymkZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf8JBD/9/oCvz8RKzVg0rs/SqQLDk\n7QzqJnRXow5hBIz7tpGJWxbcnjdycz4slUXoGnOFptZkk9hH8SXmsa7mCnYfWvW/\nN5Hc9VZiVBzXClyzO1PLtMKOSVlerffyhWDUmU6tjugot+WmtlY67bH+AxQlBNA+\nsskrOicidJBlQxVtzqlSaSTnvHXCrSGU0c4TG/DN3Gc9uo+6/BOQXmn9v4dFu3wG\ncs1ADHgSq6dsOtldhRbu/Zx1omseLxwSQ5OopiYIlEybYS2R3pxqCcvuLIdsMMLJ\nxRwfPIgGjP7GXOjIGD1rKIbWZkVz2WnoDZlAwQkmf6ODgCI4SX/Xl89wqdo9UYHA\nlDvvRIcNRsk0GBao1qOig/gYpOfMzkNh4uJWtu3wBXFS4r/lqDZdzVL7ktIDDqFv\nqopHqQCzE7c43bO3ErapyGPUXgVkY3ulIEfr9Egt1qu8hznP0HfvatWII54FxKkw\nDduQ9cwcuqgP+UC2K8RjOiBzWjL1PkvGum+GEGzAG7uSaXZErV9bdpeNvu+Klr6f\nwCz1+qLVdRKAUwj2HiWbL0fJiBylNl98yUY6GeqEnTrp0o7leYlU/Bvv4typx30u\nv1PjxP9/jB28sG/QzA2xnvTqikkMQZSdFOM3lCPykis7r4kNkufMWr/MLlcJRwD4\nysxdCoTNazheIBpmRukgGQ==\n=xOIL\n-----END PGP SIGNATURE-----",
        "payload": "tree 8da1cd4c4aee2eb655e566e54450d155d94828b8\nparent 2fa65e0de94f01d502e8ace89be3c5dc963dd764\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1574683991 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1574685289 +0200\n\nAdd s390x tests to travis\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1f153e5e260f1744ee1bf4f24ca3a74ffea465/comments",
    "author": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "elichai",
      "id": 2167860,
      "node_id": "MDQ6VXNlcjIxNjc4NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elichai",
      "html_url": "https://github.com/elichai",
      "followers_url": "https://api.github.com/users/elichai/followers",
      "following_url": "https://api.github.com/users/elichai/following{/other_user}",
      "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elichai/subscriptions",
      "organizations_url": "https://api.github.com/users/elichai/orgs",
      "repos_url": "https://api.github.com/users/elichai/repos",
      "events_url": "https://api.github.com/users/elichai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elichai/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fa65e0de94f01d502e8ace89be3c5dc963dd764",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fa65e0de94f01d502e8ace89be3c5dc963dd764",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fa65e0de94f01d502e8ace89be3c5dc963dd764"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6612d5e4d111aa2d9bd22e2afeaad555c8e4dbb7",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da1f153e5e260f1744ee1bf4f24ca3a74ffea465/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da1f153e5e260f1744ee1bf4f24ca3a74ffea465/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
        "patch": "@@ -102,6 +102,12 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n         QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n+    - stage: test\n+      name: 'S390x  [GOAL: install]  [unit tests, functional tests]'\n+      arch: s390x\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\"\n+\n     - stage: test\n       name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n       env: >-"
      }
    ]
  },
  {
    "sha": "f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTNlMjc0YjZmOGFkYTQxZWJjZDNlNzQ2YjM4Yzc1NzcwNzRmNmY5",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-25T13:35:36Z"
      },
      "committer": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-25T13:35:36Z"
      },
      "message": "Appveyor install libevent[thread] vcpkg\n\nAs per #17586 the default libevent vcpkg install now has thread disabled. This PR installs libevent with the thread feature enabled.",
      "tree": {
        "sha": "b1a7ea3919733ef70fee5d37ff16601778ab45e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1a7ea3919733ef70fee5d37ff16601778ab45e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEnTzIanL4SUNC6l/RCkG9w/T6/xwFAl3b2KgACgkQCkG9w/T6\n/xxCpRAAgs3kkIRnS4CAa5lA/gaz9CqfysTvtROPTQJXH8l9soTIY1nXkjICmkjE\nb5ygV075CMSb7E4rM5+HwARWgQfXvxL+LYPtfthuOR0zaZ+X25V/7P7B+eRPXYI+\nBoWYNzAyjbpDE80QI35FX4j+zBRpxoJt+Hd8XTHWuFu66tuEJTmm+YHBvfvOL+70\ndtX5GjHpWQc1dScyF2u54pfDBZbzvcfoaCR1wViVzhKv/cT1UDOrZOgoA6cCn8S1\nhqdqiDEn42YMfkhrX9ZR9BTuadfrjwfnCUKLsZAIzd/+2ImqZoCZgVKAv0wiq86j\nPMvcWvUYFWfMgt/1MDRFfCF8TGLd3fmA6BllRpfLecvswUHfASF7z/yVrC7pETXc\nzQIBxVvBH9wxL5I1DYBshRx3oYL5Cd5c+WIxLzSdEQih5DPskU32XWXFJZkCpb68\nFy9B0hruKm6dfcBBPx8uXfbHQwqIMGA+kb99KZVaGkBwSJ0yhLRaa/6bncPB71Tw\nVzlKnY6uRzfYaHzIsnZLV++V1AXHC6+2+t5sMzgVoQWcioPuxlmxFpJhRDhIFNmx\nedQ4h679hFf2C25qOgppSR/N1b2xfZhchLDm8ijsSj2pPwxUHfCE2fcB7/isBexp\nSz0uuEFys2RBRuIXIvjeH4CTSx+lJi5tuGdHNwjdIl8nHMW81SA=\n=jC43\n-----END PGP SIGNATURE-----",
        "payload": "tree b1a7ea3919733ef70fee5d37ff16601778ab45e1\nparent e6f167bfdfc056ced2064c7e21f8abbff6e3ff19\nauthor Aaron Clauson <aaron@sipsorcery.com> 1574688936 +0000\ncommitter Aaron Clauson <aaron@sipsorcery.com> 1574688936 +0000\n\nAppveyor install libevent[thread] vcpkg\n\nAs per #17586 the default libevent vcpkg install now has thread disabled. This PR installs libevent with the thread feature enabled.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f13e274b6f8ada41ebcd3e746b38c7577074f6f9/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "27e2bbdcde9236c07c92e3752870306fe254d288",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f13e274b6f8ada41ebcd3e746b38c7577074f6f9/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f13e274b6f8ada41ebcd3e746b38c7577074f6f9/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
        "patch": "@@ -1 +1 @@\n-berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent rapidcheck zeromq double-conversion\n\\ No newline at end of file\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "89a1f7a250ef70ff2d65701564f1e24bb9280d90",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWExZjdhMjUwZWY3MGZmMmQ2NTcwMTU2NGYxZTI0YmI5MjgwZDkw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T15:19:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T15:20:00Z"
      },
      "message": "Merge #17592: Appveyor install libevent[thread] vcpkg\n\nf13e274b6f8ada41ebcd3e746b38c7577074f6f9 Appveyor install libevent[thread] vcpkg (Aaron Clauson)\n\nPull request description:\n\n  As per #17586 the default libevent vcpkg install now has thread disabled. This PR installs libevent with the thread feature enabled.\n\nTop commit has no ACKs.\n\nTree-SHA512: 5448113f0444170777400fef3582719845ca50d61d9382dfaacc55c43d477dd714456e38a3094e9b6858d93e84def11c2efa46902b52648c9f0c9362cc909147",
      "tree": {
        "sha": "b1a7ea3919733ef70fee5d37ff16601778ab45e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1a7ea3919733ef70fee5d37ff16601778ab45e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3b8SAACgkQ0upIUOdS\niyX6xQ/+JEPLazhvpvwSi0ztcJs1NA6Y3HjCoib/jJQ82460ixG1uMz8uYeaa/gw\nOYlstmsHETW1bwZKzq0ZVhoIv3CAeiHc11w+NuKmMc9eDkiyKkSO4H5tNlI94uJU\n/mBR2NUBPjkUqfSC1gYJ92lVhydTlRqeAY0gOydiarwgX+QJar09rkoDkWrYPpeO\n6fs2sllAVKVHmhKXz+Wwa1swSxEMdxXoHSNJ0R85gQhJgfP6lKSSanq4AavTVpkq\nqvYKXPVn+y9hL7MUMCFr2OnKIxIloHow+gMZvAvQwOZwSwsTnLI3alBbu3AzLoZ3\nq9ZjeY5zuNU3kZfTO1AQHWjam0sgQUyuompciYhR9OwZacdPQ5sx1kz7RtAglLHu\na5HjzAXCD59oVuUd6xDdcZuCv/8pWsnkund1FioZ3cxCajoY1onVBP7BGRxXB/6q\n9mcfmzTsf9p3uY7bhfISdSFopbJV8oVWMO6eGJxqciLCp5esa9LkZ+soCOD3GsIX\nI7UopiBY4UundOIucavpSx0E6Sbey/ISCLSkXHGZE0AO7XFwgWCG7YyvvKS9j9bW\nHMJh6yAwh0YWXUfV/j5iobE4ZW14pwbU6Vieay7ZwiXrwzS7HFrM5AclB8jbes6F\n+5vZ57VS3EBhiDWIhItBol1k/T3oiaTYAua/874wJV814iHiMbk=\n=TXMi\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPbdrlUxUrqAG54p+Il2Ez5EGKKFxWfWmW2S51zT1dgDCP/wEBJQjC9hIT+K\nwcMT4xBjaaoI8CBIVqtFM4SA9UQzWoSXpzDZmk/9hKkkls9JHp74NWt2NAjxBF3b\n8SPwCPAFRhdEP4xSAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQIXxoMhJdLMQOUz1UA8NXkAjxIOnZUTpYbFc45mtx\nYATeNAwAqDfjNircbkHzSwgO5f1OCPEEXdvxI/AISpp9Fje3ymQAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//w\nEMf1mnvEYPLGbn84/34TxYEI8QRd2/Ek8AgiWA0unRKgngCD3+MNLvkMjiwraHR0\ncHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ/UkryHgz\ns+MvXjDeFbu/PgjxINlq3ftKs0ZOgsxCz+B5+z2mzkKDDgzE3MCpIGalhYk4CPEE\nXdvxI/AI3lghhWI18NMAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b1a7ea3919733ef70fee5d37ff16601778ab45e1\nparent e6f167bfdfc056ced2064c7e21f8abbff6e3ff19\nparent f13e274b6f8ada41ebcd3e746b38c7577074f6f9\nauthor MarcoFalke <falke.marco@gmail.com> 1574695196 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574695200 -0500\n\nMerge #17592: Appveyor install libevent[thread] vcpkg\n\nf13e274b6f8ada41ebcd3e746b38c7577074f6f9 Appveyor install libevent[thread] vcpkg (Aaron Clauson)\n\nPull request description:\n\n  As per #17586 the default libevent vcpkg install now has thread disabled. This PR installs libevent with the thread feature enabled.\n\nTop commit has no ACKs.\n\nTree-SHA512: 5448113f0444170777400fef3582719845ca50d61d9382dfaacc55c43d477dd714456e38a3094e9b6858d93e84def11c2efa46902b52648c9f0c9362cc909147\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19"
      },
      {
        "sha": "f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f13e274b6f8ada41ebcd3e746b38c7577074f6f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f13e274b6f8ada41ebcd3e746b38c7577074f6f9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "27e2bbdcde9236c07c92e3752870306fe254d288",
        "filename": "build_msvc/vcpkg-packages.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89a1f7a250ef70ff2d65701564f1e24bb9280d90/build_msvc/vcpkg-packages.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89a1f7a250ef70ff2d65701564f1e24bb9280d90/build_msvc/vcpkg-packages.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build_msvc/vcpkg-packages.txt?ref=89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "patch": "@@ -1 +1 @@\n-berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent rapidcheck zeromq double-conversion\n\\ No newline at end of file\n+berkeleydb boost-filesystem boost-multi-index boost-signals2 boost-test boost-thread libevent[thread] rapidcheck zeromq double-conversion\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "41d7db0b60375533934af3e3b48043e6de944bd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MWQ3ZGIwYjYwMzc1NTMzOTM0YWYzZTNiNDgwNDNlNmRlOTQ0YmQx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-25T18:20:49Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-25T18:20:49Z"
      },
      "message": "doc: Change doxygen URL to doxygen.bitcoincore.org\n\nThe bitcoin core doxygen documentation has moved to\nhttps://doxygen.bitcoincore.org, see\nbitcoin-core/bitcoincore.org#681\n\n(the old URL still works as a redirect)",
      "tree": {
        "sha": "7b9a391059e3b4b7b27c66bf178c79d69f92f014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b9a391059e3b4b7b27c66bf178c79d69f92f014"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41d7db0b60375533934af3e3b48043e6de944bd1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d7db0b60375533934af3e3b48043e6de944bd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41d7db0b60375533934af3e3b48043e6de944bd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d7db0b60375533934af3e3b48043e6de944bd1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89a1f7a250ef70ff2d65701564f1e24bb9280d90"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4dd21c4620f802a2784059177a03461260f36ef8",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41d7db0b60375533934af3e3b48043e6de944bd1/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41d7db0b60375533934af3e3b48043e6de944bd1/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=41d7db0b60375533934af3e3b48043e6de944bd1",
        "patch": "@@ -54,7 +54,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Productivity Notes](productivity.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://doxygen.bitcoincore.org/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [JSON-RPC Interface](JSON-RPC-interface.md)"
      }
    ]
  },
  {
    "sha": "12230529e330aefc0fbd37811b8837e96bf40cad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjIzMDUyOWUzMzBhZWZjMGZiZDM3ODExYjg4MzdlOTZiZjQwY2Fk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-25T19:08:15Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-25T19:20:23Z"
      },
      "message": "Merge #17596: doc: Change doxygen URL to doxygen.bitcoincore.org\n\n41d7db0b60375533934af3e3b48043e6de944bd1 doc: Change doxygen URL to doxygen.bitcoincore.org (Wladimir J. van der Laan)\n\nPull request description:\n\n  The bitcoin core doxygen documentation has moved to https://doxygen.bitcoincore.org, see bitcoin-core/bitcoincore.org#681\n\n  (the old URL still works as a redirect)\n\nACKs for top commit:\n  Sjors:\n    ACK 41d7db0b60375533934af3e3b48043e6de944bd1 based on a short spot check.\n  fanquake:\n    ACK 41d7db0b60375533934af3e3b48043e6de944bd1 - also checked the redirect.\n\nTree-SHA512: e6fa0477b7825e3557c1b3bed8c5a37c33188ddcba43e6a19f95d86618408f7d04bbaeb64bd79181930c5af1252ca5c462e3f7a850bfffa39a8f62bcccbb4260",
      "tree": {
        "sha": "7b9a391059e3b4b7b27c66bf178c79d69f92f014",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7b9a391059e3b4b7b27c66bf178c79d69f92f014"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/12230529e330aefc0fbd37811b8837e96bf40cad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3cKXcACgkQLuufXMCV\nJsFdfg/+JXmLOq9R4eY+3XTCUaxtFuoi1DSO6hakYKvMV3+A+Wmq/4YelChmEKHK\ntmyWgta4f9xQMh6mQSqtLk8zaH/tF0DqG/d+UGTofhLKEsGGhx4lCdx5dqTObmfv\nYVSCLeW/FAdR7S5H/u8Dcw5jSdLgiLAbIzSULX1rELtcNbV9Jp4cZpC059xYs0xP\nkzESaDWywgV+K4ZAzTpX+UwKmTnf3bGT71Ei73tqxlmtLbQ3HpHUEUmRP1tO2jtS\nLCEDoM9c3qDbzKVPGHq4+v25D5/THlfKrbXrMAFcb0iRAk8Mx0DIuwsFmXwEa34q\nSyfOTD99yZPM8fK3IiRycJCOPdER7pXRcUHH7cUI7WgWurprEtF/bRNnNaIr5G4S\n6BGPvAdLs6lSdW55LB5g1whoSKFd40a2sYYn1OhAaiILZg6NRNPpqZCH99TkIpvx\nlAFMTi7MCj56p49Nve6PusuidGyL9l7kRcX7b384MrIL1Q4ONqk+5yKtyAT/AoBF\nExvIZGI14jvDS0TXBNfRywsmelNPcHDK66/EML1d4Lhu9I6EwYVOwRniZ/Ssqrhg\n/LScW5uL9I5SMQhZztPqRXH/LfURFRpgRfoS/GW0w7ck8BA4L1RYLHBflSPjkxyf\nFJoDRFvTngjNchxwqnFcK8oNTJh5m6kmH2vhP/A1eYCOrPmjlbM=\n=crSz\n-----END PGP SIGNATURE-----",
        "payload": "tree 7b9a391059e3b4b7b27c66bf178c79d69f92f014\nparent 89a1f7a250ef70ff2d65701564f1e24bb9280d90\nparent 41d7db0b60375533934af3e3b48043e6de944bd1\nauthor fanquake <fanquake@gmail.com> 1574708895 -0500\ncommitter fanquake <fanquake@gmail.com> 1574709623 -0500\n\nMerge #17596: doc: Change doxygen URL to doxygen.bitcoincore.org\n\n41d7db0b60375533934af3e3b48043e6de944bd1 doc: Change doxygen URL to doxygen.bitcoincore.org (Wladimir J. van der Laan)\n\nPull request description:\n\n  The bitcoin core doxygen documentation has moved to https://doxygen.bitcoincore.org, see bitcoin-core/bitcoincore.org#681\n\n  (the old URL still works as a redirect)\n\nACKs for top commit:\n  Sjors:\n    ACK 41d7db0b60375533934af3e3b48043e6de944bd1 based on a short spot check.\n  fanquake:\n    ACK 41d7db0b60375533934af3e3b48043e6de944bd1 - also checked the redirect.\n\nTree-SHA512: e6fa0477b7825e3557c1b3bed8c5a37c33188ddcba43e6a19f95d86618408f7d04bbaeb64bd79181930c5af1252ca5c462e3f7a850bfffa39a8f62bcccbb4260\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12230529e330aefc0fbd37811b8837e96bf40cad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/12230529e330aefc0fbd37811b8837e96bf40cad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12230529e330aefc0fbd37811b8837e96bf40cad/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89a1f7a250ef70ff2d65701564f1e24bb9280d90"
      },
      {
        "sha": "41d7db0b60375533934af3e3b48043e6de944bd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41d7db0b60375533934af3e3b48043e6de944bd1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41d7db0b60375533934af3e3b48043e6de944bd1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "4dd21c4620f802a2784059177a03461260f36ef8",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/12230529e330aefc0fbd37811b8837e96bf40cad/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/12230529e330aefc0fbd37811b8837e96bf40cad/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=12230529e330aefc0fbd37811b8837e96bf40cad",
        "patch": "@@ -54,7 +54,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Productivity Notes](productivity.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://doxygen.bitcoincore.org/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [JSON-RPC Interface](JSON-RPC-interface.md)"
      }
    ]
  },
  {
    "sha": "2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYzFjNDM3NTRiN2EyOWUyZmM4NTJjMmFkNjQzMGJhMjdhYTJkN2Ri",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T19:57:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T19:57:40Z"
      },
      "message": "Merge #17591: ci: Add big endian platform - s390x\n\nda1f153e5e260f1744ee1bf4f24ca3a74ffea465 Add s390x tests to travis (Elichai Turkel)\n2fa65e0de94f01d502e8ace89be3c5dc963dd764 Add ci script to install on s390x (Elichai Turkel)\n\nPull request description:\n\n  Discovered this as part of #17402 and a conversation with gmaxwell.\n\n  You can see here that the platform is indeed BE: https://travis-ci.org/elichai/bitcoin/jobs/616656410#L36\n\n  This closes https://github.com/bitcoin/bitcoin/issues/6466\n\nACKs for top commit:\n  MarcoFalke:\n    ACK da1f153e5e260f1744ee1bf4f24ca3a74ffea465\n\nTree-SHA512: e7e94e54e220257d91b24fddc79eab2bcaaadf0b2d1e7e6872d9757808ab2541728f00b1f3ab7e343305c0e7d91bb48a17a3f9621f6fff6c9fe6cde6682de408",
      "tree": {
        "sha": "638aa9c47752505b868a945741ece8c17b1105f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/638aa9c47752505b868a945741ece8c17b1105f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3cMjUACgkQ0upIUOdS\niyWF7g/9EOijHHwer9hMbFLKJv1sYPdP1o4KhWAE7+BesVx4bfOUrPq2z/yIS9jX\nDwjGCpzuBwULYz2Pl2H58fb3urC3iwCwc8F2O0HlUNCvOtGWi3eVQ+OoeNRIGzun\nRbfELb9QrEMY/WUtfKkkcj4HiAPtGKPmzQB8MQo3RdgxsirszOZQJl2canZYSoii\n9N8f5zrBGM0cmSD7L/i9du14xHzuTc+XMPVyLu+yroGKy0kbSuOB9pqoK5BE/Dz6\nlSKWpAoCLutN1tyagpVLHbWfz7tey6yX0IIyLcjjRggk7WB9la6GxSuBYcldmw/l\n61YdCfJZG7qvvsXyWOFUdmYrjMHWrtnwngi1QZ7Tdr7R/HPUj29SSr6rJz+cIk0t\nYFlFZEtJKO/WK3drH3reiD2vUo8VVU+ZcQoohtDMxX9kSdhRnW5jPUQ+LQ1mQUXS\nl78F1Dkr3NC60WZcpfZTnRfC4Rmj7pLLlUCYJPmif0ropmPHOtx49gYXGhD1cCry\nPY3waSm+w8dlPPtS45oY8o34o4WyzDypsenkMnNIgAkTznvnZDO2bXmezpz2s9iE\nsrlNDZlz5hQlva9RzrK+Gm452EaEsJIwewwdo7V/k9FUhvjTpmULbAt3wpIFWMJQ\nRuaKhHHFyISb/nIx8PQHvxKQ3rxvfenMoi2F8LAEgcGm94okpls=\n=wYAc\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHEHMTKGvWsBSiIcm9qCXCJDusoxHoDHfFGh35mgtHBqCP/wECnd6I2obR/J\nitT8LTw6XdoI8CAVXDChDr1DsGom21E4DHIEMpQXscz6uLDY/MIQSuf36AjxBF3c\nMjjwCFtKKCFJ4jtSAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5l\ndGVybml0eXdhbGwuY29t//AQRCPXfEBS4LHi6j0O6PuliwjxIOVblP5df/pQh9IM\nLIwhPJWXn1A+IMBf4C33PLxf8JkXCPEEXdwyN/AIMVrBk+rgz40Ag9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//w\nELNcZaiIWtWM1NiTa9d9xCwI8SBktUpFylLS1XeI2AGgioPn1XXcmN6yq9TuIZ5Q\nbLj/dAjxBF3cMjfwCPRU1I6BFRigAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BD/ht6BfTS34IQHNWwl2sfcCPEE\nXdwyNvAIattCRQDoNmgAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNh\ndGFsbGF4eS5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 638aa9c47752505b868a945741ece8c17b1105f4\nparent 12230529e330aefc0fbd37811b8837e96bf40cad\nparent da1f153e5e260f1744ee1bf4f24ca3a74ffea465\nauthor MarcoFalke <falke.marco@gmail.com> 1574711857 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574711860 -0500\n\nMerge #17591: ci: Add big endian platform - s390x\n\nda1f153e5e260f1744ee1bf4f24ca3a74ffea465 Add s390x tests to travis (Elichai Turkel)\n2fa65e0de94f01d502e8ace89be3c5dc963dd764 Add ci script to install on s390x (Elichai Turkel)\n\nPull request description:\n\n  Discovered this as part of #17402 and a conversation with gmaxwell.\n\n  You can see here that the platform is indeed BE: https://travis-ci.org/elichai/bitcoin/jobs/616656410#L36\n\n  This closes https://github.com/bitcoin/bitcoin/issues/6466\n\nACKs for top commit:\n  MarcoFalke:\n    ACK da1f153e5e260f1744ee1bf4f24ca3a74ffea465\n\nTree-SHA512: e7e94e54e220257d91b24fddc79eab2bcaaadf0b2d1e7e6872d9757808ab2541728f00b1f3ab7e343305c0e7d91bb48a17a3f9621f6fff6c9fe6cde6682de408\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "12230529e330aefc0fbd37811b8837e96bf40cad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/12230529e330aefc0fbd37811b8837e96bf40cad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/12230529e330aefc0fbd37811b8837e96bf40cad"
      },
      {
        "sha": "da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1f153e5e260f1744ee1bf4f24ca3a74ffea465",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da1f153e5e260f1744ee1bf4f24ca3a74ffea465"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 24,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6612d5e4d111aa2d9bd22e2afeaad555c8e4dbb7",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "patch": "@@ -102,6 +102,12 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n         QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n+    - stage: test\n+      name: 'S390x  [GOAL: install]  [unit tests, functional tests]'\n+      arch: s390x\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\"\n+\n     - stage: test\n       name: 'Win64  [GOAL: deploy]  [unit tests, no gui, no functional tests]'\n       env: >-"
      },
      {
        "sha": "b41d44c61aefb7015ef079f190798ea9d21b356f",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "added",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "patch": "@@ -0,0 +1,18 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export HOST=s390x-unknown-linux-gnu\n+export DOCKER_NAME_TAG=s390x/ubuntu:18.04\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export NO_DEPENDS=1\n+export RUN_UNIT_TESTS=true\n+export RUN_FUNCTIONAL_TESTS=false\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\"\n+\n+lscpu"
      }
    ]
  },
  {
    "sha": "fa94fc10c881e502e6c9a71f3b7719aa955900f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk0ZmMxMGM4ODFlNTAyZTZjOWE3MWYzYjc3MTlhYTk1NTkwMGY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T20:08:37Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T20:07:28Z"
      },
      "message": "ci: Run functional tests on s390x",
      "tree": {
        "sha": "6717aa257ac453ca37a0d16cf19a5be6898fc0cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6717aa257ac453ca37a0d16cf19a5be6898fc0cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa94fc10c881e502e6c9a71f3b7719aa955900f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiBZQwAiRNUBlhQWiptb5wLWgoZ0t0wfNW+4JWUC3xtHM28dhdT7iAyEWu6yzjH\nIh8quowUao4bpD3OVysJgwCV+5vk9zmgcvUGQteQCYeQJxpi+23pz6bHc38FkvPH\nBbg+sbOd36RWNDxGu1dleyv4PM7Sb4mMQVcbIH8mx4igkmpHyeMi4rDbH/CYL8E9\nDj93envBGGnmYxjLwuFjTqKkpvZGexVtTH1BB6phQr7RSkTsYHm+bnvVRp+aOitm\ncLxdyUxRzb+nfzQJicHbQ9X5NIqBOznciyZsXbFe9RKFxRsMCetGruG1Oo9/9HAy\nwheIvf5AAkTfoATarBkOFAJ/N/688gkkscKkpY2844ubPL98DJxGeuTlDYcfWX0/\ny8cLVAZGql6Dc6DpbUMgU1ewlzA1//poZVRmhrota5goE9FBFaja11WoH5xdnp3V\nWnyIGUjA6JaLLt+51j/y8Ftvm8xzi6C7A/6dPtYo6pbcEbfASpOtQJSTG8HmCJUP\nX+FZ9lka\n=wjAj\n-----END PGP SIGNATURE-----",
        "payload": "tree 6717aa257ac453ca37a0d16cf19a5be6898fc0cb\nparent 2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db\nauthor MarcoFalke <falke.marco@gmail.com> 1574712517 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574712448 -0500\n\nci: Run functional tests on s390x\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa94fc10c881e502e6c9a71f3b7719aa955900f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa94fc10c881e502e6c9a71f3b7719aa955900f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa94fc10c881e502e6c9a71f3b7719aa955900f9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "1c19145166841487dbbfd2fbfebe779b1257e3dc",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa94fc10c881e502e6c9a71f3b7719aa955900f9/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa94fc10c881e502e6c9a71f3b7719aa955900f9/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fa94fc10c881e502e6c9a71f3b7719aa955900f9",
        "patch": "@@ -96,14 +96,14 @@ jobs:\n         - set -o errexit; source ./ci/extended_lint/06_script.sh\n \n     - stage: test\n-      name: 'ARM  [GOAL: install]  [unit tests, functional tests]'\n+      name: 'ARM  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n       arch: arm64\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n         QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n     - stage: test\n-      name: 'S390x  [GOAL: install]  [unit tests, functional tests]'\n+      name: 'S390x  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n       arch: s390x\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\""
      },
      {
        "sha": "89660c7fa4d5c8e5d64f6bbcfb79399355b8c398",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa94fc10c881e502e6c9a71f3b7719aa955900f9/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa94fc10c881e502e6c9a71f3b7719aa955900f9/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=fa94fc10c881e502e6c9a71f3b7719aa955900f9",
        "patch": "@@ -7,12 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export HOST=s390x-unknown-linux-gnu\n-export DOCKER_NAME_TAG=s390x/ubuntu:18.04\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=true\n-export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\"\n-\n-lscpu"
      }
    ]
  },
  {
    "sha": "fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ5ZmRiZWE1ZGZiMTkzMjgyODJhZmRhOTU4OGVkYzZmMWQwZGRm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T20:30:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T20:27:50Z"
      },
      "message": "test: Properly deserialize integers in little-endian",
      "tree": {
        "sha": "8f8bf81a9a94e1016bc266b1ca20f4858e5140e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8f8bf81a9a94e1016bc266b1ca20f4858e5140e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhbQQv+IUMi1iMXNcqXSPT6e2zwNdtL5zxJmxf/ArNB42WVsxXPqpzex44+L7eJ\nBJFSCL0CdFJ2g1J7INg2um5GcP4tBKfmWs8JGi84TWGJYIoFhpg1utsK6nV/xHyE\nQXtBKe3XBxSQY9DzRlMYZ/ZZT1lyxzAr4Dhi/JRvhJVuchnYdmP7ihmJkIrCxleN\nyzJJ/yG8OQYzTDegIFS4YqDdAg0ptnzBNrwvybacE+JGHc+UHTbAkOVoNO4ZHhar\nLjb+R38VuQobi/1fvnQv3snw5sKQW9IgFm+wrVsSwQD4QZEN54l0ni0i65xQDgPw\nBT1qYbhSFGOWyAv9RnVMH7K6hxX5NzkPleG9jGVoUOWt9qWcQpn0tKz1ddrZNYZ0\nrhi29p2ro3ypqLL6J0wHIKLR5auLKOmhs/QrSzQnceLleuCgIYaIFkX7s2Xidinc\n4gWJRFcRyUCzh1EtKfSC6tUBsdiIdyoVmZujr/983AkD5uTDTmMgh74PhZ+4xdQh\nPP2DDIEN\n=fjPl\n-----END PGP SIGNATURE-----",
        "payload": "tree 8f8bf81a9a94e1016bc266b1ca20f4858e5140e4\nparent fa94fc10c881e502e6c9a71f3b7719aa955900f9\nauthor MarcoFalke <falke.marco@gmail.com> 1574713801 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574713670 -0500\n\ntest: Properly deserialize integers in little-endian\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad9fdbea5dfb19328282afda9588edc6f1d0ddf/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa94fc10c881e502e6c9a71f3b7719aa955900f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa94fc10c881e502e6c9a71f3b7719aa955900f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa94fc10c881e502e6c9a71f3b7719aa955900f9"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "797fcc828a30ff059a4160ebf3006afd678cca7c",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad9fdbea5dfb19328282afda9588edc6f1d0ddf/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad9fdbea5dfb19328282afda9588edc6f1d0ddf/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
        "patch": "@@ -151,7 +151,7 @@ def run_test(self):\n \n         bin_response = self.test_rest_request(\"/getutxos\", http_method='POST', req_type=ReqType.BIN, body=bin_request, ret_type=RetType.BYTES)\n         output = BytesIO(bin_response)\n-        chain_height, = unpack(\"i\", output.read(4))\n+        chain_height, = unpack(\"<i\", output.read(4))\n         response_hash = output.read(32)[::-1].hex()\n \n         assert_equal(bb_hash, response_hash)  # check if getutxo's chaintip during calculation was fine"
      }
    ]
  },
  {
    "sha": "fabd71076cd9493bd2d30a198467f5ea621b27aa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJkNzEwNzZjZDk0OTNiZDJkMzBhMTk4NDY3ZjVlYTYyMWIyN2Fh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T21:27:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-25T21:23:36Z"
      },
      "message": "ci: Print free disk space",
      "tree": {
        "sha": "44a5aa9a52e452b44b704002f7e74b5b936422a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44a5aa9a52e452b44b704002f7e74b5b936422a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabd71076cd9493bd2d30a198467f5ea621b27aa",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiOhQv+Jj7Q+yZNeAZttZ/6QHHkdDLK59QGPCQwy6fyd9oPCwT2F0fSDvYI5IKJ\n0mTLibD1owPmOEwY5GEnWj4ImZWR5vzeL/LujBfgD5xXtEbU1UAzL1F9Zswh+U3y\n1VGILMjOQPFUMzXqbJJmijH4GHkmFGJXdAVvhh+UD3uDXATFY4gtuFhFvoilRMnd\nY2I+wa6vnA5gsEs+d38x3GIFPm0S62EsNmhRKnjHgWspbsY+3wICqZHUMgy6PNj5\nGSyb+arkXQDuf0250PO6AI9U1Y4hmo2PPxqC3paGbpfvr6jmfFdmivLwqOmP4oEO\nsha6/IoLj+vdT+YI23NaM85S4i7v+nKPTgK/sIqXY510RbAhRO8nGg3lgA4dMjWH\nJnI46mukABmg4+bpvaUYyPXsIQRsEVa09i81dSyUfWiqLtaUdCDVDN2xl72EvDfC\ny+Cml8hblUiy+FnfK0s4XrcULAlF4vy4sb9tFwx9MRXTkYAsfxEq4MjUXdW4h6q4\nEJydCmgX\n=dego\n-----END PGP SIGNATURE-----",
        "payload": "tree 44a5aa9a52e452b44b704002f7e74b5b936422a9\nparent fad9fdbea5dfb19328282afda9588edc6f1d0ddf\nauthor MarcoFalke <falke.marco@gmail.com> 1574717225 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1574717016 -0500\n\nci: Print free disk space\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabd71076cd9493bd2d30a198467f5ea621b27aa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabd71076cd9493bd2d30a198467f5ea621b27aa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabd71076cd9493bd2d30a198467f5ea621b27aa/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad9fdbea5dfb19328282afda9588edc6f1d0ddf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad9fdbea5dfb19328282afda9588edc6f1d0ddf"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5055a720964486e141fb03cdd6747297371f3ad1",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabd71076cd9493bd2d30a198467f5ea621b27aa/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabd71076cd9493bd2d30a198467f5ea621b27aa/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fabd71076cd9493bd2d30a198467f5ea621b27aa",
        "patch": "@@ -72,6 +72,8 @@ if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n else\n   DOCKER_EXEC free -m -h\n   DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n fi\n \n if [ -n \"$DPKG_ADD_ARCH\" ]; then"
      }
    ]
  },
  {
    "sha": "87819046432a24fa8a7ec5c115eae4df0d281245",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzgxOTA0NjQzMmEyNGZhOGE3ZWM1YzExNWVhZTRkZjBkMjgxMjQ1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-26T00:07:46Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-26T00:22:29Z"
      },
      "message": "qt: Fix class name of Ui::ModalOverlay",
      "tree": {
        "sha": "0773dbe819b00e0645ed02f8fafeddb876fee5cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0773dbe819b00e0645ed02f8fafeddb876fee5cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87819046432a24fa8a7ec5c115eae4df0d281245",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3ccEgACgkQQQEIES5+\nqB80DA/+IxvGQ1IMFGbaX1plyg9sF8qFnhY9lbpeqihfxUvKxts245pkAPhctl8J\nVYH0akxf1F14Y6JctRPG2ksTq+Gy/FLQlS0iqRmoAW4/MD34HFcT5hP3z8nC/Zst\naR84zeXMoemRSd2UZRcHneFOOSTZvhf3WBc8Sz3feKgHXhjcY/C0l8EpCglTtoLG\ngx2KtgJ7+0R6KN/VDy4Bavd4cT3805/SUeSfvQcCn7I9O91H6nFLfnIrR5c6+wVH\nmYVetRLFNJ19n0G0vB5ldVBniRqFoSmYqk+/9gXDFzwlEkZYSQdd7hZicrj1kiJZ\no30QEc360Vs647p3IN6A81QlpjCUDF9bPJin/J+TJgQlyi4v+FllI/kz6eK1PbfQ\nuFb2bVi8z2CA4aSKNbsDGzHM3HyITEGo5KamiOZ87MsACWgh43pn3VvvYd5S0zUW\nI1S75tfxjzvzl2KpE31ttBCUlrbXz4GRktF7gpzZXFJWKWlf/Hrq9ZJ2idYs3fbx\nhnjxrBrvFXAbR08xGVrzp1YCIXShE74wPPZ+JIV7w8aPCJ4hyAW+QPG2pywMnrxz\n7EFMYggYwh1YtKxkA5CE5jgjPWxJ1dD3hJiR6cUfNooxig1Rqhwira3ulTLiepPX\nPh1ttPCX6GUHhW7WqFEu01nWuIHzCLKpyagGDlrVY4M6znYLj2g=\n=ulER\n-----END PGP SIGNATURE-----",
        "payload": "tree 0773dbe819b00e0645ed02f8fafeddb876fee5cc\nparent 89a1f7a250ef70ff2d65701564f1e24bb9280d90\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574726866 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574727749 +0200\n\nqt: Fix class name of Ui::ModalOverlay\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87819046432a24fa8a7ec5c115eae4df0d281245",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87819046432a24fa8a7ec5c115eae4df0d281245",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87819046432a24fa8a7ec5c115eae4df0d281245/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a1f7a250ef70ff2d65701564f1e24bb9280d90",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89a1f7a250ef70ff2d65701564f1e24bb9280d90"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 1,
      "deletions": 9
    },
    "files": [
      {
        "sha": "da19a6fa2e0426c492d739c60e4c63850d37cf57",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87819046432a24fa8a7ec5c115eae4df0d281245/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87819046432a24fa8a7ec5c115eae4df0d281245/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=87819046432a24fa8a7ec5c115eae4df0d281245",
        "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <ui version=\"4.0\">\n  <class>ModalOverlay</class>\n- <widget class=\"ModalOverlay\" name=\"ModalOverlay\">\n+ <widget class=\"QWidget\" name=\"ModalOverlay\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>\n@@ -369,14 +369,6 @@ QLabel { color: rgb(40,40,40);  }</string>\n    </item>\n   </layout>\n  </widget>\n- <customwidgets>\n-  <customwidget>\n-   <class>ModalOverlay</class>\n-   <extends>QWidget</extends>\n-   <header>qt/modaloverlay.h</header>\n-   <container>1</container>\n-  </customwidget>\n- </customwidgets>\n  <resources/>\n  <connections/>\n </ui>"
      }
    ]
  },
  {
    "sha": "93352d261fa4e1518a4f006de157ff5a2fc4c819",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MzM1MmQyNjFmYTRlMTUxOGE0ZjAwNmRlMTU3ZmY1YTJmYzRjODE5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-26T00:31:28Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-26T00:31:28Z"
      },
      "message": "qt: Use proper class for Ui::ReceiveCoinsDialog",
      "tree": {
        "sha": "a328d8343dabb5a6ab65af642518f824e79bd347",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a328d8343dabb5a6ab65af642518f824e79bd347"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/93352d261fa4e1518a4f006de157ff5a2fc4c819",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3ccmAACgkQQQEIES5+\nqB+N/Q//bwbAtDWJ35vgjSG4/qOcWf3/nti0fzSdCJXSy1sci4anZu0+R1Fk43Zm\nErqaO65UOe0afaeE2fjyApyjBUAlgLRkpOFX2sNVOwzK6rLJ9wdlAbDSRNJOFYQn\nes0IUDNVXy2FBhsPYhAb2bXk9+eCEwF3041DDwIlNNwqq79hj0SmjMXJqeUymS3G\nmPfHGqr2WYrE3iKMyYWd51bSU0M+UugDV94F/KsG2v9XFngg7PhdcBvAFwyVv4t9\nRLbgadumvOOBQXnqM+W1kZ++Plxe+xva5E4AO7110rqt1/sCcaa62nyRdKY+2Ii4\nnyR4ryUuGuLlu91WJnTfQFGPyQKM98oVQMXwJNHhSK1EYCdqSKR9MqhOZ9J5kXt8\nyGCpVnHlSh6UbsJZoCbaIPLg6B0LzxXFo2ANK8U2tpMIJ1kKOEau56DkbmmVxWW3\nL/H3mjmsRYEPMYKCW+vkqu7hZZJNyvalYPDrpz9UkxnnETlFp6/UAcYH+876Dzzs\nSjDS+yeCirGJsI/rHPtu2Tffpd+cy5K2BdIndyvVaVoF0ge6EKWow1JUcd6Lovmv\nv3YM3gdXEyijFvsP5v2PBXxWbrWNOIns4t08oZvebtd8HLM2HMyBcZjSb1NqGJs7\nINrXwV8wkiGcZaUeoYAFhIPtRZXja+UAnc3+TjoXLzznTpQFzyY=\n=1xFD\n-----END PGP SIGNATURE-----",
        "payload": "tree a328d8343dabb5a6ab65af642518f824e79bd347\nparent 87819046432a24fa8a7ec5c115eae4df0d281245\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574728288 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574728288 +0200\n\nqt: Use proper class for Ui::ReceiveCoinsDialog\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93352d261fa4e1518a4f006de157ff5a2fc4c819",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/93352d261fa4e1518a4f006de157ff5a2fc4c819",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93352d261fa4e1518a4f006de157ff5a2fc4c819/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "87819046432a24fa8a7ec5c115eae4df0d281245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87819046432a24fa8a7ec5c115eae4df0d281245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/87819046432a24fa8a7ec5c115eae4df0d281245"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7dbee6d68907d58f671e8a8683667e4953186a9d",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/93352d261fa4e1518a4f006de157ff5a2fc4c819/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/93352d261fa4e1518a4f006de157ff5a2fc4c819/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=93352d261fa4e1518a4f006de157ff5a2fc4c819",
        "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <ui version=\"4.0\">\n  <class>ReceiveCoinsDialog</class>\n- <widget class=\"QWidget\" name=\"ReceiveCoinsDialog\">\n+ <widget class=\"QDialog\" name=\"ReceiveCoinsDialog\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>"
      }
    ]
  },
  {
    "sha": "0ee914ba9e5960763c7bb380b566ee481446f97a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZWU5MTRiYTllNTk2MDc2M2M3YmIzODBiNTY2ZWU0ODE0NDZmOTdh",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-26T08:17:36Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-26T08:26:32Z"
      },
      "message": "Merge #17584: wallet: replace raw pointer with const reference in AddrToPubKey\n\n1a3a256d5e0443d19757c1f1fceb9c9ede17758a wallet: replace raw pointer with const reference in AddrToPubKey (Harris)\n\nPull request description:\n\n  This PR replaces a redundant reference-to-pointer conversion in **addmultisigaddress** from *wallet/rpcwallet.cpp*. It also makes the API from *rpc/util.h* look more straightforward as **AddrToPubKey** now uses const references like other functions from there.\n\n  I am not sure why there is a ref-to-ptr conversion in addmultisignatures, so I can only speculate that this is because of \"historical reasons\".\n\n  The ref-to-ptr conversion happens here: https://github.com/bitcoin/bitcoin/blob/master/src/wallet/rpcwallet.cpp#L1001\n\n  There, the address of LegacyScriptPubKeyMan& is given to AddrToPubKey.\n\n  Later, in AddrToPubKey, it gets converted back to a reference, because GetKeyForDestination in rpc/util.cpp expects a const ref: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/util.cpp#L140\n\n  Regards,\n\nACKs for top commit:\n  achow101:\n    ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a\n  meshcollider:\n    utACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a\n  promag:\n    Code review ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a.\n  hebasto:\n    ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a, I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged.\n\nTree-SHA512: 1a2b8ddab5694ef4c65fac69f011e38dd03a634e84a35857e13bd05ad99fe42af22ee0af6230865e3d2c725693512f3336acb055ede19c958424283e7a3856c4",
      "tree": {
        "sha": "6d936c5c78cfece95939e3d6ab7d3a837d44d506",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d936c5c78cfece95939e3d6ab7d3a837d44d506"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ee914ba9e5960763c7bb380b566ee481446f97a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3c4bgACgkQ0wARbhyH\nWj06OA//WugAZAsvYAZXkKpiyWWlUz2PColBbqi8vRFCrnOGBKlIehMmlWmiXzUf\nRDtiqlmEOaF8VE0jsYwXBUiHTztoY4mIErPlMkRc72WstoKCqzkWdkiO5hXhswG/\npQ3fhPWv8PCPUPjLMfD+CiD0ej1n12xgsp3Pl1yHKaXHMSl/Adk8admn5NMEcqTW\nE2I7OjJqYMEMDyxecYFAYLgu9XkydUnYe9EgU5XbUHFZjTuIZAWdNKXuRAxtWijp\n9phaU3dc7whavmpi/nV09O8Ie2pB/BOkmtWKOj4mECwWafLJLkZLfqZtY7aORsVx\nq7OHVJPMt1kC/Rab4gX16KogwavolPeiMdXi5UrHbLPhgi9kXrL1bW86eft0p67Y\nhahd5X4bTydrHF95vXpdi8fgOzwwsRn2+3IflgxKgvVWyUwmEP3PF1EyUUsQnAcL\nb2fjFr607/dr3r+mFAG/3xCT/AQFy4tQ9H8rj8edNQJNrYOVG+eTDpU9IIu9hUnY\nRiGHHcsGckXzYhT71whVNGtQ3w0F42471tC4uTiUKpuLdL+0jOSpX4K4dYUJLrdk\nHjQi2X854+sxncsa0c1jTTAlcCW/7o5n6F6V1PWQK1RfUpPrRJSOB4Mz7jNDNvrz\nlFVedKYdQjPAlXKT+TwhbEcRdj4Weh05YScrnl6LsJhJzZWAmiM=\n=GVaC\n-----END PGP SIGNATURE-----",
        "payload": "tree 6d936c5c78cfece95939e3d6ab7d3a837d44d506\nparent 2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db\nparent 1a3a256d5e0443d19757c1f1fceb9c9ede17758a\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1574756256 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1574756792 +1300\n\nMerge #17584: wallet: replace raw pointer with const reference in AddrToPubKey\n\n1a3a256d5e0443d19757c1f1fceb9c9ede17758a wallet: replace raw pointer with const reference in AddrToPubKey (Harris)\n\nPull request description:\n\n  This PR replaces a redundant reference-to-pointer conversion in **addmultisigaddress** from *wallet/rpcwallet.cpp*. It also makes the API from *rpc/util.h* look more straightforward as **AddrToPubKey** now uses const references like other functions from there.\n\n  I am not sure why there is a ref-to-ptr conversion in addmultisignatures, so I can only speculate that this is because of \"historical reasons\".\n\n  The ref-to-ptr conversion happens here: https://github.com/bitcoin/bitcoin/blob/master/src/wallet/rpcwallet.cpp#L1001\n\n  There, the address of LegacyScriptPubKeyMan& is given to AddrToPubKey.\n\n  Later, in AddrToPubKey, it gets converted back to a reference, because GetKeyForDestination in rpc/util.cpp expects a const ref: https://github.com/bitcoin/bitcoin/blob/master/src/rpc/util.cpp#L140\n\n  Regards,\n\nACKs for top commit:\n  achow101:\n    ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a\n  meshcollider:\n    utACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a\n  promag:\n    Code review ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a.\n  hebasto:\n    ACK 1a3a256d5e0443d19757c1f1fceb9c9ede17758a, I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged.\n\nTree-SHA512: 1a2b8ddab5694ef4c65fac69f011e38dd03a634e84a35857e13bd05ad99fe42af22ee0af6230865e3d2c725693512f3336acb055ede19c958424283e7a3856c4\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee914ba9e5960763c7bb380b566ee481446f97a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee914ba9e5960763c7bb380b566ee481446f97a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee914ba9e5960763c7bb380b566ee481446f97a/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2c1c43754b7a29e2fc852c2ad6430ba27aa2d7db"
      },
      {
        "sha": "1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a3a256d5e0443d19757c1f1fceb9c9ede17758a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a3a256d5e0443d19757c1f1fceb9c9ede17758a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "0791a365fe44da785d5d8dc9135488e4a302fa52",
        "filename": "src/rpc/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee914ba9e5960763c7bb380b566ee481446f97a/src/rpc/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee914ba9e5960763c7bb380b566ee481446f97a/src/rpc/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.cpp?ref=0ee914ba9e5960763c7bb380b566ee481446f97a",
        "patch": "@@ -131,18 +131,18 @@ CPubKey HexToPubKey(const std::string& hex_in)\n }\n \n // Retrieves a public key for an address from the given FillableSigningProvider\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in)\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in)\n {\n     CTxDestination dest = DecodeDestination(addr_in);\n     if (!IsValidDestination(dest)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid address: \" + addr_in);\n     }\n-    CKeyID key = GetKeyForDestination(*keystore, dest);\n+    CKeyID key = GetKeyForDestination(keystore, dest);\n     if (key.IsNull()) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"%s does not refer to a key\", addr_in));\n     }\n     CPubKey vchPubKey;\n-    if (!keystore->GetPubKey(key, vchPubKey)) {\n+    if (!keystore.GetPubKey(key, vchPubKey)) {\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"no full public key for address %s\", addr_in));\n     }\n     if (!vchPubKey.IsFullyValid()) {"
      },
      {
        "sha": "9304e1fefbff9e05e87e4f39afcdd26f4680409d",
        "filename": "src/rpc/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee914ba9e5960763c7bb380b566ee481446f97a/src/rpc/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee914ba9e5960763c7bb380b566ee481446f97a/src/rpc/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/util.h?ref=0ee914ba9e5960763c7bb380b566ee481446f97a",
        "patch": "@@ -69,7 +69,7 @@ extern std::string HelpExampleCli(const std::string& methodname, const std::stri\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n \n CPubKey HexToPubKey(const std::string& hex_in);\n-CPubKey AddrToPubKey(FillableSigningProvider* const keystore, const std::string& addr_in);\n+CPubKey AddrToPubKey(const FillableSigningProvider& keystore, const std::string& addr_in);\n CTxDestination AddAndGetMultisigDestination(const int required, const std::vector<CPubKey>& pubkeys, OutputType type, FillableSigningProvider& keystore, CScript& script_out);\n \n UniValue DescribeAddress(const CTxDestination& dest);"
      },
      {
        "sha": "f48e1e90fd458a7ba54869e7c6a5d87a33c60334",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ee914ba9e5960763c7bb380b566ee481446f97a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ee914ba9e5960763c7bb380b566ee481446f97a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0ee914ba9e5960763c7bb380b566ee481446f97a",
        "patch": "@@ -998,7 +998,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n         if (IsHex(keys_or_addrs[i].get_str()) && (keys_or_addrs[i].get_str().length() == 66 || keys_or_addrs[i].get_str().length() == 130)) {\n             pubkeys.push_back(HexToPubKey(keys_or_addrs[i].get_str()));\n         } else {\n-            pubkeys.push_back(AddrToPubKey(&spk_man, keys_or_addrs[i].get_str()));\n+            pubkeys.push_back(AddrToPubKey(spk_man, keys_or_addrs[i].get_str()));\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "2689c8fd7159f47248c5fc365463be8b0e8b039c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjg5YzhmZDcxNTlmNDcyNDhjNWZjMzY1NDYzYmU4YjBlOGIwMzlj",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-25T10:33:58Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-26T10:38:32Z"
      },
      "message": "[test] qt: add send screen balance test",
      "tree": {
        "sha": "bd48be43829a6460e80225732a98a2f00269d254",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bd48be43829a6460e80225732a98a2f00269d254"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2689c8fd7159f47248c5fc365463be8b0e8b039c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3dAKgACgkQV/+b28ww\nEAntwA/+KSMZZFL4jUwjov2bcJPjmYY03V+1VWCaEJ68eKMOk/V5kps4vdzUkoQg\nN34Xb4yh/OTyojG01BMshtMClIjFsDcAnpHyDjsKwn+HYQ9UgcGZg8rqNDGEj1pA\nhEoklE7g83OdLfsQPjwPqINMHdW1qWuxqaym+OKMDS8Y4j4jiNLCGVDsSc2Mkl/r\nBhFxpM2IuE5JpXkCfHNaQ1FWXA6s6KrqgqCS1TtCRvEInqmupKlMPlXs3zmU38Te\njUgvY3qHdSFkXqP3Bbixr2uuIR7AhPSeB8QdL2/M/CJ1Dl2m1osb3E6QVfDQO3ss\nzpqTprBieSp6TWts7L24J+FtTSTHWKc7+mCDBX7BWaCdSLpjo+fUKYJsfNI8khiR\nFHD1bw+5+2VXyJE+yB27T7MJL3xDDcmlVStXVjcDtnW+q/lyYDPZdXrAhC2cIwoG\nENlOFdgnXm5XsvFv5GV82hl9Yf5X6O1F2pHLVChglpQRBR3RNBAfYklmnE8cFZXe\nTfTIQ6HKqU4V/Qj6HVnucbMKLlMbiHnpwtyJm1IWbiJIIwYkTguffO3kYztwNRW9\ny9Cy5djTSwzSWGTA3a1MBbymmCS3i+y+M37Uj4D7LqkQFXoYHi0J6JShVmz1hPhf\nWfzCU4ijWhEnnalNRsRUPPmEDc8rfrHfFSLvbAJt7y4Z0czsKho=\n=An1I\n-----END PGP SIGNATURE-----",
        "payload": "tree bd48be43829a6460e80225732a98a2f00269d254\nparent 0ee914ba9e5960763c7bb380b566ee481446f97a\nauthor Sjors Provoost <sjors@sprovoost.nl> 1574678038 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1574764712 +0100\n\n[test] qt: add send screen balance test\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2689c8fd7159f47248c5fc365463be8b0e8b039c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2689c8fd7159f47248c5fc365463be8b0e8b039c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2689c8fd7159f47248c5fc365463be8b0e8b039c/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ee914ba9e5960763c7bb380b566ee481446f97a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee914ba9e5960763c7bb380b566ee481446f97a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee914ba9e5960763c7bb380b566ee481446f97a"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "dfd56511ea4060081e57a00ca5fadc90262ef7f6",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2689c8fd7159f47248c5fc365463be8b0e8b039c/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2689c8fd7159f47248c5fc365463be8b0e8b039c/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=2689c8fd7159f47248c5fc365463be8b0e8b039c",
        "patch": "@@ -170,6 +170,16 @@ void TestGUI(interfaces::Node& node)\n     sendCoinsDialog.setModel(&walletModel);\n     transactionView.setModel(&walletModel);\n \n+    {\n+        // Check balance in send dialog\n+        QLabel* balanceLabel = sendCoinsDialog.findChild<QLabel*>(\"labelBalance\");\n+        QString balanceText = balanceLabel->text();\n+        int unit = walletModel.getOptionsModel()->getDisplayUnit();\n+        CAmount balance = walletModel.wallet().getBalance();\n+        QString balanceComparison = BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways);\n+        QCOMPARE(balanceText, balanceComparison);\n+    }\n+\n     // Send two transactions, and verify they are added to transaction list.\n     TransactionTableModel* transactionTableModel = walletModel.getTransactionTableModel();\n     QCOMPARE(transactionTableModel->rowCount({}), 105);"
      }
    ]
  },
  {
    "sha": "4a96e459d733f1b6427221aaa1874ea00f79988a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YTk2ZTQ1OWQ3MzNmMWI2NDI3MjIxYWFhMTg3NGVhMDBmNzk5ODhh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-26T10:43:53Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2019-11-26T10:43:53Z"
      },
      "message": "[gui] send: show watch-only balance in send screen",
      "tree": {
        "sha": "80b260402be5309009074d4079e5883abbf9400d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/80b260402be5309009074d4079e5883abbf9400d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4a96e459d733f1b6427221aaa1874ea00f79988a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAl3dAesACgkQV/+b28ww\nEAmKdg/+KNsUyxzb6a5xF4IU6UsD/KkQzVhmVIMru8Wi94oxMQz1SPrauQCfw3NR\ngP2p2A2kDyuzyTrx5V4ahaWIkW2kzyUaSq3lU+gfGHqeniNqNIFcGk+/MQIZLleM\neq4jOnZCDvkd0iwLqT4yZWaV8FKcFHUXJKkfiQvLQGRdONBXOmvJSJKY/YS2rngL\n+JhOrNMDTV+nTy71DBa4QsgEji3RH5GbDt+jdpt3iSvDQQWutc0/RLtjuU+27guH\nzBtOzMBRPOfXcLmHMkHRDIsZXnYPDowo0IVGfleN5yOcdLbQsDHBZ9Gs2Oqd0LD7\nBiV7B/IIPo7pTb0uP4NTg+JWPw63feetICWRE4zzLPMC7LEknz6SXvkY9a0RS9xG\nqWnOlC8ui/bRPTgOLWWD38/hL/mEHTFa5CboHZsP7nO6FUCKMvDl84GzmrPqL8TP\nRCwdXcVfABfkVTM6ci+f1dA7YSgQvj4qGQYoPyzMwdVGE0s8KdKK4whhk4w7gyZb\nKWSOo4UNiawd8JpK5EUTuQUGTuuzIO2rr/lHp2wCmPj9lnlDO849B9M2PTDUe8Fq\n66TJseEy5q59dha2eRf1wnf1L5BJrUdGUmOkT1BIcwgbskAX/a65Isj1w+hcbd/M\nCRawa+nVLBJfM1k3aIHGAmEplIokHe9N/J4t1EXM6G5FKkQUrus=\n=Xayq\n-----END PGP SIGNATURE-----",
        "payload": "tree 80b260402be5309009074d4079e5883abbf9400d\nparent 2689c8fd7159f47248c5fc365463be8b0e8b039c\nauthor Sjors Provoost <sjors@sprovoost.nl> 1574765033 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1574765033 +0100\n\n[gui] send: show watch-only balance in send screen\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a96e459d733f1b6427221aaa1874ea00f79988a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4a96e459d733f1b6427221aaa1874ea00f79988a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a96e459d733f1b6427221aaa1874ea00f79988a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2689c8fd7159f47248c5fc365463be8b0e8b039c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2689c8fd7159f47248c5fc365463be8b0e8b039c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2689c8fd7159f47248c5fc365463be8b0e8b039c"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 7,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cfd4bf33d460d8ed43c17e0b267910c984255005",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a96e459d733f1b6427221aaa1874ea00f79988a/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a96e459d733f1b6427221aaa1874ea00f79988a/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=4a96e459d733f1b6427221aaa1874ea00f79988a",
        "patch": "@@ -1190,7 +1190,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <number>3</number>\n        </property>\n        <item>\n-        <widget class=\"QLabel\" name=\"label\">\n+        <widget class=\"QLabel\" name=\"labelBalanceName\">\n          <property name=\"sizePolicy\">\n           <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Fixed\">\n            <horstretch>0</horstretch>"
      },
      {
        "sha": "f1ea3e23e5d5e893ee90f4763869257b0af6b08f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4a96e459d733f1b6427221aaa1874ea00f79988a/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4a96e459d733f1b6427221aaa1874ea00f79988a/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=4a96e459d733f1b6427221aaa1874ea00f79988a",
        "patch": "@@ -562,7 +562,12 @@ void SendCoinsDialog::setBalance(const interfaces::WalletBalances& balances)\n {\n     if(model && model->getOptionsModel())\n     {\n-        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), balances.balance));\n+        CAmount balance = balances.balance;\n+        if (model->privateKeysDisabled()) {\n+            balance = balances.watch_only_balance;\n+            ui->labelBalanceName->setText(tr(\"Watch-only balance:\"));\n+        }\n+        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), balance));\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmFiMTMwOTYxOWI5OTVjZTlhY2IzMGJmMGQxZWM4NTI2YzQzNWFk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-26T14:29:41Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-26T14:48:52Z"
      },
      "message": "Merge #17606: qt, refactor: Use proper classes for Ui::*\n\n93352d261fa4e1518a4f006de157ff5a2fc4c819 qt: Use proper class for Ui::ReceiveCoinsDialog (Hennadii Stepanov)\n87819046432a24fa8a7ec5c115eae4df0d281245 qt: Fix class name of Ui::ModalOverlay (Hennadii Stepanov)\n\nPull request description:\n\n  Use proper classes for:\n  - `Ui::ModalOverlay` to remove `<customwidget>` entry\n  - `Ui::ReceiveCoinsDialog` to be consistent with the code base\n\n  This PR does not change behavior.\n\nACKs for top commit:\n  jonasschnelli:\n    Tested ACK 93352d261fa4e1518a4f006de157ff5a2fc4c819 - ran this on top of master and tested the modal overlay on initial mainnet sync.\n  laanwj:\n    code review ACK 93352d261fa4e1518a4f006de157ff5a2fc4c819\n\nTree-SHA512: faeed8e86dbf5355505defcdb7e1db07d6a6005ee5eb07367b00f6aa122dd8ad34f8372d4bae7b29c0eac87b538a33157e19328be2876135e8a6376a3197f1bc",
      "tree": {
        "sha": "8ea95e8b2d5994ad656c4c9e9f45f9a3f66a54ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8ea95e8b2d5994ad656c4c9e9f45f9a3f66a54ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3dO1UACgkQLuufXMCV\nJsEFNQ/5AcKLhPGWFG5xFcF4TFAVOXZ/yS7jQ1gWxqKJsdR5Kd2il0KpDq+Ys1qE\n9ZpWU+/LRFvqx6ez8LvkqRJiILCTljB3l4T6H/tLKwkpUgHsKlfCiVMB5O3XKBrl\nw0OLtV8U3kffeeYwYdZzmU/8BU0aw4Zi9SPbSlWCIDOIBI4FrVyLLyR54S8yT42W\nYFHAmrTj1T50FdNiJ+B3NIE18RH8b1n/7NsY0JjtsaVpa78I0JjSmcSWGGGR/UKa\ndMbyhKBbyY7Hu03/BjxAVjLK6BcvUkYF59uoPpxOdN4CV16WNjI3UgVLe6cpOOAj\ntc+bpGSSEFZ9cYS4MqXdsmQsuIHXGQdww/+Tcvfa+jUyLcWFoS4xXw+xbnCto9Vo\nLpP/Ld1MmrtW3fJSMkoXXCWAgvO164TMBP+ES6aExEe2tvrWdR1aaoCEksFVB3f2\nlmL0/8ULmpfid7YnFnmtJHNvOImFcChoTZOlUH5tzeQvd3u0TV3FNYZ7qBEjy4ku\nBTiIKHE9EwutO5wSD9PxXOE9jE+QV26x0DN0OmjUZIJMrG13WuvTzyC5qOujutbo\naOZ0IBFyLvFXbtX7SnVX+fI04i4cbzwyEy64QeWoqe91BnZyb1s4q5hn6yoZtN5G\nOYDBInr6Pgjvn6ey4ZHnIXR/wuP9UL/Sv3yEM7wo4T+nNsJ3JK4=\n=yjxY\n-----END PGP SIGNATURE-----",
        "payload": "tree 8ea95e8b2d5994ad656c4c9e9f45f9a3f66a54ce\nparent 0ee914ba9e5960763c7bb380b566ee481446f97a\nparent 93352d261fa4e1518a4f006de157ff5a2fc4c819\nauthor fanquake <fanquake@gmail.com> 1574778581 -0500\ncommitter fanquake <fanquake@gmail.com> 1574779732 -0500\n\nMerge #17606: qt, refactor: Use proper classes for Ui::*\n\n93352d261fa4e1518a4f006de157ff5a2fc4c819 qt: Use proper class for Ui::ReceiveCoinsDialog (Hennadii Stepanov)\n87819046432a24fa8a7ec5c115eae4df0d281245 qt: Fix class name of Ui::ModalOverlay (Hennadii Stepanov)\n\nPull request description:\n\n  Use proper classes for:\n  - `Ui::ModalOverlay` to remove `<customwidget>` entry\n  - `Ui::ReceiveCoinsDialog` to be consistent with the code base\n\n  This PR does not change behavior.\n\nACKs for top commit:\n  jonasschnelli:\n    Tested ACK 93352d261fa4e1518a4f006de157ff5a2fc4c819 - ran this on top of master and tested the modal overlay on initial mainnet sync.\n  laanwj:\n    code review ACK 93352d261fa4e1518a4f006de157ff5a2fc4c819\n\nTree-SHA512: faeed8e86dbf5355505defcdb7e1db07d6a6005ee5eb07367b00f6aa122dd8ad34f8372d4bae7b29c0eac87b538a33157e19328be2876135e8a6376a3197f1bc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2ab1309619b995ce9acb30bf0d1ec8526c435ad/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ee914ba9e5960763c7bb380b566ee481446f97a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee914ba9e5960763c7bb380b566ee481446f97a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee914ba9e5960763c7bb380b566ee481446f97a"
      },
      {
        "sha": "93352d261fa4e1518a4f006de157ff5a2fc4c819",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/93352d261fa4e1518a4f006de157ff5a2fc4c819",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/93352d261fa4e1518a4f006de157ff5a2fc4c819"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 2,
      "deletions": 10
    },
    "files": [
      {
        "sha": "da19a6fa2e0426c492d739c60e4c63850d37cf57",
        "filename": "src/qt/forms/modaloverlay.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2ab1309619b995ce9acb30bf0d1ec8526c435ad/src/qt/forms/modaloverlay.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2ab1309619b995ce9acb30bf0d1ec8526c435ad/src/qt/forms/modaloverlay.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/modaloverlay.ui?ref=f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
        "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <ui version=\"4.0\">\n  <class>ModalOverlay</class>\n- <widget class=\"ModalOverlay\" name=\"ModalOverlay\">\n+ <widget class=\"QWidget\" name=\"ModalOverlay\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>\n@@ -369,14 +369,6 @@ QLabel { color: rgb(40,40,40);  }</string>\n    </item>\n   </layout>\n  </widget>\n- <customwidgets>\n-  <customwidget>\n-   <class>ModalOverlay</class>\n-   <extends>QWidget</extends>\n-   <header>qt/modaloverlay.h</header>\n-   <container>1</container>\n-  </customwidget>\n- </customwidgets>\n  <resources/>\n  <connections/>\n </ui>"
      },
      {
        "sha": "7dbee6d68907d58f671e8a8683667e4953186a9d",
        "filename": "src/qt/forms/receivecoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2ab1309619b995ce9acb30bf0d1ec8526c435ad/src/qt/forms/receivecoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2ab1309619b995ce9acb30bf0d1ec8526c435ad/src/qt/forms/receivecoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/receivecoinsdialog.ui?ref=f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
        "patch": "@@ -1,7 +1,7 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <ui version=\"4.0\">\n  <class>ReceiveCoinsDialog</class>\n- <widget class=\"QWidget\" name=\"ReceiveCoinsDialog\">\n+ <widget class=\"QDialog\" name=\"ReceiveCoinsDialog\">\n   <property name=\"geometry\">\n    <rect>\n     <x>0</x>"
      }
    ]
  },
  {
    "sha": "d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmEzYTVjYWRiZTU4YzBmZTM2M2JiYzZhY2FjMjkzZDQxZWVkZjdl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-25T22:31:31Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-26T14:55:07Z"
      },
      "message": "util: make ScheduleBatchPriority advisory only",
      "tree": {
        "sha": "a8f86d51e6e0b40a5e0cb1cd0b8a23832e397f32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a8f86d51e6e0b40a5e0cb1cd0b8a23832e397f32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3dPMsACgkQLuufXMCV\nJsEIVg//dNJwg2s8gnnQKz0mSmKz9NXyna2Omkj+dBLaUxQUSr5k73WGxAb7wFYG\nEDIRmdC2kItlw2XiIzxRZzTqLeM3CHOjcovaOf2CrYj5Mn12QaCDGBOA91nvT+fc\nA0v/JDFJ8wKtE6xv1M3FE5DuntmBmjwiVvrEbkYUr8EVFfhQP3N0av04++fdmzUf\nK7zgBKyS/F1rH07/+ZLP/zF6vX+HSO2EcY73AG1vdPEK9eebKCxl3wu29PPrEw7z\nFmBEHSKlvfcJzOCFMvnWhCpS5TP99XkPFddwAaKuqKz2D4Fn7wMuy33pvjShalde\nYHzyC+ITeFDjZMPkEDoAHeMDWQDzstBgs9qQqC7HTKSIDDzWbHyDjGUQgm3rT+UL\nq9O7Az8iqZ6TWIikAqvM862C95VH59p9sVrN2xI4gYjdfjRB1EsBLkqFas/caBmd\nl0Ek9VJdgzo2UgJ7+c0iwfakbeFoTdp3X18Vx0I2LiEPOCyOqmsyxZfvUo3obZ4S\nDAUqzVLft/DWM1p936tgPrc41QXP4MJwnLXb9CXNxjtvaY2n8b3d+jtSdYzQC7LQ\nGr6r0dC48UZ0ryCPV+bezMl+A0XGtYbR70JtKhFcaCmUbZ8KwIHaCmQeH2F6B+oG\nCpeEaOt0FcN5ahoPC/ah1YhWIo6dbuk6ze8x3xLx8pumDEYywXg=\n=uVrU\n-----END PGP SIGNATURE-----",
        "payload": "tree a8f86d51e6e0b40a5e0cb1cd0b8a23832e397f32\nparent 0ee914ba9e5960763c7bb380b566ee481446f97a\nauthor fanquake <fanquake@gmail.com> 1574721091 -0500\ncommitter fanquake <fanquake@gmail.com> 1574780107 -0500\n\nutil: make ScheduleBatchPriority advisory only\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0ee914ba9e5960763c7bb380b566ee481446f97a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ee914ba9e5960763c7bb380b566ee481446f97a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ee914ba9e5960763c7bb380b566ee481446f97a"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 3,
      "deletions": 9
    },
    "files": [
      {
        "sha": "563ff6a54b35d58b5bf30d9b1604dcc72541709b",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
        "patch": "@@ -1126,17 +1126,13 @@ fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific)\n     return fs::absolute(path, GetDataDir(net_specific));\n }\n \n-int ScheduleBatchPriority()\n+void ScheduleBatchPriority()\n {\n #ifdef SCHED_BATCH\n     const static sched_param param{};\n-    if (int ret = pthread_setschedparam(pthread_self(), SCHED_BATCH, &param)) {\n+    if (pthread_setschedparam(pthread_self(), SCHED_BATCH, &param) != 0) {\n         LogPrintf(\"Failed to pthread_setschedparam: %s\\n\", strerror(errno));\n-        return ret;\n     }\n-    return 0;\n-#else\n-    return 1;\n #endif\n }\n "
      },
      {
        "sha": "82903b5187d8488a27eeb415d516d616053f3883",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
        "patch": "@@ -367,10 +367,8 @@ std::string CopyrightHolders(const std::string& strPrefix);\n  * On platforms that support it, tell the kernel the calling thread is\n  * CPU-intensive and non-interactive. See SCHED_BATCH in sched(7) for details.\n  *\n- * @return The return value of sched_setschedule(), or 1 on systems without\n- * sched_setschedule().\n  */\n-int ScheduleBatchPriority();\n+void ScheduleBatchPriority();\n \n namespace util {\n "
      }
    ]
  },
  {
    "sha": "4fb82e916b3b92c14443db23d7f606eb02cf1654",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZmI4MmU5MTZiM2I5MmMxNDQ0M2RiMjNkN2Y2MDZlYjAyY2YxNjU0",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-26T14:56:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-11-26T15:53:40Z"
      },
      "message": "Merge #17567: gui: remove macOS start on login code\n\n27d82b63fb8869716d2f103fd381c2413bde4d1b gui: remove macOS start on login code (fanquake)\n\nPull request description:\n\n  The macOS startup item code was disabled for builds targeting macOS >\n  `10.11` in #15208. Now that we require macOS `10.12` as a minimum (#17550),\n  we can remove the startup item code entirely. The API we were using, `LSSharedFileListItemCopyResolvedURL`, `LSSharedFileListCopySnapshot` etc,\n  was removed in macOS `10.12` SDK.\n\nACKs for top commit:\n  jonasschnelli:\n    utACK 27d82b63fb8869716d2f103fd381c2413bde4d1b\n  jonasschnelli:\n    Tested ACK 27d82b63fb8869716d2f103fd381c2413bde4d1b - successfully compiled on 10.15.1\n\nTree-SHA512: 7420757b91c7820e6a63280887155394547134a9cebcf3721af0284da23292627f94cd431241e033075b3fd86d79ace3ebf1b25d17763acbf71e07a742395409",
      "tree": {
        "sha": "20946a2fb406566a82602b541ebaf7334bb6f41e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/20946a2fb406566a82602b541ebaf7334bb6f41e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4fb82e916b3b92c14443db23d7f606eb02cf1654",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3dSoQACgkQLuufXMCV\nJsGziw/+M2RRracb8L9+NU9d8Vnm3VFwWCHiuGeponuGFvDXr7sj/n5QtVNVG5Y5\nbKuQaQDAtgrBSQM1VmgC54ovVNq+Ec8eTgWBJTM8Y88Xg5ocj0qtHTVWwtYLX0yU\ndSHPXa67yRF4tnsBWl8/WHNXCGttGpf5Mv+lqGZ5aWmpu3fOW/v0U5JvFmMB9iNU\n30nTVO/zv8vXNS5Lp8xtLI4vwaNne3T/Cq87OHtDPJFMthxLUL1sYRxnvha5Ijuw\nZFXEJARwbsOuRWFDtJsZKtKLrDgcmpZc6uDvq30sDs/fSrgX3Mwvx5ftg03YrSKI\nSRNTqBS6HIPjTYO2wjkW1RjNjef859gNYuYMVsHgWdOXCSLKrVf0sWjMmEPnxS+v\n8+3tRyg9+PEJiLyEOrA+9ASCzWz2PzJMpSpFWNx8gpXIBxuMOzeFVto9pzuI5IIo\nfVsNsv40PHmKE8OtwEYHjltJorjgtkAyzYoFwLJb/+1lsIF6bJIVehJvQA8gEG2/\n2s9pxUtPqGU40SEakz4CsFq72DMhePKjEDrfQvXST/yiB6QPi7tH+xBnb4EBhlbf\ndCFobSIX6WYZjWLsAg3sPhLenggwhMUoX2j1aAyMyP91QIi1DIkyZ3hYmzi30obv\n7zEiZ25UufoIWK2svKSIoD3x/gXQT1HaBUQcdjqGnGRDnL8bhmg=\n=Mt5e\n-----END PGP SIGNATURE-----",
        "payload": "tree 20946a2fb406566a82602b541ebaf7334bb6f41e\nparent f2ab1309619b995ce9acb30bf0d1ec8526c435ad\nparent 27d82b63fb8869716d2f103fd381c2413bde4d1b\nauthor fanquake <fanquake@gmail.com> 1574780165 -0500\ncommitter fanquake <fanquake@gmail.com> 1574783620 -0500\n\nMerge #17567: gui: remove macOS start on login code\n\n27d82b63fb8869716d2f103fd381c2413bde4d1b gui: remove macOS start on login code (fanquake)\n\nPull request description:\n\n  The macOS startup item code was disabled for builds targeting macOS >\n  `10.11` in #15208. Now that we require macOS `10.12` as a minimum (#17550),\n  we can remove the startup item code entirely. The API we were using, `LSSharedFileListItemCopyResolvedURL`, `LSSharedFileListCopySnapshot` etc,\n  was removed in macOS `10.12` SDK.\n\nACKs for top commit:\n  jonasschnelli:\n    utACK 27d82b63fb8869716d2f103fd381c2413bde4d1b\n  jonasschnelli:\n    Tested ACK 27d82b63fb8869716d2f103fd381c2413bde4d1b - successfully compiled on 10.15.1\n\nTree-SHA512: 7420757b91c7820e6a63280887155394547134a9cebcf3721af0284da23292627f94cd431241e033075b3fd86d79ace3ebf1b25d17763acbf71e07a742395409\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fb82e916b3b92c14443db23d7f606eb02cf1654",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4fb82e916b3b92c14443db23d7f606eb02cf1654",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fb82e916b3b92c14443db23d7f606eb02cf1654/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2ab1309619b995ce9acb30bf0d1ec8526c435ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2ab1309619b995ce9acb30bf0d1ec8526c435ad"
      },
      {
        "sha": "27d82b63fb8869716d2f103fd381c2413bde4d1b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27d82b63fb8869716d2f103fd381c2413bde4d1b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27d82b63fb8869716d2f103fd381c2413bde4d1b"
      }
    ],
    "stats": {
      "total": 90,
      "additions": 3,
      "deletions": 87
    },
    "files": [
      {
        "sha": "07caf0e53a2649ea4de68ee5494ef581c21a02ec",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fb82e916b3b92c14443db23d7f606eb02cf1654/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fb82e916b3b92c14443db23d7f606eb02cf1654/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=4fb82e916b3b92c14443db23d7f606eb02cf1654",
        "patch": "@@ -90,6 +90,8 @@ Low-level Changes section below.\n GUI changes\n -----------\n \n+- The \"Start Bitcoin Core on system login\" option has been removed on macOS.\n+\n Wallet\n ------\n "
      },
      {
        "sha": "2bb95354415b54f88e4ead96cdff9637378f7de0",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 84,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fb82e916b3b92c14443db23d7f606eb02cf1654/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fb82e916b3b92c14443db23d7f606eb02cf1654/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=4fb82e916b3b92c14443db23d7f606eb02cf1654",
        "patch": "@@ -54,10 +54,7 @@\n #include <QUrlQuery>\n \n #if defined(Q_OS_MAC)\n-#pragma GCC diagnostic push\n-#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n \n-#include <CoreServices/CoreServices.h>\n #include <QProcess>\n \n void ForceActivation();\n@@ -691,87 +688,6 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n     return true;\n }\n \n-\n-#elif defined(Q_OS_MAC) && defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED <= 101100\n-// based on: https://github.com/Mozketo/LaunchAtLoginController/blob/master/LaunchAtLoginController.m\n-\n-LSSharedFileListItemRef findStartupItemInList(CFArrayRef listSnapshot, LSSharedFileListRef list, CFURLRef findUrl)\n-{\n-    if (listSnapshot == nullptr) {\n-        return nullptr;\n-    }\n-\n-    // loop through the list of startup items and try to find the bitcoin app\n-    for(int i = 0; i < CFArrayGetCount(listSnapshot); i++) {\n-        LSSharedFileListItemRef item = (LSSharedFileListItemRef)CFArrayGetValueAtIndex(listSnapshot, i);\n-        UInt32 resolutionFlags = kLSSharedFileListNoUserInteraction | kLSSharedFileListDoNotMountVolumes;\n-        CFURLRef currentItemURL = nullptr;\n-\n-#if defined(MAC_OS_X_VERSION_MAX_ALLOWED) && MAC_OS_X_VERSION_MAX_ALLOWED >= 10100\n-        if(&LSSharedFileListItemCopyResolvedURL)\n-            currentItemURL = LSSharedFileListItemCopyResolvedURL(item, resolutionFlags, nullptr);\n-#if defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED < 10100\n-        else\n-            LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n-#endif\n-#else\n-        LSSharedFileListItemResolve(item, resolutionFlags, &currentItemURL, nullptr);\n-#endif\n-\n-        if(currentItemURL) {\n-            if (CFEqual(currentItemURL, findUrl)) {\n-                // found\n-                CFRelease(currentItemURL);\n-                return item;\n-            }\n-            CFRelease(currentItemURL);\n-        }\n-    }\n-    return nullptr;\n-}\n-\n-bool GetStartOnSystemStartup()\n-{\n-    CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(loginItems, nullptr);\n-    bool res = (findStartupItemInList(listSnapshot, loginItems, bitcoinAppUrl) != nullptr);\n-    CFRelease(bitcoinAppUrl);\n-    CFRelease(loginItems);\n-    CFRelease(listSnapshot);\n-    return res;\n-}\n-\n-bool SetStartOnSystemStartup(bool fAutoStart)\n-{\n-    CFURLRef bitcoinAppUrl = CFBundleCopyBundleURL(CFBundleGetMainBundle());\n-    if (bitcoinAppUrl == nullptr) {\n-        return false;\n-    }\n-\n-    LSSharedFileListRef loginItems = LSSharedFileListCreate(nullptr, kLSSharedFileListSessionLoginItems, nullptr);\n-    CFArrayRef listSnapshot = LSSharedFileListCopySnapshot(loginItems, nullptr);\n-    LSSharedFileListItemRef foundItem = findStartupItemInList(listSnapshot, loginItems, bitcoinAppUrl);\n-\n-    if(fAutoStart && !foundItem) {\n-        // add bitcoin app to startup item list\n-        LSSharedFileListInsertItemURL(loginItems, kLSSharedFileListItemBeforeFirst, nullptr, nullptr, bitcoinAppUrl, nullptr, nullptr);\n-    }\n-    else if(!fAutoStart && foundItem) {\n-        // remove item\n-        LSSharedFileListItemRemove(loginItems, foundItem);\n-    }\n-\n-    CFRelease(bitcoinAppUrl);\n-    CFRelease(loginItems);\n-    CFRelease(listSnapshot);\n-    return true;\n-}\n-#pragma GCC diagnostic pop\n #else\n \n bool GetStartOnSystemStartup() { return false; }"
      },
      {
        "sha": "d48c537c75a32325c2bd7c7260a2bb220613f130",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4fb82e916b3b92c14443db23d7f606eb02cf1654/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4fb82e916b3b92c14443db23d7f606eb02cf1654/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=4fb82e916b3b92c14443db23d7f606eb02cf1654",
        "patch": "@@ -71,12 +71,10 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n #ifdef Q_OS_MAC\n     /* remove Window tab on Mac */\n     ui->tabWidget->removeTab(ui->tabWidget->indexOf(ui->tabWindow));\n-#if  defined(MAC_OS_X_VERSION_MIN_REQUIRED) && MAC_OS_X_VERSION_MIN_REQUIRED > 101100\n-    /* hide launch at startup option if compiled against macOS > 10.11 (removed API) */\n+    /* hide launch at startup option on macOS */\n     ui->bitcoinAtStartup->setVisible(false);\n     ui->verticalLayout_Main->removeWidget(ui->bitcoinAtStartup);\n     ui->verticalLayout_Main->removeItem(ui->horizontalSpacer_0_Main);\n-#endif\n #endif\n \n     /* remove Wallet tab in case of -disablewallet */"
      }
    ]
  },
  {
    "sha": "d8a66626d63135fd245d5afc524b88b9a94d208b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGE2NjYyNmQ2MzEzNWZkMjQ1ZDVhZmM1MjRiODhiOWE5NGQyMDhi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-26T15:57:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-26T16:11:16Z"
      },
      "message": "Merge #17283: rpc: improve getaddressinfo test coverage, help, code docs\n\n33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151 test: add rpc getaddressinfo labels test coverage (Jon Atack)\n0f3539ac6d772fc646b5f184fa1efe77bf632f6a test: add listlabels test in wallet_labels.py (Jon Atack)\n1388de83900eaced906d369fe9e8887ae74b2dcf rpc: add getaddressinfo code documentation (Jon Atack)\n2ee0cb3330ccf70f0540cb42370796e32eff1569 rpc: update getaddressinfo RPCExamples to bech32 (Jon Atack)\n8d1ed0c263f8cdff7189f02040b5d02238d93da0 rpc: clarify label vs labels in getaddressinfo RPCHelpman (Jon Atack)\n5a0ed850700dfb19167d40b38f80313bd5e427ca rpc: improve getaddressinfo RPCHelpman content (Jon Atack)\n70cda342cd20d0e0cd9f28405457544036968f2d rpc: improve getaddressinfo RPCHelpman formatting (Jon Atack)\n\nPull request description:\n\n  This PR is a continuation of the work in https://github.com/bitcoin/bitcoin/pull/12892.\n\n  Main motivations:\n  - There is currently no test coverage for the getaddressinfo `labels` response. Coverage here is a prerequisite before deprecating the `label` response or adding multiple labels per address.\n  - `bitcoin-cli help getaddressinfo` returns a few content errors, difficult-to-read formatting, and no explanation why it returns both `label` and `labels` and how they relate, which can be confusing for application developers.\n\n  Changes by order of commits:\n  - [x] improve/fix getaddressinfo RPCHelpman layout formatting\n  - [x] improve/fix getaddressinfo RPCHelpman content\n  - [x] clarify the `label` and `labels` fields in getaddressinfo RPCHelpman\n  - [x] update getaddressinfo RPCExamples addresses to bech32\n  - [x] add getaddressinfo code docs\n  - [x] add a `listlabels` test assertion in wallet_labels.py\n  - [x] add missing getaddressinfo `labels` test coverage and improve the existing `label` tests\n\n  Here are gists of the CLI help output:\n  [`bitcoin-cli help getaddressinfo` before this PR](https://gist.github.com/jonatack/022af5221a85c069780359a22643c810)\n  [`bitcoin-cli help getaddressinfo` after this PR](https://gist.github.com/jonatack/4ee5f6abc62a3d99269570206a5f90ba)\n\n  It seems we ought to begin a deprecation process for the getaddressinfo `label` field? If yes, I have a follow-up ready. _--> EDIT: Deprecation follow-ups #17578 and #17585 now build on this PR._\n\nACKs for top commit:\n  fjahr:\n    Re-ACK 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151\n  jnewbery:\n    ACK 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151.\n\nTree-SHA512: a001aa863090ec2566a31059477945b1c303ebeb430b33472f8b150e420fa5742fc33bca9d95571746395b607f43f6078dd5b53e238ac1f3fc648b51c8f79a07",
      "tree": {
        "sha": "d70302fc2deecf8e9107943c207e3eac9ea0f64f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d70302fc2deecf8e9107943c207e3eac9ea0f64f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8a66626d63135fd245d5afc524b88b9a94d208b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3dTqQACgkQHkrtYphs\n0l08Zgf9FwuR1O3UYX78nNdCFOqHkS2eZ3so/CpSBnxGX/y3mnVHK1a5VFWrIWxk\nKHZSLAWxpPGbQOwryDDGmbGxvLE1ZSD/k46gGVkuISIqHCiONQLuTfrLm6lYugP0\n9KyqF4FOxcX8ZCkoMrIXZo30Wu/6JPMcV9Gl9fRovWnmOxM395Cn+5rseINDr6Tt\nbgDlKsGS696Cm7MRqth5W1EuIRrq0R+F2gKK+Ena60ce4yHKB/74RuC548JqWJ11\nQHhxrqBcDX7wvrgBho6Lowg2VcRYoRtMsQJU6nzmtP6CeexDDACnQ+t9ghJ5+C6m\nUko830A0on9brVdAvymf8QG4//Gktw==\n=FOyE\n-----END PGP SIGNATURE-----",
        "payload": "tree d70302fc2deecf8e9107943c207e3eac9ea0f64f\nparent 4fb82e916b3b92c14443db23d7f606eb02cf1654\nparent 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574783843 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574784676 +0100\n\nMerge #17283: rpc: improve getaddressinfo test coverage, help, code docs\n\n33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151 test: add rpc getaddressinfo labels test coverage (Jon Atack)\n0f3539ac6d772fc646b5f184fa1efe77bf632f6a test: add listlabels test in wallet_labels.py (Jon Atack)\n1388de83900eaced906d369fe9e8887ae74b2dcf rpc: add getaddressinfo code documentation (Jon Atack)\n2ee0cb3330ccf70f0540cb42370796e32eff1569 rpc: update getaddressinfo RPCExamples to bech32 (Jon Atack)\n8d1ed0c263f8cdff7189f02040b5d02238d93da0 rpc: clarify label vs labels in getaddressinfo RPCHelpman (Jon Atack)\n5a0ed850700dfb19167d40b38f80313bd5e427ca rpc: improve getaddressinfo RPCHelpman content (Jon Atack)\n70cda342cd20d0e0cd9f28405457544036968f2d rpc: improve getaddressinfo RPCHelpman formatting (Jon Atack)\n\nPull request description:\n\n  This PR is a continuation of the work in https://github.com/bitcoin/bitcoin/pull/12892.\n\n  Main motivations:\n  - There is currently no test coverage for the getaddressinfo `labels` response. Coverage here is a prerequisite before deprecating the `label` response or adding multiple labels per address.\n  - `bitcoin-cli help getaddressinfo` returns a few content errors, difficult-to-read formatting, and no explanation why it returns both `label` and `labels` and how they relate, which can be confusing for application developers.\n\n  Changes by order of commits:\n  - [x] improve/fix getaddressinfo RPCHelpman layout formatting\n  - [x] improve/fix getaddressinfo RPCHelpman content\n  - [x] clarify the `label` and `labels` fields in getaddressinfo RPCHelpman\n  - [x] update getaddressinfo RPCExamples addresses to bech32\n  - [x] add getaddressinfo code docs\n  - [x] add a `listlabels` test assertion in wallet_labels.py\n  - [x] add missing getaddressinfo `labels` test coverage and improve the existing `label` tests\n\n  Here are gists of the CLI help output:\n  [`bitcoin-cli help getaddressinfo` before this PR](https://gist.github.com/jonatack/022af5221a85c069780359a22643c810)\n  [`bitcoin-cli help getaddressinfo` after this PR](https://gist.github.com/jonatack/4ee5f6abc62a3d99269570206a5f90ba)\n\n  It seems we ought to begin a deprecation process for the getaddressinfo `label` field? If yes, I have a follow-up ready. _--> EDIT: Deprecation follow-ups #17578 and #17585 now build on this PR._\n\nACKs for top commit:\n  fjahr:\n    Re-ACK 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151\n  jnewbery:\n    ACK 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151.\n\nTree-SHA512: a001aa863090ec2566a31059477945b1c303ebeb430b33472f8b150e420fa5742fc33bca9d95571746395b607f43f6078dd5b53e238ac1f3fc648b51c8f79a07\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a66626d63135fd245d5afc524b88b9a94d208b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a66626d63135fd245d5afc524b88b9a94d208b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a66626d63135fd245d5afc524b88b9a94d208b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4fb82e916b3b92c14443db23d7f606eb02cf1654",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4fb82e916b3b92c14443db23d7f606eb02cf1654",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4fb82e916b3b92c14443db23d7f606eb02cf1654"
      },
      {
        "sha": "33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151"
      }
    ],
    "stats": {
      "total": 178,
      "additions": 118,
      "deletions": 60
    },
    "files": [
      {
        "sha": "d906f6ddf072e8f9d87fa621b6af80e1cdd4c0b7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 36,
        "changes": 95,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -951,7 +951,7 @@ static UniValue addmultisigaddress(const JSONRPCRequest& request)\n     }\n \n             RPCHelpMan{\"addmultisigaddress\",\n-                \"\\nAdd a nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n+                \"\\nAdd an nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n                 \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n                 \"This functionality is only intended for use with non-watchonly addresses.\\n\"\n                 \"See `importaddress` for watchonly p2sh address support.\\n\"\n@@ -3709,52 +3709,57 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n     }\n \n             RPCHelpMan{\"getaddressinfo\",\n-                \"\\nReturn information about the given bitcoin address. Some information requires the address\\n\"\n-                \"to be in the wallet.\\n\",\n+                \"\\nReturn information about the given bitcoin address.\\n\"\n+                \"Some of the information will only be present if the address is in the active wallet.\\n\",\n                 {\n-                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address to get the information of.\"},\n+                    {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The bitcoin address for which to get information.\"},\n                 },\n                 RPCResult{\n             \"{\\n\"\n-            \"  \\\"address\\\" : \\\"address\\\",        (string) The bitcoin address validated\\n\"\n-            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",       (string) The hex-encoded scriptPubKey generated by the address\\n\"\n-            \"  \\\"ismine\\\" : true|false,        (boolean) If the address is yours or not\\n\"\n-            \"  \\\"iswatchonly\\\" : true|false,   (boolean) If the address is watchonly\\n\"\n-            \"  \\\"solvable\\\" : true|false,      (boolean) Whether we know how to spend coins sent to this address, ignoring the possible lack of private keys\\n\"\n-            \"  \\\"desc\\\" : \\\"desc\\\",            (string, optional) A descriptor for spending coins sent to this address (only when solvable)\\n\"\n-            \"  \\\"isscript\\\" : true|false,      (boolean) If the key is a script\\n\"\n-            \"  \\\"ischange\\\" : true|false,      (boolean) If the address was used for change output\\n\"\n-            \"  \\\"iswitness\\\" : true|false,     (boolean) If the address is a witness address\\n\"\n-            \"  \\\"witness_version\\\" : version   (numeric, optional) The version number of the witness program\\n\"\n-            \"  \\\"witness_program\\\" : \\\"hex\\\"     (string, optional) The hex value of the witness program\\n\"\n-            \"  \\\"script\\\" : \\\"type\\\"             (string, optional) The output script type. Only if \\\"isscript\\\" is true and the redeemscript is known. Possible types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash, witness_v0_scripthash, witness_unknown\\n\"\n-            \"  \\\"hex\\\" : \\\"hex\\\",                (string, optional) The redeemscript for the p2sh address\\n\"\n-            \"  \\\"pubkeys\\\"                     (string, optional) Array of pubkeys associated with the known redeemscript (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n+            \"  \\\"address\\\" : \\\"address\\\",              (string) The bitcoin address validated.\\n\"\n+            \"  \\\"scriptPubKey\\\" : \\\"hex\\\",             (string) The hex-encoded scriptPubKey generated by the address.\\n\"\n+            \"  \\\"ismine\\\" : true|false,              (boolean) If the address is yours.\\n\"\n+            \"  \\\"iswatchonly\\\" : true|false,         (boolean) If the address is watchonly.\\n\"\n+            \"  \\\"solvable\\\" : true|false,            (boolean) If we know how to spend coins sent to this address, ignoring the possible lack of private keys.\\n\"\n+            \"  \\\"desc\\\" : \\\"desc\\\",                    (string, optional) A descriptor for spending coins sent to this address (only when solvable).\\n\"\n+            \"  \\\"isscript\\\" : true|false,            (boolean) If the key is a script.\\n\"\n+            \"  \\\"ischange\\\" : true|false,            (boolean) If the address was used for change output.\\n\"\n+            \"  \\\"iswitness\\\" : true|false,           (boolean) If the address is a witness address.\\n\"\n+            \"  \\\"witness_version\\\" : version         (numeric, optional) The version number of the witness program.\\n\"\n+            \"  \\\"witness_program\\\" : \\\"hex\\\"           (string, optional) The hex value of the witness program.\\n\"\n+            \"  \\\"script\\\" : \\\"type\\\"                   (string, optional) The output script type. Only if isscript is true and the redeemscript is known. Possible\\n\"\n+            \"                                                         types: nonstandard, pubkey, pubkeyhash, scripthash, multisig, nulldata, witness_v0_keyhash,\\n\"\n+            \"                                                         witness_v0_scripthash, witness_unknown.\\n\"\n+            \"  \\\"hex\\\" : \\\"hex\\\",                      (string, optional) The redeemscript for the p2sh address.\\n\"\n+            \"  \\\"pubkeys\\\"                           (array, optional) Array of pubkeys associated with the known redeemscript (only if script is multisig).\\n\"\n             \"    [\\n\"\n-            \"      \\\"pubkey\\\"\\n\"\n+            \"      \\\"pubkey\\\" (string)\\n\"\n             \"      ,...\\n\"\n             \"    ]\\n\"\n-            \"  \\\"sigsrequired\\\" : xxxxx        (numeric, optional) Number of signatures required to spend multisig output (only if \\\"script\\\" is \\\"multisig\\\")\\n\"\n-            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",    (string, optional) The hex value of the raw public key, for single-key addresses (possibly embedded in P2SH or P2WSH)\\n\"\n-            \"  \\\"embedded\\\" : {...},           (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. It includes all getaddressinfo output fields for the embedded address, excluding metadata (\\\"timestamp\\\", \\\"hdkeypath\\\", \\\"hdseedid\\\") and relation to the wallet (\\\"ismine\\\", \\\"iswatchonly\\\").\\n\"\n-            \"  \\\"iscompressed\\\" : true|false,  (boolean, optional) If the pubkey is compressed\\n\"\n-            \"  \\\"label\\\" :  \\\"label\\\"         (string) The label associated with the address, \\\"\\\" is the default label\\n\"\n-            \"  \\\"timestamp\\\" : timestamp,      (number, optional) The creation time of the key if available in seconds since epoch (Jan 1 1970 GMT)\\n\"\n-            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"       (string, optional) The HD keypath if the key is HD and available\\n\"\n-            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"      (string, optional) The Hash160 of the HD seed\\n\"\n-            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingperint of the master key.\\n\"\n-            \"  \\\"labels\\\"                      (object) Array of labels associated with the address.\\n\"\n+            \"  \\\"sigsrequired\\\" : xxxxx              (numeric, optional) The number of signatures required to spend multisig output (only if script is multisig).\\n\"\n+            \"  \\\"pubkey\\\" : \\\"publickeyhex\\\",          (string, optional) The hex value of the raw public key for single-key addresses (possibly embedded in P2SH or P2WSH).\\n\"\n+            \"  \\\"embedded\\\" : {...},                 (object, optional) Information about the address embedded in P2SH or P2WSH, if relevant and known. Includes all\\n\"\n+            \"                                                         getaddressinfo output fields for the embedded address, excluding metadata (timestamp, hdkeypath,\\n\"\n+            \"                                                         hdseedid) and relation to the wallet (ismine, iswatchonly).\\n\"\n+            \"  \\\"iscompressed\\\" : true|false,        (boolean, optional) If the pubkey is compressed.\\n\"\n+            \"  \\\"label\\\" :  \\\"label\\\"                  (string) The label associated with the address. Defaults to \\\"\\\". Equivalent to the name field in the labels array.\\n\"\n+            \"  \\\"timestamp\\\" : timestamp,            (number, optional) The creation time of the key if available, expressed in seconds since Epoch Time (Jan 1 1970 GMT).\\n\"\n+            \"  \\\"hdkeypath\\\" : \\\"keypath\\\"             (string, optional) The HD keypath, if the key is HD and available.\\n\"\n+            \"  \\\"hdseedid\\\" : \\\"<hash160>\\\"            (string, optional) The Hash160 of the HD seed.\\n\"\n+            \"  \\\"hdmasterfingerprint\\\" : \\\"<hash160>\\\" (string, optional) The fingerprint of the master key.\\n\"\n+            \"  \\\"labels\\\"                            (object) An array of labels associated with the address. Currently limited to one label but returned\\n\"\n+            \"                                               as an array to keep the API stable if multiple labels are enabled in the future.\\n\"\n             \"    [\\n\"\n             \"      { (json object of label data)\\n\"\n-            \"        \\\"name\\\": \\\"labelname\\\" (string) The label\\n\"\n-            \"        \\\"purpose\\\": \\\"string\\\" (string) Purpose of address (\\\"send\\\" for sending address, \\\"receive\\\" for receiving address)\\n\"\n+            \"        \\\"name\\\": \\\"label name\\\" (string) The label name. Defaults to \\\"\\\". Equivalent to the label field above.\\n\"\n+            \"        \\\"purpose\\\": \\\"purpose\\\" (string) The purpose of the associated address (send or receive).\\n\"\n             \"      },...\\n\"\n             \"    ]\\n\"\n             \"}\\n\"\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n-            + HelpExampleRpc(\"getaddressinfo\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n+                    HelpExampleCli(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\") +\n+                    HelpExampleRpc(\"getaddressinfo\", \"\\\"bc1q09vm5lfy0j5reeulh4x5752q25uqqvz34hufdl\\\"\")\n                 },\n             }.Check(request);\n \n@@ -3773,23 +3778,39 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n \n     CScript scriptPubKey = GetScriptForDestination(dest);\n     ret.pushKV(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end()));\n+\n     const SigningProvider* provider = pwallet->GetSigningProvider(scriptPubKey);\n \n     isminetype mine = pwallet->IsMine(dest);\n     ret.pushKV(\"ismine\", bool(mine & ISMINE_SPENDABLE));\n+\n     bool solvable = provider && IsSolvable(*provider, scriptPubKey);\n     ret.pushKV(\"solvable\", solvable);\n+\n     if (solvable) {\n        ret.pushKV(\"desc\", InferDescriptor(scriptPubKey, *provider)->ToString());\n     }\n+\n     ret.pushKV(\"iswatchonly\", bool(mine & ISMINE_WATCH_ONLY));\n+\n+    // Return DescribeWalletAddress fields.\n+    // Always returned: isscript, ischange, iswitness.\n+    // Optional: witness_version, witness_program, script, hex, pubkeys (array),\n+    // sigsrequired, pubkey, embedded, iscompressed.\n     UniValue detail = DescribeWalletAddress(pwallet, dest);\n     ret.pushKVs(detail);\n+\n+    // Return label field if existing. Currently only one label can be\n+    // associated with an address, so the label should be equivalent to the\n+    // value of the name key/value pair in the labels hash array below.\n     if (pwallet->mapAddressBook.count(dest)) {\n         ret.pushKV(\"label\", pwallet->mapAddressBook[dest].name);\n     }\n+\n     ret.pushKV(\"ischange\", pwallet->IsChange(scriptPubKey));\n \n+    // Fetch KeyMetadata, if present, for the timestamp, hdkeypath, hdseedid,\n+    // and hdmasterfingerprint fields.\n     ScriptPubKeyMan* spk_man = pwallet->GetScriptPubKeyMan(scriptPubKey);\n     if (spk_man) {\n         if (const CKeyMetadata* meta = spk_man->GetMetadata(dest)) {\n@@ -3802,9 +3823,11 @@ UniValue getaddressinfo(const JSONRPCRequest& request)\n         }\n     }\n \n-    // Currently only one label can be associated with an address, return an array\n-    // so the API remains stable if we allow multiple labels to be associated with\n-    // an address.\n+    // Return a labels array containing a hash of key/value pairs for the label\n+    // name and address purpose. The name value is equivalent to the label field\n+    // above. Currently only one label can be associated with an address, but we\n+    // return an array so the API remains stable if we allow multiple labels to\n+    // be associated with an address in the future.\n     UniValue labels(UniValue::VARR);\n     std::map<CTxDestination, CAddressBookData>::iterator mi = pwallet->mapAddressBook.find(dest);\n     if (mi != pwallet->mapAddressBook.end()) {"
      },
      {
        "sha": "3d81a61120270b4c4e6422d354579a7d10075100",
        "filename": "test/functional/test_framework/wallet_util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/test_framework/wallet_util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/test_framework/wallet_util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/wallet_util.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -88,6 +88,11 @@ def get_multisig(node):\n                     p2sh_p2wsh_script=CScript([OP_HASH160, witness_script, OP_EQUAL]).hex(),\n                     p2sh_p2wsh_addr=script_to_p2sh_p2wsh(script_code))\n \n+def labels_value(name=\"\", purpose=\"receive\"):\n+    \"\"\"Generate a getaddressinfo labels array from a name and purpose.\n+    Often used as the value of a labels kwarg for calling test_address below.\"\"\"\n+    return [{\"name\": name, \"purpose\": purpose}]\n+\n def test_address(node, address, **kwargs):\n     \"\"\"Get address info for `address` and test whether the returned values are as expected.\"\"\"\n     addr_info = node.getaddressinfo(address)"
      },
      {
        "sha": "130fa3cfaf78dac939055a9a4eac04907eee1f8b",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -15,6 +15,10 @@\n     connect_nodes,\n     wait_until,\n )\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class WalletTest(BitcoinTestFramework):\n@@ -390,7 +394,7 @@ def run_test(self):\n             for label in [u'\u0440\u044b\u0431\u0430', u'\ud834\udd61']:\n                 addr = self.nodes[0].getnewaddress()\n                 self.nodes[0].setlabel(addr, label)\n-                assert_equal(self.nodes[0].getaddressinfo(addr)['label'], label)\n+                test_address(self.nodes[0], addr, label=label, labels=labels_value(name=label))\n                 assert label in self.nodes[0].listlabels()\n         self.nodes[0].rpc.ensure_ascii = True  # restore to default\n "
      },
      {
        "sha": "e356fce46944da2da83e9b07891d51f4693f01aa",
        "filename": "test/functional/wallet_import_with_label.py",
        "status": "modified",
        "additions": 22,
        "deletions": 9,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_import_with_label.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_import_with_label.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_import_with_label.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -11,7 +11,10 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.wallet_util import test_address\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class ImportWithLabel(BitcoinTestFramework):\n@@ -36,7 +39,8 @@ def run_test(self):\n                      address,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=label)\n+                     label=label,\n+                     labels=labels_value(name=label))\n \n         self.log.info(\n             \"Import the watch-only address's private key without a \"\n@@ -47,7 +51,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address,\n-                     label=label)\n+                     label=label,\n+                     labels=labels_value(name=label))\n \n         self.log.info(\n             \"Test importaddress without label and importprivkey with label.\"\n@@ -59,7 +64,8 @@ def run_test(self):\n                      address2,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=\"\")\n+                     label=\"\",\n+                     labels=labels_value())\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -71,7 +77,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address2,\n-                     label=label2)\n+                     label=label2,\n+                     labels=labels_value(name=label2))\n \n         self.log.info(\"Test importaddress with label and importprivkey with label.\")\n         self.log.info(\"Import a watch-only address with a label.\")\n@@ -82,7 +89,8 @@ def run_test(self):\n                      address3,\n                      iswatchonly=True,\n                      ismine=False,\n-                     label=label3_addr)\n+                     label=label3_addr,\n+                     labels=labels_value(name=label3_addr))\n \n         self.log.info(\n             \"Import the watch-only address's private key with a \"\n@@ -94,7 +102,8 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      address3,\n-                     label=label3_priv)\n+                     label=label3_priv,\n+                     labels=labels_value(name=label3_priv))\n \n         self.log.info(\n             \"Test importprivkey won't label new dests with the same \"\n@@ -109,6 +118,7 @@ def run_test(self):\n                      iswatchonly=True,\n                      ismine=False,\n                      label=label4_addr,\n+                     labels=labels_value(name=label4_addr),\n                      embedded=None)\n \n         self.log.info(\n@@ -123,10 +133,13 @@ def run_test(self):\n \n         test_address(self.nodes[1],\n                      embedded_addr,\n-                     label=\"\")\n+                     label=\"\",\n+                     labels=labels_value())\n+\n         test_address(self.nodes[1],\n                      address4,\n-                     label=label4_addr)\n+                     label=label4_addr,\n+                     labels=labels_value(name=label4_addr))\n \n         self.stop_nodes()\n "
      },
      {
        "sha": "5febac5998b75fa5dc04c21076941c57748968c6",
        "filename": "test/functional/wallet_importmulti.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_importmulti.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_importmulti.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importmulti.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -29,6 +29,7 @@\n from test_framework.wallet_util import (\n     get_key,\n     get_multisig,\n+    labels_value,\n     test_address,\n )\n \n@@ -121,7 +122,7 @@ def run_test(self):\n         self.test_importmulti({\"scriptPubKey\": key.p2pkh_script,\n                                \"timestamp\": \"now\",\n                                \"internal\": True,\n-                               \"label\": \"Example label\"},\n+                               \"label\": \"Unsuccessful labelling for internal addresses\"},\n                               success=False,\n                               error_code=-8,\n                               error_message='Internal addresses should not have a label')\n@@ -550,25 +551,27 @@ def run_test(self):\n         self.log.info(\"Should not import a p2sh-p2wpkh address from descriptor without checksum and private key\")\n         self.test_importmulti({\"desc\": \"sh(wpkh(\" + key.pubkey + \"))\",\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\",\n+                               \"label\": \"Unsuccessful P2SH-P2WPKH descriptor import\",\n                                \"keys\": [key.privkey]},\n                               success=False,\n                               error_code=-5,\n                               error_message=\"Missing checksum\")\n \n         # Test importing of a P2SH-P2WPKH address via descriptor + private key\n         key = get_key(self.nodes[0])\n+        p2sh_p2wpkh_label = \"Successful P2SH-P2WPKH descriptor import\"\n         self.log.info(\"Should import a p2sh-p2wpkh address from descriptor and private key\")\n         self.test_importmulti({\"desc\": descsum_create(\"sh(wpkh(\" + key.pubkey + \"))\"),\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\",\n+                               \"label\": p2sh_p2wpkh_label,\n                                \"keys\": [key.privkey]},\n                               success=True)\n         test_address(self.nodes[1],\n                      key.p2sh_p2wpkh_addr,\n                      solvable=True,\n                      ismine=True,\n-                     label=\"Descriptor import test\")\n+                     label=p2sh_p2wpkh_label,\n+                     labels=labels_value(name=p2sh_p2wpkh_label))\n \n         # Test ranged descriptor fails if range is not specified\n         xpriv = \"tprv8ZgxMBicQKsPeuVhWwi6wuMQGfPKi9Li5GtX35jVNknACgqe3CY4g5xgkfDDJcmtF7o1QnxWDRYw4H5P26PXq7sbcUkEqeR4fg3Kxp2tigg\"\n@@ -628,17 +631,19 @@ def run_test(self):\n \n         # Test importing of a P2PKH address via descriptor\n         key = get_key(self.nodes[0])\n+        p2pkh_label = \"P2PKH descriptor import\"\n         self.log.info(\"Should import a p2pkh address from descriptor\")\n         self.test_importmulti({\"desc\": descsum_create(\"pkh(\" + key.pubkey + \")\"),\n                                \"timestamp\": \"now\",\n-                               \"label\": \"Descriptor import test\"},\n+                               \"label\": p2pkh_label},\n                               True,\n                               warnings=[\"Some private keys are missing, outputs will be considered watchonly. If this is intentional, specify the watchonly flag.\"])\n         test_address(self.nodes[1],\n                      key.p2pkh_addr,\n                      solvable=True,\n                      ismine=False,\n-                     label=\"Descriptor import test\")\n+                     label=p2pkh_label,\n+                     labels=labels_value(name=p2pkh_label))\n \n         # Test import fails if both desc and scriptPubKey are provided\n         key = get_key(self.nodes[0])"
      },
      {
        "sha": "27371d43bb4a15512177b2e37125d41d101fe597",
        "filename": "test/functional/wallet_labels.py",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_labels.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_labels.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_labels.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -13,6 +13,10 @@\n \n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal, assert_raises_rpc_error\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n class WalletLabelsTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -152,14 +156,14 @@ def add_receive_address(self, address):\n     def verify(self, node):\n         if self.receive_address is not None:\n             assert self.receive_address in self.addresses\n-\n         for address in self.addresses:\n-            assert_equal(\n-                node.getaddressinfo(address)['labels'][0],\n-                {\"name\": self.name,\n-                 \"purpose\": self.purpose[address]})\n-            assert_equal(node.getaddressinfo(address)['label'], self.name)\n-\n+            test_address(\n+                node,\n+                address,\n+                label=self.name,\n+                labels=labels_value(name=self.name, purpose=self.purpose[address])\n+             )\n+        assert self.name in node.listlabels()\n         assert_equal(\n             node.getaddressesbylabel(self.name),\n             {address: {\"purpose\": self.purpose[address]} for address in self.addresses})"
      },
      {
        "sha": "afd473306d52aea19b4212039a9d4e75798edf41",
        "filename": "test/functional/wallet_listreceivedby.py",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_listreceivedby.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8a66626d63135fd245d5afc524b88b9a94d208b/test/functional/wallet_listreceivedby.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_listreceivedby.py?ref=d8a66626d63135fd245d5afc524b88b9a94d208b",
        "patch": "@@ -11,6 +11,10 @@\n     assert_equal,\n     assert_raises_rpc_error,\n )\n+from test_framework.wallet_util import (\n+    labels_value,\n+    test_address,\n+)\n \n \n class ReceivedByTest(BitcoinTestFramework):\n@@ -127,7 +131,7 @@ def run_test(self):\n         # set pre-state\n         label = ''\n         address = self.nodes[1].getnewaddress()\n-        assert_equal(self.nodes[1].getaddressinfo(address)['label'], label)\n+        test_address(self.nodes[1], address, label=label, labels=labels_value(name=label))\n         received_by_label_json = [r for r in self.nodes[1].listreceivedbylabel() if r[\"label\"] == label][0]\n         balance_by_label = self.nodes[1].getreceivedbylabel(label)\n "
      }
    ]
  },
  {
    "sha": "9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmNmOGNlN2FlMDJiZjE3MGI5YmYwYzI4ODdmZDcwOWQ3NTJjYmY3",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-19T23:33:20Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:46:40Z"
      },
      "message": "Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper\n\nThere is no reason to have Keep/ReturnDestination to be a wrapper for\nKeep/ReturnKey. Instead just make them the same function.",
      "tree": {
        "sha": "4416ea6c352f2c8dabea6aa83864a2cd957bc3d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4416ea6c352f2c8dabea6aa83864a2cd957bc3d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/596f6460f9fd8273665c8754ccd673d93a4f25f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/596f6460f9fd8273665c8754ccd673d93a4f25f0"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 3,
      "deletions": 16
    },
    "files": [
      {
        "sha": "76a678d06a67330610a35eb9f585255b3a97ab54",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "patch": "@@ -274,16 +274,6 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     return true;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t index)\n-{\n-    KeepKey(index);\n-}\n-\n-void LegacyScriptPubKeyMan::ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey)\n-{\n-    ReturnKey(index, internal, pubkey);\n-}\n-\n void LegacyScriptPubKeyMan::MarkUnusedAddresses(const CScript& script)\n {\n     AssertLockHeld(cs_wallet);\n@@ -1096,15 +1086,15 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepKey(int64_t nIndex)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n-void LegacyScriptPubKeyMan::ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n {\n     // Return to key pool\n     {\n@@ -1138,7 +1128,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepKey(nIndex);\n+        KeepDestination(nIndex);\n         result = keypool.vchPubKey;\n     }\n     return true;"
      },
      {
        "sha": "5d366f441ebb79ccbe1b29bc816902ee7be39ce8",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "patch": "@@ -266,9 +266,6 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRequestedInternal);\n \n-    void KeepKey(int64_t nIndex);\n-    void ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey);\n-\n public:\n     bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) override;\n     isminetype IsMine(const CScript& script) const override;"
      }
    ]
  },
  {
    "sha": "65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTgzM2E3NDA3NmNkZGY5ODYwMzdjNmViM2IyOWE5YjlkYmUzMWM1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:52:51Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T16:52:51Z"
      },
      "message": "Add OutputType and CPubKey parameters to KeepDestination\n\nThese need to be added so that LearnRelatedScripts can be called\nfrom within KeepDestination later.",
      "tree": {
        "sha": "785a8a3f8ed8369d8954fd38d6ba2369753cb8f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/785a8a3f8ed8369d8954fd38d6ba2369753cb8f1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f7153a751f08620e0ca63380bba245b9bf1e781b",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -18,7 +18,7 @@ bool LegacyScriptPubKeyMan::GetNewDestination(const OutputType type, CTxDestinat\n \n     // Generate a new key that is added to wallet\n     CPubKey new_key;\n-    if (!GetKeyFromPool(new_key)) {\n+    if (!GetKeyFromPool(new_key, type)) {\n         error = \"Error: Keypool ran out, please call keypoolrefill first\";\n         return false;\n     }\n@@ -1086,7 +1086,7 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type, const CPubKey& pubkey)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n@@ -1112,7 +1112,7 @@ void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, co\n     WalletLogPrintf(\"keypool return %d\\n\", nIndex);\n }\n \n-bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n+bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, const OutputType type, bool internal)\n {\n     if (!CanGetAddresses(internal)) {\n         return false;\n@@ -1128,7 +1128,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepDestination(nIndex);\n+        KeepDestination(nIndex, type, keypool.vchPubKey);\n         result = keypool.vchPubKey;\n     }\n     return true;"
      },
      {
        "sha": "16901952a6b0d8ec9b16a09d5ed836cec7fde910",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -151,7 +151,7 @@ class ScriptPubKeyMan\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n     virtual bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) { return false; }\n-    virtual void KeepDestination(int64_t index) {}\n+    virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n     virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n \n     virtual bool TopUp(unsigned int size = 0) { return false; }\n@@ -248,7 +248,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     std::map<CKeyID, int64_t> m_pool_key_to_index;\n \n     //! Fetches a key from the keypool\n-    bool GetKeyFromPool(CPubKey &key, bool internal = false);\n+    bool GetKeyFromPool(CPubKey &key, const OutputType type, bool internal = false);\n \n     /**\n      * Reserves a key from the keypool and sets nIndex to its index\n@@ -274,7 +274,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n     bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) override;\n-    void KeepDestination(int64_t index) override;\n+    void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n     void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n \n     bool TopUp(unsigned int size = 0) override;"
      },
      {
        "sha": "179e7b39eac15a32c239d2e59a61ef5c5f6310a5",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65833a74076cddf986037c6eb3b29a9b9dbe31c5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "patch": "@@ -3317,7 +3317,7 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->KeepDestination(nIndex);\n+        m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n         m_spk_man->LearnRelatedScripts(vchPubKey, type);\n     }\n     nIndex = -1;"
      }
    ]
  },
  {
    "sha": "ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjMzMGJhZGQ0NTA2N2NiNTIwYjFjZmExODQ0ZjYwYTRjOWYyMDMx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-25T07:19:57Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T18:02:46Z"
      },
      "message": "Default to bnb_used = false as there are many cases where BnB is not used",
      "tree": {
        "sha": "cad0b5bb7362c49534382cf0c6286aa69110f93e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cad0b5bb7362c49534382cf0c6286aa69110f93e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff330badd45067cb520b1cfa1844f60a4c9f2031",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b79caf658019de2c65a53c9e11fd1d2f4c369b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b79caf658019de2c65a53c9e11fd1d2f4c369b6"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 4,
      "deletions": 7
    },
    "files": [
      {
        "sha": "647b381b39471f8d883e9d13af7549b26c9844ce",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff330badd45067cb520b1cfa1844f60a4c9f2031/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff330badd45067cb520b1cfa1844f60a4c9f2031/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "patch": "@@ -2270,12 +2270,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     std::vector<COutput> vCoins(vAvailableCoins);\n     CAmount value_to_select = nTargetValue;\n \n+    // Default to bnb was not used. If we use it, we set it later\n+    bnb_used = false;\n+\n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coin_control.HasSelected() && !coin_control.fAllowOtherInputs)\n     {\n-        // We didn't use BnB here, so set it to false.\n-        bnb_used = false;\n-\n         for (const COutput& out : vCoins)\n         {\n             if (!out.fSpendable)\n@@ -2300,14 +2300,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             const CWalletTx& wtx = it->second;\n             // Clearly invalid input, fail\n             if (wtx.tx->vout.size() <= outpoint.n) {\n-                bnb_used = false;\n                 return false;\n             }\n             // Just to calculate the marginal byte size\n             CInputCoin coin(wtx.tx, outpoint.n, wtx.GetSpendSize(outpoint.n, false));\n             nValueFromPresetInputs += coin.txout.nValue;\n             if (coin.m_input_bytes <= 0) {\n-                bnb_used = false;\n                 return false; // Not solvable, can't estimate size for fee\n             }\n             coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n@@ -2318,7 +2316,6 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             }\n             setPresetCoins.insert(coin);\n         } else {\n-            bnb_used = false;\n             return false; // TODO: Allow non-wallet inputs\n         }\n     }\n@@ -2678,7 +2675,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 }\n \n                 // Choose coins to use\n-                bool bnb_used;\n+                bool bnb_used = false;\n                 if (pick_new_inputs) {\n                     nValueIn = 0;\n                     setCoins.clear();"
      }
    ]
  },
  {
    "sha": "eadd1304c81e0b89178e4cc7630bd31650850c85",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYWRkMTMwNGM4MWUwYjg5MTc4ZTRjYzc2MzBiZDMxNjUwODUwYzg1",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-23T03:21:36Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-11-26T18:02:46Z"
      },
      "message": "tests: Add a test for funding with sufficient preset inputs and subtractFeeFromOutputs",
      "tree": {
        "sha": "5ef912f7e46c08e24d332d8aadf2f7346ab2cfc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5ef912f7e46c08e24d332d8aadf2f7346ab2cfc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eadd1304c81e0b89178e4cc7630bd31650850c85",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eadd1304c81e0b89178e4cc7630bd31650850c85",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eadd1304c81e0b89178e4cc7630bd31650850c85",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eadd1304c81e0b89178e4cc7630bd31650850c85/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff330badd45067cb520b1cfa1844f60a4c9f2031",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff330badd45067cb520b1cfa1844f60a4c9f2031"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6f1ae0d3ba4fbf9188adf2471c1a695469b8bc8b",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eadd1304c81e0b89178e4cc7630bd31650850c85/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eadd1304c81e0b89178e4cc7630bd31650850c85/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=eadd1304c81e0b89178e4cc7630bd31650850c85",
        "patch": "@@ -92,6 +92,7 @@ def run_test(self):\n         self.test_option_feerate()\n         self.test_address_reuse()\n         self.test_option_subtract_fee_from_outputs()\n+        self.test_subtract_fee_with_presets()\n \n     def test_change_position(self):\n         \"\"\"Ensure setting changePosition in fundraw with an exact match is handled properly.\"\"\"\n@@ -741,5 +742,17 @@ def test_option_subtract_fee_from_outputs(self):\n         # The total subtracted from the outputs is equal to the fee.\n         assert_equal(share[0] + share[2] + share[3], result[0]['fee'])\n \n+    def test_subtract_fee_with_presets(self):\n+        self.log.info(\"Test fundrawtxn subtract fee from outputs with preset inputs that are sufficient\")\n+\n+        addr = self.nodes[0].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        vout = find_vout_for_address(self.nodes[0], txid, addr)\n+\n+        rawtx = self.nodes[0].createrawtransaction([{'txid': txid, 'vout': vout}], [{self.nodes[0].getnewaddress(): 5}])\n+        fundedtx = self.nodes[0].fundrawtransaction(rawtx, {'subtractFeeFromOutputs': [0]})\n+        signedtx = self.nodes[0].signrawtransactionwithwallet(fundedtx['hex'])\n+        self.nodes[0].sendrawtransaction(signedtx['hex'])\n+\n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  },
  {
    "sha": "61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MWJiMjFiNDE4MWMwNmI1OTU2YjVkNmYyZjc4MzFlNTZlNGYxY2Y2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-03T19:57:11Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-27T17:25:29Z"
      },
      "message": "script: Enable SC2155 rule for Gitian scripts\n\nAlso pwd command is replaced with $PWD variable everywhere for\nconsistency.",
      "tree": {
        "sha": "be2d55b56a801fa0755ec091c1d1d84360d55596",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/be2d55b56a801fa0755ec091c1d1d84360d55596"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3esg0ACgkQQQEIES5+\nqB9ZQA//TrLKdePhiOxne2c0VOpeSGNwCtY/cbudDFE54B0jZ8SW9fi2Xcxqdnt8\nvvqcQRbLWNZTLeVDO56A65Nm3Th2lmwp7C2I69F/OU3S+QvdUpJdImcekhTPSq8h\npfkyIuyR/D3yBXsEEHpEulKHwfq1TVaWoKvVQjJDLM98X9Ax6ushaMusWieYgPyY\n/SUrcpUZah/WVW3rCRnXjHCDIj/RPavGr2P90ZGKhEf+aw5xiTFJ4FcmyK40xeZK\nOa7X2iJH2+MEne7Wfc1DhkaWqXjhfR90hM7NUtn7fbTrcx6U8IFLpr76WmkZzt3m\nYXoQE+Kxgq/ThqJOuAyP6VkvvZGbCskqcs8DSNR9zJvftW8VqQgOcvCwasebDCCW\nGF09x2P7FWYJCP/Xqt4LafXuC6eml+juoSGnfQdahKbHKvGrbAQ5bRk8F1n66HMU\nYKPeD7cueH5ovoJrhMlisTvycenwS57WBJcoT48FZVod+j7KBSbgbcvIIP3hzmUf\n/dhuvtQBsG6wn1jBng4fGVlnpOirQmghhrNjMqp5SgAzb6X7vlT4MDrO7E8pLEJn\nXue6X5r7F/w+EBOzVoVgp5pOTiaci0BTQoOd2tDNEkDNhWKIwRNTyYVGvL61SbCe\nXYoXpuYzfQ2gFxTf6awFBSzCMqTRsK0z0nd7OosQDS3oLA67Sts=\n=asMF\n-----END PGP SIGNATURE-----",
        "payload": "tree be2d55b56a801fa0755ec091c1d1d84360d55596\nparent 577682d9e8cc07a8db9459a47b01f6c18decba7c\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1572811031 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574875529 +0200\n\nscript: Enable SC2155 rule for Gitian scripts\n\nAlso pwd command is replaced with $PWD variable everywhere for\nconsistency.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "577682d9e8cc07a8db9459a47b01f6c18decba7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/577682d9e8cc07a8db9459a47b01f6c18decba7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/577682d9e8cc07a8db9459a47b01f6c18decba7c"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "e994ab3cf8120c509358c16310619e9a66966101",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -51,7 +51,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=$(pwd)\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -122,7 +122,7 @@ script: |\n   done\n \n   cd bitcoin\n-  BASEPREFIX=$(pwd)/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n@@ -161,7 +161,7 @@ script: |\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=$(pwd)/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "217fa038718062a3661210e41379752a7e9872cf",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -17,7 +17,7 @@ script: |\n \n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n-  export PATH=$(pwd):$PATH\n+  export PATH=\"$PWD\":$PATH\n   FAKETIME_PROGS=\"dmg genisoimage\"\n \n   # Create global faketime wrappers"
      },
      {
        "sha": "39e2064c723b4eb3b380b2d21bcdb0cced08ba98",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -45,7 +45,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=$(pwd)\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -86,7 +86,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=$(pwd)/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n \n   mkdir -p ${BASEPREFIX}/SDKs\n   tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n@@ -125,7 +125,7 @@ script: |\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=$(pwd)/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "245690b03debec50d16c3c2151b3b5479edfc034",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -19,7 +19,7 @@ files:\n script: |\n   set -e -o pipefail\n \n-  BUILD_DIR=$(pwd)\n+  BUILD_DIR=\"$PWD\"\n   SIGDIR=${BUILD_DIR}/signature/win\n   UNSIGNED_DIR=${BUILD_DIR}/unsigned\n "
      },
      {
        "sha": "bb6f3fde1da70c88de19803c8595db986351891a",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -40,7 +40,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=$(pwd)\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -96,7 +96,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=$(pwd)/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n@@ -131,7 +131,7 @@ script: |\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=$(pwd)/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "ce371455ed15fe196598b1de8fb12fbc8050518c",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "patch": "@@ -26,7 +26,6 @@ disabled_gitian=(\n     SC2001 # See if you can use ${variable//search/replace} instead.\n     SC2094 # Make sure not to read and write the same file in the same pipeline.\n     SC2129 # Consider using { cmd1; cmd2; } >> file instead of individual redirects.\n-    SC2155 # Declare and assign separately to avoid masking return values.\n     SC2230 # which is non-standard. Use builtin 'command -v' instead.\n )\n "
      }
    ]
  },
  {
    "sha": "17f81e96486780df5d464487975ecb11b278ec8d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxN2Y4MWU5NjQ4Njc4MGRmNWQ0NjQ0ODc5NzVlY2IxMWIyNzhlYzhk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-03T20:32:50Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-27T17:27:56Z"
      },
      "message": "script: Enable SC2001 rule for Gitian scripts",
      "tree": {
        "sha": "96369d9a631c1996c0c794091120fd1fdf54bb92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96369d9a631c1996c0c794091120fd1fdf54bb92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/17f81e96486780df5d464487975ecb11b278ec8d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3eshwACgkQQQEIES5+\nqB9uaQ/7BMXrhF44EaAqRA9BIb9qqaE2dUqnf+Tg1fcxjxsl3/XVpjp5eMceEqH9\nvykiI1k03I9fnE33NaZ6F8V+ts/TSgDqOEMCGrav0CL20h8nghXhk3csXMgHigbE\nbVnqJ1NWVPBbNm/oSR/qlBedNU6hfNEVeI0m8WRfPS570WjzHScwMYBuvpei5Ec0\ntZWU1091Fznfn4hGW28aUEHNnkXXaXZ1IkvQOvm1ZQ3DWFscVktIpV87ZoIYMPvG\nmhhg6cxqmD0rz2aKl72A8Qxmtb4oAD+HqdSGggxlzMYQn/adqmmyzo4nV3RQ+2Tv\n8NRFpI6PIPc+ukDuizkLkFPy3ZA/ZwRRFqLUaAw6H6EpM71QCFvrd34ixEcW8FYK\nZ9Dtons7QRMzzBZ/QkLfHrqTcTziXQFtPNQjjpWdWEWAR19wE2dtE3qN/D0asBCZ\nTmgQfFhsSEcF3Av75kDNt7MIZHXXoxBO0H/f/0t6zllPw2ZFogWHD9FVxYlYgfzd\nqvFxyJgweoICRkqt974h3CMMW2mij3fLH7aTZDQE/hj7UmqMi4ZTy5PW5xH82FXW\n9oNe6X8v51uLzfHobvl9FVRmiZ7WM/T6s/XwyySU73du5B3wqHkOjDSaGV2GtLT8\nN6ds2xcp3/48w3B5l73q5VLLuR3d++rgLbpDdQWW3/Vg5SjDJiI=\n=CG/Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 96369d9a631c1996c0c794091120fd1fdf54bb92\nparent 61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1572813170 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1574875676 +0200\n\nscript: Enable SC2001 rule for Gitian scripts\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17f81e96486780df5d464487975ecb11b278ec8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/17f81e96486780df5d464487975ecb11b278ec8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17f81e96486780df5d464487975ecb11b278ec8d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4d7e327359cfddd0002a5cc9a3fe40e408b8e4bf",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=17f81e96486780df5d464487975ecb11b278ec8d",
        "patch": "@@ -144,7 +144,8 @@ script: |\n   CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=$(echo bitcoin-*.tar.gz)\n-  DISTNAME=$(echo ${SOURCEDIST} | sed 's/.tar.*//')\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n+\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp"
      },
      {
        "sha": "125fe6e915ced363f45ec7b49b77e47d7d2dcebf",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=17f81e96486780df5d464487975ecb11b278ec8d",
        "patch": "@@ -107,7 +107,7 @@ script: |\n   CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=$(echo bitcoin-*.tar.gz)\n-  DISTNAME=$(echo ${SOURCEDIST} | sed 's/.tar.*//')\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n \n   # Correct tar file order\n   mkdir -p temp"
      },
      {
        "sha": "3bcf08abb85cf31687332b5f28b2b86f7eb1efd5",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=17f81e96486780df5d464487975ecb11b278ec8d",
        "patch": "@@ -37,6 +37,6 @@ script: |\n   make\n   find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n     INFILE=\"$(basename \"${i}\")\"\n-    OUTFILE=\"$(echo \"${INFILE}\" | sed s/-unsigned//)\"\n+    OUTFILE=\"${INFILE/%-unsigned}\"\n     ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n   done"
      },
      {
        "sha": "751204d3662217fe72730dc22b04708741fd4fac",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17f81e96486780df5d464487975ecb11b278ec8d/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=17f81e96486780df5d464487975ecb11b278ec8d",
        "patch": "@@ -114,7 +114,8 @@ script: |\n   CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n   SOURCEDIST=$(echo bitcoin-*.tar.gz)\n-  DISTNAME=$(echo ${SOURCEDIST} | sed 's/.tar.*//')\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n+\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp"
      },
      {
        "sha": "63624e3ae09df90d2edc906c28436faf136aca2e",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/17f81e96486780df5d464487975ecb11b278ec8d/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/17f81e96486780df5d464487975ecb11b278ec8d/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=17f81e96486780df5d464487975ecb11b278ec8d",
        "patch": "@@ -23,7 +23,6 @@ disabled=(\n     SC2162 # read without -r will mangle backslashes.\n )\n disabled_gitian=(\n-    SC2001 # See if you can use ${variable//search/replace} instead.\n     SC2094 # Make sure not to read and write the same file in the same pipeline.\n     SC2129 # Consider using { cmd1; cmd2; } >> file instead of individual redirects.\n     SC2230 # which is non-standard. Use builtin 'command -v' instead."
      }
    ]
  },
  {
    "sha": "73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2I5NmM5NGNiNmMyYWZkZWU3ZjE1MTc2OGE5Njk0NGVjYWY5ZDli",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-27T21:27:56Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-11-27T21:27:56Z"
      },
      "message": "net: Fix uninitialized read in ProcessMessage(...)",
      "tree": {
        "sha": "910ff3e874b203f2e6104df57990422858bdb408",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/910ff3e874b203f2e6104df57990422858bdb408"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b96c94cb6c2afdee7f151768a96944ecaf9d9b/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8a66626d63135fd245d5afc524b88b9a94d208b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a66626d63135fd245d5afc524b88b9a94d208b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a66626d63135fd245d5afc524b88b9a94d208b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3401eb64ca87446b7b820c1b06c36efa91243c54",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73b96c94cb6c2afdee7f151768a96944ecaf9d9b/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73b96c94cb6c2afdee7f151768a96944ecaf9d9b/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
        "patch": "@@ -114,7 +114,7 @@ inline ValidationState::~ValidationState() {};\n \n class TxValidationState : public ValidationState {\n private:\n-    TxValidationResult m_result;\n+    TxValidationResult m_result = TxValidationResult::TX_RESULT_UNSET;\n public:\n     bool Invalid(TxValidationResult result,\n                  const std::string &reject_reason=\"\",\n@@ -129,7 +129,7 @@ class TxValidationState : public ValidationState {\n \n class BlockValidationState : public ValidationState {\n private:\n-    BlockValidationResult m_result;\n+    BlockValidationResult m_result = BlockValidationResult::BLOCK_RESULT_UNSET;\n public:\n     bool Invalid(BlockValidationResult result,\n                  const std::string &reject_reason=\"\","
      }
    ]
  },
  {
    "sha": "1f59885d27a0c4812fb1a2324507e2b2e32057d3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjU5ODg1ZDI3YTBjNDgxMmZiMWEyMzI0NTA3ZTJiMmUzMjA1N2Qz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T09:18:00Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T09:18:22Z"
      },
      "message": "Merge #17361: script: Lint Gitian descriptors with ShellCheck\n\n17f81e96486780df5d464487975ecb11b278ec8d script: Enable SC2001 rule for Gitian scripts (Hennadii Stepanov)\n61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6 script: Enable SC2155 rule for Gitian scripts (Hennadii Stepanov)\n577682d9e8cc07a8db9459a47b01f6c18decba7c script: Enable SC2006 rule for Gitian scripts (Hennadii Stepanov)\n14aded46df289e2d05f9fd79c81f2e8ed68a1487 script: Lint Gitian descriptors with ShellCheck (Hennadii Stepanov)\n\nPull request description:\n\n  This PR extracts shell scripts from Gitian descriptors (`contrib/gitian-descriptors/`) and checks for ShellCheck warnings as any other one.\n\n  Some non-controversial warnings are fixed.\n\nACKs for top commit:\n  practicalswift:\n    ACK 17f81e96486780df5d464487975ecb11b278ec8d -- diff looks correct\n\nTree-SHA512: bdfa3d35bbb65ff634c90835d75c3df63e958b558599771d21366724f5cf64da83a68957d926e926a99c3704b9529e96a17697dc8d9ff3adf7154d9cb1999a8d",
      "tree": {
        "sha": "554d71a47692e5aa9b4954aa3d3e5577fc02daff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/554d71a47692e5aa9b4954aa3d3e5577fc02daff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f59885d27a0c4812fb1a2324507e2b2e32057d3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3fkN4ACgkQHkrtYphs\n0l2TOQgAuxLi2B+s5ACfGwtcqWeJIneftUEqCQAyFNzjKSAC3oTGbQHyxU9ig/rE\ncZGcp1Aund6MBlQdcu85XU5njonu0wM1rG3DJQ6YgbkcU+QvjxIlI/qI/LElQoZy\n/E08YtOonnA5ua7FmVzMwRZ42SGsmvwiyoY4PUbSdxQc/DGmLLEMHTxeeoVN2hti\n+Hhg129S0vDfn+I8s55ieejMjI+ux93B9UrybcInmolYzgeNdgwm+MobotJjczLX\nExhYyxkC7OUXXFaPdwJqWNNNwml5Rl0r1J1kvG6IeyVLVVeZmIVqFkTa2qL1zoEo\n2CGO+fOz+W1TDkFQFRnt6Roxg1Z3lw==\n=t8nS\n-----END PGP SIGNATURE-----",
        "payload": "tree 554d71a47692e5aa9b4954aa3d3e5577fc02daff\nparent d8a66626d63135fd245d5afc524b88b9a94d208b\nparent 17f81e96486780df5d464487975ecb11b278ec8d\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574932680 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574932702 +0100\n\nMerge #17361: script: Lint Gitian descriptors with ShellCheck\n\n17f81e96486780df5d464487975ecb11b278ec8d script: Enable SC2001 rule for Gitian scripts (Hennadii Stepanov)\n61bb21b4181c06b5956b5d6f2f7831e56e4f1cf6 script: Enable SC2155 rule for Gitian scripts (Hennadii Stepanov)\n577682d9e8cc07a8db9459a47b01f6c18decba7c script: Enable SC2006 rule for Gitian scripts (Hennadii Stepanov)\n14aded46df289e2d05f9fd79c81f2e8ed68a1487 script: Lint Gitian descriptors with ShellCheck (Hennadii Stepanov)\n\nPull request description:\n\n  This PR extracts shell scripts from Gitian descriptors (`contrib/gitian-descriptors/`) and checks for ShellCheck warnings as any other one.\n\n  Some non-controversial warnings are fixed.\n\nACKs for top commit:\n  practicalswift:\n    ACK 17f81e96486780df5d464487975ecb11b278ec8d -- diff looks correct\n\nTree-SHA512: bdfa3d35bbb65ff634c90835d75c3df63e958b558599771d21366724f5cf64da83a68957d926e926a99c3704b9529e96a17697dc8d9ff3adf7154d9cb1999a8d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f59885d27a0c4812fb1a2324507e2b2e32057d3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f59885d27a0c4812fb1a2324507e2b2e32057d3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f59885d27a0c4812fb1a2324507e2b2e32057d3/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d8a66626d63135fd245d5afc524b88b9a94d208b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8a66626d63135fd245d5afc524b88b9a94d208b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8a66626d63135fd245d5afc524b88b9a94d208b"
      },
      {
        "sha": "17f81e96486780df5d464487975ecb11b278ec8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/17f81e96486780df5d464487975ecb11b278ec8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/17f81e96486780df5d464487975ecb11b278ec8d"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 65,
      "deletions": 32
    },
    "files": [
      {
        "sha": "8b2d609504d5c0980b128ba28e4da4ee466e01f2",
        "filename": "ci/lint/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/ci/lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/ci/lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/lint/04_install.sh?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -1,13 +1,14 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n export LC_ALL=C\n \n travis_retry pip3 install codespell==1.15.0\n travis_retry pip3 install flake8==3.7.8\n+travis_retry pip3 install yq\n \n SHELLCHECK_VERSION=v0.6.0\n curl -s \"https://storage.googleapis.com/shellcheck/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" | tar --xz -xf - --directory /tmp/"
      },
      {
        "sha": "2b86602a8296fed508d225e5b004c8c040a48d99",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -51,7 +51,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -108,7 +108,7 @@ script: |\n   rm -f ${WRAP_DIR}/${prog}\n   cat << EOF > ${WRAP_DIR}/${prog}\n   #!/usr/bin/env bash\n-  REAL=\"`which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  REAL=\"$(which -a ${prog}-8 | grep -v ${WRAP_DIR}/${prog} | head -1)\"\n   for var in \"\\$@\"\n   do\n     if [ \"\\$var\" = \"-m32\" ]; then\n@@ -123,7 +123,7 @@ script: |\n   done\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n@@ -142,10 +142,11 @@ script: |\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n+\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n@@ -169,7 +170,7 @@ script: |\n     fi\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "2d49493641639cf398b30d0b2df071eca7611aa1",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -17,7 +17,7 @@ script: |\n \n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n+  export PATH=\"$PWD\":$PATH\n   FAKETIME_PROGS=\"dmg genisoimage\"\n \n   # Create global faketime wrappers"
      },
      {
        "sha": "d3a2645c532d63b93c04f493371d0ec81c3f4b10",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -45,7 +45,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -87,7 +87,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n \n   mkdir -p ${BASEPREFIX}/SDKs\n   tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.11.sdk.tar.gz\n@@ -105,10 +105,10 @@ script: |\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n \n   # Correct tar file order\n   mkdir -p temp\n@@ -126,7 +126,7 @@ script: |\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "6a52db1f9f5ba372afe5a6e2cab19492285701fa",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -19,7 +19,7 @@ files:\n script: |\n   set -e -o pipefail\n \n-  BUILD_DIR=`pwd`\n+  BUILD_DIR=\"$PWD\"\n   SIGDIR=${BUILD_DIR}/signature/win\n   UNSIGNED_DIR=${BUILD_DIR}/unsigned\n \n@@ -35,7 +35,7 @@ script: |\n   ./configure --without-gsf --without-curl --disable-dependency-tracking\n   make\n   find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n+    INFILE=\"$(basename \"${i}\")\"\n+    OUTFILE=\"${INFILE/%-unsigned}\"\n     ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n   done"
      },
      {
        "sha": "b772404ae5b983a8563b1ce07393af331457affe",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -40,7 +40,7 @@ script: |\n   export QT_RCC_TEST=1\n   export QT_RCC_SOURCE_DATE_OVERRIDE=1\n   export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n+  export BUILD_DIR=\"$PWD\"\n   mkdir -p ${WRAP_DIR}\n   if test -n \"$GBUILD_CACHE_ENABLED\"; then\n     export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n@@ -97,7 +97,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n+  BASEPREFIX=\"${PWD}/depends\"\n   # Build dependencies for each host\n   for i in $HOSTS; do\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n@@ -112,10 +112,11 @@ script: |\n \n   # Create the release tarball using (arbitrarily) the first host\n   ./autogen.sh\n-  CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n+  CONFIG_SITE=${BASEPREFIX}/$(echo \"${HOSTS}\" | awk '{print $1;}')/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n+  SOURCEDIST=$(echo bitcoin-*.tar.gz)\n+  DISTNAME=${SOURCEDIST/%.tar.gz}\n+\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n@@ -132,7 +133,7 @@ script: |\n     export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n     mkdir -p distsrc-${i}\n     cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n+    INSTALLPATH=\"${PWD}/installed/${DISTNAME}\"\n     mkdir -p ${INSTALLPATH}\n     tar --strip-components=1 -xf ../$SOURCEDIST\n "
      },
      {
        "sha": "c3e4ae9ad2020bd8a974ce0b91017d324b5d79b3",
        "filename": "test/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/README.md?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -258,6 +258,7 @@ Use the `-v` option for verbose output.\n |-----------|:----------:|:-------------------------------------------:|--------------\n | [`lint-python.sh`](lint/lint-python.sh) | [flake8](https://gitlab.com/pycqa/flake8) | [3.7.8](https://github.com/bitcoin/bitcoin/pull/15257) | `pip3 install flake8==3.7.8`\n | [`lint-shell.sh`](lint/lint-shell.sh) | [ShellCheck](https://github.com/koalaman/shellcheck) | [0.6.0](https://github.com/bitcoin/bitcoin/pull/15166) | [details...](https://github.com/koalaman/shellcheck#installing)\n+| [`lint-shell.sh`](lint/lint-shell.sh) | [yq](https://github.com/kislyuk/yq) | default | `pip3 install yq`\n | [`lint-spelling.sh`](lint/lint-spelling.sh) | [codespell](https://github.com/codespell-project/codespell) | [1.15.0](https://github.com/bitcoin/bitcoin/pull/16186) | `pip3 install codespell==1.15.0`\n \n Please be aware that on Linux distributions all dependencies are usually available as packages, but could be outdated."
      },
      {
        "sha": "63624e3ae09df90d2edc906c28436faf136aca2e",
        "filename": "test/lint/lint-shell.sh",
        "status": "modified",
        "additions": 37,
        "deletions": 8,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f59885d27a0c4812fb1a2324507e2b2e32057d3/test/lint/lint-shell.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f59885d27a0c4812fb1a2324507e2b2e32057d3/test/lint/lint-shell.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-shell.sh?ref=1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env bash\n #\n-# Copyright (c) 2018 The Bitcoin Core developers\n+# Copyright (c) 2018-2019 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -16,16 +16,45 @@ if [ \"$TRAVIS\" = \"true\" ]; then\n     unset LC_ALL\n fi\n \n-if ! command -v shellcheck > /dev/null; then\n-    echo \"Skipping shell linting since shellcheck is not installed.\"\n-    exit 0\n-fi\n-\n # Disabled warnings:\n disabled=(\n     SC2046 # Quote this to prevent word splitting.\n     SC2086 # Double quote to prevent globbing and word splitting.\n     SC2162 # read without -r will mangle backslashes.\n )\n-shellcheck -e \"$(IFS=\",\"; echo \"${disabled[*]}\")\" \\\n-    $(git ls-files -- \"*.sh\" | grep -vE 'src/(secp256k1|univalue)/')\n+disabled_gitian=(\n+    SC2094 # Make sure not to read and write the same file in the same pipeline.\n+    SC2129 # Consider using { cmd1; cmd2; } >> file instead of individual redirects.\n+    SC2230 # which is non-standard. Use builtin 'command -v' instead.\n+)\n+\n+EXIT_CODE=0\n+\n+if ! command -v shellcheck > /dev/null; then\n+    echo \"Skipping shell linting since shellcheck is not installed.\"\n+    exit $EXIT_CODE\n+fi\n+\n+EXCLUDE=\"--exclude=$(IFS=','; echo \"${disabled[*]}\")\"\n+if ! shellcheck \"$EXCLUDE\" $(git ls-files -- '*.sh' | grep -vE 'src/(leveldb|secp256k1|univalue)/'); then\n+    EXIT_CODE=1\n+fi\n+\n+if ! command -v yq > /dev/null; then\n+    echo \"Skipping Gitian desriptor scripts checking since yq is not installed.\"\n+    exit $EXIT_CODE\n+fi\n+\n+EXCLUDE_GITIAN=${EXCLUDE}\",$(IFS=','; echo \"${disabled_gitian[*]}\")\"\n+for descriptor in $(git ls-files -- 'contrib/gitian-descriptors/*.yml')\n+do\n+    echo\n+    echo \"$descriptor\"\n+    # Use #!/bin/bash as gitian-builder/bin/gbuild does to complete a script.\n+    SCRIPT=$'#!/bin/bash\\n'$(yq -r .script \"$descriptor\")\n+    if ! echo \"$SCRIPT\" | shellcheck \"$EXCLUDE_GITIAN\" -; then\n+        EXIT_CODE=1\n+    fi\n+done\n+\n+exit $EXIT_CODE"
      }
    ]
  },
  {
    "sha": "23cecd6cd56f952c757f469c46d7593c2ffaa419",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2NlY2Q2Y2Q1NmY5NTJjNzU3ZjQ2OWM0NmQ3NTkzYzJmZmFhNDE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T11:49:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T11:49:32Z"
      },
      "message": "Merge #17604: util: make ScheduleBatchPriority advisory only\n\nd2a3a5cadbe58c0fe363bbc6acac293d41eedf7e util: make ScheduleBatchPriority advisory only (fanquake)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    ACK d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e\n\nTree-SHA512: 14e44360bc6b0c0bfd794cb8a744af7d64fb01aa5602fdb392d6c54799a721ef04426e8379b157dd40f2a33c0b6a5248b09d59c865c453ff1f6e3abbafff524e",
      "tree": {
        "sha": "56af7f8b038fbf9094f165073edd77e591f9ae26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56af7f8b038fbf9094f165073edd77e591f9ae26"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23cecd6cd56f952c757f469c46d7593c2ffaa419",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3ftEwACgkQHkrtYphs\n0l0yNwgAnJqic1HDeN0c77t9QnIbfiHErXp0z5fLSM6nLIpZVDV1bIhjLve2F/q0\nR8RKUeLpRKgja3zqBnKP9o+9DRzTte9ontir6Hqfp4AgeG5sjiFLktjOtvQSCdqb\nYBa2fYTVm8gSH1+abAzcgzVmjHVUwHdeTqweLQO4OHI4aiVE04sDNY4cgrlucToM\niAjTHeBlkXwm+Oee3REMm6JCb6Dpv0HgBNDNfe21NBPgXU1VofRAjLZdfAf6kFNB\n9c3dDEQOlgFB1MFkbr6lWEZwhsgIi2lvdy4pTCOyv1yllnMUaSrvLCD879vPB2N/\nLzcJfOMUM5aEOgUm0QI0gVH2vlSPRA==\n=t/dt\n-----END PGP SIGNATURE-----",
        "payload": "tree 56af7f8b038fbf9094f165073edd77e591f9ae26\nparent 1f59885d27a0c4812fb1a2324507e2b2e32057d3\nparent d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574941759 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574941772 +0100\n\nMerge #17604: util: make ScheduleBatchPriority advisory only\n\nd2a3a5cadbe58c0fe363bbc6acac293d41eedf7e util: make ScheduleBatchPriority advisory only (fanquake)\n\nPull request description:\n\nACKs for top commit:\n  laanwj:\n    ACK d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e\n\nTree-SHA512: 14e44360bc6b0c0bfd794cb8a744af7d64fb01aa5602fdb392d6c54799a721ef04426e8379b157dd40f2a33c0b6a5248b09d59c865c453ff1f6e3abbafff524e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23cecd6cd56f952c757f469c46d7593c2ffaa419",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23cecd6cd56f952c757f469c46d7593c2ffaa419",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23cecd6cd56f952c757f469c46d7593c2ffaa419/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f59885d27a0c4812fb1a2324507e2b2e32057d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f59885d27a0c4812fb1a2324507e2b2e32057d3"
      },
      {
        "sha": "d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2a3a5cadbe58c0fe363bbc6acac293d41eedf7e"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 3,
      "deletions": 9
    },
    "files": [
      {
        "sha": "563ff6a54b35d58b5bf30d9b1604dcc72541709b",
        "filename": "src/util/system.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23cecd6cd56f952c757f469c46d7593c2ffaa419/src/util/system.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23cecd6cd56f952c757f469c46d7593c2ffaa419/src/util/system.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.cpp?ref=23cecd6cd56f952c757f469c46d7593c2ffaa419",
        "patch": "@@ -1126,17 +1126,13 @@ fs::path AbsPathForConfigVal(const fs::path& path, bool net_specific)\n     return fs::absolute(path, GetDataDir(net_specific));\n }\n \n-int ScheduleBatchPriority()\n+void ScheduleBatchPriority()\n {\n #ifdef SCHED_BATCH\n     const static sched_param param{};\n-    if (int ret = pthread_setschedparam(pthread_self(), SCHED_BATCH, &param)) {\n+    if (pthread_setschedparam(pthread_self(), SCHED_BATCH, &param) != 0) {\n         LogPrintf(\"Failed to pthread_setschedparam: %s\\n\", strerror(errno));\n-        return ret;\n     }\n-    return 0;\n-#else\n-    return 1;\n #endif\n }\n "
      },
      {
        "sha": "82903b5187d8488a27eeb415d516d616053f3883",
        "filename": "src/util/system.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23cecd6cd56f952c757f469c46d7593c2ffaa419/src/util/system.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23cecd6cd56f952c757f469c46d7593c2ffaa419/src/util/system.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/system.h?ref=23cecd6cd56f952c757f469c46d7593c2ffaa419",
        "patch": "@@ -367,10 +367,8 @@ std::string CopyrightHolders(const std::string& strPrefix);\n  * On platforms that support it, tell the kernel the calling thread is\n  * CPU-intensive and non-interactive. See SCHED_BATCH in sched(7) for details.\n  *\n- * @return The return value of sched_setschedule(), or 1 on systems without\n- * sched_setschedule().\n  */\n-int ScheduleBatchPriority();\n+void ScheduleBatchPriority();\n \n namespace util {\n "
      }
    ]
  },
  {
    "sha": "114e89e596a66f3cb1ebd8fc2d775b61c5722245",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMTRlODllNTk2YTY2ZjNjYjFlYmQ4ZmMyZDc3NWI2MWM1NzIyMjQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T11:58:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-11-28T11:58:56Z"
      },
      "message": "Merge #17624: net: Fix an uninitialized read in ProcessMessage(\u2026, \"tx\", \u2026) when receiving a transaction we already have\n\n73b96c94cb6c2afdee7f151768a96944ecaf9d9b net: Fix uninitialized read in ProcessMessage(...) (practicalswift)\n\nPull request description:\n\n  Fix an uninitialized read in `ProcessMessage(\u2026, \"tx\", \u2026)` when receiving a transaction we already have.\n\n  The uninitialized value is read and used on [L2526 in the case of `AlreadyHave(inv) == true`](https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/src/net_processing.cpp#L2494-L2526).\n\n  Proof of concept being run against a `bitcoind` built with MemorySanitizer (`-fsanitize=memory`):\n\n  ```\n  $ ./p2p-uninit-read-in-conditional-poc.py\n  Usage: ./p2p-uninit-read-in-conditional-poc.py <dstaddr> <dstport> <net>\n  $ bitcoind -regtest &\n  $ ./p2p-uninit-read-in-conditional-poc.py 127.0.0.1 18444 regtest\n  SUMMARY: MemorySanitizer: use-of-uninitialized-value\n  [1]+  Exit 77                 bitcoind -regtest\n  $\n  ```\n\n  Proof of concept being run against a `bitcoind` running under Valgrind (`valgrind --exit-on-first-error`):\n\n  ```\n  $ valgrind -q --exit-on-first-error=yes --error-exitcode=1 bitcoind -regtest &\n  $ ./p2p-uninit-read-in-conditional-poc.py 127.0.0.1 18444 regtest\n  ==27351== Conditional jump or move depends on uninitialised value(s)\n  [1]+  Exit 1                  valgrind -q --exit-on-first-error=yes --error-exitcode=1 bitcoind -regtest\n  $\n  ```\n\n  Proof of concept script:\n\n  ```\n  #!/usr/bin/env python3\n\n  import sys\n\n  from test_framework.mininode import NetworkThread\n  from test_framework.mininode import P2PDataStore\n  from test_framework.messages import CTransaction, CTxIn, CTxOut, msg_tx\n\n  def send_duplicate_tx(dstaddr=\"127.0.0.1\", dstport=18444, net=\"regtest\"):\n      network_thread = NetworkThread()\n      network_thread.start()\n\n      node = P2PDataStore()\n      node.peer_connect(dstaddr=dstaddr, dstport=dstport, net=net)()\n      node.wait_for_verack()\n\n      tx = CTransaction()\n      tx.vin.append(CTxIn())\n      tx.vout.append(CTxOut())\n      node.send_message(msg_tx(tx))\n      node.send_message(msg_tx(tx))\n      node.peer_disconnect()\n      network_thread.close()\n\n  if __name__ == \"__main__\":\n      if len(sys.argv) != 4:\n          print(\"Usage: {} <dstaddr> <dstport> <net>\".format(sys.argv[0]))\n          sys.exit(0)\n      send_duplicate_tx(sys.argv[1], int(sys.argv[2]), sys.argv[3])\n  ```\n\n  Note that the transaction in the proof of concept is the simplest possible, but really any transaction can be used. It does not have to be a valid transaction.\n\n  This bug was introduced in #15921 (\"validation: Tidy up ValidationState interface\") which was merged in to `master` 28 days ago.\n\n  Luckily this bug was caught before being part of any Bitcoin Core release :)\n\nACKs for top commit:\n  jnewbery:\n    utACK 73b96c94cb6c2afdee7f151768a96944ecaf9d9b\n  laanwj:\n    ACK 73b96c94cb6c2afdee7f151768a96944ecaf9d9b, thanks for discovering and reporting this before it ended up in a release.\n\nTree-SHA512: 7ce6b8f260bcdd9b2ec4ff4b941a891bbef578acf4456df33b7a8d42b248237ec4949e65e2445b24851d1639b10681c701ad500b1c0b776ff050ef8c3812c795",
      "tree": {
        "sha": "0cbaf4a5d3b306d26557262373ff7dff91d6b705",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0cbaf4a5d3b306d26557262373ff7dff91d6b705"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/114e89e596a66f3cb1ebd8fc2d775b61c5722245",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3ftoAACgkQHkrtYphs\n0l3y/wf/XlszvRZ1bP16Bv6cuqsk55zGay3jhd0xPqSlREFmJFHfqiXAR7+nnYL9\neNcHcjgbqnKs6nKlO4tBXLcbwXFCHd33ae4DHzL6Tj2Zml3P+2w7k2MEDWargRJa\nx+pkcKWfmLxWYeCqZHKEj8uvs5rSiDU/K7yttOirmMQEWcPuW0K4rHH6YMHNSGRE\nEeVSObmXzCXv4pH34eUPd2HwJNSSu7gucrsZ+TvbCsJLIiyrAe7WFaEmoQQoCkW0\nP1XhT/uY76T99b1ys+Fuw8W5UjGksnjX3GoLvL3E/x3gAFpAal5LhYL/pE+ReDUu\nLOUbnPnLU4myG2xLPSOg3ZN6/msxXA==\n=rUG6\n-----END PGP SIGNATURE-----",
        "payload": "tree 0cbaf4a5d3b306d26557262373ff7dff91d6b705\nparent 23cecd6cd56f952c757f469c46d7593c2ffaa419\nparent 73b96c94cb6c2afdee7f151768a96944ecaf9d9b\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1574942309 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1574942336 +0100\n\nMerge #17624: net: Fix an uninitialized read in ProcessMessage(\u2026, \"tx\", \u2026) when receiving a transaction we already have\n\n73b96c94cb6c2afdee7f151768a96944ecaf9d9b net: Fix uninitialized read in ProcessMessage(...) (practicalswift)\n\nPull request description:\n\n  Fix an uninitialized read in `ProcessMessage(\u2026, \"tx\", \u2026)` when receiving a transaction we already have.\n\n  The uninitialized value is read and used on [L2526 in the case of `AlreadyHave(inv) == true`](https://github.com/bitcoin/bitcoin/blob/d8a66626d63135fd245d5afc524b88b9a94d208b/src/net_processing.cpp#L2494-L2526).\n\n  Proof of concept being run against a `bitcoind` built with MemorySanitizer (`-fsanitize=memory`):\n\n  ```\n  $ ./p2p-uninit-read-in-conditional-poc.py\n  Usage: ./p2p-uninit-read-in-conditional-poc.py <dstaddr> <dstport> <net>\n  $ bitcoind -regtest &\n  $ ./p2p-uninit-read-in-conditional-poc.py 127.0.0.1 18444 regtest\n  SUMMARY: MemorySanitizer: use-of-uninitialized-value\n  [1]+  Exit 77                 bitcoind -regtest\n  $\n  ```\n\n  Proof of concept being run against a `bitcoind` running under Valgrind (`valgrind --exit-on-first-error`):\n\n  ```\n  $ valgrind -q --exit-on-first-error=yes --error-exitcode=1 bitcoind -regtest &\n  $ ./p2p-uninit-read-in-conditional-poc.py 127.0.0.1 18444 regtest\n  ==27351== Conditional jump or move depends on uninitialised value(s)\n  [1]+  Exit 1                  valgrind -q --exit-on-first-error=yes --error-exitcode=1 bitcoind -regtest\n  $\n  ```\n\n  Proof of concept script:\n\n  ```\n  #!/usr/bin/env python3\n\n  import sys\n\n  from test_framework.mininode import NetworkThread\n  from test_framework.mininode import P2PDataStore\n  from test_framework.messages import CTransaction, CTxIn, CTxOut, msg_tx\n\n  def send_duplicate_tx(dstaddr=\"127.0.0.1\", dstport=18444, net=\"regtest\"):\n      network_thread = NetworkThread()\n      network_thread.start()\n\n      node = P2PDataStore()\n      node.peer_connect(dstaddr=dstaddr, dstport=dstport, net=net)()\n      node.wait_for_verack()\n\n      tx = CTransaction()\n      tx.vin.append(CTxIn())\n      tx.vout.append(CTxOut())\n      node.send_message(msg_tx(tx))\n      node.send_message(msg_tx(tx))\n      node.peer_disconnect()\n      network_thread.close()\n\n  if __name__ == \"__main__\":\n      if len(sys.argv) != 4:\n          print(\"Usage: {} <dstaddr> <dstport> <net>\".format(sys.argv[0]))\n          sys.exit(0)\n      send_duplicate_tx(sys.argv[1], int(sys.argv[2]), sys.argv[3])\n  ```\n\n  Note that the transaction in the proof of concept is the simplest possible, but really any transaction can be used. It does not have to be a valid transaction.\n\n  This bug was introduced in #15921 (\"validation: Tidy up ValidationState interface\") which was merged in to `master` 28 days ago.\n\n  Luckily this bug was caught before being part of any Bitcoin Core release :)\n\nACKs for top commit:\n  jnewbery:\n    utACK 73b96c94cb6c2afdee7f151768a96944ecaf9d9b\n  laanwj:\n    ACK 73b96c94cb6c2afdee7f151768a96944ecaf9d9b, thanks for discovering and reporting this before it ended up in a release.\n\nTree-SHA512: 7ce6b8f260bcdd9b2ec4ff4b941a891bbef578acf4456df33b7a8d42b248237ec4949e65e2445b24851d1639b10681c701ad500b1c0b776ff050ef8c3812c795\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/114e89e596a66f3cb1ebd8fc2d775b61c5722245",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/114e89e596a66f3cb1ebd8fc2d775b61c5722245",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/114e89e596a66f3cb1ebd8fc2d775b61c5722245/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "23cecd6cd56f952c757f469c46d7593c2ffaa419",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23cecd6cd56f952c757f469c46d7593c2ffaa419",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/23cecd6cd56f952c757f469c46d7593c2ffaa419"
      },
      {
        "sha": "73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73b96c94cb6c2afdee7f151768a96944ecaf9d9b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73b96c94cb6c2afdee7f151768a96944ecaf9d9b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3401eb64ca87446b7b820c1b06c36efa91243c54",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/114e89e596a66f3cb1ebd8fc2d775b61c5722245/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/114e89e596a66f3cb1ebd8fc2d775b61c5722245/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=114e89e596a66f3cb1ebd8fc2d775b61c5722245",
        "patch": "@@ -114,7 +114,7 @@ inline ValidationState::~ValidationState() {};\n \n class TxValidationState : public ValidationState {\n private:\n-    TxValidationResult m_result;\n+    TxValidationResult m_result = TxValidationResult::TX_RESULT_UNSET;\n public:\n     bool Invalid(TxValidationResult result,\n                  const std::string &reject_reason=\"\",\n@@ -129,7 +129,7 @@ class TxValidationState : public ValidationState {\n \n class BlockValidationState : public ValidationState {\n private:\n-    BlockValidationResult m_result;\n+    BlockValidationResult m_result = BlockValidationResult::BLOCK_RESULT_UNSET;\n public:\n     bool Invalid(BlockValidationResult result,\n                  const std::string &reject_reason=\"\","
      }
    ]
  },
  {
    "sha": "abb30de63f368c9875c3f2a4cfe91b1daf9412da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYmIzMGRlNjNmMzY4Yzk4NzVjM2YyYTRjZmU5MWIxZGFmOTQxMmRh",
    "commit": {
      "author": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-29T10:15:55Z"
      },
      "committer": {
        "name": "Samuel Dobson",
        "email": "dobsonsa68@gmail.com",
        "date": "2019-11-29T10:16:08Z"
      },
      "message": "Merge #17587: gui: show watch-only balance in send screen\n\n4a96e459d733f1b6427221aaa1874ea00f79988a [gui] send: show watch-only balance in send screen (Sjors Provoost)\n2689c8fd7159f47248c5fc365463be8b0e8b039c [test] qt: add send screen balance test (Sjors Provoost)\n\nPull request description:\n\n  Now that we can create a PSBT from a watch-only wallet (#16944), we should also display the watch-only balance on the send screen.\n\n  Before:\n  <img width=\"1008\" alt=\"before\" src=\"https://user-images.githubusercontent.com/10217/69533384-030e9180-0f78-11ea-9748-c32c957e822e.png\">\n\n  After:\n  <img width=\"1009\" alt=\"Schermafbeelding 2019-11-26 om 11 44 17\" src=\"https://user-images.githubusercontent.com/10217/69622879-19811f80-1042-11ea-8279-091012f39b38.png\">\n\n  I added a test to check the balance on the send screen, but it only covers regular wallets. A better would add a watch-only only wallet.\n\nACKs for top commit:\n  meshcollider:\n    utACK 4a96e459d733f1b6427221aaa1874ea00f79988a\n  jb55:\n    utACK 4a96e459d733f1b6427221aaa1874ea00f79988a\n  promag:\n    reACK 4a96e45, rebased and label change since last review.\n  instagibbs:\n    code review and light test ACK https://github.com/bitcoin/bitcoin/pull/17587/commits/4a96e459d733f1b6427221aaa1874ea00f79988a\n\nTree-SHA512: 4213549888bd309f72bdbba1453218f4a2b07e809100d786a3791897c75468f9092b06fe4b971942b1c228aa75ee7c04971f262ca9a478b42756e056eb534620",
      "tree": {
        "sha": "05d2960586e42607f16b159363ff4298d4794b48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05d2960586e42607f16b159363ff4298d4794b48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEygOILLH8BntdOs/k0wARbhyHWj0FAl3g7+gACgkQ0wARbhyH\nWj0rdA/+ISBa8TxV+Oh7WXzikNqahKAHKkfs5K8UlaihjjZPWe1s5DZ9vzi8xOV2\neQ5+eViOU1rxSSCEcRc4qUHmP1zNKcVTN9YqO9WTY8KMgoSLbF2SF7UzvGlpONSi\nEjfEeKLw9OMrlJZZbKi0CRSw/CvX+SFzN16f63FgdlennIaRdfm/TYcLHZ9g3Xgs\nYuqmbc+b/sKzRd7ncG29W/twE+TFazJohs/KBKuWsyv4e2rx6T7xxWSmm5EFqxie\n57KlyMV9yXSdkJxknccbNhvW5q+Hqpv95cHguQ5pw7ivDtvpdmnHgGXOfHMFSuEu\n6S0rzbm+vRBEa9RgUz/ybU67f/aUp3vDBF3b1UVEzXrWSaNHB7C/27eVnkZHTAuJ\nWodUdiw34hJtkJKo6dVjebiY4wZTtx2qL7c17Yu1v5hrzzZi0T49a0F4vm381hSF\n7xZNyRkaCKWBksWa8f72zo1jk/UMyaK0UyEchxIbyhNyacvS4Hf6w3PbPaHWlIxk\n1fqjgHVW+PxjCKXIOx/P7sCwkDTruPuLtehQrtZa1Ovo9CZmv8RISzZ9pa5GgQzP\nfMjEz38OUAVpvq5B/IxnxqaEJgADtZEB3XmBXoWXnofhbhh+nrsuDMT2HUBWZNek\nGcDyaxVuOknqSAFkaRLq1AxweYNm3aiB9zF/W4aB7QYd58C1zZQ=\n=Kwgz\n-----END PGP SIGNATURE-----",
        "payload": "tree 05d2960586e42607f16b159363ff4298d4794b48\nparent 114e89e596a66f3cb1ebd8fc2d775b61c5722245\nparent 4a96e459d733f1b6427221aaa1874ea00f79988a\nauthor Samuel Dobson <dobsonsa68@gmail.com> 1575022555 +1300\ncommitter Samuel Dobson <dobsonsa68@gmail.com> 1575022568 +1300\n\nMerge #17587: gui: show watch-only balance in send screen\n\n4a96e459d733f1b6427221aaa1874ea00f79988a [gui] send: show watch-only balance in send screen (Sjors Provoost)\n2689c8fd7159f47248c5fc365463be8b0e8b039c [test] qt: add send screen balance test (Sjors Provoost)\n\nPull request description:\n\n  Now that we can create a PSBT from a watch-only wallet (#16944), we should also display the watch-only balance on the send screen.\n\n  Before:\n  <img width=\"1008\" alt=\"before\" src=\"https://user-images.githubusercontent.com/10217/69533384-030e9180-0f78-11ea-9748-c32c957e822e.png\">\n\n  After:\n  <img width=\"1009\" alt=\"Schermafbeelding 2019-11-26 om 11 44 17\" src=\"https://user-images.githubusercontent.com/10217/69622879-19811f80-1042-11ea-8279-091012f39b38.png\">\n\n  I added a test to check the balance on the send screen, but it only covers regular wallets. A better would add a watch-only only wallet.\n\nACKs for top commit:\n  meshcollider:\n    utACK 4a96e459d733f1b6427221aaa1874ea00f79988a\n  jb55:\n    utACK 4a96e459d733f1b6427221aaa1874ea00f79988a\n  promag:\n    reACK 4a96e45, rebased and label change since last review.\n  instagibbs:\n    code review and light test ACK https://github.com/bitcoin/bitcoin/pull/17587/commits/4a96e459d733f1b6427221aaa1874ea00f79988a\n\nTree-SHA512: 4213549888bd309f72bdbba1453218f4a2b07e809100d786a3791897c75468f9092b06fe4b971942b1c228aa75ee7c04971f262ca9a478b42756e056eb534620\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "114e89e596a66f3cb1ebd8fc2d775b61c5722245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/114e89e596a66f3cb1ebd8fc2d775b61c5722245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/114e89e596a66f3cb1ebd8fc2d775b61c5722245"
      },
      {
        "sha": "4a96e459d733f1b6427221aaa1874ea00f79988a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a96e459d733f1b6427221aaa1874ea00f79988a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a96e459d733f1b6427221aaa1874ea00f79988a"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 17,
      "deletions": 2
    },
    "files": [
      {
        "sha": "cfd4bf33d460d8ed43c17e0b267910c984255005",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "patch": "@@ -1190,7 +1190,7 @@ Note:  Since the fee is calculated on a per-byte basis, a fee of \"100 satoshis p\n         <number>3</number>\n        </property>\n        <item>\n-        <widget class=\"QLabel\" name=\"label\">\n+        <widget class=\"QLabel\" name=\"labelBalanceName\">\n          <property name=\"sizePolicy\">\n           <sizepolicy hsizetype=\"Preferred\" vsizetype=\"Fixed\">\n            <horstretch>0</horstretch>"
      },
      {
        "sha": "f1ea3e23e5d5e893ee90f4763869257b0af6b08f",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "patch": "@@ -562,7 +562,12 @@ void SendCoinsDialog::setBalance(const interfaces::WalletBalances& balances)\n {\n     if(model && model->getOptionsModel())\n     {\n-        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), balances.balance));\n+        CAmount balance = balances.balance;\n+        if (model->privateKeysDisabled()) {\n+            balance = balances.watch_only_balance;\n+            ui->labelBalanceName->setText(tr(\"Watch-only balance:\"));\n+        }\n+        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(), balance));\n     }\n }\n "
      },
      {
        "sha": "dfd56511ea4060081e57a00ca5fadc90262ef7f6",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/abb30de63f368c9875c3f2a4cfe91b1daf9412da/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "patch": "@@ -170,6 +170,16 @@ void TestGUI(interfaces::Node& node)\n     sendCoinsDialog.setModel(&walletModel);\n     transactionView.setModel(&walletModel);\n \n+    {\n+        // Check balance in send dialog\n+        QLabel* balanceLabel = sendCoinsDialog.findChild<QLabel*>(\"labelBalance\");\n+        QString balanceText = balanceLabel->text();\n+        int unit = walletModel.getOptionsModel()->getDisplayUnit();\n+        CAmount balance = walletModel.wallet().getBalance();\n+        QString balanceComparison = BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways);\n+        QCOMPARE(balanceText, balanceComparison);\n+    }\n+\n     // Send two transactions, and verify they are added to transaction list.\n     TransactionTableModel* transactionTableModel = walletModel.getTransactionTableModel();\n     QCOMPARE(transactionTableModel->rowCount({}), 105);"
      }
    ]
  },
  {
    "sha": "b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjY4NjFlMmU1ZThhNDllMTFlNzQ4OWNmMjJjMzAwN2JjNzA4MmNj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T18:15:45Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T19:11:00Z"
      },
      "message": "Fix comparison function signature\n\nThis commit fixes build on CentOS 7 with GCC 4.8.5",
      "tree": {
        "sha": "b71f238783d5cc15c554def9afe8988b43632da6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b71f238783d5cc15c554def9afe8988b43632da6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3hbUcACgkQQQEIES5+\nqB9AohAAquSGVtcx5oxWrfomg8Q8kIPSUh8SMLjQSkVKT5WgY1BPeIiCzZxZXdDG\nhYn9pOVMW6WKJEhO64MxWYhCDHL6Wu1dvgAwQvF/sMNvsaxcpeTpijVpJbFRiOcZ\ndHBKo9PELbcnj2G8gGkPdy0Tt2ZoQXTC2P7CM54FUmaWJKYIxgBJ1kU5Mrq668o5\n330xllFFP6EgFn1sIrQL263kI0TtjYR8K8lROuM/9HfyhCSQ37VWY8ra8ZOSk4Mr\nAq5SLXwbpoxhlS456K5I/lACDuXG1CrZGDHwFxPHhocW8hesOWisfJqIIppKJOm2\n0v0icbOpkNBQNe5gbxov8vByHljW9DVJqQWTiL4chzo/fD2+yZUrTksqeg/53e+X\nOYxiBI5AXKLO6K49kPSDl8VhH+VaXFzM+N/JfETWrUp8QOSJ9i5uJwsz3yDjS+Lg\nykkPHV0bXcGZzswzihbSaNaV+hM+L48stMLerHQZ3l0F3kBZ/7HljW8OqqwfkF6l\nVe1vWmgqtt0yaOmRJ/CSxOw/ZUOx2MKfuA3buSmzV2JcIvuYxNy6wsMkGdHYibFO\nFm5mz9rHHuYppSN1M6TQ8We9kAPiF/VL786oNHJepeOk1XCydlcbbtEi8z5YOmqI\nkZK5abEmSxALqwXUtFw4vqaZEP5j0B7gkPZPRgYH0LHyRLUq1Sw=\n=XFp0\n-----END PGP SIGNATURE-----",
        "payload": "tree b71f238783d5cc15c554def9afe8988b43632da6\nparent abb30de63f368c9875c3f2a4cfe91b1daf9412da\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575051345 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575054660 +0200\n\nFix comparison function signature\n\nThis commit fixes build on CentOS 7 with GCC 4.8.5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66861e2e5e8a49e11e7489cf22c3007bc7082cc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abb30de63f368c9875c3f2a4cfe91b1daf9412da"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 5,
      "deletions": 6
    },
    "files": [
      {
        "sha": "18fa5f417f81f2d21cd3201653a4fa315b1bb253",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b66861e2e5e8a49e11e7489cf22c3007bc7082cc/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b66861e2e5e8a49e11e7489cf22c3007bc7082cc/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
        "patch": "@@ -12,8 +12,7 @@\n #include <clientversion.h>\n #include <streams.h>\n \n-#include <algorithm>\n-\n+#include <utility>\n \n RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     QAbstractTableModel(parent), walletModel(parent)\n@@ -214,10 +213,10 @@ void RecentRequestsTableModel::updateDisplayUnit()\n     updateAmountColumnTitle();\n }\n \n-bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n+bool RecentRequestEntryLessThan::operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const\n {\n-    RecentRequestEntry *pLeft = &left;\n-    RecentRequestEntry *pRight = &right;\n+    const RecentRequestEntry* pLeft = &left;\n+    const RecentRequestEntry* pRight = &right;\n     if (order == Qt::DescendingOrder)\n         std::swap(pLeft, pRight);\n "
      },
      {
        "sha": "f5085f726887252d81df25235fd63baec1936411",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b66861e2e5e8a49e11e7489cf22c3007bc7082cc/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b66861e2e5e8a49e11e7489cf22c3007bc7082cc/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
        "patch": "@@ -45,7 +45,7 @@ class RecentRequestEntryLessThan\n public:\n     RecentRequestEntryLessThan(int nColumn, Qt::SortOrder fOrder):\n         column(nColumn), order(fOrder) {}\n-    bool operator()(RecentRequestEntry &left, RecentRequestEntry &right) const;\n+    bool operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const;\n \n private:\n     int column;"
      }
    ]
  },
  {
    "sha": "98fbd1cdffaa69357091cc67e959ac21119dfa16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OGZiZDFjZGZmYWE2OTM1NzA5MWNjNjdlOTU5YWMyMTExOWRmYTE2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T19:18:24Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T19:23:25Z"
      },
      "message": "Use correct C++11 header for std::swap()",
      "tree": {
        "sha": "c96705619b933d9126b2f94cef8be461b1950ef6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c96705619b933d9126b2f94cef8be461b1950ef6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98fbd1cdffaa69357091cc67e959ac21119dfa16",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3hcDkACgkQQQEIES5+\nqB+mzxAApBdPH/V0ljPuTAxRKUGcWdNFKELvooEcMIXU/wS6OOAFlE4Nm/RsgywQ\nhJ0vXnxzQJyVXsTSLlvUo6N4p7eSsl8KvWQmCjh4Tkaz2fkS/0gBxHRTGvihUlyo\nCtoFSyc4qBEfcxq9T5hjT93xq7MAp+0RsrEOnfDCmS0aR9w49YtWgw3upBee8En/\nLiDkpLH4puPc3m3gFoNxRHr3B1u+6qiT+V5/OsMWu9HS9vh1BSEJvkKw++Pg71a+\ntW+1SiQ7yp12mqDCkDtUlhiM0RMaqniFs/ETbkv8JvlOmU2rKiqzcrR9tvTjgjNK\nrzTH3S0ejRU3qzJEv3BdGt/Ef+8uCs6M0QtFb6f5YDlO0lIJlv2cq24q4Jbvz7H2\nIxDIun6ObjTwi11oJF8vS6KooeA0DmhZst8SIE6TIyQvezjOM5bc7GRsWl4mA6xM\nCk2DadNEovn6rqczMgizZIwwDi9WDEaPhaab1zjtYztZKb6UrJZeTsAo/nuAzcWs\noHDdonB5bccflJBT32kJ+AXEi3zc9keHCh3emx6vhskq6OGZxt1Ccixv+h/JIkHe\ngQj/df5VQ9uJ1Nli++flKhDusw0z39WYlgTcS57djiDvZtTkW0mklqU0Wc61GZB6\nqXvMZYb5lA4zsdxsKnQLQBXTUSSBOC0LvIftERLMPXJSaUPy4lU=\n=nd0e\n-----END PGP SIGNATURE-----",
        "payload": "tree c96705619b933d9126b2f94cef8be461b1950ef6\nparent b66861e2e5e8a49e11e7489cf22c3007bc7082cc\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575055104 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575055405 +0200\n\nUse correct C++11 header for std::swap()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fbd1cdffaa69357091cc67e959ac21119dfa16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98fbd1cdffaa69357091cc67e959ac21119dfa16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fbd1cdffaa69357091cc67e959ac21119dfa16/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b66861e2e5e8a49e11e7489cf22c3007bc7082cc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b66861e2e5e8a49e11e7489cf22c3007bc7082cc"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 6,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4ad5818cdc1113767ac390e3165a8e63afaf8e0d",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -6,11 +6,11 @@\n #define BITCOIN_CUCKOOCACHE_H\n \n #include <array>\n-#include <algorithm>\n #include <atomic>\n-#include <cstring>\n #include <cmath>\n+#include <cstring>\n #include <memory>\n+#include <utility>\n #include <vector>\n \n "
      },
      {
        "sha": "4fb07688ffb62f27998004ff0fe079e125322a4b",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -13,6 +13,7 @@\n #include <algorithm>\n #include <cstddef>\n #include <type_traits>\n+#include <utility>\n \n #pragma pack(push, 1)\n /** Implements a drop-in replacement for std::vector<T> which stores up to N"
      },
      {
        "sha": "b6c6984b1008dbe8cf4e05b03ee81b9b2bb9a96a",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -8,7 +8,7 @@\n #include <net_types.h> // For banmap_t\n #include <qt/clientmodel.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "514ff35bcdbae547b01c7c31e9362d476ac230fd",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -10,7 +10,7 @@\n \n #include <interfaces/node.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "482fe3772c25d45d000c122fed66417e82704ab6",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -17,6 +17,7 @@\n #include <condition_variable>\n \n #include <unordered_set>\n+#include <utility>\n \n BOOST_FIXTURE_TEST_SUITE(checkqueue_tests, TestingSetup)\n "
      },
      {
        "sha": "54f97e721325650e329558d76dcf5ca1caefae8e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98fbd1cdffaa69357091cc67e959ac21119dfa16/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "patch": "@@ -23,7 +23,6 @@\n #include <versionbits.h>\n #include <serialize.h>\n \n-#include <algorithm>\n #include <atomic>\n #include <map>\n #include <memory>"
      }
    ]
  },
  {
    "sha": "bd6a24307564a56d54d98331d5e1680d27ddc09e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDZhMjQzMDc1NjRhNTZkNTRkOTgzMzFkNWUxNjgwZDI3ZGRjMDll",
    "commit": {
      "author": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-11-30T03:34:28Z"
      },
      "committer": {
        "name": "Emil Engler",
        "email": "me@emilengler.com",
        "date": "2019-11-30T03:41:06Z"
      },
      "message": "script: Add Keyserver to verify-commits README",
      "tree": {
        "sha": "eb133aa0b3b5a2615a7479f242feb09c3d7fd134",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb133aa0b3b5a2615a7479f242feb09c3d7fd134"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd6a24307564a56d54d98331d5e1680d27ddc09e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE82XmVEpcmrEyk0LUL21BRcVfx8cFAl3h5NcACgkQL21BRcVf\nx8dBig//Xx3JdY3k+WiYhWzLvwhOjh/ZVU3kpm1gmmh9nXK2pD9fg0vImff/+hA4\nDAW4swSfaChQPgqrBjuJAFKcrfX4Q87Um+bEGEUOHVn27nrEzToO9sIZGJgSeNp1\nBEMrekwahRnG+c90cHUCMWLXsgdYlT4yLNBcSv5D6WNzhqJfyQiul3deAcRt2iz9\nRumO6UYzCFRdERuShGyGhaP+FpCAuloENHwOchTFtG0dVjIwJNK3zzFohU4UQGfd\nrX4AeL+pfE386ZX3jFwzE4xDlRlg9p2QrAVhF8bmBaZLrNTxwrSJDBM0asj13BvA\nz25cRMFdfaaMglMeEClfCD/s4Bu9NRFzcfm9sbaB1fupzi/LIXynKzl8dKIJ0AGG\njwca6740a/2fb2UCYOeMyrHQUTmQyzO+vHEirAzi3lxx/LsbAtMBZPb34ZIVQB3U\ncvR2JZbX2FWtDCzuzOlotjZo5IbhsFm/W4a6VW9KS4pH9cUboPu7qugiux0GVQ2N\nlk9j68bc/oVPo3zWeUaqvXRFTzGxZ1O1GKPo/5FyFTlj5e05D9J6zF4xiyeoktJa\nhTJyQ2zHWwOPlUuvWnLz7tvhbezxrjEnc1rJIu0WtYW1b0n5fKfN2uAQClANVOYL\nYpVBvTGTSLTlumMvCPd2eHEXmVS9vTp0fusstFx2PMmXWBNA52A=\n=HdEq\n-----END PGP SIGNATURE-----",
        "payload": "tree eb133aa0b3b5a2615a7479f242feb09c3d7fd134\nparent abb30de63f368c9875c3f2a4cfe91b1daf9412da\nauthor Emil Engler <me@emilengler.com> 1575084868 +0100\ncommitter Emil Engler <me@emilengler.com> 1575085266 +0100\n\nscript: Add Keyserver to verify-commits README\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd6a24307564a56d54d98331d5e1680d27ddc09e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd6a24307564a56d54d98331d5e1680d27ddc09e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd6a24307564a56d54d98331d5e1680d27ddc09e/comments",
    "author": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "emilengler",
      "id": 12272949,
      "node_id": "MDQ6VXNlcjEyMjcyOTQ5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12272949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emilengler",
      "html_url": "https://github.com/emilengler",
      "followers_url": "https://api.github.com/users/emilengler/followers",
      "following_url": "https://api.github.com/users/emilengler/following{/other_user}",
      "gists_url": "https://api.github.com/users/emilengler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emilengler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emilengler/subscriptions",
      "organizations_url": "https://api.github.com/users/emilengler/orgs",
      "repos_url": "https://api.github.com/users/emilengler/repos",
      "events_url": "https://api.github.com/users/emilengler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emilengler/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abb30de63f368c9875c3f2a4cfe91b1daf9412da"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd6a24307564a56d54d98331d5e1680d27ddc09e/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd6a24307564a56d54d98331d5e1680d27ddc09e/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=bd6a24307564a56d54d98331d5e1680d27ddc09e",
        "patch": "@@ -40,7 +40,7 @@ Import trusted keys\n In order to check the commit signatures, you must add the trusted PGP keys to your machine. [GnuPG](https://gnupg.org/) may be used to import the trusted keys by running the following command:\n \n ```sh\n-gpg --recv-keys $(<contrib/verify-commits/trusted-keys)\n+gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys $(<contrib/verify-commits/trusted-keys)\n ```\n \n Key expiry/revocation"
      }
    ]
  },
  {
    "sha": "70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGVkMmFiN2VmOWU3ZWJmNTZmNzdiN2M0MTBhMzQ1ZmY0NTU5Mzhm",
    "commit": {
      "author": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-30T21:31:46Z"
      },
      "committer": {
        "name": "Aaron Clauson",
        "email": "aaron@sipsorcery.com",
        "date": "2019-11-30T21:31:46Z"
      },
      "message": "Add unit test for DB creation with unicode path\n\nAn issue arose when attempting to switch back to the main repo version of leveldb when the bitcoin data directory uses a unicode path. The leveldb windows file IO wrapper was using the *A ANSI win32 calls instead of the Unicode *W ones. This unit test will catch if the path created by leveldb doesn't match what we're expecting. For more info see https://github.com/google/leveldb/issues/755.",
      "tree": {
        "sha": "0a5fe9362dabea71bc8b4571c2a1292ad29932a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a5fe9362dabea71bc8b4571c2a1292ad29932a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEnTzIanL4SUNC6l/RCkG9w/T6/xwFAl3i38IACgkQCkG9w/T6\n/xxSQg/8D0+j5+8geVste+9uysdOiMKxdulMMRMvSFWq1gd4zeTi13lshNqhI74r\n51+vz+AH8dieoI4PNr2YZ5uy99x9Nnh6crl8cDRioUIDKC3AtkoQUMpNxelnKwlI\nugtTHu8goUn1N6rVnMHq7/bJh5kKBECNIORjr2z6mOYrMstRiTgMslyjloPJqAju\nC0sARmFYprjQMIc8STDXKu8kGEn55NBzJKOTdCV1k6GYnG7u6NXNbLsatb52TxUO\no0T2fnrXzD8zNw9I0RqrUHaRC+7kNl5up1Rld/tiCGVqdvMWPjsnUnw0KTOoKwLA\nF7AKPuqTFE7dYnoZIiOSaY7uqrH5bw5w7NxugfELoMeFBdAy/cszkSOLsfj5W+TO\nW8SZ++CXGLDYdvz8FxhHQW0gsmrKep9wTi2TOikkdf0XJtMKp7mfGERt5/5HUX9D\nEwfzP4wb+J0X5q+ydpD2x9pbpg+77q5zHHgK+5jAdiwHE9B50ruyJJNTl9n+6S1i\npWBVbV4WTeYmeV6JSjZUlxc/4V0cW0miZLA/ibuiNlBlfERHzP1QygX70KxgIZHg\na+xFULctTc/3dwk9dfTzi3qo2o+htTSOK2eOW6rbsjY3AUWBAznSIc1OIICBJhRl\nbXtyIMfJYP19P6TZAg36+7pU6asE2uBqP6T9yFQUmGyIowwfFAA=\n=l8Yo\n-----END PGP SIGNATURE-----",
        "payload": "tree 0a5fe9362dabea71bc8b4571c2a1292ad29932a9\nparent 114e89e596a66f3cb1ebd8fc2d775b61c5722245\nauthor Aaron Clauson <aaron@sipsorcery.com> 1575149506 +0000\ncommitter Aaron Clauson <aaron@sipsorcery.com> 1575149506 +0000\n\nAdd unit test for DB creation with unicode path\n\nAn issue arose when attempting to switch back to the main repo version of leveldb when the bitcoin data directory uses a unicode path. The leveldb windows file IO wrapper was using the *A ANSI win32 calls instead of the Unicode *W ones. This unit test will catch if the path created by leveldb doesn't match what we're expecting. For more info see https://github.com/google/leveldb/issues/755.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f/comments",
    "author": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipsorcery",
      "id": 197660,
      "node_id": "MDQ6VXNlcjE5NzY2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipsorcery",
      "html_url": "https://github.com/sipsorcery",
      "followers_url": "https://api.github.com/users/sipsorcery/followers",
      "following_url": "https://api.github.com/users/sipsorcery/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipsorcery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipsorcery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipsorcery/subscriptions",
      "organizations_url": "https://api.github.com/users/sipsorcery/orgs",
      "repos_url": "https://api.github.com/users/sipsorcery/repos",
      "events_url": "https://api.github.com/users/sipsorcery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipsorcery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "114e89e596a66f3cb1ebd8fc2d775b61c5722245",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/114e89e596a66f3cb1ebd8fc2d775b61c5722245",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/114e89e596a66f3cb1ebd8fc2d775b61c5722245"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b647c0f70b3abf3b6d89146658eee7ab6d6eff88",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
        "patch": "@@ -397,6 +397,18 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(unicodepath)\n+{\n+    // Attempt to create a database with a utf8 character in the path.\n+    // On Windows this test will fail if the directory is created using\n+    // the ANSI CreateDirectoryA  call and the code page isn't UTF8.\n+    // It will succeed if the created with  CreateDirectoryW.\n+    fs::path ph = GetDataDir() / \"test_runner_\u20bf_\ud83c\udfc3_20191128_104644\";\n+    CDBWrapper dbw(ph, (1 << 20));\n+\n+    fs::path lockPath = ph / \"LOCK\";\n+    BOOST_CHECK(boost::filesystem::exists(lockPath));\n+}\n \n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "2ecb7e1556cd970b6dccb5f101a718602487df4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZWNiN2UxNTU2Y2Q5NzBiNmRjY2I1ZjEwMWE3MTg2MDI0ODdkZjRi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-01T03:46:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-01T04:16:48Z"
      },
      "message": "Merge #17521: depends: only use D-Bus with Qt on linux\n\n6fdf5dab26e87888c3511fecef5d4d612b8247d6 depends: only use dbus with qt on linux (fanquake)\n\nPull request description:\n\n  Since #8210 we've been passing `-dbus-runtime` when configuring Qt, however D-Bus isn't used on macOS or Windows. So rather than blanket passing `-dbus-runtime`, only use D-Bus when building for linux, and disable it for Windows and macOS. This also saves some time building qt in depends (for windows or macOS).\n\n  This gist contains a diff of the symbols in a macOS bitcoin-qt after applying this change: https://gist.github.com/fanquake/317e5c9c7d1b5e37a0c1ce8001af18c4.\n\nACKs for top commit:\n  laanwj:\n    ACK 6fdf5dab26e87888c3511fecef5d4d612b8247d6\n\nTree-SHA512: 7c7df6036f27dae6adb807edf94cd26b4dafa3728976d219a68f7388b6477777b35acebd507320e4469c9f2fcf016b311c82e0b12d50546cb5ab66a1e955e464",
      "tree": {
        "sha": "b24514e037f3cb7e155b11ac302619c53d8d5505",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b24514e037f3cb7e155b11ac302619c53d8d5505"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2ecb7e1556cd970b6dccb5f101a718602487df4b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3jPrAACgkQLuufXMCV\nJsHsWhAAhA3ZS0jAReQTs+LMoC0RvUdMQ9Q6b1I2WVj1yp5y7N7CJSRPKrRVAeee\nlwjpHExJjK2CTbiqs0NNQlX7I/lhKingfH9vMOm0Lqp34optsD0O+dnRWFiG4Rlf\nQciE5mgEKthmpYoQB4VyY30VNtErAto9WECLKNwhRaq3FQvcDhfvD7NgieOui+p2\nhM/iYDyaT9HPpsr5QNU1kDmp1ATwPH46KQYWZq1q0b6v2pDHfrSSOAe4L6TWS3mt\nvYaZz+q3a0DiWJINAkxK4c9hPKnlqkg3a9i2MJT4ULj2FyK/8soZUVjgZxkt1hRf\ne6xnYHQD1ybS12NcHH7nb+6HlLFbOdwqS41UVn50hrMd6r5KkAe4t+IWtJqxwznW\ncJHwb+Q2oPnHOMpToBga5SvqqPZ22PQz67lnfkszPAP/9JqEJA3HQoMr5J4nxOGW\nCBLC///Qn+3nZJKGbDqBZeOZY417IVltheJl9I3rnc1BY5lGvJPht6h9IVLvpDQ+\nAuHSZGyXnzlMIIcSGZmwEmjkdkUq3OY+SyFOoDMwHUEF6XVOEpXgnQlTZpo2PwMT\nqK0LaeqsOEgo+6m8pkBvfSjR8Hu2IufwEmlfT1IeqZH+H504t8Rdq77AT1otHsx+\n2KV87+Dmmqda9Z7XXSLwYuNLsalaEaI+0DYEbH4cNxDnOys1BzQ=\n=rLJu\n-----END PGP SIGNATURE-----",
        "payload": "tree b24514e037f3cb7e155b11ac302619c53d8d5505\nparent abb30de63f368c9875c3f2a4cfe91b1daf9412da\nparent 6fdf5dab26e87888c3511fecef5d4d612b8247d6\nauthor fanquake <fanquake@gmail.com> 1575171965 -0500\ncommitter fanquake <fanquake@gmail.com> 1575173808 -0500\n\nMerge #17521: depends: only use D-Bus with Qt on linux\n\n6fdf5dab26e87888c3511fecef5d4d612b8247d6 depends: only use dbus with qt on linux (fanquake)\n\nPull request description:\n\n  Since #8210 we've been passing `-dbus-runtime` when configuring Qt, however D-Bus isn't used on macOS or Windows. So rather than blanket passing `-dbus-runtime`, only use D-Bus when building for linux, and disable it for Windows and macOS. This also saves some time building qt in depends (for windows or macOS).\n\n  This gist contains a diff of the symbols in a macOS bitcoin-qt after applying this change: https://gist.github.com/fanquake/317e5c9c7d1b5e37a0c1ce8001af18c4.\n\nACKs for top commit:\n  laanwj:\n    ACK 6fdf5dab26e87888c3511fecef5d4d612b8247d6\n\nTree-SHA512: 7c7df6036f27dae6adb807edf94cd26b4dafa3728976d219a68f7388b6477777b35acebd507320e4469c9f2fcf016b311c82e0b12d50546cb5ab66a1e955e464\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ecb7e1556cd970b6dccb5f101a718602487df4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2ecb7e1556cd970b6dccb5f101a718602487df4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ecb7e1556cd970b6dccb5f101a718602487df4b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/abb30de63f368c9875c3f2a4cfe91b1daf9412da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/abb30de63f368c9875c3f2a4cfe91b1daf9412da"
      },
      {
        "sha": "6fdf5dab26e87888c3511fecef5d4d612b8247d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fdf5dab26e87888c3511fecef5d4d612b8247d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fdf5dab26e87888c3511fecef5d4d612b8247d6"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 10,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c9ffc1036ccca597b358e95d595fb631fc48699a",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2ecb7e1556cd970b6dccb5f101a718602487df4b/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2ecb7e1556cd970b6dccb5f101a718602487df4b/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=2ecb7e1556cd970b6dccb5f101a718602487df4b",
        "patch": "@@ -25,7 +25,6 @@ $(package)_config_opts_debug = -debug\n $(package)_config_opts += -bindir $(build_prefix)/bin\n $(package)_config_opts += -c++std c++11\n $(package)_config_opts += -confirm-license\n-$(package)_config_opts += -dbus-runtime\n $(package)_config_opts += -hostprefix $(build_prefix)\n $(package)_config_opts += -no-compile-examples\n $(package)_config_opts += -no-cups\n@@ -105,8 +104,10 @@ $(package)_config_opts += -no-feature-vnc\n $(package)_config_opts += -no-feature-wizard\n $(package)_config_opts += -no-feature-xml\n \n+$(package)_config_opts_darwin = -no-dbus\n+\n ifneq ($(build_os),darwin)\n-$(package)_config_opts_darwin = -xplatform macx-clang-linux\n+$(package)_config_opts_darwin += -xplatform macx-clang-linux\n $(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n $(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n $(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n@@ -122,12 +123,17 @@ $(package)_config_opts_linux += -no-feature-xlib\n $(package)_config_opts_linux += -system-freetype\n $(package)_config_opts_linux += -fontconfig\n $(package)_config_opts_linux += -no-opengl\n+$(package)_config_opts_linux += -dbus-runtime\n $(package)_config_opts_arm_linux += -platform linux-g++ -xplatform bitcoin-linux-g++\n $(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n $(package)_config_opts_x86_64_linux = -xplatform linux-g++-64\n $(package)_config_opts_aarch64_linux = -xplatform linux-aarch64-gnu-g++\n $(package)_config_opts_riscv64_linux = -platform linux-g++ -xplatform bitcoin-linux-g++\n-$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n+\n+$(package)_config_opts_mingw32 = -no-opengl\n+$(package)_config_opts_mingw32 += -no-dbus\n+$(package)_config_opts_mingw32 += -xplatform win32-g++\n+$(package)_config_opts_mingw32 += -device-option CROSS_COMPILE=\"$(host)-\"\n \n $(package)_config_opts_android = -xplatform android-clang\n $(package)_config_opts_android += -android-sdk $(ANDROID_SDK)\n@@ -137,6 +143,7 @@ $(package)_config_opts_android += -device-option CROSS_COMPILE=\"$(host)-\"\n $(package)_config_opts_android += -egl\n $(package)_config_opts_android += -qpa xcb\n $(package)_config_opts_android += -no-eglfs\n+$(package)_config_opts_android += -no-dbus\n $(package)_config_opts_android += -opengl es2\n $(package)_config_opts_android += -qt-freetype\n $(package)_config_opts_android += -no-fontconfig"
      }
    ]
  },
  {
    "sha": "19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTY5OGFjNmJjMGU2Yzc1YTkyYjAyYzhiNzRhZTFmYTUxYzM0ZTA4",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-01T16:56:52Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-01T17:23:44Z"
      },
      "message": "Merge #17568: wallet: fix when sufficient preset inputs and subtractFeeFromOutputs\n\neadd1304c81e0b89178e4cc7630bd31650850c85 tests: Add a test for funding with sufficient preset inputs and subtractFeeFromOutputs (Andrew Chow)\nff330badd45067cb520b1cfa1844f60a4c9f2031 Default to bnb_used = false as there are many cases where BnB is not used (Andrew Chow)\n\nPull request description:\n\n  #17290 introduced a bug where, when we had preset inputs that covered the amount being sent and subtractFeeFrromOutputs was being used, transaction funding would result in a `Fee exceeds maximum configured by -maxtxfee` error. This was happening because we weren't setting `bnb_used = false` when the preset inputs were used as it should have been. This resulted in a too high fee because the change would go to fees accidentally.\n\n  Apparently this particular case doesn't have a test, so I've added one as well.\n\nACKs for top commit:\n  Sjors:\n    ACK eadd130. I can't get this new test to fail on macOS (without this PR). It passes whether or not I compile with `--enable-debug`. It does fail on Ubuntu. Yay undefined behavior... Anyway, it's a useful test.\n  fanquake:\n    ACK eadd1304c81e0b89178e4cc7630bd31650850c85\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17568/commits/eadd1304c81e0b89178e4cc7630bd31650850c85\n\nTree-SHA512: 7286c321f78666eea558cc591174630d210263594df41cab1065417510591ee514ade0e1d0cec8af09a785757da68de82592b013e8fe8d4966cec3254368706e",
      "tree": {
        "sha": "df9e5c79831e18ca0dd102da7a0657ea632a1470",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df9e5c79831e18ca0dd102da7a0657ea632a1470"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3j9yAACgkQLuufXMCV\nJsEqQBAAp3BGOZX0koVLfVykQtMxZp1G8n8R5FEkPk/hTqoJJprmJvJxUq/xmPcP\nuQ8Oey9VUk50uJENujsl935+WDVp17mAbxSi0SywTXcLBtDi4Tg3BwoS5mk9zFlf\nPk6M1rV3nspnSb0BabzqiMUpdFDAk6YxwlN3d5+yfQT0j5lBDmNTxeSFN0xv29RF\nDzcQ/fEecDlXY4M/jF5SndlV3uc1xSL5yLaHzNdvsU5Lz3AwIvOOgAgj9y2aJVzp\nweq/OEMZSVbrOY1o6wyeYDtZR3i3j9F2wUVkl68wfHYv/WGGgp6dPgYOK9ZEe4Ht\nKIAB1OZ/0L3yDWO/GHRFpvRRiyh02cWLRZETO9Nea17h0rULrTMQf2XNhZvY7tOM\nX5PK4nDdFgKm9EOrGDoZZG+nz7XsUw4FRUJw1fAp011Whlxt2S1f97GNPRJIcNZH\n+dfX15U/rgiVEu60RH/t+S//XxVWghSiMXxTRIj8Hhb8GJGcIgQCB8u5ucZgTlD0\nfOXK2gR86zW30JId+0YpabBKmxihj7EBmjYKqOViWW9iTnL1j8B1BreWHJogvts9\niz+2wjbuTe5BjUdUOS9C/hmfDqQgRvdzbNq1yKyucUFbz9UPlvylX+vfZ+2ulxUW\nV/98v7KE8MZFFCxqNoODL17M9RrcpmNCaHK61guWhEdafCH0kXI=\n=NBAq\n-----END PGP SIGNATURE-----",
        "payload": "tree df9e5c79831e18ca0dd102da7a0657ea632a1470\nparent 2ecb7e1556cd970b6dccb5f101a718602487df4b\nparent eadd1304c81e0b89178e4cc7630bd31650850c85\nauthor fanquake <fanquake@gmail.com> 1575219412 -0500\ncommitter fanquake <fanquake@gmail.com> 1575221024 -0500\n\nMerge #17568: wallet: fix when sufficient preset inputs and subtractFeeFromOutputs\n\neadd1304c81e0b89178e4cc7630bd31650850c85 tests: Add a test for funding with sufficient preset inputs and subtractFeeFromOutputs (Andrew Chow)\nff330badd45067cb520b1cfa1844f60a4c9f2031 Default to bnb_used = false as there are many cases where BnB is not used (Andrew Chow)\n\nPull request description:\n\n  #17290 introduced a bug where, when we had preset inputs that covered the amount being sent and subtractFeeFrromOutputs was being used, transaction funding would result in a `Fee exceeds maximum configured by -maxtxfee` error. This was happening because we weren't setting `bnb_used = false` when the preset inputs were used as it should have been. This resulted in a too high fee because the change would go to fees accidentally.\n\n  Apparently this particular case doesn't have a test, so I've added one as well.\n\nACKs for top commit:\n  Sjors:\n    ACK eadd130. I can't get this new test to fail on macOS (without this PR). It passes whether or not I compile with `--enable-debug`. It does fail on Ubuntu. Yay undefined behavior... Anyway, it's a useful test.\n  fanquake:\n    ACK eadd1304c81e0b89178e4cc7630bd31650850c85\n  instagibbs:\n    utACK https://github.com/bitcoin/bitcoin/pull/17568/commits/eadd1304c81e0b89178e4cc7630bd31650850c85\n\nTree-SHA512: 7286c321f78666eea558cc591174630d210263594df41cab1065417510591ee514ade0e1d0cec8af09a785757da68de82592b013e8fe8d4966cec3254368706e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ecb7e1556cd970b6dccb5f101a718602487df4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ecb7e1556cd970b6dccb5f101a718602487df4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ecb7e1556cd970b6dccb5f101a718602487df4b"
      },
      {
        "sha": "eadd1304c81e0b89178e4cc7630bd31650850c85",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eadd1304c81e0b89178e4cc7630bd31650850c85",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eadd1304c81e0b89178e4cc7630bd31650850c85"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 17,
      "deletions": 7
    },
    "files": [
      {
        "sha": "647b381b39471f8d883e9d13af7549b26c9844ce",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "patch": "@@ -2270,12 +2270,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n     std::vector<COutput> vCoins(vAvailableCoins);\n     CAmount value_to_select = nTargetValue;\n \n+    // Default to bnb was not used. If we use it, we set it later\n+    bnb_used = false;\n+\n     // coin control -> return all selected outputs (we want all selected to go into the transaction for sure)\n     if (coin_control.HasSelected() && !coin_control.fAllowOtherInputs)\n     {\n-        // We didn't use BnB here, so set it to false.\n-        bnb_used = false;\n-\n         for (const COutput& out : vCoins)\n         {\n             if (!out.fSpendable)\n@@ -2300,14 +2300,12 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             const CWalletTx& wtx = it->second;\n             // Clearly invalid input, fail\n             if (wtx.tx->vout.size() <= outpoint.n) {\n-                bnb_used = false;\n                 return false;\n             }\n             // Just to calculate the marginal byte size\n             CInputCoin coin(wtx.tx, outpoint.n, wtx.GetSpendSize(outpoint.n, false));\n             nValueFromPresetInputs += coin.txout.nValue;\n             if (coin.m_input_bytes <= 0) {\n-                bnb_used = false;\n                 return false; // Not solvable, can't estimate size for fee\n             }\n             coin.effective_value = coin.txout.nValue - coin_selection_params.effective_fee.GetFee(coin.m_input_bytes);\n@@ -2318,7 +2316,6 @@ bool CWallet::SelectCoins(const std::vector<COutput>& vAvailableCoins, const CAm\n             }\n             setPresetCoins.insert(coin);\n         } else {\n-            bnb_used = false;\n             return false; // TODO: Allow non-wallet inputs\n         }\n     }\n@@ -2678,7 +2675,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n                 }\n \n                 // Choose coins to use\n-                bool bnb_used;\n+                bool bnb_used = false;\n                 if (pick_new_inputs) {\n                     nValueIn = 0;\n                     setCoins.clear();"
      },
      {
        "sha": "6f1ae0d3ba4fbf9188adf2471c1a695469b8bc8b",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "patch": "@@ -92,6 +92,7 @@ def run_test(self):\n         self.test_option_feerate()\n         self.test_address_reuse()\n         self.test_option_subtract_fee_from_outputs()\n+        self.test_subtract_fee_with_presets()\n \n     def test_change_position(self):\n         \"\"\"Ensure setting changePosition in fundraw with an exact match is handled properly.\"\"\"\n@@ -741,5 +742,17 @@ def test_option_subtract_fee_from_outputs(self):\n         # The total subtracted from the outputs is equal to the fee.\n         assert_equal(share[0] + share[2] + share[3], result[0]['fee'])\n \n+    def test_subtract_fee_with_presets(self):\n+        self.log.info(\"Test fundrawtxn subtract fee from outputs with preset inputs that are sufficient\")\n+\n+        addr = self.nodes[0].getnewaddress()\n+        txid = self.nodes[0].sendtoaddress(addr, 10)\n+        vout = find_vout_for_address(self.nodes[0], txid, addr)\n+\n+        rawtx = self.nodes[0].createrawtransaction([{'txid': txid, 'vout': vout}], [{self.nodes[0].getnewaddress(): 5}])\n+        fundedtx = self.nodes[0].fundrawtransaction(rawtx, {'subtractFeeFromOutputs': [0]})\n+        signedtx = self.nodes[0].signrawtransactionwithwallet(fundedtx['hex'])\n+        self.nodes[0].sendrawtransaction(signedtx['hex'])\n+\n if __name__ == '__main__':\n     RawTransactionsTest().main()"
      }
    ]
  },
  {
    "sha": "02afb0c550dc8529918460c845d1da3adf236eed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmFmYjBjNTUwZGM4NTI5OTE4NDYwYzg0NWQxZGEzYWRmMjM2ZWVk",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-12-01T14:46:44Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2019-12-02T01:54:16Z"
      },
      "message": "Fix origfee return for bumpfee with feerate arg",
      "tree": {
        "sha": "37f8672127e60c7841c857d477598ecfe3f9d42e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37f8672127e60c7841c857d477598ecfe3f9d42e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02afb0c550dc8529918460c845d1da3adf236eed",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02afb0c550dc8529918460c845d1da3adf236eed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02afb0c550dc8529918460c845d1da3adf236eed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02afb0c550dc8529918460c845d1da3adf236eed/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2ecb7e1556cd970b6dccb5f101a718602487df4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2ecb7e1556cd970b6dccb5f101a718602487df4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2ecb7e1556cd970b6dccb5f101a718602487df4b"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36588eb7d195eeb1bdd270d4629444aae2d5aeab",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02afb0c550dc8529918460c845d1da3adf236eed/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02afb0c550dc8529918460c845d1da3adf236eed/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=02afb0c550dc8529918460c845d1da3adf236eed",
        "patch": "@@ -108,12 +108,11 @@ static feebumper::Result CheckFeeRate(const CWallet& wallet, const CWalletTx& wt\n     return feebumper::Result::OK;\n }\n \n-static CFeeRate EstimateFeeRate(const CWallet& wallet, const CWalletTx& wtx, CCoinControl& coin_control, CAmount& old_fee)\n+static CFeeRate EstimateFeeRate(const CWallet& wallet, const CWalletTx& wtx, const CAmount old_fee, CCoinControl& coin_control)\n {\n     // Get the fee rate of the original transaction. This is calculated from\n     // the tx fee/vsize, so it may have been rounded down. Add 1 satoshi to the\n     // result.\n-    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n     int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n     CFeeRate feerate(old_fee, txSize);\n     feerate += CFeeRate(1);\n@@ -309,6 +308,8 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n         }\n     }\n \n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+\n     if (coin_control.m_feerate) {\n         // The user provided a feeRate argument.\n         // We calculate this here to avoid compiler warning on the cs_wallet lock\n@@ -319,7 +320,7 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n         }\n     } else {\n         // The user did not provide a feeRate argument\n-        new_coin_control.m_feerate = EstimateFeeRate(wallet, wtx, new_coin_control, old_fee);\n+        new_coin_control.m_feerate = EstimateFeeRate(wallet, wtx, old_fee, new_coin_control);\n     }\n \n     // Fill in required inputs we are double-spending(all of them)"
      },
      {
        "sha": "0c08655833ea88af9b5047a5840e1d3bf0c6808a",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02afb0c550dc8529918460c845d1da3adf236eed/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02afb0c550dc8529918460c845d1da3adf236eed/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=02afb0c550dc8529918460c845d1da3adf236eed",
        "patch": "@@ -101,7 +101,8 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     else:\n         bumped_tx = rbf_node.bumpfee(rbfid)\n     assert_equal(bumped_tx[\"errors\"], [])\n-    assert bumped_tx[\"fee\"] - abs(rbftx[\"fee\"]) > 0\n+    assert bumped_tx[\"fee\"] > -rbftx[\"fee\"]\n+    assert_equal(bumped_tx[\"origfee\"], -rbftx[\"fee\"])\n     # check that bumped_tx propagates, original tx was evicted and has a wallet conflict\n     self.sync_mempools((rbf_node, peer_node))\n     assert bumped_tx[\"txid\"] in rbf_node.getrawmempool()"
      }
    ]
  },
  {
    "sha": "35eda631ed3bd23d4a41761a85a96f925d4a6337",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNWVkYTYzMWVkM2JkMjNkNGE0MTc2MWE4NWE5NmY5MjVkNGE2MzM3",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-02T16:06:10Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-02T16:24:52Z"
      },
      "message": "Merge #17634: qt: Fix comparison function signature\n\n98fbd1cdffaa69357091cc67e959ac21119dfa16 Use correct C++11 header for std::swap() (Hennadii Stepanov)\nb66861e2e5e8a49e11e7489cf22c3007bc7082cc Fix comparison function signature (Hennadii Stepanov)\n\nPull request description:\n\n  This PR fixes build on CentOS 7 with GCC 4.8.5:\n\n  ```\n  ...\n  In file included from /usr/include/c++/4.8.2/algorithm:62:0,\n                   from ./serialize.h:11,\n                   from ./qt/sendcoinsrecipient.h:13,\n                   from ./qt/recentrequeststablemodel.h:8,\n                   from qt/recentrequeststablemodel.cpp:5:\n  /usr/include/c++/4.8.2/bits/stl_algo.h: In instantiation of \u2018_RandomAccessIterator std::__unguarded_partition(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Tp = RecentRequestEntry; _Compare = RecentRequestEntryLessThan]\u2019:\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2296:78:   required from \u2018_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Compare = RecentRequestEntryLessThan]\u2019\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2337:62:   required from \u2018void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Size = int; _Compare = RecentRequestEntryLessThan]\u2019\n  /usr/include/c++/4.8.2/bits/stl_algo.h:5499:44:   required from \u2018void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = QList<RecentRequestEntry>::iterator; _Compare = RecentRequestEntryLessThan]\u2019\n  qt/recentrequeststablemodel.cpp:208:82:   required from here\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2263:35: error: no match for call to \u2018(RecentRequestEntryLessThan) (RecentRequestEntry&, const RecentRequestEntry&)\u2019\n      while (__comp(*__first, __pivot))\n                                     ^\n  In file included from qt/recentrequeststablemodel.cpp:5:0:\n  ./qt/recentrequeststablemodel.h:43:7: note: candidate is:\n   class RecentRequestEntryLessThan\n         ^\n  qt/recentrequeststablemodel.cpp:217:6: note: bool RecentRequestEntryLessThan::operator()(RecentRequestEntry&, RecentRequestEntry&) const\n   bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n        ^\n  qt/recentrequeststablemodel.cpp:217:6: note:   no known conversion for argument 2 from \u2018const RecentRequestEntry\u2019 to \u2018RecentRequestEntry&\u2019\n  In file included from /usr/include/c++/4.8.2/algorithm:62:0,\n                   from ./serialize.h:11,\n                   from ./qt/sendcoinsrecipient.h:13,\n                   from ./qt/recentrequeststablemodel.h:8,\n                   from qt/recentrequeststablemodel.cpp:5:\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2266:34: error: no match for call to \u2018(RecentRequestEntryLessThan) (const RecentRequestEntry&, RecentRequestEntry&)\u2019\n      while (__comp(__pivot, *__last))\n                                    ^\n  In file included from qt/recentrequeststablemodel.cpp:5:0:\n  ./qt/recentrequeststablemodel.h:43:7: note: candidate is:\n   class RecentRequestEntryLessThan\n         ^\n  qt/recentrequeststablemodel.cpp:217:6: note: bool RecentRequestEntryLessThan::operator()(RecentRequestEntry&, RecentRequestEntry&) const\n   bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n        ^\n  qt/recentrequeststablemodel.cpp:217:6: note:   no known conversion for argument 1 from \u2018const RecentRequestEntry\u2019 to \u2018RecentRequestEntry&\u2019\n    CXX      qt/qt_libbitcoinqt_a-sendcoinsentry.o\n  make[2]: *** [qt/qt_libbitcoinqt_a-recentrequeststablemodel.o] Error 1\n  ```\n\n  Also for `std::swap()` header `<algorithm>` is replaced with `<utility>` one.\n  Refs:\n  - [`std::swap()`](https://en.cppreference.com/w/cpp/algorithm/swap)\n  - [standard library header `<utility>`](https://en.cppreference.com/w/cpp/header/utility)\n\nACKs for top commit:\n  promag:\n    Code review ACK 98fbd1cdffaa69357091cc67e959ac21119dfa16.\n  jonasschnelli:\n    utACK 98fbd1cdffaa69357091cc67e959ac21119dfa16\n  fanquake:\n    ACK 98fbd1cdffaa69357091cc67e959ac21119dfa16\n\nTree-SHA512: 91324490c1bdb98f186d233418e7e72ae7bee507876e94fb8c038bee031cea9e1046900f21156da4b7c33abcd726796867b124c4132d9ae3759877e90a8527db",
      "tree": {
        "sha": "6bc7458902f40d6f310cf17b55f17c61951de033",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bc7458902f40d6f310cf17b55f17c61951de033"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/35eda631ed3bd23d4a41761a85a96f925d4a6337",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3lOtQACgkQLuufXMCV\nJsE0zQ/9FEuEPHN3S7j9QXRrXW3O6HuRqw/vxWsmTzP/H7UCz2HSDyz+2ko2A/fG\nUcjaq2rueBGnzNqaroCJC++1Yuu6WoxwPSI3n8yOo10fXyPkOn4EJ0qqdL1GBOz+\nGs+F+1sVT1tyGjPcoLYnsf0vHBEcsPsvytM3M2gAFZ+QJSvhLEbl7FUDqU+uu0G7\nrE3XdfvPHv9kWgBToBNmXERCmRQBsPjo77PTFqblb8LNjehgaAU3zttHqpk3ztxs\n3UfJPaPJ9osRdiNtI4Pcggv0hrFCuPuxUdT463VGg0+LPmGUvInMBPWdyDkbBu+2\nAfztrZ3c6sEl+mngg2hU21Sl6SEmQfwJPO809SLg6cAu/Jn3u869OiRUzdBgeA7X\nI5NlZmvO2ZPDAe6HQ2gx4J4TtB2L/m8OOFG25niQ0fFyQ+EGF96GD6HHX+qOvVZV\ns0oLVydpByajirlz/fiNgqFUvPxr9o7b8ItmsNug+SSfVbMBTtc031KOjqHoP12Y\nrOCvwp5mjc8qwZ3qmm1eHm8Uos4iyDiMTo/rtsZ+jyw2hfV1LLQon8MQQ6No7J0s\nR1X7gotvQ2cRAnPm+okcaEhKrj5NZYU9nGPDzHBchwMXppXUQITxmQ7qQiQgAkMz\nXztRl2SBhZe3iwSPvUCJkERbrnluWMl0aaxA5Gsc2xIz7eFDowA=\n=5uzo\n-----END PGP SIGNATURE-----",
        "payload": "tree 6bc7458902f40d6f310cf17b55f17c61951de033\nparent 19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08\nparent 98fbd1cdffaa69357091cc67e959ac21119dfa16\nauthor fanquake <fanquake@gmail.com> 1575302770 -0500\ncommitter fanquake <fanquake@gmail.com> 1575303892 -0500\n\nMerge #17634: qt: Fix comparison function signature\n\n98fbd1cdffaa69357091cc67e959ac21119dfa16 Use correct C++11 header for std::swap() (Hennadii Stepanov)\nb66861e2e5e8a49e11e7489cf22c3007bc7082cc Fix comparison function signature (Hennadii Stepanov)\n\nPull request description:\n\n  This PR fixes build on CentOS 7 with GCC 4.8.5:\n\n  ```\n  ...\n  In file included from /usr/include/c++/4.8.2/algorithm:62:0,\n                   from ./serialize.h:11,\n                   from ./qt/sendcoinsrecipient.h:13,\n                   from ./qt/recentrequeststablemodel.h:8,\n                   from qt/recentrequeststablemodel.cpp:5:\n  /usr/include/c++/4.8.2/bits/stl_algo.h: In instantiation of \u2018_RandomAccessIterator std::__unguarded_partition(_RandomAccessIterator, _RandomAccessIterator, const _Tp&, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Tp = RecentRequestEntry; _Compare = RecentRequestEntryLessThan]\u2019:\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2296:78:   required from \u2018_RandomAccessIterator std::__unguarded_partition_pivot(_RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Compare = RecentRequestEntryLessThan]\u2019\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2337:62:   required from \u2018void std::__introsort_loop(_RandomAccessIterator, _RandomAccessIterator, _Size, _Compare) [with _RandomAccessIterator = QList<RecentRequestEntry>::iterator; _Size = int; _Compare = RecentRequestEntryLessThan]\u2019\n  /usr/include/c++/4.8.2/bits/stl_algo.h:5499:44:   required from \u2018void std::sort(_RAIter, _RAIter, _Compare) [with _RAIter = QList<RecentRequestEntry>::iterator; _Compare = RecentRequestEntryLessThan]\u2019\n  qt/recentrequeststablemodel.cpp:208:82:   required from here\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2263:35: error: no match for call to \u2018(RecentRequestEntryLessThan) (RecentRequestEntry&, const RecentRequestEntry&)\u2019\n      while (__comp(*__first, __pivot))\n                                     ^\n  In file included from qt/recentrequeststablemodel.cpp:5:0:\n  ./qt/recentrequeststablemodel.h:43:7: note: candidate is:\n   class RecentRequestEntryLessThan\n         ^\n  qt/recentrequeststablemodel.cpp:217:6: note: bool RecentRequestEntryLessThan::operator()(RecentRequestEntry&, RecentRequestEntry&) const\n   bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n        ^\n  qt/recentrequeststablemodel.cpp:217:6: note:   no known conversion for argument 2 from \u2018const RecentRequestEntry\u2019 to \u2018RecentRequestEntry&\u2019\n  In file included from /usr/include/c++/4.8.2/algorithm:62:0,\n                   from ./serialize.h:11,\n                   from ./qt/sendcoinsrecipient.h:13,\n                   from ./qt/recentrequeststablemodel.h:8,\n                   from qt/recentrequeststablemodel.cpp:5:\n  /usr/include/c++/4.8.2/bits/stl_algo.h:2266:34: error: no match for call to \u2018(RecentRequestEntryLessThan) (const RecentRequestEntry&, RecentRequestEntry&)\u2019\n      while (__comp(__pivot, *__last))\n                                    ^\n  In file included from qt/recentrequeststablemodel.cpp:5:0:\n  ./qt/recentrequeststablemodel.h:43:7: note: candidate is:\n   class RecentRequestEntryLessThan\n         ^\n  qt/recentrequeststablemodel.cpp:217:6: note: bool RecentRequestEntryLessThan::operator()(RecentRequestEntry&, RecentRequestEntry&) const\n   bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n        ^\n  qt/recentrequeststablemodel.cpp:217:6: note:   no known conversion for argument 1 from \u2018const RecentRequestEntry\u2019 to \u2018RecentRequestEntry&\u2019\n    CXX      qt/qt_libbitcoinqt_a-sendcoinsentry.o\n  make[2]: *** [qt/qt_libbitcoinqt_a-recentrequeststablemodel.o] Error 1\n  ```\n\n  Also for `std::swap()` header `<algorithm>` is replaced with `<utility>` one.\n  Refs:\n  - [`std::swap()`](https://en.cppreference.com/w/cpp/algorithm/swap)\n  - [standard library header `<utility>`](https://en.cppreference.com/w/cpp/header/utility)\n\nACKs for top commit:\n  promag:\n    Code review ACK 98fbd1cdffaa69357091cc67e959ac21119dfa16.\n  jonasschnelli:\n    utACK 98fbd1cdffaa69357091cc67e959ac21119dfa16\n  fanquake:\n    ACK 98fbd1cdffaa69357091cc67e959ac21119dfa16\n\nTree-SHA512: 91324490c1bdb98f186d233418e7e72ae7bee507876e94fb8c038bee031cea9e1046900f21156da4b7c33abcd726796867b124c4132d9ae3759877e90a8527db\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35eda631ed3bd23d4a41761a85a96f925d4a6337",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/35eda631ed3bd23d4a41761a85a96f925d4a6337",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35eda631ed3bd23d4a41761a85a96f925d4a6337/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08"
      },
      {
        "sha": "98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98fbd1cdffaa69357091cc67e959ac21119dfa16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98fbd1cdffaa69357091cc67e959ac21119dfa16"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "4ad5818cdc1113767ac390e3165a8e63afaf8e0d",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -6,11 +6,11 @@\n #define BITCOIN_CUCKOOCACHE_H\n \n #include <array>\n-#include <algorithm>\n #include <atomic>\n-#include <cstring>\n #include <cmath>\n+#include <cstring>\n #include <memory>\n+#include <utility>\n #include <vector>\n \n "
      },
      {
        "sha": "4fb07688ffb62f27998004ff0fe079e125322a4b",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -13,6 +13,7 @@\n #include <algorithm>\n #include <cstddef>\n #include <type_traits>\n+#include <utility>\n \n #pragma pack(push, 1)\n /** Implements a drop-in replacement for std::vector<T> which stores up to N"
      },
      {
        "sha": "b6c6984b1008dbe8cf4e05b03ee81b9b2bb9a96a",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -8,7 +8,7 @@\n #include <net_types.h> // For banmap_t\n #include <qt/clientmodel.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "514ff35bcdbae547b01c7c31e9362d476ac230fd",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -10,7 +10,7 @@\n \n #include <interfaces/node.h>\n \n-#include <algorithm>\n+#include <utility>\n \n #include <QDebug>\n #include <QList>"
      },
      {
        "sha": "18fa5f417f81f2d21cd3201653a4fa315b1bb253",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -12,8 +12,7 @@\n #include <clientversion.h>\n #include <streams.h>\n \n-#include <algorithm>\n-\n+#include <utility>\n \n RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     QAbstractTableModel(parent), walletModel(parent)\n@@ -214,10 +213,10 @@ void RecentRequestsTableModel::updateDisplayUnit()\n     updateAmountColumnTitle();\n }\n \n-bool RecentRequestEntryLessThan::operator()(RecentRequestEntry &left, RecentRequestEntry &right) const\n+bool RecentRequestEntryLessThan::operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const\n {\n-    RecentRequestEntry *pLeft = &left;\n-    RecentRequestEntry *pRight = &right;\n+    const RecentRequestEntry* pLeft = &left;\n+    const RecentRequestEntry* pRight = &right;\n     if (order == Qt::DescendingOrder)\n         std::swap(pLeft, pRight);\n "
      },
      {
        "sha": "f5085f726887252d81df25235fd63baec1936411",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -45,7 +45,7 @@ class RecentRequestEntryLessThan\n public:\n     RecentRequestEntryLessThan(int nColumn, Qt::SortOrder fOrder):\n         column(nColumn), order(fOrder) {}\n-    bool operator()(RecentRequestEntry &left, RecentRequestEntry &right) const;\n+    bool operator()(const RecentRequestEntry& left, const RecentRequestEntry& right) const;\n \n private:\n     int column;"
      },
      {
        "sha": "482fe3772c25d45d000c122fed66417e82704ab6",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -17,6 +17,7 @@\n #include <condition_variable>\n \n #include <unordered_set>\n+#include <utility>\n \n BOOST_FIXTURE_TEST_SUITE(checkqueue_tests, TestingSetup)\n "
      },
      {
        "sha": "54f97e721325650e329558d76dcf5ca1caefae8e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/35eda631ed3bd23d4a41761a85a96f925d4a6337/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "patch": "@@ -23,7 +23,6 @@\n #include <versionbits.h>\n #include <serialize.h>\n \n-#include <algorithm>\n #include <atomic>\n #include <map>\n #include <memory>"
      }
    ]
  },
  {
    "sha": "ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTQxYWE0OTY5MTY5Y2Q3M2Q2YjRmNTc0NDRlZDdkOGQ4NzVkZTEw",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:20Z"
      },
      "message": "Key pool: Move LearnRelated and GetDestination calls\n\nAddresses are determined by LegacyScriptPubKeyMan::GetReservedDestination\ninstead of ReserveDestination::GetReservedDestination as other ScriptPubKeyMan\nimplementations may construct addresses differently\n\nThis does not change behavior.",
      "tree": {
        "sha": "1645f6defd962dc195bde34031a862a9bc84eed3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1645f6defd962dc195bde34031a862a9bc84eed3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65833a74076cddf986037c6eb3b29a9b9dbe31c5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65833a74076cddf986037c6eb3b29a9b9dbe31c5"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "4986871fb708283285233135a59a1443dd6720ca",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -262,7 +262,7 @@ bool LegacyScriptPubKeyMan::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n     return true;\n }\n \n-bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool)\n+bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool)\n {\n     if (!CanGetAddresses(internal)) {\n         return false;\n@@ -271,6 +271,7 @@ bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool i\n     if (!ReserveKeyFromKeyPool(index, keypool, internal)) {\n         return false;\n     }\n+    address = GetDestinationForKey(keypool.vchPubKey, type);\n     return true;\n }\n \n@@ -1091,6 +1092,7 @@ void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& ty\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n+    LearnRelatedScripts(pubkey, type);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n "
      },
      {
        "sha": "bcc62ece1e9ee9dfd74dcd8fb990e07f0ef212ce",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -150,7 +150,7 @@ class ScriptPubKeyMan\n     virtual bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) { return false; }\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n-    virtual bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) { return false; }\n+    virtual bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) { return false; }\n     virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n     virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n \n@@ -273,7 +273,7 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     //! will encrypt previously unencrypted keys\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n-    bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) override;\n+    bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) override;\n     void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n     void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n "
      },
      {
        "sha": "2bdec16f289708ea7b3bdb3f3f789c4be7f771b4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -3302,14 +3302,13 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n     if (nIndex == -1)\n     {\n         CKeyPool keypool;\n-        if (!m_spk_man->GetReservedDestination(type, internal, nIndex, keypool)) {\n+        if (!m_spk_man->GetReservedDestination(type, internal, address, nIndex, keypool)) {\n             return false;\n         }\n         vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n     }\n     assert(vchPubKey.IsValid());\n-    address = GetDestinationForKey(vchPubKey, type);\n     dest = address;\n     return true;\n }\n@@ -3318,7 +3317,6 @@ void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n         m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n-        m_spk_man->LearnRelatedScripts(vchPubKey, type);\n     }\n     nIndex = -1;\n     vchPubKey = CPubKey();"
      },
      {
        "sha": "f6cbe6f6de7937a207465647bfbbd091a7b11e50",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba41aa4969169cd73d6b4f57444ed7d8d875de10/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "patch": "@@ -141,7 +141,8 @@ class ReserveDestination\n protected:\n     //! The wallet to reserve from\n     CWallet* const pwallet;\n-    LegacyScriptPubKeyMan* m_spk_man{nullptr};\n+    //! The ScriptPubKeyMan to reserve from. Based on type when GetReservedDestination is called\n+    ScriptPubKeyMan* m_spk_man{nullptr};\n     OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};"
      }
    ]
  },
  {
    "sha": "386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozODZhOTk0Yjg1M2JjNWIzYTJlZDBkODEyNjczNDY1YjhmZmE0ODQ5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:46Z"
      },
      "message": "Key pool: Change ReturnDestination interface to take address instead of key\n\nIn order for ScriptPubKeyMan to be generic and work with future\nScriptPubKeyMans, ScriptPubKeyMan::ReturnDestination is changed to\ntake a CTxDestination instead of a CPubKey. Since LegacyScriptPubKeyMan\nstill deals with keys internally, a new map m_reserved_key_to_index is\nadded in order to track the keypool indexes that have been reserved.\n\nThe CPubKey argument of KeepDestination is also  removed so that it is\nmore generic. Instead of taking a CPubKey or a CTxDestination, we just use\nthe nIndex given to find the pubkey.",
      "tree": {
        "sha": "0589f2d5ad8d22fe0d089f2de67bf62b842378cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0589f2d5ad8d22fe0d089f2de67bf62b842378cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/386a994b853bc5b3a2ed0d812673465b8ffa4849",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba41aa4969169cd73d6b4f57444ed7d8d875de10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba41aa4969169cd73d6b4f57444ed7d8d875de10"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 20,
      "deletions": 16
    },
    "files": [
      {
        "sha": "e5b45a81a1b2a4954f51ebf70beef6088baaf3b4",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 4,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -1087,16 +1087,20 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n+    CPubKey pubkey;\n+    bool have_pk = GetPubKey(m_index_to_reserved_key.at(nIndex), pubkey);\n+    assert(have_pk);\n     LearnRelatedScripts(pubkey, type);\n+    m_index_to_reserved_key.erase(nIndex);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n-void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CTxDestination&)\n {\n     // Return to key pool\n     {\n@@ -1108,7 +1112,9 @@ void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, co\n         } else {\n             setExternalKeyPool.insert(nIndex);\n         }\n-        m_pool_key_to_index[pubkey.GetID()] = nIndex;\n+        CKeyID& pubkey_id = m_index_to_reserved_key.at(nIndex);\n+        m_pool_key_to_index[pubkey_id] = nIndex;\n+        m_index_to_reserved_key.erase(nIndex);\n         NotifyCanGetAddressesChanged();\n     }\n     WalletLogPrintf(\"keypool return %d\\n\", nIndex);\n@@ -1130,7 +1136,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, const OutputType typ\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepDestination(nIndex, type, keypool.vchPubKey);\n+        KeepDestination(nIndex, type);\n         result = keypool.vchPubKey;\n     }\n     return true;\n@@ -1175,6 +1181,8 @@ bool LegacyScriptPubKeyMan::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& key\n             throw std::runtime_error(std::string(__func__) + \": keypool entry invalid\");\n         }\n \n+        assert(m_index_to_reserved_key.count(nIndex) == 0);\n+        m_index_to_reserved_key[nIndex] = keypool.vchPubKey.GetID();\n         m_pool_key_to_index.erase(keypool.vchPubKey.GetID());\n         WalletLogPrintf(\"keypool reserve %d\\n\", nIndex);\n     }"
      },
      {
        "sha": "6ed9a4787ac88376cf49d896348c5a4060c30a5a",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -151,8 +151,8 @@ class ScriptPubKeyMan\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n     virtual bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) { return false; }\n-    virtual void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) {}\n-    virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n+    virtual void KeepDestination(int64_t index, const OutputType& type) {}\n+    virtual void ReturnDestination(int64_t index, bool internal, const CTxDestination& addr) {}\n \n     virtual bool TopUp(unsigned int size = 0) { return false; }\n \n@@ -246,6 +246,8 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     std::set<int64_t> set_pre_split_keypool GUARDED_BY(cs_wallet);\n     int64_t m_max_keypool_index GUARDED_BY(cs_wallet) = 0;\n     std::map<CKeyID, int64_t> m_pool_key_to_index;\n+    // Tracks keypool indexes to CKeyIDs of keys that have been taken out of the keypool but may be returned to it\n+    std::map<int64_t, CKeyID> m_index_to_reserved_key;\n \n     //! Fetches a key from the keypool\n     bool GetKeyFromPool(CPubKey &key, const OutputType type, bool internal = false);\n@@ -274,8 +276,8 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n     bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) override;\n-    void KeepDestination(int64_t index, const OutputType& type, const CPubKey& pubkey) override;\n-    void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n+    void KeepDestination(int64_t index, const OutputType& type) override;\n+    void ReturnDestination(int64_t index, bool internal, const CTxDestination&) override;\n \n     bool TopUp(unsigned int size = 0) override;\n "
      },
      {
        "sha": "e50dd1c127c915aa70fc84e557a3102fea850541",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -3305,31 +3305,27 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         if (!m_spk_man->GetReservedDestination(type, internal, address, nIndex, keypool)) {\n             return false;\n         }\n-        vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n     }\n-    assert(vchPubKey.IsValid());\n     dest = address;\n     return true;\n }\n \n void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->KeepDestination(nIndex, type, vchPubKey);\n+        m_spk_man->KeepDestination(nIndex, type);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n \n void ReserveDestination::ReturnDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->ReturnDestination(nIndex, fInternal, vchPubKey);\n+        m_spk_man->ReturnDestination(nIndex, fInternal, address);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n "
      },
      {
        "sha": "db5788ebb5d19a083c9310159dba48bd07ad090b",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/386a994b853bc5b3a2ed0d812673465b8ffa4849/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "patch": "@@ -146,8 +146,6 @@ class ReserveDestination\n     OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};\n-    //! The public key for the address\n-    CPubKey vchPubKey;\n     //! The destination\n     CTxDestination address;\n     //! Whether this is from the internal (change output) keypool"
      }
    ]
  },
  {
    "sha": "886f1731bec4393dd342403ac34069a3a4f95eea",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODZmMTczMWJlYzQzOTNkZDM0MjQwM2FjMzQwNjlhM2E0Zjk1ZWVh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-10-07T18:11:34Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2019-12-02T16:57:46Z"
      },
      "message": "Key pool: Fix omitted pre-split count in GetKeyPoolSize\n\nThis is a bugfix: https://github.com/bitcoin/bitcoin/pull/16341#discussion_r330669214",
      "tree": {
        "sha": "c0924d07f93efe422861f94f784015aa6e4c4265",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0924d07f93efe422861f94f784015aa6e4c4265"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/886f1731bec4393dd342403ac34069a3a4f95eea",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/886f1731bec4393dd342403ac34069a3a4f95eea",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/886f1731bec4393dd342403ac34069a3a4f95eea",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/886f1731bec4393dd342403ac34069a3a4f95eea/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/386a994b853bc5b3a2ed0d812673465b8ffa4849",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/386a994b853bc5b3a2ed0d812673465b8ffa4849"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2b9e8fbf2aa7e2e2c0162e19dabae30e670d3294",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/886f1731bec4393dd342403ac34069a3a4f95eea/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/886f1731bec4393dd342403ac34069a3a4f95eea/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=886f1731bec4393dd342403ac34069a3a4f95eea",
        "patch": "@@ -455,7 +455,7 @@ size_t LegacyScriptPubKeyMan::KeypoolCountExternalKeys()\n unsigned int LegacyScriptPubKeyMan::GetKeyPoolSize() const\n {\n     AssertLockHeld(cs_wallet);\n-    return setInternalKeyPool.size() + setExternalKeyPool.size();\n+    return setInternalKeyPool.size() + setExternalKeyPool.size() + set_pre_split_keypool.size();\n }\n \n int64_t LegacyScriptPubKeyMan::GetTimeFirstKey() const"
      }
    ]
  },
  {
    "sha": "e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplN2FkNGEyZjhjMDdhODJkNjQyNGI0NzNmMGQ1MWRiZDhmODk3YjEw",
    "commit": {
      "author": {
        "name": "Wilson Ccasihue S",
        "email": "wilson2cs@gmail.com",
        "date": "2019-12-02T02:30:29Z"
      },
      "committer": {
        "name": "hel0",
        "email": "wilson2cs@gmail.com",
        "date": "2019-12-02T17:06:35Z"
      },
      "message": "doc: rename wallet-tool references to bitcoin-wallet",
      "tree": {
        "sha": "4fe44d456c9674db39692c30493dd5e1d410cb7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4fe44d456c9674db39692c30493dd5e1d410cb7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10/comments",
    "author": {
      "login": "hel-o",
      "id": 4449673,
      "node_id": "MDQ6VXNlcjQ0NDk2NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4449673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hel-o",
      "html_url": "https://github.com/hel-o",
      "followers_url": "https://api.github.com/users/hel-o/followers",
      "following_url": "https://api.github.com/users/hel-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/hel-o/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hel-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hel-o/subscriptions",
      "organizations_url": "https://api.github.com/users/hel-o/orgs",
      "repos_url": "https://api.github.com/users/hel-o/repos",
      "events_url": "https://api.github.com/users/hel-o/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hel-o/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hel-o",
      "id": 4449673,
      "node_id": "MDQ6VXNlcjQ0NDk2NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4449673?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hel-o",
      "html_url": "https://github.com/hel-o",
      "followers_url": "https://api.github.com/users/hel-o/followers",
      "following_url": "https://api.github.com/users/hel-o/following{/other_user}",
      "gists_url": "https://api.github.com/users/hel-o/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hel-o/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hel-o/subscriptions",
      "organizations_url": "https://api.github.com/users/hel-o/orgs",
      "repos_url": "https://api.github.com/users/hel-o/repos",
      "events_url": "https://api.github.com/users/hel-o/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hel-o/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/19698ac6bc0e6c75a92b02c8b74ae1fa51c34e08"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a2013edc0518521eddf22f46190cb7c71320c4bf",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
        "patch": "@@ -41,8 +41,8 @@ static bool WalletAppInit(int argc, char* argv[])\n     }\n     if (argc < 2 || HelpRequested(gArgs)) {\n         std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n-                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"bitcoin-wallet is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default bitcoin-wallet will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n                                       \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n                                       \"Usage:\\n\" +\n                                      \"  bitcoin-wallet [options] <command>\\n\\n\" +"
      },
      {
        "sha": "0a8ce7caf1719b381ba12c3ec1f47b80b5eabf5d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
        "patch": "@@ -822,7 +822,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n void CWallet::LoadToWallet(CWalletTx& wtxIn)\n {\n-    // If wallet doesn't have a chain (e.g wallet-tool), lock can't be taken.\n+    // If wallet doesn't have a chain (e.g bitcoin-wallet), lock can't be taken.\n     auto locked_chain = LockChain();\n     if (locked_chain) {\n         Optional<int> block_height = locked_chain->getBlockHeight(wtxIn.m_confirm.hashBlock);\n@@ -2944,7 +2944,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n     // Even if we don't use this lock in this function, we want to preserve\n     // lock order in LoadToWallet if query of chain state is needed to know\n-    // tx status. If lock can't be taken (e.g wallet-tool), tx confirmation\n+    // tx status. If lock can't be taken (e.g bitcoin-wallet), tx confirmation\n     // status may be not reliable.\n     auto locked_chain = LockChain();\n     LOCK(cs_wallet);"
      }
    ]
  },
  {
    "sha": "2b6575d9895c7da2ec64f2cb04be150f91a600f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjY1NzVkOTg5NWM3ZGEyZWM2NGYyY2IwNGJlMTUwZjkxYTYwMGY4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T15:25:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T15:25:34Z"
      },
      "message": "Merge #17643: wallet: Fix origfee return for bumpfee with feerate arg\n\n02afb0c550dc8529918460c845d1da3adf236eed Fix origfee return for bumpfee with feerate arg (Gregory Sanders)\n\nPull request description:\n\n  fixes https://github.com/bitcoin/bitcoin/issues/17642 and adds a simple test that would have caught it\n\nACKs for top commit:\n  achow101:\n    ACK 02afb0c550dc8529918460c845d1da3adf236eed\n\nTree-SHA512: 303e392e05407f204dffe360689b5bb5dc77fd462dd0e489bc0b6c8f94f89ab7fe2bd8cb47e4dc6dc5c23a619826d15f3bf6b02b2c8e96402fbb51953c462e2d",
      "tree": {
        "sha": "3abc866339d67f425e17b73a21673b0967589bc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3abc866339d67f425e17b73a21673b0967589bc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b6575d9895c7da2ec64f2cb04be150f91a600f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3mfm4ACgkQ0upIUOdS\niyURBA/+NpPeR83Pxbqcdtvi6uYkN45ZzIULpt7WG/uf/3Db1wCI1V2kewHUMrLr\nR5gghED11x+rD2PU506N66RVai7T8pH+kf6InFTDNTrLFvMM/ZagQjq73NzH0LNV\nCeRfGawOt2m/KjCL7tvlMKZnRpUVNoQyly5Kwey4RkZMc2O739kkhF8Ixrc1isJe\n+1Z6aUhXWXxMcUSe10SR7kBycnbQMIBMqIW/Bi71+DqqqdEShWb7bXDnC+2fr7Nx\nE+B8f4AcdpCc3f106eUixSF5wkIbeRbEhwZodKtwO04BAonOwjVFKH5TeO2YvPPX\nB3N2XxS5IwISjmlhI2a+uqRe1iR0A+kHkdUW2oPDaeT/GLXr6Vk1QxNsOTL6nI+n\ncCSvgQgXQSJXkZdGpTaYcXiXlMBuBkwWRg5XB7DvdJbz5JnqLPmcAkNKHhk2Ca1s\nSgbvrU6hrQjKomM7O5rtV9DV0BM541PpNh2K3FeDqvi8GQ+boqK8hs2E8qwOK30i\n4LucZIOMvSL4vF6eaWVjRJF1NJfehRr5STpX3M5+3j44x1G3LNpUoAb4JtLRz9C4\nCPTl+F/kiuRjDDhZeh6jZN5kLboy4Af458+Brc6udNkAMJyz7vYGQewX+lpfGn6d\nhfUtFNoSeyhpH3xvIjJIC1xA6LJ/aC1415jp2G858x8NaKDdAQU=\n=JmAe\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIEmN8KSi5gSSknEYCAECxyJ4jum+fR4ZWFw6hrfE/Y3CCP/wEI9wjsk7Fm1n\nz4CrFiaDryII8QRd5n5y8AiARfr46FL8jwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEN8IBHBkT1MUg7ItCrdm\nMFII8QRd5n5x8AiZ62Uk9LjwmQCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2Fs\nZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQ/KdafQ+HN5xQPODUmntgYwjxBF3mfnHw\nCKtRqy19N/hRAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxh\neHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3abc866339d67f425e17b73a21673b0967589bc4\nparent 35eda631ed3bd23d4a41761a85a96f925d4a6337\nparent 02afb0c550dc8529918460c845d1da3adf236eed\nauthor MarcoFalke <falke.marco@gmail.com> 1575386723 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575386734 -0500\n\nMerge #17643: wallet: Fix origfee return for bumpfee with feerate arg\n\n02afb0c550dc8529918460c845d1da3adf236eed Fix origfee return for bumpfee with feerate arg (Gregory Sanders)\n\nPull request description:\n\n  fixes https://github.com/bitcoin/bitcoin/issues/17642 and adds a simple test that would have caught it\n\nACKs for top commit:\n  achow101:\n    ACK 02afb0c550dc8529918460c845d1da3adf236eed\n\nTree-SHA512: 303e392e05407f204dffe360689b5bb5dc77fd462dd0e489bc0b6c8f94f89ab7fe2bd8cb47e4dc6dc5c23a619826d15f3bf6b02b2c8e96402fbb51953c462e2d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b6575d9895c7da2ec64f2cb04be150f91a600f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b6575d9895c7da2ec64f2cb04be150f91a600f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b6575d9895c7da2ec64f2cb04be150f91a600f8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35eda631ed3bd23d4a41761a85a96f925d4a6337"
      },
      {
        "sha": "02afb0c550dc8529918460c845d1da3adf236eed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02afb0c550dc8529918460c845d1da3adf236eed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02afb0c550dc8529918460c845d1da3adf236eed"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 6,
      "deletions": 4
    },
    "files": [
      {
        "sha": "36588eb7d195eeb1bdd270d4629444aae2d5aeab",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b6575d9895c7da2ec64f2cb04be150f91a600f8/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b6575d9895c7da2ec64f2cb04be150f91a600f8/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=2b6575d9895c7da2ec64f2cb04be150f91a600f8",
        "patch": "@@ -108,12 +108,11 @@ static feebumper::Result CheckFeeRate(const CWallet& wallet, const CWalletTx& wt\n     return feebumper::Result::OK;\n }\n \n-static CFeeRate EstimateFeeRate(const CWallet& wallet, const CWalletTx& wtx, CCoinControl& coin_control, CAmount& old_fee)\n+static CFeeRate EstimateFeeRate(const CWallet& wallet, const CWalletTx& wtx, const CAmount old_fee, CCoinControl& coin_control)\n {\n     // Get the fee rate of the original transaction. This is calculated from\n     // the tx fee/vsize, so it may have been rounded down. Add 1 satoshi to the\n     // result.\n-    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n     int64_t txSize = GetVirtualTransactionSize(*(wtx.tx));\n     CFeeRate feerate(old_fee, txSize);\n     feerate += CFeeRate(1);\n@@ -309,6 +308,8 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n         }\n     }\n \n+    old_fee = wtx.GetDebit(ISMINE_SPENDABLE) - wtx.tx->GetValueOut();\n+\n     if (coin_control.m_feerate) {\n         // The user provided a feeRate argument.\n         // We calculate this here to avoid compiler warning on the cs_wallet lock\n@@ -319,7 +320,7 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n         }\n     } else {\n         // The user did not provide a feeRate argument\n-        new_coin_control.m_feerate = EstimateFeeRate(wallet, wtx, new_coin_control, old_fee);\n+        new_coin_control.m_feerate = EstimateFeeRate(wallet, wtx, old_fee, new_coin_control);\n     }\n \n     // Fill in required inputs we are double-spending(all of them)"
      },
      {
        "sha": "0c08655833ea88af9b5047a5840e1d3bf0c6808a",
        "filename": "test/functional/wallet_bumpfee.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b6575d9895c7da2ec64f2cb04be150f91a600f8/test/functional/wallet_bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b6575d9895c7da2ec64f2cb04be150f91a600f8/test/functional/wallet_bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_bumpfee.py?ref=2b6575d9895c7da2ec64f2cb04be150f91a600f8",
        "patch": "@@ -101,7 +101,8 @@ def test_simple_bumpfee_succeeds(self, mode, rbf_node, peer_node, dest_address):\n     else:\n         bumped_tx = rbf_node.bumpfee(rbfid)\n     assert_equal(bumped_tx[\"errors\"], [])\n-    assert bumped_tx[\"fee\"] - abs(rbftx[\"fee\"]) > 0\n+    assert bumped_tx[\"fee\"] > -rbftx[\"fee\"]\n+    assert_equal(bumped_tx[\"origfee\"], -rbftx[\"fee\"])\n     # check that bumped_tx propagates, original tx was evicted and has a wallet conflict\n     self.sync_mempools((rbf_node, peer_node))\n     assert bumped_tx[\"txid\"] in rbf_node.getrawmempool()"
      }
    ]
  },
  {
    "sha": "69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OWNhNmNkZDY2MTBmM2VhNjRmYmQ5MWNjMTcyZjZmNGQ1NGYzNjNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T15:33:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T15:34:11Z"
      },
      "message": "Merge #17599: ci: Run functional tests on s390x\n\nfabd71076cd9493bd2d30a198467f5ea621b27aa ci: Print free disk space (MarcoFalke)\nfad9fdbea5dfb19328282afda9588edc6f1d0ddf test: Properly deserialize integers in little-endian (MarcoFalke)\nfa94fc10c881e502e6c9a71f3b7719aa955900f9 ci: Run functional tests on s390x (MarcoFalke)\n\nPull request description:\n\nTop commit has no ACKs.\n\nTree-SHA512: 98ba77eb56f283131fdaeb393fda86cc308f1bf9781e1e0e5736b8d616528dc8ff2e494d55ba107c138083025c66a59e382fcfa9962d4349a5fd6cbbc52484c3",
      "tree": {
        "sha": "780b3a94581ed30531d634b33ee4a22859ab4696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/780b3a94581ed30531d634b33ee4a22859ab4696"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3mgHMACgkQ0upIUOdS\niyWiWw//Yjw8C9g6Aua4JBoj9LffYsPJrb5FhryeEivqnP0JhbxJ4/aDM/lNYoZl\nT/kJG+Hr9B4cDj1ycgVybg8VwG0ZWI3rM5OL8/XYHyIPV3bWZTclUUpUiQhZ89+c\nPJYHDUwPV3b+SjY2NVgRI/eRHXMB1awuXEcZLSPKdntYOMaNv3dtk0rzePAV7Wmq\nmTSrMlIpe5el+FP6o5JgdMtB1D+BxranbXG7FkdIzVMFPGu3xFg6mZ2nGW8/4kDL\nG2mcO66b+sUgtdKE2pcFqpFHx2md1LRxs6oOIgBoOwTZqnG2p1ikExoOlXN19gT2\npv4mP4xeRvLSMEeEO61ytwX57MjKC/Zz414qRMaoPTTzbK7GfqLpiKSqLS6Rjgms\nJYpNpOoLAL9mGsAxPXtzF5OyBnD35VcW8DjSs4k+MaLZ6V05A3gebGWqADe4uyWr\n3q/mvwziGbNB2jvOj0dPyIW69YEJNw36mNxfEoV7om0JOw3DNrcxCQaSOdDwzzke\nbmiYDFEaARxJvyiuQ4DSv7ajKYE7Vnk6vHNduLHNjT8fHq+SHFVJyf0BFqSNflGT\n+0hSkZQLf6I+vawyZFfPDM34SKDGr5lQdRNUecxXcfFafREk9l9YnyfmYohNYGTT\nalU501P3uTQbrVEejm/cnVKXLAwSXiyAnxQBUjOSDM1ed15yTGQ=\n=msTx\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHhWovDm/CcvoNUSE/+t8hr2uEd6r+KDP9TDVCFCxARiCP/wEBRp8yrefhIF\nhDuHnqeD5rEI8QRd5oB08Ai8og9SAIRLdgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEF23olDpMP9rxzKzGvW3zjYI8QRd5oB0\n8AhsDjyldxBHMwCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQhEQLTH4N7tKSNvG6v7CrWAjxBF3mgHXwCBoi5Cpq\nZXyhAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdh\nbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 780b3a94581ed30531d634b33ee4a22859ab4696\nparent 2b6575d9895c7da2ec64f2cb04be150f91a600f8\nparent fabd71076cd9493bd2d30a198467f5ea621b27aa\nauthor MarcoFalke <falke.marco@gmail.com> 1575387231 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575387251 -0500\n\nMerge #17599: ci: Run functional tests on s390x\n\nfabd71076cd9493bd2d30a198467f5ea621b27aa ci: Print free disk space (MarcoFalke)\nfad9fdbea5dfb19328282afda9588edc6f1d0ddf test: Properly deserialize integers in little-endian (MarcoFalke)\nfa94fc10c881e502e6c9a71f3b7719aa955900f9 ci: Run functional tests on s390x (MarcoFalke)\n\nPull request description:\n\nTop commit has no ACKs.\n\nTree-SHA512: 98ba77eb56f283131fdaeb393fda86cc308f1bf9781e1e0e5736b8d616528dc8ff2e494d55ba107c138083025c66a59e382fcfa9962d4349a5fd6cbbc52484c3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b6575d9895c7da2ec64f2cb04be150f91a600f8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b6575d9895c7da2ec64f2cb04be150f91a600f8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b6575d9895c7da2ec64f2cb04be150f91a600f8"
      },
      {
        "sha": "fabd71076cd9493bd2d30a198467f5ea621b27aa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabd71076cd9493bd2d30a198467f5ea621b27aa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fabd71076cd9493bd2d30a198467f5ea621b27aa"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1c19145166841487dbbfd2fbfebe779b1257e3dc",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -96,14 +96,14 @@ jobs:\n         - set -o errexit; source ./ci/extended_lint/06_script.sh\n \n     - stage: test\n-      name: 'ARM  [GOAL: install]  [unit tests, functional tests]'\n+      name: 'ARM  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n       arch: arm64\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_arm.sh\"\n         QEMU_USER_CMD=\"\"  # Can run the tests natively without qemu\n \n     - stage: test\n-      name: 'S390x  [GOAL: install]  [unit tests, functional tests]'\n+      name: 'S390x  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n       arch: s390x\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_s390x.sh\""
      },
      {
        "sha": "89660c7fa4d5c8e5d64f6bbcfb79399355b8c398",
        "filename": "ci/test/00_setup_env_s390x.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/test/00_setup_env_s390x.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/test/00_setup_env_s390x.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_s390x.sh?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -7,12 +7,9 @@\n export LC_ALL=C.UTF-8\n \n export HOST=s390x-unknown-linux-gnu\n-export DOCKER_NAME_TAG=s390x/ubuntu:18.04\n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libssl1.0-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n export NO_DEPENDS=1\n export RUN_UNIT_TESTS=true\n-export RUN_FUNCTIONAL_TESTS=false\n+export RUN_FUNCTIONAL_TESTS=true\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-reduce-exports --with-incompatible-bdb\"\n-\n-lscpu"
      },
      {
        "sha": "5055a720964486e141fb03cdd6747297371f3ad1",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -72,6 +72,8 @@ if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n else\n   DOCKER_EXEC free -m -h\n   DOCKER_EXEC echo \"Number of CPUs \\(nproc\\):\" \\$\\(nproc\\)\n+  DOCKER_EXEC echo \"Free disk space:\"\n+  DOCKER_EXEC df -h\n fi\n \n if [ -n \"$DPKG_ADD_ARCH\" ]; then"
      },
      {
        "sha": "797fcc828a30ff059a4160ebf3006afd678cca7c",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -151,7 +151,7 @@ def run_test(self):\n \n         bin_response = self.test_rest_request(\"/getutxos\", http_method='POST', req_type=ReqType.BIN, body=bin_request, ret_type=RetType.BYTES)\n         output = BytesIO(bin_response)\n-        chain_height, = unpack(\"i\", output.read(4))\n+        chain_height, = unpack(\"<i\", output.read(4))\n         response_hash = output.read(32)[::-1].hex()\n \n         assert_equal(bb_hash, response_hash)  # check if getutxo's chaintip during calculation was fine"
      }
    ]
  },
  {
    "sha": "1705f1949a14fb1d5213b44b4787bee07681526f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNzA1ZjE5NDlhMTRmYjFkNTIxM2I0NGI0Nzg3YmVlMDc2ODE1MjZm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T16:00:58Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T16:02:06Z"
      },
      "message": "Merge #17549: ci: misc cleanups\n\nfad88e6f86d1dd32cf01db2287df9c63e66c5116 ci: Remove use of cd (MarcoFalke)\nfa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e ci: Remove unmaintained extended_lint (MarcoFalke)\nfa041875284d01602647519cc452185ba1ad5a8f scripted-diff: Use ci DEPENDS_DIR, remove BASE_BUILD_DIR (MarcoFalke)\nfa0656d1ebc2a01d900fead4ce055d59eb818a1f ci: Add DEPENDS_DIR variable, Add documentation for folders (MarcoFalke)\nfaeeca87b65dd98e0efbc54443b3f8854cae9c00 scripted-diff: Move various folders to ci scratch dir (MarcoFalke)\n\nPull request description:\n\n  Some minor cleanups:\n\n  * Remove unused and unmaintained extended_lint to avoid ci bottlenecks and waste of CPU\n  * Move all folders that hold temporary ci files to the ci scratch dir (except for the build dirs)\n  * Add some documentation to folders and remove the `BASE_BUILD_DIR` alias for the root directory\n  * Fixes #17178 by removing `cd`\n\nTop commit has no ACKs.\n\nTree-SHA512: f6eb9d47ab98c08af59a79c2a4bf62fc331f0f6f3174909a28f2c2f48b0234423da5aee876225d2e188619b71b008d882a20d29a7aca68248039ea5080be5af5",
      "tree": {
        "sha": "a9008d94cfad290eb9fb6b6a54a00d4a9234ab11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9008d94cfad290eb9fb6b6a54a00d4a9234ab11"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1705f1949a14fb1d5213b44b4787bee07681526f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3mhv4ACgkQ0upIUOdS\niyXZpA/+OvvC6K7LeDght5v+f9G89k/9FH2xe1mk+gQbSoehuafVUtyCJcWgSLEB\np/tOvzjxh2QLNG6K4VZXFE2cEWj3zyULdKda5bOhUylQeHK+YyB2n4MKtKjlFAMt\n9b+9oueyieicRN/1g4KHhzOcg/cXnmWA6FRlvlS6Y5Cm+cRnxm6PsoRJisKqhLQm\nMF5c+VRpoU4a6o0J+s4weYvFHHn4ppBRpp8dwMOxxKlp0TH4UFg75QRgt4+MZlIO\nedrIIkN9cfy4I5y9+YFtuWRm8uPguEJUz13UbsCKCzMJCO/uFLLW7rc8VVzv+Wzq\n5cynEOYIQRnQ9wSNSPimPyYRARv3fNxdz6j+Cbtxf91KX2Bhkclc3PImuEeti0Mr\nlZU/njiCgGzaQR3PCLoyyAolg5DCqQ8LKkIYVFp9PcUvCV6HqJhHhKhlFdgCnYiw\n79ZQDEPpD5Jt5u8AkuMlBH8oTABtfoXRTVYT1PdIRbKnb5dKGTPJw3L89vcywE3J\nREpt7O8qnq9CZ+j7+97Xk0QAgeZeyGF+P653dFwJHSR/d9QcHEmEYEgb//27weQr\nOiboWXrgmY0pxFZD9sbTW6R0BWGUazGkqBrnPghmlNsy5kYD96Axw5l2gwYZRAYo\nrw7F5iTLj2/whHxGBbj2ZJ3HMM8xN73VATUW69dSiVKRc4Uaf7U=\n=nsqy\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIFSZ/joZlIaSVYT/prNmYGsNsDekwuZ3wHwTWndY+BnDCP/wEJdRkrTst1IR\n2UKvNUYYMrMI8QRd5ocA8AgwDPWy3cdGDQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEMCVqzjb9asnBghtg4clhzUI8QRd5ocB\n8AjuCvcLYsNOFgCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQ4r2PjgdL98JvqDaOfdz+zgjxBF3mhwHwCKb5CA1G\nUvMtAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdh\nbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree a9008d94cfad290eb9fb6b6a54a00d4a9234ab11\nparent 69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b\nparent fad88e6f86d1dd32cf01db2287df9c63e66c5116\nauthor MarcoFalke <falke.marco@gmail.com> 1575388858 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575388926 -0500\n\nMerge #17549: ci: misc cleanups\n\nfad88e6f86d1dd32cf01db2287df9c63e66c5116 ci: Remove use of cd (MarcoFalke)\nfa2941bbf47a8a6b79b8db4a87e1aedcf6a29a5e ci: Remove unmaintained extended_lint (MarcoFalke)\nfa041875284d01602647519cc452185ba1ad5a8f scripted-diff: Use ci DEPENDS_DIR, remove BASE_BUILD_DIR (MarcoFalke)\nfa0656d1ebc2a01d900fead4ce055d59eb818a1f ci: Add DEPENDS_DIR variable, Add documentation for folders (MarcoFalke)\nfaeeca87b65dd98e0efbc54443b3f8854cae9c00 scripted-diff: Move various folders to ci scratch dir (MarcoFalke)\n\nPull request description:\n\n  Some minor cleanups:\n\n  * Remove unused and unmaintained extended_lint to avoid ci bottlenecks and waste of CPU\n  * Move all folders that hold temporary ci files to the ci scratch dir (except for the build dirs)\n  * Add some documentation to folders and remove the `BASE_BUILD_DIR` alias for the root directory\n  * Fixes #17178 by removing `cd`\n\nTop commit has no ACKs.\n\nTree-SHA512: f6eb9d47ab98c08af59a79c2a4bf62fc331f0f6f3174909a28f2c2f48b0234423da5aee876225d2e188619b71b008d882a20d29a7aca68248039ea5080be5af5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1705f1949a14fb1d5213b44b4787bee07681526f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1705f1949a14fb1d5213b44b4787bee07681526f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1705f1949a14fb1d5213b44b4787bee07681526f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b"
      },
      {
        "sha": "fad88e6f86d1dd32cf01db2287df9c63e66c5116",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad88e6f86d1dd32cf01db2287df9c63e66c5116",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad88e6f86d1dd32cf01db2287df9c63e66c5116"
      }
    ],
    "stats": {
      "total": 113,
      "additions": 35,
      "deletions": 78
    },
    "files": [
      {
        "sha": "8a04326bab0af2ec128b3b911d02489d3c289ab3",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -43,7 +43,6 @@ before_cache:\n stages:\n   - lint\n   - test\n-  - extended-lint\n env:\n   global:\n     - CI_RETRY_EXE=\"travis_retry\"\n@@ -82,19 +81,6 @@ jobs:\n       script:\n         - set -o errexit; source ./ci/lint/06_script.sh\n \n-    - stage: extended-lint\n-      name: 'extended lint [runtime >= 60 seconds]'\n-      env:\n-      cache: false\n-      language: python\n-      python: '3.5'\n-      install:\n-        - set -o errexit; source ./ci/extended_lint/04_install.sh\n-      before_script:\n-        - set -o errexit; source ./ci/lint/05_before_script.sh\n-      script:\n-        - set -o errexit; source ./ci/extended_lint/06_script.sh\n-\n     - stage: test\n       name: 'ARM  [GOAL: install]  [bionic]  [unit tests, functional tests]'\n       arch: arm64"
      },
      {
        "sha": "123d874a84da4b8531edf5e51052b581688cef27",
        "filename": "ci/extended_lint/04_install.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/extended_lint/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/extended_lint/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/04_install.sh?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -1,12 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-CPPCHECK_VERSION=1.86\n-curl -s https://codeload.github.com/danmar/cppcheck/tar.gz/${CPPCHECK_VERSION} | tar -zxf - --directory /tmp/\n-(cd /tmp/cppcheck-${CPPCHECK_VERSION}/ && make CFGDIR=/tmp/cppcheck-${CPPCHECK_VERSION}/cfg/ > /dev/null)\n-export PATH=\"$PATH:/tmp/cppcheck-${CPPCHECK_VERSION}/\""
      },
      {
        "sha": "e8228c9c4d912c81e16b772e79e85231a2b6c1b9",
        "filename": "ci/extended_lint/06_script.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/extended_lint/06_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b/ci/extended_lint/06_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/extended_lint/06_script.sh?ref=69ca6cdd6610f3ea64fbd91cc172f6f4d54f363b",
        "patch": "@@ -1,9 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C\n-\n-test/lint/extended-lint-all.sh"
      },
      {
        "sha": "6040804a9ff75397a86b18076a065201b1d68901",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -13,13 +13,17 @@ if [ -n \"${FILE_ENV}\" ]; then\n   source \"${FILE_ENV}\"\n fi\n \n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the build is done (depends and dist).\n BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n export BASE_ROOT_DIR\n \n echo \"Fallback to default values in env (if not yet set)\"\n # The number of parallel jobs to pass down to make and test_runner.py\n export MAKEJOBS=${MAKEJOBS:--j4}\n # A folder for the ci system to put temporary files (ccache, datadirs for tests, ...)\n+# This folder only exists on the ci host.\n export BASE_SCRATCH_DIR=${BASE_SCRATCH_DIR:-$BASE_ROOT_DIR/ci/scratch/}\n # What host to compile for. See also ./depends/README.md\n # Tests that need cross-compilation export the appropriate HOST.\n@@ -37,15 +41,18 @@ export BOOST_TEST_RANDOM=${BOOST_TEST_RANDOM:-1}\n export CCACHE_SIZE=${CCACHE_SIZE:-100M}\n export CCACHE_TEMPDIR=${CCACHE_TEMPDIR:-/tmp/.ccache-temp}\n export CCACHE_COMPRESS=${CCACHE_COMPRESS:-1}\n+# The cache dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n export CCACHE_DIR=${CCACHE_DIR:-$BASE_SCRATCH_DIR/.ccache}\n-# Folder where the build is done (depends and dist). Can not be changed and is equal to the root of the git repo\n-export BASE_BUILD_DIR=${BASE_BUILD_DIR:-$BASE_ROOT_DIR}\n-# Folder where the build is done (bin and lib). Can not be changed.\n-export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_BUILD_DIR/out/$HOST}\n+# The depends dir.\n+# This folder exists on the ci host and ci guest. Changes are propagated back and forth.\n+export DEPENDS_DIR=${DEPENDS_DIR:-$BASE_ROOT_DIR/depends}\n+# Folder where the build is done (bin and lib).\n+export BASE_OUTDIR=${BASE_OUTDIR:-$BASE_SCRATCH_DIR/out/$HOST}\n export SDK_URL=${SDK_URL:-https://bitcoincore.org/depends-sources/sdks}\n export WINEDEBUG=${WINEDEBUG:-fixme-all}\n export DOCKER_PACKAGES=${DOCKER_PACKAGES:-build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git}\n export GOAL=${GOAL:-install}\n-export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_BUILD_DIR}/qa-assets}\n+export DIR_QA_ASSETS=${DIR_QA_ASSETS:-${BASE_SCRATCH_DIR}/qa-assets}\n export PATH=${BASE_ROOT_DIR}/ci/retry:$PATH\n export CI_RETRY_EXE=${CI_RETRY_EXE:retry}"
      },
      {
        "sha": "9efdd30d879d6f0e2503350d1a918172ed5a5439",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 13,
        "deletions": 11,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -34,35 +34,37 @@ mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n \n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n-export LSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/lsan\"\n-export TSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_BUILD_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_BUILD_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n+export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)\n   DOCKER_ADMIN=\"--cap-add SYS_PTRACE\"\n fi\n \n+export P_CI_DIR=\"$PWD\"\n+\n if [ -z \"$RUN_CI_ON_HOST\" ]; then\n   echo \"Creating $DOCKER_NAME_TAG container to run in\"\n   ${CI_RETRY_EXE} docker pull \"$DOCKER_NAME_TAG\"\n \n   DOCKER_ID=$(docker run $DOCKER_ADMIN -idt \\\n-                  --mount type=bind,src=$BASE_BUILD_DIR,dst=/ro_base,readonly \\\n+                  --mount type=bind,src=$BASE_ROOT_DIR,dst=/ro_base,readonly \\\n                   --mount type=bind,src=$CCACHE_DIR,dst=$CCACHE_DIR \\\n-                  --mount type=bind,src=$BASE_BUILD_DIR/depends,dst=$BASE_BUILD_DIR/depends \\\n-                  -w $BASE_BUILD_DIR \\\n+                  --mount type=bind,src=$DEPENDS_DIR,dst=$DEPENDS_DIR \\\n+                  -w $BASE_ROOT_DIR \\\n                   --env-file /tmp/env \\\n                   $DOCKER_NAME_TAG)\n \n   DOCKER_EXEC () {\n-    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+    docker exec $DOCKER_ID bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n else\n   echo \"Running on host system without docker wrapper\"\n   DOCKER_EXEC () {\n-    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $PWD && $*\"\n+    bash -c \"export PATH=$BASE_SCRATCH_DIR/bins/:\\$PATH && cd $P_CI_DIR && $*\"\n   }\n fi\n \n@@ -90,11 +92,11 @@ if [ ! -d ${DIR_QA_ASSETS} ]; then\n fi\n export DIR_FUZZ_IN=${DIR_QA_ASSETS}/fuzz_seed_corpus/\n \n-DOCKER_EXEC mkdir -p \"${BASE_BUILD_DIR}/sanitizer-output/\"\n+DOCKER_EXEC mkdir -p \"${BASE_SCRATCH_DIR}/sanitizer-output/\"\n \n if [ -z \"$RUN_CI_ON_HOST\" ]; then\n-  echo \"Create $BASE_BUILD_DIR\"\n-  DOCKER_EXEC rsync -a /ro_base/ $BASE_BUILD_DIR\n+  echo \"Create $BASE_ROOT_DIR\"\n+  DOCKER_EXEC rsync -a /ro_base/ $BASE_ROOT_DIR\n fi\n \n if [ \"$USE_BUSY_BOX\" = \"true\" ]; then"
      },
      {
        "sha": "51a5830682616f4a6fdedcb6dda21510b60a57d1",
        "filename": "ci/test/05_before_script.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/05_before_script.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/05_before_script.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/05_before_script.sh?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -13,13 +13,13 @@ else\n   DOCKER_EXEC echo \\> \\$HOME/.bitcoin\n fi\n \n-DOCKER_EXEC mkdir -p depends/SDKs depends/sdk-sources\n+DOCKER_EXEC mkdir -p ${DEPENDS_DIR}/SDKs ${DEPENDS_DIR}/sdk-sources\n \n-if [ -n \"$OSX_SDK\" ] && [ ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ ! -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n-if [ -n \"$OSX_SDK\" ] && [ -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n-  DOCKER_EXEC tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n+if [ -n \"$OSX_SDK\" ] && [ -f ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then\n+  DOCKER_EXEC tar -C ${DEPENDS_DIR}/SDKs -xf ${DEPENDS_DIR}/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz\n fi\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_EXEC update-alternatives --set $HOST-g++ \\$\\(which $HOST-g++-posix\\)"
      },
      {
        "sha": "98b75d7497547a96478fbd3119a13983c2615b80",
        "filename": "ci/test/06_script_a.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 16,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/06_script_a.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/06_script_a.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_a.sh?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -6,7 +6,7 @@\n \n export LC_ALL=C.UTF-8\n \n-BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$BASE_BUILD_DIR/depends/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n+BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$DEPENDS_DIR/$HOST --bindir=$BASE_OUTDIR/bin --libdir=$BASE_OUTDIR/lib\"\n if [ -z \"$NO_DEPENDS\" ]; then\n   DOCKER_EXEC ccache --max-size=$CCACHE_SIZE\n fi\n@@ -19,14 +19,8 @@ else\n fi\n END_FOLD\n \n-# Create folder on host and docker, so that `cd` works\n-mkdir -p build\n DOCKER_EXEC mkdir -p build\n-\n-# Temporarily disable errexit, because Travis macOS fails without error message\n-set +o errexit\n-cd build || (echo \"could not enter build directory\"; exit 1)\n-set -o errexit\n+export P_CI_DIR=\"$P_CI_DIR/build\"\n \n BEGIN_FOLD configure\n DOCKER_EXEC ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n@@ -38,21 +32,15 @@ mkdir -p \"bitcoin-$HOST\"\n DOCKER_EXEC make distdir VERSION=$HOST\n END_FOLD\n \n-set +o errexit\n-cd \"bitcoin-$HOST\" || (echo \"could not enter distdir bitcoin-$HOST\"; exit 1)\n-set -o errexit\n+export P_CI_DIR=\"$P_CI_DIR/bitcoin-$HOST\"\n \n BEGIN_FOLD configure\n DOCKER_EXEC ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( (DOCKER_EXEC cat config.log) && false)\n END_FOLD\n \n set -o errtrace\n-trap 'DOCKER_EXEC \"cat ${BASE_BUILD_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n+trap 'DOCKER_EXEC \"cat ${BASE_SCRATCH_DIR}/sanitizer-output/* 2> /dev/null\"' ERR\n \n BEGIN_FOLD build\n DOCKER_EXEC make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && DOCKER_EXEC make $GOAL V=1 ; false )\n END_FOLD\n-\n-set +o errexit\n-cd ${BASE_BUILD_DIR} || (echo \"could not enter travis build dir $BASE_BUILD_DIR\"; exit 1)\n-set -o errexit"
      },
      {
        "sha": "a8e0a50f3669c53b17b609cf8a8f410d401049d9",
        "filename": "ci/test/06_script_b.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/06_script_b.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1705f1949a14fb1d5213b44b4787bee07681526f/ci/test/06_script_b.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/06_script_b.sh?ref=1705f1949a14fb1d5213b44b4787bee07681526f",
        "patch": "@@ -6,11 +6,6 @@\n \n export LC_ALL=C.UTF-8\n \n-# Temporarily disable errexit, because Travis macOS fails without error message\n-set +o errexit\n-cd \"build/bitcoin-$HOST\" || (echo \"could not enter distdir build/bitcoin-$HOST\"; exit 1)\n-set -o errexit\n-\n if [ -n \"$QEMU_USER_CMD\" ]; then\n   BEGIN_FOLD wrap-qemu\n   echo \"Prepare to run functional tests for HOST=$HOST\"\n@@ -33,7 +28,7 @@ fi\n if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n   BEGIN_FOLD unit-tests\n   bash -c \"${CI_WAIT}\" &  # Print dots in case the unit tests take a long time to run\n-  DOCKER_EXEC LD_LIBRARY_PATH=$BASE_BUILD_DIR/depends/$HOST/lib make $MAKEJOBS check VERBOSE=1\n+  DOCKER_EXEC LD_LIBRARY_PATH=$DEPENDS_DIR/$HOST/lib make $MAKEJOBS check VERBOSE=1\n   END_FOLD\n fi\n "
      }
    ]
  },
  {
    "sha": "1fdaa04cebaac61a1106ed52a35486039413a0cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmRhYTA0Y2ViYWFjNjFhMTEwNmVkNTJhMzU0ODYwMzk0MTNhMGNi",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T16:06:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T16:06:59Z"
      },
      "message": "Merge #17641: Add unit test for leveldb creation with unicode path\n\n70ed2ab7ef9e7ebf56f77b7c410a345ff455938f Add unit test for DB creation with unicode path (Aaron Clauson)\n\nPull request description:\n\n  An issue arose when attempting to switch back to the main repo version of leveldb when the bitcoin data directory uses a unicode path. The leveldb windows file IO wrapper was using the *A ANSI win32 calls instead of the Unicode *W ones. This unit test will catch if the path created by leveldb doesn't match what we're expecting. For more info see https://github.com/google/leveldb/issues/755.\n\nACKs for top commit:\n  laanwj:\n    ACK 70ed2ab7ef9e7ebf56f77b7c410a345ff455938f\n\nTree-SHA512: fc6dbd3aa26a439016e63e8d4d931f218ce99094fc7887a13b54562ad4133047020288ecbcd622a8309f422ee1eda5df50bcb8c8e44442af36ed57b22c069004",
      "tree": {
        "sha": "275c10c7a62f55d7053d5c39bd2eb8020c86dc0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/275c10c7a62f55d7053d5c39bd2eb8020c86dc0f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fdaa04cebaac61a1106ed52a35486039413a0cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3miCMACgkQ0upIUOdS\niyVfFw//fMYALUtfckkT+qdNZNJuyHtZiIt0ODjz/JemMrqezAndYsEi7xjj8UuT\ntkyXKVWjbuYz4T9nr7AhagWyysTMLRv4W7CHvCYJNpVOWtIv6yzQ3RFw+wnY9ezo\nhHbslsD85MZSFMiEq/lk2679HJa0qV28PmVJ2TIJCRmjqxDbNMDMbPZI5mRbkEUS\nILcgTbL2no95NYNYCpm8P5/1vVtfmPMAOM3anxBLxuS707O8rli0lWi4b1cKeO6d\nZDes3XQ74NvQejnBvBjzJ0v+NGGL/W3QiXg8UcQkpiI7oaH4DoSTXwGG4dH86Byn\nA1NmoiWem+u70z7669SVRjvl63Fu2DgjZbmjNNv78ehMOTc5OUgTtHgSxW6x+aWg\nceXy/Z+bHF29CK7yxItfbiaaI3f9RPAVupuakn2P6P2zQdXVcxsbFPBTu5EzOcTE\ncvXldBvD5YB3eU6G8+0vvrlWCFTRCyIFviLBktLFGrIwrQ3pNySvKDqYH/gEPJ9X\nCm6D2TTrsGUQX7/jZhQp5HAlwirPUsKO4eoNr/YrXOGXOZbEibaD30z60ixEoP1l\nS6Cf01zWewf8oMeurJFDXVF/61mKbH8BsLt/wUezW2DNRaEjJcSnKTyn5fNTn3HV\n+TwzsKIUb8H4h7MW9WA+zdKLBjxhMHEMGPefoB/SqUQWu1NM8ac=\n=hik4\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICNlhcdmC5f7WnHx8lLmFAkLgngChLsTkvn/wJAq++FBCP/wEF7a+ZLl8NEB\nbV7CSpP082oI8QRd5ogk8AhvoEojF1f7OQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEKB43Jq92qanq6XFxKhyo+II8QRd5ogk\n8Ah3773BhoPpLACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ/AQ2pdTJTseDDn68IOWboyakQjxBF3miCTwCIVnAeQL\nebkOAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdh\nbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 275c10c7a62f55d7053d5c39bd2eb8020c86dc0f\nparent 1705f1949a14fb1d5213b44b4787bee07681526f\nparent 70ed2ab7ef9e7ebf56f77b7c410a345ff455938f\nauthor MarcoFalke <falke.marco@gmail.com> 1575389216 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575389219 -0500\n\nMerge #17641: Add unit test for leveldb creation with unicode path\n\n70ed2ab7ef9e7ebf56f77b7c410a345ff455938f Add unit test for DB creation with unicode path (Aaron Clauson)\n\nPull request description:\n\n  An issue arose when attempting to switch back to the main repo version of leveldb when the bitcoin data directory uses a unicode path. The leveldb windows file IO wrapper was using the *A ANSI win32 calls instead of the Unicode *W ones. This unit test will catch if the path created by leveldb doesn't match what we're expecting. For more info see https://github.com/google/leveldb/issues/755.\n\nACKs for top commit:\n  laanwj:\n    ACK 70ed2ab7ef9e7ebf56f77b7c410a345ff455938f\n\nTree-SHA512: fc6dbd3aa26a439016e63e8d4d931f218ce99094fc7887a13b54562ad4133047020288ecbcd622a8309f422ee1eda5df50bcb8c8e44442af36ed57b22c069004\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fdaa04cebaac61a1106ed52a35486039413a0cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fdaa04cebaac61a1106ed52a35486039413a0cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fdaa04cebaac61a1106ed52a35486039413a0cb/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1705f1949a14fb1d5213b44b4787bee07681526f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1705f1949a14fb1d5213b44b4787bee07681526f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1705f1949a14fb1d5213b44b4787bee07681526f"
      },
      {
        "sha": "70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70ed2ab7ef9e7ebf56f77b7c410a345ff455938f"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b647c0f70b3abf3b6d89146658eee7ab6d6eff88",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fdaa04cebaac61a1106ed52a35486039413a0cb/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fdaa04cebaac61a1106ed52a35486039413a0cb/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=1fdaa04cebaac61a1106ed52a35486039413a0cb",
        "patch": "@@ -397,6 +397,18 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n     }\n }\n \n+BOOST_AUTO_TEST_CASE(unicodepath)\n+{\n+    // Attempt to create a database with a utf8 character in the path.\n+    // On Windows this test will fail if the directory is created using\n+    // the ANSI CreateDirectoryA  call and the code page isn't UTF8.\n+    // It will succeed if the created with  CreateDirectoryW.\n+    fs::path ph = GetDataDir() / \"test_runner_\u20bf_\ud83c\udfc3_20191128_104644\";\n+    CDBWrapper dbw(ph, (1 << 20));\n+\n+    fs::path lockPath = ph / \"LOCK\";\n+    BOOST_CHECK(boost::filesystem::exists(lockPath));\n+}\n \n \n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "54b12e425b502e7777e6910117b4527ab4ead0ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NGIxMmU0MjViNTAyZTc3NzdlNjkxMDExN2I0NTI3YWI0ZWFkMGZm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T18:22:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T18:22:36Z"
      },
      "message": "Merge #17555: test: add unit test for non-standard txs with wrong nVersion\n\n76303f65f92a0fbe9a90c0e807554a6daa860636 test: add unit test for non-standard txs with wrong nVersion (Dominik Spicher)\n\nPull request description:\n\n  Takes care of one of the missing cases of #17394: nVersion must be within the allowed range.\n\nACKs for top commit:\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/pull/17555/commits/76303f65f92a0fbe9a90c0e807554a6daa860636\n\nTree-SHA512: 94464f781cf70a5616f7cea2014ae0a97a338c34411cc989c60389de2ce00368374811db78c919bda30e0ebf341fb830998a5e97c124dd8afc8feb726cedfd3a",
      "tree": {
        "sha": "ec4f2950722b431e0c1f3cc1fdd7dbaf8cca5661",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec4f2950722b431e0c1f3cc1fdd7dbaf8cca5661"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54b12e425b502e7777e6910117b4527ab4ead0ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3mp+wACgkQ0upIUOdS\niyVbkw//ZNJtBhwvMSMqCR6Amr5GOLurUtuN3Enzlu7AOEExrZKLBBTxQdgsGXB2\n75xmIILeSuGtJcA4pyrdyOdtNP0lKgFXOSK4xBnbINd2GKI2GQRUHC/mZI2FpRbx\n0TQaPMXz4idDDbEDYm02CzWZb00bJALpq2shhGEvxgBJxzWAbKgA0Qr5cbGu2pK6\nwAfJmTd4v+We4kZ/iupJ3Rr6BQqlGwEqNGfI9/AGdS9/UevDTFV0NGtb9/Qt77WX\nmeo2IzHfpmIETPPqlFemCvoCiQSYMz4uOWTVS9f8LY9oNUKH769HRPiHgbt/Z5Jy\nepIQqY3SdXCDbbNS6xxWPl90ONSqyh4GVqluh9obrP6VjGyNCkE8raV9kFPursjc\n4vwbBwW7OcqjgrnvSbIXTvg3wblLLRlyhVnu34pCtWBoXRb/2N55aRSDq88+32m/\nRb5oVAzHkVv3HEzR07QJjid0tkbfQmlKUwHAlep0FXAJS0bifMVXLx/yn/fLZAV1\nnCtH8os8uPfGi/91ZzynO289HIhgpZcsbHlI/+hh6daVZklC6iJmijaCOiKR1145\n3KoLLBnYGkKFoBmCDai6COQqXVLsEPECraKjC2b+RUJPvyNrJ2Pc+SWNnmm3iQ1u\nm7vIkyhGtbsi6KlomXHYagXsaeuUvMmyNH71XuMg+L5D7T8dDdY=\n=7aab\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPVg4S95NZfh5/bSf3kdfodLfvTVsKNQRSJILntTpevRCP/wEAcZgwGZS+tC\n9LdT20QT770I8QRd5qfv8AjUMC8jh+1aNgCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEFXlMRMjzBPjZ0536QJO\nxC4I8QRd5qfu8Ahs9T3p91+EmACD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbfAQaTKi8IwXRm3o3u/nSD/LqgjxBF3mp+/wCNxtKT4a\nH8UuAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0eXdh\nbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ec4f2950722b431e0c1f3cc1fdd7dbaf8cca5661\nparent 1fdaa04cebaac61a1106ed52a35486039413a0cb\nparent 76303f65f92a0fbe9a90c0e807554a6daa860636\nauthor MarcoFalke <falke.marco@gmail.com> 1575397351 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575397356 -0500\n\nMerge #17555: test: add unit test for non-standard txs with wrong nVersion\n\n76303f65f92a0fbe9a90c0e807554a6daa860636 test: add unit test for non-standard txs with wrong nVersion (Dominik Spicher)\n\nPull request description:\n\n  Takes care of one of the missing cases of #17394: nVersion must be within the allowed range.\n\nACKs for top commit:\n  instagibbs:\n    ACK https://github.com/bitcoin/bitcoin/pull/17555/commits/76303f65f92a0fbe9a90c0e807554a6daa860636\n\nTree-SHA512: 94464f781cf70a5616f7cea2014ae0a97a338c34411cc989c60389de2ce00368374811db78c919bda30e0ebf341fb830998a5e97c124dd8afc8feb726cedfd3a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54b12e425b502e7777e6910117b4527ab4ead0ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54b12e425b502e7777e6910117b4527ab4ead0ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54b12e425b502e7777e6910117b4527ab4ead0ff/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fdaa04cebaac61a1106ed52a35486039413a0cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fdaa04cebaac61a1106ed52a35486039413a0cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fdaa04cebaac61a1106ed52a35486039413a0cb"
      },
      {
        "sha": "76303f65f92a0fbe9a90c0e807554a6daa860636",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76303f65f92a0fbe9a90c0e807554a6daa860636",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76303f65f92a0fbe9a90c0e807554a6daa860636"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 23,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2f7a3132d8ed8393fad3a0e9434baf0d64351407",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54b12e425b502e7777e6910117b4527ab4ead0ff/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54b12e425b502e7777e6910117b4527ab4ead0ff/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=54b12e425b502e7777e6910117b4527ab4ead0ff",
        "patch": "@@ -713,6 +713,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     t.vout[0].nValue = nDustThreshold;\n     BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n \n+    // Disallowed nVersion\n+    t.nVersion = -1;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    t.nVersion = 0;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    t.nVersion = 3;\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"version\");\n+\n+    // Allowed nVersion\n+    t.nVersion = 1;\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    t.nVersion = 2;\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n     // Check dust with odd relay fee to verify rounding:\n     // nDustThreshold = 182 * 3702 / 1000\n     dustRelayFee = CFeeRate(3702);"
      }
    ]
  },
  {
    "sha": "e354db787790b84b0b3f34cc55b65446c71e4fa2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMzU0ZGI3ODc3OTBiODRiMGIzZjM0Y2M1NWI2NTQ0NmM3MWU0ZmEy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T18:41:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-03T18:41:56Z"
      },
      "message": "Merge #17637: script: Add Keyserver to verify-commits README\n\nbd6a24307564a56d54d98331d5e1680d27ddc09e script: Add Keyserver to verify-commits README (Emil Engler)\n\nPull request description:\n\n  When I use the option with the default keyserver on `gpg (GnuPG) 2.2.12` from the Debian repositories only the keys from meshcollider and fanquake are actually found. Using the ubuntu keyserver works without any problems and all keys are getting found.\n  As this keyserver is also suggested on [https://bitcoincore.org/en/download/](), it would be good to have a common keyserver.\n\nACKs for top commit:\n  laanwj:\n    ACK bd6a24307564a56d54d98331d5e1680d27ddc09e, better to be explicit here\n\nTree-SHA512: d4127c42490390bed4e0074ebb1f8a6cc983f96bbea0ec1da011a93bed325a7f465ed9936e4bc2ef7c4b2e4501a2868d00b67ceb7bf85f2a902db9c6173a6c61",
      "tree": {
        "sha": "b26b50a138893ce3991d6ba054d6ae44ddb558a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b26b50a138893ce3991d6ba054d6ae44ddb558a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYLC4pAL7OGskoDms0upIUOdSiyUFAl3mrHQACgkQ0upIUOdS\niyWsrw/+OeA/KWr0yTb0dvCaj6L0aR6IWPNnzgotbd+EstXtp8MPPPYDmUqILGN4\nLOFW5/kAYcAB7bI0nwZL4RCZVGpdJVl9y7j7iSWZRFdeOVJvviChpWkgvnVFEV7W\ndMXaKfy7r6uZXLnlg/VTmbGuE50VA6JzGL0G+e9BoPaiMwJr8Z4p2hrMvMta0usl\nOA8bJxkYtFsQtllT8b94JR+p10bMyYbeBuH47Id64WWEjvvNml9ibJV9e8it9HGv\n5UiDDwdqFOUbc/DH8DE9oAV7MKQUv6UUGLj4Z6mdS5SPlpPdNjFdHOghV0eGMwUA\nbmZ6rfYopvfia1K8Hpz7TtKAkJZXwLkhFg0nUuyH7oXXXakuC3wNN8zji7wfFLE0\nucF3PhQYA76CZqZFMzWmZm6eBjCKVbloPXC2T8LlN1QQtABaFJd799jbfDrVOldv\n0dicikUlKASmrTUbI35v9ayngKidZIWEMpWVLBspK5yvyz1IUTXzk3owyCtinMAT\nhPyg+fLzLJuBAVkeOGH5eFiR0F894xpE0fvgDtQ2RK0L9ITCwIIO1sXawbRPyf/o\ntktAICnkmih6gU0TfligC76PUt3XPD68gAHJl3pFfIhWLrB5R83webBMXsyGexNT\nqK57WhHYusk8mmJGgKCTjpv+qsRnlKYv61C+FELdvKJMcui9YGQ=\n=wRn3\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJXG1denjguODAg0fE3i+1LUvmmqCzEnOnHUazo8v7KPCP/wEFO2iFzoh544\nq/RRXkeri1MI8QRd5qx38AhEl+4BeoyvfACD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEIgWcA8tOAKOfX/oAmQh\n6ykI8QRd5qx38AjDck17Zg4jggCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbfAQioKwrYTOrK8kCvc/qnIdjQjwIKoGKYsSKRaWUxIu\nTQokfIsZX3DanwJa32FYnEp8MDo0CPEEXeasePAIdbY1rRx0YXkAg9/jDS75DI4p\nKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree b26b50a138893ce3991d6ba054d6ae44ddb558a5\nparent 54b12e425b502e7777e6910117b4527ab4ead0ff\nparent bd6a24307564a56d54d98331d5e1680d27ddc09e\nauthor MarcoFalke <falke.marco@gmail.com> 1575398510 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575398516 -0500\n\nMerge #17637: script: Add Keyserver to verify-commits README\n\nbd6a24307564a56d54d98331d5e1680d27ddc09e script: Add Keyserver to verify-commits README (Emil Engler)\n\nPull request description:\n\n  When I use the option with the default keyserver on `gpg (GnuPG) 2.2.12` from the Debian repositories only the keys from meshcollider and fanquake are actually found. Using the ubuntu keyserver works without any problems and all keys are getting found.\n  As this keyserver is also suggested on [https://bitcoincore.org/en/download/](), it would be good to have a common keyserver.\n\nACKs for top commit:\n  laanwj:\n    ACK bd6a24307564a56d54d98331d5e1680d27ddc09e, better to be explicit here\n\nTree-SHA512: d4127c42490390bed4e0074ebb1f8a6cc983f96bbea0ec1da011a93bed325a7f465ed9936e4bc2ef7c4b2e4501a2868d00b67ceb7bf85f2a902db9c6173a6c61\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e354db787790b84b0b3f34cc55b65446c71e4fa2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54b12e425b502e7777e6910117b4527ab4ead0ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54b12e425b502e7777e6910117b4527ab4ead0ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54b12e425b502e7777e6910117b4527ab4ead0ff"
      },
      {
        "sha": "bd6a24307564a56d54d98331d5e1680d27ddc09e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd6a24307564a56d54d98331d5e1680d27ddc09e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd6a24307564a56d54d98331d5e1680d27ddc09e"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e95a57586ff1c34fef56f4d851934f0d881bbd8c",
        "filename": "contrib/verify-commits/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e354db787790b84b0b3f34cc55b65446c71e4fa2/contrib/verify-commits/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e354db787790b84b0b3f34cc55b65446c71e4fa2/contrib/verify-commits/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/README.md?ref=e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "patch": "@@ -40,7 +40,7 @@ Import trusted keys\n In order to check the commit signatures, you must add the trusted PGP keys to your machine. [GnuPG](https://gnupg.org/) may be used to import the trusted keys by running the following command:\n \n ```sh\n-gpg --recv-keys $(<contrib/verify-commits/trusted-keys)\n+gpg --keyserver hkp://keyserver.ubuntu.com --recv-keys $(<contrib/verify-commits/trusted-keys)\n ```\n \n Key expiry/revocation"
      }
    ]
  },
  {
    "sha": "c8becb82805ed1483e009eba682f19fe9e8b8c9c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGJlY2I4MjgwNWVkMTQ4M2UwMDllYmE2ODJmMTlmZTllOGI4Yzlj",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T20:15:52Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T20:16:04Z"
      },
      "message": "depends: add ability to skip building qrencode",
      "tree": {
        "sha": "0abd3e9df86904d0b7ed645d24a2571ff6c57e89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0abd3e9df86904d0b7ed645d24a2571ff6c57e89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8becb82805ed1483e009eba682f19fe9e8b8c9c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3mwoQACgkQLuufXMCV\nJsH6pA/+NJ9kD5yX3pA0Cx/BpGs8pNlDI3/FWMlvPfMU0KQ7kOeULLnG9ep6xTic\n0LINQ0j3bE1niC5uIghS6LaregMb824BR0jKzK/52Qp6XE+z4EXp9cz4FbvAUF6U\n1L2i5hWtizw4YW5IvvIhZ1OX5D2kcApyF8k39lI1WvQgxmzl8LWb7BaGIJie7t7S\nQSXwi3yMnWDqm2FalohPZbxNelhTbTBAEghkYQO1+xbEMAmEB7YcEI8V9W+D+2bV\nUCc9yk2XQ0D18XHpJJbS6E1DgqqFbJpfO3rQ46mdtPSidMTjI48K60piH1oLtF+j\nPSJOKbNL2F5h/LaiMrNjgjvyL4ymlx5Vx3Cdf4Q9UINJ5QKdtXBPAg0O7M/RsF+d\n2eC9ZtkpHcUVK/XcMBl2yvm+CaeSJYuRemZ3dT1ESnnVfSJTIXVLwQjwUcgipokQ\ny0NwWqPZBQrxC3sCGCf5itTXrkjcjVjY/lrQU0H8G5FJPQGaphSVrK1fAYlMKSZy\nc/qp0ugIeqfwdqZqiq1AXVewHcR4E6uF+OMmilQsh9OGJ9ogcC3sJtdszxj+xRfi\n8U3TnkWrEJj1I4s8A77n6jJjmBZYAha5uleWVJ06KDwS2MiH6k/kxioI+Pqw9b8m\nozSVwFPWYLdGbKKsKfNbpsXr8J4swEjIrSbo9Jc9sObRGx7MBzM=\n=tE1G\n-----END PGP SIGNATURE-----",
        "payload": "tree 0abd3e9df86904d0b7ed645d24a2571ff6c57e89\nparent e354db787790b84b0b3f34cc55b65446c71e4fa2\nauthor fanquake <fanquake@gmail.com> 1575404152 -0500\ncommitter fanquake <fanquake@gmail.com> 1575404164 -0500\n\ndepends: add ability to skip building qrencode\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8becb82805ed1483e009eba682f19fe9e8b8c9c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8becb82805ed1483e009eba682f19fe9e8b8c9c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8becb82805ed1483e009eba682f19fe9e8b8c9c/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e354db787790b84b0b3f34cc55b65446c71e4fa2"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8706e013f97dbe946e73e987f3909eddbce22b71",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "patch": "@@ -9,6 +9,7 @@ WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n+NO_QR ?=\n RAPIDCHECK ?=\n NO_WALLET ?=\n NO_ZMQ ?=\n@@ -100,7 +101,10 @@ $(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n \n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n+qrencode_packages_$(NO_QR) = $(qrencode_packages)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages) $(qrencode_packages_)\n+\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n zmq_packages_$(NO_ZMQ) = $(zmq_packages)\n@@ -154,6 +158,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n             -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_qr@|$(NO_QR)|' \\\n             -e 's|@no_zmq@|$(NO_ZMQ)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\"
      },
      {
        "sha": "e382e8a2006e9954185eed3fb299079fee507197",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "patch": "@@ -76,6 +76,7 @@ The following can be set when running make: make FOO=bar\n     SDK_PATH: Path where sdk's can be found (used by macOS)\n     FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n     NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_QR: Don't download/build/cache packages needed for enabling qrencode\n     NO_ZMQ: Don't download/build/cache packages needed for enabling zeromq\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n     NO_UPNP: Don't download/build/cache packages needed for enabling upnp"
      },
      {
        "sha": "c5731e5269a7f87784e0e01fd893eaf5dc996bba",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "patch": "@@ -17,6 +17,10 @@ if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n \n+if test -z $with_qrencode && test -n \"@no_qr@\"; then\n+  with_qrencode=no\n+fi\n+\n if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n   enable_wallet=no\n fi"
      },
      {
        "sha": "d8ccb208ccd013e2f00eadb51be95ff0d86fcbc8",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8becb82805ed1483e009eba682f19fe9e8b8c9c/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "patch": "@@ -1,6 +1,8 @@\n packages:=boost libevent\n \n-qt_packages = qrencode zlib\n+qt_packages = zlib\n+\n+qrencode_packages = qrencode\n \n qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n qt_android_packages=qt"
      }
    ]
  },
  {
    "sha": "bce44089db27e2b21a3dc2954b170ecf0d6d998e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiY2U0NDA4OWRiMjdlMmIyMWEzZGMyOTU0YjE3MGVjZjBkNmQ5OThl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T21:15:14Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T21:35:50Z"
      },
      "message": "Merge #17547: build: Fix configure report about qr\n\n651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed build: Fix configure report about qr (Hennadii Stepanov)\n\nPull request description:\n\n  On master (b7bc9b8330096d1f4f1fa563b855b88da425226e):\n  ```\n  $ apt list libqrencode-dev\n  Listing... Done\n  libqrencode-dev/bionic 3.4.4-1build1 amd64\n  $ ./configure | grep -i qr\n  checking for QR... no\n  checking whether to build GUI with support for QR codes... no\n      with qr     = auto\n  ```\n\n  With this PR:\n  ```\n  $ apt list libqrencode-dev\n  Listing... Done\n  libqrencode-dev/bionic 3.4.4-1build1 amd64\n  $ ./configure | grep -i qr\n  checking for QR... no\n  checking whether to build GUI with support for QR codes... no\n      with qr     = no\n  ```\n\nACKs for top commit:\n  laanwj:\n    Concept and light code review ACK 651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed\n  fanquake:\n    ACK 651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed\n\nTree-SHA512: 8959b1c7da5b28d06affcdd27ff4e455f1f7d9c8363dbde8ef07aaf79139ec8bc7ce25610b28e1d90c7e168573ee90ac9ab359bf10c667d0254507f8a880a935",
      "tree": {
        "sha": "1a8fdf1a9f1e3c3e818061079a4c50c5f892af76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a8fdf1a9f1e3c3e818061079a4c50c5f892af76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bce44089db27e2b21a3dc2954b170ecf0d6d998e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3m1TYACgkQLuufXMCV\nJsEplQ/+PfdkGmyC1nbLfqSbuqoFczOc0lKN8b3oyfKIgriOZpOJlBVGaRRf4WRC\nnQBRyGPDtcesyjRibb4k2XeYfBaWQEUTFAxXSULLHDYF9CGtAnAvk05FYY8qwxYR\n/32wlSGWMnouB4Xbc1/TPUlWP+958k2d9UD8byaJIn3D+zk/fmjtF/8mgEXCnSFj\nVqWJWP4a2uZNi2qWGKYRExjQnJMJv/Zl/yJYRRWLEky2orRRPDSge0K6JufcX9M5\nmSexjJTR4H80RdG8SkIa7lyKsiwadH1Kcb/GRjQUamvMuZMSZOTHAsYPar8kLx62\nDlcJsCS8gFE/9idtDNuB27bUo+1MxduSqB3HNcGwoEILxWOSkP0fwapbsIrqGzHj\nb1gPMwO4C3zse6L4uYDtXQ5PuypQ+3trLtI3/bQiNQSCUPsaFlV5v5b13gkvwNiE\npv7eI+jTYMxem7NjutEirE73WVz6lJIqo8D3QftPpQJ578Np82rCK6ZXRHt/0piZ\nTUW6n3axV74Y9o/eoch8aIw4D6CfHn0pa/THqTeIGijqtEZmc2M669kTmEsX0ItP\nGayBOU+yBwWQOb1gBLMuzv/+IHKyOZ1oq5lK0w3ZTdsDDeEFPwk+Zki/Fo8kgLK3\n+GOP6Z5Ou9vi0gmHGLLOVq7rssqfR083pdCL3mqCnZYdEyDiUUU=\n=pxia\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a8fdf1a9f1e3c3e818061079a4c50c5f892af76\nparent e354db787790b84b0b3f34cc55b65446c71e4fa2\nparent 651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed\nauthor fanquake <fanquake@gmail.com> 1575407714 -0500\ncommitter fanquake <fanquake@gmail.com> 1575408950 -0500\n\nMerge #17547: build: Fix configure report about qr\n\n651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed build: Fix configure report about qr (Hennadii Stepanov)\n\nPull request description:\n\n  On master (b7bc9b8330096d1f4f1fa563b855b88da425226e):\n  ```\n  $ apt list libqrencode-dev\n  Listing... Done\n  libqrencode-dev/bionic 3.4.4-1build1 amd64\n  $ ./configure | grep -i qr\n  checking for QR... no\n  checking whether to build GUI with support for QR codes... no\n      with qr     = auto\n  ```\n\n  With this PR:\n  ```\n  $ apt list libqrencode-dev\n  Listing... Done\n  libqrencode-dev/bionic 3.4.4-1build1 amd64\n  $ ./configure | grep -i qr\n  checking for QR... no\n  checking whether to build GUI with support for QR codes... no\n      with qr     = no\n  ```\n\nACKs for top commit:\n  laanwj:\n    Concept and light code review ACK 651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed\n  fanquake:\n    ACK 651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed\n\nTree-SHA512: 8959b1c7da5b28d06affcdd27ff4e455f1f7d9c8363dbde8ef07aaf79139ec8bc7ce25610b28e1d90c7e168573ee90ac9ab359bf10c667d0254507f8a880a935\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bce44089db27e2b21a3dc2954b170ecf0d6d998e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bce44089db27e2b21a3dc2954b170ecf0d6d998e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bce44089db27e2b21a3dc2954b170ecf0d6d998e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e354db787790b84b0b3f34cc55b65446c71e4fa2"
      },
      {
        "sha": "651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/651c636f9ed4a60c4cd003e566e3ac6ae6eda3ed"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ed9ccade6d73c2751d63609ac9ce4ca015f8bd1e",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bce44089db27e2b21a3dc2954b170ecf0d6d998e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bce44089db27e2b21a3dc2954b170ecf0d6d998e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bce44089db27e2b21a3dc2954b170ecf0d6d998e",
        "patch": "@@ -1471,18 +1471,16 @@ if test x$bitcoin_enable_qt != xno; then\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n   if test x$have_qrencode = xno; then\n     if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n+      AC_MSG_ERROR([QR support requested but cannot be built. Use --without-qrencode])\n     fi\n-    AC_MSG_RESULT(no)\n+    use_qr=no\n   else\n     if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n       AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n       use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n     fi\n   fi\n+  AC_MSG_RESULT([$use_qr])\n \n   if test x$XGETTEXT = x; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")"
      }
    ]
  },
  {
    "sha": "bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDQ0NzExZTFiYjJlZWU3NjQ2ZjJmOGUyZTg3NjNkMWMyMTZiZGI5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T22:45:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T22:50:30Z"
      },
      "message": "build: pass -dead_strip_dylibs to ld on macOS\n\nThis strips some unused dylibs from bitcoin-qt.\n\nFrom man ld:\nRemove dylibs that are unreachable by the entry point or exported symbols. \nThat is, suppresses the generation of load command commands for dylibs \nwhich supplied no symbols during the link. This option should not be \nused when linking against a dylib which is required at runtime for \nsome indirect reason such as the dylib has an important initializer.",
      "tree": {
        "sha": "5214d8440832a00c76b7505878885c24d37fd0ea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5214d8440832a00c76b7505878885c24d37fd0ea"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e354db787790b84b0b3f34cc55b65446c71e4fa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e354db787790b84b0b3f34cc55b65446c71e4fa2"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "62b70bcb0767fbcf656e5b9ec92f9b69506178b6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
        "patch": "@@ -783,6 +783,7 @@ fi\n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])"
      }
    ]
  },
  {
    "sha": "01c87015597021bf1c0856f7f6be175bdde844b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMWM4NzAxNTU5NzAyMWJmMWMwODU2ZjdmNmJlMTc1YmRkZTg0NGIy",
    "commit": {
      "author": {
        "name": "malevolent",
        "email": "malevolentbtc@gmail.com",
        "date": "2019-12-04T06:48:53Z"
      },
      "committer": {
        "name": "malevolent",
        "email": "malevolentbtc@gmail.com",
        "date": "2019-12-04T06:48:53Z"
      },
      "message": "util: remove unwanted fields from bitcoin-cli -getinfo\n\nIn accordance with #17314, Removing noisy fields from -getinfo. Fields removed: protocolversion, walletversion and keypoololdest. In addition to changing bitcoin-cli -getinfo, there is another change to test/functional/interface_bitcoin_cli.py. This change deletes tests that utilize removed -getinfo calls.",
      "tree": {
        "sha": "31db706003e820391916be104c5b5db9fa56579d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/31db706003e820391916be104c5b5db9fa56579d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01c87015597021bf1c0856f7f6be175bdde844b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c87015597021bf1c0856f7f6be175bdde844b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01c87015597021bf1c0856f7f6be175bdde844b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c87015597021bf1c0856f7f6be175bdde844b2/comments",
    "author": {
      "login": "malevolent",
      "id": 52677772,
      "node_id": "MDQ6VXNlcjUyNjc3Nzcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/52677772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malevolent",
      "html_url": "https://github.com/malevolent",
      "followers_url": "https://api.github.com/users/malevolent/followers",
      "following_url": "https://api.github.com/users/malevolent/following{/other_user}",
      "gists_url": "https://api.github.com/users/malevolent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malevolent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malevolent/subscriptions",
      "organizations_url": "https://api.github.com/users/malevolent/orgs",
      "repos_url": "https://api.github.com/users/malevolent/repos",
      "events_url": "https://api.github.com/users/malevolent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malevolent/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "malevolent",
      "id": 52677772,
      "node_id": "MDQ6VXNlcjUyNjc3Nzcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/52677772?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/malevolent",
      "html_url": "https://github.com/malevolent",
      "followers_url": "https://api.github.com/users/malevolent/followers",
      "following_url": "https://api.github.com/users/malevolent/following{/other_user}",
      "gists_url": "https://api.github.com/users/malevolent/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/malevolent/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/malevolent/subscriptions",
      "organizations_url": "https://api.github.com/users/malevolent/orgs",
      "repos_url": "https://api.github.com/users/malevolent/repos",
      "events_url": "https://api.github.com/users/malevolent/events{/privacy}",
      "received_events_url": "https://api.github.com/users/malevolent/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b90dad5143993d266cdfeece898164d648bbbd78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b90dad5143993d266cdfeece898164d648bbbd78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b90dad5143993d266cdfeece898164d648bbbd78"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1035e730b8071e7e92becb6811f830ed9bd40ff0",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01c87015597021bf1c0856f7f6be175bdde844b2/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01c87015597021bf1c0856f7f6be175bdde844b2/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=01c87015597021bf1c0856f7f6be175bdde844b2",
        "patch": "@@ -256,7 +256,6 @@ class GetinfoRequestHandler: public BaseRequestHandler\n             return batch[ID_BLOCKCHAININFO];\n         }\n         result.pushKV(\"version\", batch[ID_NETWORKINFO][\"result\"][\"version\"]);\n-        result.pushKV(\"protocolversion\", batch[ID_NETWORKINFO][\"result\"][\"protocolversion\"]);\n         result.pushKV(\"blocks\", batch[ID_BLOCKCHAININFO][\"result\"][\"blocks\"]);\n         result.pushKV(\"headers\", batch[ID_BLOCKCHAININFO][\"result\"][\"headers\"]);\n         result.pushKV(\"verificationprogress\", batch[ID_BLOCKCHAININFO][\"result\"][\"verificationprogress\"]);\n@@ -266,9 +265,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n         result.pushKV(\"chain\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"]));\n         if (!batch[ID_WALLETINFO][\"result\"].isNull()) {\n-            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n             result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n-            result.pushKV(\"keypoololdest\", batch[ID_WALLETINFO][\"result\"][\"keypoololdest\"]);\n             result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n             if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n                 result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);"
      },
      {
        "sha": "373a2bdee0d611a5a2511b223502cc121f6a4852",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01c87015597021bf1c0856f7f6be175bdde844b2/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01c87015597021bf1c0856f7f6be175bdde844b2/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=01c87015597021bf1c0856f7f6be175bdde844b2",
        "patch": "@@ -56,17 +56,14 @@ def run_test(self):\n         blockchain_info = self.nodes[0].getblockchaininfo()\n \n         assert_equal(cli_get_info['version'], network_info['version'])\n-        assert_equal(cli_get_info['protocolversion'], network_info['protocolversion'])\n         assert_equal(cli_get_info['blocks'], blockchain_info['blocks'])\n         assert_equal(cli_get_info['timeoffset'], network_info['timeoffset'])\n         assert_equal(cli_get_info['connections'], network_info['connections'])\n         assert_equal(cli_get_info['proxy'], network_info['networks'][0]['proxy'])\n         assert_equal(cli_get_info['difficulty'], blockchain_info['difficulty'])\n         assert_equal(cli_get_info['chain'], blockchain_info['chain'])\n         if self.is_wallet_compiled():\n-            assert_equal(cli_get_info['walletversion'], wallet_info['walletversion'])\n             assert_equal(cli_get_info['balance'], wallet_info['balance'])\n-            assert_equal(cli_get_info['keypoololdest'], wallet_info['keypoololdest'])\n             assert_equal(cli_get_info['keypoolsize'], wallet_info['keypoolsize'])\n             assert_equal(cli_get_info['paytxfee'], wallet_info['paytxfee'])\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])"
      }
    ]
  },
  {
    "sha": "dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2JlMDI0ZjVlNjUwOGVjMzUyNWJhYmMwZWIyNTJkNmI3NjFlNGQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-04T09:55:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-04T10:00:40Z"
      },
      "message": "Merge #17648: doc: rename wallet-tool references to bitcoin-wallet\n\ne7ad4a2f8c07a82d6424b473f0d51dbd8f897b10 doc: rename wallet-tool references to bitcoin-wallet (Wilson Ccasihue S)\n\nPull request description:\n\n  Fix. text reference to executable bitcoin-wallet instead of wallet-tool, there is not a wallet-tool at bin/ folder.\n\nACKs for top commit:\n  fanquake:\n    ACK e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10 - thanks for following up.\n\nTree-SHA512: aed41b08947728a4ff3a97a62858ee7c86e2e5d57dcbbd0aab492dae3d8a548bb60541924e68cf3a0aa3d53d7db0012b489462b466919cd83f05b2aa88b7fff7",
      "tree": {
        "sha": "954b2bede549990e41b2214c543d3238b5cf0f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/954b2bede549990e41b2214c543d3238b5cf0f76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3ng8gACgkQHkrtYphs\n0l3F7Af+OPa1psc1X56cMrChOVAJTtTbzH2jqav2xQxPS8xqIfjYyxE8agX0C8JA\nqOBB5i4wNVPQN/hmeTbhs68asDjgLdhhmuwvYI0SAHbxhjsqDInnuXH5L2rilzvU\ny3GqJXMnDsMdRrSgfaS3GvDoiiZMcjvUzAQVPMEyv4os/2b572Zv+A8VpBiqu2mG\n3USrbNOvcADZGimeQbjdt5JCqtxauAhqRvDUHtLqVWNoDZdywmV80oWBr3SYkumR\nWabuq9fR8taoXx30eSA1ofHUGiaTGiOVOEOzKwXVqM67guWrzj7EoikmkfeK7TAx\npfu+qzKqZYkPHvTCHlMF6lfK8Jbrvw==\n=wCkb\n-----END PGP SIGNATURE-----",
        "payload": "tree 954b2bede549990e41b2214c543d3238b5cf0f76\nparent bce44089db27e2b21a3dc2954b170ecf0d6d998e\nparent e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575453340 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575453640 +0100\n\nMerge #17648: doc: rename wallet-tool references to bitcoin-wallet\n\ne7ad4a2f8c07a82d6424b473f0d51dbd8f897b10 doc: rename wallet-tool references to bitcoin-wallet (Wilson Ccasihue S)\n\nPull request description:\n\n  Fix. text reference to executable bitcoin-wallet instead of wallet-tool, there is not a wallet-tool at bin/ folder.\n\nACKs for top commit:\n  fanquake:\n    ACK e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10 - thanks for following up.\n\nTree-SHA512: aed41b08947728a4ff3a97a62858ee7c86e2e5d57dcbbd0aab492dae3d8a548bb60541924e68cf3a0aa3d53d7db0012b489462b466919cd83f05b2aa88b7fff7\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbe024f5e6508ec3525babc0eb252d6b761e4d5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bce44089db27e2b21a3dc2954b170ecf0d6d998e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bce44089db27e2b21a3dc2954b170ecf0d6d998e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bce44089db27e2b21a3dc2954b170ecf0d6d998e"
      },
      {
        "sha": "e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7ad4a2f8c07a82d6424b473f0d51dbd8f897b10"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a2013edc0518521eddf22f46190cb7c71320c4bf",
        "filename": "src/bitcoin-wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcbe024f5e6508ec3525babc0eb252d6b761e4d5/src/bitcoin-wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcbe024f5e6508ec3525babc0eb252d6b761e4d5/src/bitcoin-wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-wallet.cpp?ref=dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
        "patch": "@@ -41,8 +41,8 @@ static bool WalletAppInit(int argc, char* argv[])\n     }\n     if (argc < 2 || HelpRequested(gArgs)) {\n         std::string usage = strprintf(\"%s bitcoin-wallet version\", PACKAGE_NAME) + \" \" + FormatFullVersion() + \"\\n\\n\" +\n-                                      \"wallet-tool is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n-                                      \"By default wallet-tool will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n+                                      \"bitcoin-wallet is an offline tool for creating and interacting with Bitcoin Core wallet files.\\n\" +\n+                                      \"By default bitcoin-wallet will act on wallets in the default mainnet wallet directory in the datadir.\\n\" +\n                                       \"To change the target wallet, use the -datadir, -wallet and -testnet/-regtest arguments.\\n\\n\" +\n                                       \"Usage:\\n\" +\n                                      \"  bitcoin-wallet [options] <command>\\n\\n\" +"
      },
      {
        "sha": "0a8ce7caf1719b381ba12c3ec1f47b80b5eabf5d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcbe024f5e6508ec3525babc0eb252d6b761e4d5/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcbe024f5e6508ec3525babc0eb252d6b761e4d5/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
        "patch": "@@ -822,7 +822,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n \n void CWallet::LoadToWallet(CWalletTx& wtxIn)\n {\n-    // If wallet doesn't have a chain (e.g wallet-tool), lock can't be taken.\n+    // If wallet doesn't have a chain (e.g bitcoin-wallet), lock can't be taken.\n     auto locked_chain = LockChain();\n     if (locked_chain) {\n         Optional<int> block_height = locked_chain->getBlockHeight(wtxIn.m_confirm.hashBlock);\n@@ -2944,7 +2944,7 @@ DBErrors CWallet::LoadWallet(bool& fFirstRunRet)\n {\n     // Even if we don't use this lock in this function, we want to preserve\n     // lock order in LoadToWallet if query of chain state is needed to know\n-    // tx status. If lock can't be taken (e.g wallet-tool), tx confirmation\n+    // tx status. If lock can't be taken (e.g bitcoin-wallet), tx confirmation\n     // status may be not reliable.\n     auto locked_chain = LockChain();\n     LOCK(cs_wallet);"
      }
    ]
  },
  {
    "sha": "41919631d50949c845600d413be96ad6ce0495e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MTkxOTYzMWQ1MDk0OWM4NDU2MDBkNDEzYmU5NmFkNmNlMDQ5NWU1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-04T12:10:58Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-04T12:12:44Z"
      },
      "message": "Merge #17573: Seed RNG with precision timestamps on receipt of net messages.\n\n02d8c56a18b9a2960888d6ec1209955105bae847 Seed RNG with precision timestamps on receipt of net messages. (Matt Corallo)\n\nPull request description:\n\n  See title. Exposes a generic dead-simple \"SeedEvent\" interface, but currently just used for net messages.\n\nACKs for top commit:\n  sipa:\n    utACK https://github.com/bitcoin/bitcoin/commit/02d8c56a18b9a2960888d6ec1209955105bae847\n  laanwj:\n    ACK 02d8c56a18b9a2960888d6ec1209955105bae847\n  meshcollider:\n    utACK 02d8c56a18b9a2960888d6ec1209955105bae847\n\nTree-SHA512: 28eb39a201ee2b13393c5c64dbf7c1913f3482f095969ef5141bfe549ce77dd63bb5f14738f6eedb296c686ea36014aa157b9c5e8059710a318590f30e9caa14",
      "tree": {
        "sha": "7148c84bf2580c06f773f546570dab01447d9017",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7148c84bf2580c06f773f546570dab01447d9017"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/41919631d50949c845600d413be96ad6ce0495e5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3norwACgkQHkrtYphs\n0l2xoAf/bj0klKcE2sOYurTK8KeSUflXtqdm8qWzdNYzgsyrSquVfb9SGIcYSjat\nKvYxNlNlsrwiACg/jx5wO0pQfPvs90IUzRK2CHtr/VGknpWkWm1n+D/9w2OLjG8u\ndLAi3FfDizKNsg1K064Yl/ae+GUcGSpnYwlWiHx08FZhXI602IR55j9p7NCSCLCk\nt4NfSeSBnRjf1v5Wm+4rlNbGDq7MuceAI2dgxKqki+gzuzuC7HeYHlZzX2FmHonG\nq5GRA2caq1hvh2XCKeTC6cbWx10QfH+/j9IO2LlUm6umaanC0AQ8gkRQAW0/DS8R\ncv21PxRlQJEenHIWemHA0K6dCEE9tA==\n=MdeH\n-----END PGP SIGNATURE-----",
        "payload": "tree 7148c84bf2580c06f773f546570dab01447d9017\nparent dcbe024f5e6508ec3525babc0eb252d6b761e4d5\nparent 02d8c56a18b9a2960888d6ec1209955105bae847\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575461458 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575461564 +0100\n\nMerge #17573: Seed RNG with precision timestamps on receipt of net messages.\n\n02d8c56a18b9a2960888d6ec1209955105bae847 Seed RNG with precision timestamps on receipt of net messages. (Matt Corallo)\n\nPull request description:\n\n  See title. Exposes a generic dead-simple \"SeedEvent\" interface, but currently just used for net messages.\n\nACKs for top commit:\n  sipa:\n    utACK https://github.com/bitcoin/bitcoin/commit/02d8c56a18b9a2960888d6ec1209955105bae847\n  laanwj:\n    ACK 02d8c56a18b9a2960888d6ec1209955105bae847\n  meshcollider:\n    utACK 02d8c56a18b9a2960888d6ec1209955105bae847\n\nTree-SHA512: 28eb39a201ee2b13393c5c64dbf7c1913f3482f095969ef5141bfe549ce77dd63bb5f14738f6eedb296c686ea36014aa157b9c5e8059710a318590f30e9caa14\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41919631d50949c845600d413be96ad6ce0495e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/41919631d50949c845600d413be96ad6ce0495e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41919631d50949c845600d413be96ad6ce0495e5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcbe024f5e6508ec3525babc0eb252d6b761e4d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcbe024f5e6508ec3525babc0eb252d6b761e4d5"
      },
      {
        "sha": "02d8c56a18b9a2960888d6ec1209955105bae847",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02d8c56a18b9a2960888d6ec1209955105bae847",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02d8c56a18b9a2960888d6ec1209955105bae847"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 51,
      "deletions": 0
    },
    "files": [
      {
        "sha": "99dae88bab7155d2043b8a218c377e91e1765a2e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41919631d50949c845600d413be96ad6ce0495e5/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41919631d50949c845600d413be96ad6ce0495e5/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=41919631d50949c845600d413be96ad6ce0495e5",
        "patch": "@@ -16,6 +16,7 @@\n #include <crypto/sha256.h>\n #include <netbase.h>\n #include <net_permissions.h>\n+#include <random.h>\n #include <scheduler.h>\n #include <ui_interface.h>\n #include <util/strencodings.h>\n@@ -445,6 +446,9 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     CNode* pnode = new CNode(id, nLocalServices, GetBestHeight(), hSocket, addrConnect, CalculateKeyedNetGroup(addrConnect), nonce, addr_bind, pszDest ? pszDest : \"\", false, block_relay_only);\n     pnode->AddRef();\n \n+    // We're making a new connection, harvest entropy from the time (and our peer count)\n+    RandAddEvent((uint32_t)id);\n+\n     return pnode;\n }\n \n@@ -693,6 +697,9 @@ CNetMessage V1TransportDeserializer::GetMessage(const CMessageHeader::MessageSta\n     msg.m_message_size = hdr.nMessageSize;\n     msg.m_raw_message_size = hdr.nMessageSize + CMessageHeader::HEADER_SIZE;\n \n+    // We just received a message off the wire, harvest entropy from the time (and the message checksum)\n+    RandAddEvent(ReadLE32(hash.begin()));\n+\n     msg.m_valid_checksum = (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) == 0);\n     if (!msg.m_valid_checksum) {\n         LogPrint(BCLog::NET, \"CHECKSUM ERROR (%s, %u bytes), expected %s was %s\\n\",\n@@ -1017,6 +1024,9 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n         LOCK(cs_vNodes);\n         vNodes.push_back(pnode);\n     }\n+\n+    // We received a new connection, harvest entropy from the time (and our peer count)\n+    RandAddEvent((uint32_t)id);\n }\n \n void CConnman::DisconnectNodes()"
      },
      {
        "sha": "09777237c20758367edec6fcba8c621f04de2f81",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41919631d50949c845600d413be96ad6ce0495e5/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41919631d50949c845600d413be96ad6ce0495e5/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=41919631d50949c845600d413be96ad6ce0495e5",
        "patch": "@@ -6,6 +6,7 @@\n #include <random.h>\n \n #include <compat/cpuid.h>\n+#include <crypto/sha256.h>\n #include <crypto/sha512.h>\n #include <support/cleanse.h>\n #ifdef WIN32\n@@ -449,6 +450,23 @@ static void SeedFast(CSHA512& hasher) noexcept\n     SeedTimestamp(hasher);\n }\n \n+// We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n+// since we want it to be fast as network peers may be able to trigger it repeatedly.\n+static Mutex events_mutex;\n+static CSHA256 events_hasher;\n+static void SeedEvents(CSHA512& hasher)\n+{\n+    LOCK(events_mutex);\n+\n+    unsigned char events_hash[32];\n+    events_hasher.Finalize(events_hash);\n+    hasher.Write(events_hash, 32);\n+\n+    // Re-initialize the hasher with the finalized state to use later.\n+    events_hasher.Reset();\n+    events_hasher.Write(events_hash, 32);\n+}\n+\n static void SeedSlow(CSHA512& hasher) noexcept\n {\n     unsigned char buffer[32];\n@@ -460,6 +478,9 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     GetOSRand(buffer);\n     hasher.Write(buffer, sizeof(buffer));\n \n+    // Add the events hasher into the mix\n+    SeedEvents(hasher);\n+\n     // High-precision timestamp.\n     //\n     // Note that we also commit to a timestamp in the Fast seeder, so we indirectly commit to a\n@@ -485,6 +506,9 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n     // High-precision timestamp\n     SeedTimestamp(hasher);\n \n+    // Add the events hasher into the mix\n+    SeedEvents(hasher);\n+\n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n@@ -553,6 +577,15 @@ void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNG\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n+void RandAddEvent(const uint32_t event_info) {\n+    LOCK(events_mutex);\n+    events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n+    // Get the low four bytes of the performance counter. This translates to roughly the\n+    // subsecond part.\n+    uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n+    events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n+}\n+\n bool g_mock_deterministic_tests{false};\n \n uint64_t GetRand(uint64_t nMax) noexcept"
      },
      {
        "sha": "b6e70fcb1fc6774416b136bd84d95b9cb0e2e16e",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/41919631d50949c845600d413be96ad6ce0495e5/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/41919631d50949c845600d413be96ad6ce0495e5/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=41919631d50949c845600d413be96ad6ce0495e5",
        "patch": "@@ -89,6 +89,14 @@ void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n  */\n void RandAddPeriodic();\n \n+/**\n+ * Gathers entropy from the low bits of the time at which events occur. Should\n+ * be called with a uint32_t describing the event at the time an event occurs.\n+ *\n+ * Thread-safe.\n+ */\n+void RandAddEvent(const uint32_t event_info);\n+\n /**\n  * Fast randomness source. This is seeded once with secure random data, but\n  * is completely deterministic and does not gather more entropy after that."
      }
    ]
  },
  {
    "sha": "faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWE4MDIzY2U5YTQ3YjI4MmUxZmFjM2NhOGIzYTdiYjAwNDI5MzVh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-19T16:40:43Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T14:32:15Z"
      },
      "message": "ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le",
      "tree": {
        "sha": "afe78a2579bc59142f017b0939131a57d2ecbcc7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afe78a2579bc59142f017b0939131a57d2ecbcc7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj1VAwAh/ts+d4zwhIhTViNis620lRJdiDS27I4a9rCwTS+y6nchX/jVg9soGJw\ngJlWR1VjiOyehpDJV+kta3126X/QF4kGbicIP14g12lH8FCzsMzO8jGeKUatn4S2\n6oUGzfNpDS/QeMZA4fvL9b9+i57vq6z4BW+vogmTcWmirrccNz5d4qXZIWzfSPg3\nZkfXk9K15q4wvieZ8Vt1RuZl/MdS34ptNahexrUk1997cxJ8EPBRkASY7n7raE/6\n7Vhl8/cxhp+hlXkbjZ3aZS98RwpQtR/cysLh0e4CdG6U442ap2fvz2ZUUaHh5xrA\nVrNYLVRVGJBRcp0Oe9UTYdDrbol5woZRU2NKN23pWXhlIt0Gvk0uXRaSsP1ODOXu\n3+FkBOJs+ggplcEF03SPTxgENE6U2qURMD89kgvAHniz6TyTnN4xp7nFhfP6i7HA\nO8QJkjZW8nJNXedXjyRK8LRT3NPTLGroutZasC0/NSgC05GEmodE799NnYOxn0Q1\nxXMTTedZ\n=VjjY\n-----END PGP SIGNATURE-----",
        "payload": "tree afe78a2579bc59142f017b0939131a57d2ecbcc7\nparent 1fdaa04cebaac61a1106ed52a35486039413a0cb\nauthor MarcoFalke <falke.marco@gmail.com> 1574181643 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575469935 -0500\n\nci: Bump to clang-8 for asan build to avoid segfaults on ppc64le\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fdaa04cebaac61a1106ed52a35486039413a0cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fdaa04cebaac61a1106ed52a35486039413a0cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fdaa04cebaac61a1106ed52a35486039413a0cb"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2ffd3c51078bdc7b29c9db68d2571b4a08e96fa4",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
        "patch": "@@ -6,7 +6,8 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+# Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running on ppc64le\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8\""
      }
    ]
  },
  {
    "sha": "2222c305866a77065ab5be24c1c252bae252bb59",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjIyYzMwNTg2NmE3NzA2NWFiNWJlMjRjMWMyNTJiYWUyNTJiYjU5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T18:42:13Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T14:32:19Z"
      },
      "message": "test: Use char instead of unsigned char",
      "tree": {
        "sha": "974a099b217fb059b47cf6d17bb9db0b7c596f9b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/974a099b217fb059b47cf6d17bb9db0b7c596f9b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2222c305866a77065ab5be24c1c252bae252bb59",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhjVwwAgnpNtGhnO8+wgwhJYV68v+auzeWiXhj16kOLw9KyL9I7xZ+/P+imQgrI\nWPkzTWW2VRnIYPZTMaOiZO4kKbw8lT6uOUA804XE1m+Kp/x8TmkWUJSPpMDY9VRI\nl13IQ2IZX46sj7FgmvEvbtmpn/dYa6go1r6jJuNCXt7xOSywYKSw9BXnseLFW5dk\nBnhC7JNBzSIRO2K0QDwntipSUeeBeoMEXoxAMcRAAA7KJc5WIX08y1/CcKbKXwRV\n+IiCTAfKtQFCqYRpLNJ4FbA22nzj/PdY0jjW+o/RZG/a1Al442/EyOMy1T9fQyaR\nYjgD1JxmpryVQSQHs9kwoVa1c/JVWuqjbVZCgzcPAE/wBgWtHKfGkPSqhSvQeBwX\nV3nYquHO/QqfAbyeRrtFifiF6ajValpPj8uSN0FQ2edftPIhDHZPNjp1qVane83d\n1ENTu3jw5ZZmrkL+BxuUqYwvfWZdK0BKekGm1vkMGkK/pYHgQVp2Seis57SDe3Gf\nU+YQ2aSs\n=dKvV\n-----END PGP SIGNATURE-----",
        "payload": "tree 974a099b217fb059b47cf6d17bb9db0b7c596f9b\nparent faa8023ce9a47b282e1fac3ca8b3a7bb0042935a\nauthor MarcoFalke <falke.marco@gmail.com> 1574275333 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575469939 -0500\n\ntest: Use char instead of unsigned char\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222c305866a77065ab5be24c1c252bae252bb59",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2222c305866a77065ab5be24c1c252bae252bb59",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222c305866a77065ab5be24c1c252bae252bb59/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faa8023ce9a47b282e1fac3ca8b3a7bb0042935a"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "2deb0c5bfc06e3c709eb09a9342008a847e8f953",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2222c305866a77065ab5be24c1c252bae252bb59/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2222c305866a77065ab5be24c1c252bae252bb59/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=2222c305866a77065ab5be24c1c252bae252bb59",
        "patch": "@@ -186,14 +186,15 @@ static void TestHKDF_SHA256_32(const std::string &ikm_hex, const std::string &sa\n     BOOST_CHECK(HexStr(out, out + 32) == okm_check_hex);\n }\n \n-static std::string LongTestString() {\n+static std::string LongTestString()\n+{\n     std::string ret;\n-    for (int i=0; i<200000; i++) {\n-        ret += (unsigned char)(i);\n-        ret += (unsigned char)(i >> 4);\n-        ret += (unsigned char)(i >> 8);\n-        ret += (unsigned char)(i >> 12);\n-        ret += (unsigned char)(i >> 16);\n+    for (int i = 0; i < 200000; i++) {\n+        ret += (char)(i);\n+        ret += (char)(i >> 4);\n+        ret += (char)(i >> 8);\n+        ret += (char)(i >> 12);\n+        ret += (char)(i >> 16);\n     }\n     return ret;\n }"
      }
    ]
  },
  {
    "sha": "fa69cef13e5aab8264339eb3d50a9e89d59efd87",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTY5Y2VmMTNlNWFhYjgyNjQzMzllYjNkNTBhOWU4OWQ1OWVmZDg3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T15:28:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T16:25:32Z"
      },
      "message": "test: Print stderr when subprocess fails",
      "tree": {
        "sha": "bfaef7a8e34443236eda2e3da9e93d4f107e257c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfaef7a8e34443236eda2e3da9e93d4f107e257c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa69cef13e5aab8264339eb3d50a9e89d59efd87",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgDugv9GprcPp13HxSU6/pz0YdLIGQ8scFeRTj1sqm1SU5lHO7pHh9fCR7L3Nja\nrDHi/47UIgSo3JYJ+uz8AI0w6qppYtUeVOhm7oM66Mq7Xl5ih8Yd3lmVePvd4zUr\n8lrFTw5QK9GeNpOL5HvbjdHHsTc7X5vuFn7FYixh1vCTtbhMvhsEdTpI5XHJQCvZ\nhTDYbcZq/vGFLC0LSLCdEfMbxcbEL0xFC6qS9oWcxKHCpbL69o3QshwSjlK9Eij6\nBorhtGfXK2wIXeXab7uqYplqg33PEYaotwuEpORHGwk9BCM1PkE3jnXZpZxBxaSZ\nqGvuZWjPi9iF08sEWvSDqQxnklxOnxXE6RJIi9aTWvtbELUpEaYKdK7GSfyCJyyS\n0kYgn/IbIop0pTHkpKd5BsVj7paHT9elFTNhLAOhRdqZf7Ersj4NrHu3u4RSxkPA\nMKLqWAxAAk9d/iqUwjCqv3mYo0thj8yRzdqsJkPs3CUizmv19zvfzROBhOI9ASw/\n71Gxoi4B\n=/QkK\n-----END PGP SIGNATURE-----",
        "payload": "tree bfaef7a8e34443236eda2e3da9e93d4f107e257c\nparent 2222c305866a77065ab5be24c1c252bae252bb59\nauthor MarcoFalke <falke.marco@gmail.com> 1575473289 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575476732 -0500\n\ntest: Print stderr when subprocess fails\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa69cef13e5aab8264339eb3d50a9e89d59efd87",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa69cef13e5aab8264339eb3d50a9e89d59efd87",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa69cef13e5aab8264339eb3d50a9e89d59efd87/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2222c305866a77065ab5be24c1c252bae252bb59",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2222c305866a77065ab5be24c1c252bae252bb59",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2222c305866a77065ab5be24c1c252bae252bb59"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f468f9eaec5dcd1caa3ef161bde2493ee4ce9896",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa69cef13e5aab8264339eb3d50a9e89d59efd87/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa69cef13e5aab8264339eb3d50a9e89d59efd87/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fa69cef13e5aab8264339eb3d50a9e89d59efd87",
        "patch": "@@ -12,6 +12,7 @@\n import pdb\n import random\n import shutil\n+import subprocess\n import sys\n import tempfile\n import time\n@@ -121,6 +122,9 @@ def main(self):\n         except KeyError:\n             self.log.exception(\"Key error\")\n             self.success = TestStatus.FAILED\n+        except subprocess.CalledProcessError as e:\n+            self.log.exception(\"Called Process failed with '{}'\".format(e.output))\n+            self.success = TestStatus.FAILED\n         except Exception:\n             self.log.exception(\"Unexpected exception caught during testing\")\n             self.success = TestStatus.FAILED"
      }
    ]
  },
  {
    "sha": "fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTFiZmM0NzZjOTIwOGE0YzQxMmM4Y2E3NGQwNWY1MmJiNDc3NjZm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-11-20T19:10:57Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T17:16:38Z"
      },
      "message": "ci: ubsan report_error_type=1 and add suppressions",
      "tree": {
        "sha": "922de7964e094ecf9c0511f31a748cb2fc61a9b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/922de7964e094ecf9c0511f31a748cb2fc61a9b0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgxfwv/QeGadFV5Vlj3bR7WeG0e2N+VR5Y8gdcQ//5DLhJ71+DZ5z50jq6cboA7\nv7F2ON/cGfBmggZ6z8z52a/ZsoDNfKqbxSrDa4MGBWbfJlQk/DyPjfo2TSuxxR0b\nSCE4tOYTBcn+9idB56SobyQBmpTm1hd5JQaIUTOJufjN0havEJwZKaquKp3ilQGB\n1S0W2QiOAtACXE/GZ0dFB1QBSnrEXNgUNq/CgPj4QpTOOlR+PecAwpGRtDYIr/jN\nskrz30xeGbsB6OSHyRkPrRMe3IyF6pvbtprfRhBjMkuCRr3cU1so+LanmGZV/YwH\njxx/yPVFTC5FPUDcD75US9AwpVuenGtUGY8lMq4pTOwsBYLFJg1BR9u8O/3uzdp1\nj96i2mvAHh4K7+E3/Mmzuj3HMJqCMCE1Negq1cq4BaFf1/nLO6z4TWAVFABSavHI\n0qtm5zje/sr7QTBflV9+mjC8P2vxTtwIi1J+LJVGsh1intSbKqiGuHNTcgRe5ZO5\nweheaKST\n=xBxj\n-----END PGP SIGNATURE-----",
        "payload": "tree 922de7964e094ecf9c0511f31a748cb2fc61a9b0\nparent fa69cef13e5aab8264339eb3d50a9e89d59efd87\nauthor MarcoFalke <falke.marco@gmail.com> 1574277057 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575479798 -0500\n\nci: ubsan report_error_type=1 and add suppressions\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bfc476c9208a4c412c8ca74d05f52bb47766f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa69cef13e5aab8264339eb3d50a9e89d59efd87",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa69cef13e5aab8264339eb3d50a9e89d59efd87",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa69cef13e5aab8264339eb3d50a9e89d59efd87"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 43,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b9eaae0b0de4fbe50c4e72bdfa5c0d9fbfea2a52",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1bfc476c9208a4c412c8ca74d05f52bb47766f/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1bfc476c9208a4c412c8ca74d05f52bb47766f/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
        "patch": "@@ -36,7 +36,7 @@ mkdir -p \"${CCACHE_DIR}\"\n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\""
      },
      {
        "sha": "f5de358bcb994a7a5430986e34eb2ab1002166ca",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa1bfc476c9208a4c412c8ca74d05f52bb47766f/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa1bfc476c9208a4c412c8ca74d05f52bb47766f/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
        "patch": "@@ -42,3 +42,45 @@ unsigned-integer-overflow:stl_bvector.h\n unsigned-integer-overflow:txmempool.cpp\n unsigned-integer-overflow:util/strencodings.cpp\n unsigned-integer-overflow:validation.cpp\n+\n+implicit-integer-sign-change:*/include/c++/*/bits/*.h\n+implicit-integer-sign-change:*/new_allocator.h\n+implicit-integer-sign-change:/usr/include/boost/date_time/format_date_parser.hpp\n+implicit-integer-sign-change:arith_uint256.cpp\n+implicit-integer-sign-change:bech32.cpp\n+implicit-integer-sign-change:bloom.cpp\n+implicit-integer-sign-change:chain.*\n+implicit-integer-sign-change:coins.h\n+implicit-integer-sign-change:compat/stdin.cpp\n+implicit-integer-sign-change:compressor.h\n+implicit-integer-sign-change:crypto/*\n+implicit-integer-sign-change:key.cpp\n+implicit-integer-sign-change:noui.cpp\n+implicit-integer-sign-change:prevector.h\n+implicit-integer-sign-change:protocol.cpp\n+implicit-integer-sign-change:script/bitcoinconsensus.cpp\n+implicit-integer-sign-change:script/interpreter.cpp\n+implicit-integer-sign-change:serialize.h\n+implicit-integer-sign-change:test/arith_uint256_tests.cpp\n+implicit-integer-sign-change:test/coins_tests.cpp\n+implicit-integer-sign-change:test/pow_tests.cpp\n+implicit-integer-sign-change:test/prevector_tests.cpp\n+implicit-integer-sign-change:test/sighash_tests.cpp\n+implicit-integer-sign-change:test/streams_tests.cpp\n+implicit-integer-sign-change:test/transaction_tests.cpp\n+implicit-integer-sign-change:txmempool.cpp\n+implicit-integer-sign-change:util/strencodings.*\n+implicit-integer-sign-change:validation.cpp\n+implicit-integer-sign-change:zmq/zmqpublishnotifier.cpp\n+implicit-signed-integer-truncation,implicit-integer-sign-change:chain.h\n+implicit-signed-integer-truncation,implicit-integer-sign-change:test/skiplist_tests.cpp\n+implicit-signed-integer-truncation:chain.h\n+implicit-signed-integer-truncation:crypto/*\n+implicit-signed-integer-truncation:cuckoocache.h\n+implicit-signed-integer-truncation:leveldb/*\n+implicit-signed-integer-truncation:streams.h\n+implicit-signed-integer-truncation:test/arith_uint256_tests.cpp\n+implicit-signed-integer-truncation:test/skiplist_tests.cpp\n+implicit-signed-integer-truncation:torcontrol.cpp\n+implicit-unsigned-integer-truncation:crypto/*\n+implicit-unsigned-integer-truncation:leveldb/*"
      }
    ]
  },
  {
    "sha": "fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTQwZTQ4YzUwZDhjY2Y0MmNlNWU2NmMxMjM5MGUyZWQ0YjYwZTc1",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T16:21:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T17:16:52Z"
      },
      "message": "ci: Remove unparseable lines from supp file for old xenial clang tsan",
      "tree": {
        "sha": "02e491ac3cceb07a99b1350389d1dba991bc36bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/02e491ac3cceb07a99b1350389d1dba991bc36bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjcAwwAx+Q5bzMfywJ4QlILmOdbqP7eAJl1FIeK2wcbRawvHkVcpiKp1Jcik5ws\n/0Cby74Dg7tBcdAqYisyIaABdhWLcnwhsn03Gnr0ZyTrr2CDnr35684jsIDTLk4s\nUCl1e/1uJKeasmwxf6NErKRFiOAicJNIO9Lr9FSHfVLUJBV6ei0nf6orK2EkfpTH\n42JEu4ACea4jny7WbWDAIiwdRg6nDHz7GVzDpBQ3QTI+Yn9JQTlH6ZzbRWttSqiD\n+Hrg9EJrvrMffUCmDU6PTwitlxhAzpr3s5cMdAgGkAs5vHM2loIz5jWYFRDPcCT+\n4+L6nPYl9xhgJORX/D7WCcqW3Z387Ukqhjiiz+cqpX85BoXrK7AZ0Gqg96uT0nEB\nXdvps0q3eT3DQOIcP7jhf2wbgAI9R4bmEYb6KazyZkh+liXozKFKe4B56j/iwkIt\nOKxri9tyte72vP4vQu5Zzl+j1XQF4l3RToTuXSwWpLTqv6OzAJBqFfxIiExqIxFQ\n6oXaJGy5\n=rGjk\n-----END PGP SIGNATURE-----",
        "payload": "tree 02e491ac3cceb07a99b1350389d1dba991bc36bd\nparent fa1bfc476c9208a4c412c8ca74d05f52bb47766f\nauthor MarcoFalke <falke.marco@gmail.com> 1575476492 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575479812 -0500\n\nci: Remove unparseable lines from supp file for old xenial clang tsan\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa1bfc476c9208a4c412c8ca74d05f52bb47766f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa1bfc476c9208a4c412c8ca74d05f52bb47766f"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1f485fbec435d6da8ed849fd9777ad5bb6b0a816",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
        "patch": "@@ -6,19 +6,19 @@\n \n export LC_ALL=C.UTF-8\n \n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the build is done (depends and dist).\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n echo \"Setting specific values in env\"\n if [ -n \"${FILE_ENV}\" ]; then\n   set -o errexit;\n   # shellcheck disable=SC1090\n   source \"${FILE_ENV}\"\n fi\n \n-# The root dir.\n-# The ci system copies this folder.\n-# This is where the build is done (depends and dist).\n-BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n-export BASE_ROOT_DIR\n-\n echo \"Fallback to default values in env (if not yet set)\"\n # The number of parallel jobs to pass down to make and test_runner.py\n export MAKEJOBS=${MAKEJOBS:--j4}"
      },
      {
        "sha": "e9b7a7bba1fc81c4f995e51b6fe61197ba5ed0c2",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
        "patch": "@@ -11,3 +11,7 @@ export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+\n+# xenial comes with old clang versions that can not parse the sanitizer suppressions files\n+# Remove unparseable lines as a hacky workaround\n+sed -i '/^implicit-/d' \"${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan\""
      }
    ]
  },
  {
    "sha": "fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWUwMWJiMDUzNjM5ZjllMDY2ZmZiN2NhNzJkN2E1Y2IwMDVkNGIz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T18:22:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-04T18:23:16Z"
      },
      "message": "Merge #17517: ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le\n\nfa40e48c50d8ccf42ce5e66c12390e2ed4b60e75 ci: Remove unparseable lines from supp file for old xenial clang tsan (MarcoFalke)\nfa1bfc476c9208a4c412c8ca74d05f52bb47766f ci: ubsan report_error_type=1 and add suppressions (MarcoFalke)\nfa69cef13e5aab8264339eb3d50a9e89d59efd87 test: Print stderr when subprocess fails (MarcoFalke)\n2222c305866a77065ab5be24c1c252bae252bb59 test: Use char instead of unsigned char (MarcoFalke)\nfaa8023ce9a47b282e1fac3ca8b3a7bb0042935a ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le (MarcoFalke)\n\nPull request description:\n\n  Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running the ci system on ppc64le\n\nACKs for top commit:\n  practicalswift:\n    ACK fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75 assuming Travis is happy -- diff looks correct :)\n\nTree-SHA512: f4f26232d3a0ef38da245869340f723d279a3db9823befbc735fb5a00024dae041c7306d7ae55d2488e6f86aa96cdea155b007aefb561fba505141e8dbc717dc",
      "tree": {
        "sha": "64746d06501c357ebc9eb334699035b5d1309940",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/64746d06501c357ebc9eb334699035b5d1309940"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgzGAv/XQrMa06YYMFh9UHkn9MtElDrUgk4fs4j/zLf30YZ+ryB+Y3CQi1jOJeg\nzmsp1F+96hrDH4m3jn9DPeoPJBSC43hFHxFkH75mlsNCAanlAdD6Gy+JfPYDBJ8z\nkb/6GtfM2BSXeBKX9W1190Tge/S4szp719JZY2VNPvNrGxFic7bAa2YHGutRhDoP\nRe4CgK+WTqpaVD8lCx7GLCwt2ZxHYDN+Yb69H83lh1Kzg27La6UosJTjLzSKrviP\nX1aSATA+xa0HDNBogALoRTb38p+arzfrwATLOQszZyVk71lvRIN2WJYTa0gtGcX2\n/PfvqfvLrEII1vZFK43f1duQSB+icohppdZH18RG1MW6Da0I6koOK/QBGER/hscy\nrrZvZjPMeCXjYhRXqi7N4htGTUlin5WoKq220bs3rBtXAags6m5hZh2EVBmh6euM\nVKzI6G90GLeDLE+1Ik93NmUemGMDLzMgfXTB5y3CjAIHqQfRxq+OvxESaM+dyZAB\nzU8P2Kr5\n=oTfU\n-----END PGP SIGNATURE-----",
        "payload": "tree 64746d06501c357ebc9eb334699035b5d1309940\nparent 41919631d50949c845600d413be96ad6ce0495e5\nparent fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75\nauthor MarcoFalke <falke.marco@gmail.com> 1575483743 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575483796 -0500\n\nMerge #17517: ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le\n\nfa40e48c50d8ccf42ce5e66c12390e2ed4b60e75 ci: Remove unparseable lines from supp file for old xenial clang tsan (MarcoFalke)\nfa1bfc476c9208a4c412c8ca74d05f52bb47766f ci: ubsan report_error_type=1 and add suppressions (MarcoFalke)\nfa69cef13e5aab8264339eb3d50a9e89d59efd87 test: Print stderr when subprocess fails (MarcoFalke)\n2222c305866a77065ab5be24c1c252bae252bb59 test: Use char instead of unsigned char (MarcoFalke)\nfaa8023ce9a47b282e1fac3ca8b3a7bb0042935a ci: Bump to clang-8 for asan build to avoid segfaults on ppc64le (MarcoFalke)\n\nPull request description:\n\n  Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running the ci system on ppc64le\n\nACKs for top commit:\n  practicalswift:\n    ACK fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75 assuming Travis is happy -- diff looks correct :)\n\nTree-SHA512: f4f26232d3a0ef38da245869340f723d279a3db9823befbc735fb5a00024dae041c7306d7ae55d2488e6f86aa96cdea155b007aefb561fba505141e8dbc717dc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "41919631d50949c845600d413be96ad6ce0495e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/41919631d50949c845600d413be96ad6ce0495e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/41919631d50949c845600d413be96ad6ce0495e5"
      },
      {
        "sha": "fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa40e48c50d8ccf42ce5e66c12390e2ed4b60e75"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 68,
      "deletions": 16
    },
    "files": [
      {
        "sha": "1f485fbec435d6da8ed849fd9777ad5bb6b0a816",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -6,19 +6,19 @@\n \n export LC_ALL=C.UTF-8\n \n+# The root dir.\n+# The ci system copies this folder.\n+# This is where the build is done (depends and dist).\n+BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n+export BASE_ROOT_DIR\n+\n echo \"Setting specific values in env\"\n if [ -n \"${FILE_ENV}\" ]; then\n   set -o errexit;\n   # shellcheck disable=SC1090\n   source \"${FILE_ENV}\"\n fi\n \n-# The root dir.\n-# The ci system copies this folder.\n-# This is where the build is done (depends and dist).\n-BASE_ROOT_DIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\"/../../ >/dev/null 2>&1 && pwd )\n-export BASE_ROOT_DIR\n-\n echo \"Fallback to default values in env (if not yet set)\"\n # The number of parallel jobs to pass down to make and test_runner.py\n export MAKEJOBS=${MAKEJOBS:--j4}"
      },
      {
        "sha": "2ffd3c51078bdc7b29c9db68d2571b4a08e96fa4",
        "filename": "ci/test/00_setup_env_native_asan.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env_native_asan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env_native_asan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_asan.sh?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -6,7 +6,8 @@\n \n export LC_ALL=C.UTF-8\n \n-export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+export PACKAGES=\"clang-8 llvm-8 python3-zmq qtbase5-dev qttools5-dev-tools libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.3++-dev libminiupnpc-dev libzmq3-dev libqrencode-dev\"\n+# Use clang-8 instead of default clang (which is clang-6 on Bionic) to avoid spurious segfaults when running on ppc64le\n export NO_DEPENDS=1\n export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang CXX=clang++\"\n+export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=address,integer,undefined CC=clang-8 CXX=clang++-8\""
      },
      {
        "sha": "e9b7a7bba1fc81c4f995e51b6fe61197ba5ed0c2",
        "filename": "ci/test/00_setup_env_native_tsan.sh",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env_native_tsan.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/00_setup_env_native_tsan.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_tsan.sh?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -11,3 +11,7 @@ export PACKAGES=\"clang llvm python3-zmq qtbase5-dev qttools5-dev-tools libevent-\n export NO_DEPENDS=1\n export GOAL=\"install\"\n export BITCOIN_CONFIG=\"--enable-zmq --disable-wallet --with-gui=qt5 CPPFLAGS='-DARENA_DEBUG -DDEBUG_LOCKORDER' --with-sanitizers=thread --disable-hardening --disable-asm CC=clang CXX=clang++\"\n+\n+# xenial comes with old clang versions that can not parse the sanitizer suppressions files\n+# Remove unparseable lines as a hacky workaround\n+sed -i '/^implicit-/d' \"${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan\""
      },
      {
        "sha": "b9eaae0b0de4fbe50c4e72bdfa5c0d9fbfea2a52",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -36,7 +36,7 @@ mkdir -p \"${CCACHE_DIR}\"\n export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n-export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1\"\n+export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n env | grep -E '^(BITCOIN_CONFIG|CCACHE_|WINEDEBUG|LC_ALL|BOOST_TEST_RANDOM|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\""
      },
      {
        "sha": "2deb0c5bfc06e3c709eb09a9342008a847e8f953",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -186,14 +186,15 @@ static void TestHKDF_SHA256_32(const std::string &ikm_hex, const std::string &sa\n     BOOST_CHECK(HexStr(out, out + 32) == okm_check_hex);\n }\n \n-static std::string LongTestString() {\n+static std::string LongTestString()\n+{\n     std::string ret;\n-    for (int i=0; i<200000; i++) {\n-        ret += (unsigned char)(i);\n-        ret += (unsigned char)(i >> 4);\n-        ret += (unsigned char)(i >> 8);\n-        ret += (unsigned char)(i >> 12);\n-        ret += (unsigned char)(i >> 16);\n+    for (int i = 0; i < 200000; i++) {\n+        ret += (char)(i);\n+        ret += (char)(i >> 4);\n+        ret += (char)(i >> 8);\n+        ret += (char)(i >> 12);\n+        ret += (char)(i >> 16);\n     }\n     return ret;\n }"
      },
      {
        "sha": "f468f9eaec5dcd1caa3ef161bde2493ee4ce9896",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -12,6 +12,7 @@\n import pdb\n import random\n import shutil\n+import subprocess\n import sys\n import tempfile\n import time\n@@ -121,6 +122,9 @@ def main(self):\n         except KeyError:\n             self.log.exception(\"Key error\")\n             self.success = TestStatus.FAILED\n+        except subprocess.CalledProcessError as e:\n+            self.log.exception(\"Called Process failed with '{}'\".format(e.output))\n+            self.success = TestStatus.FAILED\n         except Exception:\n             self.log.exception(\"Unexpected exception caught during testing\")\n             self.success = TestStatus.FAILED"
      },
      {
        "sha": "f5de358bcb994a7a5430986e34eb2ab1002166ca",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 42,
        "deletions": 0,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "patch": "@@ -42,3 +42,45 @@ unsigned-integer-overflow:stl_bvector.h\n unsigned-integer-overflow:txmempool.cpp\n unsigned-integer-overflow:util/strencodings.cpp\n unsigned-integer-overflow:validation.cpp\n+\n+implicit-integer-sign-change:*/include/c++/*/bits/*.h\n+implicit-integer-sign-change:*/new_allocator.h\n+implicit-integer-sign-change:/usr/include/boost/date_time/format_date_parser.hpp\n+implicit-integer-sign-change:arith_uint256.cpp\n+implicit-integer-sign-change:bech32.cpp\n+implicit-integer-sign-change:bloom.cpp\n+implicit-integer-sign-change:chain.*\n+implicit-integer-sign-change:coins.h\n+implicit-integer-sign-change:compat/stdin.cpp\n+implicit-integer-sign-change:compressor.h\n+implicit-integer-sign-change:crypto/*\n+implicit-integer-sign-change:key.cpp\n+implicit-integer-sign-change:noui.cpp\n+implicit-integer-sign-change:prevector.h\n+implicit-integer-sign-change:protocol.cpp\n+implicit-integer-sign-change:script/bitcoinconsensus.cpp\n+implicit-integer-sign-change:script/interpreter.cpp\n+implicit-integer-sign-change:serialize.h\n+implicit-integer-sign-change:test/arith_uint256_tests.cpp\n+implicit-integer-sign-change:test/coins_tests.cpp\n+implicit-integer-sign-change:test/pow_tests.cpp\n+implicit-integer-sign-change:test/prevector_tests.cpp\n+implicit-integer-sign-change:test/sighash_tests.cpp\n+implicit-integer-sign-change:test/streams_tests.cpp\n+implicit-integer-sign-change:test/transaction_tests.cpp\n+implicit-integer-sign-change:txmempool.cpp\n+implicit-integer-sign-change:util/strencodings.*\n+implicit-integer-sign-change:validation.cpp\n+implicit-integer-sign-change:zmq/zmqpublishnotifier.cpp\n+implicit-signed-integer-truncation,implicit-integer-sign-change:chain.h\n+implicit-signed-integer-truncation,implicit-integer-sign-change:test/skiplist_tests.cpp\n+implicit-signed-integer-truncation:chain.h\n+implicit-signed-integer-truncation:crypto/*\n+implicit-signed-integer-truncation:cuckoocache.h\n+implicit-signed-integer-truncation:leveldb/*\n+implicit-signed-integer-truncation:streams.h\n+implicit-signed-integer-truncation:test/arith_uint256_tests.cpp\n+implicit-signed-integer-truncation:test/skiplist_tests.cpp\n+implicit-signed-integer-truncation:torcontrol.cpp\n+implicit-unsigned-integer-truncation:crypto/*\n+implicit-unsigned-integer-truncation:leveldb/*"
      }
    ]
  },
  {
    "sha": "5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWVlMGUyMTYzY2MwMmNkZjFjZDZiZWM2OWJmYmI1MTNiYjMwMmQ1",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-04T19:32:43Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-04T19:59:12Z"
      },
      "message": "Merge #17650: util: remove unwanted fields from bitcoin-cli -getinfo\n\n01c87015597021bf1c0856f7f6be175bdde844b2 util: remove unwanted fields from bitcoin-cli -getinfo (malevolent)\n\nPull request description:\n\n  Removed the following fields from -getinfo: protocolversion, walletversion and keypoololdest. This change closes #17314 .\n\nACKs for top commit:\n  laanwj:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2\n  achow101:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2\n  practicalswift:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2 -- diff looks correct\n\nTree-SHA512: c98f2e8a3fee04d46766f70cb88f4e49e892a4424eff8940a7d48e9e808597b702427225788f984f5c3641591fd8d86acee56774afde1d57a4259c31d971ea08",
      "tree": {
        "sha": "a08943f5513ff4300b83be4d6549a42c61a663fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a08943f5513ff4300b83be4d6549a42c61a663fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3oEBAACgkQLuufXMCV\nJsE6mhAAui0DPjE4TjsnRtJ41Nvx3o4S1HhJcZJAQ+IgO87OjQ/kv2R4spx2kJGO\ns71AZ15FQ48grlrw3V+S8oo0y5FbCgbnvTdDglHcD9EWvDBSGe0YWytCo1Xj5vvF\n2INInZIM4GwQAjec6rc6ZeAfD9/qO/MkYYbXXCmW0iv/fdQw1H4FbiTr6/M6JXxP\nzhpIdsYpkP07wpdrKY5HC42n0asW/mIVL1JJb/tOWdDgNpQtSRgEPeiZLzkQOB0f\n2EdqD23Lekvml/5ELWuC1tMRompXYqAwCwg0roMql2F18OdPQrzjeS1kWTR+p6kh\n86gmCNE5thuFx/QnevuSabVaXJjuKNlKHfoHnQD4oMIwZfqVcLYkse2SZWOkNjxE\n0/gi2JGwwezAVNhC1T7sKD9Mtt7t4UeXV1eE0WhbQB+oPe76kiqxRhDUhuD+QcS3\n2xUwdY3xexQkW0itSYj/8zQKnFlpXYKONbVRlw+o33n7reVh+dqfzfzdusUU23De\nXCHgdOoMlbUNmo111RFomNc7vQJoj4EixlfIZO4g+O4uCyd8FdNZnzUHNr+zvPr/\n8dZ7iyjFao8A7P3nILaIvOSmYO1LZ6M4d8qtZf21HpfoeAgNXB8VClNY2WS/ly4F\nyfKYX7yya6RiQFD3lQs8Ev0+VeKFW/Lx0+WONhZzqa3y8Xv/0kE=\n=iNSZ\n-----END PGP SIGNATURE-----",
        "payload": "tree a08943f5513ff4300b83be4d6549a42c61a663fb\nparent fee01bb053639f9e066ffb7ca72d7a5cb005d4b3\nparent 01c87015597021bf1c0856f7f6be175bdde844b2\nauthor fanquake <fanquake@gmail.com> 1575487963 -0500\ncommitter fanquake <fanquake@gmail.com> 1575489552 -0500\n\nMerge #17650: util: remove unwanted fields from bitcoin-cli -getinfo\n\n01c87015597021bf1c0856f7f6be175bdde844b2 util: remove unwanted fields from bitcoin-cli -getinfo (malevolent)\n\nPull request description:\n\n  Removed the following fields from -getinfo: protocolversion, walletversion and keypoololdest. This change closes #17314 .\n\nACKs for top commit:\n  laanwj:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2\n  achow101:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2\n  practicalswift:\n    ACK 01c87015597021bf1c0856f7f6be175bdde844b2 -- diff looks correct\n\nTree-SHA512: c98f2e8a3fee04d46766f70cb88f4e49e892a4424eff8940a7d48e9e808597b702427225788f984f5c3641591fd8d86acee56774afde1d57a4259c31d971ea08\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fee01bb053639f9e066ffb7ca72d7a5cb005d4b3"
      },
      {
        "sha": "01c87015597021bf1c0856f7f6be175bdde844b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01c87015597021bf1c0856f7f6be175bdde844b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/01c87015597021bf1c0856f7f6be175bdde844b2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 0,
      "deletions": 6
    },
    "files": [
      {
        "sha": "1035e730b8071e7e92becb6811f830ed9bd40ff0",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "patch": "@@ -256,7 +256,6 @@ class GetinfoRequestHandler: public BaseRequestHandler\n             return batch[ID_BLOCKCHAININFO];\n         }\n         result.pushKV(\"version\", batch[ID_NETWORKINFO][\"result\"][\"version\"]);\n-        result.pushKV(\"protocolversion\", batch[ID_NETWORKINFO][\"result\"][\"protocolversion\"]);\n         result.pushKV(\"blocks\", batch[ID_BLOCKCHAININFO][\"result\"][\"blocks\"]);\n         result.pushKV(\"headers\", batch[ID_BLOCKCHAININFO][\"result\"][\"headers\"]);\n         result.pushKV(\"verificationprogress\", batch[ID_BLOCKCHAININFO][\"result\"][\"verificationprogress\"]);\n@@ -266,9 +265,7 @@ class GetinfoRequestHandler: public BaseRequestHandler\n         result.pushKV(\"difficulty\", batch[ID_BLOCKCHAININFO][\"result\"][\"difficulty\"]);\n         result.pushKV(\"chain\", UniValue(batch[ID_BLOCKCHAININFO][\"result\"][\"chain\"]));\n         if (!batch[ID_WALLETINFO][\"result\"].isNull()) {\n-            result.pushKV(\"walletversion\", batch[ID_WALLETINFO][\"result\"][\"walletversion\"]);\n             result.pushKV(\"balance\", batch[ID_WALLETINFO][\"result\"][\"balance\"]);\n-            result.pushKV(\"keypoololdest\", batch[ID_WALLETINFO][\"result\"][\"keypoololdest\"]);\n             result.pushKV(\"keypoolsize\", batch[ID_WALLETINFO][\"result\"][\"keypoolsize\"]);\n             if (!batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"].isNull()) {\n                 result.pushKV(\"unlocked_until\", batch[ID_WALLETINFO][\"result\"][\"unlocked_until\"]);"
      },
      {
        "sha": "f04a58cd19698a853eb345d7128040fb62f543a5",
        "filename": "test/functional/interface_bitcoin_cli.py",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5/test/functional/interface_bitcoin_cli.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5/test/functional/interface_bitcoin_cli.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_bitcoin_cli.py?ref=5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "patch": "@@ -59,17 +59,14 @@ def run_test(self):\n         blockchain_info = self.nodes[0].getblockchaininfo()\n \n         assert_equal(cli_get_info['version'], network_info['version'])\n-        assert_equal(cli_get_info['protocolversion'], network_info['protocolversion'])\n         assert_equal(cli_get_info['blocks'], blockchain_info['blocks'])\n         assert_equal(cli_get_info['timeoffset'], network_info['timeoffset'])\n         assert_equal(cli_get_info['connections'], network_info['connections'])\n         assert_equal(cli_get_info['proxy'], network_info['networks'][0]['proxy'])\n         assert_equal(cli_get_info['difficulty'], blockchain_info['difficulty'])\n         assert_equal(cli_get_info['chain'], blockchain_info['chain'])\n         if self.is_wallet_compiled():\n-            assert_equal(cli_get_info['walletversion'], wallet_info['walletversion'])\n             assert_equal(cli_get_info['balance'], wallet_info['balance'])\n-            assert_equal(cli_get_info['keypoololdest'], wallet_info['keypoololdest'])\n             assert_equal(cli_get_info['keypoolsize'], wallet_info['keypoolsize'])\n             assert_equal(cli_get_info['paytxfee'], wallet_info['paytxfee'])\n             assert_equal(cli_get_info['relayfee'], network_info['relayfee'])"
      }
    ]
  },
  {
    "sha": "b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTFkMzViNWUyZGQwOWFiODE2ZDY4OGQ4YWMwMjY0YjQzZjdmODQ0",
    "commit": {
      "author": {
        "name": "willyk",
        "email": "wko@blockchainfoundry.co",
        "date": "2019-12-05T00:30:29Z"
      },
      "committer": {
        "name": "Willy Ko",
        "email": "wko@blockchainfoundry.co",
        "date": "2019-12-05T10:21:09Z"
      },
      "message": "Fixed wget call in gitian-build.py",
      "tree": {
        "sha": "f07b3b73a787c89dcb0f1b06387c7655ec7787c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f07b3b73a787c89dcb0f1b06387c7655ec7787c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b11d35b5e2dd09ab816d688d8ac0264b43f7f844/comments",
    "author": {
      "login": "willyko",
      "id": 11524904,
      "node_id": "MDQ6VXNlcjExNTI0OTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11524904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willyko",
      "html_url": "https://github.com/willyko",
      "followers_url": "https://api.github.com/users/willyko/followers",
      "following_url": "https://api.github.com/users/willyko/following{/other_user}",
      "gists_url": "https://api.github.com/users/willyko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willyko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willyko/subscriptions",
      "organizations_url": "https://api.github.com/users/willyko/orgs",
      "repos_url": "https://api.github.com/users/willyko/repos",
      "events_url": "https://api.github.com/users/willyko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willyko/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "willyko",
      "id": 11524904,
      "node_id": "MDQ6VXNlcjExNTI0OTA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11524904?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willyko",
      "html_url": "https://github.com/willyko",
      "followers_url": "https://api.github.com/users/willyko/followers",
      "following_url": "https://api.github.com/users/willyko/following{/other_user}",
      "gists_url": "https://api.github.com/users/willyko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willyko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willyko/subscriptions",
      "organizations_url": "https://api.github.com/users/willyko/orgs",
      "repos_url": "https://api.github.com/users/willyko/repos",
      "events_url": "https://api.github.com/users/willyko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willyko/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e38fa6fcb01271feb77e8af263f54e9ffc375f6c",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11d35b5e2dd09ab816d688d8ac0264b43f7f844/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11d35b5e2dd09ab816d688d8ac0264b43f7f844/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
        "patch": "@@ -51,7 +51,7 @@ def build():\n     os.chdir('gitian-builder')\n     os.makedirs('inputs', exist_ok=True)\n \n-    subprocess.check_call(['wget', '-O' 'osslsigncode-2.0.tar.gz' '-N', '-P', 'inputs', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n     subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n     subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n "
      },
      {
        "sha": "36d79a0c34dec300a9c65ef85407d7c762296ffb",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b11d35b5e2dd09ab816d688d8ac0264b43f7f844/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b11d35b5e2dd09ab816d688d8ac0264b43f7f844/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
        "patch": "@@ -116,7 +116,7 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -O osslsigncode-2.0.tar.gz -P inputs https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n+    wget -O inputs/osslsigncode-2.0.tar.gz https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n     echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\n     popd\n "
      }
    ]
  },
  {
    "sha": "1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjlkNWFmNGYxOTdlN2NjMDQ2OWEwYmIyNWRjYmM1MWRmYTUzN2Y0",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-05T10:46:55Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-05T10:54:18Z"
      },
      "message": "tests: Add initialization order fiasco detection in Travis",
      "tree": {
        "sha": "8d1f7a4a9ab5cd04f1a1b728fe946bfb3aeef3bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d1f7a4a9ab5cd04f1a1b728fe946bfb3aeef3bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5aa788e07d9c212ebea31875bd96f06596ec9b65",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
        "patch": "@@ -33,7 +33,7 @@ fi\n mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n \n-export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\""
      }
    ]
  },
  {
    "sha": "ba0cad2702e01860d3539f170343d8d9f9c5b75a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTBjYWQyNzAyZTAxODYwZDM1MzlmMTcwMzQzZDhkOWY5YzViNzVh",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-03T22:45:55Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-05T13:41:15Z"
      },
      "message": "build: pass -dead_strip_dylibs to ld on macOS\n\nThis strips some unused dylibs from bitcoin-qt.\n\nFrom man ld:\nRemove dylibs that are unreachable by the entry point or exported symbols. \nThat is, suppresses the generation of load command commands for dylibs \nwhich supplied no symbols during the link. This option should not be \nused when linking against a dylib which is required at runtime for \nsome indirect reason such as the dylib has an important initializer.",
      "tree": {
        "sha": "c221b4f1afcc5e796a97a5e49d3250f28e89a8e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c221b4f1afcc5e796a97a5e49d3250f28e89a8e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba0cad2702e01860d3539f170343d8d9f9c5b75a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3pCPsACgkQLuufXMCV\nJsFUzg//T0w3iXhBdwalmIsbkY6m5c6a2v6njD3KIARzMh3/uk/qVWxLbBNI/oFP\n389rtjQnREJddlapxXFQTK2OwAelYW3WqPUjQ/O3b52mQJkiFg2jdIeMflREFHxt\nRPEytKUGAkJ6XQ0m2igC4dqSotFyyUtrMmy0PDx5/b9EODHhUdNS2KexyHZj4YLj\nwQTgLtC4wIcSijqC8sZo0pZq1CEGvVHfTeYEdeB9SjoK9c3eiD/AXDA4UU14LIy2\njtYJnEEIcT3oxDMC+foCL1mVCTmbfyXZxX83fdvk9DCKe26FtviH8yCUDbAap/Mf\njV2VBDsITFNMg8hOX1AjDsPAT/Oudfu2imwzy2FC/XqIhGG3UGMQGYt1/iSWQ0jn\nDUHAc++xdhvH8wCV+Z6/BIWTn8+2cVlIuE/C1BVaGSsUFR8Ch+iDdNrtvY0bqo2M\nlZ97ODey4tiM0MpCwErRKD3jkwlA2GbxoVgNAGAnP8iIEdm4H5CvNXnrMpNKiggF\nihZ2x10MbzoG/KXplLcK+PZNWBjMGUqg3nos0UkL5wcVhu6uOCmou8blA5/jIe/5\nv/z8WwBdAkx7GcAhpXIaYoOICgPA3pi0gEicVb/nUTv3EFQQ/wn9H6444d1oQthw\nK5gqAYpA1sR6rF2NBp7KNJ2Ewqq0vFwKXeD0cvQ+XdNM9Qn+2K0=\n=Kgyk\n-----END PGP SIGNATURE-----",
        "payload": "tree c221b4f1afcc5e796a97a5e49d3250f28e89a8e3\nparent 5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5\nauthor fanquake <fanquake@gmail.com> 1575413155 -0500\ncommitter fanquake <fanquake@gmail.com> 1575553275 -0500\n\nbuild: pass -dead_strip_dylibs to ld on macOS\n\nThis strips some unused dylibs from bitcoin-qt.\n\nFrom man ld:\nRemove dylibs that are unreachable by the entry point or exported symbols. \nThat is, suppresses the generation of load command commands for dylibs \nwhich supplied no symbols during the link. This option should not be \nused when linking against a dylib which is required at runtime for \nsome indirect reason such as the dylib has an important initializer.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba0cad2702e01860d3539f170343d8d9f9c5b75a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba0cad2702e01860d3539f170343d8d9f9c5b75a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba0cad2702e01860d3539f170343d8d9f9c5b75a/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e0bec0882e79a080f57e0bd4150e9ccc774be342",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0cad2702e01860d3539f170343d8d9f9c5b75a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0cad2702e01860d3539f170343d8d9f9c5b75a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ba0cad2702e01860d3539f170343d8d9f9c5b75a",
        "patch": "@@ -783,6 +783,7 @@ fi\n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])"
      }
    ]
  },
  {
    "sha": "2359a4790d93ffd17b8afc2fea3775dd858ef50d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMzU5YTQ3OTBkOTNmZmQxN2I4YWZjMmZlYTM3NzVkZDg1OGVmNTBk",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-05T13:42:03Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-05T14:07:03Z"
      },
      "message": "depends: don't use OpenGL in Qt on macOS",
      "tree": {
        "sha": "a0366297ab02e8593c821a0b496ef395c5d91b8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a0366297ab02e8593c821a0b496ef395c5d91b8f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2359a4790d93ffd17b8afc2fea3775dd858ef50d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3pDwcACgkQLuufXMCV\nJsG97w//XEGChYEvHK/fbGQ4rUKR3p9WD8yByRU9B0PS9FR6JL97wE9cwLTi/EuP\n1ABPtgBPKFY3PFakPa038owVuRZ2D6qi7ETEa6s2NhC2mB7lw1sy/RX0qS8Mzqbc\nJGdIiZ7cLqKXvkKvcPA20bJoF4PbtQ2sdMAE34fulCbXXGH/w9NcLYAhwi/2X3dh\nFDYOeBb6Ojwi3fKB/Wucrxz7/oGPyAgGgLrLINmbbXxV5RupsaMuIcSSDqw67l8w\n+aUY3tfqU7W0tBGiXjLv6JvOTYtJeyDb3eO5Dp2fFCpgbdOXa42Rz8cFH1SppqU8\nhAdz5iSPQAzvW58g0wLixpywx41GtsPMCDb/HUr8rj/WtipeYwrJ0lTWAGQAzdLQ\n149TH6HgFSxKGyjrAop0eNLtBh7J2WqblqVLCGMwzK8ydnjnTs4liKhSIE5Mc1oS\nvehiqUAL4k5EkTAxrdAtV6MyyN08UVgEyHbeAbMx3QA44uwZmMCce/ki2bJw0r7y\nQx4s/w4tL5hI5+BVIQ+pJvu3EdjhScGFw/YOtssGcg2NHTpVWSTTIfEGpC2zYNCz\nEdU3FG+AQdsATbzYNMQRHjwtjEfncvY5LmCyFdM26BrrUw6qTh5AsULvgX/BHlqu\n243V9xDpeVFbwIFeapirEnxp1zU0QsffHcLP58gjJmNsM7aw9Ks=\n=KEsu\n-----END PGP SIGNATURE-----",
        "payload": "tree a0366297ab02e8593c821a0b496ef395c5d91b8f\nparent ba0cad2702e01860d3539f170343d8d9f9c5b75a\nauthor fanquake <fanquake@gmail.com> 1575553323 -0500\ncommitter fanquake <fanquake@gmail.com> 1575554823 -0500\n\ndepends: don't use OpenGL in Qt on macOS\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2359a4790d93ffd17b8afc2fea3775dd858ef50d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2359a4790d93ffd17b8afc2fea3775dd858ef50d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2359a4790d93ffd17b8afc2fea3775dd858ef50d/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ba0cad2702e01860d3539f170343d8d9f9c5b75a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba0cad2702e01860d3539f170343d8d9f9c5b75a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ba0cad2702e01860d3539f170343d8d9f9c5b75a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f1d234ccf6dd8ebe626770da448f4f16e119bc01",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2359a4790d93ffd17b8afc2fea3775dd858ef50d/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2359a4790d93ffd17b8afc2fea3775dd858ef50d/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=2359a4790d93ffd17b8afc2fea3775dd858ef50d",
        "patch": "@@ -105,6 +105,7 @@ $(package)_config_opts += -no-feature-wizard\n $(package)_config_opts += -no-feature-xml\n \n $(package)_config_opts_darwin = -no-dbus\n+$(package)_config_opts_darwin += -no-opengl\n \n ifneq ($(build_os),darwin)\n $(package)_config_opts_darwin += -xplatform macx-clang-linux"
      }
    ]
  },
  {
    "sha": "6fff333c9f00cf379562ed38c2599997f9821cfb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZmZmMzMzYzlmMDBjZjM3OTU2MmVkMzhjMjU5OTk5N2Y5ODIxY2Zi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-05T14:14:24Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-05T14:14:42Z"
      },
      "message": "Merge #17507: random: mark RandAddPeriodic and SeedPeriodic as noexcept\n\n55b2cb199c276781b6daa5438af2da57dea3ac52 random: mark RandAddPeriodic and SeedPeriodic as noexcept (fanquake)\n461e547877da0c04db69e067c923cc4540aab03a doc: correct random.h docs after #17270 (fanquake)\n\nPull request description:\n\n  The usage of `MilliSleep()` in SeedPeriodic (previously SeedSleep) was\n  [removed](https://github.com/bitcoin/bitcoin/pull/17270/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a) in #17270, meaning it, and its users can now be marked `noexcept`.\n\n  This also corrects the docs in random.h for some of the changes in #17270.\n\nACKs for top commit:\n  practicalswift:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n  laanwj:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n  sipa:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n\nTree-SHA512: 672d369796e7c4f9b4d98dc545e5454999fa1bef373871994a26041d6163c58909e2255e4f820d3ef011679aa3392754eb57477306a89f5fd3d57e2bd7f0811a",
      "tree": {
        "sha": "6f15049cb00f89df5274f4bb012095e3d6c96b28",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6f15049cb00f89df5274f4bb012095e3d6c96b28"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6fff333c9f00cf379562ed38c2599997f9821cfb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3pENIACgkQHkrtYphs\n0l1ZBAf5AaGNnF6vq74Usi//d08rkOUP+QadEf8G+AOCY48dTzM7vUf1rbhSEyu4\nutoMG0C5hnhkHowyofqtEqA1mwY68UC4mngKbC/u88mQUr0Fonpfkied8x2Qrc/4\nDxU0rsF3PGIFoXRgPTMb2/WSLCLIydleOX/GMLSBSX4Cl2nNDczCR35UJfGeprDZ\nqsiWDBDde9YUG+7uXKVKbjFHncn4TT5j+tf/LToMfh1D8r8KXkbejR6V4u4L1h19\nN0QeCZaEKcotI2j2cq5D46opSzW248iF9e0JXzmpcvXvNj6Rata/J2ppVh8Qncez\npXDfbFNu8e942uZsGjdTbom44K12lQ==\n=ISbq\n-----END PGP SIGNATURE-----",
        "payload": "tree 6f15049cb00f89df5274f4bb012095e3d6c96b28\nparent 5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5\nparent 55b2cb199c276781b6daa5438af2da57dea3ac52\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575555264 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575555282 +0100\n\nMerge #17507: random: mark RandAddPeriodic and SeedPeriodic as noexcept\n\n55b2cb199c276781b6daa5438af2da57dea3ac52 random: mark RandAddPeriodic and SeedPeriodic as noexcept (fanquake)\n461e547877da0c04db69e067c923cc4540aab03a doc: correct random.h docs after #17270 (fanquake)\n\nPull request description:\n\n  The usage of `MilliSleep()` in SeedPeriodic (previously SeedSleep) was\n  [removed](https://github.com/bitcoin/bitcoin/pull/17270/commits/d61f2bb076d8f17840a8e79f1583d7f6e3e6d09a) in #17270, meaning it, and its users can now be marked `noexcept`.\n\n  This also corrects the docs in random.h for some of the changes in #17270.\n\nACKs for top commit:\n  practicalswift:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n  laanwj:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n  sipa:\n    ACK 55b2cb199c276781b6daa5438af2da57dea3ac52\n\nTree-SHA512: 672d369796e7c4f9b4d98dc545e5454999fa1bef373871994a26041d6163c58909e2255e4f820d3ef011679aa3392754eb57477306a89f5fd3d57e2bd7f0811a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fff333c9f00cf379562ed38c2599997f9821cfb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6fff333c9f00cf379562ed38c2599997f9821cfb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fff333c9f00cf379562ed38c2599997f9821cfb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aee0e2163cc02cdf1cd6bec69bfbb513bb302d5"
      },
      {
        "sha": "55b2cb199c276781b6daa5438af2da57dea3ac52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55b2cb199c276781b6daa5438af2da57dea3ac52",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55b2cb199c276781b6daa5438af2da57dea3ac52"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 12,
      "deletions": 22
    },
    "files": [
      {
        "sha": "fd1dfe506fe1a753c7f47eb8e98f5aa1585c8f4b",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 14,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fff333c9f00cf379562ed38c2599997f9821cfb/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fff333c9f00cf379562ed38c2599997f9821cfb/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=6fff333c9f00cf379562ed38c2599997f9821cfb",
        "patch": "@@ -179,7 +179,7 @@ static uint64_t GetRdSeed() noexcept\n /* Access to other hardware random number generators could be added here later,\n  * assuming it is sufficiently fast (in the order of a few hundred CPU cycles).\n  * Slower sources should probably be invoked separately, and/or only from\n- * RandAddSeedSleep (which is called during idle background operation).\n+ * RandAddPeriodic (which is called once a minute).\n  */\n static void InitHardwareRand() {}\n static void ReportHardwareRand() {}\n@@ -416,17 +416,7 @@ RNGState& GetRNGState() noexcept\n \n /* A note on the use of noexcept in the seeding functions below:\n  *\n- * None of the RNG code should ever throw any exception, with the sole exception\n- * of MilliSleep in SeedSleep, which can (and does) support interruptions which\n- * cause a boost::thread_interrupted to be thrown.\n- *\n- * This means that SeedSleep, and all functions that invoke it are throwing.\n- * However, we know that GetRandBytes() and GetStrongRandBytes() never trigger\n- * this sleeping logic, so they are noexcept. The same is true for all the\n- * GetRand*() functions that use GetRandBytes() indirectly.\n- *\n- * TODO: After moving away from interruptible boost-based thread management,\n- * everything can become noexcept here.\n+ * None of the RNG code should ever throw any exception.\n  */\n \n static void SeedTimestamp(CSHA512& hasher) noexcept\n@@ -498,7 +488,7 @@ static void SeedStrengthen(CSHA512& hasher, RNGState& rng, int microseconds) noe\n     Strengthen(strengthen_seed, microseconds, hasher);\n }\n \n-static void SeedPeriodic(CSHA512& hasher, RNGState& rng)\n+static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n {\n     // Everything that the 'fast' seeder includes\n     SeedFast(hasher);\n@@ -575,7 +565,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n \n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n-void RandAddPeriodic() { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n+void RandAddPeriodic() noexcept { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n \n void RandAddEvent(const uint32_t event_info) {\n     LOCK(events_mutex);"
      },
      {
        "sha": "82dd6ecf9f170e05f243c3850baccd5b2fcd4f8b",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6fff333c9f00cf379562ed38c2599997f9821cfb/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6fff333c9f00cf379562ed38c2599997f9821cfb/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=6fff333c9f00cf379562ed38c2599997f9821cfb",
        "patch": "@@ -40,17 +40,17 @@\n  *   These entropy sources are slower, but designed to make sure the RNG state contains\n  *   fresh data that is unpredictable to attackers.\n  *\n- * - RandAddSeedSleep() seeds everything that fast seeding includes, but additionally:\n- *   - A high-precision timestamp before and after sleeping 1ms.\n- *   - (On Windows) Once every 10 minutes, performance monitoring data from the OS.\n- -   - Once every minute, strengthen the entropy for 10 ms using repeated SHA512.\n- *   These just exploit the fact the system is idle to improve the quality of the RNG\n- *   slightly.\n+ * - RandAddPeriodic() seeds everything that fast seeding includes, but additionally:\n+ *   - A high-precision timestamp\n+ *   - Dynamic environment data (performance monitoring, ...)\n+ *   - Strengthen the entropy for 10 ms using repeated SHA512.\n+ *   This is run once every minute.\n  *\n  * On first use of the RNG (regardless of what function is called first), all entropy\n  * sources used in the 'slow' seeder are included, but also:\n  * - 256 bits from the hardware RNG (rdseed or rdrand) when available.\n- * - (On Windows) Performance monitoring data from the OS.\n+ * - Dynamic environment data (performance monitoring, ...)\n+ * - Static environment data\n  * - Strengthen the entropy for 100 ms using repeated SHA512.\n  *\n  * When mixing in new entropy, H = SHA512(entropy || old_rng_state) is computed, and\n@@ -87,7 +87,7 @@ void GetStrongRandBytes(unsigned char* buf, int num) noexcept;\n  *\n  * Thread-safe.\n  */\n-void RandAddPeriodic();\n+void RandAddPeriodic() noexcept;\n \n /**\n  * Gathers entropy from the low bits of the time at which events occur. Should"
      }
    ]
  },
  {
    "sha": "8bda0960f94dfb6462fc810cd61a8a065730eb79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YmRhMDk2MGY5NGRmYjY0NjJmYzgxMGNkNjFhOGEwNjU3MzBlYjc5",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-12-04T23:14:43Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-12-05T17:49:11Z"
      },
      "message": "Move events_hasher into RNGState()",
      "tree": {
        "sha": "00f0858e156cb12eb2ff90b15f8d5dc033a6aff3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/00f0858e156cb12eb2ff90b15f8d5dc033a6aff3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8bda0960f94dfb6462fc810cd61a8a065730eb79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bda0960f94dfb6462fc810cd61a8a065730eb79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8bda0960f94dfb6462fc810cd61a8a065730eb79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bda0960f94dfb6462fc810cd61a8a065730eb79/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fff333c9f00cf379562ed38c2599997f9821cfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fff333c9f00cf379562ed38c2599997f9821cfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fff333c9f00cf379562ed38c2599997f9821cfb"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 40,
      "deletions": 33
    },
    "files": [
      {
        "sha": "50b84777336607365caa9975f4230d4793a3520d",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 32,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bda0960f94dfb6462fc810cd61a8a065730eb79/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bda0960f94dfb6462fc810cd61a8a065730eb79/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=8bda0960f94dfb6462fc810cd61a8a065730eb79",
        "patch": "@@ -360,6 +360,9 @@ class RNGState {\n     uint64_t m_counter GUARDED_BY(m_mutex) = 0;\n     bool m_strongly_seeded GUARDED_BY(m_mutex) = false;\n \n+    Mutex m_events_mutex;\n+    CSHA256 m_events_hasher GUARDED_BY(m_events_mutex);\n+\n public:\n     RNGState() noexcept\n     {\n@@ -370,6 +373,35 @@ class RNGState {\n     {\n     }\n \n+    void AddEvent(uint32_t event_info) noexcept\n+    {\n+        LOCK(m_events_mutex);\n+\n+        m_events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n+        // Get the low four bytes of the performance counter. This translates to roughly the\n+        // subsecond part.\n+        uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n+        m_events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n+    }\n+\n+    /**\n+     * Feed (the hash of) all events added through AddEvent() to hasher.\n+     */\n+    void SeedEvents(CSHA512& hasher) noexcept\n+    {\n+        // We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n+        // since we want it to be fast as network peers may be able to trigger it repeatedly.\n+        LOCK(m_events_mutex);\n+\n+        unsigned char events_hash[32];\n+        m_events_hasher.Finalize(events_hash);\n+        hasher.Write(events_hash, 32);\n+\n+        // Re-initialize the hasher with the finalized state to use later.\n+        m_events_hasher.Reset();\n+        m_events_hasher.Write(events_hash, 32);\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n@@ -440,24 +472,7 @@ static void SeedFast(CSHA512& hasher) noexcept\n     SeedTimestamp(hasher);\n }\n \n-// We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n-// since we want it to be fast as network peers may be able to trigger it repeatedly.\n-static Mutex events_mutex;\n-static CSHA256 events_hasher;\n-static void SeedEvents(CSHA512& hasher)\n-{\n-    LOCK(events_mutex);\n-\n-    unsigned char events_hash[32];\n-    events_hasher.Finalize(events_hash);\n-    hasher.Write(events_hash, 32);\n-\n-    // Re-initialize the hasher with the finalized state to use later.\n-    events_hasher.Reset();\n-    events_hasher.Write(events_hash, 32);\n-}\n-\n-static void SeedSlow(CSHA512& hasher) noexcept\n+static void SeedSlow(CSHA512& hasher, RNGState& rng) noexcept\n {\n     unsigned char buffer[32];\n \n@@ -469,7 +484,7 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     hasher.Write(buffer, sizeof(buffer));\n \n     // Add the events hasher into the mix\n-    SeedEvents(hasher);\n+    rng.SeedEvents(hasher);\n \n     // High-precision timestamp.\n     //\n@@ -497,7 +512,7 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n     SeedTimestamp(hasher);\n \n     // Add the events hasher into the mix\n-    SeedEvents(hasher);\n+    rng.SeedEvents(hasher);\n \n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n@@ -514,7 +529,7 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     SeedHardwareSlow(hasher);\n \n     // Everything that the 'slow' seeder includes.\n-    SeedSlow(hasher);\n+    SeedSlow(hasher, rng);\n \n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n@@ -534,7 +549,7 @@ enum class RNGLevel {\n     PERIODIC, //!< Called by RandAddPeriodic()\n };\n \n-static void ProcRand(unsigned char* out, int num, RNGLevel level)\n+static void ProcRand(unsigned char* out, int num, RNGLevel level) noexcept\n {\n     // Make sure the RNG is initialized first (as all Seed* function possibly need hwrand to be available).\n     RNGState& rng = GetRNGState();\n@@ -547,7 +562,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n         SeedFast(hasher);\n         break;\n     case RNGLevel::SLOW:\n-        SeedSlow(hasher);\n+        SeedSlow(hasher, rng);\n         break;\n     case RNGLevel::PERIODIC:\n         SeedPeriodic(hasher, rng);\n@@ -566,15 +581,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n void RandAddPeriodic() noexcept { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n-\n-void RandAddEvent(const uint32_t event_info) {\n-    LOCK(events_mutex);\n-    events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n-    // Get the low four bytes of the performance counter. This translates to roughly the\n-    // subsecond part.\n-    uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n-    events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n-}\n+void RandAddEvent(const uint32_t event_info) noexcept { GetRNGState().AddEvent(event_info); }\n \n bool g_mock_deterministic_tests{false};\n "
      },
      {
        "sha": "e1b105168d5d76062bb70ffc6ba61bcb47db7074",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8bda0960f94dfb6462fc810cd61a8a065730eb79/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8bda0960f94dfb6462fc810cd61a8a065730eb79/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=8bda0960f94dfb6462fc810cd61a8a065730eb79",
        "patch": "@@ -95,7 +95,7 @@ void RandAddPeriodic() noexcept;\n  *\n  * Thread-safe.\n  */\n-void RandAddEvent(const uint32_t event_info);\n+void RandAddEvent(const uint32_t event_info) noexcept;\n \n /**\n  * Fast randomness source. This is seeded once with secure random data, but"
      }
    ]
  },
  {
    "sha": "910a4301b170680c8d14fd20101f067c2f52a0f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTBhNDMwMWIxNzA2ODBjOGQxNGZkMjAxMDFmMDY3YzJmNTJhMGY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:52:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:52:17Z"
      },
      "message": "Merge #17522: test: Wait until mempool is loaded in wallet_abandonconflict\n\ndddd09eb33d14fabda0aa40fa008b23b2bd6e589 test: Wait until mempool is loaded in wallet_abandonconflict (MarcoFalke)\n\nPull request description:\n\n  This might or might not fix intermittent issues such as https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/28724018#L4091\n\n  I believe the mempool was not loaded fully after the restart, in which case it was not dumped either on the next restart. Thus, the previous mempool was attempted to be loaded a second time, which succeeded and contained the txs.\n\nACKs for top commit:\n  laanwj:\n    ACK dddd09eb33d14fabda0aa40fa008b23b2bd6e589\n\nTree-SHA512: ab7061f946b5e5388f825dddceadb125f5197b24af3a7fcf1e700235d106a323419a56bfb4d84a2e27442e0de63e540c623b704343d83a98deaab3c02fcbdcbe",
      "tree": {
        "sha": "6664701b1726bb7a2593ebf966091883f0c75345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6664701b1726bb7a2593ebf966091883f0c75345"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/910a4301b170680c8d14fd20101f067c2f52a0f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgJ2gwAipVZSg+aOuQvNp3dYcE5V+TuTWxYqileIFwNKtP2dxUlmgqlDqCA4il5\nrHjIGXpR4KpeVvRtP8Cn99L1ZQW/6lRuyF5WnjOwUTPqxRDU6TB/2TIMnYWiZ8S9\niSATJD25/Idw5VLtHox73wg5J+hsph4Fp3oGZd8rhTpbdZRrtao+DXQvwCoITfj6\np5xK0t08P6FjtI46WrRk1jCxrl7iaFpEntMtyxXcQKqG0rL19CJtxRUKt7Wna2Rq\nFeRu9kYyfCXUH5CH4YkvuN5boFIzbu+BcCMTJ1Iy2egzmxLK+NO61tj6QVySqB7Z\npgQs5NPiOiE94KVpMWuLsa+1+PGW5UrN1DZQn2gGUm0S7QDUq7iByFEiYhtFVXb1\nTTaz7Hr9HMgDMC1ufiqa3I7TdpR/NRBv3H2wT+Qffh6VybL4zDAnNlsMQB794mt2\nC5lfY9/57QpYb7IL2B23fhjjYEOtBy/DavbCeRISnvhuk7n938IBcT8g0OBjibR5\nbxEOl0+w\n=x2Fa\n-----END PGP SIGNATURE-----",
        "payload": "tree 6664701b1726bb7a2593ebf966091883f0c75345\nparent 6fff333c9f00cf379562ed38c2599997f9821cfb\nparent dddd09eb33d14fabda0aa40fa008b23b2bd6e589\nauthor MarcoFalke <falke.marco@gmail.com> 1575579132 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575579137 -0500\n\nMerge #17522: test: Wait until mempool is loaded in wallet_abandonconflict\n\ndddd09eb33d14fabda0aa40fa008b23b2bd6e589 test: Wait until mempool is loaded in wallet_abandonconflict (MarcoFalke)\n\nPull request description:\n\n  This might or might not fix intermittent issues such as https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/28724018#L4091\n\n  I believe the mempool was not loaded fully after the restart, in which case it was not dumped either on the next restart. Thus, the previous mempool was attempted to be loaded a second time, which succeeded and contained the txs.\n\nACKs for top commit:\n  laanwj:\n    ACK dddd09eb33d14fabda0aa40fa008b23b2bd6e589\n\nTree-SHA512: ab7061f946b5e5388f825dddceadb125f5197b24af3a7fcf1e700235d106a323419a56bfb4d84a2e27442e0de63e540c623b704343d83a98deaab3c02fcbdcbe\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/910a4301b170680c8d14fd20101f067c2f52a0f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/910a4301b170680c8d14fd20101f067c2f52a0f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/910a4301b170680c8d14fd20101f067c2f52a0f9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6fff333c9f00cf379562ed38c2599997f9821cfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6fff333c9f00cf379562ed38c2599997f9821cfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6fff333c9f00cf379562ed38c2599997f9821cfb"
      },
      {
        "sha": "dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dddd09eb33d14fabda0aa40fa008b23b2bd6e589",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dddd09eb33d14fabda0aa40fa008b23b2bd6e589"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1122daaf837028c8c633164e52e5497fca600631",
        "filename": "test/functional/wallet_abandonconflict.py",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/910a4301b170680c8d14fd20101f067c2f52a0f9/test/functional/wallet_abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/910a4301b170680c8d14fd20101f067c2f52a0f9/test/functional/wallet_abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_abandonconflict.py?ref=910a4301b170680c8d14fd20101f067c2f52a0f9",
        "patch": "@@ -18,6 +18,7 @@\n     assert_raises_rpc_error,\n     connect_nodes,\n     disconnect_nodes,\n+    wait_until,\n )\n \n \n@@ -97,6 +98,7 @@ def run_test(self):\n         # TODO: redo with eviction\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.0001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n \n         # Verify txs no longer in either node's mempool\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n@@ -124,6 +126,8 @@ def run_test(self):\n         # Verify that even with a low min relay fee, the tx is not reaccepted from wallet on startup once abandoned\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.00001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n+\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n         assert_equal(self.nodes[0].getbalance(), balance)\n \n@@ -144,6 +148,7 @@ def run_test(self):\n         # Remove using high relay fee again\n         self.stop_node(0)\n         self.start_node(0, extra_args=[\"-minrelaytxfee=0.0001\"])\n+        wait_until(lambda: self.nodes[0].getmempoolinfo()['loaded'])\n         assert_equal(len(self.nodes[0].getrawmempool()), 0)\n         newbalance = self.nodes[0].getbalance()\n         assert_equal(newbalance, balance - Decimal(\"24.9996\"))"
      }
    ]
  },
  {
    "sha": "5d0b7f9e3d203522054b5ad31354332617a062b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDBiN2Y5ZTNkMjAzNTIyMDU0YjVhZDMxMzU0MzMyNjE3YTA2MmI4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:55:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:55:27Z"
      },
      "message": "Merge #17670: Move events_hasher into RNGState()\n\n8bda0960f94dfb6462fc810cd61a8a065730eb79 Move events_hasher into RNGState() (Pieter Wuille)\n\nPull request description:\n\n  This moves `events_hasher` and `events_mutex` into `RNGState()` in random.cpp. This guarantees (through the existing `GetRNGState()` function) that the mutex is always created before any events are added, even when that happens inside global initializers.\n\n  Fixes the issue reported here: https://github.com/bitcoin/bitcoin/pull/17573#issuecomment-561828251, and includes the annotation from #17666).\n\nACKs for top commit:\n  MarcoFalke:\n    re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79 \ud83e\udd48\n  sipsorcery:\n    re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79.\n\nTree-SHA512: 78702d668764df19e9d61d87d82eca71cceca87d5351b740e13e732a1c18a3d53d7fbaaf63245266da597370bfebec9fa6a4749c15ec5a78dcfe6122c33553ed",
      "tree": {
        "sha": "329281f2057b0105971d28393110da998a44b569",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/329281f2057b0105971d28393110da998a44b569"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d0b7f9e3d203522054b5ad31354332617a062b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhC+gv8CD67JYBz0aBbXAST08OrHw+q34ZmeSHa0Fj1T1V6Z/UXq81mZ9/AbONP\nwO8EgFTjTlMd+4R4ZC2NCn4E0DZVnmMiULHT3hNFRK5aRvfBFd6SBuaest1shGjX\nArGc+ixG4Pp0HVrOWcwFyIB60b1nQSxE3/VcD5cXq5IXyWHouYDq8f22qAWto0Y1\n9N0wo8WR+TlEhoGTt2c7sXnb2hx0C9729suT8DuxsI/FeCJwLSka3XWJ6Ug4KVoL\nObZKNKO+b6Dk1UZnPqabTeFo0Z4TDxxz+wRC5M9oK4CtBDIpJAfJUKwVIlJYW+lz\nC9w89y7s6Qb1tnvCv+GSWoIt5Q2BjNptHdbKhzsy5flWtxHtn2ko1MAnlm72F5IS\nFngmPWwVhSQ6ZvmA5gvAwgg7AubIP3cXueiyRsJDtGKx0zRJL2E8Swn82VgX6FKe\nLMKX5xu1A+RiecnwUAVg0RIihomItmwk3B1gpsYRPzwOHpIaTXPsJiVydquIWYcG\nlVmzRIeH\n=/HOr\n-----END PGP SIGNATURE-----",
        "payload": "tree 329281f2057b0105971d28393110da998a44b569\nparent 910a4301b170680c8d14fd20101f067c2f52a0f9\nparent 8bda0960f94dfb6462fc810cd61a8a065730eb79\nauthor MarcoFalke <falke.marco@gmail.com> 1575579322 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575579327 -0500\n\nMerge #17670: Move events_hasher into RNGState()\n\n8bda0960f94dfb6462fc810cd61a8a065730eb79 Move events_hasher into RNGState() (Pieter Wuille)\n\nPull request description:\n\n  This moves `events_hasher` and `events_mutex` into `RNGState()` in random.cpp. This guarantees (through the existing `GetRNGState()` function) that the mutex is always created before any events are added, even when that happens inside global initializers.\n\n  Fixes the issue reported here: https://github.com/bitcoin/bitcoin/pull/17573#issuecomment-561828251, and includes the annotation from #17666).\n\nACKs for top commit:\n  MarcoFalke:\n    re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79 \ud83e\udd48\n  sipsorcery:\n    re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79.\n\nTree-SHA512: 78702d668764df19e9d61d87d82eca71cceca87d5351b740e13e732a1c18a3d53d7fbaaf63245266da597370bfebec9fa6a4749c15ec5a78dcfe6122c33553ed\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d0b7f9e3d203522054b5ad31354332617a062b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d0b7f9e3d203522054b5ad31354332617a062b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d0b7f9e3d203522054b5ad31354332617a062b8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "910a4301b170680c8d14fd20101f067c2f52a0f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/910a4301b170680c8d14fd20101f067c2f52a0f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/910a4301b170680c8d14fd20101f067c2f52a0f9"
      },
      {
        "sha": "8bda0960f94dfb6462fc810cd61a8a065730eb79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8bda0960f94dfb6462fc810cd61a8a065730eb79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8bda0960f94dfb6462fc810cd61a8a065730eb79"
      }
    ],
    "stats": {
      "total": 73,
      "additions": 40,
      "deletions": 33
    },
    "files": [
      {
        "sha": "50b84777336607365caa9975f4230d4793a3520d",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 32,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d0b7f9e3d203522054b5ad31354332617a062b8/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d0b7f9e3d203522054b5ad31354332617a062b8/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=5d0b7f9e3d203522054b5ad31354332617a062b8",
        "patch": "@@ -360,6 +360,9 @@ class RNGState {\n     uint64_t m_counter GUARDED_BY(m_mutex) = 0;\n     bool m_strongly_seeded GUARDED_BY(m_mutex) = false;\n \n+    Mutex m_events_mutex;\n+    CSHA256 m_events_hasher GUARDED_BY(m_events_mutex);\n+\n public:\n     RNGState() noexcept\n     {\n@@ -370,6 +373,35 @@ class RNGState {\n     {\n     }\n \n+    void AddEvent(uint32_t event_info) noexcept\n+    {\n+        LOCK(m_events_mutex);\n+\n+        m_events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n+        // Get the low four bytes of the performance counter. This translates to roughly the\n+        // subsecond part.\n+        uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n+        m_events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n+    }\n+\n+    /**\n+     * Feed (the hash of) all events added through AddEvent() to hasher.\n+     */\n+    void SeedEvents(CSHA512& hasher) noexcept\n+    {\n+        // We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n+        // since we want it to be fast as network peers may be able to trigger it repeatedly.\n+        LOCK(m_events_mutex);\n+\n+        unsigned char events_hash[32];\n+        m_events_hasher.Finalize(events_hash);\n+        hasher.Write(events_hash, 32);\n+\n+        // Re-initialize the hasher with the finalized state to use later.\n+        m_events_hasher.Reset();\n+        m_events_hasher.Write(events_hash, 32);\n+    }\n+\n     /** Extract up to 32 bytes of entropy from the RNG state, mixing in new entropy from hasher.\n      *\n      * If this function has never been called with strong_seed = true, false is returned.\n@@ -440,24 +472,7 @@ static void SeedFast(CSHA512& hasher) noexcept\n     SeedTimestamp(hasher);\n }\n \n-// We use only SHA256 for the events hashing to get the ASM speedups we have for SHA256,\n-// since we want it to be fast as network peers may be able to trigger it repeatedly.\n-static Mutex events_mutex;\n-static CSHA256 events_hasher;\n-static void SeedEvents(CSHA512& hasher)\n-{\n-    LOCK(events_mutex);\n-\n-    unsigned char events_hash[32];\n-    events_hasher.Finalize(events_hash);\n-    hasher.Write(events_hash, 32);\n-\n-    // Re-initialize the hasher with the finalized state to use later.\n-    events_hasher.Reset();\n-    events_hasher.Write(events_hash, 32);\n-}\n-\n-static void SeedSlow(CSHA512& hasher) noexcept\n+static void SeedSlow(CSHA512& hasher, RNGState& rng) noexcept\n {\n     unsigned char buffer[32];\n \n@@ -469,7 +484,7 @@ static void SeedSlow(CSHA512& hasher) noexcept\n     hasher.Write(buffer, sizeof(buffer));\n \n     // Add the events hasher into the mix\n-    SeedEvents(hasher);\n+    rng.SeedEvents(hasher);\n \n     // High-precision timestamp.\n     //\n@@ -497,7 +512,7 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n     SeedTimestamp(hasher);\n \n     // Add the events hasher into the mix\n-    SeedEvents(hasher);\n+    rng.SeedEvents(hasher);\n \n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n@@ -514,7 +529,7 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n     SeedHardwareSlow(hasher);\n \n     // Everything that the 'slow' seeder includes.\n-    SeedSlow(hasher);\n+    SeedSlow(hasher, rng);\n \n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n@@ -534,7 +549,7 @@ enum class RNGLevel {\n     PERIODIC, //!< Called by RandAddPeriodic()\n };\n \n-static void ProcRand(unsigned char* out, int num, RNGLevel level)\n+static void ProcRand(unsigned char* out, int num, RNGLevel level) noexcept\n {\n     // Make sure the RNG is initialized first (as all Seed* function possibly need hwrand to be available).\n     RNGState& rng = GetRNGState();\n@@ -547,7 +562,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n         SeedFast(hasher);\n         break;\n     case RNGLevel::SLOW:\n-        SeedSlow(hasher);\n+        SeedSlow(hasher, rng);\n         break;\n     case RNGLevel::PERIODIC:\n         SeedPeriodic(hasher, rng);\n@@ -566,15 +581,7 @@ static void ProcRand(unsigned char* out, int num, RNGLevel level)\n void GetRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::FAST); }\n void GetStrongRandBytes(unsigned char* buf, int num) noexcept { ProcRand(buf, num, RNGLevel::SLOW); }\n void RandAddPeriodic() noexcept { ProcRand(nullptr, 0, RNGLevel::PERIODIC); }\n-\n-void RandAddEvent(const uint32_t event_info) {\n-    LOCK(events_mutex);\n-    events_hasher.Write((const unsigned char *)&event_info, sizeof(event_info));\n-    // Get the low four bytes of the performance counter. This translates to roughly the\n-    // subsecond part.\n-    uint32_t perfcounter = (GetPerformanceCounter() & 0xffffffff);\n-    events_hasher.Write((const unsigned char*)&perfcounter, sizeof(perfcounter));\n-}\n+void RandAddEvent(const uint32_t event_info) noexcept { GetRNGState().AddEvent(event_info); }\n \n bool g_mock_deterministic_tests{false};\n "
      },
      {
        "sha": "e1b105168d5d76062bb70ffc6ba61bcb47db7074",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d0b7f9e3d203522054b5ad31354332617a062b8/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d0b7f9e3d203522054b5ad31354332617a062b8/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=5d0b7f9e3d203522054b5ad31354332617a062b8",
        "patch": "@@ -95,7 +95,7 @@ void RandAddPeriodic() noexcept;\n  *\n  * Thread-safe.\n  */\n-void RandAddEvent(const uint32_t event_info);\n+void RandAddEvent(const uint32_t event_info) noexcept;\n \n /**\n  * Fast randomness source. This is seeded once with secure random data, but"
      }
    ]
  },
  {
    "sha": "cf43f3f0a8ffb9006c799004a441776c299174f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZjQzZjNmMGE4ZmZiOTAwNmM3OTkwMDRhNDQxNzc2YzI5OTE3NGY0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:56:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-05T20:56:14Z"
      },
      "message": "Merge #17674: tests: Add initialization order fiasco detection in Travis\n\n1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4 tests: Add initialization order fiasco detection in Travis (practicalswift)\n\nPull request description:\n\n  Add initialization order fiasco detection in Travis :)\n\n  Context: https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562035813\n\n  This would have caught the `events_hasher` initialization order issue introduced in #17573  and fixed in #17670.\n\n  Output in case of an initialization order fiasco:\n\n  ```\n  ==7934==ERROR: AddressSanitizer: initialization-order-fiasco on address 0x557098d79200 at pc 0x55709796b9a3 bp 0x7ffde524dc30 sp 0x7ffde524dc28\n  READ of size 8 at 0x557098d79200 thread T0\n      #0 0x55709796b9a2 in CSHA256::Finalize(unsigned char*) src/crypto/sha256.cpp:667:25\n      #1 0x5570978150e9 in SeedEvents(CSHA512&) src/random.cpp:462:19\n      #2 0x5570978145e1 in SeedSlow(CSHA512&) src/random.cpp:482:5\n      #3 0x5570978149a3 in SeedStartup(CSHA512&, (anonymous namespace)::RNGState&) src/random.cpp:527:5\n      #4 0x55709781102d in ProcRand(unsigned char*, int, RNGLevel) src/random.cpp:571:9\n      #5 0x557097810d19 in GetRandBytes(unsigned char*, int) src/random.cpp:576:59\n      #6 0x557096c2f9d5 in (anonymous namespace)::CSignatureCache::CSignatureCache() src/script/sigcache.cpp:34:9\n      #7 0x557096511977 in __cxx_global_var_init.7 src/script/sigcache.cpp:67:24\n      #8 0x5570965119f8 in _GLOBAL__sub_I_sigcache.cpp src/script/sigcache.cpp\n      #9 0x557097bba4ac in __libc_csu_init (src/bitcoind+0x18554ac)\n      #10 0x7f214b1c2b27 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:266\n      #11 0x5570965347d9 in _start (src/bitcoind+0x1cf7d9)\n\n  0x557098d79200 is located 96 bytes inside of global variable 'events_hasher' defined in 'random.cpp:456:16' (0x557098d791a0) of size 104\n    registered at:\n      #0 0x557096545dfd in __asan_register_globals compiler-rt/lib/asan/asan_globals.cpp:360:3\n      #1 0x557097817f8b in asan.module_ctor (src/bitcoind+0x14b2f8b)\n\n  SUMMARY: AddressSanitizer: initialization-order-fiasco src/crypto/sha256.cpp:667:25 in CSHA256::Finalize(unsigned char*)\n  ```\n\nACKs for top commit:\n  promag:\n    Tested ACK 1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4, got\n  MarcoFalke:\n    ACK 1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4 \ud83d\udc54\n\nTree-SHA512: f24ac0a313df7549193bd7f4fcfdf9b72bdfc6a6ee31d0b08e6d0752e5108fbd532106b6c86377ae0641258c9adb4921872e5d9a0154c0284e03315e0777102c",
      "tree": {
        "sha": "59327461d6767f401da29367a386c5f80397e13d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59327461d6767f401da29367a386c5f80397e13d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cf43f3f0a8ffb9006c799004a441776c299174f4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhhZwwAr1OG3Bavupsh2DM3GGAIqGpa5Wt6yUDE7lKM1MVkw4KA0hupb/Aer79M\nc4EX7Jcfd4CQF89yBbglexx+cXM9fy6ZmVFr2i/Dqm1SEBG43KW+6IFBpeE1DTi5\ntT/5SiHRVaVh7pXEh05DAa2Coj+Iy09gmUWKUAHA/c3kbUgy0cBdY1/x3akzJ6lS\n1icsOM4W6QukjjDDqIiCv5nCBfUdbbZmGgqkOyP6jlN2KUvBpV6DU7LFDLSmlOVP\ngve2qwWFEPCXRQMETe/mf3EtZEWQdQG2O1SroeUwvQDEr2oGbEnGdQvBfEv0vHrV\nTeDacxaZGRAvLLe783IezHuYt+b40qEFnucaa7Z6zNymDNyJaOiqFsR3qKV+UyZG\nsOPhkSMYMoVU1DSYd3brDAgXzjfAp9RMFpn9fixGkfK5vCWEc/Z3BeDBdm8b0DG4\nSBtdZeoLcaLb/OZxO3gR/htAMPSUwC3vxZscX+kkH8kLScv8uuzEm/f69MoQnjyR\nX4APM4Lj\n=xwlv\n-----END PGP SIGNATURE-----",
        "payload": "tree 59327461d6767f401da29367a386c5f80397e13d\nparent 5d0b7f9e3d203522054b5ad31354332617a062b8\nparent 1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4\nauthor MarcoFalke <falke.marco@gmail.com> 1575579372 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575579374 -0500\n\nMerge #17674: tests: Add initialization order fiasco detection in Travis\n\n1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4 tests: Add initialization order fiasco detection in Travis (practicalswift)\n\nPull request description:\n\n  Add initialization order fiasco detection in Travis :)\n\n  Context: https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562035813\n\n  This would have caught the `events_hasher` initialization order issue introduced in #17573  and fixed in #17670.\n\n  Output in case of an initialization order fiasco:\n\n  ```\n  ==7934==ERROR: AddressSanitizer: initialization-order-fiasco on address 0x557098d79200 at pc 0x55709796b9a3 bp 0x7ffde524dc30 sp 0x7ffde524dc28\n  READ of size 8 at 0x557098d79200 thread T0\n      #0 0x55709796b9a2 in CSHA256::Finalize(unsigned char*) src/crypto/sha256.cpp:667:25\n      #1 0x5570978150e9 in SeedEvents(CSHA512&) src/random.cpp:462:19\n      #2 0x5570978145e1 in SeedSlow(CSHA512&) src/random.cpp:482:5\n      #3 0x5570978149a3 in SeedStartup(CSHA512&, (anonymous namespace)::RNGState&) src/random.cpp:527:5\n      #4 0x55709781102d in ProcRand(unsigned char*, int, RNGLevel) src/random.cpp:571:9\n      #5 0x557097810d19 in GetRandBytes(unsigned char*, int) src/random.cpp:576:59\n      #6 0x557096c2f9d5 in (anonymous namespace)::CSignatureCache::CSignatureCache() src/script/sigcache.cpp:34:9\n      #7 0x557096511977 in __cxx_global_var_init.7 src/script/sigcache.cpp:67:24\n      #8 0x5570965119f8 in _GLOBAL__sub_I_sigcache.cpp src/script/sigcache.cpp\n      #9 0x557097bba4ac in __libc_csu_init (src/bitcoind+0x18554ac)\n      #10 0x7f214b1c2b27 in __libc_start_main /build/glibc-OTsEL5/glibc-2.27/csu/../csu/libc-start.c:266\n      #11 0x5570965347d9 in _start (src/bitcoind+0x1cf7d9)\n\n  0x557098d79200 is located 96 bytes inside of global variable 'events_hasher' defined in 'random.cpp:456:16' (0x557098d791a0) of size 104\n    registered at:\n      #0 0x557096545dfd in __asan_register_globals compiler-rt/lib/asan/asan_globals.cpp:360:3\n      #1 0x557097817f8b in asan.module_ctor (src/bitcoind+0x14b2f8b)\n\n  SUMMARY: AddressSanitizer: initialization-order-fiasco src/crypto/sha256.cpp:667:25 in CSHA256::Finalize(unsigned char*)\n  ```\n\nACKs for top commit:\n  promag:\n    Tested ACK 1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4, got\n  MarcoFalke:\n    ACK 1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4 \ud83d\udc54\n\nTree-SHA512: f24ac0a313df7549193bd7f4fcfdf9b72bdfc6a6ee31d0b08e6d0752e5108fbd532106b6c86377ae0641258c9adb4921872e5d9a0154c0284e03315e0777102c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf43f3f0a8ffb9006c799004a441776c299174f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cf43f3f0a8ffb9006c799004a441776c299174f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf43f3f0a8ffb9006c799004a441776c299174f4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d0b7f9e3d203522054b5ad31354332617a062b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d0b7f9e3d203522054b5ad31354332617a062b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d0b7f9e3d203522054b5ad31354332617a062b8"
      },
      {
        "sha": "1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f9d5af4f197e7cc0469a0bb25dcbc51dfa537f4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5aa788e07d9c212ebea31875bd96f06596ec9b65",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cf43f3f0a8ffb9006c799004a441776c299174f4/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cf43f3f0a8ffb9006c799004a441776c299174f4/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=cf43f3f0a8ffb9006c799004a441776c299174f4",
        "patch": "@@ -33,7 +33,7 @@ fi\n mkdir -p \"${BASE_SCRATCH_DIR}\"\n mkdir -p \"${CCACHE_DIR}\"\n \n-export ASAN_OPTIONS=\"detect_stack_use_after_return=1\"\n+export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\"\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\""
      }
    ]
  },
  {
    "sha": "c7c9c44278471228376ee29f2852dcfc6b58cb93",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjN2M5YzQ0Mjc4NDcxMjI4Mzc2ZWUyOWYyODUyZGNmYzZiNThjYjkz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T08:11:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T08:11:14Z"
      },
      "message": "Merge #17663: build: pass -dead_strip_dylibs to ld on macOS\n\nbd44711e1bb2eee7646f2f8e2e8763d1c216bdb9 build: pass -dead_strip_dylibs to ld on macOS (fanquake)\n\nPull request description:\n\n  This strips some unused dylibs from bitcoin-qt.\n\n  ```diff\n  otool -L src/qt/bitcoin-qt\n    /usr/lib/libSystem.B.dylib\n  - /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n  -/System/Library/Frameworks/Security.framework/Versions/A/Security\n    /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n  -/System/Library/Frameworks/AGL.framework/Versions/A/AGL\n    /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    /usr/lib/libc++.1.dylib\n    /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    /usr/lib/libobjc.A.dylib\n  ```\n\n  `AGL` - ObjC wrapper for OpenGL.\n  `DiskArbitration` - mount/unmount notifications and events.\n  `Security` - low level security operations, authentication services.\n\n  From `man ld`:\n  ```\n  Remove dylibs that are unreachable by the entry point or exported symbols.\n  That is, suppresses the generation of load command commands for dylibs\n  which supplied no symbols during the link. This option should not be\n  used when linking against a dylib which is required at runtime for\n  some indirect reason such as the dylib has an important initializer.\n  ```\n\nACKs for top commit:\n  theuni:\n    ACK bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9.\n\nTree-SHA512: 9592ce2966d28cb6c58e01efd401f56a4baa5dc5be5313f4fe8454632b578608be65a23c8602772049cd4655a9cb020fdd40d6622a244c301920d8c3db43f99a",
      "tree": {
        "sha": "4e782662ffded06d2d44704c0211ad74799901fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e782662ffded06d2d44704c0211ad74799901fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c7c9c44278471228376ee29f2852dcfc6b58cb93",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3qDSIACgkQHkrtYphs\n0l2C9wf/TdPqVJNKtl3//ZGxwV/qFUaROqMIh0xCia2+2c/92UybpqdTVT/6PAfd\nPCAHcGPDT4sWuC6p0tfWmpL/TxzYaA1kHGet7xv2p4OcyQaGvWx+8fs/LDaD58nQ\nA7Cf5gAFfJZ/OncirqXGvNH6jnQLMXVRTErtLbQcDAUkk+t5wJ6pXftvUJQMoOGW\ncSxJ3FWDyuXOqx7KX78NTNR4hRuoO85Z+vHZsz0cF9gHtmk7wxGwfy1wUNTW0po2\nOJfiap7NjZRiqsvtjIbjJfN2Uhi0vZ8DVIACGctlg2/58+dDPJgjkjxNzTdML8pR\n0wkhlaY3xBElgtFmnlJRhXU9Ug8PQA==\n=1MAO\n-----END PGP SIGNATURE-----",
        "payload": "tree 4e782662ffded06d2d44704c0211ad74799901fe\nparent cf43f3f0a8ffb9006c799004a441776c299174f4\nparent bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575619868 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575619874 +0100\n\nMerge #17663: build: pass -dead_strip_dylibs to ld on macOS\n\nbd44711e1bb2eee7646f2f8e2e8763d1c216bdb9 build: pass -dead_strip_dylibs to ld on macOS (fanquake)\n\nPull request description:\n\n  This strips some unused dylibs from bitcoin-qt.\n\n  ```diff\n  otool -L src/qt/bitcoin-qt\n    /usr/lib/libSystem.B.dylib\n  - /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n  -/System/Library/Frameworks/Security.framework/Versions/A/Security\n    /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n  -/System/Library/Frameworks/AGL.framework/Versions/A/AGL\n    /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    /usr/lib/libc++.1.dylib\n    /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    /usr/lib/libobjc.A.dylib\n  ```\n\n  `AGL` - ObjC wrapper for OpenGL.\n  `DiskArbitration` - mount/unmount notifications and events.\n  `Security` - low level security operations, authentication services.\n\n  From `man ld`:\n  ```\n  Remove dylibs that are unreachable by the entry point or exported symbols.\n  That is, suppresses the generation of load command commands for dylibs\n  which supplied no symbols during the link. This option should not be\n  used when linking against a dylib which is required at runtime for\n  some indirect reason such as the dylib has an important initializer.\n  ```\n\nACKs for top commit:\n  theuni:\n    ACK bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9.\n\nTree-SHA512: 9592ce2966d28cb6c58e01efd401f56a4baa5dc5be5313f4fe8454632b578608be65a23c8602772049cd4655a9cb020fdd40d6622a244c301920d8c3db43f99a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7c9c44278471228376ee29f2852dcfc6b58cb93",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c7c9c44278471228376ee29f2852dcfc6b58cb93",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7c9c44278471228376ee29f2852dcfc6b58cb93/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cf43f3f0a8ffb9006c799004a441776c299174f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cf43f3f0a8ffb9006c799004a441776c299174f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cf43f3f0a8ffb9006c799004a441776c299174f4"
      },
      {
        "sha": "bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bd44711e1bb2eee7646f2f8e2e8763d1c216bdb9"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e0bec0882e79a080f57e0bd4150e9ccc774be342",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c7c9c44278471228376ee29f2852dcfc6b58cb93/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c7c9c44278471228376ee29f2852dcfc6b58cb93/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=c7c9c44278471228376ee29f2852dcfc6b58cb93",
        "patch": "@@ -783,6 +783,7 @@ fi\n dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n if test x$TARGET_OS = xdarwin; then\n   AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n fi\n \n AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h sys/sysctl.h vm/vm_param.h sys/vmmeter.h sys/resources.h])"
      }
    ]
  },
  {
    "sha": "cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYjExMzI0YTYzZWYxMDQ3NWJmYzRkOGU0NTE0OGQ1YWU2ZjNlNzFl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T08:45:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-06T08:45:26Z"
      },
      "message": "Merge #17051: tests: Add deserialization fuzzing harnesses\n\n897849d8c225045f0dd3a2fe99b5d69bdf84b4e2 tests: Add deserialization fuzzing harnesses (practicalswift)\n16f0a186dcee563bb1000e1ffc51da87e7623bc6 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus (practicalswift)\n\nPull request description:\n\n  Add deserialization fuzzing harnesses.\n\n  **Testing this PR**\n\n  Run:\n\n  ```\n  $ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n  $ make\n  $ contrib/devtools/test_fuzzing_harnesses.sh 'addr_info|block_file_info|block_filter|block_header|ext_key|ext_pub_key|fee_rate|flat_file|key_origin|merkle_block|mutable_transaction|out_point|partial_merkle_tree|partially_signed_transaction|prefilled_transaction|psbt_input|psbt_output|pub_key|script_deserialize|sub_net|tx_in' 10\n  ```\n\n  `test_fuzzing_harnesses.sh` can be found in PR #17000.\n\nACKs for top commit:\n  laanwj:\n    thanks, ACK 897849d8c225045f0dd3a2fe99b5d69bdf84b4e2\n\nTree-SHA512: 5a270a3002cc23b725f7b35476a43777b2b00b4d089cc006372e2fcc7afa430afaa3c1430f778ae08fc53dd85a13e7bd2fab0449c319f676423226e189a417f6",
      "tree": {
        "sha": "114db5aa0e4c7b3703208c67d3347964634b063d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/114db5aa0e4c7b3703208c67d3347964634b063d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3qFSYACgkQHkrtYphs\n0l2SJgf/X0K/JwqeVPvnTvbGJYiMGR0Q9cErhXa46w9staBK4uXLEB79K+gakv0c\nOAtRx3i5gSaz0zIU1FGg1pgnfi7zFHSk0YiISqYMudetR1nxFuOtBGC1WnjXGZnF\np0ajNmkYhrCpEu/aJg6IGL/1slgoKbUrxxOyRz6pVEy0yBycS9kFBv0ORpl1pJ96\nHGF6OPVTY7YHzTh+B3ERoKZu58938robiBtId3vD+sB8kNhf6wXsqr7KVSbp1Kk4\n518XRAJhG80vXe25sjWR3/CZdS0Ej+jGd0xMwY6lKy7V1Iu4onFoxibDQgrRT8eX\nDJUQNIt2Vw7IAx0wypLzxA7v2U5eEQ==\n=T7/O\n-----END PGP SIGNATURE-----",
        "payload": "tree 114db5aa0e4c7b3703208c67d3347964634b063d\nparent c7c9c44278471228376ee29f2852dcfc6b58cb93\nparent 897849d8c225045f0dd3a2fe99b5d69bdf84b4e2\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575621919 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575621926 +0100\n\nMerge #17051: tests: Add deserialization fuzzing harnesses\n\n897849d8c225045f0dd3a2fe99b5d69bdf84b4e2 tests: Add deserialization fuzzing harnesses (practicalswift)\n16f0a186dcee563bb1000e1ffc51da87e7623bc6 tests: Add corpora suppression (FUZZERS_MISSING_CORPORA) for fuzzers missing in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus (practicalswift)\n\nPull request description:\n\n  Add deserialization fuzzing harnesses.\n\n  **Testing this PR**\n\n  Run:\n\n  ```\n  $ CC=clang CXX=clang++ ./configure --enable-fuzz --with-sanitizers=address,fuzzer,undefined\n  $ make\n  $ contrib/devtools/test_fuzzing_harnesses.sh 'addr_info|block_file_info|block_filter|block_header|ext_key|ext_pub_key|fee_rate|flat_file|key_origin|merkle_block|mutable_transaction|out_point|partial_merkle_tree|partially_signed_transaction|prefilled_transaction|psbt_input|psbt_output|pub_key|script_deserialize|sub_net|tx_in' 10\n  ```\n\n  `test_fuzzing_harnesses.sh` can be found in PR #17000.\n\nACKs for top commit:\n  laanwj:\n    thanks, ACK 897849d8c225045f0dd3a2fe99b5d69bdf84b4e2\n\nTree-SHA512: 5a270a3002cc23b725f7b35476a43777b2b00b4d089cc006372e2fcc7afa430afaa3c1430f778ae08fc53dd85a13e7bd2fab0449c319f676423226e189a417f6\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7c9c44278471228376ee29f2852dcfc6b58cb93",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7c9c44278471228376ee29f2852dcfc6b58cb93",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7c9c44278471228376ee29f2852dcfc6b58cb93"
      },
      {
        "sha": "897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/897849d8c225045f0dd3a2fe99b5d69bdf84b4e2"
      }
    ],
    "stats": {
      "total": 493,
      "additions": 385,
      "deletions": 108
    },
    "files": [
      {
        "sha": "6ae15cc553c97212710cbddd32de86679988d35f",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 126,
        "deletions": 0,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "patch": "@@ -4,11 +4,15 @@\n \n \n FUZZ_TARGETS = \\\n+  test/fuzz/addr_info_deserialize \\\n   test/fuzz/address_deserialize \\\n   test/fuzz/addrman_deserialize \\\n   test/fuzz/banentry_deserialize \\\n   test/fuzz/bech32 \\\n   test/fuzz/block_deserialize \\\n+  test/fuzz/block_file_info_deserialize \\\n+  test/fuzz/block_filter_deserialize \\\n+  test/fuzz/block_header_and_short_txids_deserialize \\\n   test/fuzz/blockheader_deserialize \\\n   test/fuzz/blocklocator_deserialize \\\n   test/fuzz/blockmerkleroot \\\n@@ -20,16 +24,30 @@ FUZZ_TARGETS = \\\n   test/fuzz/descriptor_parse \\\n   test/fuzz/diskblockindex_deserialize \\\n   test/fuzz/eval_script \\\n+  test/fuzz/fee_rate_deserialize \\\n+  test/fuzz/flat_file_pos_deserialize \\\n   test/fuzz/inv_deserialize \\\n+  test/fuzz/key_origin_info_deserialize \\\n+  test/fuzz/merkle_block_deserialize \\\n   test/fuzz/messageheader_deserialize \\\n   test/fuzz/netaddr_deserialize \\\n+  test/fuzz/out_point_deserialize \\\n   test/fuzz/parse_iso8601 \\\n+  test/fuzz/partial_merkle_tree_deserialize \\\n+  test/fuzz/partially_signed_transaction_deserialize \\\n+  test/fuzz/prefilled_transaction_deserialize \\\n   test/fuzz/psbt \\\n+  test/fuzz/psbt_input_deserialize \\\n+  test/fuzz/psbt_output_deserialize \\\n+  test/fuzz/pub_key_deserialize \\\n   test/fuzz/script \\\n+  test/fuzz/script_deserialize \\\n   test/fuzz/script_flags \\\n   test/fuzz/service_deserialize \\\n   test/fuzz/spanparsing \\\n+  test/fuzz/sub_net_deserialize \\\n   test/fuzz/transaction \\\n+  test/fuzz/tx_in_deserialize \\\n   test/fuzz/txoutcompressor_deserialize \\\n   test/fuzz/txundo_deserialize\n \n@@ -371,6 +389,114 @@ test_fuzz_transaction_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_transaction_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_transaction_LDADD = $(FUZZ_SUITE_LD_COMMON)\n \n+test_fuzz_addr_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_addr_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DADDR_INFO_DESERIALIZE=1\n+test_fuzz_addr_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_addr_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_addr_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_file_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_file_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILE_INFO_DESERIALIZE=1\n+test_fuzz_block_file_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_file_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_file_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_filter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_filter_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_FILTER_DESERIALIZE=1\n+test_fuzz_block_filter_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_filter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_filter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_block_header_and_short_txids_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_block_header_and_short_txids_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DBLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE=1\n+test_fuzz_block_header_and_short_txids_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_block_header_and_short_txids_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_block_header_and_short_txids_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_fee_rate_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n+test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_fee_rate_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_flat_file_pos_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_flat_file_pos_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFLAT_FILE_POS_DESERIALIZE=1\n+test_fuzz_flat_file_pos_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_flat_file_pos_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_flat_file_pos_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_key_origin_info_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_key_origin_info_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DKEY_ORIGIN_INFO_DESERIALIZE=1\n+test_fuzz_key_origin_info_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_key_origin_info_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_key_origin_info_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_merkle_block_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_merkle_block_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DMERKLE_BLOCK_DESERIALIZE=1\n+test_fuzz_merkle_block_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_merkle_block_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_merkle_block_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_out_point_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_out_point_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DOUT_POINT_DESERIALIZE=1\n+test_fuzz_out_point_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_out_point_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_out_point_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_partially_signed_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_partially_signed_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIALLY_SIGNED_TRANSACTION_DESERIALIZE=1\n+test_fuzz_partially_signed_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_partially_signed_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partially_signed_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_partial_merkle_tree_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_partial_merkle_tree_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPARTIAL_MERKLE_TREE_DESERIALIZE=1\n+test_fuzz_partial_merkle_tree_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_partial_merkle_tree_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_partial_merkle_tree_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_prefilled_transaction_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_prefilled_transaction_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPREFILLED_TRANSACTION_DESERIALIZE=1\n+test_fuzz_prefilled_transaction_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_prefilled_transaction_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_prefilled_transaction_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_psbt_input_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_psbt_input_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_INPUT_DESERIALIZE=1\n+test_fuzz_psbt_input_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_input_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_input_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_psbt_output_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_psbt_output_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPSBT_OUTPUT_DESERIALIZE=1\n+test_fuzz_psbt_output_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_psbt_output_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_psbt_output_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_pub_key_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_pub_key_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DPUB_KEY_DESERIALIZE=1\n+test_fuzz_pub_key_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_pub_key_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_pub_key_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_script_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_script_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSCRIPT_DESERIALIZE=1\n+test_fuzz_script_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_script_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_script_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_sub_net_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_sub_net_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DSUB_NET_DESERIALIZE=1\n+test_fuzz_sub_net_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_sub_net_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_sub_net_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n+test_fuzz_tx_in_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n+test_fuzz_tx_in_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DTX_IN_DESERIALIZE=1\n+test_fuzz_tx_in_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_tx_in_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_tx_in_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+\n endif # ENABLE_FUZZ\n \n nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)"
      },
      {
        "sha": "46bc38fdabac579152096261a6381ed51767f901",
        "filename": "src/test/fuzz/deserialize.cpp",
        "status": "modified",
        "additions": 216,
        "deletions": 102,
        "changes": 318,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/test/fuzz/deserialize.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/test/fuzz/deserialize.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/deserialize.cpp?ref=cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "patch": "@@ -5,18 +5,24 @@\n #include <addrdb.h>\n #include <addrman.h>\n #include <blockencodings.h>\n+#include <blockfilter.h>\n #include <chain.h>\n #include <coins.h>\n #include <compressor.h>\n #include <consensus/merkle.h>\n+#include <key.h>\n+#include <merkleblock.h>\n #include <net.h>\n #include <primitives/block.h>\n #include <protocol.h>\n+#include <psbt.h>\n #include <pubkey.h>\n+#include <script/keyorigin.h>\n #include <streams.h>\n #include <undo.h>\n #include <version.h>\n \n+#include <stdexcept>\n #include <stdint.h>\n #include <unistd.h>\n \n@@ -37,129 +43,237 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n-    } catch (const std::ios_base::failure& e) {\n+    } catch (const std::ios_base::failure&) {\n         return;\n     }\n \n-#if BLOCK_DESERIALIZE\n-            try\n-            {\n-                CBlock block;\n-                ds >> block;\n-            } catch (const std::ios_base::failure& e) {return;}\n+#if BLOCK_FILTER_DESERIALIZE\n+    try {\n+        BlockFilter block_filter;\n+        ds >> block_filter;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif ADDR_INFO_DESERIALIZE\n+    try {\n+        CAddrInfo addr_info;\n+        ds >> addr_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_FILE_INFO_DESERIALIZE\n+    try {\n+        CBlockFileInfo block_file_info;\n+        ds >> block_file_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_HEADER_AND_SHORT_TXIDS_DESERIALIZE\n+    try {\n+        CBlockHeaderAndShortTxIDs block_header_and_short_txids;\n+        ds >> block_header_and_short_txids;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif FEE_RATE_DESERIALIZE\n+    try {\n+        CFeeRate fee_rate;\n+        ds >> fee_rate;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif MERKLE_BLOCK_DESERIALIZE\n+    try {\n+        CMerkleBlock merkle_block;\n+        ds >> merkle_block;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif OUT_POINT_DESERIALIZE\n+    try {\n+        COutPoint out_point;\n+        ds >> out_point;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PARTIAL_MERKLE_TREE_DESERIALIZE\n+    try {\n+        CPartialMerkleTree partial_merkle_tree;\n+        ds >> partial_merkle_tree;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PUB_KEY_DESERIALIZE\n+    try {\n+        CPubKey pub_key;\n+        ds >> pub_key;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif SCRIPT_DESERIALIZE\n+    try {\n+        CScript script;\n+        ds >> script;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif SUB_NET_DESERIALIZE\n+    try {\n+        CSubNet sub_net;\n+        ds >> sub_net;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif TX_IN_DESERIALIZE\n+    try {\n+        CTxIn tx_in;\n+        ds >> tx_in;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif FLAT_FILE_POS_DESERIALIZE\n+    try {\n+        FlatFilePos flat_file_pos;\n+        ds >> flat_file_pos;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif KEY_ORIGIN_INFO_DESERIALIZE\n+    try {\n+        KeyOriginInfo key_origin_info;\n+        ds >> key_origin_info;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PARTIALLY_SIGNED_TRANSACTION_DESERIALIZE\n+    try {\n+        PartiallySignedTransaction partially_signed_transaction;\n+        ds >> partially_signed_transaction;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PREFILLED_TRANSACTION_DESERIALIZE\n+    try {\n+        PrefilledTransaction prefilled_transaction;\n+        ds >> prefilled_transaction;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PSBT_INPUT_DESERIALIZE\n+    try {\n+        PSBTInput psbt_input;\n+        ds >> psbt_input;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif PSBT_OUTPUT_DESERIALIZE\n+    try {\n+        PSBTOutput psbt_output;\n+        ds >> psbt_output;\n+    } catch (const std::ios_base::failure&) {\n+    }\n+#elif BLOCK_DESERIALIZE\n+    try {\n+        CBlock block;\n+        ds >> block;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKLOCATOR_DESERIALIZE\n-            try\n-            {\n-                CBlockLocator bl;\n-                ds >> bl;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockLocator bl;\n+        ds >> bl;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKMERKLEROOT\n-            try\n-            {\n-                CBlock block;\n-                ds >> block;\n-                bool mutated;\n-                BlockMerkleRoot(block, &mutated);\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlock block;\n+        ds >> block;\n+        bool mutated;\n+        BlockMerkleRoot(block, &mutated);\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif ADDRMAN_DESERIALIZE\n-            try\n-            {\n-                CAddrMan am;\n-                ds >> am;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CAddrMan am;\n+        ds >> am;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKHEADER_DESERIALIZE\n-            try\n-            {\n-                CBlockHeader bh;\n-                ds >> bh;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockHeader bh;\n+        ds >> bh;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BANENTRY_DESERIALIZE\n-            try\n-            {\n-                CBanEntry be;\n-                ds >> be;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBanEntry be;\n+        ds >> be;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif TXUNDO_DESERIALIZE\n-            try\n-            {\n-                CTxUndo tu;\n-                ds >> tu;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CTxUndo tu;\n+        ds >> tu;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKUNDO_DESERIALIZE\n-            try\n-            {\n-                CBlockUndo bu;\n-                ds >> bu;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBlockUndo bu;\n+        ds >> bu;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif COINS_DESERIALIZE\n-            try\n-            {\n-                Coin coin;\n-                ds >> coin;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        Coin coin;\n+        ds >> coin;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif NETADDR_DESERIALIZE\n-            try\n-            {\n-                CNetAddr na;\n-                ds >> na;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CNetAddr na;\n+        ds >> na;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif SERVICE_DESERIALIZE\n-            try\n-            {\n-                CService s;\n-                ds >> s;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CService s;\n+        ds >> s;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif MESSAGEHEADER_DESERIALIZE\n-            CMessageHeader::MessageStartChars pchMessageStart = {0x00, 0x00, 0x00, 0x00};\n-            try\n-            {\n-                CMessageHeader mh(pchMessageStart);\n-                ds >> mh;\n-                if (!mh.IsValid(pchMessageStart)) {return;}\n-            } catch (const std::ios_base::failure& e) {return;}\n+    CMessageHeader::MessageStartChars pchMessageStart = {0x00, 0x00, 0x00, 0x00};\n+    try {\n+        CMessageHeader mh(pchMessageStart);\n+        ds >> mh;\n+        (void)mh.IsValid(pchMessageStart);\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif ADDRESS_DESERIALIZE\n-            try\n-            {\n-                CAddress a;\n-                ds >> a;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CAddress a;\n+        ds >> a;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif INV_DESERIALIZE\n-            try\n-            {\n-                CInv i;\n-                ds >> i;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CInv i;\n+        ds >> i;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOOMFILTER_DESERIALIZE\n-            try\n-            {\n-                CBloomFilter bf;\n-                ds >> bf;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CBloomFilter bf;\n+        ds >> bf;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif DISKBLOCKINDEX_DESERIALIZE\n-            try\n-            {\n-                CDiskBlockIndex dbi;\n-                ds >> dbi;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        CDiskBlockIndex dbi;\n+        ds >> dbi;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif TXOUTCOMPRESSOR_DESERIALIZE\n-            CTxOut to;\n-            CTxOutCompressor toc(to);\n-            try\n-            {\n-                ds >> toc;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    CTxOut to;\n+    CTxOutCompressor toc(to);\n+    try {\n+        ds >> toc;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKTRANSACTIONS_DESERIALIZE\n-            try\n-            {\n-                BlockTransactions bt;\n-                ds >> bt;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        BlockTransactions bt;\n+        ds >> bt;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #elif BLOCKTRANSACTIONSREQUEST_DESERIALIZE\n-            try\n-            {\n-                BlockTransactionsRequest btr;\n-                ds >> btr;\n-            } catch (const std::ios_base::failure& e) {return;}\n+    try {\n+        BlockTransactionsRequest btr;\n+        ds >> btr;\n+    } catch (const std::ios_base::failure&) {\n+    }\n #else\n #error Need at least one fuzz target to compile\n #endif"
      },
      {
        "sha": "fefafda36bd78b66b9863397d009b0d2321f760f",
        "filename": "src/test/fuzz/transaction.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 5,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/test/fuzz/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/src/test/fuzz/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/transaction.cpp?ref=cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "patch": "@@ -26,19 +26,31 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n         int nVersion;\n         ds >> nVersion;\n         ds.SetVersion(nVersion);\n-    } catch (const std::ios_base::failure& e) {\n+    } catch (const std::ios_base::failure&) {\n         return;\n     }\n-    bool valid = true;\n+    bool valid_tx = true;\n     const CTransaction tx = [&] {\n         try {\n             return CTransaction(deserialize, ds);\n-        } catch (const std::ios_base::failure& e) {\n-            valid = false;\n+        } catch (const std::ios_base::failure&) {\n+            valid_tx = false;\n             return CTransaction();\n         }\n     }();\n-    if (!valid) {\n+    bool valid_mutable_tx = true;\n+    CDataStream ds_mtx(buffer, SER_NETWORK, INIT_PROTO_VERSION);\n+    CMutableTransaction mutable_tx;\n+    try {\n+        int nVersion;\n+        ds_mtx >> nVersion;\n+        ds_mtx.SetVersion(nVersion);\n+        ds_mtx >> mutable_tx;\n+    } catch (const std::ios_base::failure&) {\n+        valid_mutable_tx = false;\n+    }\n+    assert(valid_tx == valid_mutable_tx);\n+    if (!valid_tx) {\n         return;\n     }\n "
      },
      {
        "sha": "ffebb579e7fee6947260b4b728b7f753fd20c94d",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 26,
        "deletions": 1,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "patch": "@@ -12,6 +12,27 @@\n import subprocess\n import logging\n \n+# Fuzzers known to lack a seed corpus in https://github.com/bitcoin-core/qa-assets/tree/master/fuzz_seed_corpus\n+FUZZERS_MISSING_CORPORA = [\n+    \"addr_info_deserialize\",\n+    \"block_file_info_deserialize\",\n+    \"block_filter_deserialize\",\n+    \"block_header_and_short_txids_deserialize\",\n+    \"fee_rate_deserialize\",\n+    \"flat_file_pos_deserialize\",\n+    \"key_origin_info_deserialize\",\n+    \"merkle_block_deserialize\",\n+    \"out_point_deserialize\",\n+    \"partial_merkle_tree_deserialize\",\n+    \"partially_signed_transaction_deserialize\",\n+    \"prefilled_transaction_deserialize\",\n+    \"psbt_input_deserialize\",\n+    \"psbt_output_deserialize\",\n+    \"pub_key_deserialize\",\n+    \"script_deserialize\",\n+    \"sub_net_deserialize\",\n+    \"tx_in_deserialize\",\n+]\n \n def main():\n     parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)\n@@ -100,10 +121,14 @@ def main():\n \n def run_once(*, corpus, test_list, build_dir, export_coverage):\n     for t in test_list:\n+        corpus_path = os.path.join(corpus, t)\n+        if t in FUZZERS_MISSING_CORPORA:\n+            os.makedirs(corpus_path, exist_ok=True)\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n             '-runs=1',\n-            os.path.join(corpus, t),\n+            '-detect_leaks=0',\n+            corpus_path,\n         ]\n         logging.debug('Run {} with args {}'.format(t, args))\n         result = subprocess.run(args, stderr=subprocess.PIPE, universal_newlines=True)"
      }
    ]
  },
  {
    "sha": "6338c0203416a5f86e9422b6cd479da8af277f2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MzM4YzAyMDM0MTZhNWY4NmU5NDIyYjZjZDQ3OWRhOGFmMjc3ZjJm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-06T18:25:51Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-12-06T18:25:51Z"
      },
      "message": "tests: Fix fuzzing harness for descriptor parsing (descriptor_parse)",
      "tree": {
        "sha": "45e685bfbd4192d788fd6fecd67263b45604194b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/45e685bfbd4192d788fd6fecd67263b45604194b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6338c0203416a5f86e9422b6cd479da8af277f2f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6338c0203416a5f86e9422b6cd479da8af277f2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6338c0203416a5f86e9422b6cd479da8af277f2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6338c0203416a5f86e9422b6cd479da8af277f2f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "47d5038c26c166c20a1df5e5e0be3fcfdd1e0073",
        "filename": "src/test/fuzz/descriptor_parse.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6338c0203416a5f86e9422b6cd479da8af277f2f/src/test/fuzz/descriptor_parse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6338c0203416a5f86e9422b6cd479da8af277f2f/src/test/fuzz/descriptor_parse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/descriptor_parse.cpp?ref=6338c0203416a5f86e9422b6cd479da8af277f2f",
        "patch": "@@ -3,11 +3,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n+#include <pubkey.h>\n #include <script/descriptor.h>\n #include <test/fuzz/fuzz.h>\n+#include <util/memory.h>\n \n void initialize()\n {\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n "
      }
    ]
  },
  {
    "sha": "da1af855f9bfe19faaad63b731ed34484f16525e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTFhZjg1NWY5YmZlMTlmYWFhZDYzYjczMWVkMzQ0ODRmMTY1MjVl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-06T18:35:31Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-06T18:35:37Z"
      },
      "message": "Merge #17275: pubkey: Assert CPubKey's ECCVerifyHandle precondition\n\nd8daa8f3711909223b117b8faa82daca87fc942d pubkey: Assert CPubKey's ECCVerifyHandle precondition (practicalswift)\n\nPull request description:\n\n  Assert `CPubKey`'s `ECCVerifyHandle` precondition.\n\n  This makes it more clear for fuzzing harness writers and others that `ECCVerifyHandle` is expected to be held when interacting with `CPubKey`.\n\n  Related PR #17274.\n\nACKs for top commit:\n  sipa:\n    ACK d8daa8f3711909223b117b8faa82daca87fc942d\n\nTree-SHA512: 9e74086599799dc9b5c3fb8357445b662e5bf896d826af63d6d6b6ddb616612966f3bb5de3bd3ae0e692c47de85672f64b8ab6d3a1c45899dc25ba46990b5ec7",
      "tree": {
        "sha": "afa90ac27a851e4082f554aee7ed3403747347ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/afa90ac27a851e4082f554aee7ed3403747347ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da1af855f9bfe19faaad63b731ed34484f16525e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhJYwv8CKpR/vmCEiUWfj0ymLp8LjsEBMhAdUzYTNcS1uFio4FoFggWCT7hZ0ZO\n+K5K7EQePeZVSe+H1wzC8IzA54IqyB+f5uA3HGHLRHf15RE0hju29tLmneLwG80O\nSVVHacAI9lUsKcmzme+aojhwqCZWsdmkgmXsvKREuLxMCrOxQkXoVzq8ICCIdbzL\n28V1v/z1xnNBEI/AA6PrEWWA6oGQQsKuYt9Mviz3jkLMrz9slBIV2qbur41SqAhw\nARPrh1kOuKm8Mh8RaTolbpbpiPRYPea1DuiIlhbH7k2bjVcMofuiJilH6WTfNZrL\nGCgWS8IbMcsT2LyNX5JPMlx3OaQ/RViDuWq0GdrjHQCC0sMq1CJFu6bw/q9QqMI0\ns4nEeQZm54FhCrgHNRFWVw3lDgyZXJuda5jwFk4hgb4mroV9V3RFzWQCQqVjFnv8\nqPE22DCRhKT2vCkmKraoACThU0izaBUXhxkobMoHwoYMtKhsbJSdFFZyv0DVHHoD\n5TyzT7VG\n=dk/6\n-----END PGP SIGNATURE-----",
        "payload": "tree afa90ac27a851e4082f554aee7ed3403747347ad\nparent cb11324a63ef10475bfc4d8e45148d5ae6f3e71e\nparent d8daa8f3711909223b117b8faa82daca87fc942d\nauthor MarcoFalke <falke.marco@gmail.com> 1575657331 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575657337 -0500\n\nMerge #17275: pubkey: Assert CPubKey's ECCVerifyHandle precondition\n\nd8daa8f3711909223b117b8faa82daca87fc942d pubkey: Assert CPubKey's ECCVerifyHandle precondition (practicalswift)\n\nPull request description:\n\n  Assert `CPubKey`'s `ECCVerifyHandle` precondition.\n\n  This makes it more clear for fuzzing harness writers and others that `ECCVerifyHandle` is expected to be held when interacting with `CPubKey`.\n\n  Related PR #17274.\n\nACKs for top commit:\n  sipa:\n    ACK d8daa8f3711909223b117b8faa82daca87fc942d\n\nTree-SHA512: 9e74086599799dc9b5c3fb8357445b662e5bf896d826af63d6d6b6ddb616612966f3bb5de3bd3ae0e692c47de85672f64b8ab6d3a1c45899dc25ba46990b5ec7\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1af855f9bfe19faaad63b731ed34484f16525e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da1af855f9bfe19faaad63b731ed34484f16525e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1af855f9bfe19faaad63b731ed34484f16525e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb11324a63ef10475bfc4d8e45148d5ae6f3e71e"
      },
      {
        "sha": "d8daa8f3711909223b117b8faa82daca87fc942d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8daa8f3711909223b117b8faa82daca87fc942d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d8daa8f3711909223b117b8faa82daca87fc942d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "21e51a380d116efc97af4f8e6a24cc10f4a7255e",
        "filename": "src/pubkey.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da1af855f9bfe19faaad63b731ed34484f16525e/src/pubkey.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da1af855f9bfe19faaad63b731ed34484f16525e/src/pubkey.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pubkey.cpp?ref=da1af855f9bfe19faaad63b731ed34484f16525e",
        "patch": "@@ -171,6 +171,7 @@ bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchS\n         return false;\n     secp256k1_pubkey pubkey;\n     secp256k1_ecdsa_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -190,6 +191,7 @@ bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned cha\n     bool fComp = ((vchSig[0] - 27) & 4) != 0;\n     secp256k1_pubkey pubkey;\n     secp256k1_ecdsa_recoverable_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ecdsa_recoverable_signature_parse_compact(secp256k1_context_verify, &sig, &vchSig[1], recid)) {\n         return false;\n     }\n@@ -207,13 +209,15 @@ bool CPubKey::IsFullyValid() const {\n     if (!IsValid())\n         return false;\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     return secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size());\n }\n \n bool CPubKey::Decompress() {\n     if (!IsValid())\n         return false;\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -232,6 +236,7 @@ bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChi\n     BIP32Hash(cc, nChild, *begin(), begin()+1, out);\n     memcpy(ccChild.begin(), out+32, 32);\n     secp256k1_pubkey pubkey;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!secp256k1_ec_pubkey_parse(secp256k1_context_verify, &pubkey, vch, size())) {\n         return false;\n     }\n@@ -273,6 +278,7 @@ bool CExtPubKey::Derive(CExtPubKey &out, unsigned int _nChild) const {\n \n /* static */ bool CPubKey::CheckLowS(const std::vector<unsigned char>& vchSig) {\n     secp256k1_ecdsa_signature sig;\n+    assert(secp256k1_context_verify && \"secp256k1_context_verify must be initialized to use CPubKey.\");\n     if (!ecdsa_signature_parse_der_lax(secp256k1_context_verify, &sig, vchSig.data(), vchSig.size())) {\n         return false;\n     }"
      }
    ]
  },
  {
    "sha": "4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZWU4YTU4Y2U3N2ExZTAxM2FmOThjZWZmMWNmOTZiZDBlNGZkNDM2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-06T18:37:12Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2019-12-06T18:37:30Z"
      },
      "message": "Merge #17373: wallet: Various fixes and cleanup to keypool handling in LegacyScriptPubKeyMan and CWallet\n\n886f1731bec4393dd342403ac34069a3a4f95eea Key pool: Fix omitted pre-split count in GetKeyPoolSize (Andrew Chow)\n386a994b853bc5b3a2ed0d812673465b8ffa4849 Key pool: Change ReturnDestination interface to take address instead of key (Andrew Chow)\nba41aa4969169cd73d6b4f57444ed7d8d875de10 Key pool: Move LearnRelated and GetDestination calls (Andrew Chow)\n65833a74076cddf986037c6eb3b29a9b9dbe31c5 Add OutputType and CPubKey parameters to KeepDestination (Andrew Chow)\n9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7 Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper (Andrew Chow)\n596f6460f9fd8273665c8754ccd673d93a4f25f0 Key pool: Move CanGetAddresses call (Andrew Chow)\n\nPull request description:\n\n  * The `pwallet->CanGetAddresses()` call in `ReserveDestination::GetReservedDestination` to `LegacyScriptPubKeyMan::GetReservedDestination` so that the sanity check results in a failure when a `ScriptPubKeyMan` individually cannot get a destination, not when any of the `ScriptPubKeyMan`s can't.\n  * `ScriptPubKeyMan::GetReservedDestination` is changed to return the destination so that future `ScriptPubKeyMan`s can return destinations constructed in other ways. This is implemented for `LegacyScriptPubKeyMan` by moving key-to-destination code from `CWallet` to `LegacyScriptPubKeyMan`\n  * In order for `ScriptPubKeyMan` to be generic and work with future `ScriptPubKeyMan`s, `ScriptPubKeyMan::ReturnDestination` is changed to take a `CTxDestination` instead of a `CPubKey`. Since `LegacyScriptPubKeyMan` still deals with keys internally, a new map `m_reserved_key_to_index` is added in order to track the keypool indexes that have been reserved.\n  * A bug is fixed in how the total keypool size is calculated as it was omitting `set_pre_split_keypool` which is a bug.\n\n  Split from #17261\n\nACKs for top commit:\n  ryanofsky:\n    Code review ACK 886f1731bec4393dd342403ac34069a3a4f95eea. Only change is moving earlier fix to a better commit (same end result).\n  promag:\n    Code review ACK 886f1731bec4393dd342403ac34069a3a4f95eea.\n  instagibbs:\n    code review re-ACK https://github.com/bitcoin/bitcoin/pull/17373/commits/886f1731bec4393dd342403ac34069a3a4f95eea\n  Sjors:\n    Code review re-ACK 886f1731bec4393dd342403ac34069a3a4f95eea\n\nTree-SHA512: f4be290759f63fdc920d5c02bd0d09acc4b06a5f053787d4afcd3c921b2e35d2bd97617fadae015da853dc189f559fb8d2c6e58d53e4cabfac9af151cd97ad19",
      "tree": {
        "sha": "dc971de6ff0230826acc11559a1942f9c31de026",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dc971de6ff0230826acc11559a1942f9c31de026"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl3qn+oACgkQLuufXMCV\nJsG4Eg//TSaIBpvog5hEf51SWZFJ9d4v01MraLBLjTZSywSwSRWGJ7EQV+zLIcZv\nEv6HbFvv0N/Ul0lD5XyopuFwar3NyLEZ9HJ2R7mSsKZ0kuMhj2zDq8srrlz/jMTj\nTisD0fAvCbyvPu8HxRUrdqUVikgr2i8iyZlTbNZ7BHikACZKIt5L3OolP5uNM3Il\n59BVt6oe/2C4ORgv4IEhzZJ1RUAHnvqk0Yv5nY/AZzIhaaX4k6na1EO1gLcOsW7V\nUYcATCM9eEfTvKnwfyyVikUri9Cw1DlxQLd043tcMzHF55G/ees3eXApkyXHu6kT\nNN8oONLJMvilXmb+AcVM0n3PqAGald5YOdLtlIf/7NIKO0SfKpmWveZCNdQp0sNB\nCIkzG8STXhSSwLwMHnzmEQ8VM2ZGVuv23m+4can71wlktnMvZ+Rw0z2lBXcFCv+5\n9lxomPhKdZ5IYtOzNvOOy+TpSirprmTwzi1WcCwhXqVsb85TBzozqMFwJ4SLbGqm\neGkY5wkgYEyXwGSIBhHR4swbmSd1yTeKGscAGtsT47AJ1cygbrNdGORwuU6ZL7oL\nqpDY6yDFObC7hOb20Az2TdzmXrig+9xFkTrk5Vcrk0Ie6996dhdBGGW9HyZfH0Ev\nI57qkIB8rDAk7t4v0cqXzJHmPPNdIPZZFoB4M/01i7LdvfzT2yU=\n=OeQl\n-----END PGP SIGNATURE-----",
        "payload": "tree dc971de6ff0230826acc11559a1942f9c31de026\nparent da1af855f9bfe19faaad63b731ed34484f16525e\nparent 886f1731bec4393dd342403ac34069a3a4f95eea\nauthor fanquake <fanquake@gmail.com> 1575657432 -0500\ncommitter fanquake <fanquake@gmail.com> 1575657450 -0500\n\nMerge #17373: wallet: Various fixes and cleanup to keypool handling in LegacyScriptPubKeyMan and CWallet\n\n886f1731bec4393dd342403ac34069a3a4f95eea Key pool: Fix omitted pre-split count in GetKeyPoolSize (Andrew Chow)\n386a994b853bc5b3a2ed0d812673465b8ffa4849 Key pool: Change ReturnDestination interface to take address instead of key (Andrew Chow)\nba41aa4969169cd73d6b4f57444ed7d8d875de10 Key pool: Move LearnRelated and GetDestination calls (Andrew Chow)\n65833a74076cddf986037c6eb3b29a9b9dbe31c5 Add OutputType and CPubKey parameters to KeepDestination (Andrew Chow)\n9fcf8ce7ae02bf170b9bf0c2887fd709d752cbf7 Rename Keep/ReturnKey to Keep/ReturnDestination and remove the wrapper (Andrew Chow)\n596f6460f9fd8273665c8754ccd673d93a4f25f0 Key pool: Move CanGetAddresses call (Andrew Chow)\n\nPull request description:\n\n  * The `pwallet->CanGetAddresses()` call in `ReserveDestination::GetReservedDestination` to `LegacyScriptPubKeyMan::GetReservedDestination` so that the sanity check results in a failure when a `ScriptPubKeyMan` individually cannot get a destination, not when any of the `ScriptPubKeyMan`s can't.\n  * `ScriptPubKeyMan::GetReservedDestination` is changed to return the destination so that future `ScriptPubKeyMan`s can return destinations constructed in other ways. This is implemented for `LegacyScriptPubKeyMan` by moving key-to-destination code from `CWallet` to `LegacyScriptPubKeyMan`\n  * In order for `ScriptPubKeyMan` to be generic and work with future `ScriptPubKeyMan`s, `ScriptPubKeyMan::ReturnDestination` is changed to take a `CTxDestination` instead of a `CPubKey`. Since `LegacyScriptPubKeyMan` still deals with keys internally, a new map `m_reserved_key_to_index` is added in order to track the keypool indexes that have been reserved.\n  * A bug is fixed in how the total keypool size is calculated as it was omitting `set_pre_split_keypool` which is a bug.\n\n  Split from #17261\n\nACKs for top commit:\n  ryanofsky:\n    Code review ACK 886f1731bec4393dd342403ac34069a3a4f95eea. Only change is moving earlier fix to a better commit (same end result).\n  promag:\n    Code review ACK 886f1731bec4393dd342403ac34069a3a4f95eea.\n  instagibbs:\n    code review re-ACK https://github.com/bitcoin/bitcoin/pull/17373/commits/886f1731bec4393dd342403ac34069a3a4f95eea\n  Sjors:\n    Code review re-ACK 886f1731bec4393dd342403ac34069a3a4f95eea\n\nTree-SHA512: f4be290759f63fdc920d5c02bd0d09acc4b06a5f053787d4afcd3c921b2e35d2bd97617fadae015da853dc189f559fb8d2c6e58d53e4cabfac9af151cd97ad19\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da1af855f9bfe19faaad63b731ed34484f16525e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da1af855f9bfe19faaad63b731ed34484f16525e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da1af855f9bfe19faaad63b731ed34484f16525e"
      },
      {
        "sha": "886f1731bec4393dd342403ac34069a3a4f95eea",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/886f1731bec4393dd342403ac34069a3a4f95eea",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/886f1731bec4393dd342403ac34069a3a4f95eea"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 36,
      "deletions": 43
    },
    "files": [
      {
        "sha": "2b9e8fbf2aa7e2e2c0162e19dabae30e670d3294",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 18,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "patch": "@@ -18,7 +18,7 @@ bool LegacyScriptPubKeyMan::GetNewDestination(const OutputType type, CTxDestinat\n \n     // Generate a new key that is added to wallet\n     CPubKey new_key;\n-    if (!GetKeyFromPool(new_key)) {\n+    if (!GetKeyFromPool(new_key, type)) {\n         error = \"Error: Keypool ran out, please call keypoolrefill first\";\n         return false;\n     }\n@@ -262,24 +262,19 @@ bool LegacyScriptPubKeyMan::EncryptKeys(CKeyingMaterial& vMasterKeyIn)\n     return true;\n }\n \n-bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool)\n+bool LegacyScriptPubKeyMan::GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool)\n {\n+    if (!CanGetAddresses(internal)) {\n+        return false;\n+    }\n+\n     if (!ReserveKeyFromKeyPool(index, keypool, internal)) {\n         return false;\n     }\n+    address = GetDestinationForKey(keypool.vchPubKey, type);\n     return true;\n }\n \n-void LegacyScriptPubKeyMan::KeepDestination(int64_t index)\n-{\n-    KeepKey(index);\n-}\n-\n-void LegacyScriptPubKeyMan::ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey)\n-{\n-    ReturnKey(index, internal, pubkey);\n-}\n-\n void LegacyScriptPubKeyMan::MarkUnusedAddresses(const CScript& script)\n {\n     AssertLockHeld(cs_wallet);\n@@ -460,7 +455,7 @@ size_t LegacyScriptPubKeyMan::KeypoolCountExternalKeys()\n unsigned int LegacyScriptPubKeyMan::GetKeyPoolSize() const\n {\n     AssertLockHeld(cs_wallet);\n-    return setInternalKeyPool.size() + setExternalKeyPool.size();\n+    return setInternalKeyPool.size() + setExternalKeyPool.size() + set_pre_split_keypool.size();\n }\n \n int64_t LegacyScriptPubKeyMan::GetTimeFirstKey() const\n@@ -1092,15 +1087,20 @@ void LegacyScriptPubKeyMan::AddKeypoolPubkeyWithDB(const CPubKey& pubkey, const\n     m_pool_key_to_index[pubkey.GetID()] = index;\n }\n \n-void LegacyScriptPubKeyMan::KeepKey(int64_t nIndex)\n+void LegacyScriptPubKeyMan::KeepDestination(int64_t nIndex, const OutputType& type)\n {\n     // Remove from key pool\n     WalletBatch batch(m_storage.GetDatabase());\n     batch.ErasePool(nIndex);\n+    CPubKey pubkey;\n+    bool have_pk = GetPubKey(m_index_to_reserved_key.at(nIndex), pubkey);\n+    assert(have_pk);\n+    LearnRelatedScripts(pubkey, type);\n+    m_index_to_reserved_key.erase(nIndex);\n     WalletLogPrintf(\"keypool keep %d\\n\", nIndex);\n }\n \n-void LegacyScriptPubKeyMan::ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey)\n+void LegacyScriptPubKeyMan::ReturnDestination(int64_t nIndex, bool fInternal, const CTxDestination&)\n {\n     // Return to key pool\n     {\n@@ -1112,13 +1112,15 @@ void LegacyScriptPubKeyMan::ReturnKey(int64_t nIndex, bool fInternal, const CPub\n         } else {\n             setExternalKeyPool.insert(nIndex);\n         }\n-        m_pool_key_to_index[pubkey.GetID()] = nIndex;\n+        CKeyID& pubkey_id = m_index_to_reserved_key.at(nIndex);\n+        m_pool_key_to_index[pubkey_id] = nIndex;\n+        m_index_to_reserved_key.erase(nIndex);\n         NotifyCanGetAddressesChanged();\n     }\n     WalletLogPrintf(\"keypool return %d\\n\", nIndex);\n }\n \n-bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n+bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, const OutputType type, bool internal)\n {\n     if (!CanGetAddresses(internal)) {\n         return false;\n@@ -1134,7 +1136,7 @@ bool LegacyScriptPubKeyMan::GetKeyFromPool(CPubKey& result, bool internal)\n             result = GenerateNewKey(batch, internal);\n             return true;\n         }\n-        KeepKey(nIndex);\n+        KeepDestination(nIndex, type);\n         result = keypool.vchPubKey;\n     }\n     return true;\n@@ -1179,6 +1181,8 @@ bool LegacyScriptPubKeyMan::ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& key\n             throw std::runtime_error(std::string(__func__) + \": keypool entry invalid\");\n         }\n \n+        assert(m_index_to_reserved_key.count(nIndex) == 0);\n+        m_index_to_reserved_key[nIndex] = keypool.vchPubKey.GetID();\n         m_pool_key_to_index.erase(keypool.vchPubKey.GetID());\n         WalletLogPrintf(\"keypool reserve %d\\n\", nIndex);\n     }"
      },
      {
        "sha": "6ed9a4787ac88376cf49d896348c5a4060c30a5a",
        "filename": "src/wallet/scriptpubkeyman.h",
        "status": "modified",
        "additions": 9,
        "deletions": 10,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.h?ref=4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "patch": "@@ -150,9 +150,9 @@ class ScriptPubKeyMan\n     virtual bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) { return false; }\n     virtual isminetype IsMine(const CScript& script) const { return ISMINE_NO; }\n \n-    virtual bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) { return false; }\n-    virtual void KeepDestination(int64_t index) {}\n-    virtual void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) {}\n+    virtual bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) { return false; }\n+    virtual void KeepDestination(int64_t index, const OutputType& type) {}\n+    virtual void ReturnDestination(int64_t index, bool internal, const CTxDestination& addr) {}\n \n     virtual bool TopUp(unsigned int size = 0) { return false; }\n \n@@ -246,9 +246,11 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n     std::set<int64_t> set_pre_split_keypool GUARDED_BY(cs_wallet);\n     int64_t m_max_keypool_index GUARDED_BY(cs_wallet) = 0;\n     std::map<CKeyID, int64_t> m_pool_key_to_index;\n+    // Tracks keypool indexes to CKeyIDs of keys that have been taken out of the keypool but may be returned to it\n+    std::map<int64_t, CKeyID> m_index_to_reserved_key;\n \n     //! Fetches a key from the keypool\n-    bool GetKeyFromPool(CPubKey &key, bool internal = false);\n+    bool GetKeyFromPool(CPubKey &key, const OutputType type, bool internal = false);\n \n     /**\n      * Reserves a key from the keypool and sets nIndex to its index\n@@ -266,19 +268,16 @@ class LegacyScriptPubKeyMan : public ScriptPubKeyMan, public FillableSigningProv\n      */\n     bool ReserveKeyFromKeyPool(int64_t& nIndex, CKeyPool& keypool, bool fRequestedInternal);\n \n-    void KeepKey(int64_t nIndex);\n-    void ReturnKey(int64_t nIndex, bool fInternal, const CPubKey& pubkey);\n-\n public:\n     bool GetNewDestination(const OutputType type, CTxDestination& dest, std::string& error) override;\n     isminetype IsMine(const CScript& script) const override;\n \n     //! will encrypt previously unencrypted keys\n     bool EncryptKeys(CKeyingMaterial& vMasterKeyIn);\n \n-    bool GetReservedDestination(const OutputType type, bool internal, int64_t& index, CKeyPool& keypool) override;\n-    void KeepDestination(int64_t index) override;\n-    void ReturnDestination(int64_t index, bool internal, const CPubKey& pubkey) override;\n+    bool GetReservedDestination(const OutputType type, bool internal, CTxDestination& address, int64_t& index, CKeyPool& keypool) override;\n+    void KeepDestination(int64_t index, const OutputType& type) override;\n+    void ReturnDestination(int64_t index, bool internal, const CTxDestination&) override;\n \n     bool TopUp(unsigned int size = 0) override;\n "
      },
      {
        "sha": "abee497c1d713a0a493b09d5473053633905a92a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 12,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "patch": "@@ -3295,43 +3295,34 @@ bool ReserveDestination::GetReservedDestination(CTxDestination& dest, bool inter\n         return false;\n     }\n \n-    if (!pwallet->CanGetAddresses(internal)) {\n-        return false;\n-    }\n \n     if (nIndex == -1)\n     {\n         CKeyPool keypool;\n-        if (!m_spk_man->GetReservedDestination(type, internal, nIndex, keypool)) {\n+        if (!m_spk_man->GetReservedDestination(type, internal, address, nIndex, keypool)) {\n             return false;\n         }\n-        vchPubKey = keypool.vchPubKey;\n         fInternal = keypool.fInternal;\n     }\n-    assert(vchPubKey.IsValid());\n-    address = GetDestinationForKey(vchPubKey, type);\n     dest = address;\n     return true;\n }\n \n void ReserveDestination::KeepDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->KeepDestination(nIndex);\n-        m_spk_man->LearnRelatedScripts(vchPubKey, type);\n+        m_spk_man->KeepDestination(nIndex, type);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n \n void ReserveDestination::ReturnDestination()\n {\n     if (nIndex != -1) {\n-        m_spk_man->ReturnDestination(nIndex, fInternal, vchPubKey);\n+        m_spk_man->ReturnDestination(nIndex, fInternal, address);\n     }\n     nIndex = -1;\n-    vchPubKey = CPubKey();\n     address = CNoDestination();\n }\n "
      },
      {
        "sha": "b02e092f0abb607966573b30afeae867ba31fe67",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "patch": "@@ -139,12 +139,11 @@ class ReserveDestination\n protected:\n     //! The wallet to reserve from\n     CWallet* const pwallet;\n-    LegacyScriptPubKeyMan* m_spk_man{nullptr};\n+    //! The ScriptPubKeyMan to reserve from. Based on type when GetReservedDestination is called\n+    ScriptPubKeyMan* m_spk_man{nullptr};\n     OutputType const type;\n     //! The index of the address's key in the keypool\n     int64_t nIndex{-1};\n-    //! The public key for the address\n-    CPubKey vchPubKey;\n     //! The destination\n     CTxDestination address;\n     //! Whether this is from the internal (change output) keypool"
      }
    ]
  },
  {
    "sha": "7f3ae224685efaeb6fe714de90e8871d12e55f34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZjNhZTIyNDY4NWVmYWViNmZlNzE0ZGU5MGU4ODcxZDEyZTU1ZjM0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-11-29T19:46:49Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-12-06T19:44:35Z"
      },
      "message": "ci: Add CentOS 7 build",
      "tree": {
        "sha": "038ff0e8f33a0d9c59a66c009b4c1a12f95e6039",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/038ff0e8f33a0d9c59a66c009b4c1a12f95e6039"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7f3ae224685efaeb6fe714de90e8871d12e55f34",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3qr74ACgkQQQEIES5+\nqB8bmBAAoksSClzPldRb/pavw2lX1jbsJSy1UE2OVc284qSxDISK+PTbx230eCMR\npTShQoI7LMEdNOssQgRE4mGBXa5Ma37xfy7IOt4PDpBHU5kK2bYNzmjuIQzXgakZ\n86uch4prlAw8F/wHcgqvM9VuUDCRerrhEFOxZ7o8M0z7qbVqCKrzxuBzGTbXdHUK\nSSGt34mJi4oubfD1PCIo3R4xiylE2G8szC473GfPgR0ldlax56su4bBJVUdGbRwb\nAa4z4CMGwGY+NKJ7exgXUXlNjuNHn+/wb1nWDpKPgI5vdMlELTETcadIa9o7bxXE\nh+WmVh7whrP0hFcY3q9UxnsH5dn2yvZoBJ83CGu7Rza/bg7o/pBrD0rdc3DlE5wi\nbKgcJa3V6MFA6RgcQRj+maZS/iosj9+Pkd4EX7HqOTDlVqLQ1SoZwTVDA/JB2BgS\n/eqz5g/bTGur70M2gf0/6U8ycU2OjdNHDAG27bB/M7gUnOzqfea8+w0tFVG67b6Q\nybI8QUIq2TEGXamN4CL6VK09nD0Mn0LRNwOxXdH894JTteUW2nqZk4q9ORmUJpXV\nxROnvVAO8IegV7RgQaNYMsNjJcP17w/unuVozIJVkTei1dzqlHfGGjDwExkoUgIl\nMBEc4kLQAsuSoEgPKMmFbYIhOWB/eNmiGoKJpwUOiwcs2hiWCcM=\n=33IP\n-----END PGP SIGNATURE-----",
        "payload": "tree 038ff0e8f33a0d9c59a66c009b4c1a12f95e6039\nparent 35eda631ed3bd23d4a41761a85a96f925d4a6337\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575056809 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575661475 +0200\n\nci: Add CentOS 7 build\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f3ae224685efaeb6fe714de90e8871d12e55f34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7f3ae224685efaeb6fe714de90e8871d12e55f34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f3ae224685efaeb6fe714de90e8871d12e55f34/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35eda631ed3bd23d4a41761a85a96f925d4a6337",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35eda631ed3bd23d4a41761a85a96f925d4a6337"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 27,
      "deletions": 1
    },
    "files": [
      {
        "sha": "63b76605f6419136fa46d125d626907692a99750",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f3ae224685efaeb6fe714de90e8871d12e55f34/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f3ae224685efaeb6fe714de90e8871d12e55f34/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "patch": "@@ -118,6 +118,11 @@ jobs:\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n \n+    - stage: test\n+      name: 'x86_64 Linux  [GOAL: install]  [CentOS 7]  [no depends, only system libs]'\n+      env: >-\n+        FILE_ENV=\"./ci/test/00_setup_env_native_centos.sh\"\n+\n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n       env: >-"
      },
      {
        "sha": "56b915b6c7b366c8d9a3970d6ac510d9b7ae0af9",
        "filename": "ci/test/00_setup_env_native_centos.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/00_setup_env_native_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/00_setup_env_native_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_centos.sh?ref=7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ libtool make git python3 python36-zmq\"\n+export PACKAGES=\"boost-devel libevent-devel libdb4-devel libdb4-cxx-devel miniupnpc-devel zeromq-devel qt5-qtbase-devel qt5-qttools-devel qrencode-devel\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports\""
      },
      {
        "sha": "318ee94fde14d1c4a16715d458d66ec8d6a9647f",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "patch": "@@ -6,6 +6,10 @@\n \n export LC_ALL=C.UTF-8\n \n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+\n if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n   set +o errexit\n   pushd /usr/local/Homebrew || exit 1\n@@ -78,7 +82,10 @@ if [ -n \"$DPKG_ADD_ARCH\" ]; then\n   DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n fi\n \n-if [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n fi"
      }
    ]
  },
  {
    "sha": "711e0449cf4a0f15cabe0d64094e3add24ad44b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MTFlMDQ0OWNmNGEwZjE1Y2FiZTBkNjQwOTRlM2FkZDI0YWQ0NGIw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-12-06T19:52:02Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2019-12-06T19:54:37Z"
      },
      "message": "ci: Remove trusty build\n\nCo-authored-by: Emil Engler <me@emilengler.com>",
      "tree": {
        "sha": "2677b9e4ac595f8de758a2ae086bf9e2c84f0aad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2677b9e4ac595f8de758a2ae086bf9e2c84f0aad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/711e0449cf4a0f15cabe0d64094e3add24ad44b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl3qsiMACgkQQQEIES5+\nqB/Gkw//QB59xU0s7RPW4OgWT3y/3DfvJy25AAo2w06Cr1K3CNP7PQr5Qz4cRysi\ntCTi/XmPls5FiAaAAtqMGV7kV0CwOOmaZJOMTEyfN9/vo1NilrnbdSsRyzUVbakU\nqzcpwrEElzu4oU59QFJuYn8k5oHUOP5tVkRqehWKrR4SIkWmC549B2D9Mj5Ihd08\nxSGY0DWlMtr+hZjVhFI8LQc8EK4nw3B6zff+Rz7HnHszgiooumDed8Mz3cSWD0z5\nJ9ltuCfGSZzuYrbnIwpdObQTSDF3KHgglJa5klo2HyKatPewNeD8Jw8dXVUC90oa\nIM22db8jZmDhlC/BlikCWwivc33rTeQymR5oOU+Abh+nncyAV082Q9Abaijw9h3L\n/KCSlN6kqPU4tpHGt6Id8p3NXOPwx6FD6dELGJNg5xswM3PqobSUeXdeVKMHlUIp\nVnN38eefifmwvnMCUnb/AWDOPzXOOaUmB1K3cWnHWH5/kq8FJSxytjrE4l5332ei\nlru5WnMA7bRv4X+fOkf+EonVReUDmlPVO0SAGXz7e3gCQMu0aebnSvFShe83PlBZ\nWYVH8nAQchdjMps4nYE2h82UWgqaAuJmcPrSHoJnxMNzcuIgF1TPOXUjUfn1T+qn\nmZckO9peWB/6/A2t/vN1qxtMtSQk7CIyUcGcsV+uF0UI27jCnjc=\n=6uiI\n-----END PGP SIGNATURE-----",
        "payload": "tree 2677b9e4ac595f8de758a2ae086bf9e2c84f0aad\nparent 7f3ae224685efaeb6fe714de90e8871d12e55f34\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575661922 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1575662077 +0200\n\nci: Remove trusty build\n\nCo-authored-by: Emil Engler <me@emilengler.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/711e0449cf4a0f15cabe0d64094e3add24ad44b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/711e0449cf4a0f15cabe0d64094e3add24ad44b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/711e0449cf4a0f15cabe0d64094e3add24ad44b0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f3ae224685efaeb6fe714de90e8871d12e55f34"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 0,
      "deletions": 19
    },
    "files": [
      {
        "sha": "bfb4cb1d58639b452daf153d17db3714dbc8dad3",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/711e0449cf4a0f15cabe0d64094e3add24ad44b0/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/711e0449cf4a0f15cabe0d64094e3add24ad44b0/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=711e0449cf4a0f15cabe0d64094e3add24ad44b0",
        "patch": "@@ -128,11 +128,6 @@ jobs:\n       env: >-\n         FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n \n-    - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n-      env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_native_trusty.sh\"\n-\n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'\n       env: >-"
      },
      {
        "sha": "893c1f6b53c72a7f2ba9712d5e3c16fd6e8475b7",
        "filename": "ci/test/00_setup_env_native_trusty.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/00_setup_env_native_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7f3ae224685efaeb6fe714de90e8871d12e55f34/ci/test/00_setup_env_native_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_trusty.sh?ref=7f3ae224685efaeb6fe714de90e8871d12e55f34",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=ubuntu:14.04\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n-export NO_DEPENDS=1\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\""
      }
    ]
  },
  {
    "sha": "fc0da027e8cda1d7304e50315a848c353bae4822",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzBkYTAyN2U4Y2RhMWQ3MzA0ZTUwMzE1YTg0OGMzNTNiYWU0ODIy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-07T04:32:16Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-07T04:32:21Z"
      },
      "message": "Merge #17635: ci: Add CentOS 7 build\n\n711e0449cf4a0f15cabe0d64094e3add24ad44b0 ci: Remove trusty build (Hennadii Stepanov)\n7f3ae224685efaeb6fe714de90e8871d12e55f34 ci: Add CentOS 7 build (Hennadii Stepanov)\n\nPull request description:\n\n  Arguably, CentOS is the most conservative distro of all the popular ones. Thus, it could be a good way to check the Bitcoin Core compatibility with aged dependencies.\n\n  Currently, CentOS 7 has:\n  - Berkeley DB == 4.8.30\n  - Boost == 1.53.0\n  - GCC == 4.8.5\n  - libevent == 2.0.21 < minimum required [2.0.22](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md), but tests passed\n  - MiniUPnPc == 2.0\n  - Python == 3.6.8\n  - qrencode == 3.4.1\n  - Qt == 5.9.7\n  - ZeroMQ == 4.1.4\n\n  ~Please note that this PR is based on the bugfix #17634.~\n\n  Also trusty build has been removed for the following reasons:\n  - https://github.com/bitcoin/bitcoin/issues/17628#issuecomment-559448201:\n  > Maybe it'd make sense to replace Ubuntu Trusty with Centos 7 as the \"check ancient backward compatibililty\" Travis run. It's supported until 2024, apparently.\n\n  - https://github.com/bitcoin/bitcoin/pull/17635#discussion_r354811792:\n  > Our travis is currently running at its limit and this doesn't seem like it is adding a lot new coverage compared to the other builds.\n\n  Close #17628\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 711e0449cf4a0f15cabe0d64094e3add24ad44b0 \ud83d\udea0\n\nTree-SHA512: 614ec8394943f482a5867067f7119bffd052924a51e32ffda9a08e10c392c4a955a3539e2f8907cb65bfd9347dadf0ba62f6d1530bbc49927c347360a5a7f73c",
      "tree": {
        "sha": "a99971816597ed6f641e558a87b8b5c06c5a6bbd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a99971816597ed6f641e558a87b8b5c06c5a6bbd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc0da027e8cda1d7304e50315a848c353bae4822",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi9yQv/WyaK33kcY/Fo4+DVe7/x9XnGnRZ9f8R2Tlo7PhfQBimPMPZYoKR/DF8e\nvUe498KYLfkQqtY/w8+D0gzCf0WdlKM+HSJj5MSv8aLfCzfBYO/szT76VZIt3yaF\nSmD9cwrgdPzCKrkC03rCA/HOUReNOaeHYu+87K5S33GGJ+agOmVJWMv3t0aFULOJ\nyYlWhbsSgPA3dCi66QzCM1Z7deqTrRBUItDrur4xZaOziNjat6va+i0NXf5e/l5H\nyt2zmtEW90d49ePkTGARguAq0C4IbBSzL8PEU5pl3b9qSOrpTeqryPg+qpLHYyY9\nt60VGnk0RRmcUvu3uSr6lACuoJ/+rsuvORCllz9/KfgALlgssCcRB18jwLVPBuRH\nWh3ShnOB4fizK6gp/YGb3JO/bEtHpWDXV1xxQexxNYmI5BfqdsscId6N79niuXD4\nhZz6kpObldFNDQorrX90f5oHNTYYJctnMFz5Wm5XHtbaMNgSkeuB3RjDUlnCj9b9\nV10Xttvq\n=+vDO\n-----END PGP SIGNATURE-----",
        "payload": "tree a99971816597ed6f641e558a87b8b5c06c5a6bbd\nparent 4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436\nparent 711e0449cf4a0f15cabe0d64094e3add24ad44b0\nauthor MarcoFalke <falke.marco@gmail.com> 1575693136 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575693141 -0500\n\nMerge #17635: ci: Add CentOS 7 build\n\n711e0449cf4a0f15cabe0d64094e3add24ad44b0 ci: Remove trusty build (Hennadii Stepanov)\n7f3ae224685efaeb6fe714de90e8871d12e55f34 ci: Add CentOS 7 build (Hennadii Stepanov)\n\nPull request description:\n\n  Arguably, CentOS is the most conservative distro of all the popular ones. Thus, it could be a good way to check the Bitcoin Core compatibility with aged dependencies.\n\n  Currently, CentOS 7 has:\n  - Berkeley DB == 4.8.30\n  - Boost == 1.53.0\n  - GCC == 4.8.5\n  - libevent == 2.0.21 < minimum required [2.0.22](https://github.com/bitcoin/bitcoin/blob/master/doc/dependencies.md), but tests passed\n  - MiniUPnPc == 2.0\n  - Python == 3.6.8\n  - qrencode == 3.4.1\n  - Qt == 5.9.7\n  - ZeroMQ == 4.1.4\n\n  ~Please note that this PR is based on the bugfix #17634.~\n\n  Also trusty build has been removed for the following reasons:\n  - https://github.com/bitcoin/bitcoin/issues/17628#issuecomment-559448201:\n  > Maybe it'd make sense to replace Ubuntu Trusty with Centos 7 as the \"check ancient backward compatibililty\" Travis run. It's supported until 2024, apparently.\n\n  - https://github.com/bitcoin/bitcoin/pull/17635#discussion_r354811792:\n  > Our travis is currently running at its limit and this doesn't seem like it is adding a lot new coverage compared to the other builds.\n\n  Close #17628\n\nACKs for top commit:\n  MarcoFalke:\n    ACK 711e0449cf4a0f15cabe0d64094e3add24ad44b0 \ud83d\udea0\n\nTree-SHA512: 614ec8394943f482a5867067f7119bffd052924a51e32ffda9a08e10c392c4a955a3539e2f8907cb65bfd9347dadf0ba62f6d1530bbc49927c347360a5a7f73c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc0da027e8cda1d7304e50315a848c353bae4822",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc0da027e8cda1d7304e50315a848c353bae4822",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc0da027e8cda1d7304e50315a848c353bae4822/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436"
      },
      {
        "sha": "711e0449cf4a0f15cabe0d64094e3add24ad44b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/711e0449cf4a0f15cabe0d64094e3add24ad44b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/711e0449cf4a0f15cabe0d64094e3add24ad44b0"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 26,
      "deletions": 19
    },
    "files": [
      {
        "sha": "4f9dbeded42f50c8945a713c58cdeb9af48a2543",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc0da027e8cda1d7304e50315a848c353bae4822/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc0da027e8cda1d7304e50315a848c353bae4822/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=fc0da027e8cda1d7304e50315a848c353bae4822",
        "patch": "@@ -105,14 +105,14 @@ jobs:\n         FILE_ENV=\"./ci/test/00_setup_env_i686.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n+      name: 'x86_64 Linux  [GOAL: install]  [CentOS 7]  [no depends, only system libs]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_centos.sh\"\n \n     - stage: test\n-      name: 'x86_64 Linux  [GOAL: install]  [trusty]  [no functional tests, no depends, only system libs]'\n+      name: 'x86_64 Linux  [GOAL: install]  [bionic]  [uses qt5 dev package instead of depends Qt to speed up build and avoid timeout] [unsigned char]'\n       env: >-\n-        FILE_ENV=\"./ci/test/00_setup_env_native_trusty.sh\"\n+        FILE_ENV=\"./ci/test/00_setup_env_native_qt5.sh\"\n \n     - stage: test\n       name: 'x86_64 Linux  [GOAL: install]  [xenial]  [no depends, only system libs, sanitizers: thread (TSan), no wallet]'"
      },
      {
        "sha": "56b915b6c7b366c8d9a3970d6ac510d9b7ae0af9",
        "filename": "ci/test/00_setup_env_native_centos.sh",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc0da027e8cda1d7304e50315a848c353bae4822/ci/test/00_setup_env_native_centos.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc0da027e8cda1d7304e50315a848c353bae4822/ci/test/00_setup_env_native_centos.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_centos.sh?ref=fc0da027e8cda1d7304e50315a848c353bae4822",
        "patch": "@@ -0,0 +1,14 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright (c) 2019 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+export LC_ALL=C.UTF-8\n+\n+export DOCKER_NAME_TAG=centos:7\n+export DOCKER_PACKAGES=\"gcc-c++ libtool make git python3 python36-zmq\"\n+export PACKAGES=\"boost-devel libevent-devel libdb4-devel libdb4-cxx-devel miniupnpc-devel zeromq-devel qt5-qtbase-devel qt5-qttools-devel qrencode-devel\"\n+export NO_DEPENDS=1\n+export GOAL=\"install\"\n+export BITCOIN_CONFIG=\"--enable-reduce-exports\""
      },
      {
        "sha": "893c1f6b53c72a7f2ba9712d5e3c16fd6e8475b7",
        "filename": "ci/test/00_setup_env_native_trusty.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/ci/test/00_setup_env_native_trusty.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436/ci/test/00_setup_env_native_trusty.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_trusty.sh?ref=4ee8a58ce77a1e013af98ceff1cf96bd0e4fd436",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env bash\n-#\n-# Copyright (c) 2019 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-export LC_ALL=C.UTF-8\n-\n-export DOCKER_NAME_TAG=ubuntu:14.04\n-export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libicu-dev libpng-dev libevent-dev bsdmainutils libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev libdb5.1++-dev libzmq3-dev libqrencode-dev\"\n-export NO_DEPENDS=1\n-export RUN_FUNCTIONAL_TESTS=false\n-export GOAL=\"install\"\n-export BITCOIN_CONFIG=\"--enable-zmq --with-incompatible-bdb --with-gui=no\""
      },
      {
        "sha": "c72134525021f8a8b5216c75809c313f1494fe59",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc0da027e8cda1d7304e50315a848c353bae4822/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc0da027e8cda1d7304e50315a848c353bae4822/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=fc0da027e8cda1d7304e50315a848c353bae4822",
        "patch": "@@ -6,6 +6,10 @@\n \n export LC_ALL=C.UTF-8\n \n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  export LC_ALL=en_US.utf8\n+fi\n+\n if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n   set +o errexit\n   pushd /usr/local/Homebrew || exit 1\n@@ -82,7 +86,10 @@ if [ -n \"$DPKG_ADD_ARCH\" ]; then\n   DOCKER_EXEC dpkg --add-architecture \"$DPKG_ADD_ARCH\"\n fi\n \n-if [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n+if [[ $DOCKER_NAME_TAG == centos* ]]; then\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install epel-release\n+  ${CI_RETRY_EXE} DOCKER_EXEC yum -y install $DOCKER_PACKAGES $PACKAGES\n+elif [ \"$TRAVIS_OS_NAME\" != \"osx\" ]; then\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get update\n   ${CI_RETRY_EXE} DOCKER_EXEC apt-get install --no-install-recommends --no-upgrade -y $PACKAGES $DOCKER_PACKAGES\n fi"
      }
    ]
  },
  {
    "sha": "a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOGY1ZDVjNmI5ZmMyMjUwYjljMGQ4NTZjMDg4NWNlOGZlYzgzZGU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-07T10:46:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-07T10:46:36Z"
      },
      "message": "Merge #17658: depends: add ability to skip building qrencode\n\nc8becb82805ed1483e009eba682f19fe9e8b8c9c depends: add ability to skip building qrencode (fanquake)\n\nPull request description:\n\n  Similar to other depends packages, add the ability to skip building `qrencode` by passing `NO_QR=1`. Same as #16089.\n\nACKs for top commit:\n  promag:\n    ACK c8becb82805ed1483e009eba682f19fe9e8b8c9c.\n  hebasto:\n    ACK c8becb82805ed1483e009eba682f19fe9e8b8c9c, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: 86c7a87a31b1b2e65be2b79f533ce49f8b0074cf31331411cb3d32bb542d0b99e69605482ad75e4d1be5f2c8c613f17ba9ff17195a6b48f45365f5eb35df8bf9",
      "tree": {
        "sha": "a998004bcf30c1241a68c29b36b9d856d7835192",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a998004bcf30c1241a68c29b36b9d856d7835192"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3rgwwACgkQHkrtYphs\n0l13JAf/ZXECxlGxLFWBTdWAGlojX5GFBWr5AGwzsDX77vQ9EztQiBi2WzORGV6V\nyCrduxLXzINCxIHtdddR2gAHq83GMDZ7FqtpkT/fzlMxgh6qrxHBLs29LULYvV5G\ngdjedCXC4rcJBg2Ix7viFNVlUhoB+alV2lOeILrjyMsrMY+aSkNzpgGnIN5uss9y\n6qke1t4wsOmTlz3P6EioR2mjtP+0FBWngh+0lsW3rttlQDDNKTIBxseydcSrKFN9\n5WuIfn8RgUy3JqDIkCtgWIBY0EAhWNbulFsGEWe1rAnEzK5PpkYF3X+c8Qo7XcBf\nHCqkv3EQP7/blG39V/HLwdpQ4LsKBg==\n=IOCY\n-----END PGP SIGNATURE-----",
        "payload": "tree a998004bcf30c1241a68c29b36b9d856d7835192\nparent fc0da027e8cda1d7304e50315a848c353bae4822\nparent c8becb82805ed1483e009eba682f19fe9e8b8c9c\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575715583 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575715596 +0100\n\nMerge #17658: depends: add ability to skip building qrencode\n\nc8becb82805ed1483e009eba682f19fe9e8b8c9c depends: add ability to skip building qrencode (fanquake)\n\nPull request description:\n\n  Similar to other depends packages, add the ability to skip building `qrencode` by passing `NO_QR=1`. Same as #16089.\n\nACKs for top commit:\n  promag:\n    ACK c8becb82805ed1483e009eba682f19fe9e8b8c9c.\n  hebasto:\n    ACK c8becb82805ed1483e009eba682f19fe9e8b8c9c, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: 86c7a87a31b1b2e65be2b79f533ce49f8b0074cf31331411cb3d32bb542d0b99e69605482ad75e4d1be5f2c8c613f17ba9ff17195a6b48f45365f5eb35df8bf9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc0da027e8cda1d7304e50315a848c353bae4822",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc0da027e8cda1d7304e50315a848c353bae4822",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc0da027e8cda1d7304e50315a848c353bae4822"
      },
      {
        "sha": "c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8becb82805ed1483e009eba682f19fe9e8b8c9c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8becb82805ed1483e009eba682f19fe9e8b8c9c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 14,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8706e013f97dbe946e73e987f3909eddbce22b71",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "patch": "@@ -9,6 +9,7 @@ WORK_PATH = $(BASEDIR)/work\n BASE_CACHE ?= $(BASEDIR)/built\n SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n+NO_QR ?=\n RAPIDCHECK ?=\n NO_WALLET ?=\n NO_ZMQ ?=\n@@ -100,7 +101,10 @@ $(host_arch)_$(host_os)_id_string+=$(shell $(host_CXX) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_RANLIB) --version 2>/dev/null)\n $(host_arch)_$(host_os)_id_string+=$(shell $(host_STRIP) --version 2>/dev/null)\n \n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages)\n+qrencode_packages_$(NO_QR) = $(qrencode_packages)\n+\n+qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages) $(qt_$(host_arch)_$(host_os)_packages) $(qrencode_packages_)\n+\n wallet_packages_$(NO_WALLET) = $(wallet_packages)\n upnp_packages_$(NO_UPNP) = $(upnp_packages)\n zmq_packages_$(NO_ZMQ) = $(zmq_packages)\n@@ -154,6 +158,7 @@ $(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_\n             -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n             -e 's|@allow_host_packages@|$(ALLOW_HOST_PACKAGES)|' \\\n             -e 's|@no_qt@|$(NO_QT)|' \\\n+            -e 's|@no_qr@|$(NO_QR)|' \\\n             -e 's|@no_zmq@|$(NO_ZMQ)|' \\\n             -e 's|@no_wallet@|$(NO_WALLET)|' \\\n             -e 's|@no_upnp@|$(NO_UPNP)|' \\"
      },
      {
        "sha": "e382e8a2006e9954185eed3fb299079fee507197",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "patch": "@@ -76,6 +76,7 @@ The following can be set when running make: make FOO=bar\n     SDK_PATH: Path where sdk's can be found (used by macOS)\n     FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n     NO_QT: Don't download/build/cache qt and its dependencies\n+    NO_QR: Don't download/build/cache packages needed for enabling qrencode\n     NO_ZMQ: Don't download/build/cache packages needed for enabling zeromq\n     NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n     NO_UPNP: Don't download/build/cache packages needed for enabling upnp"
      },
      {
        "sha": "c5731e5269a7f87784e0e01fd893eaf5dc996bba",
        "filename": "depends/config.site.in",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "patch": "@@ -17,6 +17,10 @@ if test -z $with_qt_bindir && test -z \"@no_qt@\"; then\n   with_qt_bindir=$depends_prefix/native/bin\n fi\n \n+if test -z $with_qrencode && test -n \"@no_qr@\"; then\n+  with_qrencode=no\n+fi\n+\n if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n   enable_wallet=no\n fi"
      },
      {
        "sha": "d8ccb208ccd013e2f00eadb51be95ff0d86fcbc8",
        "filename": "depends/packages/packages.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "patch": "@@ -1,6 +1,8 @@\n packages:=boost libevent\n \n-qt_packages = qrencode zlib\n+qt_packages = zlib\n+\n+qrencode_packages = qrencode\n \n qt_linux_packages:=qt expat libxcb xcb_proto libXau xproto freetype fontconfig\n qt_android_packages=qt"
      }
    ]
  },
  {
    "sha": "5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjIyZDhmMzE1NmEyOTNlNjFkMDk2NGMzM2Q0YjIxZDhjOWZkNWUw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-07T14:56:07Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-07T14:56:10Z"
      },
      "message": "Merge #17671: script: fixed wget call in gitian-build.py\n\nb11d35b5e2dd09ab816d688d8ac0264b43f7f844 Fixed wget call in gitian-build.py (willyk)\n\nPull request description:\n\n  Missing comma makes the gitian-builder script to download osslsigncode-2.0.tar.gz as osslsigncode-2.0.tar.gz-N,  which makes the subsequent calls fail when building window binaries\n\nACKs for top commit:\n  laanwj:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844\n  promag:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844.\n  hebasto:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: a74f6bec9e405fe57c2e53cc4ea0cb3546521b295478d02ae81a36306262e349e14395e46fd8106e72cc6a5bb80a88c8eff1ea38816af49c8b169c5715e84b0d",
      "tree": {
        "sha": "dffcfb816780bab49bd99dbe361793bb1505cedb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dffcfb816780bab49bd99dbe361793bb1505cedb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgWzwv+J00Tao5XTM3XLAuDcMNRUK7IH2ohJ2pU9Z39mXlMDfCr4pwQDJtwuHtp\nXtnSJrAPC4g//l7h7UVRVRa19Iub5PPxhYjX4ASObPIv+drqKl4UBN5f4W+ozeCU\nfiSw3d/62Lu79KVw/hO/KbsA5AAdUZiYf9hLyRoGntFl0Peq3XxAYE5f7caZ2gvZ\nf+IM3ZpH9r5oasgmgLrdZ8GJQpN1DAq+78KZqBM206HBajUsQXPnR44qouj0XQsx\nYQ55GOGIL/6k+forOCelr1Cfw9tRVSasPPVwq6ctwJll01nqMs3CzkWlw4kc/rm/\nttkhSzdmf+0JgWJFd63rb7YU/B9ySr2dxO+QWkaYzSgiPBd5hSzZa864YlpIlTWa\nFYwwUmU3U69YH4bxVKm18SrLehqHIEmo0TJLOSFg/MryOCSVE6VyxYY7dwhrXao4\nTCMrPkXp+SVTZQ8Vfw7Oi+/ngRj0mDS5GMWlKSPBgrkkWRNJCSihcDl1ZpzC89rP\nRdJeGWZk\n=lX9F\n-----END PGP SIGNATURE-----",
        "payload": "tree dffcfb816780bab49bd99dbe361793bb1505cedb\nparent a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8\nparent b11d35b5e2dd09ab816d688d8ac0264b43f7f844\nauthor MarcoFalke <falke.marco@gmail.com> 1575730567 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575730570 -0500\n\nMerge #17671: script: fixed wget call in gitian-build.py\n\nb11d35b5e2dd09ab816d688d8ac0264b43f7f844 Fixed wget call in gitian-build.py (willyk)\n\nPull request description:\n\n  Missing comma makes the gitian-builder script to download osslsigncode-2.0.tar.gz as osslsigncode-2.0.tar.gz-N,  which makes the subsequent calls fail when building window binaries\n\nACKs for top commit:\n  laanwj:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844\n  promag:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844.\n  hebasto:\n    ACK b11d35b5e2dd09ab816d688d8ac0264b43f7f844, I have reviewed the code and it looks OK, I agree it can be merged.\n\nTree-SHA512: a74f6bec9e405fe57c2e53cc4ea0cb3546521b295478d02ae81a36306262e349e14395e46fd8106e72cc6a5bb80a88c8eff1ea38816af49c8b169c5715e84b0d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a8f5d5c6b9fc2250b9c0d856c0885ce8fec83de8"
      },
      {
        "sha": "b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b11d35b5e2dd09ab816d688d8ac0264b43f7f844",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b11d35b5e2dd09ab816d688d8ac0264b43f7f844"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e38fa6fcb01271feb77e8af263f54e9ffc375f6c",
        "filename": "contrib/gitian-build.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0/contrib/gitian-build.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0/contrib/gitian-build.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.py?ref=5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
        "patch": "@@ -51,7 +51,7 @@ def build():\n     os.chdir('gitian-builder')\n     os.makedirs('inputs', exist_ok=True)\n \n-    subprocess.check_call(['wget', '-O' 'osslsigncode-2.0.tar.gz' '-N', '-P', 'inputs', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n+    subprocess.check_call(['wget', '-O', 'inputs/osslsigncode-2.0.tar.gz', 'https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz'])\n     subprocess.check_call([\"echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\"], shell=True)\n     subprocess.check_call(['make', '-C', '../bitcoin/depends', 'download', 'SOURCES_PATH=' + os.getcwd() + '/cache/common'])\n "
      },
      {
        "sha": "36d79a0c34dec300a9c65ef85407d7c762296ffb",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
        "patch": "@@ -116,7 +116,7 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -O osslsigncode-2.0.tar.gz -P inputs https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n+    wget -O inputs/osslsigncode-2.0.tar.gz https://github.com/mtrojnar/osslsigncode/archive/2.0.tar.gz\n     echo '5a60e0a4b3e0b4d655317b2f12a810211c50242138322b16e7e01c6fbb89d92f inputs/osslsigncode-2.0.tar.gz' | sha256sum -c\n     popd\n "
      }
    ]
  },
  {
    "sha": "bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYjAzNzY1ZTJkNTU0ZGE5ZGFkNWI5YjMxNDg0NGEyZWNiNWM2MmUy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-08T18:17:21Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-08T18:17:23Z"
      },
      "message": "Merge #17685: tests: Fix bug in the descriptor parsing fuzzing harness (descriptor_parse)\n\n6338c0203416a5f86e9422b6cd479da8af277f2f tests: Fix fuzzing harness for descriptor parsing (descriptor_parse) (practicalswift)\n\nPull request description:\n\n  Fix bug in the descriptor parsing fuzzing harness (`descriptor_parse`) by making sure `secp256k1_context_verify` is properly initialized (via `ECCVerifyHandle`).\n\n  Background:\n\n  When fuzzing `Parse(\u2026)` with `libFuzzer` I eventually reached the test case `combo(020000000000000000000000000000000000000000000000000000000000000000)`. That input triggers a call to `CPubKey::IsFullyValid()` which in turns requires an initialized `secp256k1_context_verify`.\n\n  The fuzzing harness did not fulfil that pre-condition prior to this commit (sorry, my fault!) :)\n\n  Before:\n\n  ```\n  $ mkdir descriptors/\n  $ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\n  $ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\n  \u2026\n  pubkey.cpp:210:38: runtime error: null pointer passed as argument 1, which is declared to never be null\n  secp256k1/include/secp256k1.h:305:3: note: nonnull attribute specified here\n      #0 0x561c032ccf25 in CPubKey::IsFullyValid() const src/pubkey.cpp:210:12\n      #1 0x561c022139c3 in (anonymous namespace)::ParsePubkeyInner(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:674:24\n      #2 0x561c02207680 in (anonymous namespace)::ParsePubkey(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:730:42\n      #3 0x561c0220080e in (anonymous namespace)::ParseScript(Span<char const>&, (anonymous namespace)::ParseScriptContext, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:774:23\n      #4 0x561c021ffb07 in Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool) src/script/descriptor.cpp:994:16\n      #5 0x561c0218d5d4 in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/test/fuzz/descriptor_parse.cpp:20:9\n  \u2026\n  $\n  ```\n\n  After:\n\n  ```\n  $ mkdir descriptors/\n  $ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\n  $ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\n  \u2026\n  Done 2 runs in 0 second(s)\n  $\n  ```\n\nACKs for top commit:\n  paymog:\n    ACK 6338c0203416a5f86e9422b6cd479da8af277f2f\n  MarcoFalke:\n    ACK 6338c0203416a5f86e9422b6cd479da8af277f2f \ud83d\udd4a\n\nTree-SHA512: bf24c404e1f64183761b057d2f210c3db85277f4415122977c315d7d6835acb5e897b5d64032615e9e44ad4a16dfe857e94481f6e4b57b6dfa8cb37adb2528a5",
      "tree": {
        "sha": "73efdde76e0988dc68a71787be4d0073697b6c61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/73efdde76e0988dc68a71787be4d0073697b6c61"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhElQwAwU9ijR1Qa3lppDNC9NLcLDgFANy2UDYAGt6uFgO3GQqxdfzbkdAfaDJy\nVB7fSmzwQPMuaZLbbFXiNkMrM7Ul6V0bzENB1GtwnLIUsMPEQoRW6AdQIjU+L7Ii\nMJ2+KETymaE4AGU8HyhVHC0dNAavQwsZp1ZmYlHqxdzHnLlgP0Z796oil3iNs23A\nrxhX2WarpXTO3DeXUMumLsCLxkHNF52Q3X6bt73uWVmYdmWAqoAz1q35x/g7X177\nzbuUaeXAB516+++H6is0lAg9lK+KI7InEuT0/GcC7nIZ02VOHd326Oi8akVQuTTQ\nfiannXgm0FJG9Vcgktj9ByfqbSSThTuiwean1L566rIPrLAxPoro+lqmXVs8YH8E\n+Ruyo4BLP8L54KDg909ryluoA2nxhvil/jLu+flNklBe9BrymiVqzupCTJpCvBw+\njzVSHbt3Q1uI7xWH21/I/M3MXbbaeezOnVymU0xFivlUXlP0GiH25bJPtTx9A+sK\nvFCASykS\n=14U4\n-----END PGP SIGNATURE-----",
        "payload": "tree 73efdde76e0988dc68a71787be4d0073697b6c61\nparent 5622d8f3156a293e61d0964c33d4b21d8c9fd5e0\nparent 6338c0203416a5f86e9422b6cd479da8af277f2f\nauthor MarcoFalke <falke.marco@gmail.com> 1575829041 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1575829043 -0500\n\nMerge #17685: tests: Fix bug in the descriptor parsing fuzzing harness (descriptor_parse)\n\n6338c0203416a5f86e9422b6cd479da8af277f2f tests: Fix fuzzing harness for descriptor parsing (descriptor_parse) (practicalswift)\n\nPull request description:\n\n  Fix bug in the descriptor parsing fuzzing harness (`descriptor_parse`) by making sure `secp256k1_context_verify` is properly initialized (via `ECCVerifyHandle`).\n\n  Background:\n\n  When fuzzing `Parse(\u2026)` with `libFuzzer` I eventually reached the test case `combo(020000000000000000000000000000000000000000000000000000000000000000)`. That input triggers a call to `CPubKey::IsFullyValid()` which in turns requires an initialized `secp256k1_context_verify`.\n\n  The fuzzing harness did not fulfil that pre-condition prior to this commit (sorry, my fault!) :)\n\n  Before:\n\n  ```\n  $ mkdir descriptors/\n  $ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\n  $ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\n  \u2026\n  pubkey.cpp:210:38: runtime error: null pointer passed as argument 1, which is declared to never be null\n  secp256k1/include/secp256k1.h:305:3: note: nonnull attribute specified here\n      #0 0x561c032ccf25 in CPubKey::IsFullyValid() const src/pubkey.cpp:210:12\n      #1 0x561c022139c3 in (anonymous namespace)::ParsePubkeyInner(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:674:24\n      #2 0x561c02207680 in (anonymous namespace)::ParsePubkey(Span<char const> const&, bool, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:730:42\n      #3 0x561c0220080e in (anonymous namespace)::ParseScript(Span<char const>&, (anonymous namespace)::ParseScriptContext, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) src/script/descriptor.cpp:774:23\n      #4 0x561c021ffb07 in Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, FlatSigningProvider&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool) src/script/descriptor.cpp:994:16\n      #5 0x561c0218d5d4 in test_one_input(std::vector<unsigned char, std::allocator<unsigned char> > const&) src/test/fuzz/descriptor_parse.cpp:20:9\n  \u2026\n  $\n  ```\n\n  After:\n\n  ```\n  $ mkdir descriptors/\n  $ echo -n 'combo(020000000000000000000000000000000000000000000000000000000000000000)' > descriptors/input\n  $ UBSAN_OPTIONS=\"print_stacktrace=1:halt_on_error=1\" src/test/fuzz/descriptor_parse -runs=1 descriptors/\n  \u2026\n  Done 2 runs in 0 second(s)\n  $\n  ```\n\nACKs for top commit:\n  paymog:\n    ACK 6338c0203416a5f86e9422b6cd479da8af277f2f\n  MarcoFalke:\n    ACK 6338c0203416a5f86e9422b6cd479da8af277f2f \ud83d\udd4a\n\nTree-SHA512: bf24c404e1f64183761b057d2f210c3db85277f4415122977c315d7d6835acb5e897b5d64032615e9e44ad4a16dfe857e94481f6e4b57b6dfa8cb37adb2528a5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb03765e2d554da9dad5b9b314844a2ecb5c62e2/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5622d8f3156a293e61d0964c33d4b21d8c9fd5e0"
      },
      {
        "sha": "6338c0203416a5f86e9422b6cd479da8af277f2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6338c0203416a5f86e9422b6cd479da8af277f2f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6338c0203416a5f86e9422b6cd479da8af277f2f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "47d5038c26c166c20a1df5e5e0be3fcfdd1e0073",
        "filename": "src/test/fuzz/descriptor_parse.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bb03765e2d554da9dad5b9b314844a2ecb5c62e2/src/test/fuzz/descriptor_parse.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bb03765e2d554da9dad5b9b314844a2ecb5c62e2/src/test/fuzz/descriptor_parse.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/descriptor_parse.cpp?ref=bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
        "patch": "@@ -3,11 +3,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <chainparams.h>\n+#include <pubkey.h>\n #include <script/descriptor.h>\n #include <test/fuzz/fuzz.h>\n+#include <util/memory.h>\n \n void initialize()\n {\n+    static const auto verify_handle = MakeUnique<ECCVerifyHandle>();\n     SelectParams(CBaseChainParams::REGTEST);\n }\n "
      }
    ]
  },
  {
    "sha": "0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowY2NhZDA4ZmIyNWUwMGZjZjQxZmZiYWQ2Y2UyNTAxZTM2M2EwMDMz",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-12-09T02:34:02Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2019-12-09T02:34:02Z"
      },
      "message": "Make env data logging optional",
      "tree": {
        "sha": "ab09438581b1b9499a163c6129491b0ba1991450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab09438581b1b9499a163c6129491b0ba1991450"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ccad08fb25e00fcf41ffbad6ce2501e363a0033/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb03765e2d554da9dad5b9b314844a2ecb5c62e2"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "99927fc5d2774bcd062233a512846b2cd86be491",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ccad08fb25e00fcf41ffbad6ce2501e363a0033/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ccad08fb25e00fcf41ffbad6ce2501e363a0033/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
        "patch": "@@ -517,7 +517,7 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n-    LogPrintf(\"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n+    LogPrint(BCLog::RAND, \"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 10 ms\n     SeedStrengthen(hasher, rng, 10000);\n@@ -537,7 +537,7 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n \n     // Static environment data\n     RandAddStaticEnv(hasher);\n-    LogPrintf(\"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n+    LogPrint(BCLog::RAND, \"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 100 ms\n     SeedStrengthen(hasher, rng, 100000);"
      }
    ]
  },
  {
    "sha": "b6fb899ead9b9374a2f802666a3056012a793fa4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNmZiODk5ZWFkOWI5Mzc0YTJmODAyNjY2YTMwNTYwMTJhNzkzZmE0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-09T09:02:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-09T09:02:42Z"
      },
      "message": "Merge #17699: Make env data logging optional\n\n0ccad08fb25e00fcf41ffbad6ce2501e363a0033 Make env data logging optional (Pieter Wuille)\n\nPull request description:\n\n  The dynamic env feeding logging is a bit chatty, make it dependent on `-debug=rand`.\n\nACKs for top commit:\n  practicalswift:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033 -- less noise is good and diff looks correct\n  laanwj:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033\n  promag:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033.\n  jonatack:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033, was considering to propose this.\n\nTree-SHA512: 01d7f9ac134852c2c0d5f66f96ee4395f0ff7a60573e648f3d01054073624042148c8e8b9f69a29c9a41c296e1f4be77c2015a642ee4113a2fd8779b62aa137d",
      "tree": {
        "sha": "ab09438581b1b9499a163c6129491b0ba1991450",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab09438581b1b9499a163c6129491b0ba1991450"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b6fb899ead9b9374a2f802666a3056012a793fa4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3uDbIACgkQHkrtYphs\n0l1J/Qf/agA+ug5An7VZtaA1VRI8NLFu6mNu2fWzslfVQUW67Wl+1bdqJUaC7OfM\nC9THDqwfzDQM3RxcOA2af8bO7k5HwSiR6nyJCrDl7RlKPHa/i0lgI0eHL5pnbtoz\nYu7aCpejZ+/nc6SJVtTdZMrUJMvMTrc356VKOFcUL+E1aru3/iOG1iv5/k9YsZau\nc36/ytjvXM7eYi/eZEJjk1Kxj3wMmjkuijfU0J2kyRTUOjDo2oHhdeHlSOy69dHB\nzq5qnCQMb1XXlW27CtRzklM4Jy8P5XxDbGHl0WwVWZTSG5/VQSeNl37+tmYtQ07U\nTu1GcIDHu8SNAu9i3NlxonDemRz8Kw==\n=RaDq\n-----END PGP SIGNATURE-----",
        "payload": "tree ab09438581b1b9499a163c6129491b0ba1991450\nparent bb03765e2d554da9dad5b9b314844a2ecb5c62e2\nparent 0ccad08fb25e00fcf41ffbad6ce2501e363a0033\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575882142 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575882162 +0100\n\nMerge #17699: Make env data logging optional\n\n0ccad08fb25e00fcf41ffbad6ce2501e363a0033 Make env data logging optional (Pieter Wuille)\n\nPull request description:\n\n  The dynamic env feeding logging is a bit chatty, make it dependent on `-debug=rand`.\n\nACKs for top commit:\n  practicalswift:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033 -- less noise is good and diff looks correct\n  laanwj:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033\n  promag:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033.\n  jonatack:\n    ACK 0ccad08fb25e00fcf41ffbad6ce2501e363a0033, was considering to propose this.\n\nTree-SHA512: 01d7f9ac134852c2c0d5f66f96ee4395f0ff7a60573e648f3d01054073624042148c8e8b9f69a29c9a41c296e1f4be77c2015a642ee4113a2fd8779b62aa137d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6fb899ead9b9374a2f802666a3056012a793fa4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b6fb899ead9b9374a2f802666a3056012a793fa4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6fb899ead9b9374a2f802666a3056012a793fa4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb03765e2d554da9dad5b9b314844a2ecb5c62e2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb03765e2d554da9dad5b9b314844a2ecb5c62e2"
      },
      {
        "sha": "0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ccad08fb25e00fcf41ffbad6ce2501e363a0033",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ccad08fb25e00fcf41ffbad6ce2501e363a0033"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "99927fc5d2774bcd062233a512846b2cd86be491",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b6fb899ead9b9374a2f802666a3056012a793fa4/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b6fb899ead9b9374a2f802666a3056012a793fa4/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=b6fb899ead9b9374a2f802666a3056012a793fa4",
        "patch": "@@ -517,7 +517,7 @@ static void SeedPeriodic(CSHA512& hasher, RNGState& rng) noexcept\n     // Dynamic environment data (performance monitoring, ...)\n     auto old_size = hasher.Size();\n     RandAddDynamicEnv(hasher);\n-    LogPrintf(\"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n+    LogPrint(BCLog::RAND, \"Feeding %i bytes of dynamic environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 10 ms\n     SeedStrengthen(hasher, rng, 10000);\n@@ -537,7 +537,7 @@ static void SeedStartup(CSHA512& hasher, RNGState& rng) noexcept\n \n     // Static environment data\n     RandAddStaticEnv(hasher);\n-    LogPrintf(\"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n+    LogPrint(BCLog::RAND, \"Feeding %i bytes of environment data into RNG\\n\", hasher.Size() - old_size);\n \n     // Strengthen for 100 ms\n     SeedStrengthen(hasher, rng, 100000);"
      }
    ]
  },
  {
    "sha": "91559da683dbf5de101b7722cdac341963d2433a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MTU1OWRhNjgzZGJmNWRlMTAxYjc3MjJjZGFjMzQxOTYzZDI0MzNh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-09T09:05:20Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-09T09:06:32Z"
      },
      "message": "Merge #17676: depends: don't use OpenGL in Qt on macOS\n\n2359a4790d93ffd17b8afc2fea3775dd858ef50d depends: don't use OpenGL in Qt on macOS (fanquake)\nba0cad2702e01860d3539f170343d8d9f9c5b75a build: pass -dead_strip_dylibs to ld on macOS (fanquake)\n\nPull request description:\n\n  Based on #17663. OpenGL on macOS was also deprecated in 10.14.\n\n  This also removes the `/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL` dylib from `bitcoin-qt`.\n\nACKs for top commit:\n  laanwj:\n    ACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n  jonasschnelli:\n    utACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n  hebasto:\n    ACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n\nTree-SHA512: 39b0151832c829f6ebdc4910eb28ebbeba64539cd04eba6ce3ec75fc0f231569956ca51a1e0bffc76dd27e85643c65a155320b9b450c49e9841e12b108406d41",
      "tree": {
        "sha": "a2e3341a16363d6609c33b23b31fd7934a996edb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2e3341a16363d6609c33b23b31fd7934a996edb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91559da683dbf5de101b7722cdac341963d2433a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl3uDpgACgkQHkrtYphs\n0l3yuQf8DSrJa/3pTQ5q3se0Lk/AQhPkFEhoX1ze+jDQ9BtKrHY0gpBkp9BFE3ud\nlmAF/CWMbydpUAvFUnjhaj+a4HFHCDuAezyQuauKUlzdFJbYhH7ZdUsvFFdeMfDP\nOJwHKLcQS7dkhU5Ui+m3IO/lP0OnMNEoFAGy/Oohd0pJS/BqXy+qT4H0HZh9G57q\nCcmienH3gI82WYdDLNH1TJT0y9M1mZq3kDsQy+sZFW+rXR833JZTBkwx44uAbpJf\nKYQgplxOhq97X5fUoviyTnGT13W8BUd+/yVZHch0pAYn8EHQVLKdQpu5oQvx1E+f\ne6gQoD8VIvZ30a1cm0J5GpLqsmCXjA==\n=aSyt\n-----END PGP SIGNATURE-----",
        "payload": "tree a2e3341a16363d6609c33b23b31fd7934a996edb\nparent b6fb899ead9b9374a2f802666a3056012a793fa4\nparent 2359a4790d93ffd17b8afc2fea3775dd858ef50d\nauthor Wladimir J. van der Laan <laanwj@protonmail.com> 1575882320 +0100\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1575882392 +0100\n\nMerge #17676: depends: don't use OpenGL in Qt on macOS\n\n2359a4790d93ffd17b8afc2fea3775dd858ef50d depends: don't use OpenGL in Qt on macOS (fanquake)\nba0cad2702e01860d3539f170343d8d9f9c5b75a build: pass -dead_strip_dylibs to ld on macOS (fanquake)\n\nPull request description:\n\n  Based on #17663. OpenGL on macOS was also deprecated in 10.14.\n\n  This also removes the `/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL` dylib from `bitcoin-qt`.\n\nACKs for top commit:\n  laanwj:\n    ACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n  jonasschnelli:\n    utACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n  hebasto:\n    ACK 2359a4790d93ffd17b8afc2fea3775dd858ef50d\n\nTree-SHA512: 39b0151832c829f6ebdc4910eb28ebbeba64539cd04eba6ce3ec75fc0f231569956ca51a1e0bffc76dd27e85643c65a155320b9b450c49e9841e12b108406d41\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91559da683dbf5de101b7722cdac341963d2433a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91559da683dbf5de101b7722cdac341963d2433a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91559da683dbf5de101b7722cdac341963d2433a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b6fb899ead9b9374a2f802666a3056012a793fa4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b6fb899ead9b9374a2f802666a3056012a793fa4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b6fb899ead9b9374a2f802666a3056012a793fa4"
      },
      {
        "sha": "2359a4790d93ffd17b8afc2fea3775dd858ef50d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2359a4790d93ffd17b8afc2fea3775dd858ef50d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2359a4790d93ffd17b8afc2fea3775dd858ef50d"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f1d234ccf6dd8ebe626770da448f4f16e119bc01",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91559da683dbf5de101b7722cdac341963d2433a/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91559da683dbf5de101b7722cdac341963d2433a/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=91559da683dbf5de101b7722cdac341963d2433a",
        "patch": "@@ -105,6 +105,7 @@ $(package)_config_opts += -no-feature-wizard\n $(package)_config_opts += -no-feature-xml\n \n $(package)_config_opts_darwin = -no-dbus\n+$(package)_config_opts_darwin += -no-opengl\n \n ifneq ($(build_os),darwin)\n $(package)_config_opts_darwin += -xplatform macx-clang-linux"
      }
    ]
  }
]