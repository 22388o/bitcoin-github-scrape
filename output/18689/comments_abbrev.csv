hebasto,2020-04-17 20:03:04,What are possible/expected use cases?,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-615439416,615439416,
MarcoFalke,2020-04-17 20:09:46,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-615442110,615442110,
DrahtBot,2020-04-17 22:57:11,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21850 (Remove `GetDataDir(net_specific)` function by kiminuo)\n* #21526 (validation: UpdateTip/CheckBlockIndex assumeutxo",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-615498646,615498646,
pierreN,2020-04-18 02:16:58,"@hebasto the most common use case will be for users to easily study the whole UTXO set in only a few minutes.\n\nWith this PR it should be really easy to dump any format you want via the `format` parameter (type of data, number of occurrences and order are all respected).\nAlso, just adding one element to the `ascii_types` vector allows you to dump any new type of ASCII data. \n\nFor example,",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-615540034,615540034,
pierreN,2020-05-01 05:09:11,rebased cd20cb8,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-622251056,622251056,
brakmic,2020-05-01 13:50:36,"ACK cd20cb886deb0ef91ab89c66bbfb511e89eb77ee\n\nBuilt, run and tested on macOS Catalina 10.15.4\n\n```shell\n./test/functional/rpc_dumptxoutset.py\n2020-05-01T13:40:08.556000Z TestFramework (INFO): Initializing test directory /var/folders/7q/4ffytzk562dd2ky4bfg9_w7h0000gn/T/bitcoin_func_test_oc2tzp0y\n2020-05-01T13:40:11.072000Z TestFramework (INFO): no_option\n2020-05-01T13:40:11.113000Z ",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-622396608,622396608,
jamesob,2020-08-26 01:48:13,"Cool, I'll take a look in the next few days.",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-680411591,680411591,
jamesob,2020-11-19 15:02:24,Concept ACK - will review soon.,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-730433391,730433391,
MarcoFalke,2021-04-13 18:42:52,Still needs rebase,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-818970630,818970630,
pierreN,2021-05-06 21:39:07,"Sorry for the few months delay. \nI have a bit more time now and will try to follow through with this PR.\n\nI'll update the branch in a few days (I was syncing when my old SSD died).\n",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-833886039,833886039,
Sjors,2021-05-21 13:41:07,Consider moving this functionality to the new [bitcoin-util](https://github.com/bitcoin/bitcoin/blob/master/src/bitcoin-util.cpp) instead. You could add a command that converts the binary format to human readable.,https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-845958421,845958421,
DrahtBot,2021-05-24 09:40:32,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/18689#issuecomment-846919802,846919802,
luke-jr,2020-06-09 23:51:06,"`auto` doesn't really work in this context...\n\n```\nwarning: comparison of integer expressions of different signedness: ‚Äòint‚Äô and ‚Äòsize_t‚Äô {aka ‚Äòlong unsigned int‚Äô} [-Wsign-compare]\n```",https://github.com/bitcoin/bitcoin/pull/18689#discussion_r437784060,437784060,src/rpc/blockchain.cpp
pierreN,2020-06-14 08:57:56,"Ha, funny that a compiler can get the warning but don't properly choose the type of `i`. I guess the `0` must confuse it. \n\nThanks for catching this, I've just updated the branch.",https://github.com/bitcoin/bitcoin/pull/18689#discussion_r439807375,439807375,src/rpc/blockchain.cpp
luke-jr,2020-11-26 23:58:18,"I'm not sure if it's a compiler bug or PR bug, but `ascii_types` is invalid here when compiled with GCC 9.3.0.\n\n```\n==48759== Thread 22 b-httpworker.3:\n==48759== Invalid read of size 8\n==48759==    at 0x4BC68C: __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::fun\nction<std::__cxx11::basic_string<char, std::char",https://github.com/bitcoin/bitcoin/pull/18689#discussion_r531257130,531257130,src/rpc/blockchain.cpp
benthecarman,2021-03-06 22:09:25,It'd be nice if these were more descriptive. It's unclear exactly what the serialization is for these argsr,https://github.com/bitcoin/bitcoin/pull/18689#discussion_r588937256,588937256,src/rpc/blockchain.cpp
luke-jr,2021-10-11 06:17:50,IMO it'd be nicer to avoid the two mutually-exclusive bools. Maybe a good case for a class enum?,https://github.com/bitcoin/bitcoin/pull/18689#discussion_r725816476,725816476,src/rpc/blockchain.cpp
luke-jr,2021-10-11 06:19:01,"The first `false` here should be true, as `ActivateSnapshot` can only handle the binary/compact format.",https://github.com/bitcoin/bitcoin/pull/18689#discussion_r725816929,725816929,src/test/validation_chainstatemanager_tests.cpp
