[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606847500",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-606847500",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 606847500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwNjg0NzUwMA==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-03-31T20:08:17Z",
    "updated_at": "2020-03-31T20:08:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK.\r\n\r\nI don't see any reason not to accept this test as is; but it could be nice to:\r\n\r\n1) Make it a bit more generic (e.g., specify a param N rather than writing out each transaction)\r\n2) Test some more complicated transaction graphs",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/606847500/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608586544",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-608586544",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 608586544,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODU4NjU0NA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-03T18:12:11Z",
    "updated_at": "2020-04-03T18:12:11Z",
    "author_association": "MEMBER",
    "body": "Updated 7ed5558042889e08cee941e697b7547213877e9b -> cfaa79b9f4d0c220c220ae0d8a6825581aa89133 ([pr18485.01](https://github.com/hebasto/bitcoin/commits/pr18485.01) -> [pr18485.02](https://github.com/hebasto/bitcoin/commits/18485.02), [diff](https://github.com/hebasto/bitcoin/compare/pr18485.01..pr18485.02)).\r\n\r\n@JeremyRubin \r\n> 1. Make it a bit more generic (e.g., specify a param N rather than writing out each transaction)\r\n\r\nDone.\r\n\r\n> 2. Test some more complicated transaction graphs\r\n\r\nDone.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608586544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608951152",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-608951152",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 608951152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODk1MTE1Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-04T01:32:59Z",
    "updated_at": "2020-04-04T01:32:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "Looks great :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608951152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608996301",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-608996301",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 608996301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYwODk5NjMwMQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-04T08:37:32Z",
    "updated_at": "2020-04-04T08:37:32Z",
    "author_association": "MEMBER",
    "body": "Updated cfaa79b9f4d0c220c220ae0d8a6825581aa89133 -> b9156fd3d10dcf5cf18a4728ae42f39826a00586 ([pr18485.02](https://github.com/hebasto/bitcoin/commits/pr18485.02) -> [pr18485.03](https://github.com/hebasto/bitcoin/commits/18485.03), [diff](https://github.com/hebasto/bitcoin/compare/pr18485.02..pr18485.03)):\r\n\r\n- fixed some `flake8` style warnings.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/608996301/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619077646",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-619077646",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 619077646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTA3NzY0Ng==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T15:23:03Z",
    "updated_at": "2020-04-24T15:23:03Z",
    "author_association": "MEMBER",
    "body": "Updated b9156fd3d10dcf5cf18a4728ae42f39826a00586 -> 8098dea06944f9de8b285f44958eb98761f133ee ([pr18485.03](https://github.com/hebasto/bitcoin/commits/pr18485.03) -> [pr18485.04](https://github.com/hebasto/bitcoin/commits/pr18485.04), [diff](https://github.com/hebasto/bitcoin/compare/pr18485.03..pr18485.04)):\r\n\r\n- addressed @ariard's [comments](https://github.com/bitcoin/bitcoin/pull/18485#pullrequestreview-399569822):\r\n\r\n> ACK [b9156fd](https://github.com/bitcoin/bitcoin/commit/b9156fd3d10dcf5cf18a4728ae42f39826a00586)\r\n> \r\n> Cool work! It's mostly suggestions to make test clearer, feel free to ignore them.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619077646/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619247645",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-619247645",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18485",
    "id": 619247645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxOTI0NzY0NQ==",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-24T21:31:53Z",
    "updated_at": "2020-04-24T21:31:53Z",
    "author_association": "MEMBER",
    "body": "ACK 8098dea",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/619247645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414216980",
    "pull_request_review_id": 399569822,
    "id": 414216980,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNjk4MA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 8,
    "original_position": 8,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe hints directly to `UpdateTransactionsFromBlock`",
    "created_at": "2020-04-24T00:43:51Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414216980",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414216980"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414216980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414216980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 8,
    "original_line": 8,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414217638",
    "pull_request_review_id": 399569822,
    "id": 414217638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNzYzOA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 38,
    "original_position": 38,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A tournament can be a direct cyclic graph? But utxo graph has to be a direct acyclic graph and should be forbid in the mempool, for preciseness, you may indicate it generates a subset of tournament.",
    "created_at": "2020-04-24T00:46:00Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414217638",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414217638"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414217638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414217638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218221",
    "pull_request_review_id": 399569822,
    "id": 414218221,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxODIyMQ==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 25,
    "original_position": 25,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "How people should use `start_input_txid` and `end_address` ? Do you envision having different helpers each with a specific topology and being able to connect them to test different mempool entry points ? Like a N-fan-out connected to a linear chain ?",
    "created_at": "2020-04-24T00:48:01Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218221",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218221"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218221"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218221/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218543",
    "pull_request_review_id": 399569822,
    "id": 414218543,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxODU0Mw==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)\n+        \"\"\"\n+\n+        if not start_input_txid:\n+            start_input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(1))['tx'][0]\n+\n+        if not end_address:\n+            end_address = self.nodes[0].getnewaddress()\n+\n+        first_block_hash = ''\n+        tx_id = []\n+        tx_size = []\n+        self.log.info('Creating {} transactions...'.format(size))\n+        for i in range(0, size):\n+            self.log.debug('Preparing transaction #{}...'.format(i))\n+            # Prepare inputs.\n+            if i == 0:\n+                inputs = [{'txid': start_input_txid, 'vout': 0}]\n+                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+            else:\n+                inputs = []\n+                inputs_value = 0\n+                for j, tx in enumerate(tx_id[0:i]):\n+                    vout = i - j - 1",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 62,
    "original_position": 61,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"Transaction N is children of every previous transactions at their output N-1\"",
    "created_at": "2020-04-24T00:49:16Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218543",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218543"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218543"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218839",
    "pull_request_review_id": 399569822,
    "id": 414218839,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxODgzOQ==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)\n+        \"\"\"\n+\n+        if not start_input_txid:\n+            start_input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(1))['tx'][0]\n+\n+        if not end_address:\n+            end_address = self.nodes[0].getnewaddress()\n+\n+        first_block_hash = ''\n+        tx_id = []\n+        tx_size = []\n+        self.log.info('Creating {} transactions...'.format(size))\n+        for i in range(0, size):\n+            self.log.debug('Preparing transaction #{}...'.format(i))\n+            # Prepare inputs.\n+            if i == 0:\n+                inputs = [{'txid': start_input_txid, 'vout': 0}]\n+                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+            else:\n+                inputs = []\n+                inputs_value = 0\n+                for j, tx in enumerate(tx_id[0:i]):\n+                    vout = i - j - 1\n+                    inputs.append({'txid': tx_id[j], 'vout': vout})\n+                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+\n+            self.log.debug('inputs={}'.format(inputs))\n+            self.log.debug('inputs_value={}'.format(inputs_value))\n+\n+            # Prepare outputs.\n+            tx_count = i + 1\n+            if tx_count < size:\n+                n_outputs = size - tx_count",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 73,
    "original_position": 71,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"Transaction N is ancestor of every transactions[N+1...size]\"",
    "created_at": "2020-04-24T00:50:22Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218839",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218839"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414218839"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414218839/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 73,
    "original_line": 73,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414639145",
    "pull_request_review_id": 400020031,
    "id": 414639145,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYzOTE0NQ==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 38,
    "original_position": 38,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think \"acyclic\" property is implied in this case :)",
    "created_at": "2020-04-24T14:54:02Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414639145",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414639145"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414639145"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414639145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT",
    "in_reply_to_id": 414217638
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414640442",
    "pull_request_review_id": 400021527,
    "id": 414640442,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MDQ0Mg==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 25,
    "original_position": 25,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Do you envision having different helpers each with a specific topology and being able to connect them to test different mempool entry points ? Like a N-fan-out connected to a linear chain ?\r\n\r\nYou read my mind :)",
    "created_at": "2020-04-24T14:55:45Z",
    "updated_at": "2020-04-24T15:19:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414640442",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414640442"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414640442"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414640442/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 414218221
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661046",
    "pull_request_review_id": 400045261,
    "id": 414661046,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2MTA0Ng==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 38,
    "original_position": 38,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-619077646).",
    "created_at": "2020-04-24T15:23:26Z",
    "updated_at": "2020-04-24T15:23:27Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661046",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661046"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661046"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661046/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 38,
    "original_line": 38,
    "side": "RIGHT",
    "in_reply_to_id": 414217638
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661362",
    "pull_request_review_id": 400045613,
    "id": 414661362,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2MTM2Mg==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)\n+        \"\"\"\n+\n+        if not start_input_txid:\n+            start_input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(1))['tx'][0]\n+\n+        if not end_address:\n+            end_address = self.nodes[0].getnewaddress()\n+\n+        first_block_hash = ''\n+        tx_id = []\n+        tx_size = []\n+        self.log.info('Creating {} transactions...'.format(size))\n+        for i in range(0, size):\n+            self.log.debug('Preparing transaction #{}...'.format(i))\n+            # Prepare inputs.\n+            if i == 0:\n+                inputs = [{'txid': start_input_txid, 'vout': 0}]\n+                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+            else:\n+                inputs = []\n+                inputs_value = 0\n+                for j, tx in enumerate(tx_id[0:i]):\n+                    vout = i - j - 1",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 62,
    "original_position": 61,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-619077646).",
    "created_at": "2020-04-24T15:23:49Z",
    "updated_at": "2020-04-24T15:23:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661362",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661362"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661362"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661362/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 62,
    "original_line": 62,
    "side": "RIGHT",
    "in_reply_to_id": 414218543
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661528",
    "pull_request_review_id": 400045797,
    "id": 414661528,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2MTUyOA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):\n+        \"\"\"Create a tournament (a type of directed graph) of transactions and use it for testing.\n+\n+        Keyword arguments:\n+        size -- the order N of the tournament which is equal to the number of the created transactions\n+        n_tx_to_mine -- the number of transaction that should be mined into a block\n+\n+        If all of the N created transactions tx[0]..tx[N-1] reside in the mempool,\n+        the following holds:\n+            the tx[K] transaction:\n+            - has N-K descendants (including this one), and\n+            - has K+1 ancestors (including this one)\n+\n+        More details: https://en.wikipedia.org/wiki/Tournament_(graph_theory)\n+        \"\"\"\n+\n+        if not start_input_txid:\n+            start_input_txid = self.nodes[0].getblock(self.nodes[0].getblockhash(1))['tx'][0]\n+\n+        if not end_address:\n+            end_address = self.nodes[0].getnewaddress()\n+\n+        first_block_hash = ''\n+        tx_id = []\n+        tx_size = []\n+        self.log.info('Creating {} transactions...'.format(size))\n+        for i in range(0, size):\n+            self.log.debug('Preparing transaction #{}...'.format(i))\n+            # Prepare inputs.\n+            if i == 0:\n+                inputs = [{'txid': start_input_txid, 'vout': 0}]\n+                inputs_value = self.nodes[0].gettxout(start_input_txid, 0)['value']\n+            else:\n+                inputs = []\n+                inputs_value = 0\n+                for j, tx in enumerate(tx_id[0:i]):\n+                    vout = i - j - 1\n+                    inputs.append({'txid': tx_id[j], 'vout': vout})\n+                    inputs_value += self.nodes[0].gettxout(tx, vout)['value']\n+\n+            self.log.debug('inputs={}'.format(inputs))\n+            self.log.debug('inputs_value={}'.format(inputs_value))\n+\n+            # Prepare outputs.\n+            tx_count = i + 1\n+            if tx_count < size:\n+                n_outputs = size - tx_count",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 73,
    "original_position": 71,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18485#issuecomment-619077646).",
    "created_at": "2020-04-24T15:24:04Z",
    "updated_at": "2020-04-24T15:24:04Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661528",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661528"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414661528"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414661528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 73,
    "original_line": 73,
    "side": "RIGHT",
    "in_reply_to_id": 414218839
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414663220",
    "pull_request_review_id": 400047758,
    "id": 414663220,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2MzIyMA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 8,
    "original_position": 8,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Maybe hints directly to `UpdateTransactionsFromBlock`\r\n\r\nThis could be more appropriate for unit tests rather for functional ones, no?",
    "created_at": "2020-04-24T15:26:13Z",
    "updated_at": "2020-04-24T15:26:14Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414663220",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414663220"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414663220"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414663220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 8,
    "original_line": 8,
    "side": "RIGHT",
    "in_reply_to_id": 414216980
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875357",
    "pull_request_review_id": 400283474,
    "id": 414875357,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3NTM1Nw==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 8,
    "original_position": 8,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm don't have a strong opinon, but sometimes for newcomers is great to lead them directly to what part of the codebase is tested.",
    "created_at": "2020-04-24T21:32:05Z",
    "updated_at": "2020-04-24T21:32:06Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414875357",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875357"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414875357"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875357/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 8,
    "original_line": 8,
    "side": "RIGHT",
    "in_reply_to_id": 414216980
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875420",
    "pull_request_review_id": 400283557,
    "id": 414875420,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg3NTQyMA==",
    "diff_hunk": "@@ -0,0 +1,121 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test mempool descendants/ancestors information update.\n+\n+Test mempool update of transaction descendants/ancestors information (count, size)\n+when transactions have been re-added from a disconnected block to the mempool.\n+\"\"\"\n+import time\n+\n+from decimal import Decimal\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+class MempoolUpdateFromBlockTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+        self.extra_args = [['-limitdescendantsize=1000', '-limitancestorsize=1000']]\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def transaction_graph_test(self, size, n_tx_to_mine=None, start_input_txid='', end_address='', fee=Decimal(0.00100000)):",
    "path": "test/functional/mempool_updatefromblock.py",
    "position": 25,
    "original_position": 25,
    "commit_id": "8098dea06944f9de8b285f44958eb98761f133ee",
    "original_commit_id": "b9156fd3d10dcf5cf18a4728ae42f39826a00586",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Great, will review next ones too!",
    "created_at": "2020-04-24T21:32:16Z",
    "updated_at": "2020-04-24T21:32:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414875420",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875420"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18485#discussion_r414875420"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18485"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/414875420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 25,
    "original_line": 25,
    "side": "RIGHT",
    "in_reply_to_id": 414218221
  }
]