[
  {
    "sha": "345830f83ad704bbf7edaaf374882039dc60177b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDU4MzBmODNhZDcwNGJiZjdlZGFhZjM3NDg4MjAzOWRjNjAxNzdi",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-19T05:50:04Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2018-09-19T14:34:21Z"
      },
      "message": "Mark Qt class methods as override where appropriate\n\nPrimarily identified with clang-tidy here:\nhttps://github.com/bitcoin/bitcoin/pull/14267#issuecomment-422693176",
      "tree": {
        "sha": "32c8692d3e9e39903f56204230f79c390ce655c5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32c8692d3e9e39903f56204230f79c390ce655c5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/345830f83ad704bbf7edaaf374882039dc60177b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJbol6QAAoJEG7l83hfeLNFXL4IAIq1mL5cvVljbdvFWrnA9QFP\nNx0CBu6wV1IXYsyYOuoFI1lTZDRQlYIECtXp9BhIZNaWf9flut1Aa65lCP8Qh7e1\nVr7vdwCWIUzGz4WnFOK+2bAS0oV8CON88XHXqH0NuQFdDAICaD/U3gw4dbverhCe\n1Hh9/bbYnkbNfu8cTbYLblHIZYPwocl2pfx5pZivOjzDof6O0q8Q3HS7GDowHdNv\nKFpMJuhIIpYMZ4pk/ehS+ymt5E1EdB3Gln0K2b0YVVl0MU8Ky+OtxWJFfNdcW/wo\ntsbsZlX/xaBecbbohYOTdnNgk8yefRsDtp4nbSVR7Ich+4JlCGHuygt/g+hKLno=\n=jF6v\n-----END PGP SIGNATURE-----",
        "payload": "tree 32c8692d3e9e39903f56204230f79c390ce655c5\nparent d26278988fbfc71dc558f7b2c60a184e8091450b\nauthor Ben Woosley <ben.woosley@gmail.com> 1537336204 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1537367661 -0400\n\nMark Qt class methods as override where appropriate\n\nPrimarily identified with clang-tidy here:\nhttps://github.com/bitcoin/bitcoin/pull/14267#issuecomment-422693176\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345830f83ad704bbf7edaaf374882039dc60177b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/345830f83ad704bbf7edaaf374882039dc60177b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/345830f83ad704bbf7edaaf374882039dc60177b/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d26278988fbfc71dc558f7b2c60a184e8091450b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d26278988fbfc71dc558f7b2c60a184e8091450b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d26278988fbfc71dc558f7b2c60a184e8091450b"
      }
    ],
    "stats": {
      "total": 85,
      "additions": 46,
      "deletions": 39
    },
    "files": [
      {
        "sha": "62415ada3aa9f1022d8ed6d33d50e0926598f150",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -36,7 +36,7 @@ class AddressBookSortFilterProxyModel final : public QSortFilterProxyModel\n     }\n \n protected:\n-    bool filterAcceptsRow(int row, const QModelIndex& parent) const\n+    bool filterAcceptsRow(int row, const QModelIndex& parent) const override\n     {\n         auto model = sourceModel();\n         auto label = model->index(row, AddressTableModel::Label, parent);"
      },
      {
        "sha": "2fefe0962dfa57ff26e8fcaeb41b88e62324b9c2",
        "filename": "src/qt/addresstablemodel.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/addresstablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/addresstablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addresstablemodel.h?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -52,14 +52,14 @@ class AddressTableModel : public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    bool setData(const QModelIndex &index, const QVariant &value, int role);\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n-    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    bool setData(const QModelIndex &index, const QVariant &value, int role) override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const override;\n+    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex()) override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n     /*@}*/\n \n     /* Add an address to the model."
      },
      {
        "sha": "eb4989a7f0ed0b1905d7aa29c6b662ed9ee8792f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -177,7 +177,7 @@ class BitcoinApplication: public QApplication\n     Q_OBJECT\n public:\n     explicit BitcoinApplication(interfaces::Node& node, int &argc, char **argv);\n-    ~BitcoinApplication();\n+    ~BitcoinApplication() override;\n \n #ifdef ENABLE_WALLET\n     /// Create payment server"
      },
      {
        "sha": "c7211dade8c37c69675b9b8095e661f5668e9d1c",
        "filename": "src/qt/bitcoinamountfield.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/bitcoinamountfield.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/bitcoinamountfield.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinamountfield.cpp?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -32,7 +32,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         connect(lineEdit(), &QLineEdit::textEdited, this, &AmountSpinBox::valueChanged);\n     }\n \n-    QValidator::State validate(QString &text, int &pos) const\n+    QValidator::State validate(QString &text, int &pos) const override\n     {\n         if(text.isEmpty())\n             return QValidator::Intermediate;\n@@ -42,7 +42,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         return valid ? QValidator::Intermediate : QValidator::Invalid;\n     }\n \n-    void fixup(QString &input) const\n+    void fixup(QString &input) const override\n     {\n         bool valid = false;\n         CAmount val = parse(input, &valid);\n@@ -64,7 +64,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         Q_EMIT valueChanged();\n     }\n \n-    void stepBy(int steps)\n+    void stepBy(int steps) override\n     {\n         bool valid = false;\n         CAmount val = value(&valid);\n@@ -91,7 +91,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         singleStep = step;\n     }\n \n-    QSize minimumSizeHint() const\n+    QSize minimumSizeHint() const override\n     {\n         if(cachedMinimumSizeHint.isEmpty())\n         {\n@@ -149,7 +149,7 @@ class AmountSpinBox: public QAbstractSpinBox\n     }\n \n protected:\n-    bool event(QEvent *event)\n+    bool event(QEvent *event) override\n     {\n         if (event->type() == QEvent::KeyPress || event->type() == QEvent::KeyRelease)\n         {\n@@ -164,7 +164,7 @@ class AmountSpinBox: public QAbstractSpinBox\n         return QAbstractSpinBox::event(event);\n     }\n \n-    StepEnabled stepEnabled() const\n+    StepEnabled stepEnabled() const override\n     {\n         if (isReadOnly()) // Disable steps when AmountSpinBox is read-only\n             return StepNone;"
      },
      {
        "sha": "ad197bdd0664e0275195a8ed458680b8aa3e4249",
        "filename": "src/qt/optionsmodel.h",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/optionsmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/optionsmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.h?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -61,9 +61,13 @@ class OptionsModel : public QAbstractListModel\n     void Init(bool resetSettings = false);\n     void Reset();\n \n-    int rowCount(const QModelIndex & parent = QModelIndex()) const;\n-    QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const;\n-    bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole);\n+    /** @name Methods overridden from QAbstractItemModel\n+        @{*/\n+    int rowCount(const QModelIndex & parent = QModelIndex()) const override;\n+    QVariant data(const QModelIndex & index, int role = Qt::DisplayRole) const override;\n+    bool setData(const QModelIndex & index, const QVariant & value, int role = Qt::EditRole) override;\n+    /*@}*/\n+\n     /** Updates current unit in memory, settings and emits displayUnitChanged(newUnit) signal */\n     void setDisplayUnit(const QVariant &value);\n "
      },
      {
        "sha": "5eb283fae007683844b4efa2fdfeb0b4fd400e4b",
        "filename": "src/qt/recentrequeststablemodel.h",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/recentrequeststablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/recentrequeststablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.h?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -71,14 +71,14 @@ class RecentRequestsTableModel: public QAbstractTableModel\n \n     /** @name Methods overridden from QAbstractTableModel\n         @{*/\n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    bool setData(const QModelIndex &index, const QVariant &value, int role);\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex &parent) const;\n-    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex());\n-    Qt::ItemFlags flags(const QModelIndex &index) const;\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    bool setData(const QModelIndex &index, const QVariant &value, int role) override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex &parent) const override;\n+    bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex()) override;\n+    Qt::ItemFlags flags(const QModelIndex &index) const override;\n     /*@}*/\n \n     const RecentRequestEntry &entry(int row) const { return list[row]; }\n@@ -87,7 +87,7 @@ class RecentRequestsTableModel: public QAbstractTableModel\n     void addNewRequest(RecentRequestEntry &recipient);\n \n public Q_SLOTS:\n-    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder);\n+    void sort(int column, Qt::SortOrder order = Qt::AscendingOrder) override;\n     void updateDisplayUnit();\n \n private:"
      },
      {
        "sha": "8f25cb8d2c73b8fd7b1323d77b71bfb3e9b13f22",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -108,7 +108,7 @@ class QtRPCTimerBase: public QObject, public RPCTimerBase\n         connect(&timer, &QTimer::timeout, [this]{ func(); });\n         timer.start(millis);\n     }\n-    ~QtRPCTimerBase() {}\n+    ~QtRPCTimerBase() override {}\n private:\n     QTimer timer;\n     std::function<void(void)> func;\n@@ -117,9 +117,8 @@ class QtRPCTimerBase: public QObject, public RPCTimerBase\n class QtRPCTimerInterface: public RPCTimerInterface\n {\n public:\n-    ~QtRPCTimerInterface() {}\n-    const char *Name() { return \"Qt\"; }\n-    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis)\n+    const char *Name() override { return \"Qt\"; }\n+    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis) override\n     {\n         return new QtRPCTimerBase(func, millis);\n     }"
      },
      {
        "sha": "8a0a1057b83c0a860c3d3b182e0dfe8e54fe5262",
        "filename": "src/qt/transactionfilterproxy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/transactionfilterproxy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/transactionfilterproxy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionfilterproxy.h?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -49,10 +49,10 @@ class TransactionFilterProxy : public QSortFilterProxyModel\n     /** Set whether to show conflicted transactions. */\n     void setShowInactive(bool showInactive);\n \n-    int rowCount(const QModelIndex &parent = QModelIndex()) const;\n+    int rowCount(const QModelIndex &parent = QModelIndex()) const override;\n \n protected:\n-    bool filterAcceptsRow(int source_row, const QModelIndex & source_parent) const;\n+    bool filterAcceptsRow(int source_row, const QModelIndex & source_parent) const override;\n \n private:\n     QDateTime dateFrom;"
      },
      {
        "sha": "197f8c7f180c34b81e452dc3428371ea9ef0483a",
        "filename": "src/qt/transactiontablemodel.h",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/transactiontablemodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/345830f83ad704bbf7edaaf374882039dc60177b/src/qt/transactiontablemodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiontablemodel.h?ref=345830f83ad704bbf7edaaf374882039dc60177b",
        "patch": "@@ -76,11 +76,15 @@ class TransactionTableModel : public QAbstractTableModel\n         RawDecorationRole,\n     };\n \n-    int rowCount(const QModelIndex &parent) const;\n-    int columnCount(const QModelIndex &parent) const;\n-    QVariant data(const QModelIndex &index, int role) const;\n-    QVariant headerData(int section, Qt::Orientation orientation, int role) const;\n-    QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const;\n+    /** @name Methods overridden from QAbstractTableModel\n+        @{*/\n+    int rowCount(const QModelIndex &parent) const override;\n+    int columnCount(const QModelIndex &parent) const override;\n+    QVariant data(const QModelIndex &index, int role) const override;\n+    QVariant headerData(int section, Qt::Orientation orientation, int role) const override;\n+    QModelIndex index(int row, int column, const QModelIndex & parent = QModelIndex()) const override;\n+    /*@}*/\n+\n     bool processingQueuedTransactions() const { return fProcessingQueuedTransactions; }\n \n private:"
      }
    ]
  }
]