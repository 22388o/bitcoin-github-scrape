[
  {
    "sha": "faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWYxYzNjYzU4ZDE0Zjg2YmE1MzY0ZTZlZTVjOGVmMjljYWMyZTI2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-19T11:12:22Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-21T11:47:46Z"
      },
      "message": "test: Replace TEST_PREVIOUS_RELEASES env var with test_framework option",
      "tree": {
        "sha": "12d2cf0b282c05027c0ae1cc5bd2d1ffe8ef1139",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/12d2cf0b282c05027c0ae1cc5bd2d1ffe8ef1139"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj8/Av/alPb/XbmUZ7HN0dg4bQwd0YAhTxX2ogV+7WsGoVll6p0MOKOa9FJDwWF\ncLVaYTHnC3rtJtp9v6lqhDueff5akJIbTJ6Xs5XbNf+n33ZtYopu+hISxZxXN/xE\nHJkL/+mdMQDxUJTcw69JH6jQtMtWQfUY8iM25HgmRLmW4EYupKIQHty7W+tHVHy/\ns3hFxAnX9WeOfZgvUu9AfBca3AyYy2KPMHidGplcV9fG5hDGPmJ9fnwh7L2TW0su\nxD0O0zgTn8y21lgDJsKk6/IL4ZA0YOeTA56a55yzuGftlKboX30BfsdeBqSq1l1B\nGwrl0l8u8GYuHw15meViOOSc/LdhCwvXaPcxHWzjzEcMzRMLGl+fLDNmcddkFz2K\nyJgYOuH5Lq8LlHYhNDX0TssiYVjzLjCcY6wYrFhYEbhJhD7ShZyKHYNtCYPgNS6w\n4nDSS0ck3HVExA9cl2WeLckJnwQBc5jG+BTwAdL623XsBMuG6YjZjlUR6v97g/2t\ndhC0lOrU\n=/tVw\n-----END PGP SIGNATURE-----",
        "payload": "tree 12d2cf0b282c05027c0ae1cc5bd2d1ffe8ef1139\nparent 25ad2c623af30056ffb36dcd203a52edda2b170f\nauthor MarcoFalke <falke.marco@gmail.com> 1589886742 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590061666 -0400\n\ntest: Replace TEST_PREVIOUS_RELEASES env var with test_framework option\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25ad2c623af30056ffb36dcd203a52edda2b170f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25ad2c623af30056ffb36dcd203a52edda2b170f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25ad2c623af30056ffb36dcd203a52edda2b170f"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 12,
      "deletions": 17
    },
    "files": [
      {
        "sha": "56b8fc976e4e494fae71190b0b955c7eda8e4db6",
        "filename": "ci/test/00_setup_env.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/00_setup_env.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/00_setup_env.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env.sh?ref=faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "patch": "@@ -33,7 +33,6 @@ export HOST=${HOST:-$(\"$BASE_ROOT_DIR/depends/config.guess\")}\n export USE_BUSY_BOX=${USE_BUSY_BOX:-false}\n export RUN_UNIT_TESTS=${RUN_UNIT_TESTS:-true}\n export RUN_FUNCTIONAL_TESTS=${RUN_FUNCTIONAL_TESTS:-true}\n-export TEST_PREVIOUS_RELEASES=${TEST_PREVIOUS_RELEASES:-false}\n export TEST_RUNNER_ENV=${TEST_RUNNER_ENV:-}\n export RUN_FUZZ_TESTS=${RUN_FUZZ_TESTS:-false}\n export CONTAINER_NAME=${CONTAINER_NAME:-ci_unnamed}"
      },
      {
        "sha": "fa07990756024f8645d72977c5d145a2f223a156",
        "filename": "ci/test/00_setup_env_native_qt5.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/00_setup_env_native_qt5.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/00_setup_env_native_qt5.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/00_setup_env_native_qt5.sh?ref=faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "patch": "@@ -9,10 +9,9 @@ export LC_ALL=C.UTF-8\n export CONTAINER_NAME=ci_native_qt5\n export PACKAGES=\"python3-zmq qtbase5-dev qttools5-dev-tools libdbus-1-dev libharfbuzz-dev\"\n export DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1 ALLOW_HOST_PACKAGES=1\"\n-export TEST_RUNNER_EXTRA=\"--coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n+export TEST_RUNNER_EXTRA=\"--previous-releases --coverage --extended --exclude feature_dbcrash\"  # Run extended tests so that coverage does not fail, but exclude the very slow dbcrash\n export RUN_UNIT_TESTS_SEQUENTIAL=\"true\"\n export RUN_UNIT_TESTS=\"false\"\n export GOAL=\"install\"\n-export TEST_PREVIOUS_RELEASES=true\n export PREVIOUS_RELEASES_TO_DOWNLOAD=\"v0.15.2 v0.16.3 v0.17.1 v0.18.1 v0.19.1\"\n export BITCOIN_CONFIG=\"--enable-zmq --with-gui=qt5 --enable-glibc-back-compat --enable-reduce-exports --enable-c++17 --enable-debug CFLAGS=\\\"-g0 -O2 -funsigned-char\\\" CXXFLAGS=\\\"-g0 -O2 -funsigned-char\\\"\""
      },
      {
        "sha": "14ab943d6899cd5ccaab72624c25b0601359fb11",
        "filename": "ci/test/04_install.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/04_install.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/ci/test/04_install.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/ci/test/04_install.sh?ref=faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "patch": "@@ -26,7 +26,7 @@ export ASAN_OPTIONS=\"detect_stack_use_after_return=1:check_initialization_order=\n export LSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/lsan\"\n export TSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/tsan:log_path=${BASE_SCRATCH_DIR}/sanitizer-output/tsan\"\n export UBSAN_OPTIONS=\"suppressions=${BASE_ROOT_DIR}/test/sanitizer_suppressions/ubsan:print_stacktrace=1:halt_on_error=1:report_error_type=1\"\n-env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|TEST_PREVIOUS_RELEASES|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n+env | grep -E '^(BITCOIN_CONFIG|BASE_|QEMU_|CCACHE_|LC_ALL|BOOST_TEST_RANDOM|DEBIAN_FRONTEND|CONFIG_SHELL|(ASAN|LSAN|TSAN|UBSAN)_OPTIONS|PREVIOUS_RELEASES_DIR)' | tee /tmp/env\n if [[ $HOST = *-mingw32 ]]; then\n   DOCKER_ADMIN=\"--cap-add SYS_ADMIN\"\n elif [[ $BITCOIN_CONFIG = *--with-sanitizers=*address* ]]; then # If ran with (ASan + LSan), Docker needs access to ptrace (https://github.com/google/sanitizers/issues/764)"
      },
      {
        "sha": "45bca63c94035a06f322c9d8d4d658bcc8b472a2",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 10,
        "deletions": 13,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "patch": "@@ -140,6 +140,7 @@ def main(self):\n             sys.exit(exit_code)\n \n     def parse_args(self):\n+        previous_releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n         parser = argparse.ArgumentParser(usage=\"%(prog)s [options]\")\n         parser.add_argument(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n                             help=\"Leave bitcoinds and test.* datadir on exit or error\")\n@@ -154,6 +155,9 @@ def parse_args(self):\n                             help=\"Print out all RPC calls as they are made\")\n         parser.add_argument(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type=int,\n                             help=\"The seed to use for assigning port numbers (default: current process id)\")\n+        parser.add_argument(\"--previous-releases\", dest=\"prev_releases\", action=\"store_true\",\n+                            default=os.path.isdir(previous_releases_path),\n+                            help=\"Force test of previous releases (default: %(default)s)\")\n         parser.add_argument(\"--coveragedir\", dest=\"coveragedir\",\n                             help=\"Write tested RPC commands into this directory\")\n         parser.add_argument(\"--configfile\", dest=\"configfile\",\n@@ -174,6 +178,7 @@ def parse_args(self):\n         parser.add_argument('--timeout-factor', dest=\"timeout_factor\", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables all timeouts')\n         self.add_options(parser)\n         self.options = parser.parse_args()\n+        self.options.previous_releases_path = previous_releases_path\n \n     def setup(self):\n         \"\"\"Call this method to start up the test framework object with options set.\"\"\"\n@@ -190,18 +195,16 @@ def setup(self):\n         fname_bitcoind = os.path.join(\n             config[\"environment\"][\"BUILDDIR\"],\n             \"src\",\n-            \"bitcoind\" + config[\"environment\"][\"EXEEXT\"]\n+            \"bitcoind\" + config[\"environment\"][\"EXEEXT\"],\n         )\n         fname_bitcoincli = os.path.join(\n             config[\"environment\"][\"BUILDDIR\"],\n             \"src\",\n-            \"bitcoin-cli\" + config[\"environment\"][\"EXEEXT\"]\n+            \"bitcoin-cli\" + config[\"environment\"][\"EXEEXT\"],\n         )\n         self.options.bitcoind = os.getenv(\"BITCOIND\", default=fname_bitcoind)\n         self.options.bitcoincli = os.getenv(\"BITCOINCLI\", default=fname_bitcoincli)\n \n-        self.options.previous_releases_path = os.getenv(\"PREVIOUS_RELEASES_DIR\") or os.getcwd() + \"/releases\"\n-\n         os.environ['PATH'] = os.pathsep.join([\n             os.path.join(config['environment']['BUILDDIR'], 'src'),\n             os.path.join(config['environment']['BUILDDIR'], 'src', 'qt'), os.environ['PATH']\n@@ -684,17 +687,11 @@ def skip_if_no_previous_releases(self):\n \n     def has_previous_releases(self):\n         \"\"\"Checks whether previous releases are present and enabled.\"\"\"\n-        if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"false\":\n-            # disabled\n-            return False\n-\n         if not os.path.isdir(self.options.previous_releases_path):\n-            if os.getenv(\"TEST_PREVIOUS_RELEASES\") == \"true\":\n-                raise AssertionError(\"TEST_PREVIOUS_RELEASES=true but releases missing: {}\".format(\n+            if self.options.prev_releases:\n+                raise AssertionError(\"Force test of previous releases but releases missing: {}\".format(\n                     self.options.previous_releases_path))\n-            # missing\n-            return False\n-        return True\n+        return self.options.prev_releases\n \n     def is_cli_compiled(self):\n         \"\"\"Checks whether bitcoin-cli was compiled.\"\"\""
      }
    ]
  },
  {
    "sha": "fad798be76dd5e330463c837fda768477d536078",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ3OThiZTc2ZGQ1ZTMzMDQ2M2M4MzdmZGE3Njg0NzdkNTM2MDc4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-19T15:08:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-21T11:48:06Z"
      },
      "message": "test: Default --previous-releases to false if dir is empty",
      "tree": {
        "sha": "e625cfdc467873959123dc7aad0f96a2f5f2c17c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e625cfdc467873959123dc7aad0f96a2f5f2c17c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad798be76dd5e330463c837fda768477d536078",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUinigv/X2V24sAG2Ii0Q46rjXnnzDEKCck2L10k01xDzeZatTe4ZhdJz6W0xGxi\nlocoLm/719XBLMFJPcPKGQ1x7M+sa9WpdQ4NRXtRAVPZjQngLdXp0fEEjoO0Q/gv\nj98MUEiyDT4E1sExrpu6ggsWPyOLMMkNrb7QuTwaheNxwzxRpqDmlD7BzMe5fz7Q\nZVXH352pk2g/RN+JGvWR31KqDfbw5UokeMJ/o/4KhPnZJZdWw4KCy/2LHbqzJZqf\ntfA0QdAMXCJ1X0seq9/Ieh+muU5rwYStdcb/M9808aO3iAa7VN+1V1sKDHeI7hqp\n9Ae9SYGYj7wJ9dZatAbnJi/144PpnyzSH+nYDLiYAVHMZMIvDixn5TzCidy/GBme\nFAI98nkHApZV6YRwDOyGdRlrgG2RLk7M9XKzunjXwtdLI2/9qDGYTe/MN60mnbMH\nAuGXTwJmcJt8r9JLO8FDJIDawSXfQlJaO6wz98+zqUSopql/tQsqST7YFiJ2kWrQ\n49pZX7I9\n=f669\n-----END PGP SIGNATURE-----",
        "payload": "tree e625cfdc467873959123dc7aad0f96a2f5f2c17c\nparent faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26\nauthor MarcoFalke <falke.marco@gmail.com> 1589900931 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590061686 -0400\n\ntest: Default --previous-releases to false if dir is empty\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad798be76dd5e330463c837fda768477d536078",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad798be76dd5e330463c837fda768477d536078",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad798be76dd5e330463c837fda768477d536078/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/faf1c3cc58d14f86ba5364e6ee5c8ef29cac2e26"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "716fa1d8452d4742699d1d246473f695c309e6cc",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad798be76dd5e330463c837fda768477d536078/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad798be76dd5e330463c837fda768477d536078/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=fad798be76dd5e330463c837fda768477d536078",
        "patch": "@@ -156,7 +156,7 @@ def parse_args(self):\n         parser.add_argument(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type=int,\n                             help=\"The seed to use for assigning port numbers (default: current process id)\")\n         parser.add_argument(\"--previous-releases\", dest=\"prev_releases\", action=\"store_true\",\n-                            default=os.path.isdir(previous_releases_path),\n+                            default=os.path.isdir(previous_releases_path) and bool(os.listdir(previous_releases_path)),\n                             help=\"Force test of previous releases (default: %(default)s)\")\n         parser.add_argument(\"--coveragedir\", dest=\"coveragedir\",\n                             help=\"Write tested RPC commands into this directory\")"
      }
    ]
  }
]