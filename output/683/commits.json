[
  {
    "sha": "c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNzVhYmM5ZjdlODRkZDE2YzlmNzQ4ODAyZmQ4MmFiMmM0OWVjNTU4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-11-12T11:20:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-23T11:07:23Z"
      },
      "message": "Comments update",
      "tree": {
        "sha": "c480abf16425cf35d93eb354dd2d16655880d3af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c480abf16425cf35d93eb354dd2d16655880d3af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "96b1e085c345f9d89288e1c7dfb37fcdbc09c083",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/96b1e085c345f9d89288e1c7dfb37fcdbc09c083",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/96b1e085c345f9d89288e1c7dfb37fcdbc09c083"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "894bbb9d1eb466717f50a4ae56fdeb1d1d3f915f",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
        "patch": "@@ -114,6 +114,7 @@ std::string _(const char* psz)\n \n int main(int argc, char *argv[])\n {\n+    // Internal string conversion is all UTF-8\n     QTextCodec::setCodecForTr(QTextCodec::codecForName(\"UTF-8\"));\n     QTextCodec::setCodecForCStrings(QTextCodec::codecForTr());\n "
      },
      {
        "sha": "d4ce8a79e1fdccd3165dfd1065486dd80fc657c2",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
        "patch": "@@ -112,7 +112,6 @@ BitcoinGUI::BitcoinGUI(QWidget *parent):\n \n     // Status bar notification icons\n     QFrame *frameBlocks = new QFrame();\n-    //frameBlocks->setFrameStyle(QFrame::Panel | QFrame::Sunken);\n     frameBlocks->setContentsMargins(0,0,0,0);\n     frameBlocks->setMinimumWidth(56);\n     frameBlocks->setMaximumWidth(56);"
      },
      {
        "sha": "0e1b22e01b40834a6f7d96aae79e325c74956a00",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c75abc9f7e84dd16c9f748802fd82ab2c49ec558/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
        "patch": "@@ -100,7 +100,6 @@ TransactionView::TransactionView(QWidget *parent) :\n     QVBoxLayout *vlayout = new QVBoxLayout(this);\n     vlayout->setContentsMargins(0,0,0,0);\n     vlayout->setSpacing(0);\n-    //vlayout->addLayout(hlayout2);\n \n     QTableView *view = new QTableView(this);\n     vlayout->addLayout(hlayout);"
      }
    ]
  },
  {
    "sha": "e0734571912736356839fde75fd10993b0df81d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDczNDU3MTkxMjczNjM1NjgzOWZkZTc1ZmQxMDk5M2IwZGY4MWQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-11-11T09:13:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-23T11:07:23Z"
      },
      "message": "Move HtmlEscape (escape for qt rich text controls) to qt gui utilities",
      "tree": {
        "sha": "d8507706ef7131954cacf74993a4c31fca225381",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d8507706ef7131954cacf74993a4c31fca225381"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0734571912736356839fde75fd10993b0df81d5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0734571912736356839fde75fd10993b0df81d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0734571912736356839fde75fd10993b0df81d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0734571912736356839fde75fd10993b0df81d5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c75abc9f7e84dd16c9f748802fd82ab2c49ec558",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c75abc9f7e84dd16c9f748802fd82ab2c49ec558"
      }
    ],
    "stats": {
      "total": 61,
      "additions": 31,
      "deletions": 30
    },
    "files": [
      {
        "sha": "08d7774067a13ffa84831c4f9e83256bbbda6d56",
        "filename": "src/qt/aboutdialog.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0734571912736356839fde75fd10993b0df81d5/src/qt/aboutdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0734571912736356839fde75fd10993b0df81d5/src/qt/aboutdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/aboutdialog.cpp?ref=e0734571912736356839fde75fd10993b0df81d5",
        "patch": "@@ -7,7 +7,6 @@ AboutDialog::AboutDialog(QWidget *parent) :\n     ui(new Ui::AboutDialog)\n {\n     ui->setupUi(this);\n-\n }\n \n void AboutDialog::setModel(ClientModel *model)"
      },
      {
        "sha": "f72fe1ef4bc18aef85b98220ddf45c0c70d6ec43",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0734571912736356839fde75fd10993b0df81d5/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0734571912736356839fde75fd10993b0df81d5/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=e0734571912736356839fde75fd10993b0df81d5",
        "patch": "@@ -11,6 +11,7 @@\n #include <QFont>\n #include <QLineEdit>\n #include <QUrl>\n+#include <QTextDocument> // For Qt::escape\n \n QString GUIUtil::dateTimeStr(qint64 nTime)\n {\n@@ -72,3 +73,18 @@ bool GUIUtil::parseBitcoinURL(const QUrl *url, SendCoinsRecipient *out)\n     }\n     return true;\n }\n+\n+QString GUIUtil::HtmlEscape(const QString& str, bool fMultiLine)\n+{\n+    QString escaped = Qt::escape(str);\n+    if(fMultiLine)\n+    {\n+        escaped = escaped.replace(\"\\n\", \"<br>\\n\");\n+    }\n+    return escaped;\n+}\n+\n+QString GUIUtil::HtmlEscape(const std::string& str, bool fMultiLine)\n+{\n+    return HtmlEscape(QString::fromStdString(str), fMultiLine);\n+}"
      },
      {
        "sha": "acd327728d7c31a6dd69f8e043ad70b3d17bf242",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0734571912736356839fde75fd10993b0df81d5/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0734571912736356839fde75fd10993b0df81d5/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=e0734571912736356839fde75fd10993b0df81d5",
        "patch": "@@ -31,6 +31,10 @@ class GUIUtil\n     // Parse \"bitcoin:\" URL into recipient object, return true on succesful parsing\n     // See Bitcoin URL definition discussion here: https://bitcointalk.org/index.php?topic=33490.0\n     static bool parseBitcoinURL(const QUrl *url, SendCoinsRecipient *out);\n+\n+    // HTML escaping for rich text controls\n+    static QString HtmlEscape(const QString& str, bool fMultiLine=false);\n+    static QString HtmlEscape(const std::string& str, bool fMultiLine=false);\n };\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "8de63c1dee274b29455b23b59cc3bf5e41cb0b03",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 27,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0734571912736356839fde75fd10993b0df81d5/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0734571912736356839fde75fd10993b0df81d5/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=e0734571912736356839fde75fd10993b0df81d5",
        "patch": "@@ -7,25 +7,9 @@\n #include \"qtui.h\"\n \n #include <QString>\n-#include <QTextDocument> // For Qt::escape\n \n using namespace std;\n \n-QString TransactionDesc::HtmlEscape(const QString& str, bool fMultiLine)\n-{\n-    QString escaped = Qt::escape(str);\n-    if(fMultiLine)\n-    {\n-        escaped = escaped.replace(\"\\n\", \"<br>\\n\");\n-    }\n-    return escaped;\n-}\n-\n-QString TransactionDesc::HtmlEscape(const std::string& str, bool fMultiLine)\n-{\n-    return HtmlEscape(QString::fromStdString(str), fMultiLine);\n-}\n-\n QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n {\n     if (!wtx.IsFinal())\n@@ -86,7 +70,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n         {\n             // Online transaction\n             if (!wtx.mapValue[\"from\"].empty())\n-                strHTML += tr(\"<b>From:</b> \") + HtmlEscape(wtx.mapValue[\"from\"]) + \"<br>\";\n+                strHTML += tr(\"<b>From:</b> \") + GUIUtil::HtmlEscape(wtx.mapValue[\"from\"]) + \"<br>\";\n         }\n         else\n         {\n@@ -105,9 +89,9 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                             {\n                                 strHTML += tr(\"<b>From:</b> \") + tr(\"unknown\") + \"<br>\";\n                                 strHTML += tr(\"<b>To:</b> \");\n-                                strHTML += HtmlEscape(address.ToString());\n+                                strHTML += GUIUtil::HtmlEscape(address.ToString());\n                                 if (!wallet->mapAddressBook[address].empty())\n-                                    strHTML += tr(\" (yours, label: \") + HtmlEscape(wallet->mapAddressBook[address]) + \")\";\n+                                    strHTML += tr(\" (yours, label: \") + GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \")\";\n                                 else\n                                     strHTML += tr(\" (yours)\");\n                                 strHTML += \"<br>\";\n@@ -129,8 +113,8 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n             strAddress = wtx.mapValue[\"to\"];\n             strHTML += tr(\"<b>To:</b> \");\n             if (wallet->mapAddressBook.count(strAddress) && !wallet->mapAddressBook[strAddress].empty())\n-                strHTML += HtmlEscape(wallet->mapAddressBook[strAddress]) + \" \";\n-            strHTML += HtmlEscape(strAddress) + \"<br>\";\n+                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[strAddress]) + \" \";\n+            strHTML += GUIUtil::HtmlEscape(strAddress) + \"<br>\";\n         }\n \n         //\n@@ -188,8 +172,8 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                         {\n                             strHTML += tr(\"<b>To:</b> \");\n                             if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].empty())\n-                                strHTML += HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n-                            strHTML += HtmlEscape(address.ToString());\n+                                strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n+                            strHTML += GUIUtil::HtmlEscape(address.ToString());\n                             strHTML += \"<br>\";\n                         }\n                     }\n@@ -230,9 +214,9 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n         // Message\n         //\n         if (!wtx.mapValue[\"message\"].empty())\n-            strHTML += QString(\"<br><b>\") + tr(\"Message:\") + \"</b><br>\" + HtmlEscape(wtx.mapValue[\"message\"], true) + \"<br>\";\n+            strHTML += QString(\"<br><b>\") + tr(\"Message:\") + \"</b><br>\" + GUIUtil::HtmlEscape(wtx.mapValue[\"message\"], true) + \"<br>\";\n         if (!wtx.mapValue[\"comment\"].empty())\n-            strHTML += QString(\"<br><b>\") + tr(\"Comment:\") + \"</b><br>\" + HtmlEscape(wtx.mapValue[\"comment\"], true) + \"<br>\";\n+            strHTML += QString(\"<br><b>\") + tr(\"Comment:\") + \"</b><br>\" + GUIUtil::HtmlEscape(wtx.mapValue[\"comment\"], true) + \"<br>\";\n \n         if (wtx.IsCoinBase())\n             strHTML += QString(\"<br>\") + tr(\"Generated coins must wait 120 blocks before they can be spent.  When you generated this block, it was broadcast to the network to be added to the block chain.  If it fails to get into the chain, it will change to \\\"not accepted\\\" and not be spendable.  This may occasionally happen if another node generates a block within a few seconds of yours.\") + \"<br>\";\n@@ -251,7 +235,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                     strHTML += \"<b>Credit:</b> \" + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC,wallet->GetCredit(txout)) + \"<br>\";\n \n             strHTML += \"<br><b>Transaction:</b><br>\";\n-            strHTML += HtmlEscape(wtx.ToString(), true);\n+            strHTML += GUIUtil::HtmlEscape(wtx.ToString(), true);\n \n             CTxDB txdb(\"r\"); // To fetch source txouts\n \n@@ -274,7 +258,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx)\n                             if (ExtractAddress(vout.scriptPubKey, address))\n                             {\n                                 if (wallet->mapAddressBook.count(address) && !wallet->mapAddressBook[address].empty())\n-                                    strHTML += HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n+                                    strHTML += GUIUtil::HtmlEscape(wallet->mapAddressBook[address]) + \" \";\n                                 strHTML += QString::fromStdString(address.ToString());\n                             }\n                             strHTML = strHTML + \" Amount=\" + BitcoinUnits::formatWithUnit(BitcoinUnits::BTC,vout.nValue);"
      },
      {
        "sha": "2523f9aa6927e3a88b509d0da37731c9c2e479fc",
        "filename": "src/qt/transactiondesc.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0734571912736356839fde75fd10993b0df81d5/src/qt/transactiondesc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0734571912736356839fde75fd10993b0df81d5/src/qt/transactiondesc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.h?ref=e0734571912736356839fde75fd10993b0df81d5",
        "patch": "@@ -18,8 +18,6 @@ class TransactionDesc: public QObject\n private:\n     TransactionDesc() {}\n \n-    static QString HtmlEscape(const QString& str, bool fMultiLine=false);\n-    static QString HtmlEscape(const std::string &str, bool fMultiLine=false);\n     static QString FormatTxStatus(const CWalletTx& wtx);\n };\n "
      }
    ]
  },
  {
    "sha": "c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGE0YTRiODg2YjNiZDg5MzNjZjk2YzBkNjZkNjQ3YTJiMzJhNjhi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-04T17:01:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-23T11:07:23Z"
      },
      "message": "Add context menu for address book page (implements part 1 of issue #648)",
      "tree": {
        "sha": "1758227059c8a6bb095d273f2022f0e4355e899a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1758227059c8a6bb095d273f2022f0e4355e899a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0734571912736356839fde75fd10993b0df81d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0734571912736356839fde75fd10993b0df81d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0734571912736356839fde75fd10993b0df81d5"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 69,
      "deletions": 10
    },
    "files": [
      {
        "sha": "91412fcc18d3d87245c5005e71eddddda5a954a0",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 58,
        "deletions": 10,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
        "patch": "@@ -4,11 +4,13 @@\n #include \"addresstablemodel.h\"\n #include \"editaddressdialog.h\"\n #include \"csvmodelwriter.h\"\n+#include \"guiutil.h\"\n \n #include <QSortFilterProxyModel>\n #include <QClipboard>\n #include <QFileDialog>\n #include <QMessageBox>\n+#include <QMenu>\n \n #ifdef USE_QRCODE\n #include \"qrcodedialog.h\"\n@@ -53,7 +55,28 @@ AddressBookPage::AddressBookPage(Mode mode, Tabs tab, QWidget *parent) :\n         break;\n     }\n     ui->tableView->setTabKeyNavigation(false);\n+    ui->tableView->setContextMenuPolicy(Qt::CustomContextMenu);\n \n+    // Context menu actions\n+    QAction *copyAddressAction = new QAction(tr(\"Copy address\"), this);\n+    QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n+    QAction *editAction = new QAction(tr(\"Edit\"), this);\n+    deleteAction = new QAction(tr(\"Delete\"), this);\n+\n+    contextMenu = new QMenu();\n+    contextMenu->addAction(copyAddressAction);\n+    contextMenu->addAction(copyLabelAction);\n+    contextMenu->addAction(editAction);\n+    contextMenu->addAction(deleteAction);\n+\n+    connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(on_copyToClipboard_clicked()));\n+    connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(onCopyLabelAction()));\n+    connect(editAction, SIGNAL(triggered()), this, SLOT(onEditAction()));\n+    connect(deleteAction, SIGNAL(triggered()), this, SLOT(on_deleteButton_clicked()));\n+\n+    connect(ui->tableView, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n+\n+    // Pass through accept action from button box\n     connect(ui->buttonBox, SIGNAL(accepted()), this, SLOT(accept()));\n }\n \n@@ -108,18 +131,29 @@ void AddressBookPage::setModel(AddressTableModel *model)\n \n void AddressBookPage::on_copyToClipboard_clicked()\n {\n-    // Copy currently selected address to clipboard\n-    //   (or nothing, if nothing selected)\n-    QTableView *table = ui->tableView;\n-    if(!table->selectionModel())\n+    GUIUtil::copyEntryData(ui->tableView, AddressTableModel::Address);\n+}\n+void AddressBookPage::onCopyLabelAction()\n+{\n+    GUIUtil::copyEntryData(ui->tableView, AddressTableModel::Label);\n+}\n+\n+void AddressBookPage::onEditAction()\n+{\n+    if(!ui->tableView->selectionModel())\n+        return;\n+    QModelIndexList indexes = ui->tableView->selectionModel()->selectedRows();\n+    if(indexes.isEmpty())\n         return;\n-    QModelIndexList indexes = table->selectionModel()->selectedRows(AddressTableModel::Address);\n \n-    foreach (QModelIndex index, indexes)\n-    {\n-        QVariant address = index.data();\n-        QApplication::clipboard()->setText(address.toString());\n-    }\n+    EditAddressDialog dlg(\n+            tab == SendingTab ?\n+            EditAddressDialog::EditSendingAddress :\n+            EditAddressDialog::EditReceivingAddress);\n+    dlg.setModel(model);\n+    QModelIndex origIndex = proxyModel->mapToSource(indexes.at(0));\n+    dlg.loadRow(origIndex.row());\n+    dlg.exec();\n }\n \n void AddressBookPage::on_newAddressButton_clicked()\n@@ -170,10 +204,14 @@ void AddressBookPage::selectionChanged()\n         switch(tab)\n         {\n         case SendingTab:\n+            // In sending tab, allow deletion of selection\n             ui->deleteButton->setEnabled(true);\n+            deleteAction->setEnabled(true);\n             break;\n         case ReceivingTab:\n+            // Deleting receiving addresses, however, is not allowed\n             ui->deleteButton->setEnabled(false);\n+            deleteAction->setEnabled(false);\n             break;\n         }\n         ui->copyToClipboard->setEnabled(true);\n@@ -207,6 +245,7 @@ void AddressBookPage::done(int retval)\n \n     if(returnValue.isEmpty())\n     {\n+        // If no address entry selected, return rejected\n         retval = Rejected;\n     }\n \n@@ -257,3 +296,12 @@ void AddressBookPage::on_showQRCode_clicked()\n     }\n #endif\n }\n+\n+void AddressBookPage::contextualMenu(const QPoint &point)\n+{\n+    QModelIndex index = ui->tableView->indexAt(point);\n+    if(index.isValid())\n+    {\n+        contextMenu->exec(QCursor::pos());\n+    }\n+}"
      },
      {
        "sha": "6b08f8415b6667b7e362823e9a5a7321703e08fa",
        "filename": "src/qt/addressbookpage.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b/src/qt/addressbookpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b/src/qt/addressbookpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.h?ref=c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
        "patch": "@@ -12,6 +12,7 @@ QT_BEGIN_NAMESPACE\n class QTableView;\n class QItemSelection;\n class QSortFilterProxyModel;\n+class QMenu;\n QT_END_NAMESPACE\n \n /** Widget that shows a list of sending or receiving addresses.\n@@ -48,13 +49,23 @@ public slots:\n     Tabs tab;\n     QString returnValue;\n     QSortFilterProxyModel *proxyModel;\n+    QMenu *contextMenu;\n+    QAction *deleteAction;\n \n private slots:\n     void on_deleteButton_clicked();\n     void on_newAddressButton_clicked();\n+    /** Copy address of currently selected address entry to clipboard */\n     void on_copyToClipboard_clicked();\n     void selectionChanged();\n     void on_showQRCode_clicked();\n+    /** Spawn contextual menu (right mouse menu) for address book entry */\n+    void contextualMenu(const QPoint &point);\n+\n+    /** Copy label of currently selected address entry to clipboard */\n+    void onCopyLabelAction();\n+    /** Edit currently selected address entry */\n+    void onEditAction();\n };\n \n #endif // ADDRESSBOOKDIALOG_H"
      }
    ]
  },
  {
    "sha": "c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNThlN2Q0ZTAxM2YyMWUzOGZiMTUwMWQ4OTZkMzJlODQwN2E5YzNj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-04T13:14:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2011-12-23T11:07:23Z"
      },
      "message": "Copy amount to clipboard (implements #657)\n- Also, unify similar code related to copying transaction fields to clipboard",
      "tree": {
        "sha": "8e24786b335c0316bb9929864407b9fa7303c98a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e24786b335c0316bb9929864407b9fa7303c98a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4a4a4b886b3bd8933cf96c0d66d647a2b32a68b"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 43,
      "deletions": 23
    },
    "files": [
      {
        "sha": "22d9cc7384852ea5c04f8ef7e9799825cba74d66",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
        "patch": "@@ -12,6 +12,9 @@\n #include <QLineEdit>\n #include <QUrl>\n #include <QTextDocument> // For Qt::escape\n+#include <QAbstractItemView>\n+#include <QApplication>\n+#include <QClipboard>\n \n QString GUIUtil::dateTimeStr(qint64 nTime)\n {\n@@ -88,3 +91,16 @@ QString GUIUtil::HtmlEscape(const std::string& str, bool fMultiLine)\n {\n     return HtmlEscape(QString::fromStdString(str), fMultiLine);\n }\n+\n+void GUIUtil::copyEntryData(QAbstractItemView *view, int column, int role)\n+{\n+    if(!view || !view->selectionModel())\n+        return;\n+    QModelIndexList selection = view->selectionModel()->selectedRows(column);\n+\n+    if(!selection.isEmpty())\n+    {\n+        // Copy first item\n+        QApplication::clipboard()->setText(selection.at(0).data(role).toString());\n+    }\n+}"
      },
      {
        "sha": "3a81bd2f003d3443666a72395a0d07a7adf00e90",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
        "patch": "@@ -9,6 +9,7 @@ class QLineEdit;\n class QWidget;\n class QDateTime;\n class QUrl;\n+class QAbstractItemView;\n QT_END_NAMESPACE\n class SendCoinsRecipient;\n \n@@ -35,6 +36,15 @@ class GUIUtil\n     // HTML escaping for rich text controls\n     static QString HtmlEscape(const QString& str, bool fMultiLine=false);\n     static QString HtmlEscape(const std::string& str, bool fMultiLine=false);\n+\n+    /** Copy a field of the currently selected entry of a view to the clipboard. Does nothing if nothing\n+        is selected.\n+       @param[in] column  Data column to extract from the model\n+       @param[in] role    Data role to extract from the model\n+       @see  TransactionView::copyLabel, TransactionView::copyAmount, TransactionView::copyAddress\n+     */\n+    static void copyEntryData(QAbstractItemView *view, int column, int role=Qt::EditRole);\n+\n };\n \n #endif // GUIUTIL_H"
      },
      {
        "sha": "cba06298d4a904f84eaa34907f105a956a99b762",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 19,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
        "patch": "@@ -10,6 +10,7 @@\n #include \"transactiondescdialog.h\"\n #include \"editaddressdialog.h\"\n #include \"optionsmodel.h\"\n+#include \"guiutil.h\"\n \n #include <QScrollBar>\n #include <QComboBox>\n@@ -123,12 +124,14 @@ TransactionView::TransactionView(QWidget *parent) :\n     // Actions\n     QAction *copyAddressAction = new QAction(tr(\"Copy address\"), this);\n     QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n+    QAction *copyAmountAction = new QAction(tr(\"Copy amount\"), this);\n     QAction *editLabelAction = new QAction(tr(\"Edit label\"), this);\n     QAction *showDetailsAction = new QAction(tr(\"Show details...\"), this);\n \n     contextMenu = new QMenu();\n     contextMenu->addAction(copyAddressAction);\n     contextMenu->addAction(copyLabelAction);\n+    contextMenu->addAction(copyAmountAction);\n     contextMenu->addAction(editLabelAction);\n     contextMenu->addAction(showDetailsAction);\n \n@@ -139,14 +142,11 @@ TransactionView::TransactionView(QWidget *parent) :\n     connect(amountWidget, SIGNAL(textChanged(QString)), this, SLOT(changedAmount(QString)));\n \n     connect(view, SIGNAL(doubleClicked(QModelIndex)), this, SIGNAL(doubleClicked(QModelIndex)));\n-\n-    connect(view,\n-            SIGNAL(customContextMenuRequested(QPoint)),\n-            this,\n-            SLOT(contextualMenu(QPoint)));\n+    connect(view, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n \n     connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n     connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n+    connect(copyAmountAction, SIGNAL(triggered()), this, SLOT(copyAmount()));\n     connect(editLabelAction, SIGNAL(triggered()), this, SLOT(editLabel()));\n     connect(showDetailsAction, SIGNAL(triggered()), this, SLOT(showDetails()));\n }\n@@ -302,24 +302,17 @@ void TransactionView::contextualMenu(const QPoint &point)\n \n void TransactionView::copyAddress()\n {\n-    if(!transactionView->selectionModel())\n-        return;\n-    QModelIndexList selection = transactionView->selectionModel()->selectedRows();\n-    if(!selection.isEmpty())\n-    {\n-        QApplication::clipboard()->setText(selection.at(0).data(TransactionTableModel::AddressRole).toString());\n-    }\n+    GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::AddressRole);\n }\n \n void TransactionView::copyLabel()\n {\n-    if(!transactionView->selectionModel())\n-        return;\n-    QModelIndexList selection = transactionView->selectionModel()->selectedRows();\n-    if(!selection.isEmpty())\n-    {\n-        QApplication::clipboard()->setText(selection.at(0).data(TransactionTableModel::LabelRole).toString());\n-    }\n+    GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::LabelRole);\n+}\n+\n+void TransactionView::copyAmount()\n+{\n+    GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::FormattedAmountRole);\n }\n \n void TransactionView::editLabel()"
      },
      {
        "sha": "bc6e1e4e05bf72720d818e84c8c01e9f8ff983ac",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c58e7d4e013f21e38fb1501d896d32e8407a9c3c/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=c58e7d4e013f21e38fb1501d896d32e8407a9c3c",
        "patch": "@@ -60,6 +60,11 @@ class TransactionView : public QWidget\n private slots:\n     void contextualMenu(const QPoint &);\n     void dateRangeChanged();\n+    void showDetails();\n+    void copyAddress();\n+    void editLabel();\n+    void copyLabel();\n+    void copyAmount();\n \n signals:\n     void doubleClicked(const QModelIndex&);\n@@ -70,10 +75,6 @@ public slots:\n     void changedPrefix(const QString &prefix);\n     void changedAmount(const QString &amount);\n     void exportClicked();\n-    void showDetails();\n-    void copyAddress();\n-    void editLabel();\n-    void copyLabel();\n \n };\n "
      }
    ]
  }
]