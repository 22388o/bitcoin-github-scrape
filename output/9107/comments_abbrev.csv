laanwj,2016-11-21T11:06:31Z,"Concept ACK, thanks for improving documentation around this code.\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-261908235,261908235,
sipa,2016-12-01T01:02:38Z,"utACK 743009682111aef5c4aab84c0cb5189e4afa4f06\nCare to squash?",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264047295,264047295,
morcos,2016-12-01T02:39:20Z,"Squashed\nidentical code to 7430096\nonly nits and minor changes to address test comments from 3572fea",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264062852,264062852,
TheBlueMatt,2016-12-01T02:48:10Z,"While you're at it, can you add a comment to coins.cpp:200 (last else branch in BatchWrite) noting that it is very important that we are only swapping the coins itself, and keeping the flags set on the parent cache.",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264064136,264064136,
TheBlueMatt,2016-12-01T02:53:24Z,"utACK code changes in c9270c96e2ff1676eb87a94ef9b872bea3653804, though I'd prefer more comments. Didnt review tests, but did spend a bunch of time looking at this with @morcos when he was deciding the best route to go for changes.",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264064869,264064869,
morcos,2016-12-01T17:08:50Z,"@TheBlueMatt tell me if this is what you had in mind?  I'm not sure it's worth it, but don't mind squashing the additional comments if you want them.  The whole design of coins would be broken if we were copying all the flags over, but I tried to flag the confusing case.",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264232232,264232232,
TheBlueMatt,2016-12-01T22:19:09Z,"Yea, looks good to me.",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264313285,264313285,
morcos,2016-12-02T00:40:37Z,squashed in additional comments,https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264340329,264340329,
morcos,2016-12-03T14:16:14Z,"dancing the dance of a clean rebase on the grave of main.cpp\n\nwill address @ryanofsky's suggestion separately\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264641852,264641852,
morcos,2016-12-05T19:34:13Z,"@sipa @TheBlueMatt Can you guys take a look one more time at the new logic.  I'll squash to one commit after you ACK.\n\n@fanquake Can you milestone for 0.14.0\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-264952880,264952880,
sipa,2017-01-04T02:36:12Z,"The branch above starts with an assert that coins.IsPruned(), so a Clear()\nin that case would be a no-op (I think?).\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270281722,270281722,
morcos,2017-01-04T02:39:38Z,"oh yes, confused myself..\ni can change it if you think thats clearer, or a potential performance improvement?\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270282121,270282121,
ryanofsky,2017-01-04T02:54:11Z,Test fixes are here: https://github.com/ryanofsky/bitcoin/commits/pr/morcos-saferModifyNewCoins (in the two squash commits) if you see failures after rebasing.,https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270283759,270283759,
sipa,2017-01-04T14:45:15Z,"@morcos No strong opinion, just pointing it out. I don't think it will have a noticable performance impact.",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270386939,270386939,
morcos,2017-01-04T16:45:00Z,"Rebased and squashed\n\nIgnored @sipa's suggestion (sorry)\nIncluded @ryanofsky's updates to the tests and switched the assert to throw std::logic_error so we could non-noisily test that code path.\n\nDiff is here:\nhttps://0bin.net/paste/RH2QCOc8C7lq505F#67QWes6s2d2bttLu6KXZqcKb7YJqEHzmY8pFv9+BV-M\n",https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270419824,270419824,
sipa,2017-01-04T19:12:59Z,utACK b50cd7a67e71051db59199a4185e7c82b669c659,https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270459095,270459095,
sipa,2017-01-04T19:57:50Z,I ran the simulation test 1000x longer than the normal unit tests do.,https://github.com/bitcoin/bitcoin/pull/9107#issuecomment-270470469,270470469,
ryanofsky,2016-11-21T14:47:27Z,"nit: ""ids"" instead of ""txs"" would be more consistent with other names",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r88908233,88908233,src/test/coins_tests.cpp
ryanofsky,2016-11-21T14:50:38Z,Arg could be const reference,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r88908996,88908996,src/test/coins_tests.cpp
ryanofsky,2016-11-21T15:23:18Z,Is this special case actually needed? Seems like origcoins/oldcoins will be empty in this case anyway.,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r88916229,88916229,src/test/coins_tests.cpp
ryanofsky,2016-11-21T15:37:17Z,"Suggestion: Maybe move the `utxoset` updates here and elsewhere next to the `result` updates, since `utxoset` is essentially just a list of the keys present in the `result` map. If somebody is changing one of these, they probably need to update the other too.",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r88919480,88919480,src/test/coins_tests.cpp
morcos,2016-11-29T21:29:40Z,"hmm.. I'll move this above the alltxs insert, but I was trying to keep the order the same for each set of changes.\n\n- update expected result\n- modify cache the same way the production code does\n(these first two things are what we will compare against each other)\n- modify state used to run the test (which includes utxoset)\n",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90118146,90118146,src/test/coins_tests.cpp
morcos,2016-11-29T21:33:36Z,It seems cleaner to me to not be messing with tx.vin of coinbases,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90118896,90118896,src/test/coins_tests.cpp
TheBlueMatt,2016-12-01T02:44:19Z,I hate bip numbers...any chance you can also/or only state what this actually means?,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90374150,90374150,src/coins.cpp
TheBlueMatt,2016-12-01T02:49:24Z,"(I think you did for 30, but not for 34)",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90374583,90374583,src/coins.cpp
ryanofsky,2016-12-02T23:20:40Z,"Just a suggestion, but I think another way you could write this section might be:\n\n```\n    if (!coinbase) {\n        // New coins must not already exist.\n        assert(ret.first->second.coins.IsPruned());\n\n        if (!(ret.first->second.flags & CCoinsCacheEntry::DIRTY)) {\n            // If the coin is known to be pruned (have no unspent outputs) in\n            // the current vie",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90737316,90737316,src/coins.cpp
morcos,2016-12-02T23:48:35Z,"heh.  i'll want to think about that 100 times, but that sounds right to me",https://github.com/bitcoin/bitcoin/pull/9107#discussion_r90739981,90739981,src/coins.cpp
sipa,2017-01-03T22:47:56Z,This line could move into an else branch.,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r94500547,94500547,src/coins.cpp
morcos,2017-01-04T02:32:37Z,Which line?  The `Clear()`?  Isn't that needed for the historical coinbase overwrite cases?,https://github.com/bitcoin/bitcoin/pull/9107#discussion_r94522226,94522226,src/coins.cpp
