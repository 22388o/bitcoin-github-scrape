[
  {
    "sha": "dcd7ef782bd8105c3427f932206e33fa07ddeded",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2Q3ZWY3ODJiZDgxMDVjMzQyN2Y5MzIyMDZlMzNmYTA3ZGRlZGVk",
    "commit": {
      "author": {
        "name": "kazcw",
        "email": "keziahw@gmail.com",
        "date": "2014-07-16T21:31:41Z"
      },
      "committer": {
        "name": "kazcw",
        "email": "keziahw@gmail.com",
        "date": "2014-07-20T07:24:42Z"
      },
      "message": "prevent peer flooding request queue for an inv\n\nmapAlreadyAskedFor does not keep track of which peer has a request queued for a\nparticular tx. As a result, a peer can blind a node to a tx indefinitely by\nsending many invs for the same tx, and then never replying to getdatas for it.\nEach inv received will be placed 2 minutes farther back in mapAlreadyAskedFor,\nso a short message containing 10 invs would render that tx unavailable for 20\nminutes.\n\nThis is fixed by disallowing a peer from having more than one entry for a\nparticular inv in mapAlreadyAskedFor at a time.",
      "tree": {
        "sha": "a3499d43a80b06187061a3fa441902400e0d159f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a3499d43a80b06187061a3fa441902400e0d159f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcd7ef782bd8105c3427f932206e33fa07ddeded",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd7ef782bd8105c3427f932206e33fa07ddeded",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd7ef782bd8105c3427f932206e33fa07ddeded",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd7ef782bd8105c3427f932206e33fa07ddeded/comments",
    "author": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff1fe669d41814a4e0406243d1c081725006a735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff1fe669d41814a4e0406243d1c081725006a735",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff1fe669d41814a4e0406243d1c081725006a735"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "58d55f55d5e0e3c8742bc3780bd92c514d1fb237",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd7ef782bd8105c3427f932206e33fa07ddeded/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd7ef782bd8105c3427f932206e33fa07ddeded/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=dcd7ef782bd8105c3427f932206e33fa07ddeded",
        "patch": "@@ -4583,6 +4583,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n                     vGetData.clear();\n                 }\n             }\n+            pto->setAskFor.erase(inv.hash);\n             pto->mapAskFor.erase(pto->mapAskFor.begin());\n         }\n         if (!vGetData.empty())"
      },
      {
        "sha": "f6d8be187c97100a92a5f1cdc2d02d525c745dc3",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd7ef782bd8105c3427f932206e33fa07ddeded/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd7ef782bd8105c3427f932206e33fa07ddeded/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=dcd7ef782bd8105c3427f932206e33fa07ddeded",
        "patch": "@@ -286,6 +286,7 @@ class CNode\n     mruset<CInv> setInventoryKnown;\n     std::vector<CInv> vInventoryToSend;\n     CCriticalSection cs_inventory;\n+    std::set<uint256> setAskFor;\n     std::multimap<int64_t, CInv> mapAskFor;\n \n     // Ping time measurement:\n@@ -453,6 +454,10 @@ class CNode\n \n     void AskFor(const CInv& inv)\n     {\n+        // a peer may not occupy multiple positions in an inv's request queue\n+        if (!setAskFor.insert(inv.hash).second)\n+            return;\n+\n         // We're using mapAskFor as a priority queue,\n         // the key is the earliest time the request can be sent\n         int64_t nRequestTime;"
      }
    ]
  }
]