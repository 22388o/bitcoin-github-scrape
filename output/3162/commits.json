[
  {
    "sha": "e9755001ab1b63d205f1e130ffe42b213cb052c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTc1NTAwMWFiMWI2M2QyMDVmMWUxMzBmZmU0MmIyMTNjYjA1MmM2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T18:34:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2013-10-26T18:34:48Z"
      },
      "message": "Remove redundant insert method in serialize.\n\nThis seems to cause problems on recent clang, and looks totally\nredundant and unused.\n\nThe const_iterator version is identical to the vector::const_iterator\none (which is a typedef thereof). Marking it private (instead of\nremoving) compiles fine, so this version is effectively unused even.",
      "tree": {
        "sha": "59ed4d0bc5b09e91d53d72328e4b1c170b4ad5f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/59ed4d0bc5b09e91d53d72328e4b1c170b4ad5f3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9755001ab1b63d205f1e130ffe42b213cb052c6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9755001ab1b63d205f1e130ffe42b213cb052c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9755001ab1b63d205f1e130ffe42b213cb052c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9755001ab1b63d205f1e130ffe42b213cb052c6/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2130051778027c1120b90bf2975b933b2d02034",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2130051778027c1120b90bf2975b933b2d02034",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2130051778027c1120b90bf2975b933b2d02034"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 0,
      "deletions": 13
    },
    "files": [
      {
        "sha": "d6e616b1cfe732232f6230825cc6e77450beb6c5",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9755001ab1b63d205f1e130ffe42b213cb052c6/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9755001ab1b63d205f1e130ffe42b213cb052c6/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=e9755001ab1b63d205f1e130ffe42b213cb052c6",
        "patch": "@@ -901,19 +901,6 @@ class CDataStream\n     iterator insert(iterator it, const char& x=char()) { return vch.insert(it, x); }\n     void insert(iterator it, size_type n, const char& x) { vch.insert(it, n, x); }\n \n-    void insert(iterator it, const_iterator first, const_iterator last)\n-    {\n-        assert(last - first >= 0);\n-        if (it == vch.begin() + nReadPos && (unsigned int)(last - first) <= nReadPos)\n-        {\n-            // special case for inserting at the front when there's room\n-            nReadPos -= (last - first);\n-            memcpy(&vch[nReadPos], &first[0], last - first);\n-        }\n-        else\n-            vch.insert(it, first, last);\n-    }\n-\n     void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)\n     {\n         assert(last - first >= 0);"
      }
    ]
  }
]