[
  {
    "sha": "fd311996e877d567a4e34a19b47e94d66e07100a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDMxMTk5NmU4NzdkNTY3YTRlMzRhMTliNDdlOTRkNjZlMDcxMDBh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-03-25T19:00:32Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-04-10T19:33:37Z"
      },
      "message": "consensus: don't use arith_uint256 in consensus.h\n\nRequiring arith_uint256 at such a base level is not good for modularity.",
      "tree": {
        "sha": "f31151a0086d06c8463de3c5b33471c11922930b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f31151a0086d06c8463de3c5b33471c11922930b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd311996e877d567a4e34a19b47e94d66e07100a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd311996e877d567a4e34a19b47e94d66e07100a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd311996e877d567a4e34a19b47e94d66e07100a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd311996e877d567a4e34a19b47e94d66e07100a/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8a13501196fc79a3f728683b74f9d586dda46c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8a13501196fc79a3f728683b74f9d586dda46c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8a13501196fc79a3f728683b74f9d586dda46c1"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 9,
      "deletions": 10
    },
    "files": [
      {
        "sha": "97312b366de194d2d6a3ae6edd0c2a967909605a",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd311996e877d567a4e34a19b47e94d66e07100a/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd311996e877d567a4e34a19b47e94d66e07100a/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fd311996e877d567a4e34a19b47e94d66e07100a",
        "patch": "@@ -105,7 +105,7 @@ class CMainParams : public CChainParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n-        consensus.powLimit = ~arith_uint256(0) >> 32;\n+        consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n         consensus.fPowAllowMinDifficultyBlocks = false;\n@@ -245,7 +245,7 @@ class CRegTestParams : public CTestNetParams {\n         consensus.nMajorityEnforceBlockUpgrade = 750;\n         consensus.nMajorityRejectBlockOutdated = 950;\n         consensus.nMajorityWindow = 1000;\n-        consensus.powLimit = ~arith_uint256(0) >> 1;\n+        consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;"
      },
      {
        "sha": "e5e691cc533faac3b41ddc2158c5ccb0bd7dd6b0",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd311996e877d567a4e34a19b47e94d66e07100a/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd311996e877d567a4e34a19b47e94d66e07100a/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=fd311996e877d567a4e34a19b47e94d66e07100a",
        "patch": "@@ -6,7 +6,6 @@\n #ifndef BITCOIN_CHAINPARAMS_H\n #define BITCOIN_CHAINPARAMS_H\n \n-#include \"arith_uint256.h\"\n #include \"chainparamsbase.h\"\n #include \"checkpoints.h\"\n #include \"consensus/params.h\"\n@@ -45,7 +44,7 @@ class CChainParams\n     const CMessageHeader::MessageStartChars& MessageStart() const { return pchMessageStart; }\n     const std::vector<unsigned char>& AlertKey() const { return vAlertPubKey; }\n     int GetDefaultPort() const { return nDefaultPort; }\n-    const arith_uint256& ProofOfWorkLimit() const { return consensus.powLimit; }\n+    const uint256& ProofOfWorkLimit() const { return consensus.powLimit; }\n     int SubsidyHalvingInterval() const { return consensus.nSubsidyHalvingInterval; }\n     int EnforceBlockUpgradeMajority() const { return consensus.nMajorityEnforceBlockUpgrade; }\n     int RejectBlockOutdatedMajority() const { return consensus.nMajorityRejectBlockOutdated; }"
      },
      {
        "sha": "35d447b71270c13379cd13a01b17bb69234066c4",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd311996e877d567a4e34a19b47e94d66e07100a/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd311996e877d567a4e34a19b47e94d66e07100a/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=fd311996e877d567a4e34a19b47e94d66e07100a",
        "patch": "@@ -6,7 +6,6 @@\n #ifndef BITCOIN_CONSENSUS_CONSENSUS_PARAMS_H\n #define BITCOIN_CONSENSUS_CONSENSUS_PARAMS_H\n \n-#include \"arith_uint256.h\"\n #include \"uint256.h\"\n \n namespace Consensus {\n@@ -21,7 +20,7 @@ struct Params {\n     int nMajorityRejectBlockOutdated;\n     int nMajorityWindow;\n     /** Proof of work parameters */\n-    arith_uint256 powLimit;\n+    uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;\n     int64_t nPowTargetSpacing;\n     int64_t nPowTargetTimespan;"
      },
      {
        "sha": "fc6ed4f3d19dcfdd9168a6647a9932e60b98daca",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd311996e877d567a4e34a19b47e94d66e07100a/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd311996e877d567a4e34a19b47e94d66e07100a/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=fd311996e877d567a4e34a19b47e94d66e07100a",
        "patch": "@@ -13,7 +13,7 @@\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n-    unsigned int nProofOfWorkLimit = params.powLimit.GetCompact();\n+    unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n \n     // Genesis block\n     if (pindexLast == NULL)\n@@ -61,15 +61,16 @@ unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nF\n         nActualTimespan = params.nPowTargetTimespan*4;\n \n     // Retarget\n+    const arith_uint256 bnPowLimit = UintToArith256(params.powLimit);\n     arith_uint256 bnNew;\n     arith_uint256 bnOld;\n     bnNew.SetCompact(pindexLast->nBits);\n     bnOld = bnNew;\n     bnNew *= nActualTimespan;\n     bnNew /= params.nPowTargetTimespan;\n \n-    if (bnNew > params.powLimit)\n-        bnNew = params.powLimit;\n+    if (bnNew > bnPowLimit)\n+        bnNew = bnPowLimit;\n \n     /// debug print\n     LogPrintf(\"GetNextWorkRequired RETARGET\\n\");\n@@ -89,7 +90,7 @@ bool CheckProofOfWork(uint256 hash, unsigned int nBits, const Consensus::Params&\n     bnTarget.SetCompact(nBits, &fNegative, &fOverflow);\n \n     // Check range\n-    if (fNegative || bnTarget == 0 || fOverflow || bnTarget > params.powLimit)\n+    if (fNegative || bnTarget == 0 || fOverflow || bnTarget > UintToArith256(params.powLimit))\n         return error(\"CheckProofOfWork(): nBits below minimum work\");\n \n     // Check proof of work matches claimed amount"
      }
    ]
  }
]