[
  {
    "sha": "fe5d22bc676f158e8d567d71edb3451118759d62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZTVkMjJiYzY3NmYxNThlOGQ1NjdkNzFlZGIzNDUxMTE4NzU5ZDYy",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:18:52Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:11:24Z"
      },
      "message": "More concise conversion of CDataStream to string\n\nUse .str() instead of .data() and .size() when converting CDataStream to\na string. Uses std::string, avoiding conversion to a C string.",
      "tree": {
        "sha": "cd806a8e495cf87e6a1a99e173f903045513785c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd806a8e495cf87e6a1a99e173f903045513785c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fe5d22bc676f158e8d567d71edb3451118759d62",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5d22bc676f158e8d567d71edb3451118759d62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5d22bc676f158e8d567d71edb3451118759d62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5d22bc676f158e8d567d71edb3451118759d62/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51e5ef3971c78f0aceb7e958c07f5e6cde224db0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51e5ef3971c78f0aceb7e958c07f5e6cde224db0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51e5ef3971c78f0aceb7e958c07f5e6cde224db0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4fa34501732b7b03b08a0375f8734f7baaf98037",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe5d22bc676f158e8d567d71edb3451118759d62/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe5d22bc676f158e8d567d71edb3451118759d62/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fe5d22bc676f158e8d567d71edb3451118759d62",
        "patch": "@@ -1554,10 +1554,10 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n             mtx.vin[i].scriptWitness = psbtx.inputs[i].final_script_witness;\n         }\n         ssTx << mtx;\n-        result.pushKV(\"hex\", HexStr(ssTx.begin(), ssTx.end()));\n+        result.pushKV(\"hex\", HexStr(ssTx.str()));\n     } else {\n         ssTx << psbtx;\n-        result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+        result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     }\n     result.pushKV(\"complete\", complete);\n "
      },
      {
        "sha": "5f3fece325861bf583ef8cbd63b1cbdeba351209",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fe5d22bc676f158e8d567d71edb3451118759d62/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fe5d22bc676f158e8d567d71edb3451118759d62/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=fe5d22bc676f158e8d567d71edb3451118759d62",
        "patch": "@@ -3842,7 +3842,7 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n     UniValue result(UniValue::VOBJ);\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n-    result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+    result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     result.pushKV(\"complete\", complete);\n \n     return result;\n@@ -3956,7 +3956,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     ssTx << psbtx;\n \n     UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+    result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     result.pushKV(\"fee\", ValueFromAmount(fee));\n     result.pushKV(\"changepos\", change_position);\n     return result;"
      }
    ]
  },
  {
    "sha": "4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjNmNWNiNGIxNDJmMGZjYjM2MjQxZmEzM2I1MmEyNTc5MDFkYmVl",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:24:55Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:11:24Z"
      },
      "message": "Remove redundant txConst parameter to FillPSBT",
      "tree": {
        "sha": "03090957a963b0b9b923199afeb7cacc88753654",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03090957a963b0b9b923199afeb7cacc88753654"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fe5d22bc676f158e8d567d71edb3451118759d62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fe5d22bc676f158e8d567d71edb3451118759d62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fe5d22bc676f158e8d567d71edb3451118759d62"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 9,
      "deletions": 21
    },
    "files": [
      {
        "sha": "e2ffb42d75145e9797a001c3a180847c6fbae3e0",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 15,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
        "patch": "@@ -3735,13 +3735,13 @@ void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubK\n     hd_keypaths.emplace(vchPubKey, std::move(info));\n }\n \n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const CTransaction* txConst, int sighash_type, bool sign, bool bip32derivs)\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs)\n {\n     LOCK(pwallet->cs_wallet);\n     // Get all of the previous transactions\n     bool complete = true;\n-    for (unsigned int i = 0; i < txConst->vin.size(); ++i) {\n-        const CTxIn& txin = txConst->vin[i];\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n \n         // If we don't know about this input, skip it and let someone else deal with it\n@@ -3764,8 +3764,8 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n-    for (unsigned int i = 0; i < txConst->vout.size(); ++i) {\n-        const CTxOut& out = txConst->vout.at(i);\n+    for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n+        const CTxOut& out = psbtx.tx->vout.at(i);\n         PSBTOutput& psbt_out = psbtx.outputs.at(i);\n \n         // Fill a SignatureData with output info\n@@ -3830,14 +3830,10 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n     // Get the sighash type\n     int nHashType = ParseSighashString(request.params[2]);\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with our data and also sign\n     bool sign = request.params[1].isNull() ? true : request.params[1].get_bool();\n     bool bip32derivs = request.params[3].isNull() ? false : request.params[3].get_bool();\n-    bool complete = FillPSBT(pwallet, psbtx, &txConst, nHashType, sign, bip32derivs);\n+    bool complete = FillPSBT(pwallet, psbtx, nHashType, sign, bip32derivs);\n \n     UniValue result(UniValue::VOBJ);\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n@@ -3943,13 +3939,9 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n         psbtx.outputs.push_back(PSBTOutput());\n     }\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with out data but don't sign\n     bool bip32derivs = request.params[4].isNull() ? false : request.params[4].get_bool();\n-    FillPSBT(pwallet, psbtx, &txConst, 1, false, bip32derivs);\n+    FillPSBT(pwallet, psbtx, 1, false, bip32derivs);\n \n     // Serialize the PSBT\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "54477ef3a6ddb310dd97e38f89f9e7da03a89fd3",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
        "patch": "@@ -30,5 +30,5 @@ bool EnsureWalletIsAvailable(CWallet *, bool avoidException);\n \n UniValue getaddressinfo(const JSONRPCRequest& request);\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request);\n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const CTransaction* txConst, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n #endif //BITCOIN_WALLET_RPCWALLET_H"
      },
      {
        "sha": "b14c4f653a426426897659cc9f37f334a8ab2537",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f3f5cb4b142f0fcb36241fa33b52a257901dbee/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
        "patch": "@@ -59,12 +59,8 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     CDataStream ssData(ParseHex(\"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f000000000000000000\"), SER_NETWORK, PROTOCOL_VERSION);\n     ssData >> psbtx;\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with our data\n-    FillPSBT(&m_wallet, psbtx, &txConst, 1, false, true);\n+    FillPSBT(&m_wallet, psbtx, 1, false, true);\n \n     // Get the final tx\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      }
    ]
  },
  {
    "sha": "65166d4cf828909dc4bc49dd68a58103d015f1fd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTE2NmQ0Y2Y4Mjg5MDlkYzRiYzQ5ZGQ2OGE1ODEwM2QwMTVmMWZk",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:26:16Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:11:24Z"
      },
      "message": "New PartiallySignedTransaction constructor from CTransction\n\nNew constructor that creates a PartiallySignedTransaction from a\nCTransaction, automatically sizing the inputs and outputs vectors for\nconvenience.",
      "tree": {
        "sha": "c72e82590f9a56617085336e41010b74d25586dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c72e82590f9a56617085336e41010b74d25586dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65166d4cf828909dc4bc49dd68a58103d015f1fd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65166d4cf828909dc4bc49dd68a58103d015f1fd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65166d4cf828909dc4bc49dd68a58103d015f1fd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65166d4cf828909dc4bc49dd68a58103d015f1fd/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4f3f5cb4b142f0fcb36241fa33b52a257901dbee"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "bcf1108967ed675619d69b6c172175c6c78d3041",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=65166d4cf828909dc4bc49dd68a58103d015f1fd",
        "patch": "@@ -513,6 +513,12 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     return false;\n }\n \n+PartiallySignedTransaction::PartiallySignedTransaction(const CTransaction& tx) : tx(tx)\n+{\n+    inputs.resize(tx.vin.size());\n+    outputs.resize(tx.vout.size());\n+}\n+\n bool PartiallySignedTransaction::IsNull() const\n {\n     return !tx && inputs.empty() && outputs.empty() && unknown.empty();"
      },
      {
        "sha": "381e2eb1203bb46ce8fa6510585aa9b297213d88",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=65166d4cf828909dc4bc49dd68a58103d015f1fd",
        "patch": "@@ -566,6 +566,7 @@ struct PartiallySignedTransaction\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CTransaction& tx);\n \n     // Only checks if they refer to the same transaction\n     friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)"
      },
      {
        "sha": "b514f09b0eb54133b7e5d441c6b08a6a832ea509",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65166d4cf828909dc4bc49dd68a58103d015f1fd/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=65166d4cf828909dc4bc49dd68a58103d015f1fd",
        "patch": "@@ -3930,14 +3930,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     FundTransaction(pwallet, rawTx, fee, change_position, request.params[3]);\n \n     // Make a blank psbt\n-    PartiallySignedTransaction psbtx;\n-    psbtx.tx = rawTx;\n-    for (unsigned int i = 0; i < rawTx.vin.size(); ++i) {\n-        psbtx.inputs.push_back(PSBTInput());\n-    }\n-    for (unsigned int i = 0; i < rawTx.vout.size(); ++i) {\n-        psbtx.outputs.push_back(PSBTOutput());\n-    }\n+    PartiallySignedTransaction psbtx(rawTx);\n \n     // Fill transaction with out data but don't sign\n     bool bip32derivs = request.params[4].isNull() ? false : request.params[4].get_bool();"
      }
    ]
  },
  {
    "sha": "53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1M2U2ZmZmYjhmNWIxMGY5NDcwOGQzM2Q2NjdhNjdjYjkxYzJkMDlk",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:28:48Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:11:24Z"
      },
      "message": "Add bool PSBTInputSigned\n\nRefactor out a \"PSBTInputSigned\" function to check if a PSBT is signed,\nfor use in subsequent commits.\n\nAlso improve a related comment.",
      "tree": {
        "sha": "3d4d13a3f3110c0defedc347ff7b280cb7216289",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3d4d13a3f3110c0defedc347ff7b280cb7216289"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "65166d4cf828909dc4bc49dd68a58103d015f1fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65166d4cf828909dc4bc49dd68a58103d015f1fd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/65166d4cf828909dc4bc49dd68a58103d015f1fd"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "a6e94d54d4e35780b61076f407373e786033900c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
        "patch": "@@ -1536,12 +1536,15 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Get all of the previous transactions\n+    // Finalize input signatures -- in case we have partial signatures that add up to a complete\n+    //   signature, but have not combined them yet (e.g. because the combiner that created this\n+    //   PartiallySignedTransaction did not understand them), this will combine them into a final\n+    //   script.\n     bool complete = true;\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n         PSBTInput& input = psbtx.inputs.at(i);\n \n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, i, 1);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, i, SIGHASH_ALL);\n     }\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "5cdc0112dc0c43a4d6d8a355b6db7bac08fd72cb",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
        "patch": "@@ -239,10 +239,14 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return sigdata.complete;\n }\n \n+bool PSBTInputSigned(PSBTInput& input)\n+{\n+    return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n+}\n+\n bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash)\n {\n-    // if this input has a final scriptsig or scriptwitness, don't do anything with it\n-    if (!input.final_script_sig.empty() || !input.final_script_witness.IsNull()) {\n+    if (PSBTInputSigned(input)) {\n         return true;\n     }\n "
      },
      {
        "sha": "35f7630f4161113aac377849f1fb01d716729bc6",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/53e6fffb8f5b10f94708d33d667a67cb91c2d09d/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
        "patch": "@@ -730,6 +730,9 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);\n bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n \n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash = SIGHASH_ALL);\n "
      }
    ]
  },
  {
    "sha": "0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZjViZGEyYmQ5NDE2ODY2MjBlZjBlYjkwYmQ3ZWQ5NzNjYzdlZjcz",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:30:50Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:11:24Z"
      },
      "message": "Simplify arguments to SignPSBTInput\n\nRemove redundant arguments to SignPSBTInput -- since it needs several\nbits of the PartiallySignedTransaction, pass in a reference instead of\ndoing it piecemeal. This saves us having to pass in both a PSBTInput and\nits index, as well as having to pass in the CTransaction. Also avoid\nredundantly passing the sighash_type, which is contained in the\nPSBTInput already.",
      "tree": {
        "sha": "2d2d1a663698380947e6c83a335d9e9c1dc4a34e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d2d1a663698380947e6c83a335d9e9c1dc4a34e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/53e6fffb8f5b10f94708d33d667a67cb91c2d09d"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f169f09174d8009af2fea5ef8208a8e649e3175e",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -1542,9 +1542,7 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n     //   script.\n     bool complete = true;\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs.at(i);\n-\n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, i, SIGHASH_ALL);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, i, SIGHASH_ALL);\n     }\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "1e481dd541f7cb5792cc602f6842f6480f18404e",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -244,8 +244,11 @@ bool PSBTInputSigned(PSBTInput& input)\n     return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash)\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash)\n {\n+    PSBTInput& input = psbt.inputs.at(index);\n+    const CMutableTransaction& tx = *psbt.tx;\n+\n     if (PSBTInputSigned(input)) {\n         return true;\n     }"
      },
      {
        "sha": "e71f43f96d85f618164af6a722a533b10be5bfa1",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -734,7 +734,7 @@ bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom,\n bool PSBTInputSigned(PSBTInput& input);\n \n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, int index, int sighash = SIGHASH_ALL);\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, int index, int sighash = SIGHASH_ALL);\n \n /** Extract signature data from a transaction input, and insert it. */\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout);"
      },
      {
        "sha": "908d403cc1e42bf71ef8aca9be7d1b4908b14ad7",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -3760,7 +3760,7 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sig\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Specified Sighash and sighash in PSBT do not match.\");\n         }\n \n-        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), *psbtx.tx, input, i, sighash_type);\n+        complete &= SignPSBTInput(HidingSigningProvider(pwallet, !sign, !bip32derivs), psbtx, i, sighash_type);\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change"
      },
      {
        "sha": "abd7750874632beb6dd179ae0a3ab72c4c682e6a",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -30,5 +30,5 @@ bool EnsureWalletIsAvailable(CWallet *, bool avoidException);\n \n UniValue getaddressinfo(const JSONRPCRequest& request);\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request);\n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false);\n #endif //BITCOIN_WALLET_RPCWALLET_H"
      },
      {
        "sha": "7f195caaf04f9d30b1233957d920504efe363bae",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "patch": "@@ -60,7 +60,7 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     ssData >> psbtx;\n \n     // Fill transaction with our data\n-    FillPSBT(&m_wallet, psbtx, 1, false, true);\n+    FillPSBT(&m_wallet, psbtx, SIGHASH_ALL, false, true);\n \n     // Get the final tx\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      }
    ]
  },
  {
    "sha": "565500508aa5df0011109ebf375ba71b693fc7de",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjU1MDA1MDhhYTVkZjAwMTExMDllYmYzNzViYTcxYjY5M2ZjN2Rl",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:31:41Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:14:21Z"
      },
      "message": "Refactor PSBTInput signing to enforce invariant\n\nRefactor the process of PSBTInput signing to enforce the invariant that\na PSBTInput always has _either_ a witness_utxo or a non_witness_utxo,\nnever both.\n\nThis simplifies the logic of SignPSBTInput slightly, since it no longer\nhas to deal with the \"both\" case. When calling it, we now give it, in\norder of preference: (1) whichever of the utxo fields was already\npresent in the PSBT we received, or (2) if neither, the\nnon_witness_utxo field, which is just a copy of the input transaction,\nwhich we get from the wallet.\n\nSignPSBTInput no longer has to remove one of the two fields; instead, it\nwill check if we have a witness signature, and if so, it will replace\nthe non_witness_utxo with the witness_utxo (which is smaller, as it is\njust a copy of the output being spent.)\n\nAdd PSBTInput::IsSane checks in two more places, which checks for\nboth utxo fields being present; we will now give an RPC error early on\nif we are supplied such a malformed PSBT to fill in.\n\nAlso add a check to FillPSBT, to avoid touching any input that is\nalready signed. (This is now redundant, since we should no longer\npotentially harm an already-signed input, but it's harmless.)\n\nfixes #14473",
      "tree": {
        "sha": "e87abd87ce2a1362e91e99b3cf56b8e0eb066669",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e87abd87ce2a1362e91e99b3cf56b8e0eb066669"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/565500508aa5df0011109ebf375ba71b693fc7de",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/565500508aa5df0011109ebf375ba71b693fc7de",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/565500508aa5df0011109ebf375ba71b693fc7de",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/565500508aa5df0011109ebf375ba71b693fc7de/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f5bda2bd941686620ef0eb90bd7ed973cc7ef73"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 32,
      "deletions": 26
    },
    "files": [
      {
        "sha": "69ee08ffd712f90c2591baaf9e9a57d80eba2d01",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 17,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/565500508aa5df0011109ebf375ba71b693fc7de/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/565500508aa5df0011109ebf375ba71b693fc7de/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=565500508aa5df0011109ebf375ba71b693fc7de",
        "patch": "@@ -260,15 +260,19 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     // Get UTXO\n     bool require_witness_sig = false;\n     CTxOut utxo;\n+\n+    // Verify input sanity, which checks that at most one of witness or non-witness utxos is provided.\n+    if (!input.IsSane()) {\n+        return false;\n+    }\n+\n     if (input.non_witness_utxo) {\n         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;\n-        // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't\n-        // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both\n-        // can be present is when they're added simultaneously by FillPSBT (in which case they always match).\n-        // Still, check in order to not rely on callers to enforce this.\n-        if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;\n-        utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];\n+        COutPoint prevout = tx.vin[index].prevout;\n+        if (input.non_witness_utxo->GetHash() != prevout.hash) {\n+            return false;\n+        }\n+        utxo = input.non_witness_utxo->vout[prevout.n];\n     } else if (!input.witness_utxo.IsNull()) {\n         utxo = input.witness_utxo;\n         // When we're taking our information from a witness UTXO, we can't verify it is actually data from\n@@ -287,18 +291,10 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n \n+    // If we have a witness signature, use the smaller witness UTXO.\n     if (sigdata.witness) {\n-        assert(!utxo.IsNull());\n         input.witness_utxo = utxo;\n-    }\n-\n-    // If both UTXO types are present, drop the unnecessary one.\n-    if (input.non_witness_utxo && !input.witness_utxo.IsNull()) {\n-        if (sigdata.witness) {\n-            input.non_witness_utxo = nullptr;\n-        } else {\n-            input.witness_utxo.SetNull();\n-        }\n+        input.non_witness_utxo = nullptr;\n     }\n \n     return sig_complete;"
      },
      {
        "sha": "c2aa8b1e024ef832e0467413c7ee46dfbc9fbf3b",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/565500508aa5df0011109ebf375ba71b693fc7de/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/565500508aa5df0011109ebf375ba71b693fc7de/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=565500508aa5df0011109ebf375ba71b693fc7de",
        "patch": "@@ -3744,15 +3744,25 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sig\n         const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n \n-        // If we don't know about this input, skip it and let someone else deal with it\n-        const uint256& txhash = txin.prevout.hash;\n-        const auto it = pwallet->mapWallet.find(txhash);\n-        if (it != pwallet->mapWallet.end()) {\n-            const CWalletTx& wtx = it->second;\n-            CTxOut utxo = wtx.tx->vout[txin.prevout.n];\n-            // Update both UTXOs from the wallet.\n-            input.non_witness_utxo = wtx.tx;\n-            input.witness_utxo = utxo;\n+        if (PSBTInputSigned(input)) {\n+            continue;\n+        }\n+\n+        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n+        if (!input.IsSane()) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"PSBT input is not sane.\");\n+        }\n+\n+        // If we have no utxo, grab it from the wallet.\n+        if (!input.non_witness_utxo && input.witness_utxo.IsNull()) {\n+            const uint256& txhash = txin.prevout.hash;\n+            const auto it = pwallet->mapWallet.find(txhash);\n+            if (it != pwallet->mapWallet.end()) {\n+                const CWalletTx& wtx = it->second;\n+                // We only need the non_witness_utxo, which is a superset of the witness_utxo.\n+                //   The signing code will switch to the smaller witness_utxo if this is ok.\n+                input.non_witness_utxo = wtx.tx;\n+            }\n         }\n \n         // Get the Sighash type"
      }
    ]
  },
  {
    "sha": "e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTNmZWE5NzVkNWU0YWU5NjFmYWJhMzYzNzlhMWNkYWY5ZTUwYzFj",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-30T07:41:19Z"
      },
      "committer": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-11-01T19:14:21Z"
      },
      "message": "Add regression test for PSBT signing bug #14473",
      "tree": {
        "sha": "4d1b5f6dc140bc5b29b6158a9f0387e241d53cd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4d1b5f6dc140bc5b29b6158a9f0387e241d53cd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e13fea975d5e4ae961faba36379a1cdaf9e50c1c/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "565500508aa5df0011109ebf375ba71b693fc7de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/565500508aa5df0011109ebf375ba71b693fc7de",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/565500508aa5df0011109ebf375ba71b693fc7de"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "86b043176c50e4b0e518c0e57ed6c7df7c5059c3",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e13fea975d5e4ae961faba36379a1cdaf9e50c1c/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e13fea975d5e4ae961faba36379a1cdaf9e50c1c/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
        "patch": "@@ -207,6 +207,13 @@ def run_test(self):\n             assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n+        # Regression test for 14473 (mishandling of already-signed witness transaction):\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}])\n+        complete_psbt = self.nodes[0].walletprocesspsbt(psbtx_info[\"psbt\"])\n+        double_processed_psbt = self.nodes[0].walletprocesspsbt(complete_psbt[\"psbt\"])\n+        assert_equal(complete_psbt, double_processed_psbt)\n+        # We don't care about the decode result, but decoding must succeed.\n+        self.nodes[0].decodepsbt(double_processed_psbt[\"psbt\"])\n \n         # BIP 174 Test Vectors\n "
      }
    ]
  }
]